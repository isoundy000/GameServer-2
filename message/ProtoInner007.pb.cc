// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoInner007.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto30400036_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400036_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400035_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400035_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400035_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400035_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400034_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400034_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31403002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31403002_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400242_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400242_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400242_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400242_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400243_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400243_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30101607_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30101607_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400054_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400054_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100106_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100106_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400021_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400021_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400245_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400245_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400245_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400245_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31401002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31401002_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31401003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31401003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400247_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400247_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400447_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400447_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400320_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400320_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400206_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400206_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31402601_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31402601_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400024_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400024_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400600_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400600_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400038_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400038_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400038_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400038_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400039_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400039_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400700_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400700_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400908_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400908_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400448_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400448_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400209_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400209_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400203_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400203_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100107_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100107_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402018_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402018_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100108_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100108_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400029_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400029_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100109_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100109_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400039_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400039_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400603_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400603_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400909_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400909_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto32101107_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto32101107_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30101403_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30101403_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30600103_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30600103_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400603_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400603_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31401702_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31401702_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400160_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400160_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400321_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400321_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400322_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400322_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400604_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400604_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400161_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400161_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400450_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400450_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoInner007_2eproto() {
  protobuf_AddDesc_ProtoInner007_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoInner007.proto");
  GOOGLE_CHECK(file != NULL);
  Proto30400036_descriptor_ = file->message_type(0);
  static const int Proto30400036_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400036, rank_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400036, size_),
  };
  Proto30400036_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400036_descriptor_,
      Proto30400036::default_instance_,
      Proto30400036_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400036, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400036, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400036));
  Proto30400035_descriptor_ = file->message_type(1);
  static const int Proto30400035_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400035, act_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400035, act_role_reward_),
  };
  Proto30400035_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400035_descriptor_,
      Proto30400035::default_instance_,
      Proto30400035_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400035, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400035, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400035));
  Proto31400035_descriptor_ = file->message_type(2);
  static const int Proto31400035_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400035, act_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400035, act_info_),
  };
  Proto31400035_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400035_descriptor_,
      Proto31400035::default_instance_,
      Proto31400035_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400035, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400035, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400035));
  Proto31400034_descriptor_ = file->message_type(3);
  static const int Proto31400034_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400034, act_list_),
  };
  Proto31400034_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400034_descriptor_,
      Proto31400034::default_instance_,
      Proto31400034_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400034, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400034, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400034));
  Proto31403002_descriptor_ = file->message_type(4);
  static const int Proto31403002_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403002, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403002, cur_recogn_),
  };
  Proto31403002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31403002_descriptor_,
      Proto31403002::default_instance_,
      Proto31403002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31403002));
  Proto30400242_descriptor_ = file->message_type(5);
  static const int Proto30400242_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400242, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400242, cur_recogn_),
  };
  Proto30400242_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400242_descriptor_,
      Proto30400242::default_instance_,
      Proto30400242_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400242, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400242, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400242));
  Proto31400242_descriptor_ = file->message_type(6);
  static const int Proto31400242_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400242, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400242, cur_recogn_),
  };
  Proto31400242_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400242_descriptor_,
      Proto31400242::default_instance_,
      Proto31400242_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400242, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400242, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400242));
  Proto30400243_descriptor_ = file->message_type(7);
  static const int Proto30400243_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400243, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400243, betrading_),
  };
  Proto30400243_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400243_descriptor_,
      Proto30400243::default_instance_,
      Proto30400243_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400243, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400243, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400243));
  Proto30101607_descriptor_ = file->message_type(8);
  static const int Proto30101607_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101607, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101607, on_line_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101607, recogn_),
  };
  Proto30101607_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30101607_descriptor_,
      Proto30101607::default_instance_,
      Proto30101607_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101607, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101607, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30101607));
  Proto30400054_descriptor_ = file->message_type(9);
  static const int Proto30400054_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400054, mongo_recogn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400054, mongo_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400054, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400054, tick_),
  };
  Proto30400054_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400054_descriptor_,
      Proto30400054::default_instance_,
      Proto30400054_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400054, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400054, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400054));
  Proto30100106_descriptor_ = file->message_type(10);
  static const int Proto30100106_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100106, recogn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100106, role_id_),
  };
  Proto30100106_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100106_descriptor_,
      Proto30100106::default_instance_,
      Proto30100106_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100106, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100106, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100106));
  Proto30400021_descriptor_ = file->message_type(11);
  static const int Proto30400021_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400021, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400021, brother_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400021, brother_level_),
  };
  Proto30400021_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400021_descriptor_,
      Proto30400021::default_instance_,
      Proto30400021_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400021, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400021, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400021));
  Proto31400245_descriptor_ = file->message_type(12);
  static const int Proto31400245_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400245, role_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400245, role_exp_),
  };
  Proto31400245_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400245_descriptor_,
      Proto31400245::default_instance_,
      Proto31400245_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400245, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400245, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400245));
  Proto30400245_descriptor_ = file->message_type(13);
  static const int Proto30400245_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400245, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400245, is_expert_trial_),
  };
  Proto30400245_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400245_descriptor_,
      Proto30400245::default_instance_,
      Proto30400245_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400245, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400245, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400245));
  Proto31401002_descriptor_ = file->message_type(14);
  static const int Proto31401002_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401002, cur_wm_skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401002, cur_wm_skill_level_),
  };
  Proto31401002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31401002_descriptor_,
      Proto31401002::default_instance_,
      Proto31401002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31401002));
  Proto31401003_descriptor_ = file->message_type(15);
  static const int Proto31401003_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401003, mw_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401003, mw_rank_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401003, mw_skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401003, mw_skill_lvl_),
  };
  Proto31401003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31401003_descriptor_,
      Proto31401003::default_instance_,
      Proto31401003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31401003));
  Proto31400247_descriptor_ = file->message_type(16);
  static const int Proto31400247_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400247, mw_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400247, adorn_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400247, open_),
  };
  Proto31400247_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400247_descriptor_,
      Proto31400247::default_instance_,
      Proto31400247_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400247, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400247, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400247));
  Proto30400447_descriptor_ = file->message_type(17);
  static const int Proto30400447_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400447, league_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400447, activity_type_),
  };
  Proto30400447_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400447_descriptor_,
      Proto30400447::default_instance_,
      Proto30400447_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400447, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400447, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400447));
  Proto31400320_descriptor_ = file->message_type(18);
  static const int Proto31400320_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400320, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400320, pack_index_),
  };
  Proto31400320_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400320_descriptor_,
      Proto31400320::default_instance_,
      Proto31400320_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400320, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400320, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400320));
  Proto30400206_descriptor_ = file->message_type(19);
  static const int Proto30400206_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400206, scene1_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400206, scene2_id_),
  };
  Proto30400206_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400206_descriptor_,
      Proto30400206::default_instance_,
      Proto30400206_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400206, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400206, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400206));
  Proto31402601_descriptor_ = file->message_type(20);
  static const int Proto31402601_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402601, prop_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402601, beast_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402601, prop_value_),
  };
  Proto31402601_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31402601_descriptor_,
      Proto31402601::default_instance_,
      Proto31402601_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402601, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402601, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31402601));
  Proto30400024_descriptor_ = file->message_type(21);
  static const int Proto30400024_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400024, id1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400024, id2_),
  };
  Proto30400024_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400024_descriptor_,
      Proto30400024::default_instance_,
      Proto30400024_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400024, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400024, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400024));
  Proto31400600_descriptor_ = file->message_type(22);
  static const int Proto31400600_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400600, lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400600, send_),
  };
  Proto31400600_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400600_descriptor_,
      Proto31400600::default_instance_,
      Proto31400600_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400600, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400600, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400600));
  Proto30400038_descriptor_ = file->message_type(23);
  static const int Proto30400038_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400038, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400038, rank_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400038, act_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400038, role_id_),
  };
  Proto30400038_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400038_descriptor_,
      Proto30400038::default_instance_,
      Proto30400038_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400038, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400038, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400038));
  Proto31400038_descriptor_ = file->message_type(24);
  static const int Proto31400038_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400038, flower_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400038, act_index_),
  };
  Proto31400038_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400038_descriptor_,
      Proto31400038::default_instance_,
      Proto31400038_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400038, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400038, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400038));
  Proto30400039_descriptor_ = file->message_type(25);
  static const int Proto30400039_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400039, send_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400039, recive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400039, refresh_),
  };
  Proto30400039_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400039_descriptor_,
      Proto30400039::default_instance_,
      Proto30400039_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400039, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400039, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400039));
  Proto31400700_descriptor_ = file->message_type(26);
  static const int Proto31400700_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400700, times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400700, one_mount_),
  };
  Proto31400700_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400700_descriptor_,
      Proto31400700::default_instance_,
      Proto31400700_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400700, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400700, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400700));
  Proto31400908_descriptor_ = file->message_type(27);
  static const int Proto31400908_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400908, drop_dragon_scene_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400908, enter_teamers_),
  };
  Proto31400908_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400908_descriptor_,
      Proto31400908::default_instance_,
      Proto31400908_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400908, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400908, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400908));
  Proto30400448_descriptor_ = file->message_type(28);
  static const int Proto30400448_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400448, fb_flag_),
  };
  Proto30400448_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400448_descriptor_,
      Proto30400448::default_instance_,
      Proto30400448_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400448, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400448, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400448));
  Proto30400209_descriptor_ = file->message_type(29);
  static const int Proto30400209_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400209, strength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400209, left_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400209, vip_buys_),
  };
  Proto30400209_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400209_descriptor_,
      Proto30400209::default_instance_,
      Proto30400209_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400209, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400209, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400209));
  Proto30400203_descriptor_ = file->message_type(30);
  static const int Proto30400203_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400203, value_),
  };
  Proto30400203_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400203_descriptor_,
      Proto30400203::default_instance_,
      Proto30400203_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400203, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400203, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400203));
  Proto30100107_descriptor_ = file->message_type(31);
  static const int Proto30100107_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100107, cost_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100107, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100107, times_),
  };
  Proto30100107_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100107_descriptor_,
      Proto30100107::default_instance_,
      Proto30100107_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100107, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100107, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100107));
  Proto30402018_descriptor_ = file->message_type(32);
  static const int Proto30402018_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402018, server_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402018, scene_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402018, line_list_),
  };
  Proto30402018_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402018_descriptor_,
      Proto30402018::default_instance_,
      Proto30402018_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402018, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402018, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402018));
  Proto30100108_descriptor_ = file->message_type(33);
  static const int Proto30100108_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100108, is_success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100108, script_sort_),
  };
  Proto30100108_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100108_descriptor_,
      Proto30100108::default_instance_,
      Proto30100108_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100108, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100108, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100108));
  Proto31400029_descriptor_ = file->message_type(34);
  static const int Proto31400029_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400029, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400029, serial_),
  };
  Proto31400029_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400029_descriptor_,
      Proto31400029::default_instance_,
      Proto31400029_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400029, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400029, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400029));
  Proto30100109_descriptor_ = file->message_type(35);
  static const int Proto30100109_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100109, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100109, value_),
  };
  Proto30100109_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100109_descriptor_,
      Proto30100109::default_instance_,
      Proto30100109_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100109, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100109, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100109));
  Proto31400039_descriptor_ = file->message_type(36);
  static const int Proto31400039_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400039, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400039, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400039, type1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400039, type2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400039, cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400039, result_),
  };
  Proto31400039_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400039_descriptor_,
      Proto31400039::default_instance_,
      Proto31400039_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400039, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400039, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400039));
  Proto31400603_descriptor_ = file->message_type(37);
  static const int Proto31400603_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400603, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400603, lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400603, select_icon_),
  };
  Proto31400603_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400603_descriptor_,
      Proto31400603::default_instance_,
      Proto31400603_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400603, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400603, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400603));
  Proto31400909_descriptor_ = file->message_type(38);
  static const int Proto31400909_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400909, script_sort_),
  };
  Proto31400909_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400909_descriptor_,
      Proto31400909::default_instance_,
      Proto31400909_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400909, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400909, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400909));
  Proto32101107_descriptor_ = file->message_type(39);
  static const int Proto32101107_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101107, sid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101107, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101107, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101107, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101107, role_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101107, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101107, order_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101107, income_channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101107, income_currency_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101107, income_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101107, income_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101107, own_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101107, income_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101107, time_),
  };
  Proto32101107_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto32101107_descriptor_,
      Proto32101107::default_instance_,
      Proto32101107_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101107, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101107, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto32101107));
  Proto30101403_descriptor_ = file->message_type(40);
  static const int Proto30101403_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101403, hidden_item_),
  };
  Proto30101403_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30101403_descriptor_,
      Proto30101403::default_instance_,
      Proto30101403_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101403, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101403, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30101403));
  Proto30600103_descriptor_ = file->message_type(41);
  static const int Proto30600103_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30600103, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30600103, line_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30600103, cfg_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30600103, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30600103, port_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30600103, connect_sid_),
  };
  Proto30600103_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30600103_descriptor_,
      Proto30600103::default_instance_,
      Proto30600103_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30600103, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30600103, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30600103));
  Proto30400603_descriptor_ = file->message_type(42);
  static const int Proto30400603_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400603, illus_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400603, illus_group_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400603, cur_illus_class_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400603, illus_level_list_),
  };
  Proto30400603_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400603_descriptor_,
      Proto30400603::default_instance_,
      Proto30400603_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400603, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400603, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400603));
  Proto31401702_descriptor_ = file->message_type(43);
  static const int Proto31401702_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401702, illus_class_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401702, illus_group_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401702, illus_level_),
  };
  Proto31401702_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31401702_descriptor_,
      Proto31401702::default_instance_,
      Proto31401702_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401702, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401702, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31401702));
  Proto31400160_descriptor_ = file->message_type(44);
  static const int Proto31400160_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400160, cur_class_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400160, illus_group_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400160, illus_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400160, illus_level_list_),
  };
  Proto31400160_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400160_descriptor_,
      Proto31400160::default_instance_,
      Proto31400160_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400160, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400160, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400160));
  Proto31400321_descriptor_ = file->message_type(45);
  static const int Proto31400321_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400321, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400321, feed_num_),
  };
  Proto31400321_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400321_descriptor_,
      Proto31400321::default_instance_,
      Proto31400321_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400321, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400321, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400321));
  Proto31400322_descriptor_ = file->message_type(46);
  static const int Proto31400322_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400322, summon_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400322, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400322, boss_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400322, league_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400322, flag_lv_),
  };
  Proto31400322_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400322_descriptor_,
      Proto31400322::default_instance_,
      Proto31400322_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400322, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400322, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400322));
  Proto30400604_descriptor_ = file->message_type(47);
  static const int Proto30400604_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400604, chest_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400604, chest_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400604, award_id_),
  };
  Proto30400604_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400604_descriptor_,
      Proto30400604::default_instance_,
      Proto30400604_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400604, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400604, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400604));
  Proto31400161_descriptor_ = file->message_type(48);
  static const int Proto31400161_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400161, cycle_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400161, collect_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400161, chest_scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400161, player_award_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400161, online_sum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400161, login_time_),
  };
  Proto31400161_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400161_descriptor_,
      Proto31400161::default_instance_,
      Proto31400161_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400161, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400161, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400161));
  Proto30400450_descriptor_ = file->message_type(49);
  static const int Proto30400450_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400450, league_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400450, flag_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400450, leader_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400450, force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400450, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400450, leader_index_),
  };
  Proto30400450_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400450_descriptor_,
      Proto30400450::default_instance_,
      Proto30400450_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400450, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400450, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400450));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoInner007_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400036_descriptor_, &Proto30400036::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400035_descriptor_, &Proto30400035::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400035_descriptor_, &Proto31400035::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400034_descriptor_, &Proto31400034::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31403002_descriptor_, &Proto31403002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400242_descriptor_, &Proto30400242::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400242_descriptor_, &Proto31400242::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400243_descriptor_, &Proto30400243::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30101607_descriptor_, &Proto30101607::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400054_descriptor_, &Proto30400054::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100106_descriptor_, &Proto30100106::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400021_descriptor_, &Proto30400021::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400245_descriptor_, &Proto31400245::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400245_descriptor_, &Proto30400245::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31401002_descriptor_, &Proto31401002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31401003_descriptor_, &Proto31401003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400247_descriptor_, &Proto31400247::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400447_descriptor_, &Proto30400447::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400320_descriptor_, &Proto31400320::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400206_descriptor_, &Proto30400206::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31402601_descriptor_, &Proto31402601::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400024_descriptor_, &Proto30400024::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400600_descriptor_, &Proto31400600::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400038_descriptor_, &Proto30400038::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400038_descriptor_, &Proto31400038::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400039_descriptor_, &Proto30400039::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400700_descriptor_, &Proto31400700::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400908_descriptor_, &Proto31400908::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400448_descriptor_, &Proto30400448::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400209_descriptor_, &Proto30400209::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400203_descriptor_, &Proto30400203::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100107_descriptor_, &Proto30100107::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402018_descriptor_, &Proto30402018::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100108_descriptor_, &Proto30100108::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400029_descriptor_, &Proto31400029::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100109_descriptor_, &Proto30100109::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400039_descriptor_, &Proto31400039::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400603_descriptor_, &Proto31400603::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400909_descriptor_, &Proto31400909::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto32101107_descriptor_, &Proto32101107::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30101403_descriptor_, &Proto30101403::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30600103_descriptor_, &Proto30600103::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400603_descriptor_, &Proto30400603::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31401702_descriptor_, &Proto31401702::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400160_descriptor_, &Proto31400160::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400321_descriptor_, &Proto31400321::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400322_descriptor_, &Proto31400322::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400604_descriptor_, &Proto30400604::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400161_descriptor_, &Proto31400161::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400450_descriptor_, &Proto30400450::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoInner007_2eproto() {
  delete Proto30400036::default_instance_;
  delete Proto30400036_reflection_;
  delete Proto30400035::default_instance_;
  delete Proto30400035_reflection_;
  delete Proto31400035::default_instance_;
  delete Proto31400035_reflection_;
  delete Proto31400034::default_instance_;
  delete Proto31400034_reflection_;
  delete Proto31403002::default_instance_;
  delete Proto31403002_reflection_;
  delete Proto30400242::default_instance_;
  delete Proto30400242_reflection_;
  delete Proto31400242::default_instance_;
  delete Proto31400242_reflection_;
  delete Proto30400243::default_instance_;
  delete Proto30400243_reflection_;
  delete Proto30101607::default_instance_;
  delete Proto30101607_reflection_;
  delete Proto30400054::default_instance_;
  delete Proto30400054_reflection_;
  delete Proto30100106::default_instance_;
  delete Proto30100106_reflection_;
  delete Proto30400021::default_instance_;
  delete Proto30400021_reflection_;
  delete Proto31400245::default_instance_;
  delete Proto31400245_reflection_;
  delete Proto30400245::default_instance_;
  delete Proto30400245_reflection_;
  delete Proto31401002::default_instance_;
  delete Proto31401002_reflection_;
  delete Proto31401003::default_instance_;
  delete Proto31401003_reflection_;
  delete Proto31400247::default_instance_;
  delete Proto31400247_reflection_;
  delete Proto30400447::default_instance_;
  delete Proto30400447_reflection_;
  delete Proto31400320::default_instance_;
  delete Proto31400320_reflection_;
  delete Proto30400206::default_instance_;
  delete Proto30400206_reflection_;
  delete Proto31402601::default_instance_;
  delete Proto31402601_reflection_;
  delete Proto30400024::default_instance_;
  delete Proto30400024_reflection_;
  delete Proto31400600::default_instance_;
  delete Proto31400600_reflection_;
  delete Proto30400038::default_instance_;
  delete Proto30400038_reflection_;
  delete Proto31400038::default_instance_;
  delete Proto31400038_reflection_;
  delete Proto30400039::default_instance_;
  delete Proto30400039_reflection_;
  delete Proto31400700::default_instance_;
  delete Proto31400700_reflection_;
  delete Proto31400908::default_instance_;
  delete Proto31400908_reflection_;
  delete Proto30400448::default_instance_;
  delete Proto30400448_reflection_;
  delete Proto30400209::default_instance_;
  delete Proto30400209_reflection_;
  delete Proto30400203::default_instance_;
  delete Proto30400203_reflection_;
  delete Proto30100107::default_instance_;
  delete Proto30100107_reflection_;
  delete Proto30402018::default_instance_;
  delete Proto30402018_reflection_;
  delete Proto30100108::default_instance_;
  delete Proto30100108_reflection_;
  delete Proto31400029::default_instance_;
  delete Proto31400029_reflection_;
  delete Proto30100109::default_instance_;
  delete Proto30100109_reflection_;
  delete Proto31400039::default_instance_;
  delete Proto31400039_reflection_;
  delete Proto31400603::default_instance_;
  delete Proto31400603_reflection_;
  delete Proto31400909::default_instance_;
  delete Proto31400909_reflection_;
  delete Proto32101107::default_instance_;
  delete Proto32101107_reflection_;
  delete Proto30101403::default_instance_;
  delete Proto30101403_reflection_;
  delete Proto30600103::default_instance_;
  delete Proto30600103_reflection_;
  delete Proto30400603::default_instance_;
  delete Proto30400603_reflection_;
  delete Proto31401702::default_instance_;
  delete Proto31401702_reflection_;
  delete Proto31400160::default_instance_;
  delete Proto31400160_reflection_;
  delete Proto31400321::default_instance_;
  delete Proto31400321_reflection_;
  delete Proto31400322::default_instance_;
  delete Proto31400322_reflection_;
  delete Proto30400604::default_instance_;
  delete Proto30400604_reflection_;
  delete Proto31400161::default_instance_;
  delete Proto31400161_reflection_;
  delete Proto30400450::default_instance_;
  delete Proto30400450_reflection_;
}

void protobuf_AddDesc_ProtoInner007_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::protobuf_AddDesc_ProtoInnerPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023ProtoInner007.proto\032\021ProtoPublic.proto"
    "\032\026ProtoInnerPublic.proto\"0\n\rProto3040003"
    "6\022\021\n\trank_type\030\001 \001(\005\022\014\n\004size\030\002 \001(\005\"P\n\rPr"
    "oto30400035\022\021\n\tact_index\030\001 \001(\005\022,\n\017act_ro"
    "le_reward\030\002 \003(\0132\023.ProtoActRoleReward\"C\n\r"
    "Proto31400035\022\021\n\tact_index\030\001 \001(\005\022\037\n\010act_"
    "info\030\002 \001(\0132\r.PActTypeItem\"0\n\rProto314000"
    "34\022\037\n\010act_list\030\001 \003(\0132\r.PActTypeItem\"4\n\rP"
    "roto31403002\022\017\n\007role_id\030\001 \001(\003\022\022\n\ncur_rec"
    "ogn\030\002 \001(\005\"4\n\rProto30400242\022\017\n\007role_id\030\001 "
    "\001(\003\022\022\n\ncur_recogn\030\002 \001(\005\"4\n\rProto31400242"
    "\022\017\n\007role_id\030\001 \001(\003\022\022\n\ncur_recogn\030\002 \001(\005\"3\n"
    "\rProto30400243\022\017\n\007role_id\030\001 \001(\003\022\021\n\tbetra"
    "ding\030\002 \001(\005\"A\n\rProto30101607\022\017\n\007role_id\030\001"
    " \001(\003\022\017\n\007on_line\030\002 \001(\010\022\016\n\006recogn\030\003 \001(\005\"i\n"
    "\rProto30400054\022\024\n\014mongo_recogn\030\001 \001(\005\022#\n\n"
    "mongo_data\030\002 \003(\0132\017.ProtoMongoData\022\017\n\007rol"
    "e_id\030\003 \001(\003\022\014\n\004tick\030\004 \001(\003\"0\n\rProto3010010"
    "6\022\016\n\006recogn\030\001 \001(\005\022\017\n\007role_id\030\002 \001(\003\"K\n\rPr"
    "oto30400021\022\017\n\007role_id\030\001 \003(\003\022\022\n\nbrother_"
    "id\030\002 \001(\003\022\025\n\rbrother_level\030\003 \001(\005\"3\n\rProto"
    "31400245\022\020\n\010role_lvl\030\001 \001(\005\022\020\n\010role_exp\030\002"
    " \001(\003\"9\n\rProto30400245\022\017\n\007role_id\030\001 \001(\003\022\027"
    "\n\017is_expert_trial\030\002 \001(\005\"D\n\rProto31401002"
    "\022\027\n\017cur_wm_skill_id\030\001 \001(\005\022\032\n\022cur_wm_skil"
    "l_level\030\002 \001(\005\"^\n\rProto31401003\022\r\n\005mw_id\030"
    "\001 \001(\005\022\023\n\013mw_rank_lvl\030\002 \001(\005\022\023\n\013mw_skill_i"
    "d\030\003 \001(\005\022\024\n\014mw_skill_lvl\030\004 \001(\005\"S\n\rProto31"
    "400247\022\"\n\007mw_list\030\001 \003(\0132\021.ProtoMagicWeap"
    "on\022\020\n\010adorn_id\030\002 \001(\005\022\014\n\004open\030\003 \001(\005\"9\n\rPr"
    "oto30400447\022\021\n\tleague_id\030\001 \001(\003\022\025\n\ractivi"
    "ty_type\030\002 \001(\005\"=\n\rProto31400320\022\030\n\004item\030\001"
    " \001(\0132\n.ProtoItem\022\022\n\npack_index\030\002 \001(\005\"5\n\r"
    "Proto30400206\022\021\n\tscene1_id\030\001 \001(\005\022\021\n\tscen"
    "e2_id\030\002 \001(\005\"F\n\rProto31402601\022\017\n\007prop_id\030"
    "\001 \003(\005\022\020\n\010beast_id\030\002 \001(\003\022\022\n\nprop_value\030\003 "
    "\003(\001\")\n\rProto30400024\022\013\n\003id1\030\001 \001(\005\022\013\n\003id2"
    "\030\002 \001(\005\"*\n\rProto31400600\022\013\n\003lvl\030\001 \001(\005\022\014\n\004"
    "send\030\002 \001(\010\"T\n\rProto30400038\022\014\n\004type\030\001 \001("
    "\005\022\021\n\trank_size\030\002 \001(\005\022\021\n\tact_index\030\003 \001(\005\022"
    "\017\n\007role_id\030\004 \001(\005\"H\n\rProto31400038\022$\n\013flo"
    "wer_rank\030\001 \003(\0132\017.ProtoActFlower\022\021\n\tact_i"
    "ndex\030\002 \001(\005\"`\n\rProto30400039\022\035\n\004send\030\001 \001("
    "\0132\017.ProtoActFlower\022\037\n\006recive\030\002 \001(\0132\017.Pro"
    "toActFlower\022\017\n\007refresh\030\003 \001(\010\"1\n\rProto314"
    "00700\022\r\n\005times\030\001 \001(\005\022\021\n\tone_mount\030\002 \001(\005\""
    "A\n\rProto31400908\022\031\n\021drop_dragon_scene\030\001 "
    "\001(\005\022\025\n\renter_teamers\030\002 \001(\005\" \n\rProto30400"
    "448\022\017\n\007fb_flag\030\001 \001(\005\"G\n\rProto30400209\022\020\n"
    "\010strength\030\001 \001(\005\022\022\n\nleft_times\030\002 \001(\005\022\020\n\010v"
    "ip_buys\030\003 \001(\005\"\036\n\rProto30400203\022\r\n\005value\030"
    "\001 \001(\005\"@\n\rProto30100107\022\022\n\ncost_value\030\001 \001"
    "(\005\022\014\n\004type\030\002 \001(\005\022\r\n\005times\030\003 \001(\005\"K\n\rProto"
    "30402018\022\023\n\013server_flag\030\001 \001(\t\022\022\n\nscene_l"
    "ist\030\002 \003(\005\022\021\n\tline_list\030\003 \003(\005\"8\n\rProto301"
    "00108\022\022\n\nis_success\030\001 \001(\005\022\023\n\013script_sort"
    "\030\002 \001(\005\"O\n\rProto31400029\022\035\n\titem_list\030\001 \003"
    "(\0132\n.ProtoItem\022\037\n\006serial\030\002 \001(\0132\017.ProtoSe"
    "rialObj\",\n\rProto30100109\022\014\n\004type\030\001 \001(\005\022\r"
    "\n\005value\030\002 \001(\005\"t\n\rProto31400039\022\030\n\004item\030\001"
    " \003(\0132\n.ProtoItem\022\r\n\005index\030\002 \003(\005\022\r\n\005type1"
    "\030\003 \001(\005\022\r\n\005type2\030\004 \001(\005\022\014\n\004cost\030\005 \001(\005\022\016\n\006r"
    "esult\030\006 \001(\005\"=\n\rProto31400603\022\n\n\002id\030\001 \001(\005"
    "\022\013\n\003lvl\030\002 \001(\005\022\023\n\013select_icon\030\003 \001(\005\"$\n\rPr"
    "oto31400909\022\023\n\013script_sort\030\001 \001(\005\"\223\002\n\rPro"
    "to32101107\022\013\n\003sid\030\001 \001(\005\022\013\n\003uid\030\002 \001(\t\022\020\n\010"
    "username\030\003 \001(\t\022\017\n\007role_id\030\004 \001(\003\022\021\n\trole_"
    "name\030\005 \001(\t\022\r\n\005level\030\006 \001(\005\022\020\n\010order_id\030\007 "
    "\001(\t\022\026\n\016income_channel\030\010 \001(\t\022\027\n\017income_cu"
    "rrency\030\t \001(\t\022\024\n\014income_money\030\n \001(\t\022\023\n\013in"
    "come_gold\030\013 \001(\005\022\020\n\010own_gold\030\014 \001(\005\022\025\n\rinc"
    "ome_status\030\r \001(\005\022\014\n\004time\030\016 \001(\003\"$\n\rProto3"
    "0101403\022\023\n\013hidden_item\030\001 \003(\005\"y\n\rProto306"
    "00103\022\020\n\010scene_id\030\001 \001(\005\022\017\n\007line_id\030\002 \001(\005"
    "\022\021\n\tcfg_index\030\003 \001(\005\022\017\n\007address\030\004 \001(\t\022\014\n\004"
    "port\030\005 \001(\005\022\023\n\013connect_sid\030\006 \001(\005\"s\n\rProto"
    "30400603\022\022\n\nillus_list\030\001 \003(\005\022\030\n\020illus_gr"
    "oup_list\030\002 \003(\005\022\032\n\022cur_illus_class_id\030\003 \001"
    "(\005\022\030\n\020illus_level_list\030\004 \003(\005\"T\n\rProto314"
    "01702\022\026\n\016illus_class_id\030\001 \001(\005\022\026\n\016illus_g"
    "roup_id\030\002 \001(\005\022\023\n\013illus_level\030\003 \001(\005\"m\n\rPr"
    "oto31400160\022\024\n\014cur_class_id\030\001 \001(\005\022\030\n\020ill"
    "us_group_list\030\002 \003(\005\022\022\n\nillus_list\030\003 \003(\005\022"
    "\030\n\020illus_level_list\030\004 \003(\005\"2\n\rProto314003"
    "21\022\017\n\007item_id\030\001 \001(\005\022\020\n\010feed_num\030\002 \001(\005\"p\n"
    "\rProto31400322\022\023\n\013summon_type\030\001 \001(\005\022\017\n\007r"
    "ole_id\030\002 \001(\005\022\022\n\nboss_index\030\003 \001(\005\022\024\n\014leag"
    "ue_index\030\004 \001(\003\022\017\n\007flag_lv\030\005 \001(\005\"V\n\rProto"
    "30400604\022\021\n\tchest_num\030\001 \001(\005\022 \n\013chest_coo"
    "rd\030\002 \001(\0132\013.ProtoCoord\022\020\n\010award_id\030\003 \001(\005\""
    "\221\001\n\rProto31400161\022\020\n\010cycle_id\030\001 \001(\005\022\023\n\013c"
    "ollect_num\030\002 \001(\005\022\026\n\016chest_scene_id\030\003 \001(\005"
    "\022\031\n\021player_award_list\030\004 \003(\005\022\022\n\nonline_su"
    "m\030\005 \001(\003\022\022\n\nlogin_time\030\006 \001(\003\"z\n\rProto3040"
    "0450\022\024\n\014league_index\030\001 \001(\003\022\020\n\010flag_lvl\030\002"
    " \001(\005\022\016\n\006leader\030\003 \001(\t\022\r\n\005force\030\004 \001(\005\022\014\n\004n"
    "ame\030\005 \001(\t\022\024\n\014leader_index\030\006 \001(\003", 3871);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoInner007.proto", &protobuf_RegisterTypes);
  Proto30400036::default_instance_ = new Proto30400036();
  Proto30400035::default_instance_ = new Proto30400035();
  Proto31400035::default_instance_ = new Proto31400035();
  Proto31400034::default_instance_ = new Proto31400034();
  Proto31403002::default_instance_ = new Proto31403002();
  Proto30400242::default_instance_ = new Proto30400242();
  Proto31400242::default_instance_ = new Proto31400242();
  Proto30400243::default_instance_ = new Proto30400243();
  Proto30101607::default_instance_ = new Proto30101607();
  Proto30400054::default_instance_ = new Proto30400054();
  Proto30100106::default_instance_ = new Proto30100106();
  Proto30400021::default_instance_ = new Proto30400021();
  Proto31400245::default_instance_ = new Proto31400245();
  Proto30400245::default_instance_ = new Proto30400245();
  Proto31401002::default_instance_ = new Proto31401002();
  Proto31401003::default_instance_ = new Proto31401003();
  Proto31400247::default_instance_ = new Proto31400247();
  Proto30400447::default_instance_ = new Proto30400447();
  Proto31400320::default_instance_ = new Proto31400320();
  Proto30400206::default_instance_ = new Proto30400206();
  Proto31402601::default_instance_ = new Proto31402601();
  Proto30400024::default_instance_ = new Proto30400024();
  Proto31400600::default_instance_ = new Proto31400600();
  Proto30400038::default_instance_ = new Proto30400038();
  Proto31400038::default_instance_ = new Proto31400038();
  Proto30400039::default_instance_ = new Proto30400039();
  Proto31400700::default_instance_ = new Proto31400700();
  Proto31400908::default_instance_ = new Proto31400908();
  Proto30400448::default_instance_ = new Proto30400448();
  Proto30400209::default_instance_ = new Proto30400209();
  Proto30400203::default_instance_ = new Proto30400203();
  Proto30100107::default_instance_ = new Proto30100107();
  Proto30402018::default_instance_ = new Proto30402018();
  Proto30100108::default_instance_ = new Proto30100108();
  Proto31400029::default_instance_ = new Proto31400029();
  Proto30100109::default_instance_ = new Proto30100109();
  Proto31400039::default_instance_ = new Proto31400039();
  Proto31400603::default_instance_ = new Proto31400603();
  Proto31400909::default_instance_ = new Proto31400909();
  Proto32101107::default_instance_ = new Proto32101107();
  Proto30101403::default_instance_ = new Proto30101403();
  Proto30600103::default_instance_ = new Proto30600103();
  Proto30400603::default_instance_ = new Proto30400603();
  Proto31401702::default_instance_ = new Proto31401702();
  Proto31400160::default_instance_ = new Proto31400160();
  Proto31400321::default_instance_ = new Proto31400321();
  Proto31400322::default_instance_ = new Proto31400322();
  Proto30400604::default_instance_ = new Proto30400604();
  Proto31400161::default_instance_ = new Proto31400161();
  Proto30400450::default_instance_ = new Proto30400450();
  Proto30400036::default_instance_->InitAsDefaultInstance();
  Proto30400035::default_instance_->InitAsDefaultInstance();
  Proto31400035::default_instance_->InitAsDefaultInstance();
  Proto31400034::default_instance_->InitAsDefaultInstance();
  Proto31403002::default_instance_->InitAsDefaultInstance();
  Proto30400242::default_instance_->InitAsDefaultInstance();
  Proto31400242::default_instance_->InitAsDefaultInstance();
  Proto30400243::default_instance_->InitAsDefaultInstance();
  Proto30101607::default_instance_->InitAsDefaultInstance();
  Proto30400054::default_instance_->InitAsDefaultInstance();
  Proto30100106::default_instance_->InitAsDefaultInstance();
  Proto30400021::default_instance_->InitAsDefaultInstance();
  Proto31400245::default_instance_->InitAsDefaultInstance();
  Proto30400245::default_instance_->InitAsDefaultInstance();
  Proto31401002::default_instance_->InitAsDefaultInstance();
  Proto31401003::default_instance_->InitAsDefaultInstance();
  Proto31400247::default_instance_->InitAsDefaultInstance();
  Proto30400447::default_instance_->InitAsDefaultInstance();
  Proto31400320::default_instance_->InitAsDefaultInstance();
  Proto30400206::default_instance_->InitAsDefaultInstance();
  Proto31402601::default_instance_->InitAsDefaultInstance();
  Proto30400024::default_instance_->InitAsDefaultInstance();
  Proto31400600::default_instance_->InitAsDefaultInstance();
  Proto30400038::default_instance_->InitAsDefaultInstance();
  Proto31400038::default_instance_->InitAsDefaultInstance();
  Proto30400039::default_instance_->InitAsDefaultInstance();
  Proto31400700::default_instance_->InitAsDefaultInstance();
  Proto31400908::default_instance_->InitAsDefaultInstance();
  Proto30400448::default_instance_->InitAsDefaultInstance();
  Proto30400209::default_instance_->InitAsDefaultInstance();
  Proto30400203::default_instance_->InitAsDefaultInstance();
  Proto30100107::default_instance_->InitAsDefaultInstance();
  Proto30402018::default_instance_->InitAsDefaultInstance();
  Proto30100108::default_instance_->InitAsDefaultInstance();
  Proto31400029::default_instance_->InitAsDefaultInstance();
  Proto30100109::default_instance_->InitAsDefaultInstance();
  Proto31400039::default_instance_->InitAsDefaultInstance();
  Proto31400603::default_instance_->InitAsDefaultInstance();
  Proto31400909::default_instance_->InitAsDefaultInstance();
  Proto32101107::default_instance_->InitAsDefaultInstance();
  Proto30101403::default_instance_->InitAsDefaultInstance();
  Proto30600103::default_instance_->InitAsDefaultInstance();
  Proto30400603::default_instance_->InitAsDefaultInstance();
  Proto31401702::default_instance_->InitAsDefaultInstance();
  Proto31400160::default_instance_->InitAsDefaultInstance();
  Proto31400321::default_instance_->InitAsDefaultInstance();
  Proto31400322::default_instance_->InitAsDefaultInstance();
  Proto30400604::default_instance_->InitAsDefaultInstance();
  Proto31400161::default_instance_->InitAsDefaultInstance();
  Proto30400450::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoInner007_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoInner007_2eproto {
  StaticDescriptorInitializer_ProtoInner007_2eproto() {
    protobuf_AddDesc_ProtoInner007_2eproto();
  }
} static_descriptor_initializer_ProtoInner007_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto30400036::kRankTypeFieldNumber;
const int Proto30400036::kSizeFieldNumber;
#endif  // !_MSC_VER

Proto30400036::Proto30400036()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400036::InitAsDefaultInstance() {
}

Proto30400036::Proto30400036(const Proto30400036& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400036::SharedCtor() {
  _cached_size_ = 0;
  rank_type_ = 0;
  size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400036::~Proto30400036() {
  SharedDtor();
}

void Proto30400036::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400036::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400036::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400036_descriptor_;
}

const Proto30400036& Proto30400036::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30400036* Proto30400036::default_instance_ = NULL;

Proto30400036* Proto30400036::New() const {
  return new Proto30400036;
}

void Proto30400036::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rank_type_ = 0;
    size_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400036::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rank_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_type_)));
          set_has_rank_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_size;
        break;
      }
      
      // optional int32 size = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
          set_has_size();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400036::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 rank_type = 1;
  if (has_rank_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank_type(), output);
  }
  
  // optional int32 size = 2;
  if (has_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->size(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400036::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 rank_type = 1;
  if (has_rank_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank_type(), target);
  }
  
  // optional int32 size = 2;
  if (has_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->size(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400036::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 rank_type = 1;
    if (has_rank_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_type());
    }
    
    // optional int32 size = 2;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->size());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400036::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400036* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400036*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400036::MergeFrom(const Proto30400036& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rank_type()) {
      set_rank_type(from.rank_type());
    }
    if (from.has_size()) {
      set_size(from.size());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400036::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400036::CopyFrom(const Proto30400036& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400036::IsInitialized() const {
  
  return true;
}

void Proto30400036::Swap(Proto30400036* other) {
  if (other != this) {
    std::swap(rank_type_, other->rank_type_);
    std::swap(size_, other->size_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400036::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400036_descriptor_;
  metadata.reflection = Proto30400036_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400035::kActIndexFieldNumber;
const int Proto30400035::kActRoleRewardFieldNumber;
#endif  // !_MSC_VER

Proto30400035::Proto30400035()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400035::InitAsDefaultInstance() {
}

Proto30400035::Proto30400035(const Proto30400035& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400035::SharedCtor() {
  _cached_size_ = 0;
  act_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400035::~Proto30400035() {
  SharedDtor();
}

void Proto30400035::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400035::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400035::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400035_descriptor_;
}

const Proto30400035& Proto30400035::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30400035* Proto30400035::default_instance_ = NULL;

Proto30400035* Proto30400035::New() const {
  return new Proto30400035;
}

void Proto30400035::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    act_index_ = 0;
  }
  act_role_reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400035::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 act_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_index_)));
          set_has_act_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_act_role_reward;
        break;
      }
      
      // repeated .ProtoActRoleReward act_role_reward = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_role_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_act_role_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_act_role_reward;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400035::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 act_index = 1;
  if (has_act_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->act_index(), output);
  }
  
  // repeated .ProtoActRoleReward act_role_reward = 2;
  for (int i = 0; i < this->act_role_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->act_role_reward(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400035::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 act_index = 1;
  if (has_act_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->act_index(), target);
  }
  
  // repeated .ProtoActRoleReward act_role_reward = 2;
  for (int i = 0; i < this->act_role_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->act_role_reward(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400035::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 act_index = 1;
    if (has_act_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_index());
    }
    
  }
  // repeated .ProtoActRoleReward act_role_reward = 2;
  total_size += 1 * this->act_role_reward_size();
  for (int i = 0; i < this->act_role_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->act_role_reward(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400035::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400035* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400035*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400035::MergeFrom(const Proto30400035& from) {
  GOOGLE_CHECK_NE(&from, this);
  act_role_reward_.MergeFrom(from.act_role_reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_act_index()) {
      set_act_index(from.act_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400035::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400035::CopyFrom(const Proto30400035& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400035::IsInitialized() const {
  
  return true;
}

void Proto30400035::Swap(Proto30400035* other) {
  if (other != this) {
    std::swap(act_index_, other->act_index_);
    act_role_reward_.Swap(&other->act_role_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400035::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400035_descriptor_;
  metadata.reflection = Proto30400035_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400035::kActIndexFieldNumber;
const int Proto31400035::kActInfoFieldNumber;
#endif  // !_MSC_VER

Proto31400035::Proto31400035()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400035::InitAsDefaultInstance() {
  act_info_ = const_cast< ::PActTypeItem*>(&::PActTypeItem::default_instance());
}

Proto31400035::Proto31400035(const Proto31400035& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400035::SharedCtor() {
  _cached_size_ = 0;
  act_index_ = 0;
  act_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400035::~Proto31400035() {
  SharedDtor();
}

void Proto31400035::SharedDtor() {
  if (this != default_instance_) {
    delete act_info_;
  }
}

void Proto31400035::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400035::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400035_descriptor_;
}

const Proto31400035& Proto31400035::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31400035* Proto31400035::default_instance_ = NULL;

Proto31400035* Proto31400035::New() const {
  return new Proto31400035;
}

void Proto31400035::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    act_index_ = 0;
    if (has_act_info()) {
      if (act_info_ != NULL) act_info_->::PActTypeItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400035::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 act_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_index_)));
          set_has_act_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_act_info;
        break;
      }
      
      // optional .PActTypeItem act_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_act_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400035::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 act_index = 1;
  if (has_act_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->act_index(), output);
  }
  
  // optional .PActTypeItem act_info = 2;
  if (has_act_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->act_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400035::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 act_index = 1;
  if (has_act_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->act_index(), target);
  }
  
  // optional .PActTypeItem act_info = 2;
  if (has_act_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->act_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400035::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 act_index = 1;
    if (has_act_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_index());
    }
    
    // optional .PActTypeItem act_info = 2;
    if (has_act_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->act_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400035::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400035* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400035*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400035::MergeFrom(const Proto31400035& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_act_index()) {
      set_act_index(from.act_index());
    }
    if (from.has_act_info()) {
      mutable_act_info()->::PActTypeItem::MergeFrom(from.act_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400035::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400035::CopyFrom(const Proto31400035& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400035::IsInitialized() const {
  
  return true;
}

void Proto31400035::Swap(Proto31400035* other) {
  if (other != this) {
    std::swap(act_index_, other->act_index_);
    std::swap(act_info_, other->act_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400035::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400035_descriptor_;
  metadata.reflection = Proto31400035_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400034::kActListFieldNumber;
#endif  // !_MSC_VER

Proto31400034::Proto31400034()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400034::InitAsDefaultInstance() {
}

Proto31400034::Proto31400034(const Proto31400034& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400034::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400034::~Proto31400034() {
  SharedDtor();
}

void Proto31400034::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400034::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400034::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400034_descriptor_;
}

const Proto31400034& Proto31400034::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31400034* Proto31400034::default_instance_ = NULL;

Proto31400034* Proto31400034::New() const {
  return new Proto31400034;
}

void Proto31400034::Clear() {
  act_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400034::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PActTypeItem act_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_act_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_act_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400034::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PActTypeItem act_list = 1;
  for (int i = 0; i < this->act_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->act_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400034::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PActTypeItem act_list = 1;
  for (int i = 0; i < this->act_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->act_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400034::ByteSize() const {
  int total_size = 0;
  
  // repeated .PActTypeItem act_list = 1;
  total_size += 1 * this->act_list_size();
  for (int i = 0; i < this->act_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->act_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400034::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400034* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400034*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400034::MergeFrom(const Proto31400034& from) {
  GOOGLE_CHECK_NE(&from, this);
  act_list_.MergeFrom(from.act_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400034::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400034::CopyFrom(const Proto31400034& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400034::IsInitialized() const {
  
  return true;
}

void Proto31400034::Swap(Proto31400034* other) {
  if (other != this) {
    act_list_.Swap(&other->act_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400034::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400034_descriptor_;
  metadata.reflection = Proto31400034_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31403002::kRoleIdFieldNumber;
const int Proto31403002::kCurRecognFieldNumber;
#endif  // !_MSC_VER

Proto31403002::Proto31403002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31403002::InitAsDefaultInstance() {
}

Proto31403002::Proto31403002(const Proto31403002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31403002::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  cur_recogn_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31403002::~Proto31403002() {
  SharedDtor();
}

void Proto31403002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31403002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31403002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31403002_descriptor_;
}

const Proto31403002& Proto31403002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31403002* Proto31403002::default_instance_ = NULL;

Proto31403002* Proto31403002::New() const {
  return new Proto31403002;
}

void Proto31403002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    cur_recogn_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31403002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cur_recogn;
        break;
      }
      
      // optional int32 cur_recogn = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_recogn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_recogn_)));
          set_has_cur_recogn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31403002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 cur_recogn = 2;
  if (has_cur_recogn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cur_recogn(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31403002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 cur_recogn = 2;
  if (has_cur_recogn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cur_recogn(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31403002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 cur_recogn = 2;
    if (has_cur_recogn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_recogn());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31403002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31403002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31403002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31403002::MergeFrom(const Proto31403002& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_cur_recogn()) {
      set_cur_recogn(from.cur_recogn());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31403002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31403002::CopyFrom(const Proto31403002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31403002::IsInitialized() const {
  
  return true;
}

void Proto31403002::Swap(Proto31403002* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(cur_recogn_, other->cur_recogn_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31403002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31403002_descriptor_;
  metadata.reflection = Proto31403002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400242::kRoleIdFieldNumber;
const int Proto30400242::kCurRecognFieldNumber;
#endif  // !_MSC_VER

Proto30400242::Proto30400242()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400242::InitAsDefaultInstance() {
}

Proto30400242::Proto30400242(const Proto30400242& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400242::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  cur_recogn_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400242::~Proto30400242() {
  SharedDtor();
}

void Proto30400242::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400242::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400242::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400242_descriptor_;
}

const Proto30400242& Proto30400242::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30400242* Proto30400242::default_instance_ = NULL;

Proto30400242* Proto30400242::New() const {
  return new Proto30400242;
}

void Proto30400242::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    cur_recogn_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400242::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cur_recogn;
        break;
      }
      
      // optional int32 cur_recogn = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_recogn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_recogn_)));
          set_has_cur_recogn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400242::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 cur_recogn = 2;
  if (has_cur_recogn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cur_recogn(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400242::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 cur_recogn = 2;
  if (has_cur_recogn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cur_recogn(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400242::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 cur_recogn = 2;
    if (has_cur_recogn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_recogn());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400242::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400242* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400242*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400242::MergeFrom(const Proto30400242& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_cur_recogn()) {
      set_cur_recogn(from.cur_recogn());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400242::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400242::CopyFrom(const Proto30400242& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400242::IsInitialized() const {
  
  return true;
}

void Proto30400242::Swap(Proto30400242* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(cur_recogn_, other->cur_recogn_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400242::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400242_descriptor_;
  metadata.reflection = Proto30400242_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400242::kRoleIdFieldNumber;
const int Proto31400242::kCurRecognFieldNumber;
#endif  // !_MSC_VER

Proto31400242::Proto31400242()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400242::InitAsDefaultInstance() {
}

Proto31400242::Proto31400242(const Proto31400242& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400242::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  cur_recogn_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400242::~Proto31400242() {
  SharedDtor();
}

void Proto31400242::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400242::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400242::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400242_descriptor_;
}

const Proto31400242& Proto31400242::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31400242* Proto31400242::default_instance_ = NULL;

Proto31400242* Proto31400242::New() const {
  return new Proto31400242;
}

void Proto31400242::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    cur_recogn_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400242::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cur_recogn;
        break;
      }
      
      // optional int32 cur_recogn = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_recogn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_recogn_)));
          set_has_cur_recogn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400242::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 cur_recogn = 2;
  if (has_cur_recogn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cur_recogn(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400242::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 cur_recogn = 2;
  if (has_cur_recogn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cur_recogn(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400242::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 cur_recogn = 2;
    if (has_cur_recogn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_recogn());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400242::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400242* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400242*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400242::MergeFrom(const Proto31400242& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_cur_recogn()) {
      set_cur_recogn(from.cur_recogn());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400242::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400242::CopyFrom(const Proto31400242& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400242::IsInitialized() const {
  
  return true;
}

void Proto31400242::Swap(Proto31400242* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(cur_recogn_, other->cur_recogn_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400242::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400242_descriptor_;
  metadata.reflection = Proto31400242_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400243::kRoleIdFieldNumber;
const int Proto30400243::kBetradingFieldNumber;
#endif  // !_MSC_VER

Proto30400243::Proto30400243()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400243::InitAsDefaultInstance() {
}

Proto30400243::Proto30400243(const Proto30400243& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400243::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  betrading_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400243::~Proto30400243() {
  SharedDtor();
}

void Proto30400243::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400243::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400243::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400243_descriptor_;
}

const Proto30400243& Proto30400243::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30400243* Proto30400243::default_instance_ = NULL;

Proto30400243* Proto30400243::New() const {
  return new Proto30400243;
}

void Proto30400243::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    betrading_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400243::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_betrading;
        break;
      }
      
      // optional int32 betrading = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_betrading:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &betrading_)));
          set_has_betrading();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400243::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 betrading = 2;
  if (has_betrading()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->betrading(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400243::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 betrading = 2;
  if (has_betrading()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->betrading(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400243::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 betrading = 2;
    if (has_betrading()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->betrading());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400243::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400243* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400243*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400243::MergeFrom(const Proto30400243& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_betrading()) {
      set_betrading(from.betrading());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400243::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400243::CopyFrom(const Proto30400243& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400243::IsInitialized() const {
  
  return true;
}

void Proto30400243::Swap(Proto30400243* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(betrading_, other->betrading_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400243::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400243_descriptor_;
  metadata.reflection = Proto30400243_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30101607::kRoleIdFieldNumber;
const int Proto30101607::kOnLineFieldNumber;
const int Proto30101607::kRecognFieldNumber;
#endif  // !_MSC_VER

Proto30101607::Proto30101607()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30101607::InitAsDefaultInstance() {
}

Proto30101607::Proto30101607(const Proto30101607& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30101607::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  on_line_ = false;
  recogn_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30101607::~Proto30101607() {
  SharedDtor();
}

void Proto30101607::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30101607::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30101607::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30101607_descriptor_;
}

const Proto30101607& Proto30101607::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30101607* Proto30101607::default_instance_ = NULL;

Proto30101607* Proto30101607::New() const {
  return new Proto30101607;
}

void Proto30101607::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    on_line_ = false;
    recogn_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30101607::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_on_line;
        break;
      }
      
      // optional bool on_line = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_on_line:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &on_line_)));
          set_has_on_line();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_recogn;
        break;
      }
      
      // optional int32 recogn = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recogn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recogn_)));
          set_has_recogn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30101607::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional bool on_line = 2;
  if (has_on_line()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->on_line(), output);
  }
  
  // optional int32 recogn = 3;
  if (has_recogn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->recogn(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30101607::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional bool on_line = 2;
  if (has_on_line()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->on_line(), target);
  }
  
  // optional int32 recogn = 3;
  if (has_recogn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->recogn(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30101607::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional bool on_line = 2;
    if (has_on_line()) {
      total_size += 1 + 1;
    }
    
    // optional int32 recogn = 3;
    if (has_recogn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recogn());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30101607::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30101607* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30101607*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30101607::MergeFrom(const Proto30101607& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_on_line()) {
      set_on_line(from.on_line());
    }
    if (from.has_recogn()) {
      set_recogn(from.recogn());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30101607::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30101607::CopyFrom(const Proto30101607& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30101607::IsInitialized() const {
  
  return true;
}

void Proto30101607::Swap(Proto30101607* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(on_line_, other->on_line_);
    std::swap(recogn_, other->recogn_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30101607::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30101607_descriptor_;
  metadata.reflection = Proto30101607_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400054::kMongoRecognFieldNumber;
const int Proto30400054::kMongoDataFieldNumber;
const int Proto30400054::kRoleIdFieldNumber;
const int Proto30400054::kTickFieldNumber;
#endif  // !_MSC_VER

Proto30400054::Proto30400054()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400054::InitAsDefaultInstance() {
}

Proto30400054::Proto30400054(const Proto30400054& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400054::SharedCtor() {
  _cached_size_ = 0;
  mongo_recogn_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  tick_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400054::~Proto30400054() {
  SharedDtor();
}

void Proto30400054::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400054::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400054::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400054_descriptor_;
}

const Proto30400054& Proto30400054::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30400054* Proto30400054::default_instance_ = NULL;

Proto30400054* Proto30400054::New() const {
  return new Proto30400054;
}

void Proto30400054::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mongo_recogn_ = 0;
    role_id_ = GOOGLE_LONGLONG(0);
    tick_ = GOOGLE_LONGLONG(0);
  }
  mongo_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400054::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mongo_recogn = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mongo_recogn_)));
          set_has_mongo_recogn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mongo_data;
        break;
      }
      
      // repeated .ProtoMongoData mongo_data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mongo_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mongo_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_mongo_data;
        if (input->ExpectTag(24)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_tick;
        break;
      }
      
      // optional int64 tick = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tick_)));
          set_has_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400054::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 mongo_recogn = 1;
  if (has_mongo_recogn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mongo_recogn(), output);
  }
  
  // repeated .ProtoMongoData mongo_data = 2;
  for (int i = 0; i < this->mongo_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mongo_data(i), output);
  }
  
  // optional int64 role_id = 3;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->role_id(), output);
  }
  
  // optional int64 tick = 4;
  if (has_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400054::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 mongo_recogn = 1;
  if (has_mongo_recogn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mongo_recogn(), target);
  }
  
  // repeated .ProtoMongoData mongo_data = 2;
  for (int i = 0; i < this->mongo_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->mongo_data(i), target);
  }
  
  // optional int64 role_id = 3;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->role_id(), target);
  }
  
  // optional int64 tick = 4;
  if (has_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400054::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 mongo_recogn = 1;
    if (has_mongo_recogn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mongo_recogn());
    }
    
    // optional int64 role_id = 3;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int64 tick = 4;
    if (has_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->tick());
    }
    
  }
  // repeated .ProtoMongoData mongo_data = 2;
  total_size += 1 * this->mongo_data_size();
  for (int i = 0; i < this->mongo_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mongo_data(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400054::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400054* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400054*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400054::MergeFrom(const Proto30400054& from) {
  GOOGLE_CHECK_NE(&from, this);
  mongo_data_.MergeFrom(from.mongo_data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mongo_recogn()) {
      set_mongo_recogn(from.mongo_recogn());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_tick()) {
      set_tick(from.tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400054::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400054::CopyFrom(const Proto30400054& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400054::IsInitialized() const {
  
  return true;
}

void Proto30400054::Swap(Proto30400054* other) {
  if (other != this) {
    std::swap(mongo_recogn_, other->mongo_recogn_);
    mongo_data_.Swap(&other->mongo_data_);
    std::swap(role_id_, other->role_id_);
    std::swap(tick_, other->tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400054::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400054_descriptor_;
  metadata.reflection = Proto30400054_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100106::kRecognFieldNumber;
const int Proto30100106::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto30100106::Proto30100106()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100106::InitAsDefaultInstance() {
}

Proto30100106::Proto30100106(const Proto30100106& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100106::SharedCtor() {
  _cached_size_ = 0;
  recogn_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100106::~Proto30100106() {
  SharedDtor();
}

void Proto30100106::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100106::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100106::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100106_descriptor_;
}

const Proto30100106& Proto30100106::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30100106* Proto30100106::default_instance_ = NULL;

Proto30100106* Proto30100106::New() const {
  return new Proto30100106;
}

void Proto30100106::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    recogn_ = 0;
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100106::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 recogn = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recogn_)));
          set_has_recogn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100106::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 recogn = 1;
  if (has_recogn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->recogn(), output);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100106::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 recogn = 1;
  if (has_recogn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->recogn(), target);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100106::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 recogn = 1;
    if (has_recogn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recogn());
    }
    
    // optional int64 role_id = 2;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100106::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100106* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100106*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100106::MergeFrom(const Proto30100106& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recogn()) {
      set_recogn(from.recogn());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100106::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100106::CopyFrom(const Proto30100106& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100106::IsInitialized() const {
  
  return true;
}

void Proto30100106::Swap(Proto30100106* other) {
  if (other != this) {
    std::swap(recogn_, other->recogn_);
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100106::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100106_descriptor_;
  metadata.reflection = Proto30100106_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400021::kRoleIdFieldNumber;
const int Proto30400021::kBrotherIdFieldNumber;
const int Proto30400021::kBrotherLevelFieldNumber;
#endif  // !_MSC_VER

Proto30400021::Proto30400021()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400021::InitAsDefaultInstance() {
}

Proto30400021::Proto30400021(const Proto30400021& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400021::SharedCtor() {
  _cached_size_ = 0;
  brother_id_ = GOOGLE_LONGLONG(0);
  brother_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400021::~Proto30400021() {
  SharedDtor();
}

void Proto30400021::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400021::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400021::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400021_descriptor_;
}

const Proto30400021& Proto30400021::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30400021* Proto30400021::default_instance_ = NULL;

Proto30400021* Proto30400021::New() const {
  return new Proto30400021;
}

void Proto30400021::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    brother_id_ = GOOGLE_LONGLONG(0);
    brother_level_ = 0;
  }
  role_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400021::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_role_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_role_id;
        if (input->ExpectTag(16)) goto parse_brother_id;
        break;
      }
      
      // optional int64 brother_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_brother_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &brother_id_)));
          set_has_brother_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_brother_level;
        break;
      }
      
      // optional int32 brother_level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_brother_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &brother_level_)));
          set_has_brother_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400021::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 role_id = 1;
  for (int i = 0; i < this->role_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->role_id(i), output);
  }
  
  // optional int64 brother_id = 2;
  if (has_brother_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->brother_id(), output);
  }
  
  // optional int32 brother_level = 3;
  if (has_brother_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->brother_level(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400021::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 role_id = 1;
  for (int i = 0; i < this->role_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->role_id(i), target);
  }
  
  // optional int64 brother_id = 2;
  if (has_brother_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->brother_id(), target);
  }
  
  // optional int32 brother_level = 3;
  if (has_brother_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->brother_level(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400021::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int64 brother_id = 2;
    if (has_brother_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->brother_id());
    }
    
    // optional int32 brother_level = 3;
    if (has_brother_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->brother_level());
    }
    
  }
  // repeated int64 role_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_id(i));
    }
    total_size += 1 * this->role_id_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400021::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400021* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400021*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400021::MergeFrom(const Proto30400021& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_id_.MergeFrom(from.role_id_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_brother_id()) {
      set_brother_id(from.brother_id());
    }
    if (from.has_brother_level()) {
      set_brother_level(from.brother_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400021::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400021::CopyFrom(const Proto30400021& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400021::IsInitialized() const {
  
  return true;
}

void Proto30400021::Swap(Proto30400021* other) {
  if (other != this) {
    role_id_.Swap(&other->role_id_);
    std::swap(brother_id_, other->brother_id_);
    std::swap(brother_level_, other->brother_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400021::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400021_descriptor_;
  metadata.reflection = Proto30400021_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400245::kRoleLvlFieldNumber;
const int Proto31400245::kRoleExpFieldNumber;
#endif  // !_MSC_VER

Proto31400245::Proto31400245()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400245::InitAsDefaultInstance() {
}

Proto31400245::Proto31400245(const Proto31400245& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400245::SharedCtor() {
  _cached_size_ = 0;
  role_lvl_ = 0;
  role_exp_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400245::~Proto31400245() {
  SharedDtor();
}

void Proto31400245::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400245::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400245::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400245_descriptor_;
}

const Proto31400245& Proto31400245::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31400245* Proto31400245::default_instance_ = NULL;

Proto31400245* Proto31400245::New() const {
  return new Proto31400245;
}

void Proto31400245::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_lvl_ = 0;
    role_exp_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400245::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 role_lvl = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_lvl_)));
          set_has_role_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_exp;
        break;
      }
      
      // optional int64 role_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_exp_)));
          set_has_role_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400245::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 role_lvl = 1;
  if (has_role_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->role_lvl(), output);
  }
  
  // optional int64 role_exp = 2;
  if (has_role_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->role_exp(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400245::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 role_lvl = 1;
  if (has_role_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->role_lvl(), target);
  }
  
  // optional int64 role_exp = 2;
  if (has_role_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->role_exp(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400245::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 role_lvl = 1;
    if (has_role_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->role_lvl());
    }
    
    // optional int64 role_exp = 2;
    if (has_role_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_exp());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400245::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400245* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400245*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400245::MergeFrom(const Proto31400245& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_lvl()) {
      set_role_lvl(from.role_lvl());
    }
    if (from.has_role_exp()) {
      set_role_exp(from.role_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400245::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400245::CopyFrom(const Proto31400245& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400245::IsInitialized() const {
  
  return true;
}

void Proto31400245::Swap(Proto31400245* other) {
  if (other != this) {
    std::swap(role_lvl_, other->role_lvl_);
    std::swap(role_exp_, other->role_exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400245::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400245_descriptor_;
  metadata.reflection = Proto31400245_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400245::kRoleIdFieldNumber;
const int Proto30400245::kIsExpertTrialFieldNumber;
#endif  // !_MSC_VER

Proto30400245::Proto30400245()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400245::InitAsDefaultInstance() {
}

Proto30400245::Proto30400245(const Proto30400245& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400245::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  is_expert_trial_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400245::~Proto30400245() {
  SharedDtor();
}

void Proto30400245::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400245::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400245::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400245_descriptor_;
}

const Proto30400245& Proto30400245::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30400245* Proto30400245::default_instance_ = NULL;

Proto30400245* Proto30400245::New() const {
  return new Proto30400245;
}

void Proto30400245::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    is_expert_trial_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400245::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_expert_trial;
        break;
      }
      
      // optional int32 is_expert_trial = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_expert_trial:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_expert_trial_)));
          set_has_is_expert_trial();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400245::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 is_expert_trial = 2;
  if (has_is_expert_trial()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_expert_trial(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400245::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 is_expert_trial = 2;
  if (has_is_expert_trial()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_expert_trial(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400245::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 is_expert_trial = 2;
    if (has_is_expert_trial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_expert_trial());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400245::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400245* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400245*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400245::MergeFrom(const Proto30400245& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_is_expert_trial()) {
      set_is_expert_trial(from.is_expert_trial());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400245::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400245::CopyFrom(const Proto30400245& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400245::IsInitialized() const {
  
  return true;
}

void Proto30400245::Swap(Proto30400245* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(is_expert_trial_, other->is_expert_trial_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400245::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400245_descriptor_;
  metadata.reflection = Proto30400245_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31401002::kCurWmSkillIdFieldNumber;
const int Proto31401002::kCurWmSkillLevelFieldNumber;
#endif  // !_MSC_VER

Proto31401002::Proto31401002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31401002::InitAsDefaultInstance() {
}

Proto31401002::Proto31401002(const Proto31401002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31401002::SharedCtor() {
  _cached_size_ = 0;
  cur_wm_skill_id_ = 0;
  cur_wm_skill_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31401002::~Proto31401002() {
  SharedDtor();
}

void Proto31401002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31401002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31401002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31401002_descriptor_;
}

const Proto31401002& Proto31401002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31401002* Proto31401002::default_instance_ = NULL;

Proto31401002* Proto31401002::New() const {
  return new Proto31401002;
}

void Proto31401002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_wm_skill_id_ = 0;
    cur_wm_skill_level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31401002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_wm_skill_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_wm_skill_id_)));
          set_has_cur_wm_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cur_wm_skill_level;
        break;
      }
      
      // optional int32 cur_wm_skill_level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_wm_skill_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_wm_skill_level_)));
          set_has_cur_wm_skill_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31401002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_wm_skill_id = 1;
  if (has_cur_wm_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_wm_skill_id(), output);
  }
  
  // optional int32 cur_wm_skill_level = 2;
  if (has_cur_wm_skill_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cur_wm_skill_level(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31401002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_wm_skill_id = 1;
  if (has_cur_wm_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_wm_skill_id(), target);
  }
  
  // optional int32 cur_wm_skill_level = 2;
  if (has_cur_wm_skill_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cur_wm_skill_level(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31401002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_wm_skill_id = 1;
    if (has_cur_wm_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_wm_skill_id());
    }
    
    // optional int32 cur_wm_skill_level = 2;
    if (has_cur_wm_skill_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_wm_skill_level());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31401002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31401002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31401002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31401002::MergeFrom(const Proto31401002& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_wm_skill_id()) {
      set_cur_wm_skill_id(from.cur_wm_skill_id());
    }
    if (from.has_cur_wm_skill_level()) {
      set_cur_wm_skill_level(from.cur_wm_skill_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31401002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31401002::CopyFrom(const Proto31401002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31401002::IsInitialized() const {
  
  return true;
}

void Proto31401002::Swap(Proto31401002* other) {
  if (other != this) {
    std::swap(cur_wm_skill_id_, other->cur_wm_skill_id_);
    std::swap(cur_wm_skill_level_, other->cur_wm_skill_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31401002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31401002_descriptor_;
  metadata.reflection = Proto31401002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31401003::kMwIdFieldNumber;
const int Proto31401003::kMwRankLvlFieldNumber;
const int Proto31401003::kMwSkillIdFieldNumber;
const int Proto31401003::kMwSkillLvlFieldNumber;
#endif  // !_MSC_VER

Proto31401003::Proto31401003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31401003::InitAsDefaultInstance() {
}

Proto31401003::Proto31401003(const Proto31401003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31401003::SharedCtor() {
  _cached_size_ = 0;
  mw_id_ = 0;
  mw_rank_lvl_ = 0;
  mw_skill_id_ = 0;
  mw_skill_lvl_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31401003::~Proto31401003() {
  SharedDtor();
}

void Proto31401003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31401003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31401003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31401003_descriptor_;
}

const Proto31401003& Proto31401003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31401003* Proto31401003::default_instance_ = NULL;

Proto31401003* Proto31401003::New() const {
  return new Proto31401003;
}

void Proto31401003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mw_id_ = 0;
    mw_rank_lvl_ = 0;
    mw_skill_id_ = 0;
    mw_skill_lvl_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31401003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mw_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mw_id_)));
          set_has_mw_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_mw_rank_lvl;
        break;
      }
      
      // optional int32 mw_rank_lvl = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mw_rank_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mw_rank_lvl_)));
          set_has_mw_rank_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_mw_skill_id;
        break;
      }
      
      // optional int32 mw_skill_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mw_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mw_skill_id_)));
          set_has_mw_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_mw_skill_lvl;
        break;
      }
      
      // optional int32 mw_skill_lvl = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mw_skill_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mw_skill_lvl_)));
          set_has_mw_skill_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31401003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 mw_id = 1;
  if (has_mw_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mw_id(), output);
  }
  
  // optional int32 mw_rank_lvl = 2;
  if (has_mw_rank_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mw_rank_lvl(), output);
  }
  
  // optional int32 mw_skill_id = 3;
  if (has_mw_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mw_skill_id(), output);
  }
  
  // optional int32 mw_skill_lvl = 4;
  if (has_mw_skill_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mw_skill_lvl(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31401003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 mw_id = 1;
  if (has_mw_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mw_id(), target);
  }
  
  // optional int32 mw_rank_lvl = 2;
  if (has_mw_rank_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mw_rank_lvl(), target);
  }
  
  // optional int32 mw_skill_id = 3;
  if (has_mw_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mw_skill_id(), target);
  }
  
  // optional int32 mw_skill_lvl = 4;
  if (has_mw_skill_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mw_skill_lvl(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31401003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 mw_id = 1;
    if (has_mw_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mw_id());
    }
    
    // optional int32 mw_rank_lvl = 2;
    if (has_mw_rank_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mw_rank_lvl());
    }
    
    // optional int32 mw_skill_id = 3;
    if (has_mw_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mw_skill_id());
    }
    
    // optional int32 mw_skill_lvl = 4;
    if (has_mw_skill_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mw_skill_lvl());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31401003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31401003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31401003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31401003::MergeFrom(const Proto31401003& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mw_id()) {
      set_mw_id(from.mw_id());
    }
    if (from.has_mw_rank_lvl()) {
      set_mw_rank_lvl(from.mw_rank_lvl());
    }
    if (from.has_mw_skill_id()) {
      set_mw_skill_id(from.mw_skill_id());
    }
    if (from.has_mw_skill_lvl()) {
      set_mw_skill_lvl(from.mw_skill_lvl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31401003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31401003::CopyFrom(const Proto31401003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31401003::IsInitialized() const {
  
  return true;
}

void Proto31401003::Swap(Proto31401003* other) {
  if (other != this) {
    std::swap(mw_id_, other->mw_id_);
    std::swap(mw_rank_lvl_, other->mw_rank_lvl_);
    std::swap(mw_skill_id_, other->mw_skill_id_);
    std::swap(mw_skill_lvl_, other->mw_skill_lvl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31401003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31401003_descriptor_;
  metadata.reflection = Proto31401003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400247::kMwListFieldNumber;
const int Proto31400247::kAdornIdFieldNumber;
const int Proto31400247::kOpenFieldNumber;
#endif  // !_MSC_VER

Proto31400247::Proto31400247()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400247::InitAsDefaultInstance() {
}

Proto31400247::Proto31400247(const Proto31400247& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400247::SharedCtor() {
  _cached_size_ = 0;
  adorn_id_ = 0;
  open_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400247::~Proto31400247() {
  SharedDtor();
}

void Proto31400247::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400247::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400247::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400247_descriptor_;
}

const Proto31400247& Proto31400247::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31400247* Proto31400247::default_instance_ = NULL;

Proto31400247* Proto31400247::New() const {
  return new Proto31400247;
}

void Proto31400247::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    adorn_id_ = 0;
    open_ = 0;
  }
  mw_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400247::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoMagicWeapon mw_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mw_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mw_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_mw_list;
        if (input->ExpectTag(16)) goto parse_adorn_id;
        break;
      }
      
      // optional int32 adorn_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_adorn_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &adorn_id_)));
          set_has_adorn_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_open;
        break;
      }
      
      // optional int32 open = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_)));
          set_has_open();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400247::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoMagicWeapon mw_list = 1;
  for (int i = 0; i < this->mw_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->mw_list(i), output);
  }
  
  // optional int32 adorn_id = 2;
  if (has_adorn_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->adorn_id(), output);
  }
  
  // optional int32 open = 3;
  if (has_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->open(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400247::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoMagicWeapon mw_list = 1;
  for (int i = 0; i < this->mw_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->mw_list(i), target);
  }
  
  // optional int32 adorn_id = 2;
  if (has_adorn_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->adorn_id(), target);
  }
  
  // optional int32 open = 3;
  if (has_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->open(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400247::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 adorn_id = 2;
    if (has_adorn_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->adorn_id());
    }
    
    // optional int32 open = 3;
    if (has_open()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open());
    }
    
  }
  // repeated .ProtoMagicWeapon mw_list = 1;
  total_size += 1 * this->mw_list_size();
  for (int i = 0; i < this->mw_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mw_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400247::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400247* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400247*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400247::MergeFrom(const Proto31400247& from) {
  GOOGLE_CHECK_NE(&from, this);
  mw_list_.MergeFrom(from.mw_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_adorn_id()) {
      set_adorn_id(from.adorn_id());
    }
    if (from.has_open()) {
      set_open(from.open());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400247::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400247::CopyFrom(const Proto31400247& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400247::IsInitialized() const {
  
  return true;
}

void Proto31400247::Swap(Proto31400247* other) {
  if (other != this) {
    mw_list_.Swap(&other->mw_list_);
    std::swap(adorn_id_, other->adorn_id_);
    std::swap(open_, other->open_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400247::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400247_descriptor_;
  metadata.reflection = Proto31400247_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400447::kLeagueIdFieldNumber;
const int Proto30400447::kActivityTypeFieldNumber;
#endif  // !_MSC_VER

Proto30400447::Proto30400447()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400447::InitAsDefaultInstance() {
}

Proto30400447::Proto30400447(const Proto30400447& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400447::SharedCtor() {
  _cached_size_ = 0;
  league_id_ = GOOGLE_LONGLONG(0);
  activity_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400447::~Proto30400447() {
  SharedDtor();
}

void Proto30400447::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400447::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400447::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400447_descriptor_;
}

const Proto30400447& Proto30400447::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30400447* Proto30400447::default_instance_ = NULL;

Proto30400447* Proto30400447::New() const {
  return new Proto30400447;
}

void Proto30400447::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_id_ = GOOGLE_LONGLONG(0);
    activity_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400447::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 league_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_id_)));
          set_has_league_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_activity_type;
        break;
      }
      
      // optional int32 activity_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_type_)));
          set_has_activity_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400447::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 league_id = 1;
  if (has_league_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->league_id(), output);
  }
  
  // optional int32 activity_type = 2;
  if (has_activity_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activity_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400447::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 league_id = 1;
  if (has_league_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->league_id(), target);
  }
  
  // optional int32 activity_type = 2;
  if (has_activity_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activity_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400447::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 league_id = 1;
    if (has_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_id());
    }
    
    // optional int32 activity_type = 2;
    if (has_activity_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400447::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400447* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400447*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400447::MergeFrom(const Proto30400447& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_id()) {
      set_league_id(from.league_id());
    }
    if (from.has_activity_type()) {
      set_activity_type(from.activity_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400447::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400447::CopyFrom(const Proto30400447& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400447::IsInitialized() const {
  
  return true;
}

void Proto30400447::Swap(Proto30400447* other) {
  if (other != this) {
    std::swap(league_id_, other->league_id_);
    std::swap(activity_type_, other->activity_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400447::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400447_descriptor_;
  metadata.reflection = Proto30400447_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400320::kItemFieldNumber;
const int Proto31400320::kPackIndexFieldNumber;
#endif  // !_MSC_VER

Proto31400320::Proto31400320()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400320::InitAsDefaultInstance() {
  item_ = const_cast< ::ProtoItem*>(&::ProtoItem::default_instance());
}

Proto31400320::Proto31400320(const Proto31400320& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400320::SharedCtor() {
  _cached_size_ = 0;
  item_ = NULL;
  pack_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400320::~Proto31400320() {
  SharedDtor();
}

void Proto31400320::SharedDtor() {
  if (this != default_instance_) {
    delete item_;
  }
}

void Proto31400320::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400320::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400320_descriptor_;
}

const Proto31400320& Proto31400320::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31400320* Proto31400320::default_instance_ = NULL;

Proto31400320* Proto31400320::New() const {
  return new Proto31400320;
}

void Proto31400320::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_item()) {
      if (item_ != NULL) item_->::ProtoItem::Clear();
    }
    pack_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400320::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoItem item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pack_index;
        break;
      }
      
      // optional int32 pack_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pack_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pack_index_)));
          set_has_pack_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400320::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoItem item = 1;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item(), output);
  }
  
  // optional int32 pack_index = 2;
  if (has_pack_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pack_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400320::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoItem item = 1;
  if (has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item(), target);
  }
  
  // optional int32 pack_index = 2;
  if (has_pack_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pack_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400320::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoItem item = 1;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item());
    }
    
    // optional int32 pack_index = 2;
    if (has_pack_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pack_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400320::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400320* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400320*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400320::MergeFrom(const Proto31400320& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item()) {
      mutable_item()->::ProtoItem::MergeFrom(from.item());
    }
    if (from.has_pack_index()) {
      set_pack_index(from.pack_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400320::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400320::CopyFrom(const Proto31400320& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400320::IsInitialized() const {
  
  return true;
}

void Proto31400320::Swap(Proto31400320* other) {
  if (other != this) {
    std::swap(item_, other->item_);
    std::swap(pack_index_, other->pack_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400320::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400320_descriptor_;
  metadata.reflection = Proto31400320_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400206::kScene1IdFieldNumber;
const int Proto30400206::kScene2IdFieldNumber;
#endif  // !_MSC_VER

Proto30400206::Proto30400206()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400206::InitAsDefaultInstance() {
}

Proto30400206::Proto30400206(const Proto30400206& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400206::SharedCtor() {
  _cached_size_ = 0;
  scene1_id_ = 0;
  scene2_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400206::~Proto30400206() {
  SharedDtor();
}

void Proto30400206::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400206::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400206::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400206_descriptor_;
}

const Proto30400206& Proto30400206::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30400206* Proto30400206::default_instance_ = NULL;

Proto30400206* Proto30400206::New() const {
  return new Proto30400206;
}

void Proto30400206::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene1_id_ = 0;
    scene2_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400206::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene1_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene1_id_)));
          set_has_scene1_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_scene2_id;
        break;
      }
      
      // optional int32 scene2_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene2_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene2_id_)));
          set_has_scene2_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400206::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene1_id = 1;
  if (has_scene1_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene1_id(), output);
  }
  
  // optional int32 scene2_id = 2;
  if (has_scene2_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->scene2_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400206::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene1_id = 1;
  if (has_scene1_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene1_id(), target);
  }
  
  // optional int32 scene2_id = 2;
  if (has_scene2_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->scene2_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400206::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene1_id = 1;
    if (has_scene1_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene1_id());
    }
    
    // optional int32 scene2_id = 2;
    if (has_scene2_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene2_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400206::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400206* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400206*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400206::MergeFrom(const Proto30400206& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene1_id()) {
      set_scene1_id(from.scene1_id());
    }
    if (from.has_scene2_id()) {
      set_scene2_id(from.scene2_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400206::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400206::CopyFrom(const Proto30400206& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400206::IsInitialized() const {
  
  return true;
}

void Proto30400206::Swap(Proto30400206* other) {
  if (other != this) {
    std::swap(scene1_id_, other->scene1_id_);
    std::swap(scene2_id_, other->scene2_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400206::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400206_descriptor_;
  metadata.reflection = Proto30400206_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31402601::kPropIdFieldNumber;
const int Proto31402601::kBeastIdFieldNumber;
const int Proto31402601::kPropValueFieldNumber;
#endif  // !_MSC_VER

Proto31402601::Proto31402601()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31402601::InitAsDefaultInstance() {
}

Proto31402601::Proto31402601(const Proto31402601& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31402601::SharedCtor() {
  _cached_size_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31402601::~Proto31402601() {
  SharedDtor();
}

void Proto31402601::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31402601::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31402601::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31402601_descriptor_;
}

const Proto31402601& Proto31402601::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31402601* Proto31402601::default_instance_ = NULL;

Proto31402601* Proto31402601::New() const {
  return new Proto31402601;
}

void Proto31402601::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    beast_id_ = GOOGLE_LONGLONG(0);
  }
  prop_id_.Clear();
  prop_value_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31402601::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 prop_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_prop_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_prop_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_prop_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_prop_id;
        if (input->ExpectTag(16)) goto parse_beast_id;
        break;
      }
      
      // optional int64 beast_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(25)) goto parse_prop_value;
        break;
      }
      
      // repeated double prop_value = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_prop_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 25, input, this->mutable_prop_value())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_prop_value())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(25)) goto parse_prop_value;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31402601::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 prop_id = 1;
  for (int i = 0; i < this->prop_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->prop_id(i), output);
  }
  
  // optional int64 beast_id = 2;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->beast_id(), output);
  }
  
  // repeated double prop_value = 3;
  for (int i = 0; i < this->prop_value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      3, this->prop_value(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31402601::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 prop_id = 1;
  for (int i = 0; i < this->prop_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->prop_id(i), target);
  }
  
  // optional int64 beast_id = 2;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->beast_id(), target);
  }
  
  // repeated double prop_value = 3;
  for (int i = 0; i < this->prop_value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(3, this->prop_value(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31402601::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int64 beast_id = 2;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
  }
  // repeated int32 prop_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->prop_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->prop_id(i));
    }
    total_size += 1 * this->prop_id_size() + data_size;
  }
  
  // repeated double prop_value = 3;
  {
    int data_size = 0;
    data_size = 8 * this->prop_value_size();
    total_size += 1 * this->prop_value_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31402601::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31402601* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31402601*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31402601::MergeFrom(const Proto31402601& from) {
  GOOGLE_CHECK_NE(&from, this);
  prop_id_.MergeFrom(from.prop_id_);
  prop_value_.MergeFrom(from.prop_value_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31402601::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31402601::CopyFrom(const Proto31402601& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31402601::IsInitialized() const {
  
  return true;
}

void Proto31402601::Swap(Proto31402601* other) {
  if (other != this) {
    prop_id_.Swap(&other->prop_id_);
    std::swap(beast_id_, other->beast_id_);
    prop_value_.Swap(&other->prop_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31402601::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31402601_descriptor_;
  metadata.reflection = Proto31402601_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400024::kId1FieldNumber;
const int Proto30400024::kId2FieldNumber;
#endif  // !_MSC_VER

Proto30400024::Proto30400024()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400024::InitAsDefaultInstance() {
}

Proto30400024::Proto30400024(const Proto30400024& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400024::SharedCtor() {
  _cached_size_ = 0;
  id1_ = 0;
  id2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400024::~Proto30400024() {
  SharedDtor();
}

void Proto30400024::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400024::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400024::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400024_descriptor_;
}

const Proto30400024& Proto30400024::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30400024* Proto30400024::default_instance_ = NULL;

Proto30400024* Proto30400024::New() const {
  return new Proto30400024;
}

void Proto30400024::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id1_ = 0;
    id2_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400024::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id1 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id1_)));
          set_has_id1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id2;
        break;
      }
      
      // optional int32 id2 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id2_)));
          set_has_id2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400024::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id1 = 1;
  if (has_id1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id1(), output);
  }
  
  // optional int32 id2 = 2;
  if (has_id2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id2(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400024::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id1 = 1;
  if (has_id1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id1(), target);
  }
  
  // optional int32 id2 = 2;
  if (has_id2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id2(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400024::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id1 = 1;
    if (has_id1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id1());
    }
    
    // optional int32 id2 = 2;
    if (has_id2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id2());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400024::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400024* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400024*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400024::MergeFrom(const Proto30400024& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id1()) {
      set_id1(from.id1());
    }
    if (from.has_id2()) {
      set_id2(from.id2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400024::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400024::CopyFrom(const Proto30400024& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400024::IsInitialized() const {
  
  return true;
}

void Proto30400024::Swap(Proto30400024* other) {
  if (other != this) {
    std::swap(id1_, other->id1_);
    std::swap(id2_, other->id2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400024::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400024_descriptor_;
  metadata.reflection = Proto30400024_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400600::kLvlFieldNumber;
const int Proto31400600::kSendFieldNumber;
#endif  // !_MSC_VER

Proto31400600::Proto31400600()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400600::InitAsDefaultInstance() {
}

Proto31400600::Proto31400600(const Proto31400600& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400600::SharedCtor() {
  _cached_size_ = 0;
  lvl_ = 0;
  send_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400600::~Proto31400600() {
  SharedDtor();
}

void Proto31400600::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400600::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400600::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400600_descriptor_;
}

const Proto31400600& Proto31400600::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31400600* Proto31400600::default_instance_ = NULL;

Proto31400600* Proto31400600::New() const {
  return new Proto31400600;
}

void Proto31400600::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    lvl_ = 0;
    send_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400600::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 lvl = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lvl_)));
          set_has_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_send;
        break;
      }
      
      // optional bool send = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_send:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &send_)));
          set_has_send();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400600::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 lvl = 1;
  if (has_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lvl(), output);
  }
  
  // optional bool send = 2;
  if (has_send()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->send(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400600::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 lvl = 1;
  if (has_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lvl(), target);
  }
  
  // optional bool send = 2;
  if (has_send()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->send(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400600::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 lvl = 1;
    if (has_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lvl());
    }
    
    // optional bool send = 2;
    if (has_send()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400600::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400600* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400600*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400600::MergeFrom(const Proto31400600& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lvl()) {
      set_lvl(from.lvl());
    }
    if (from.has_send()) {
      set_send(from.send());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400600::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400600::CopyFrom(const Proto31400600& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400600::IsInitialized() const {
  
  return true;
}

void Proto31400600::Swap(Proto31400600* other) {
  if (other != this) {
    std::swap(lvl_, other->lvl_);
    std::swap(send_, other->send_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400600::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400600_descriptor_;
  metadata.reflection = Proto31400600_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400038::kTypeFieldNumber;
const int Proto30400038::kRankSizeFieldNumber;
const int Proto30400038::kActIndexFieldNumber;
const int Proto30400038::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto30400038::Proto30400038()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400038::InitAsDefaultInstance() {
}

Proto30400038::Proto30400038(const Proto30400038& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400038::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  rank_size_ = 0;
  act_index_ = 0;
  role_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400038::~Proto30400038() {
  SharedDtor();
}

void Proto30400038::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400038::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400038::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400038_descriptor_;
}

const Proto30400038& Proto30400038::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30400038* Proto30400038::default_instance_ = NULL;

Proto30400038* Proto30400038::New() const {
  return new Proto30400038;
}

void Proto30400038::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    rank_size_ = 0;
    act_index_ = 0;
    role_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400038::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_rank_size;
        break;
      }
      
      // optional int32 rank_size = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_size_)));
          set_has_rank_size();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_act_index;
        break;
      }
      
      // optional int32 act_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_index_)));
          set_has_act_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_role_id;
        break;
      }
      
      // optional int32 role_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400038::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 rank_size = 2;
  if (has_rank_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rank_size(), output);
  }
  
  // optional int32 act_index = 3;
  if (has_act_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->act_index(), output);
  }
  
  // optional int32 role_id = 4;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400038::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 rank_size = 2;
  if (has_rank_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rank_size(), target);
  }
  
  // optional int32 act_index = 3;
  if (has_act_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->act_index(), target);
  }
  
  // optional int32 role_id = 4;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400038::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 rank_size = 2;
    if (has_rank_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_size());
    }
    
    // optional int32 act_index = 3;
    if (has_act_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_index());
    }
    
    // optional int32 role_id = 4;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400038::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400038* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400038*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400038::MergeFrom(const Proto30400038& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_rank_size()) {
      set_rank_size(from.rank_size());
    }
    if (from.has_act_index()) {
      set_act_index(from.act_index());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400038::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400038::CopyFrom(const Proto30400038& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400038::IsInitialized() const {
  
  return true;
}

void Proto30400038::Swap(Proto30400038* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(rank_size_, other->rank_size_);
    std::swap(act_index_, other->act_index_);
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400038::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400038_descriptor_;
  metadata.reflection = Proto30400038_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400038::kFlowerRankFieldNumber;
const int Proto31400038::kActIndexFieldNumber;
#endif  // !_MSC_VER

Proto31400038::Proto31400038()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400038::InitAsDefaultInstance() {
}

Proto31400038::Proto31400038(const Proto31400038& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400038::SharedCtor() {
  _cached_size_ = 0;
  act_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400038::~Proto31400038() {
  SharedDtor();
}

void Proto31400038::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400038::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400038::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400038_descriptor_;
}

const Proto31400038& Proto31400038::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31400038* Proto31400038::default_instance_ = NULL;

Proto31400038* Proto31400038::New() const {
  return new Proto31400038;
}

void Proto31400038::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    act_index_ = 0;
  }
  flower_rank_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400038::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoActFlower flower_rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_flower_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_flower_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_flower_rank;
        if (input->ExpectTag(16)) goto parse_act_index;
        break;
      }
      
      // optional int32 act_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_index_)));
          set_has_act_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400038::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoActFlower flower_rank = 1;
  for (int i = 0; i < this->flower_rank_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->flower_rank(i), output);
  }
  
  // optional int32 act_index = 2;
  if (has_act_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->act_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400038::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoActFlower flower_rank = 1;
  for (int i = 0; i < this->flower_rank_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->flower_rank(i), target);
  }
  
  // optional int32 act_index = 2;
  if (has_act_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->act_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400038::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 act_index = 2;
    if (has_act_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_index());
    }
    
  }
  // repeated .ProtoActFlower flower_rank = 1;
  total_size += 1 * this->flower_rank_size();
  for (int i = 0; i < this->flower_rank_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->flower_rank(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400038::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400038* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400038*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400038::MergeFrom(const Proto31400038& from) {
  GOOGLE_CHECK_NE(&from, this);
  flower_rank_.MergeFrom(from.flower_rank_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_act_index()) {
      set_act_index(from.act_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400038::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400038::CopyFrom(const Proto31400038& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400038::IsInitialized() const {
  
  return true;
}

void Proto31400038::Swap(Proto31400038* other) {
  if (other != this) {
    flower_rank_.Swap(&other->flower_rank_);
    std::swap(act_index_, other->act_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400038::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400038_descriptor_;
  metadata.reflection = Proto31400038_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400039::kSendFieldNumber;
const int Proto30400039::kReciveFieldNumber;
const int Proto30400039::kRefreshFieldNumber;
#endif  // !_MSC_VER

Proto30400039::Proto30400039()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400039::InitAsDefaultInstance() {
  send_ = const_cast< ::ProtoActFlower*>(&::ProtoActFlower::default_instance());
  recive_ = const_cast< ::ProtoActFlower*>(&::ProtoActFlower::default_instance());
}

Proto30400039::Proto30400039(const Proto30400039& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400039::SharedCtor() {
  _cached_size_ = 0;
  send_ = NULL;
  recive_ = NULL;
  refresh_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400039::~Proto30400039() {
  SharedDtor();
}

void Proto30400039::SharedDtor() {
  if (this != default_instance_) {
    delete send_;
    delete recive_;
  }
}

void Proto30400039::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400039::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400039_descriptor_;
}

const Proto30400039& Proto30400039::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30400039* Proto30400039::default_instance_ = NULL;

Proto30400039* Proto30400039::New() const {
  return new Proto30400039;
}

void Proto30400039::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_send()) {
      if (send_ != NULL) send_->::ProtoActFlower::Clear();
    }
    if (has_recive()) {
      if (recive_ != NULL) recive_->::ProtoActFlower::Clear();
    }
    refresh_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400039::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoActFlower send = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_send()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_recive;
        break;
      }
      
      // optional .ProtoActFlower recive = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_recive:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recive()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_refresh;
        break;
      }
      
      // optional bool refresh = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &refresh_)));
          set_has_refresh();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400039::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoActFlower send = 1;
  if (has_send()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->send(), output);
  }
  
  // optional .ProtoActFlower recive = 2;
  if (has_recive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->recive(), output);
  }
  
  // optional bool refresh = 3;
  if (has_refresh()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->refresh(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400039::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoActFlower send = 1;
  if (has_send()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->send(), target);
  }
  
  // optional .ProtoActFlower recive = 2;
  if (has_recive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->recive(), target);
  }
  
  // optional bool refresh = 3;
  if (has_refresh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->refresh(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400039::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoActFlower send = 1;
    if (has_send()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->send());
    }
    
    // optional .ProtoActFlower recive = 2;
    if (has_recive()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->recive());
    }
    
    // optional bool refresh = 3;
    if (has_refresh()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400039::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400039* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400039*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400039::MergeFrom(const Proto30400039& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_send()) {
      mutable_send()->::ProtoActFlower::MergeFrom(from.send());
    }
    if (from.has_recive()) {
      mutable_recive()->::ProtoActFlower::MergeFrom(from.recive());
    }
    if (from.has_refresh()) {
      set_refresh(from.refresh());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400039::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400039::CopyFrom(const Proto30400039& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400039::IsInitialized() const {
  
  return true;
}

void Proto30400039::Swap(Proto30400039* other) {
  if (other != this) {
    std::swap(send_, other->send_);
    std::swap(recive_, other->recive_);
    std::swap(refresh_, other->refresh_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400039::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400039_descriptor_;
  metadata.reflection = Proto30400039_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400700::kTimesFieldNumber;
const int Proto31400700::kOneMountFieldNumber;
#endif  // !_MSC_VER

Proto31400700::Proto31400700()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400700::InitAsDefaultInstance() {
}

Proto31400700::Proto31400700(const Proto31400700& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400700::SharedCtor() {
  _cached_size_ = 0;
  times_ = 0;
  one_mount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400700::~Proto31400700() {
  SharedDtor();
}

void Proto31400700::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400700::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400700::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400700_descriptor_;
}

const Proto31400700& Proto31400700::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31400700* Proto31400700::default_instance_ = NULL;

Proto31400700* Proto31400700::New() const {
  return new Proto31400700;
}

void Proto31400700::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    times_ = 0;
    one_mount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400700::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 times = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &times_)));
          set_has_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_one_mount;
        break;
      }
      
      // optional int32 one_mount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_one_mount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &one_mount_)));
          set_has_one_mount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400700::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 times = 1;
  if (has_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->times(), output);
  }
  
  // optional int32 one_mount = 2;
  if (has_one_mount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->one_mount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400700::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 times = 1;
  if (has_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->times(), target);
  }
  
  // optional int32 one_mount = 2;
  if (has_one_mount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->one_mount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400700::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 times = 1;
    if (has_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->times());
    }
    
    // optional int32 one_mount = 2;
    if (has_one_mount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->one_mount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400700::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400700* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400700*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400700::MergeFrom(const Proto31400700& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_times()) {
      set_times(from.times());
    }
    if (from.has_one_mount()) {
      set_one_mount(from.one_mount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400700::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400700::CopyFrom(const Proto31400700& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400700::IsInitialized() const {
  
  return true;
}

void Proto31400700::Swap(Proto31400700* other) {
  if (other != this) {
    std::swap(times_, other->times_);
    std::swap(one_mount_, other->one_mount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400700::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400700_descriptor_;
  metadata.reflection = Proto31400700_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400908::kDropDragonSceneFieldNumber;
const int Proto31400908::kEnterTeamersFieldNumber;
#endif  // !_MSC_VER

Proto31400908::Proto31400908()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400908::InitAsDefaultInstance() {
}

Proto31400908::Proto31400908(const Proto31400908& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400908::SharedCtor() {
  _cached_size_ = 0;
  drop_dragon_scene_ = 0;
  enter_teamers_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400908::~Proto31400908() {
  SharedDtor();
}

void Proto31400908::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400908::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400908::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400908_descriptor_;
}

const Proto31400908& Proto31400908::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31400908* Proto31400908::default_instance_ = NULL;

Proto31400908* Proto31400908::New() const {
  return new Proto31400908;
}

void Proto31400908::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    drop_dragon_scene_ = 0;
    enter_teamers_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400908::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 drop_dragon_scene = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &drop_dragon_scene_)));
          set_has_drop_dragon_scene();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_enter_teamers;
        break;
      }
      
      // optional int32 enter_teamers = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_enter_teamers:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enter_teamers_)));
          set_has_enter_teamers();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400908::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 drop_dragon_scene = 1;
  if (has_drop_dragon_scene()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->drop_dragon_scene(), output);
  }
  
  // optional int32 enter_teamers = 2;
  if (has_enter_teamers()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->enter_teamers(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400908::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 drop_dragon_scene = 1;
  if (has_drop_dragon_scene()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->drop_dragon_scene(), target);
  }
  
  // optional int32 enter_teamers = 2;
  if (has_enter_teamers()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->enter_teamers(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400908::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 drop_dragon_scene = 1;
    if (has_drop_dragon_scene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->drop_dragon_scene());
    }
    
    // optional int32 enter_teamers = 2;
    if (has_enter_teamers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->enter_teamers());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400908::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400908* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400908*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400908::MergeFrom(const Proto31400908& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_drop_dragon_scene()) {
      set_drop_dragon_scene(from.drop_dragon_scene());
    }
    if (from.has_enter_teamers()) {
      set_enter_teamers(from.enter_teamers());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400908::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400908::CopyFrom(const Proto31400908& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400908::IsInitialized() const {
  
  return true;
}

void Proto31400908::Swap(Proto31400908* other) {
  if (other != this) {
    std::swap(drop_dragon_scene_, other->drop_dragon_scene_);
    std::swap(enter_teamers_, other->enter_teamers_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400908::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400908_descriptor_;
  metadata.reflection = Proto31400908_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400448::kFbFlagFieldNumber;
#endif  // !_MSC_VER

Proto30400448::Proto30400448()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400448::InitAsDefaultInstance() {
}

Proto30400448::Proto30400448(const Proto30400448& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400448::SharedCtor() {
  _cached_size_ = 0;
  fb_flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400448::~Proto30400448() {
  SharedDtor();
}

void Proto30400448::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400448::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400448::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400448_descriptor_;
}

const Proto30400448& Proto30400448::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30400448* Proto30400448::default_instance_ = NULL;

Proto30400448* Proto30400448::New() const {
  return new Proto30400448;
}

void Proto30400448::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fb_flag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400448::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fb_flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fb_flag_)));
          set_has_fb_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400448::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fb_flag = 1;
  if (has_fb_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fb_flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400448::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fb_flag = 1;
  if (has_fb_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fb_flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400448::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fb_flag = 1;
    if (has_fb_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fb_flag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400448::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400448* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400448*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400448::MergeFrom(const Proto30400448& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fb_flag()) {
      set_fb_flag(from.fb_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400448::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400448::CopyFrom(const Proto30400448& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400448::IsInitialized() const {
  
  return true;
}

void Proto30400448::Swap(Proto30400448* other) {
  if (other != this) {
    std::swap(fb_flag_, other->fb_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400448::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400448_descriptor_;
  metadata.reflection = Proto30400448_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400209::kStrengthFieldNumber;
const int Proto30400209::kLeftTimesFieldNumber;
const int Proto30400209::kVipBuysFieldNumber;
#endif  // !_MSC_VER

Proto30400209::Proto30400209()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400209::InitAsDefaultInstance() {
}

Proto30400209::Proto30400209(const Proto30400209& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400209::SharedCtor() {
  _cached_size_ = 0;
  strength_ = 0;
  left_times_ = 0;
  vip_buys_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400209::~Proto30400209() {
  SharedDtor();
}

void Proto30400209::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400209::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400209::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400209_descriptor_;
}

const Proto30400209& Proto30400209::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30400209* Proto30400209::default_instance_ = NULL;

Proto30400209* Proto30400209::New() const {
  return new Proto30400209;
}

void Proto30400209::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    strength_ = 0;
    left_times_ = 0;
    vip_buys_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400209::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 strength = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strength_)));
          set_has_strength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_left_times;
        break;
      }
      
      // optional int32 left_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_times_)));
          set_has_left_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_vip_buys;
        break;
      }
      
      // optional int32 vip_buys = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_buys:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_buys_)));
          set_has_vip_buys();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400209::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 strength = 1;
  if (has_strength()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->strength(), output);
  }
  
  // optional int32 left_times = 2;
  if (has_left_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_times(), output);
  }
  
  // optional int32 vip_buys = 3;
  if (has_vip_buys()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->vip_buys(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400209::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 strength = 1;
  if (has_strength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->strength(), target);
  }
  
  // optional int32 left_times = 2;
  if (has_left_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_times(), target);
  }
  
  // optional int32 vip_buys = 3;
  if (has_vip_buys()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->vip_buys(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400209::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 strength = 1;
    if (has_strength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->strength());
    }
    
    // optional int32 left_times = 2;
    if (has_left_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_times());
    }
    
    // optional int32 vip_buys = 3;
    if (has_vip_buys()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_buys());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400209::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400209* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400209*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400209::MergeFrom(const Proto30400209& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_strength()) {
      set_strength(from.strength());
    }
    if (from.has_left_times()) {
      set_left_times(from.left_times());
    }
    if (from.has_vip_buys()) {
      set_vip_buys(from.vip_buys());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400209::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400209::CopyFrom(const Proto30400209& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400209::IsInitialized() const {
  
  return true;
}

void Proto30400209::Swap(Proto30400209* other) {
  if (other != this) {
    std::swap(strength_, other->strength_);
    std::swap(left_times_, other->left_times_);
    std::swap(vip_buys_, other->vip_buys_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400209::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400209_descriptor_;
  metadata.reflection = Proto30400209_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400203::kValueFieldNumber;
#endif  // !_MSC_VER

Proto30400203::Proto30400203()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400203::InitAsDefaultInstance() {
}

Proto30400203::Proto30400203(const Proto30400203& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400203::SharedCtor() {
  _cached_size_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400203::~Proto30400203() {
  SharedDtor();
}

void Proto30400203::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400203::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400203::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400203_descriptor_;
}

const Proto30400203& Proto30400203::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30400203* Proto30400203::default_instance_ = NULL;

Proto30400203* Proto30400203::New() const {
  return new Proto30400203;
}

void Proto30400203::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400203::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400203::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 value = 1;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400203::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 value = 1;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400203::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 value = 1;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400203::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400203* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400203*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400203::MergeFrom(const Proto30400203& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400203::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400203::CopyFrom(const Proto30400203& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400203::IsInitialized() const {
  
  return true;
}

void Proto30400203::Swap(Proto30400203* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400203::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400203_descriptor_;
  metadata.reflection = Proto30400203_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100107::kCostValueFieldNumber;
const int Proto30100107::kTypeFieldNumber;
const int Proto30100107::kTimesFieldNumber;
#endif  // !_MSC_VER

Proto30100107::Proto30100107()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100107::InitAsDefaultInstance() {
}

Proto30100107::Proto30100107(const Proto30100107& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100107::SharedCtor() {
  _cached_size_ = 0;
  cost_value_ = 0;
  type_ = 0;
  times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100107::~Proto30100107() {
  SharedDtor();
}

void Proto30100107::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100107::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100107::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100107_descriptor_;
}

const Proto30100107& Proto30100107::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30100107* Proto30100107::default_instance_ = NULL;

Proto30100107* Proto30100107::New() const {
  return new Proto30100107;
}

void Proto30100107::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cost_value_ = 0;
    type_ = 0;
    times_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100107::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cost_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cost_value_)));
          set_has_cost_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_times;
        break;
      }
      
      // optional int32 times = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &times_)));
          set_has_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100107::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cost_value = 1;
  if (has_cost_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cost_value(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  // optional int32 times = 3;
  if (has_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->times(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100107::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cost_value = 1;
  if (has_cost_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cost_value(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  // optional int32 times = 3;
  if (has_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->times(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100107::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cost_value = 1;
    if (has_cost_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cost_value());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 times = 3;
    if (has_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->times());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100107::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100107* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100107*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100107::MergeFrom(const Proto30100107& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cost_value()) {
      set_cost_value(from.cost_value());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_times()) {
      set_times(from.times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100107::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100107::CopyFrom(const Proto30100107& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100107::IsInitialized() const {
  
  return true;
}

void Proto30100107::Swap(Proto30100107* other) {
  if (other != this) {
    std::swap(cost_value_, other->cost_value_);
    std::swap(type_, other->type_);
    std::swap(times_, other->times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100107::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100107_descriptor_;
  metadata.reflection = Proto30100107_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402018::kServerFlagFieldNumber;
const int Proto30402018::kSceneListFieldNumber;
const int Proto30402018::kLineListFieldNumber;
#endif  // !_MSC_VER

Proto30402018::Proto30402018()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402018::InitAsDefaultInstance() {
}

Proto30402018::Proto30402018(const Proto30402018& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402018::SharedCtor() {
  _cached_size_ = 0;
  server_flag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402018::~Proto30402018() {
  SharedDtor();
}

void Proto30402018::SharedDtor() {
  if (server_flag_ != &::google::protobuf::internal::kEmptyString) {
    delete server_flag_;
  }
  if (this != default_instance_) {
  }
}

void Proto30402018::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402018::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402018_descriptor_;
}

const Proto30402018& Proto30402018::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30402018* Proto30402018::default_instance_ = NULL;

Proto30402018* Proto30402018::New() const {
  return new Proto30402018;
}

void Proto30402018::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_server_flag()) {
      if (server_flag_ != &::google::protobuf::internal::kEmptyString) {
        server_flag_->clear();
      }
    }
  }
  scene_list_.Clear();
  line_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402018::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string server_flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_flag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->server_flag().data(), this->server_flag().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_scene_list;
        break;
      }
      
      // repeated int32 scene_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_scene_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_scene_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_scene_list;
        if (input->ExpectTag(24)) goto parse_line_list;
        break;
      }
      
      // repeated int32 line_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_line_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_line_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_line_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_line_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402018::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string server_flag = 1;
  if (has_server_flag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_flag().data(), this->server_flag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->server_flag(), output);
  }
  
  // repeated int32 scene_list = 2;
  for (int i = 0; i < this->scene_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->scene_list(i), output);
  }
  
  // repeated int32 line_list = 3;
  for (int i = 0; i < this->line_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->line_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402018::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string server_flag = 1;
  if (has_server_flag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_flag().data(), this->server_flag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->server_flag(), target);
  }
  
  // repeated int32 scene_list = 2;
  for (int i = 0; i < this->scene_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->scene_list(i), target);
  }
  
  // repeated int32 line_list = 3;
  for (int i = 0; i < this->line_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->line_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402018::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string server_flag = 1;
    if (has_server_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_flag());
    }
    
  }
  // repeated int32 scene_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->scene_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->scene_list(i));
    }
    total_size += 1 * this->scene_list_size() + data_size;
  }
  
  // repeated int32 line_list = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->line_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->line_list(i));
    }
    total_size += 1 * this->line_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402018::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402018* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402018*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402018::MergeFrom(const Proto30402018& from) {
  GOOGLE_CHECK_NE(&from, this);
  scene_list_.MergeFrom(from.scene_list_);
  line_list_.MergeFrom(from.line_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_server_flag()) {
      set_server_flag(from.server_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402018::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402018::CopyFrom(const Proto30402018& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402018::IsInitialized() const {
  
  return true;
}

void Proto30402018::Swap(Proto30402018* other) {
  if (other != this) {
    std::swap(server_flag_, other->server_flag_);
    scene_list_.Swap(&other->scene_list_);
    line_list_.Swap(&other->line_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402018::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402018_descriptor_;
  metadata.reflection = Proto30402018_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100108::kIsSuccessFieldNumber;
const int Proto30100108::kScriptSortFieldNumber;
#endif  // !_MSC_VER

Proto30100108::Proto30100108()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100108::InitAsDefaultInstance() {
}

Proto30100108::Proto30100108(const Proto30100108& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100108::SharedCtor() {
  _cached_size_ = 0;
  is_success_ = 0;
  script_sort_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100108::~Proto30100108() {
  SharedDtor();
}

void Proto30100108::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100108::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100108::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100108_descriptor_;
}

const Proto30100108& Proto30100108::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30100108* Proto30100108::default_instance_ = NULL;

Proto30100108* Proto30100108::New() const {
  return new Proto30100108;
}

void Proto30100108::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_success_ = 0;
    script_sort_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100108::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 is_success = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_success_)));
          set_has_is_success();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_script_sort;
        break;
      }
      
      // optional int32 script_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100108::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 is_success = 1;
  if (has_is_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->is_success(), output);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->script_sort(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100108::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 is_success = 1;
  if (has_is_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->is_success(), target);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->script_sort(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100108::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 is_success = 1;
    if (has_is_success()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_success());
    }
    
    // optional int32 script_sort = 2;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100108::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100108* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100108*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100108::MergeFrom(const Proto30100108& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_success()) {
      set_is_success(from.is_success());
    }
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100108::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100108::CopyFrom(const Proto30100108& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100108::IsInitialized() const {
  
  return true;
}

void Proto30100108::Swap(Proto30100108* other) {
  if (other != this) {
    std::swap(is_success_, other->is_success_);
    std::swap(script_sort_, other->script_sort_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100108::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100108_descriptor_;
  metadata.reflection = Proto30100108_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400029::kItemListFieldNumber;
const int Proto31400029::kSerialFieldNumber;
#endif  // !_MSC_VER

Proto31400029::Proto31400029()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400029::InitAsDefaultInstance() {
  serial_ = const_cast< ::ProtoSerialObj*>(&::ProtoSerialObj::default_instance());
}

Proto31400029::Proto31400029(const Proto31400029& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400029::SharedCtor() {
  _cached_size_ = 0;
  serial_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400029::~Proto31400029() {
  SharedDtor();
}

void Proto31400029::SharedDtor() {
  if (this != default_instance_) {
    delete serial_;
  }
}

void Proto31400029::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400029::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400029_descriptor_;
}

const Proto31400029& Proto31400029::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31400029* Proto31400029::default_instance_ = NULL;

Proto31400029* Proto31400029::New() const {
  return new Proto31400029;
}

void Proto31400029::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_serial()) {
      if (serial_ != NULL) serial_->::ProtoSerialObj::Clear();
    }
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400029::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_list;
        if (input->ExpectTag(18)) goto parse_serial;
        break;
      }
      
      // optional .ProtoSerialObj serial = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_serial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serial()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400029::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(i), output);
  }
  
  // optional .ProtoSerialObj serial = 2;
  if (has_serial()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->serial(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400029::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_list(i), target);
  }
  
  // optional .ProtoSerialObj serial = 2;
  if (has_serial()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->serial(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400029::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .ProtoSerialObj serial = 2;
    if (has_serial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serial());
    }
    
  }
  // repeated .ProtoItem item_list = 1;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400029::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400029* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400029*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400029::MergeFrom(const Proto31400029& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_serial()) {
      mutable_serial()->::ProtoSerialObj::MergeFrom(from.serial());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400029::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400029::CopyFrom(const Proto31400029& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400029::IsInitialized() const {
  
  return true;
}

void Proto31400029::Swap(Proto31400029* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(serial_, other->serial_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400029::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400029_descriptor_;
  metadata.reflection = Proto31400029_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100109::kTypeFieldNumber;
const int Proto30100109::kValueFieldNumber;
#endif  // !_MSC_VER

Proto30100109::Proto30100109()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100109::InitAsDefaultInstance() {
}

Proto30100109::Proto30100109(const Proto30100109& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100109::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100109::~Proto30100109() {
  SharedDtor();
}

void Proto30100109::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100109::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100109::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100109_descriptor_;
}

const Proto30100109& Proto30100109::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30100109* Proto30100109::default_instance_ = NULL;

Proto30100109* Proto30100109::New() const {
  return new Proto30100109;
}

void Proto30100109::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100109::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }
      
      // optional int32 value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100109::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100109::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100109::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100109::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100109* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100109*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100109::MergeFrom(const Proto30100109& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100109::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100109::CopyFrom(const Proto30100109& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100109::IsInitialized() const {
  
  return true;
}

void Proto30100109::Swap(Proto30100109* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100109::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100109_descriptor_;
  metadata.reflection = Proto30100109_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400039::kItemFieldNumber;
const int Proto31400039::kIndexFieldNumber;
const int Proto31400039::kType1FieldNumber;
const int Proto31400039::kType2FieldNumber;
const int Proto31400039::kCostFieldNumber;
const int Proto31400039::kResultFieldNumber;
#endif  // !_MSC_VER

Proto31400039::Proto31400039()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400039::InitAsDefaultInstance() {
}

Proto31400039::Proto31400039(const Proto31400039& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400039::SharedCtor() {
  _cached_size_ = 0;
  type1_ = 0;
  type2_ = 0;
  cost_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400039::~Proto31400039() {
  SharedDtor();
}

void Proto31400039::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400039::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400039::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400039_descriptor_;
}

const Proto31400039& Proto31400039::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31400039* Proto31400039::default_instance_ = NULL;

Proto31400039* Proto31400039::New() const {
  return new Proto31400039;
}

void Proto31400039::Clear() {
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    type1_ = 0;
    type2_ = 0;
    cost_ = 0;
    result_ = 0;
  }
  item_.Clear();
  index_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400039::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item;
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }
      
      // repeated int32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_index())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_index())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index;
        if (input->ExpectTag(24)) goto parse_type1;
        break;
      }
      
      // optional int32 type1 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type1_)));
          set_has_type1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_type2;
        break;
      }
      
      // optional int32 type2 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type2_)));
          set_has_type2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_cost;
        break;
      }
      
      // optional int32 cost = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cost_)));
          set_has_cost();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_result;
        break;
      }
      
      // optional int32 result = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400039::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem item = 1;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item(i), output);
  }
  
  // repeated int32 index = 2;
  for (int i = 0; i < this->index_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->index(i), output);
  }
  
  // optional int32 type1 = 3;
  if (has_type1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type1(), output);
  }
  
  // optional int32 type2 = 4;
  if (has_type2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type2(), output);
  }
  
  // optional int32 cost = 5;
  if (has_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cost(), output);
  }
  
  // optional int32 result = 6;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->result(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400039::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem item = 1;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item(i), target);
  }
  
  // repeated int32 index = 2;
  for (int i = 0; i < this->index_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->index(i), target);
  }
  
  // optional int32 type1 = 3;
  if (has_type1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type1(), target);
  }
  
  // optional int32 type2 = 4;
  if (has_type2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type2(), target);
  }
  
  // optional int32 cost = 5;
  if (has_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cost(), target);
  }
  
  // optional int32 result = 6;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->result(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400039::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional int32 type1 = 3;
    if (has_type1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type1());
    }
    
    // optional int32 type2 = 4;
    if (has_type2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type2());
    }
    
    // optional int32 cost = 5;
    if (has_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cost());
    }
    
    // optional int32 result = 6;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
  }
  // repeated .ProtoItem item = 1;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }
  
  // repeated int32 index = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->index_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->index(i));
    }
    total_size += 1 * this->index_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400039::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400039* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400039*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400039::MergeFrom(const Proto31400039& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  index_.MergeFrom(from.index_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_type1()) {
      set_type1(from.type1());
    }
    if (from.has_type2()) {
      set_type2(from.type2());
    }
    if (from.has_cost()) {
      set_cost(from.cost());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400039::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400039::CopyFrom(const Proto31400039& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400039::IsInitialized() const {
  
  return true;
}

void Proto31400039::Swap(Proto31400039* other) {
  if (other != this) {
    item_.Swap(&other->item_);
    index_.Swap(&other->index_);
    std::swap(type1_, other->type1_);
    std::swap(type2_, other->type2_);
    std::swap(cost_, other->cost_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400039::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400039_descriptor_;
  metadata.reflection = Proto31400039_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400603::kIdFieldNumber;
const int Proto31400603::kLvlFieldNumber;
const int Proto31400603::kSelectIconFieldNumber;
#endif  // !_MSC_VER

Proto31400603::Proto31400603()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400603::InitAsDefaultInstance() {
}

Proto31400603::Proto31400603(const Proto31400603& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400603::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  lvl_ = 0;
  select_icon_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400603::~Proto31400603() {
  SharedDtor();
}

void Proto31400603::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400603::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400603::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400603_descriptor_;
}

const Proto31400603& Proto31400603::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31400603* Proto31400603::default_instance_ = NULL;

Proto31400603* Proto31400603::New() const {
  return new Proto31400603;
}

void Proto31400603::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    lvl_ = 0;
    select_icon_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400603::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_lvl;
        break;
      }
      
      // optional int32 lvl = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lvl_)));
          set_has_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_select_icon;
        break;
      }
      
      // optional int32 select_icon = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_select_icon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &select_icon_)));
          set_has_select_icon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400603::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional int32 lvl = 2;
  if (has_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lvl(), output);
  }
  
  // optional int32 select_icon = 3;
  if (has_select_icon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->select_icon(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400603::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional int32 lvl = 2;
  if (has_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->lvl(), target);
  }
  
  // optional int32 select_icon = 3;
  if (has_select_icon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->select_icon(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400603::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional int32 lvl = 2;
    if (has_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lvl());
    }
    
    // optional int32 select_icon = 3;
    if (has_select_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->select_icon());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400603::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400603* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400603*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400603::MergeFrom(const Proto31400603& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_lvl()) {
      set_lvl(from.lvl());
    }
    if (from.has_select_icon()) {
      set_select_icon(from.select_icon());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400603::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400603::CopyFrom(const Proto31400603& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400603::IsInitialized() const {
  
  return true;
}

void Proto31400603::Swap(Proto31400603* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(lvl_, other->lvl_);
    std::swap(select_icon_, other->select_icon_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400603::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400603_descriptor_;
  metadata.reflection = Proto31400603_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400909::kScriptSortFieldNumber;
#endif  // !_MSC_VER

Proto31400909::Proto31400909()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400909::InitAsDefaultInstance() {
}

Proto31400909::Proto31400909(const Proto31400909& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400909::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400909::~Proto31400909() {
  SharedDtor();
}

void Proto31400909::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400909::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400909::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400909_descriptor_;
}

const Proto31400909& Proto31400909::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31400909* Proto31400909::default_instance_ = NULL;

Proto31400909* Proto31400909::New() const {
  return new Proto31400909;
}

void Proto31400909::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400909::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400909::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400909::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400909::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400909::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400909* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400909*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400909::MergeFrom(const Proto31400909& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400909::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400909::CopyFrom(const Proto31400909& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400909::IsInitialized() const {
  
  return true;
}

void Proto31400909::Swap(Proto31400909* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400909::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400909_descriptor_;
  metadata.reflection = Proto31400909_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto32101107::kSidFieldNumber;
const int Proto32101107::kUidFieldNumber;
const int Proto32101107::kUsernameFieldNumber;
const int Proto32101107::kRoleIdFieldNumber;
const int Proto32101107::kRoleNameFieldNumber;
const int Proto32101107::kLevelFieldNumber;
const int Proto32101107::kOrderIdFieldNumber;
const int Proto32101107::kIncomeChannelFieldNumber;
const int Proto32101107::kIncomeCurrencyFieldNumber;
const int Proto32101107::kIncomeMoneyFieldNumber;
const int Proto32101107::kIncomeGoldFieldNumber;
const int Proto32101107::kOwnGoldFieldNumber;
const int Proto32101107::kIncomeStatusFieldNumber;
const int Proto32101107::kTimeFieldNumber;
#endif  // !_MSC_VER

Proto32101107::Proto32101107()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto32101107::InitAsDefaultInstance() {
}

Proto32101107::Proto32101107(const Proto32101107& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto32101107::SharedCtor() {
  _cached_size_ = 0;
  sid_ = 0;
  uid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  role_id_ = GOOGLE_LONGLONG(0);
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  level_ = 0;
  order_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  income_channel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  income_currency_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  income_money_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  income_gold_ = 0;
  own_gold_ = 0;
  income_status_ = 0;
  time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto32101107::~Proto32101107() {
  SharedDtor();
}

void Proto32101107::SharedDtor() {
  if (uid_ != &::google::protobuf::internal::kEmptyString) {
    delete uid_;
  }
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    delete username_;
  }
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (order_id_ != &::google::protobuf::internal::kEmptyString) {
    delete order_id_;
  }
  if (income_channel_ != &::google::protobuf::internal::kEmptyString) {
    delete income_channel_;
  }
  if (income_currency_ != &::google::protobuf::internal::kEmptyString) {
    delete income_currency_;
  }
  if (income_money_ != &::google::protobuf::internal::kEmptyString) {
    delete income_money_;
  }
  if (this != default_instance_) {
  }
}

void Proto32101107::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto32101107::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto32101107_descriptor_;
}

const Proto32101107& Proto32101107::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto32101107* Proto32101107::default_instance_ = NULL;

Proto32101107* Proto32101107::New() const {
  return new Proto32101107;
}

void Proto32101107::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    sid_ = 0;
    if (has_uid()) {
      if (uid_ != &::google::protobuf::internal::kEmptyString) {
        uid_->clear();
      }
    }
    if (has_username()) {
      if (username_ != &::google::protobuf::internal::kEmptyString) {
        username_->clear();
      }
    }
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
    level_ = 0;
    if (has_order_id()) {
      if (order_id_ != &::google::protobuf::internal::kEmptyString) {
        order_id_->clear();
      }
    }
    if (has_income_channel()) {
      if (income_channel_ != &::google::protobuf::internal::kEmptyString) {
        income_channel_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_income_currency()) {
      if (income_currency_ != &::google::protobuf::internal::kEmptyString) {
        income_currency_->clear();
      }
    }
    if (has_income_money()) {
      if (income_money_ != &::google::protobuf::internal::kEmptyString) {
        income_money_->clear();
      }
    }
    income_gold_ = 0;
    own_gold_ = 0;
    income_status_ = 0;
    time_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto32101107::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sid_)));
          set_has_sid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_uid;
        break;
      }
      
      // optional string uid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_username;
        break;
      }
      
      // optional string username = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_role_name;
        break;
      }
      
      // optional string role_name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_level;
        break;
      }
      
      // optional int32 level = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_order_id;
        break;
      }
      
      // optional string order_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_order_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->order_id().data(), this->order_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_income_channel;
        break;
      }
      
      // optional string income_channel = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_income_channel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_income_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->income_channel().data(), this->income_channel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_income_currency;
        break;
      }
      
      // optional string income_currency = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_income_currency:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_income_currency()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->income_currency().data(), this->income_currency().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_income_money;
        break;
      }
      
      // optional string income_money = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_income_money:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_income_money()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->income_money().data(), this->income_money().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_income_gold;
        break;
      }
      
      // optional int32 income_gold = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_income_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &income_gold_)));
          set_has_income_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_own_gold;
        break;
      }
      
      // optional int32 own_gold = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_own_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &own_gold_)));
          set_has_own_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_income_status;
        break;
      }
      
      // optional int32 income_status = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_income_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &income_status_)));
          set_has_income_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_time;
        break;
      }
      
      // optional int64 time = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto32101107::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 sid = 1;
  if (has_sid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sid(), output);
  }
  
  // optional string uid = 2;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->uid(), output);
  }
  
  // optional string username = 3;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->username(), output);
  }
  
  // optional int64 role_id = 4;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->role_id(), output);
  }
  
  // optional string role_name = 5;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->role_name(), output);
  }
  
  // optional int32 level = 6;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->level(), output);
  }
  
  // optional string order_id = 7;
  if (has_order_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_id().data(), this->order_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->order_id(), output);
  }
  
  // optional string income_channel = 8;
  if (has_income_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->income_channel().data(), this->income_channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->income_channel(), output);
  }
  
  // optional string income_currency = 9;
  if (has_income_currency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->income_currency().data(), this->income_currency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->income_currency(), output);
  }
  
  // optional string income_money = 10;
  if (has_income_money()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->income_money().data(), this->income_money().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->income_money(), output);
  }
  
  // optional int32 income_gold = 11;
  if (has_income_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->income_gold(), output);
  }
  
  // optional int32 own_gold = 12;
  if (has_own_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->own_gold(), output);
  }
  
  // optional int32 income_status = 13;
  if (has_income_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->income_status(), output);
  }
  
  // optional int64 time = 14;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto32101107::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 sid = 1;
  if (has_sid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sid(), target);
  }
  
  // optional string uid = 2;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uid(), target);
  }
  
  // optional string username = 3;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }
  
  // optional int64 role_id = 4;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->role_id(), target);
  }
  
  // optional string role_name = 5;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->role_name(), target);
  }
  
  // optional int32 level = 6;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->level(), target);
  }
  
  // optional string order_id = 7;
  if (has_order_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->order_id().data(), this->order_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->order_id(), target);
  }
  
  // optional string income_channel = 8;
  if (has_income_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->income_channel().data(), this->income_channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->income_channel(), target);
  }
  
  // optional string income_currency = 9;
  if (has_income_currency()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->income_currency().data(), this->income_currency().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->income_currency(), target);
  }
  
  // optional string income_money = 10;
  if (has_income_money()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->income_money().data(), this->income_money().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->income_money(), target);
  }
  
  // optional int32 income_gold = 11;
  if (has_income_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->income_gold(), target);
  }
  
  // optional int32 own_gold = 12;
  if (has_own_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->own_gold(), target);
  }
  
  // optional int32 income_status = 13;
  if (has_income_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->income_status(), target);
  }
  
  // optional int64 time = 14;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto32101107::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 sid = 1;
    if (has_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sid());
    }
    
    // optional string uid = 2;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uid());
    }
    
    // optional string username = 3;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }
    
    // optional int64 role_id = 4;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional string role_name = 5;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
    // optional int32 level = 6;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional string order_id = 7;
    if (has_order_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->order_id());
    }
    
    // optional string income_channel = 8;
    if (has_income_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->income_channel());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string income_currency = 9;
    if (has_income_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->income_currency());
    }
    
    // optional string income_money = 10;
    if (has_income_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->income_money());
    }
    
    // optional int32 income_gold = 11;
    if (has_income_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->income_gold());
    }
    
    // optional int32 own_gold = 12;
    if (has_own_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->own_gold());
    }
    
    // optional int32 income_status = 13;
    if (has_income_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->income_status());
    }
    
    // optional int64 time = 14;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto32101107::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto32101107* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto32101107*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto32101107::MergeFrom(const Proto32101107& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sid()) {
      set_sid(from.sid());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_username()) {
      set_username(from.username());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_order_id()) {
      set_order_id(from.order_id());
    }
    if (from.has_income_channel()) {
      set_income_channel(from.income_channel());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_income_currency()) {
      set_income_currency(from.income_currency());
    }
    if (from.has_income_money()) {
      set_income_money(from.income_money());
    }
    if (from.has_income_gold()) {
      set_income_gold(from.income_gold());
    }
    if (from.has_own_gold()) {
      set_own_gold(from.own_gold());
    }
    if (from.has_income_status()) {
      set_income_status(from.income_status());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto32101107::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto32101107::CopyFrom(const Proto32101107& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto32101107::IsInitialized() const {
  
  return true;
}

void Proto32101107::Swap(Proto32101107* other) {
  if (other != this) {
    std::swap(sid_, other->sid_);
    std::swap(uid_, other->uid_);
    std::swap(username_, other->username_);
    std::swap(role_id_, other->role_id_);
    std::swap(role_name_, other->role_name_);
    std::swap(level_, other->level_);
    std::swap(order_id_, other->order_id_);
    std::swap(income_channel_, other->income_channel_);
    std::swap(income_currency_, other->income_currency_);
    std::swap(income_money_, other->income_money_);
    std::swap(income_gold_, other->income_gold_);
    std::swap(own_gold_, other->own_gold_);
    std::swap(income_status_, other->income_status_);
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto32101107::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto32101107_descriptor_;
  metadata.reflection = Proto32101107_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30101403::kHiddenItemFieldNumber;
#endif  // !_MSC_VER

Proto30101403::Proto30101403()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30101403::InitAsDefaultInstance() {
}

Proto30101403::Proto30101403(const Proto30101403& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30101403::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30101403::~Proto30101403() {
  SharedDtor();
}

void Proto30101403::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30101403::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30101403::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30101403_descriptor_;
}

const Proto30101403& Proto30101403::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30101403* Proto30101403::default_instance_ = NULL;

Proto30101403* Proto30101403::New() const {
  return new Proto30101403;
}

void Proto30101403::Clear() {
  hidden_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30101403::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 hidden_item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hidden_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_hidden_item())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_hidden_item())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_hidden_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30101403::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 hidden_item = 1;
  for (int i = 0; i < this->hidden_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->hidden_item(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30101403::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 hidden_item = 1;
  for (int i = 0; i < this->hidden_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->hidden_item(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30101403::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 hidden_item = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->hidden_item_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->hidden_item(i));
    }
    total_size += 1 * this->hidden_item_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30101403::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30101403* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30101403*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30101403::MergeFrom(const Proto30101403& from) {
  GOOGLE_CHECK_NE(&from, this);
  hidden_item_.MergeFrom(from.hidden_item_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30101403::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30101403::CopyFrom(const Proto30101403& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30101403::IsInitialized() const {
  
  return true;
}

void Proto30101403::Swap(Proto30101403* other) {
  if (other != this) {
    hidden_item_.Swap(&other->hidden_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30101403::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30101403_descriptor_;
  metadata.reflection = Proto30101403_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30600103::kSceneIdFieldNumber;
const int Proto30600103::kLineIdFieldNumber;
const int Proto30600103::kCfgIndexFieldNumber;
const int Proto30600103::kAddressFieldNumber;
const int Proto30600103::kPortFieldNumber;
const int Proto30600103::kConnectSidFieldNumber;
#endif  // !_MSC_VER

Proto30600103::Proto30600103()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30600103::InitAsDefaultInstance() {
}

Proto30600103::Proto30600103(const Proto30600103& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30600103::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  line_id_ = 0;
  cfg_index_ = 0;
  address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  port_ = 0;
  connect_sid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30600103::~Proto30600103() {
  SharedDtor();
}

void Proto30600103::SharedDtor() {
  if (address_ != &::google::protobuf::internal::kEmptyString) {
    delete address_;
  }
  if (this != default_instance_) {
  }
}

void Proto30600103::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30600103::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30600103_descriptor_;
}

const Proto30600103& Proto30600103::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30600103* Proto30600103::default_instance_ = NULL;

Proto30600103* Proto30600103::New() const {
  return new Proto30600103;
}

void Proto30600103::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    line_id_ = 0;
    cfg_index_ = 0;
    if (has_address()) {
      if (address_ != &::google::protobuf::internal::kEmptyString) {
        address_->clear();
      }
    }
    port_ = 0;
    connect_sid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30600103::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_line_id;
        break;
      }
      
      // optional int32 line_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_line_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &line_id_)));
          set_has_line_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cfg_index;
        break;
      }
      
      // optional int32 cfg_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cfg_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cfg_index_)));
          set_has_cfg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_address;
        break;
      }
      
      // optional string address = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_address:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_port;
        break;
      }
      
      // optional int32 port = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
          set_has_port();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_connect_sid;
        break;
      }
      
      // optional int32 connect_sid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_connect_sid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &connect_sid_)));
          set_has_connect_sid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30600103::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 line_id = 2;
  if (has_line_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->line_id(), output);
  }
  
  // optional int32 cfg_index = 3;
  if (has_cfg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cfg_index(), output);
  }
  
  // optional string address = 4;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->address(), output);
  }
  
  // optional int32 port = 5;
  if (has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->port(), output);
  }
  
  // optional int32 connect_sid = 6;
  if (has_connect_sid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->connect_sid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30600103::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 line_id = 2;
  if (has_line_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->line_id(), target);
  }
  
  // optional int32 cfg_index = 3;
  if (has_cfg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cfg_index(), target);
  }
  
  // optional string address = 4;
  if (has_address()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->address(), target);
  }
  
  // optional int32 port = 5;
  if (has_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->port(), target);
  }
  
  // optional int32 connect_sid = 6;
  if (has_connect_sid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->connect_sid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30600103::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 line_id = 2;
    if (has_line_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->line_id());
    }
    
    // optional int32 cfg_index = 3;
    if (has_cfg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cfg_index());
    }
    
    // optional string address = 4;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address());
    }
    
    // optional int32 port = 5;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->port());
    }
    
    // optional int32 connect_sid = 6;
    if (has_connect_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->connect_sid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30600103::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30600103* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30600103*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30600103::MergeFrom(const Proto30600103& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_line_id()) {
      set_line_id(from.line_id());
    }
    if (from.has_cfg_index()) {
      set_cfg_index(from.cfg_index());
    }
    if (from.has_address()) {
      set_address(from.address());
    }
    if (from.has_port()) {
      set_port(from.port());
    }
    if (from.has_connect_sid()) {
      set_connect_sid(from.connect_sid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30600103::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30600103::CopyFrom(const Proto30600103& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30600103::IsInitialized() const {
  
  return true;
}

void Proto30600103::Swap(Proto30600103* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(line_id_, other->line_id_);
    std::swap(cfg_index_, other->cfg_index_);
    std::swap(address_, other->address_);
    std::swap(port_, other->port_);
    std::swap(connect_sid_, other->connect_sid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30600103::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30600103_descriptor_;
  metadata.reflection = Proto30600103_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400603::kIllusListFieldNumber;
const int Proto30400603::kIllusGroupListFieldNumber;
const int Proto30400603::kCurIllusClassIdFieldNumber;
const int Proto30400603::kIllusLevelListFieldNumber;
#endif  // !_MSC_VER

Proto30400603::Proto30400603()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400603::InitAsDefaultInstance() {
}

Proto30400603::Proto30400603(const Proto30400603& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400603::SharedCtor() {
  _cached_size_ = 0;
  cur_illus_class_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400603::~Proto30400603() {
  SharedDtor();
}

void Proto30400603::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400603::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400603::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400603_descriptor_;
}

const Proto30400603& Proto30400603::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30400603* Proto30400603::default_instance_ = NULL;

Proto30400603* Proto30400603::New() const {
  return new Proto30400603;
}

void Proto30400603::Clear() {
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    cur_illus_class_id_ = 0;
  }
  illus_list_.Clear();
  illus_group_list_.Clear();
  illus_level_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400603::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 illus_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_illus_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_illus_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_illus_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_illus_list;
        if (input->ExpectTag(16)) goto parse_illus_group_list;
        break;
      }
      
      // repeated int32 illus_group_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_illus_group_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_illus_group_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_illus_group_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_illus_group_list;
        if (input->ExpectTag(24)) goto parse_cur_illus_class_id;
        break;
      }
      
      // optional int32 cur_illus_class_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_illus_class_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_illus_class_id_)));
          set_has_cur_illus_class_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_illus_level_list;
        break;
      }
      
      // repeated int32 illus_level_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_illus_level_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_illus_level_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_illus_level_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_illus_level_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400603::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 illus_list = 1;
  for (int i = 0; i < this->illus_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->illus_list(i), output);
  }
  
  // repeated int32 illus_group_list = 2;
  for (int i = 0; i < this->illus_group_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->illus_group_list(i), output);
  }
  
  // optional int32 cur_illus_class_id = 3;
  if (has_cur_illus_class_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cur_illus_class_id(), output);
  }
  
  // repeated int32 illus_level_list = 4;
  for (int i = 0; i < this->illus_level_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->illus_level_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400603::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 illus_list = 1;
  for (int i = 0; i < this->illus_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->illus_list(i), target);
  }
  
  // repeated int32 illus_group_list = 2;
  for (int i = 0; i < this->illus_group_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->illus_group_list(i), target);
  }
  
  // optional int32 cur_illus_class_id = 3;
  if (has_cur_illus_class_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cur_illus_class_id(), target);
  }
  
  // repeated int32 illus_level_list = 4;
  for (int i = 0; i < this->illus_level_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->illus_level_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400603::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional int32 cur_illus_class_id = 3;
    if (has_cur_illus_class_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_illus_class_id());
    }
    
  }
  // repeated int32 illus_list = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->illus_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->illus_list(i));
    }
    total_size += 1 * this->illus_list_size() + data_size;
  }
  
  // repeated int32 illus_group_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->illus_group_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->illus_group_list(i));
    }
    total_size += 1 * this->illus_group_list_size() + data_size;
  }
  
  // repeated int32 illus_level_list = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->illus_level_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->illus_level_list(i));
    }
    total_size += 1 * this->illus_level_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400603::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400603* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400603*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400603::MergeFrom(const Proto30400603& from) {
  GOOGLE_CHECK_NE(&from, this);
  illus_list_.MergeFrom(from.illus_list_);
  illus_group_list_.MergeFrom(from.illus_group_list_);
  illus_level_list_.MergeFrom(from.illus_level_list_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_cur_illus_class_id()) {
      set_cur_illus_class_id(from.cur_illus_class_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400603::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400603::CopyFrom(const Proto30400603& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400603::IsInitialized() const {
  
  return true;
}

void Proto30400603::Swap(Proto30400603* other) {
  if (other != this) {
    illus_list_.Swap(&other->illus_list_);
    illus_group_list_.Swap(&other->illus_group_list_);
    std::swap(cur_illus_class_id_, other->cur_illus_class_id_);
    illus_level_list_.Swap(&other->illus_level_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400603::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400603_descriptor_;
  metadata.reflection = Proto30400603_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31401702::kIllusClassIdFieldNumber;
const int Proto31401702::kIllusGroupIdFieldNumber;
const int Proto31401702::kIllusLevelFieldNumber;
#endif  // !_MSC_VER

Proto31401702::Proto31401702()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31401702::InitAsDefaultInstance() {
}

Proto31401702::Proto31401702(const Proto31401702& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31401702::SharedCtor() {
  _cached_size_ = 0;
  illus_class_id_ = 0;
  illus_group_id_ = 0;
  illus_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31401702::~Proto31401702() {
  SharedDtor();
}

void Proto31401702::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31401702::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31401702::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31401702_descriptor_;
}

const Proto31401702& Proto31401702::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31401702* Proto31401702::default_instance_ = NULL;

Proto31401702* Proto31401702::New() const {
  return new Proto31401702;
}

void Proto31401702::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    illus_class_id_ = 0;
    illus_group_id_ = 0;
    illus_level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31401702::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 illus_class_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &illus_class_id_)));
          set_has_illus_class_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_illus_group_id;
        break;
      }
      
      // optional int32 illus_group_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_illus_group_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &illus_group_id_)));
          set_has_illus_group_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_illus_level;
        break;
      }
      
      // optional int32 illus_level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_illus_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &illus_level_)));
          set_has_illus_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31401702::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 illus_class_id = 1;
  if (has_illus_class_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->illus_class_id(), output);
  }
  
  // optional int32 illus_group_id = 2;
  if (has_illus_group_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->illus_group_id(), output);
  }
  
  // optional int32 illus_level = 3;
  if (has_illus_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->illus_level(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31401702::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 illus_class_id = 1;
  if (has_illus_class_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->illus_class_id(), target);
  }
  
  // optional int32 illus_group_id = 2;
  if (has_illus_group_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->illus_group_id(), target);
  }
  
  // optional int32 illus_level = 3;
  if (has_illus_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->illus_level(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31401702::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 illus_class_id = 1;
    if (has_illus_class_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->illus_class_id());
    }
    
    // optional int32 illus_group_id = 2;
    if (has_illus_group_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->illus_group_id());
    }
    
    // optional int32 illus_level = 3;
    if (has_illus_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->illus_level());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31401702::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31401702* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31401702*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31401702::MergeFrom(const Proto31401702& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_illus_class_id()) {
      set_illus_class_id(from.illus_class_id());
    }
    if (from.has_illus_group_id()) {
      set_illus_group_id(from.illus_group_id());
    }
    if (from.has_illus_level()) {
      set_illus_level(from.illus_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31401702::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31401702::CopyFrom(const Proto31401702& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31401702::IsInitialized() const {
  
  return true;
}

void Proto31401702::Swap(Proto31401702* other) {
  if (other != this) {
    std::swap(illus_class_id_, other->illus_class_id_);
    std::swap(illus_group_id_, other->illus_group_id_);
    std::swap(illus_level_, other->illus_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31401702::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31401702_descriptor_;
  metadata.reflection = Proto31401702_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400160::kCurClassIdFieldNumber;
const int Proto31400160::kIllusGroupListFieldNumber;
const int Proto31400160::kIllusListFieldNumber;
const int Proto31400160::kIllusLevelListFieldNumber;
#endif  // !_MSC_VER

Proto31400160::Proto31400160()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400160::InitAsDefaultInstance() {
}

Proto31400160::Proto31400160(const Proto31400160& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400160::SharedCtor() {
  _cached_size_ = 0;
  cur_class_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400160::~Proto31400160() {
  SharedDtor();
}

void Proto31400160::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400160::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400160::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400160_descriptor_;
}

const Proto31400160& Proto31400160::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31400160* Proto31400160::default_instance_ = NULL;

Proto31400160* Proto31400160::New() const {
  return new Proto31400160;
}

void Proto31400160::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_class_id_ = 0;
  }
  illus_group_list_.Clear();
  illus_list_.Clear();
  illus_level_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400160::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_class_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_class_id_)));
          set_has_cur_class_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_illus_group_list;
        break;
      }
      
      // repeated int32 illus_group_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_illus_group_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_illus_group_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_illus_group_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_illus_group_list;
        if (input->ExpectTag(24)) goto parse_illus_list;
        break;
      }
      
      // repeated int32 illus_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_illus_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_illus_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_illus_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_illus_list;
        if (input->ExpectTag(32)) goto parse_illus_level_list;
        break;
      }
      
      // repeated int32 illus_level_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_illus_level_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_illus_level_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_illus_level_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_illus_level_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400160::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_class_id = 1;
  if (has_cur_class_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_class_id(), output);
  }
  
  // repeated int32 illus_group_list = 2;
  for (int i = 0; i < this->illus_group_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->illus_group_list(i), output);
  }
  
  // repeated int32 illus_list = 3;
  for (int i = 0; i < this->illus_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->illus_list(i), output);
  }
  
  // repeated int32 illus_level_list = 4;
  for (int i = 0; i < this->illus_level_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->illus_level_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400160::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_class_id = 1;
  if (has_cur_class_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_class_id(), target);
  }
  
  // repeated int32 illus_group_list = 2;
  for (int i = 0; i < this->illus_group_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->illus_group_list(i), target);
  }
  
  // repeated int32 illus_list = 3;
  for (int i = 0; i < this->illus_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->illus_list(i), target);
  }
  
  // repeated int32 illus_level_list = 4;
  for (int i = 0; i < this->illus_level_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->illus_level_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400160::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_class_id = 1;
    if (has_cur_class_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_class_id());
    }
    
  }
  // repeated int32 illus_group_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->illus_group_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->illus_group_list(i));
    }
    total_size += 1 * this->illus_group_list_size() + data_size;
  }
  
  // repeated int32 illus_list = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->illus_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->illus_list(i));
    }
    total_size += 1 * this->illus_list_size() + data_size;
  }
  
  // repeated int32 illus_level_list = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->illus_level_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->illus_level_list(i));
    }
    total_size += 1 * this->illus_level_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400160::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400160* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400160*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400160::MergeFrom(const Proto31400160& from) {
  GOOGLE_CHECK_NE(&from, this);
  illus_group_list_.MergeFrom(from.illus_group_list_);
  illus_list_.MergeFrom(from.illus_list_);
  illus_level_list_.MergeFrom(from.illus_level_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_class_id()) {
      set_cur_class_id(from.cur_class_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400160::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400160::CopyFrom(const Proto31400160& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400160::IsInitialized() const {
  
  return true;
}

void Proto31400160::Swap(Proto31400160* other) {
  if (other != this) {
    std::swap(cur_class_id_, other->cur_class_id_);
    illus_group_list_.Swap(&other->illus_group_list_);
    illus_list_.Swap(&other->illus_list_);
    illus_level_list_.Swap(&other->illus_level_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400160::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400160_descriptor_;
  metadata.reflection = Proto31400160_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400321::kItemIdFieldNumber;
const int Proto31400321::kFeedNumFieldNumber;
#endif  // !_MSC_VER

Proto31400321::Proto31400321()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400321::InitAsDefaultInstance() {
}

Proto31400321::Proto31400321(const Proto31400321& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400321::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  feed_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400321::~Proto31400321() {
  SharedDtor();
}

void Proto31400321::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400321::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400321::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400321_descriptor_;
}

const Proto31400321& Proto31400321::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31400321* Proto31400321::default_instance_ = NULL;

Proto31400321* Proto31400321::New() const {
  return new Proto31400321;
}

void Proto31400321::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    feed_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400321::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_feed_num;
        break;
      }
      
      // optional int32 feed_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_feed_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &feed_num_)));
          set_has_feed_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400321::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 feed_num = 2;
  if (has_feed_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->feed_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400321::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 feed_num = 2;
  if (has_feed_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->feed_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400321::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 feed_num = 2;
    if (has_feed_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->feed_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400321::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400321* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400321*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400321::MergeFrom(const Proto31400321& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_feed_num()) {
      set_feed_num(from.feed_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400321::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400321::CopyFrom(const Proto31400321& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400321::IsInitialized() const {
  
  return true;
}

void Proto31400321::Swap(Proto31400321* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(feed_num_, other->feed_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400321::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400321_descriptor_;
  metadata.reflection = Proto31400321_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400322::kSummonTypeFieldNumber;
const int Proto31400322::kRoleIdFieldNumber;
const int Proto31400322::kBossIndexFieldNumber;
const int Proto31400322::kLeagueIndexFieldNumber;
const int Proto31400322::kFlagLvFieldNumber;
#endif  // !_MSC_VER

Proto31400322::Proto31400322()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400322::InitAsDefaultInstance() {
}

Proto31400322::Proto31400322(const Proto31400322& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400322::SharedCtor() {
  _cached_size_ = 0;
  summon_type_ = 0;
  role_id_ = 0;
  boss_index_ = 0;
  league_index_ = GOOGLE_LONGLONG(0);
  flag_lv_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400322::~Proto31400322() {
  SharedDtor();
}

void Proto31400322::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400322::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400322::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400322_descriptor_;
}

const Proto31400322& Proto31400322::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31400322* Proto31400322::default_instance_ = NULL;

Proto31400322* Proto31400322::New() const {
  return new Proto31400322;
}

void Proto31400322::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    summon_type_ = 0;
    role_id_ = 0;
    boss_index_ = 0;
    league_index_ = GOOGLE_LONGLONG(0);
    flag_lv_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400322::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 summon_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &summon_type_)));
          set_has_summon_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_id;
        break;
      }
      
      // optional int32 role_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_boss_index;
        break;
      }
      
      // optional int32 boss_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_boss_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boss_index_)));
          set_has_boss_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_league_index;
        break;
      }
      
      // optional int64 league_index = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_index_)));
          set_has_league_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_flag_lv;
        break;
      }
      
      // optional int32 flag_lv = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flag_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_lv_)));
          set_has_flag_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400322::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 summon_type = 1;
  if (has_summon_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->summon_type(), output);
  }
  
  // optional int32 role_id = 2;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->role_id(), output);
  }
  
  // optional int32 boss_index = 3;
  if (has_boss_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->boss_index(), output);
  }
  
  // optional int64 league_index = 4;
  if (has_league_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->league_index(), output);
  }
  
  // optional int32 flag_lv = 5;
  if (has_flag_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->flag_lv(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400322::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 summon_type = 1;
  if (has_summon_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->summon_type(), target);
  }
  
  // optional int32 role_id = 2;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->role_id(), target);
  }
  
  // optional int32 boss_index = 3;
  if (has_boss_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->boss_index(), target);
  }
  
  // optional int64 league_index = 4;
  if (has_league_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->league_index(), target);
  }
  
  // optional int32 flag_lv = 5;
  if (has_flag_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->flag_lv(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400322::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 summon_type = 1;
    if (has_summon_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->summon_type());
    }
    
    // optional int32 role_id = 2;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->role_id());
    }
    
    // optional int32 boss_index = 3;
    if (has_boss_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boss_index());
    }
    
    // optional int64 league_index = 4;
    if (has_league_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_index());
    }
    
    // optional int32 flag_lv = 5;
    if (has_flag_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag_lv());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400322::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400322* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400322*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400322::MergeFrom(const Proto31400322& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_summon_type()) {
      set_summon_type(from.summon_type());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_boss_index()) {
      set_boss_index(from.boss_index());
    }
    if (from.has_league_index()) {
      set_league_index(from.league_index());
    }
    if (from.has_flag_lv()) {
      set_flag_lv(from.flag_lv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400322::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400322::CopyFrom(const Proto31400322& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400322::IsInitialized() const {
  
  return true;
}

void Proto31400322::Swap(Proto31400322* other) {
  if (other != this) {
    std::swap(summon_type_, other->summon_type_);
    std::swap(role_id_, other->role_id_);
    std::swap(boss_index_, other->boss_index_);
    std::swap(league_index_, other->league_index_);
    std::swap(flag_lv_, other->flag_lv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400322::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400322_descriptor_;
  metadata.reflection = Proto31400322_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400604::kChestNumFieldNumber;
const int Proto30400604::kChestCoordFieldNumber;
const int Proto30400604::kAwardIdFieldNumber;
#endif  // !_MSC_VER

Proto30400604::Proto30400604()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400604::InitAsDefaultInstance() {
  chest_coord_ = const_cast< ::ProtoCoord*>(&::ProtoCoord::default_instance());
}

Proto30400604::Proto30400604(const Proto30400604& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400604::SharedCtor() {
  _cached_size_ = 0;
  chest_num_ = 0;
  chest_coord_ = NULL;
  award_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400604::~Proto30400604() {
  SharedDtor();
}

void Proto30400604::SharedDtor() {
  if (this != default_instance_) {
    delete chest_coord_;
  }
}

void Proto30400604::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400604::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400604_descriptor_;
}

const Proto30400604& Proto30400604::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30400604* Proto30400604::default_instance_ = NULL;

Proto30400604* Proto30400604::New() const {
  return new Proto30400604;
}

void Proto30400604::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    chest_num_ = 0;
    if (has_chest_coord()) {
      if (chest_coord_ != NULL) chest_coord_->::ProtoCoord::Clear();
    }
    award_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400604::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 chest_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chest_num_)));
          set_has_chest_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_chest_coord;
        break;
      }
      
      // optional .ProtoCoord chest_coord = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_chest_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chest_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_award_id;
        break;
      }
      
      // optional int32 award_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_award_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &award_id_)));
          set_has_award_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400604::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 chest_num = 1;
  if (has_chest_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chest_num(), output);
  }
  
  // optional .ProtoCoord chest_coord = 2;
  if (has_chest_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->chest_coord(), output);
  }
  
  // optional int32 award_id = 3;
  if (has_award_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->award_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400604::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 chest_num = 1;
  if (has_chest_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chest_num(), target);
  }
  
  // optional .ProtoCoord chest_coord = 2;
  if (has_chest_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->chest_coord(), target);
  }
  
  // optional int32 award_id = 3;
  if (has_award_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->award_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400604::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 chest_num = 1;
    if (has_chest_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chest_num());
    }
    
    // optional .ProtoCoord chest_coord = 2;
    if (has_chest_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->chest_coord());
    }
    
    // optional int32 award_id = 3;
    if (has_award_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->award_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400604::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400604* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400604*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400604::MergeFrom(const Proto30400604& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chest_num()) {
      set_chest_num(from.chest_num());
    }
    if (from.has_chest_coord()) {
      mutable_chest_coord()->::ProtoCoord::MergeFrom(from.chest_coord());
    }
    if (from.has_award_id()) {
      set_award_id(from.award_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400604::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400604::CopyFrom(const Proto30400604& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400604::IsInitialized() const {
  
  return true;
}

void Proto30400604::Swap(Proto30400604* other) {
  if (other != this) {
    std::swap(chest_num_, other->chest_num_);
    std::swap(chest_coord_, other->chest_coord_);
    std::swap(award_id_, other->award_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400604::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400604_descriptor_;
  metadata.reflection = Proto30400604_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400161::kCycleIdFieldNumber;
const int Proto31400161::kCollectNumFieldNumber;
const int Proto31400161::kChestSceneIdFieldNumber;
const int Proto31400161::kPlayerAwardListFieldNumber;
const int Proto31400161::kOnlineSumFieldNumber;
const int Proto31400161::kLoginTimeFieldNumber;
#endif  // !_MSC_VER

Proto31400161::Proto31400161()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400161::InitAsDefaultInstance() {
}

Proto31400161::Proto31400161(const Proto31400161& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400161::SharedCtor() {
  _cached_size_ = 0;
  cycle_id_ = 0;
  collect_num_ = 0;
  chest_scene_id_ = 0;
  online_sum_ = GOOGLE_LONGLONG(0);
  login_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400161::~Proto31400161() {
  SharedDtor();
}

void Proto31400161::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400161::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400161::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400161_descriptor_;
}

const Proto31400161& Proto31400161::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto31400161* Proto31400161::default_instance_ = NULL;

Proto31400161* Proto31400161::New() const {
  return new Proto31400161;
}

void Proto31400161::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cycle_id_ = 0;
    collect_num_ = 0;
    chest_scene_id_ = 0;
    online_sum_ = GOOGLE_LONGLONG(0);
    login_time_ = GOOGLE_LONGLONG(0);
  }
  player_award_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400161::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cycle_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cycle_id_)));
          set_has_cycle_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_collect_num;
        break;
      }
      
      // optional int32 collect_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_collect_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &collect_num_)));
          set_has_collect_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_chest_scene_id;
        break;
      }
      
      // optional int32 chest_scene_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_chest_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chest_scene_id_)));
          set_has_chest_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_player_award_list;
        break;
      }
      
      // repeated int32 player_award_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_award_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_player_award_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_award_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_player_award_list;
        if (input->ExpectTag(40)) goto parse_online_sum;
        break;
      }
      
      // optional int64 online_sum = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_online_sum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &online_sum_)));
          set_has_online_sum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_login_time;
        break;
      }
      
      // optional int64 login_time = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_login_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &login_time_)));
          set_has_login_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400161::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cycle_id = 1;
  if (has_cycle_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cycle_id(), output);
  }
  
  // optional int32 collect_num = 2;
  if (has_collect_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->collect_num(), output);
  }
  
  // optional int32 chest_scene_id = 3;
  if (has_chest_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->chest_scene_id(), output);
  }
  
  // repeated int32 player_award_list = 4;
  for (int i = 0; i < this->player_award_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->player_award_list(i), output);
  }
  
  // optional int64 online_sum = 5;
  if (has_online_sum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->online_sum(), output);
  }
  
  // optional int64 login_time = 6;
  if (has_login_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->login_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400161::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cycle_id = 1;
  if (has_cycle_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cycle_id(), target);
  }
  
  // optional int32 collect_num = 2;
  if (has_collect_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->collect_num(), target);
  }
  
  // optional int32 chest_scene_id = 3;
  if (has_chest_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->chest_scene_id(), target);
  }
  
  // repeated int32 player_award_list = 4;
  for (int i = 0; i < this->player_award_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->player_award_list(i), target);
  }
  
  // optional int64 online_sum = 5;
  if (has_online_sum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->online_sum(), target);
  }
  
  // optional int64 login_time = 6;
  if (has_login_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->login_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400161::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cycle_id = 1;
    if (has_cycle_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cycle_id());
    }
    
    // optional int32 collect_num = 2;
    if (has_collect_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->collect_num());
    }
    
    // optional int32 chest_scene_id = 3;
    if (has_chest_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chest_scene_id());
    }
    
    // optional int64 online_sum = 5;
    if (has_online_sum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->online_sum());
    }
    
    // optional int64 login_time = 6;
    if (has_login_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->login_time());
    }
    
  }
  // repeated int32 player_award_list = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->player_award_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->player_award_list(i));
    }
    total_size += 1 * this->player_award_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400161::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400161* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400161*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400161::MergeFrom(const Proto31400161& from) {
  GOOGLE_CHECK_NE(&from, this);
  player_award_list_.MergeFrom(from.player_award_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cycle_id()) {
      set_cycle_id(from.cycle_id());
    }
    if (from.has_collect_num()) {
      set_collect_num(from.collect_num());
    }
    if (from.has_chest_scene_id()) {
      set_chest_scene_id(from.chest_scene_id());
    }
    if (from.has_online_sum()) {
      set_online_sum(from.online_sum());
    }
    if (from.has_login_time()) {
      set_login_time(from.login_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400161::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400161::CopyFrom(const Proto31400161& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400161::IsInitialized() const {
  
  return true;
}

void Proto31400161::Swap(Proto31400161* other) {
  if (other != this) {
    std::swap(cycle_id_, other->cycle_id_);
    std::swap(collect_num_, other->collect_num_);
    std::swap(chest_scene_id_, other->chest_scene_id_);
    player_award_list_.Swap(&other->player_award_list_);
    std::swap(online_sum_, other->online_sum_);
    std::swap(login_time_, other->login_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400161::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400161_descriptor_;
  metadata.reflection = Proto31400161_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400450::kLeagueIndexFieldNumber;
const int Proto30400450::kFlagLvlFieldNumber;
const int Proto30400450::kLeaderFieldNumber;
const int Proto30400450::kForceFieldNumber;
const int Proto30400450::kNameFieldNumber;
const int Proto30400450::kLeaderIndexFieldNumber;
#endif  // !_MSC_VER

Proto30400450::Proto30400450()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400450::InitAsDefaultInstance() {
}

Proto30400450::Proto30400450(const Proto30400450& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400450::SharedCtor() {
  _cached_size_ = 0;
  league_index_ = GOOGLE_LONGLONG(0);
  flag_lvl_ = 0;
  leader_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  force_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  leader_index_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400450::~Proto30400450() {
  SharedDtor();
}

void Proto30400450::SharedDtor() {
  if (leader_ != &::google::protobuf::internal::kEmptyString) {
    delete leader_;
  }
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Proto30400450::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400450::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400450_descriptor_;
}

const Proto30400450& Proto30400450::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner007_2eproto();  return *default_instance_;
}

Proto30400450* Proto30400450::default_instance_ = NULL;

Proto30400450* Proto30400450::New() const {
  return new Proto30400450;
}

void Proto30400450::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_index_ = GOOGLE_LONGLONG(0);
    flag_lvl_ = 0;
    if (has_leader()) {
      if (leader_ != &::google::protobuf::internal::kEmptyString) {
        leader_->clear();
      }
    }
    force_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    leader_index_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400450::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 league_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_index_)));
          set_has_league_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_flag_lvl;
        break;
      }
      
      // optional int32 flag_lvl = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flag_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_lvl_)));
          set_has_flag_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_leader;
        break;
      }
      
      // optional string leader = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_leader:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->leader().data(), this->leader().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_force;
        break;
      }
      
      // optional int32 force = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_name;
        break;
      }
      
      // optional string name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_leader_index;
        break;
      }
      
      // optional int64 leader_index = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leader_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &leader_index_)));
          set_has_leader_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400450::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->league_index(), output);
  }
  
  // optional int32 flag_lvl = 2;
  if (has_flag_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->flag_lvl(), output);
  }
  
  // optional string leader = 3;
  if (has_leader()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leader().data(), this->leader().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->leader(), output);
  }
  
  // optional int32 force = 4;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->force(), output);
  }
  
  // optional string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->name(), output);
  }
  
  // optional int64 leader_index = 6;
  if (has_leader_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->leader_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400450::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->league_index(), target);
  }
  
  // optional int32 flag_lvl = 2;
  if (has_flag_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->flag_lvl(), target);
  }
  
  // optional string leader = 3;
  if (has_leader()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leader().data(), this->leader().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->leader(), target);
  }
  
  // optional int32 force = 4;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->force(), target);
  }
  
  // optional string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }
  
  // optional int64 leader_index = 6;
  if (has_leader_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->leader_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400450::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 league_index = 1;
    if (has_league_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_index());
    }
    
    // optional int32 flag_lvl = 2;
    if (has_flag_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag_lvl());
    }
    
    // optional string leader = 3;
    if (has_leader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->leader());
    }
    
    // optional int32 force = 4;
    if (has_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->force());
    }
    
    // optional string name = 5;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // optional int64 leader_index = 6;
    if (has_leader_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->leader_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400450::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400450* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400450*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400450::MergeFrom(const Proto30400450& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_index()) {
      set_league_index(from.league_index());
    }
    if (from.has_flag_lvl()) {
      set_flag_lvl(from.flag_lvl());
    }
    if (from.has_leader()) {
      set_leader(from.leader());
    }
    if (from.has_force()) {
      set_force(from.force());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_leader_index()) {
      set_leader_index(from.leader_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400450::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400450::CopyFrom(const Proto30400450& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400450::IsInitialized() const {
  
  return true;
}

void Proto30400450::Swap(Proto30400450* other) {
  if (other != this) {
    std::swap(league_index_, other->league_index_);
    std::swap(flag_lvl_, other->flag_lvl_);
    std::swap(leader_, other->leader_);
    std::swap(force_, other->force_);
    std::swap(name_, other->name_);
    std::swap(leader_index_, other->leader_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400450::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400450_descriptor_;
  metadata.reflection = Proto30400450_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
