// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient005.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto10100310_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100310_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400306_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400306_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400309_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400309_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400310_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400310_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400901_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400901_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400902_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400902_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400903_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400903_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400903_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400903_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400302_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400302_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400303_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400303_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400331_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400331_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400332_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400332_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400701_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400701_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400702_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400702_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400702_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400702_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400701_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400701_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400904_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400904_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400904_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400904_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400901_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400901_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400908_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400908_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401102_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401102_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401101_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401101_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401101_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401101_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401102_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401102_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400703_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400703_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400703_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400703_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400704_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400704_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400704_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400704_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400706_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400706_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400901_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400901_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400901_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400901_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400901_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400901_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400903_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400903_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400902_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400902_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400903_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400903_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400111_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400111_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400110_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400110_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400600_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400600_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401201_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401201_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10002_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10004_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10004_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10005_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10005_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400904_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400904_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400501_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400501_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400109_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400109_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10200007_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10200007_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50200007_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50200007_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400002_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient005_2eproto() {
  protobuf_AddDesc_ProtoClient005_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient005.proto");
  GOOGLE_CHECK(file != NULL);
  Proto10100310_descriptor_ = file->message_type(0);
  static const int Proto10100310_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100310, respone_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100310, role_id_),
  };
  Proto10100310_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100310_descriptor_,
      Proto10100310::default_instance_,
      Proto10100310_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100310, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100310, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100310));
  Proto80400306_descriptor_ = file->message_type(1);
  static const int Proto80400306_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400306, teamer_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400306, leader_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400306, team_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400306, no_team_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400306, auto_invite_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400306, auto_accept_),
  };
  Proto80400306_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400306_descriptor_,
      Proto80400306::default_instance_,
      Proto80400306_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400306, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400306, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400306));
  Proto80400309_descriptor_ = file->message_type(2);
  static const int Proto80400309_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400309, oper_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400309, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400309, role_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400309, role_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400309, fight_force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400309, league_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400309, other_info_),
  };
  Proto80400309_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400309_descriptor_,
      Proto80400309::default_instance_,
      Proto80400309_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400309, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400309, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400309));
  Proto80400310_descriptor_ = file->message_type(3);
  static const int Proto80400310_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400310, oper_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400310, oper_result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400310, oper_name_),
  };
  Proto80400310_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400310_descriptor_,
      Proto80400310::default_instance_,
      Proto80400310_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400310, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400310, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400310));
  Proto51400901_descriptor_ = file->message_type(4);
  static const int Proto51400901_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400901, divine_items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400901, obtained_items_),
  };
  Proto51400901_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400901_descriptor_,
      Proto51400901::default_instance_,
      Proto51400901_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400901, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400901, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400901));
  Proto51400902_descriptor_ = file->message_type(5);
  static const int Proto51400902_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400902, luck_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400902, left_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400902, cost_one_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400902, cost_ten_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400902, left_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400902, cost_fifty_),
  };
  Proto51400902_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400902_descriptor_,
      Proto51400902::default_instance_,
      Proto51400902_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400902, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400902, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400902));
  Proto11400903_descriptor_ = file->message_type(6);
  static const int Proto11400903_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400903, is_force_buy_),
  };
  Proto11400903_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400903_descriptor_,
      Proto11400903::default_instance_,
      Proto11400903_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400903, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400903, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400903));
  Proto51400903_descriptor_ = file->message_type(7);
  static const int Proto51400903_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400903, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400903, lack_copper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400903, lack_bind_copper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400903, need_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400903, cur_lucky_),
  };
  Proto51400903_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400903_descriptor_,
      Proto51400903::default_instance_,
      Proto51400903_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400903, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400903, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400903));
  Proto10400302_descriptor_ = file->message_type(8);
  static const int Proto10400302_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400302, team_side_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400302, team_pos_),
  };
  Proto10400302_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400302_descriptor_,
      Proto10400302::default_instance_,
      Proto10400302_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400302, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400302, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400302));
  Proto10400303_descriptor_ = file->message_type(9);
  static const int Proto10400303_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400303, add_hits_),
  };
  Proto10400303_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400303_descriptor_,
      Proto10400303::default_instance_,
      Proto10400303_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400303, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400303, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400303));
  Proto80400331_descriptor_ = file->message_type(10);
  static const int Proto80400331_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400331, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400331, red_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400331, blue_score_),
  };
  Proto80400331_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400331_descriptor_,
      Proto80400331::default_instance_,
      Proto80400331_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400331, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400331, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400331));
  Proto80400332_descriptor_ = file->message_type(11);
  static const int Proto80400332_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400332, add_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400332, total_exp_),
  };
  Proto80400332_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400332_descriptor_,
      Proto80400332::default_instance_,
      Proto80400332_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400332, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400332, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400332));
  Proto51400701_descriptor_ = file->message_type(12);
  static const int Proto51400701_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400701, cur_label_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400701, permant_label_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400701, limit_time_label_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400701, prop_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400701, unshown_list_),
  };
  Proto51400701_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400701_descriptor_,
      Proto51400701::default_instance_,
      Proto51400701_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400701, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400701, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400701));
  Proto11400702_descriptor_ = file->message_type(13);
  static const int Proto11400702_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400702, label_id_),
  };
  Proto11400702_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400702_descriptor_,
      Proto11400702::default_instance_,
      Proto11400702_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400702, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400702, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400702));
  Proto51400702_descriptor_ = file->message_type(14);
  static const int Proto51400702_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400702, label_id_),
  };
  Proto51400702_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400702_descriptor_,
      Proto51400702::default_instance_,
      Proto51400702_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400702, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400702, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400702));
  Proto81400701_descriptor_ = file->message_type(15);
  static const int Proto81400701_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400701, operate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400701, label_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400701, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400701, prop_list_),
  };
  Proto81400701_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400701_descriptor_,
      Proto81400701::default_instance_,
      Proto81400701_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400701, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400701, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400701));
  Proto11400904_descriptor_ = file->message_type(16);
  static const int Proto11400904_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400904, is_force_buy_),
  };
  Proto11400904_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400904_descriptor_,
      Proto11400904::default_instance_,
      Proto11400904_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400904, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400904, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400904));
  Proto51400904_descriptor_ = file->message_type(17);
  static const int Proto51400904_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400904, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400904, lack_copper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400904, lack_bind_copper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400904, need_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400904, cur_lucky_),
  };
  Proto51400904_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400904_descriptor_,
      Proto51400904::default_instance_,
      Proto51400904_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400904, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400904, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400904));
  Proto81400901_descriptor_ = file->message_type(18);
  static const int Proto81400901_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400901, record_list_),
  };
  Proto81400901_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400901_descriptor_,
      Proto81400901::default_instance_,
      Proto81400901_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400901, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400901, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400901));
  Proto51400908_descriptor_ = file->message_type(19);
  static const int Proto51400908_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400908, record_list_),
  };
  Proto51400908_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400908_descriptor_,
      Proto51400908::default_instance_,
      Proto51400908_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400908, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400908, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400908));
  Proto11401102_descriptor_ = file->message_type(20);
  static const int Proto11401102_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401102, ach_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401102, achieve_id_),
  };
  Proto11401102_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401102_descriptor_,
      Proto11401102::default_instance_,
      Proto11401102_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401102, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401102, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401102));
  Proto81401101_descriptor_ = file->message_type(21);
  static const int Proto81401101_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401101, achieve_id_),
  };
  Proto81401101_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401101_descriptor_,
      Proto81401101::default_instance_,
      Proto81401101_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401101, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401101, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401101));
  Proto51401101_descriptor_ = file->message_type(22);
  static const int Proto51401101_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401101, achieve_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401101, achieve_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401101, point_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401101, progress_),
  };
  Proto51401101_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401101_descriptor_,
      Proto51401101::default_instance_,
      Proto51401101_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401101, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401101, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401101));
  Proto51401102_descriptor_ = file->message_type(23);
  static const int Proto51401102_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401102, achieve_id_),
  };
  Proto51401102_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401102_descriptor_,
      Proto51401102::default_instance_,
      Proto51401102_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401102, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401102, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401102));
  Proto11400703_descriptor_ = file->message_type(24);
  static const int Proto11400703_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400703, label_id_),
  };
  Proto11400703_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400703_descriptor_,
      Proto11400703::default_instance_,
      Proto11400703_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400703, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400703, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400703));
  Proto51400703_descriptor_ = file->message_type(25);
  static const int Proto51400703_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400703, label_id_),
  };
  Proto51400703_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400703_descriptor_,
      Proto51400703::default_instance_,
      Proto51400703_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400703, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400703, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400703));
  Proto11400704_descriptor_ = file->message_type(26);
  static const int Proto11400704_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400704, label_id_),
  };
  Proto11400704_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400704_descriptor_,
      Proto11400704::default_instance_,
      Proto11400704_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400704, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400704, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400704));
  Proto51400704_descriptor_ = file->message_type(27);
  static const int Proto51400704_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400704, label_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400704, left_time_),
  };
  Proto51400704_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400704_descriptor_,
      Proto51400704::default_instance_,
      Proto51400704_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400704, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400704, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400704));
  Proto50400706_descriptor_ = file->message_type(28);
  static const int Proto50400706_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400706, skill_list_),
  };
  Proto50400706_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400706_descriptor_,
      Proto50400706::default_instance_,
      Proto50400706_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400706, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400706, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400706));
  Proto10400901_descriptor_ = file->message_type(29);
  static const int Proto10400901_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400901, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400901, piece_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400901, chapter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400901, replacements_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400901, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400901, team_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400901, cheer_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400901, encourage_num_),
  };
  Proto10400901_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400901_descriptor_,
      Proto10400901::default_instance_,
      Proto10400901_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400901, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400901, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400901));
  Proto50400901_descriptor_ = file->message_type(30);
  static const int Proto50400901_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400901, day_pass_time_),
  };
  Proto50400901_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400901_descriptor_,
      Proto50400901::default_instance_,
      Proto50400901_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400901, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400901, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400901));
  Proto80400901_descriptor_ = file->message_type(31);
  static const int Proto80400901_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400901, even_cut_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400901, prop_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400901, max_even_cut_),
  };
  Proto80400901_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400901_descriptor_,
      Proto80400901::default_instance_,
      Proto80400901_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400901, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400901, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400901));
  Proto50400903_descriptor_ = file->message_type(32);
  static const int Proto50400903_offsets_[32] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, left_sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, total_sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, left_relive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, total_relive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, left_monster_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, total_monster_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, monster_rec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, top_evencut_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, script_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, killed_monster_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, current_wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, current_floor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, protect_npc_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, protect_npc_maxblood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, piece_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, chapter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, used_sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, puppet_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, rescue_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, rescue_left_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, poem_text_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, poem_appear_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, poem_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, is_first_script_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, difficulty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, day_pass_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, hatch_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, hatch_cond_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, total_wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, begin_wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, get_exp_),
  };
  Proto50400903_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400903_descriptor_,
      Proto50400903::default_instance_,
      Proto50400903_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400903, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400903));
  Proto80400902_descriptor_ = file->message_type(33);
  static const int Proto80400902_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400902, left_monster_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400902, total_monster_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400902, monster_rec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400902, killed_monster_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400902, hatch_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400902, hatch_cond_),
  };
  Proto80400902_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400902_descriptor_,
      Proto80400902::default_instance_,
      Proto80400902_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400902, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400902, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400902));
  Proto80400903_descriptor_ = file->message_type(34);
  static const int Proto80400903_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400903, left_relive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400903, total_relive_),
  };
  Proto80400903_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400903_descriptor_,
      Proto80400903::default_instance_,
      Proto80400903_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400903, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400903, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400903));
  Proto10400111_descriptor_ = file->message_type(35);
  static const int Proto10400111_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400111, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400111, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400111, pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400111, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400111, client_type_),
  };
  Proto10400111_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400111_descriptor_,
      Proto10400111::default_instance_,
      Proto10400111_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400111, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400111, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400111));
  Proto50400110_descriptor_ = file->message_type(36);
  static const int Proto50400110_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400110, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400110, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400110, pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400110, is_first_enter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400110, space_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400110, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400110, client_type_),
  };
  Proto50400110_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400110_descriptor_,
      Proto50400110::default_instance_,
      Proto50400110_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400110, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400110, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400110));
  Proto51400600_descriptor_ = file->message_type(37);
  static const int Proto51400600_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400600, refine_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400600, refine_degree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400600, cost_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400600, cost_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400600, atual_cost_money_),
  };
  Proto51400600_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400600_descriptor_,
      Proto51400600::default_instance_,
      Proto51400600_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400600, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400600, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400600));
  Proto81401201_descriptor_ = file->message_type(38);
  static const int Proto81401201_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401201, activity_info_),
  };
  Proto81401201_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401201_descriptor_,
      Proto81401201::default_instance_,
      Proto81401201_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401201, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401201, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401201));
  Proto10001_descriptor_ = file->message_type(39);
  static const int Proto10001_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10001, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10001, refine_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10001, is_brighten_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10001, bind_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10001, luck_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10001, jewel_lists_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10001, extras_attr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10001, base_polish_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10001, special_jewel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10001, special_jewels_),
  };
  Proto10001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10001_descriptor_,
      Proto10001::default_instance_,
      Proto10001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10001));
  Proto10002_descriptor_ = file->message_type(40);
  static const int Proto10002_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10002, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10002, bind_status_),
  };
  Proto10002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10002_descriptor_,
      Proto10002::default_instance_,
      Proto10002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10002));
  Proto10003_descriptor_ = file->message_type(41);
  static const int Proto10003_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10003, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10003, is_limit_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10003, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10003, bind_status_),
  };
  Proto10003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10003_descriptor_,
      Proto10003::default_instance_,
      Proto10003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10003));
  Proto10004_descriptor_ = file->message_type(42);
  static const int Proto10004_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10004, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10004, sub_item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10004, bind_status_),
  };
  Proto10004_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10004_descriptor_,
      Proto10004::default_instance_,
      Proto10004_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10004, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10004, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10004));
  Proto10005_descriptor_ = file->message_type(43);
  static const int Proto10005_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10005, pet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10005, pet_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10005, ablity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10005, pet_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10005, bind_status_),
  };
  Proto10005_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10005_descriptor_,
      Proto10005::default_instance_,
      Proto10005_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10005, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10005, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10005));
  Proto80400904_descriptor_ = file->message_type(44);
  static const int Proto80400904_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400904, current_wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400904, finish_wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400904, total_wave_),
  };
  Proto80400904_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400904_descriptor_,
      Proto80400904::default_instance_,
      Proto80400904_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400904, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400904, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400904));
  Proto10400501_descriptor_ = file->message_type(45);
  static const int Proto10400501_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400501, step_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400501, toward_),
  };
  Proto10400501_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400501_descriptor_,
      Proto10400501::default_instance_,
      Proto10400501_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400501, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400501, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400501));
  Proto50400109_descriptor_ = file->message_type(46);
  static const int Proto50400109_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400109, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400109, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400109, pixel_y_),
  };
  Proto50400109_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400109_descriptor_,
      Proto50400109::default_instance_,
      Proto50400109_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400109, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400109, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400109));
  Proto10200007_descriptor_ = file->message_type(47);
  static const int Proto10200007_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10200007, flaunt_id_),
  };
  Proto10200007_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10200007_descriptor_,
      Proto10200007::default_instance_,
      Proto10200007_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10200007, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10200007, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10200007));
  Proto50200007_descriptor_ = file->message_type(48);
  static const int Proto50200007_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50200007, flaunt_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50200007, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50200007, msg_),
  };
  Proto50200007_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50200007_descriptor_,
      Proto50200007::default_instance_,
      Proto50200007_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50200007, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50200007, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50200007));
  Proto10400002_descriptor_ = file->message_type(49);
  static const int Proto10400002_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400002, drop_id_),
  };
  Proto10400002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400002_descriptor_,
      Proto10400002::default_instance_,
      Proto10400002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400002));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient005_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100310_descriptor_, &Proto10100310::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400306_descriptor_, &Proto80400306::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400309_descriptor_, &Proto80400309::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400310_descriptor_, &Proto80400310::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400901_descriptor_, &Proto51400901::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400902_descriptor_, &Proto51400902::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400903_descriptor_, &Proto11400903::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400903_descriptor_, &Proto51400903::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400302_descriptor_, &Proto10400302::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400303_descriptor_, &Proto10400303::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400331_descriptor_, &Proto80400331::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400332_descriptor_, &Proto80400332::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400701_descriptor_, &Proto51400701::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400702_descriptor_, &Proto11400702::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400702_descriptor_, &Proto51400702::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400701_descriptor_, &Proto81400701::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400904_descriptor_, &Proto11400904::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400904_descriptor_, &Proto51400904::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400901_descriptor_, &Proto81400901::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400908_descriptor_, &Proto51400908::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401102_descriptor_, &Proto11401102::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401101_descriptor_, &Proto81401101::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401101_descriptor_, &Proto51401101::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401102_descriptor_, &Proto51401102::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400703_descriptor_, &Proto11400703::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400703_descriptor_, &Proto51400703::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400704_descriptor_, &Proto11400704::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400704_descriptor_, &Proto51400704::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400706_descriptor_, &Proto50400706::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400901_descriptor_, &Proto10400901::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400901_descriptor_, &Proto50400901::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400901_descriptor_, &Proto80400901::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400903_descriptor_, &Proto50400903::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400902_descriptor_, &Proto80400902::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400903_descriptor_, &Proto80400903::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400111_descriptor_, &Proto10400111::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400110_descriptor_, &Proto50400110::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400600_descriptor_, &Proto51400600::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401201_descriptor_, &Proto81401201::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10001_descriptor_, &Proto10001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10002_descriptor_, &Proto10002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10003_descriptor_, &Proto10003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10004_descriptor_, &Proto10004::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10005_descriptor_, &Proto10005::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400904_descriptor_, &Proto80400904::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400501_descriptor_, &Proto10400501::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400109_descriptor_, &Proto50400109::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10200007_descriptor_, &Proto10200007::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50200007_descriptor_, &Proto50200007::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400002_descriptor_, &Proto10400002::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient005_2eproto() {
  delete Proto10100310::default_instance_;
  delete Proto10100310_reflection_;
  delete Proto80400306::default_instance_;
  delete Proto80400306_reflection_;
  delete Proto80400309::default_instance_;
  delete Proto80400309_reflection_;
  delete Proto80400310::default_instance_;
  delete Proto80400310_reflection_;
  delete Proto51400901::default_instance_;
  delete Proto51400901_reflection_;
  delete Proto51400902::default_instance_;
  delete Proto51400902_reflection_;
  delete Proto11400903::default_instance_;
  delete Proto11400903_reflection_;
  delete Proto51400903::default_instance_;
  delete Proto51400903_reflection_;
  delete Proto10400302::default_instance_;
  delete Proto10400302_reflection_;
  delete Proto10400303::default_instance_;
  delete Proto10400303_reflection_;
  delete Proto80400331::default_instance_;
  delete Proto80400331_reflection_;
  delete Proto80400332::default_instance_;
  delete Proto80400332_reflection_;
  delete Proto51400701::default_instance_;
  delete Proto51400701_reflection_;
  delete Proto11400702::default_instance_;
  delete Proto11400702_reflection_;
  delete Proto51400702::default_instance_;
  delete Proto51400702_reflection_;
  delete Proto81400701::default_instance_;
  delete Proto81400701_reflection_;
  delete Proto11400904::default_instance_;
  delete Proto11400904_reflection_;
  delete Proto51400904::default_instance_;
  delete Proto51400904_reflection_;
  delete Proto81400901::default_instance_;
  delete Proto81400901_reflection_;
  delete Proto51400908::default_instance_;
  delete Proto51400908_reflection_;
  delete Proto11401102::default_instance_;
  delete Proto11401102_reflection_;
  delete Proto81401101::default_instance_;
  delete Proto81401101_reflection_;
  delete Proto51401101::default_instance_;
  delete Proto51401101_reflection_;
  delete Proto51401102::default_instance_;
  delete Proto51401102_reflection_;
  delete Proto11400703::default_instance_;
  delete Proto11400703_reflection_;
  delete Proto51400703::default_instance_;
  delete Proto51400703_reflection_;
  delete Proto11400704::default_instance_;
  delete Proto11400704_reflection_;
  delete Proto51400704::default_instance_;
  delete Proto51400704_reflection_;
  delete Proto50400706::default_instance_;
  delete Proto50400706_reflection_;
  delete Proto10400901::default_instance_;
  delete Proto10400901_reflection_;
  delete Proto50400901::default_instance_;
  delete Proto50400901_reflection_;
  delete Proto80400901::default_instance_;
  delete Proto80400901_reflection_;
  delete Proto50400903::default_instance_;
  delete Proto50400903_reflection_;
  delete Proto80400902::default_instance_;
  delete Proto80400902_reflection_;
  delete Proto80400903::default_instance_;
  delete Proto80400903_reflection_;
  delete Proto10400111::default_instance_;
  delete Proto10400111_reflection_;
  delete Proto50400110::default_instance_;
  delete Proto50400110_reflection_;
  delete Proto51400600::default_instance_;
  delete Proto51400600_reflection_;
  delete Proto81401201::default_instance_;
  delete Proto81401201_reflection_;
  delete Proto10001::default_instance_;
  delete Proto10001_reflection_;
  delete Proto10002::default_instance_;
  delete Proto10002_reflection_;
  delete Proto10003::default_instance_;
  delete Proto10003_reflection_;
  delete Proto10004::default_instance_;
  delete Proto10004_reflection_;
  delete Proto10005::default_instance_;
  delete Proto10005_reflection_;
  delete Proto80400904::default_instance_;
  delete Proto80400904_reflection_;
  delete Proto10400501::default_instance_;
  delete Proto10400501_reflection_;
  delete Proto50400109::default_instance_;
  delete Proto50400109_reflection_;
  delete Proto10200007::default_instance_;
  delete Proto10200007_reflection_;
  delete Proto50200007::default_instance_;
  delete Proto50200007_reflection_;
  delete Proto10400002::default_instance_;
  delete Proto10400002_reflection_;
}

void protobuf_AddDesc_ProtoClient005_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient005.proto\032\021ProtoPublic.prot"
    "o\"6\n\rProto10100310\022\024\n\014respone_type\030\001 \001(\005"
    "\022\017\n\007role_id\030\002 \003(\003\"\223\001\n\rProto80400306\022 \n\nt"
    "eamer_set\030\001 \003(\0132\014.ProtoTeamer\022\021\n\tleader_"
    "id\030\002 \001(\003\022\022\n\nteam_state\030\003 \001(\005\022\017\n\007no_team\030"
    "\004 \001(\005\022\023\n\013auto_invite\030\005 \001(\005\022\023\n\013auto_accep"
    "t\030\006 \001(\005\"\250\001\n\rProto80400309\022\021\n\toper_type\030\001"
    " \001(\005\022\017\n\007role_id\030\002 \001(\003\022\021\n\trole_name\030\003 \001(\t"
    "\022\022\n\nrole_level\030\004 \001(\005\022\023\n\013fight_force\030\005 \001("
    "\005\022\023\n\013league_name\030\006 \001(\t\022\"\n\nother_info\030\007 \001"
    "(\0132\016.ProtoThreeObj\"J\n\rProto80400310\022\021\n\to"
    "per_type\030\001 \001(\005\022\023\n\013oper_result\030\002 \001(\005\022\021\n\to"
    "per_name\030\003 \001(\t\"U\n\rProto51400901\022 \n\014divin"
    "e_items\030\001 \003(\0132\n.ProtoItem\022\"\n\016obtained_it"
    "ems\030\002 \003(\0132\n.ProtoItem\"\202\001\n\rProto51400902\022"
    "\022\n\nluck_value\030\001 \001(\005\022\022\n\nleft_times\030\002 \001(\005\022"
    "\020\n\010cost_one\030\003 \003(\005\022\020\n\010cost_ten\030\004 \003(\005\022\021\n\tl"
    "eft_gold\030\005 \001(\005\022\022\n\ncost_fifty\030\006 \003(\005\"%\n\rPr"
    "oto11400903\022\024\n\014is_force_buy\030\001 \001(\005\"\203\001\n\rPr"
    "oto51400903\022\035\n\titem_list\030\001 \003(\0132\n.ProtoIt"
    "em\022\023\n\013lack_copper\030\002 \001(\005\022\030\n\020lack_bind_cop"
    "per\030\003 \001(\005\022\021\n\tneed_gold\030\004 \001(\005\022\021\n\tcur_luck"
    "y\030\005 \001(\005\"4\n\rProto10400302\022\021\n\tteam_side\030\001 "
    "\001(\005\022\020\n\010team_pos\030\002 \001(\005\"!\n\rProto10400303\022\020"
    "\n\010add_hits\030\001 \001(\005\"I\n\rProto80400331\022\021\n\tlef"
    "t_time\030\001 \001(\005\022\021\n\tred_score\030\002 \001(\005\022\022\n\nblue_"
    "score\030\003 \001(\005\"3\n\rProto80400332\022\017\n\007add_exp\030"
    "\001 \001(\005\022\021\n\ttotal_exp\030\002 \001(\005\"\257\001\n\rProto514007"
    "01\022\024\n\014cur_label_id\030\001 \001(\005\022\032\n\022permant_labe"
    "l_list\030\002 \003(\005\0223\n\025limit_time_label_list\030\003 "
    "\003(\0132\024.ProtoLimitTimeLabel\022!\n\tprop_list\030\004"
    " \001(\0132\016.ProtoFightPro\022\024\n\014unshown_list\030\005 \003"
    "(\005\"!\n\rProto11400702\022\020\n\010label_id\030\001 \001(\005\"!\n"
    "\rProto51400702\022\020\n\010label_id\030\001 \001(\005\"h\n\rProt"
    "o81400701\022\017\n\007operate\030\001 \001(\005\022\020\n\010label_id\030\002"
    " \001(\005\022\021\n\tleft_time\030\003 \001(\005\022!\n\tprop_list\030\004 \001"
    "(\0132\016.ProtoFightPro\"%\n\rProto11400904\022\024\n\014i"
    "s_force_buy\030\001 \001(\005\"\203\001\n\rProto51400904\022\035\n\ti"
    "tem_list\030\001 \003(\0132\n.ProtoItem\022\023\n\013lack_coppe"
    "r\030\002 \001(\005\022\030\n\020lack_bind_copper\030\003 \001(\005\022\021\n\tnee"
    "d_gold\030\004 \001(\005\022\021\n\tcur_lucky\030\005 \001(\005\"8\n\rProto"
    "81400901\022\'\n\013record_list\030\001 \003(\0132\022.ProtoDiv"
    "ineRecord\"8\n\rProto51400908\022\'\n\013record_lis"
    "t\030\001 \003(\0132\022.ProtoDivineRecord\"6\n\rProto1140"
    "1102\022\021\n\tach_index\030\001 \001(\005\022\022\n\nachieve_id\030\002 "
    "\001(\005\"#\n\rProto81401101\022\022\n\nachieve_id\030\001 \001(\005"
    "\"\205\001\n\rProto51401101\022)\n\014achieve_list\030\001 \003(\013"
    "2\023.ProtoAchieveDetail\022\025\n\rachieve_level\030\002"
    " \001(\005\022 \n\tpoint_set\030\003 \003(\0132\r.ProtoPairObj\022\020"
    "\n\010progress\030\004 \001(\005\"#\n\rProto51401102\022\022\n\nach"
    "ieve_id\030\001 \001(\005\"!\n\rProto11400703\022\020\n\010label_"
    "id\030\001 \001(\005\"!\n\rProto51400703\022\020\n\010label_id\030\001 "
    "\001(\005\"!\n\rProto11400704\022\020\n\010label_id\030\001 \001(\005\"4"
    "\n\rProto51400704\022\020\n\010label_id\030\001 \001(\005\022\021\n\tlef"
    "t_time\030\002 \001(\005\"#\n\rProto50400706\022\022\n\nskill_l"
    "ist\030\001 \003(\005\"\253\001\n\rProto10400901\022\023\n\013script_so"
    "rt\030\001 \001(\005\022\r\n\005piece\030\002 \001(\005\022\017\n\007chapter\030\003 \001(\005"
    "\022\030\n\020replacements_set\030\004 \003(\003\022\017\n\007team_id\030\005 "
    "\001(\003\022\020\n\010team_set\030\006 \003(\003\022\021\n\tcheer_num\030\007 \001(\005"
    "\022\025\n\rencourage_num\030\010 \001(\005\"&\n\rProto50400901"
    "\022\025\n\rday_pass_time\030\001 \001(\005\"J\n\rProto80400901"
    "\022\020\n\010even_cut\030\001 \001(\005\022\021\n\tprop_rate\030\002 \001(\005\022\024\n"
    "\014max_even_cut\030\003 \001(\005\"\306\005\n\rProto50400903\022\020\n"
    "\010left_sec\030\001 \001(\005\022\023\n\013script_sort\030\002 \001(\005\022\021\n\t"
    "total_sec\030\003 \001(\005\022\023\n\013left_relive\030\004 \001(\005\022\024\n\014"
    "total_relive\030\005 \001(\005\022\024\n\014left_monster\030\006 \001(\005"
    "\022\025\n\rtotal_monster\030\007 \001(\005\022\"\n\013monster_rec\030\010"
    " \003(\0132\r.ProtoMonster\022\023\n\013top_evencut\030\t \001(\005"
    "\022\025\n\rscript_status\030\n \001(\005\022\026\n\016killed_monste"
    "r\030\013 \001(\005\022\024\n\014current_wave\030\014 \001(\005\022\025\n\rcurrent"
    "_floor\030\r \001(\005\022\031\n\021protect_npc_blood\030\016 \001(\005\022"
    "\034\n\024protect_npc_maxblood\030\017 \001(\005\022\r\n\005piece\030\020"
    " \001(\005\022\017\n\007chapter\030\021 \001(\005\022\020\n\010used_sec\030\022 \001(\005\022"
    "\023\n\013puppet_list\030\023 \003(\005\022\023\n\013rescue_sort\030\024 \001("
    "\005\022\023\n\013rescue_left\030\025 \001(\005\022\021\n\tpoem_text\030\026 \001("
    "\t\022\031\n\021poem_appear_index\030\027 \003(\005\022\021\n\tpoem_siz"
    "e\030\030 \001(\005\022\027\n\017is_first_script\030\031 \001(\005\022\022\n\ndiff"
    "iculty\030\032 \001(\005\022\025\n\rday_pass_time\030\033 \001(\005\022\022\n\nh"
    "atch_sort\030\034 \001(\005\022\022\n\nhatch_cond\030\035 \001(\005\022\022\n\nt"
    "otal_wave\030\036 \001(\005\022\022\n\nbegin_wave\030\037 \001(\005\022\017\n\007g"
    "et_exp\030  \001(\005\"\240\001\n\rProto80400902\022\024\n\014left_m"
    "onster\030\001 \001(\005\022\025\n\rtotal_monster\030\002 \001(\005\022\"\n\013m"
    "onster_rec\030\003 \003(\0132\r.ProtoMonster\022\026\n\016kille"
    "d_monster\030\004 \001(\005\022\022\n\nhatch_sort\030\005 \001(\005\022\022\n\nh"
    "atch_cond\030\006 \001(\005\":\n\rProto80400903\022\023\n\013left"
    "_relive\030\001 \001(\005\022\024\n\014total_relive\030\002 \001(\005\"f\n\rP"
    "roto10400111\022\020\n\010scene_id\030\001 \001(\005\022\017\n\007pixel_"
    "x\030\002 \001(\005\022\017\n\007pixel_y\030\003 \001(\005\022\014\n\004type\030\004 \001(\005\022\023"
    "\n\013client_type\030\005 \001(\005\"\220\001\n\rProto50400110\022\020\n"
    "\010scene_id\030\001 \001(\005\022\017\n\007pixel_x\030\002 \001(\005\022\017\n\007pixe"
    "l_y\030\003 \001(\005\022\026\n\016is_first_enter\030\004 \001(\005\022\020\n\010spa"
    "ce_id\030\005 \001(\005\022\014\n\004type\030\006 \001(\005\022\023\n\013client_type"
    "\030\007 \001(\005\"\246\001\n\rProto51400600\022\024\n\014refine_level"
    "\030\001 \001(\005\022\025\n\rrefine_degree\030\002 \001(\005\022\037\n\ncost_mo"
    "ney\030\003 \001(\0132\013.ProtoMoney\022 \n\tcost_item\030\004 \003("
    "\0132\r.ProtoPairObj\022%\n\020atual_cost_money\030\005 \001"
    "(\0132\013.ProtoMoney\":\n\rProto81401201\022)\n\racti"
    "vity_info\030\001 \003(\0132\022.ProtoActivityInfo\"\270\002\n\n"
    "Proto10001\022\017\n\007item_id\030\001 \001(\005\022\024\n\014refine_le"
    "vel\030\002 \001(\005\022\023\n\013is_brighten\030\003 \001(\005\022\023\n\013bind_s"
    "tatus\030\004 \001(\005\022\022\n\nluck_value\030\005 \001(\005\022\"\n\013jewel"
    "_lists\030\006 \003(\0132\r.ProtoPairObj\022,\n\013extras_at"
    "tr\030\007 \001(\0132\027.ProtoEquipPolishStruct\022&\n\013bas"
    "e_polish\030\010 \001(\0132\021.ProtoEquipPolish\022$\n\rspe"
    "cial_jewel\030\t \001(\0132\r.ProtoPairObj\022%\n\016speci"
    "al_jewels\030\n \003(\0132\r.ProtoPairObj\"2\n\nProto1"
    "0002\022\017\n\007item_id\030\001 \001(\005\022\023\n\013bind_status\030\002 \001"
    "(\005\"\\\n\nProto10003\022\017\n\007item_id\030\001 \001(\005\022\025\n\ris_"
    "limit_time\030\002 \001(\005\022\021\n\tleft_time\030\003 \001(\005\022\023\n\013b"
    "ind_status\030\004 \001(\005\"I\n\nProto10004\022\017\n\007item_i"
    "d\030\001 \001(\005\022\025\n\rsub_item_list\030\002 \003(\005\022\023\n\013bind_s"
    "tatus\030\003 \001(\005\"e\n\nProto10005\022\016\n\006pet_id\030\001 \001("
    "\003\022\020\n\010pet_name\030\002 \001(\t\022\016\n\006ablity\030\003 \001(\005\022\020\n\010p"
    "et_sort\030\004 \001(\005\022\023\n\013bind_status\030\005 \001(\005\"N\n\rPr"
    "oto80400904\022\024\n\014current_wave\030\001 \001(\005\022\023\n\013fin"
    "ish_wave\030\002 \001(\005\022\022\n\ntotal_wave\030\003 \001(\005\"\?\n\rPr"
    "oto10400501\022\036\n\tstep_list\030\001 \003(\0132\013.ProtoCo"
    "ord\022\016\n\006toward\030\002 \001(\005\"C\n\rProto50400109\022\020\n\010"
    "scene_id\030\001 \001(\005\022\017\n\007pixel_x\030\002 \001(\005\022\017\n\007pixel"
    "_y\030\003 \001(\005\"\"\n\rProto10200007\022\021\n\tflaunt_id\030\001"
    " \001(\003\"=\n\rProto50200007\022\021\n\tflaunt_id\030\001 \001(\003"
    "\022\014\n\004type\030\002 \001(\005\022\013\n\003msg\030\003 \001(\014\" \n\rProto1040"
    "0002\022\017\n\007drop_id\030\001 \001(\003", 4901);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient005.proto", &protobuf_RegisterTypes);
  Proto10100310::default_instance_ = new Proto10100310();
  Proto80400306::default_instance_ = new Proto80400306();
  Proto80400309::default_instance_ = new Proto80400309();
  Proto80400310::default_instance_ = new Proto80400310();
  Proto51400901::default_instance_ = new Proto51400901();
  Proto51400902::default_instance_ = new Proto51400902();
  Proto11400903::default_instance_ = new Proto11400903();
  Proto51400903::default_instance_ = new Proto51400903();
  Proto10400302::default_instance_ = new Proto10400302();
  Proto10400303::default_instance_ = new Proto10400303();
  Proto80400331::default_instance_ = new Proto80400331();
  Proto80400332::default_instance_ = new Proto80400332();
  Proto51400701::default_instance_ = new Proto51400701();
  Proto11400702::default_instance_ = new Proto11400702();
  Proto51400702::default_instance_ = new Proto51400702();
  Proto81400701::default_instance_ = new Proto81400701();
  Proto11400904::default_instance_ = new Proto11400904();
  Proto51400904::default_instance_ = new Proto51400904();
  Proto81400901::default_instance_ = new Proto81400901();
  Proto51400908::default_instance_ = new Proto51400908();
  Proto11401102::default_instance_ = new Proto11401102();
  Proto81401101::default_instance_ = new Proto81401101();
  Proto51401101::default_instance_ = new Proto51401101();
  Proto51401102::default_instance_ = new Proto51401102();
  Proto11400703::default_instance_ = new Proto11400703();
  Proto51400703::default_instance_ = new Proto51400703();
  Proto11400704::default_instance_ = new Proto11400704();
  Proto51400704::default_instance_ = new Proto51400704();
  Proto50400706::default_instance_ = new Proto50400706();
  Proto10400901::default_instance_ = new Proto10400901();
  Proto50400901::default_instance_ = new Proto50400901();
  Proto80400901::default_instance_ = new Proto80400901();
  Proto50400903::default_instance_ = new Proto50400903();
  Proto80400902::default_instance_ = new Proto80400902();
  Proto80400903::default_instance_ = new Proto80400903();
  Proto10400111::default_instance_ = new Proto10400111();
  Proto50400110::default_instance_ = new Proto50400110();
  Proto51400600::default_instance_ = new Proto51400600();
  Proto81401201::default_instance_ = new Proto81401201();
  Proto10001::default_instance_ = new Proto10001();
  Proto10002::default_instance_ = new Proto10002();
  Proto10003::default_instance_ = new Proto10003();
  Proto10004::default_instance_ = new Proto10004();
  Proto10005::default_instance_ = new Proto10005();
  Proto80400904::default_instance_ = new Proto80400904();
  Proto10400501::default_instance_ = new Proto10400501();
  Proto50400109::default_instance_ = new Proto50400109();
  Proto10200007::default_instance_ = new Proto10200007();
  Proto50200007::default_instance_ = new Proto50200007();
  Proto10400002::default_instance_ = new Proto10400002();
  Proto10100310::default_instance_->InitAsDefaultInstance();
  Proto80400306::default_instance_->InitAsDefaultInstance();
  Proto80400309::default_instance_->InitAsDefaultInstance();
  Proto80400310::default_instance_->InitAsDefaultInstance();
  Proto51400901::default_instance_->InitAsDefaultInstance();
  Proto51400902::default_instance_->InitAsDefaultInstance();
  Proto11400903::default_instance_->InitAsDefaultInstance();
  Proto51400903::default_instance_->InitAsDefaultInstance();
  Proto10400302::default_instance_->InitAsDefaultInstance();
  Proto10400303::default_instance_->InitAsDefaultInstance();
  Proto80400331::default_instance_->InitAsDefaultInstance();
  Proto80400332::default_instance_->InitAsDefaultInstance();
  Proto51400701::default_instance_->InitAsDefaultInstance();
  Proto11400702::default_instance_->InitAsDefaultInstance();
  Proto51400702::default_instance_->InitAsDefaultInstance();
  Proto81400701::default_instance_->InitAsDefaultInstance();
  Proto11400904::default_instance_->InitAsDefaultInstance();
  Proto51400904::default_instance_->InitAsDefaultInstance();
  Proto81400901::default_instance_->InitAsDefaultInstance();
  Proto51400908::default_instance_->InitAsDefaultInstance();
  Proto11401102::default_instance_->InitAsDefaultInstance();
  Proto81401101::default_instance_->InitAsDefaultInstance();
  Proto51401101::default_instance_->InitAsDefaultInstance();
  Proto51401102::default_instance_->InitAsDefaultInstance();
  Proto11400703::default_instance_->InitAsDefaultInstance();
  Proto51400703::default_instance_->InitAsDefaultInstance();
  Proto11400704::default_instance_->InitAsDefaultInstance();
  Proto51400704::default_instance_->InitAsDefaultInstance();
  Proto50400706::default_instance_->InitAsDefaultInstance();
  Proto10400901::default_instance_->InitAsDefaultInstance();
  Proto50400901::default_instance_->InitAsDefaultInstance();
  Proto80400901::default_instance_->InitAsDefaultInstance();
  Proto50400903::default_instance_->InitAsDefaultInstance();
  Proto80400902::default_instance_->InitAsDefaultInstance();
  Proto80400903::default_instance_->InitAsDefaultInstance();
  Proto10400111::default_instance_->InitAsDefaultInstance();
  Proto50400110::default_instance_->InitAsDefaultInstance();
  Proto51400600::default_instance_->InitAsDefaultInstance();
  Proto81401201::default_instance_->InitAsDefaultInstance();
  Proto10001::default_instance_->InitAsDefaultInstance();
  Proto10002::default_instance_->InitAsDefaultInstance();
  Proto10003::default_instance_->InitAsDefaultInstance();
  Proto10004::default_instance_->InitAsDefaultInstance();
  Proto10005::default_instance_->InitAsDefaultInstance();
  Proto80400904::default_instance_->InitAsDefaultInstance();
  Proto10400501::default_instance_->InitAsDefaultInstance();
  Proto50400109::default_instance_->InitAsDefaultInstance();
  Proto10200007::default_instance_->InitAsDefaultInstance();
  Proto50200007::default_instance_->InitAsDefaultInstance();
  Proto10400002::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient005_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient005_2eproto {
  StaticDescriptorInitializer_ProtoClient005_2eproto() {
    protobuf_AddDesc_ProtoClient005_2eproto();
  }
} static_descriptor_initializer_ProtoClient005_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto10100310::kResponeTypeFieldNumber;
const int Proto10100310::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto10100310::Proto10100310()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100310::InitAsDefaultInstance() {
}

Proto10100310::Proto10100310(const Proto10100310& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100310::SharedCtor() {
  _cached_size_ = 0;
  respone_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100310::~Proto10100310() {
  SharedDtor();
}

void Proto10100310::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100310::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100310::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100310_descriptor_;
}

const Proto10100310& Proto10100310::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto10100310* Proto10100310::default_instance_ = NULL;

Proto10100310* Proto10100310::New() const {
  return new Proto10100310;
}

void Proto10100310::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    respone_type_ = 0;
  }
  role_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100310::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 respone_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &respone_type_)));
          set_has_respone_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_id;
        break;
      }
      
      // repeated int64 role_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16, input, this->mutable_role_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_id;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100310::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 respone_type = 1;
  if (has_respone_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->respone_type(), output);
  }
  
  // repeated int64 role_id = 2;
  for (int i = 0; i < this->role_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->role_id(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100310::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 respone_type = 1;
  if (has_respone_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->respone_type(), target);
  }
  
  // repeated int64 role_id = 2;
  for (int i = 0; i < this->role_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->role_id(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100310::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 respone_type = 1;
    if (has_respone_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->respone_type());
    }
    
  }
  // repeated int64 role_id = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_id(i));
    }
    total_size += 1 * this->role_id_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100310::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100310* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100310*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100310::MergeFrom(const Proto10100310& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_id_.MergeFrom(from.role_id_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_respone_type()) {
      set_respone_type(from.respone_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100310::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100310::CopyFrom(const Proto10100310& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100310::IsInitialized() const {
  
  return true;
}

void Proto10100310::Swap(Proto10100310* other) {
  if (other != this) {
    std::swap(respone_type_, other->respone_type_);
    role_id_.Swap(&other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100310::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100310_descriptor_;
  metadata.reflection = Proto10100310_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400306::kTeamerSetFieldNumber;
const int Proto80400306::kLeaderIdFieldNumber;
const int Proto80400306::kTeamStateFieldNumber;
const int Proto80400306::kNoTeamFieldNumber;
const int Proto80400306::kAutoInviteFieldNumber;
const int Proto80400306::kAutoAcceptFieldNumber;
#endif  // !_MSC_VER

Proto80400306::Proto80400306()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400306::InitAsDefaultInstance() {
}

Proto80400306::Proto80400306(const Proto80400306& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400306::SharedCtor() {
  _cached_size_ = 0;
  leader_id_ = GOOGLE_LONGLONG(0);
  team_state_ = 0;
  no_team_ = 0;
  auto_invite_ = 0;
  auto_accept_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400306::~Proto80400306() {
  SharedDtor();
}

void Proto80400306::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400306::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400306::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400306_descriptor_;
}

const Proto80400306& Proto80400306::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto80400306* Proto80400306::default_instance_ = NULL;

Proto80400306* Proto80400306::New() const {
  return new Proto80400306;
}

void Proto80400306::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    leader_id_ = GOOGLE_LONGLONG(0);
    team_state_ = 0;
    no_team_ = 0;
    auto_invite_ = 0;
    auto_accept_ = 0;
  }
  teamer_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400306::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoTeamer teamer_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_teamer_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_teamer_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_teamer_set;
        if (input->ExpectTag(16)) goto parse_leader_id;
        break;
      }
      
      // optional int64 leader_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leader_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &leader_id_)));
          set_has_leader_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_team_state;
        break;
      }
      
      // optional int32 team_state = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_team_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_state_)));
          set_has_team_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_no_team;
        break;
      }
      
      // optional int32 no_team = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_no_team:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &no_team_)));
          set_has_no_team();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_auto_invite;
        break;
      }
      
      // optional int32 auto_invite = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_invite:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_invite_)));
          set_has_auto_invite();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_auto_accept;
        break;
      }
      
      // optional int32 auto_accept = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_accept:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_accept_)));
          set_has_auto_accept();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400306::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoTeamer teamer_set = 1;
  for (int i = 0; i < this->teamer_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->teamer_set(i), output);
  }
  
  // optional int64 leader_id = 2;
  if (has_leader_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->leader_id(), output);
  }
  
  // optional int32 team_state = 3;
  if (has_team_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->team_state(), output);
  }
  
  // optional int32 no_team = 4;
  if (has_no_team()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->no_team(), output);
  }
  
  // optional int32 auto_invite = 5;
  if (has_auto_invite()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->auto_invite(), output);
  }
  
  // optional int32 auto_accept = 6;
  if (has_auto_accept()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->auto_accept(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400306::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoTeamer teamer_set = 1;
  for (int i = 0; i < this->teamer_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->teamer_set(i), target);
  }
  
  // optional int64 leader_id = 2;
  if (has_leader_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->leader_id(), target);
  }
  
  // optional int32 team_state = 3;
  if (has_team_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->team_state(), target);
  }
  
  // optional int32 no_team = 4;
  if (has_no_team()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->no_team(), target);
  }
  
  // optional int32 auto_invite = 5;
  if (has_auto_invite()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->auto_invite(), target);
  }
  
  // optional int32 auto_accept = 6;
  if (has_auto_accept()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->auto_accept(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400306::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int64 leader_id = 2;
    if (has_leader_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->leader_id());
    }
    
    // optional int32 team_state = 3;
    if (has_team_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team_state());
    }
    
    // optional int32 no_team = 4;
    if (has_no_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->no_team());
    }
    
    // optional int32 auto_invite = 5;
    if (has_auto_invite()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_invite());
    }
    
    // optional int32 auto_accept = 6;
    if (has_auto_accept()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_accept());
    }
    
  }
  // repeated .ProtoTeamer teamer_set = 1;
  total_size += 1 * this->teamer_set_size();
  for (int i = 0; i < this->teamer_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->teamer_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400306::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400306* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400306*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400306::MergeFrom(const Proto80400306& from) {
  GOOGLE_CHECK_NE(&from, this);
  teamer_set_.MergeFrom(from.teamer_set_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_leader_id()) {
      set_leader_id(from.leader_id());
    }
    if (from.has_team_state()) {
      set_team_state(from.team_state());
    }
    if (from.has_no_team()) {
      set_no_team(from.no_team());
    }
    if (from.has_auto_invite()) {
      set_auto_invite(from.auto_invite());
    }
    if (from.has_auto_accept()) {
      set_auto_accept(from.auto_accept());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400306::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400306::CopyFrom(const Proto80400306& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400306::IsInitialized() const {
  
  return true;
}

void Proto80400306::Swap(Proto80400306* other) {
  if (other != this) {
    teamer_set_.Swap(&other->teamer_set_);
    std::swap(leader_id_, other->leader_id_);
    std::swap(team_state_, other->team_state_);
    std::swap(no_team_, other->no_team_);
    std::swap(auto_invite_, other->auto_invite_);
    std::swap(auto_accept_, other->auto_accept_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400306::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400306_descriptor_;
  metadata.reflection = Proto80400306_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400309::kOperTypeFieldNumber;
const int Proto80400309::kRoleIdFieldNumber;
const int Proto80400309::kRoleNameFieldNumber;
const int Proto80400309::kRoleLevelFieldNumber;
const int Proto80400309::kFightForceFieldNumber;
const int Proto80400309::kLeagueNameFieldNumber;
const int Proto80400309::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto80400309::Proto80400309()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400309::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto80400309::Proto80400309(const Proto80400309& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400309::SharedCtor() {
  _cached_size_ = 0;
  oper_type_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  role_level_ = 0;
  fight_force_ = 0;
  league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400309::~Proto80400309() {
  SharedDtor();
}

void Proto80400309::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (league_name_ != &::google::protobuf::internal::kEmptyString) {
    delete league_name_;
  }
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto80400309::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400309::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400309_descriptor_;
}

const Proto80400309& Proto80400309::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto80400309* Proto80400309::default_instance_ = NULL;

Proto80400309* Proto80400309::New() const {
  return new Proto80400309;
}

void Proto80400309::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oper_type_ = 0;
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
    role_level_ = 0;
    fight_force_ = 0;
    if (has_league_name()) {
      if (league_name_ != &::google::protobuf::internal::kEmptyString) {
        league_name_->clear();
      }
    }
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400309::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 oper_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oper_type_)));
          set_has_oper_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_role_name;
        break;
      }
      
      // optional string role_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_role_level;
        break;
      }
      
      // optional int32 role_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_level_)));
          set_has_role_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_fight_force;
        break;
      }
      
      // optional int32 fight_force = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_force_)));
          set_has_fight_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_league_name;
        break;
      }
      
      // optional string league_name = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_league_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->league_name().data(), this->league_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400309::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 oper_type = 1;
  if (has_oper_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oper_type(), output);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->role_id(), output);
  }
  
  // optional string role_name = 3;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->role_name(), output);
  }
  
  // optional int32 role_level = 4;
  if (has_role_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->role_level(), output);
  }
  
  // optional int32 fight_force = 5;
  if (has_fight_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->fight_force(), output);
  }
  
  // optional string league_name = 6;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->league_name(), output);
  }
  
  // optional .ProtoThreeObj other_info = 7;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400309::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 oper_type = 1;
  if (has_oper_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oper_type(), target);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->role_id(), target);
  }
  
  // optional string role_name = 3;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->role_name(), target);
  }
  
  // optional int32 role_level = 4;
  if (has_role_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->role_level(), target);
  }
  
  // optional int32 fight_force = 5;
  if (has_fight_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->fight_force(), target);
  }
  
  // optional string league_name = 6;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->league_name(), target);
  }
  
  // optional .ProtoThreeObj other_info = 7;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400309::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 oper_type = 1;
    if (has_oper_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oper_type());
    }
    
    // optional int64 role_id = 2;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional string role_name = 3;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
    // optional int32 role_level = 4;
    if (has_role_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->role_level());
    }
    
    // optional int32 fight_force = 5;
    if (has_fight_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_force());
    }
    
    // optional string league_name = 6;
    if (has_league_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->league_name());
    }
    
    // optional .ProtoThreeObj other_info = 7;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400309::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400309* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400309*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400309::MergeFrom(const Proto80400309& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_oper_type()) {
      set_oper_type(from.oper_type());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
    if (from.has_role_level()) {
      set_role_level(from.role_level());
    }
    if (from.has_fight_force()) {
      set_fight_force(from.fight_force());
    }
    if (from.has_league_name()) {
      set_league_name(from.league_name());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400309::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400309::CopyFrom(const Proto80400309& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400309::IsInitialized() const {
  
  return true;
}

void Proto80400309::Swap(Proto80400309* other) {
  if (other != this) {
    std::swap(oper_type_, other->oper_type_);
    std::swap(role_id_, other->role_id_);
    std::swap(role_name_, other->role_name_);
    std::swap(role_level_, other->role_level_);
    std::swap(fight_force_, other->fight_force_);
    std::swap(league_name_, other->league_name_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400309::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400309_descriptor_;
  metadata.reflection = Proto80400309_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400310::kOperTypeFieldNumber;
const int Proto80400310::kOperResultFieldNumber;
const int Proto80400310::kOperNameFieldNumber;
#endif  // !_MSC_VER

Proto80400310::Proto80400310()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400310::InitAsDefaultInstance() {
}

Proto80400310::Proto80400310(const Proto80400310& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400310::SharedCtor() {
  _cached_size_ = 0;
  oper_type_ = 0;
  oper_result_ = 0;
  oper_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400310::~Proto80400310() {
  SharedDtor();
}

void Proto80400310::SharedDtor() {
  if (oper_name_ != &::google::protobuf::internal::kEmptyString) {
    delete oper_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400310::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400310::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400310_descriptor_;
}

const Proto80400310& Proto80400310::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto80400310* Proto80400310::default_instance_ = NULL;

Proto80400310* Proto80400310::New() const {
  return new Proto80400310;
}

void Proto80400310::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oper_type_ = 0;
    oper_result_ = 0;
    if (has_oper_name()) {
      if (oper_name_ != &::google::protobuf::internal::kEmptyString) {
        oper_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400310::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 oper_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oper_type_)));
          set_has_oper_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_oper_result;
        break;
      }
      
      // optional int32 oper_result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_oper_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oper_result_)));
          set_has_oper_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_oper_name;
        break;
      }
      
      // optional string oper_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_oper_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oper_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->oper_name().data(), this->oper_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400310::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 oper_type = 1;
  if (has_oper_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oper_type(), output);
  }
  
  // optional int32 oper_result = 2;
  if (has_oper_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->oper_result(), output);
  }
  
  // optional string oper_name = 3;
  if (has_oper_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oper_name().data(), this->oper_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->oper_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400310::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 oper_type = 1;
  if (has_oper_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oper_type(), target);
  }
  
  // optional int32 oper_result = 2;
  if (has_oper_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->oper_result(), target);
  }
  
  // optional string oper_name = 3;
  if (has_oper_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->oper_name().data(), this->oper_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->oper_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400310::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 oper_type = 1;
    if (has_oper_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oper_type());
    }
    
    // optional int32 oper_result = 2;
    if (has_oper_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oper_result());
    }
    
    // optional string oper_name = 3;
    if (has_oper_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->oper_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400310::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400310* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400310*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400310::MergeFrom(const Proto80400310& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_oper_type()) {
      set_oper_type(from.oper_type());
    }
    if (from.has_oper_result()) {
      set_oper_result(from.oper_result());
    }
    if (from.has_oper_name()) {
      set_oper_name(from.oper_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400310::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400310::CopyFrom(const Proto80400310& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400310::IsInitialized() const {
  
  return true;
}

void Proto80400310::Swap(Proto80400310* other) {
  if (other != this) {
    std::swap(oper_type_, other->oper_type_);
    std::swap(oper_result_, other->oper_result_);
    std::swap(oper_name_, other->oper_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400310::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400310_descriptor_;
  metadata.reflection = Proto80400310_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400901::kDivineItemsFieldNumber;
const int Proto51400901::kObtainedItemsFieldNumber;
#endif  // !_MSC_VER

Proto51400901::Proto51400901()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400901::InitAsDefaultInstance() {
}

Proto51400901::Proto51400901(const Proto51400901& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400901::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400901::~Proto51400901() {
  SharedDtor();
}

void Proto51400901::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400901::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400901::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400901_descriptor_;
}

const Proto51400901& Proto51400901::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto51400901* Proto51400901::default_instance_ = NULL;

Proto51400901* Proto51400901::New() const {
  return new Proto51400901;
}

void Proto51400901::Clear() {
  divine_items_.Clear();
  obtained_items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400901::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem divine_items = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_divine_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_divine_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_divine_items;
        if (input->ExpectTag(18)) goto parse_obtained_items;
        break;
      }
      
      // repeated .ProtoItem obtained_items = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_obtained_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_obtained_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_obtained_items;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400901::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem divine_items = 1;
  for (int i = 0; i < this->divine_items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->divine_items(i), output);
  }
  
  // repeated .ProtoItem obtained_items = 2;
  for (int i = 0; i < this->obtained_items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->obtained_items(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400901::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem divine_items = 1;
  for (int i = 0; i < this->divine_items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->divine_items(i), target);
  }
  
  // repeated .ProtoItem obtained_items = 2;
  for (int i = 0; i < this->obtained_items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->obtained_items(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400901::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoItem divine_items = 1;
  total_size += 1 * this->divine_items_size();
  for (int i = 0; i < this->divine_items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->divine_items(i));
  }
  
  // repeated .ProtoItem obtained_items = 2;
  total_size += 1 * this->obtained_items_size();
  for (int i = 0; i < this->obtained_items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->obtained_items(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400901::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400901* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400901*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400901::MergeFrom(const Proto51400901& from) {
  GOOGLE_CHECK_NE(&from, this);
  divine_items_.MergeFrom(from.divine_items_);
  obtained_items_.MergeFrom(from.obtained_items_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400901::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400901::CopyFrom(const Proto51400901& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400901::IsInitialized() const {
  
  return true;
}

void Proto51400901::Swap(Proto51400901* other) {
  if (other != this) {
    divine_items_.Swap(&other->divine_items_);
    obtained_items_.Swap(&other->obtained_items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400901::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400901_descriptor_;
  metadata.reflection = Proto51400901_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400902::kLuckValueFieldNumber;
const int Proto51400902::kLeftTimesFieldNumber;
const int Proto51400902::kCostOneFieldNumber;
const int Proto51400902::kCostTenFieldNumber;
const int Proto51400902::kLeftGoldFieldNumber;
const int Proto51400902::kCostFiftyFieldNumber;
#endif  // !_MSC_VER

Proto51400902::Proto51400902()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400902::InitAsDefaultInstance() {
}

Proto51400902::Proto51400902(const Proto51400902& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400902::SharedCtor() {
  _cached_size_ = 0;
  luck_value_ = 0;
  left_times_ = 0;
  left_gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400902::~Proto51400902() {
  SharedDtor();
}

void Proto51400902::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400902::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400902::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400902_descriptor_;
}

const Proto51400902& Proto51400902::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto51400902* Proto51400902::default_instance_ = NULL;

Proto51400902* Proto51400902::New() const {
  return new Proto51400902;
}

void Proto51400902::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    luck_value_ = 0;
    left_times_ = 0;
    left_gold_ = 0;
  }
  cost_one_.Clear();
  cost_ten_.Clear();
  cost_fifty_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400902::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 luck_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &luck_value_)));
          set_has_luck_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_left_times;
        break;
      }
      
      // optional int32 left_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_times_)));
          set_has_left_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cost_one;
        break;
      }
      
      // repeated int32 cost_one = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cost_one:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_cost_one())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cost_one())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cost_one;
        if (input->ExpectTag(32)) goto parse_cost_ten;
        break;
      }
      
      // repeated int32 cost_ten = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cost_ten:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_cost_ten())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cost_ten())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_cost_ten;
        if (input->ExpectTag(40)) goto parse_left_gold;
        break;
      }
      
      // optional int32 left_gold = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_gold_)));
          set_has_left_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_cost_fifty;
        break;
      }
      
      // repeated int32 cost_fifty = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cost_fifty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_cost_fifty())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cost_fifty())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_cost_fifty;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400902::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 luck_value = 1;
  if (has_luck_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->luck_value(), output);
  }
  
  // optional int32 left_times = 2;
  if (has_left_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_times(), output);
  }
  
  // repeated int32 cost_one = 3;
  for (int i = 0; i < this->cost_one_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->cost_one(i), output);
  }
  
  // repeated int32 cost_ten = 4;
  for (int i = 0; i < this->cost_ten_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->cost_ten(i), output);
  }
  
  // optional int32 left_gold = 5;
  if (has_left_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->left_gold(), output);
  }
  
  // repeated int32 cost_fifty = 6;
  for (int i = 0; i < this->cost_fifty_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->cost_fifty(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400902::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 luck_value = 1;
  if (has_luck_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->luck_value(), target);
  }
  
  // optional int32 left_times = 2;
  if (has_left_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_times(), target);
  }
  
  // repeated int32 cost_one = 3;
  for (int i = 0; i < this->cost_one_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->cost_one(i), target);
  }
  
  // repeated int32 cost_ten = 4;
  for (int i = 0; i < this->cost_ten_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->cost_ten(i), target);
  }
  
  // optional int32 left_gold = 5;
  if (has_left_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->left_gold(), target);
  }
  
  // repeated int32 cost_fifty = 6;
  for (int i = 0; i < this->cost_fifty_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->cost_fifty(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400902::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 luck_value = 1;
    if (has_luck_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->luck_value());
    }
    
    // optional int32 left_times = 2;
    if (has_left_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_times());
    }
    
    // optional int32 left_gold = 5;
    if (has_left_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_gold());
    }
    
  }
  // repeated int32 cost_one = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->cost_one_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->cost_one(i));
    }
    total_size += 1 * this->cost_one_size() + data_size;
  }
  
  // repeated int32 cost_ten = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->cost_ten_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->cost_ten(i));
    }
    total_size += 1 * this->cost_ten_size() + data_size;
  }
  
  // repeated int32 cost_fifty = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->cost_fifty_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->cost_fifty(i));
    }
    total_size += 1 * this->cost_fifty_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400902::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400902* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400902*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400902::MergeFrom(const Proto51400902& from) {
  GOOGLE_CHECK_NE(&from, this);
  cost_one_.MergeFrom(from.cost_one_);
  cost_ten_.MergeFrom(from.cost_ten_);
  cost_fifty_.MergeFrom(from.cost_fifty_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_luck_value()) {
      set_luck_value(from.luck_value());
    }
    if (from.has_left_times()) {
      set_left_times(from.left_times());
    }
    if (from.has_left_gold()) {
      set_left_gold(from.left_gold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400902::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400902::CopyFrom(const Proto51400902& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400902::IsInitialized() const {
  
  return true;
}

void Proto51400902::Swap(Proto51400902* other) {
  if (other != this) {
    std::swap(luck_value_, other->luck_value_);
    std::swap(left_times_, other->left_times_);
    cost_one_.Swap(&other->cost_one_);
    cost_ten_.Swap(&other->cost_ten_);
    std::swap(left_gold_, other->left_gold_);
    cost_fifty_.Swap(&other->cost_fifty_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400902::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400902_descriptor_;
  metadata.reflection = Proto51400902_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400903::kIsForceBuyFieldNumber;
#endif  // !_MSC_VER

Proto11400903::Proto11400903()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400903::InitAsDefaultInstance() {
}

Proto11400903::Proto11400903(const Proto11400903& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400903::SharedCtor() {
  _cached_size_ = 0;
  is_force_buy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400903::~Proto11400903() {
  SharedDtor();
}

void Proto11400903::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400903::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400903::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400903_descriptor_;
}

const Proto11400903& Proto11400903::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto11400903* Proto11400903::default_instance_ = NULL;

Proto11400903* Proto11400903::New() const {
  return new Proto11400903;
}

void Proto11400903::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_force_buy_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400903::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 is_force_buy = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_force_buy_)));
          set_has_is_force_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400903::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 is_force_buy = 1;
  if (has_is_force_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->is_force_buy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400903::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 is_force_buy = 1;
  if (has_is_force_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->is_force_buy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400903::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 is_force_buy = 1;
    if (has_is_force_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_force_buy());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400903::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400903* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400903*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400903::MergeFrom(const Proto11400903& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_force_buy()) {
      set_is_force_buy(from.is_force_buy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400903::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400903::CopyFrom(const Proto11400903& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400903::IsInitialized() const {
  
  return true;
}

void Proto11400903::Swap(Proto11400903* other) {
  if (other != this) {
    std::swap(is_force_buy_, other->is_force_buy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400903::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400903_descriptor_;
  metadata.reflection = Proto11400903_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400903::kItemListFieldNumber;
const int Proto51400903::kLackCopperFieldNumber;
const int Proto51400903::kLackBindCopperFieldNumber;
const int Proto51400903::kNeedGoldFieldNumber;
const int Proto51400903::kCurLuckyFieldNumber;
#endif  // !_MSC_VER

Proto51400903::Proto51400903()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400903::InitAsDefaultInstance() {
}

Proto51400903::Proto51400903(const Proto51400903& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400903::SharedCtor() {
  _cached_size_ = 0;
  lack_copper_ = 0;
  lack_bind_copper_ = 0;
  need_gold_ = 0;
  cur_lucky_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400903::~Proto51400903() {
  SharedDtor();
}

void Proto51400903::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400903::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400903::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400903_descriptor_;
}

const Proto51400903& Proto51400903::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto51400903* Proto51400903::default_instance_ = NULL;

Proto51400903* Proto51400903::New() const {
  return new Proto51400903;
}

void Proto51400903::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    lack_copper_ = 0;
    lack_bind_copper_ = 0;
    need_gold_ = 0;
    cur_lucky_ = 0;
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400903::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_list;
        if (input->ExpectTag(16)) goto parse_lack_copper;
        break;
      }
      
      // optional int32 lack_copper = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lack_copper:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lack_copper_)));
          set_has_lack_copper();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_lack_bind_copper;
        break;
      }
      
      // optional int32 lack_bind_copper = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lack_bind_copper:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lack_bind_copper_)));
          set_has_lack_bind_copper();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_need_gold;
        break;
      }
      
      // optional int32 need_gold = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_need_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_gold_)));
          set_has_need_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_cur_lucky;
        break;
      }
      
      // optional int32 cur_lucky = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_lucky:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_lucky_)));
          set_has_cur_lucky();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400903::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(i), output);
  }
  
  // optional int32 lack_copper = 2;
  if (has_lack_copper()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lack_copper(), output);
  }
  
  // optional int32 lack_bind_copper = 3;
  if (has_lack_bind_copper()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lack_bind_copper(), output);
  }
  
  // optional int32 need_gold = 4;
  if (has_need_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->need_gold(), output);
  }
  
  // optional int32 cur_lucky = 5;
  if (has_cur_lucky()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cur_lucky(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400903::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_list(i), target);
  }
  
  // optional int32 lack_copper = 2;
  if (has_lack_copper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->lack_copper(), target);
  }
  
  // optional int32 lack_bind_copper = 3;
  if (has_lack_bind_copper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lack_bind_copper(), target);
  }
  
  // optional int32 need_gold = 4;
  if (has_need_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->need_gold(), target);
  }
  
  // optional int32 cur_lucky = 5;
  if (has_cur_lucky()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cur_lucky(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400903::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 lack_copper = 2;
    if (has_lack_copper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lack_copper());
    }
    
    // optional int32 lack_bind_copper = 3;
    if (has_lack_bind_copper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lack_bind_copper());
    }
    
    // optional int32 need_gold = 4;
    if (has_need_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->need_gold());
    }
    
    // optional int32 cur_lucky = 5;
    if (has_cur_lucky()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_lucky());
    }
    
  }
  // repeated .ProtoItem item_list = 1;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400903::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400903* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400903*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400903::MergeFrom(const Proto51400903& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_lack_copper()) {
      set_lack_copper(from.lack_copper());
    }
    if (from.has_lack_bind_copper()) {
      set_lack_bind_copper(from.lack_bind_copper());
    }
    if (from.has_need_gold()) {
      set_need_gold(from.need_gold());
    }
    if (from.has_cur_lucky()) {
      set_cur_lucky(from.cur_lucky());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400903::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400903::CopyFrom(const Proto51400903& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400903::IsInitialized() const {
  
  return true;
}

void Proto51400903::Swap(Proto51400903* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(lack_copper_, other->lack_copper_);
    std::swap(lack_bind_copper_, other->lack_bind_copper_);
    std::swap(need_gold_, other->need_gold_);
    std::swap(cur_lucky_, other->cur_lucky_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400903::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400903_descriptor_;
  metadata.reflection = Proto51400903_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400302::kTeamSideFieldNumber;
const int Proto10400302::kTeamPosFieldNumber;
#endif  // !_MSC_VER

Proto10400302::Proto10400302()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400302::InitAsDefaultInstance() {
}

Proto10400302::Proto10400302(const Proto10400302& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400302::SharedCtor() {
  _cached_size_ = 0;
  team_side_ = 0;
  team_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400302::~Proto10400302() {
  SharedDtor();
}

void Proto10400302::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400302::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400302::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400302_descriptor_;
}

const Proto10400302& Proto10400302::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto10400302* Proto10400302::default_instance_ = NULL;

Proto10400302* Proto10400302::New() const {
  return new Proto10400302;
}

void Proto10400302::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    team_side_ = 0;
    team_pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400302::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 team_side = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_side_)));
          set_has_team_side();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_team_pos;
        break;
      }
      
      // optional int32 team_pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_team_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_pos_)));
          set_has_team_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400302::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 team_side = 1;
  if (has_team_side()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->team_side(), output);
  }
  
  // optional int32 team_pos = 2;
  if (has_team_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->team_pos(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400302::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 team_side = 1;
  if (has_team_side()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->team_side(), target);
  }
  
  // optional int32 team_pos = 2;
  if (has_team_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->team_pos(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400302::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 team_side = 1;
    if (has_team_side()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team_side());
    }
    
    // optional int32 team_pos = 2;
    if (has_team_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team_pos());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400302::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400302* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400302*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400302::MergeFrom(const Proto10400302& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_side()) {
      set_team_side(from.team_side());
    }
    if (from.has_team_pos()) {
      set_team_pos(from.team_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400302::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400302::CopyFrom(const Proto10400302& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400302::IsInitialized() const {
  
  return true;
}

void Proto10400302::Swap(Proto10400302* other) {
  if (other != this) {
    std::swap(team_side_, other->team_side_);
    std::swap(team_pos_, other->team_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400302::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400302_descriptor_;
  metadata.reflection = Proto10400302_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400303::kAddHitsFieldNumber;
#endif  // !_MSC_VER

Proto10400303::Proto10400303()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400303::InitAsDefaultInstance() {
}

Proto10400303::Proto10400303(const Proto10400303& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400303::SharedCtor() {
  _cached_size_ = 0;
  add_hits_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400303::~Proto10400303() {
  SharedDtor();
}

void Proto10400303::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400303::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400303::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400303_descriptor_;
}

const Proto10400303& Proto10400303::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto10400303* Proto10400303::default_instance_ = NULL;

Proto10400303* Proto10400303::New() const {
  return new Proto10400303;
}

void Proto10400303::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    add_hits_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400303::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 add_hits = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_hits_)));
          set_has_add_hits();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400303::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 add_hits = 1;
  if (has_add_hits()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->add_hits(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400303::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 add_hits = 1;
  if (has_add_hits()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->add_hits(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400303::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 add_hits = 1;
    if (has_add_hits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_hits());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400303::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400303* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400303*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400303::MergeFrom(const Proto10400303& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_add_hits()) {
      set_add_hits(from.add_hits());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400303::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400303::CopyFrom(const Proto10400303& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400303::IsInitialized() const {
  
  return true;
}

void Proto10400303::Swap(Proto10400303* other) {
  if (other != this) {
    std::swap(add_hits_, other->add_hits_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400303::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400303_descriptor_;
  metadata.reflection = Proto10400303_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400331::kLeftTimeFieldNumber;
const int Proto80400331::kRedScoreFieldNumber;
const int Proto80400331::kBlueScoreFieldNumber;
#endif  // !_MSC_VER

Proto80400331::Proto80400331()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400331::InitAsDefaultInstance() {
}

Proto80400331::Proto80400331(const Proto80400331& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400331::SharedCtor() {
  _cached_size_ = 0;
  left_time_ = 0;
  red_score_ = 0;
  blue_score_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400331::~Proto80400331() {
  SharedDtor();
}

void Proto80400331::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400331::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400331::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400331_descriptor_;
}

const Proto80400331& Proto80400331::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto80400331* Proto80400331::default_instance_ = NULL;

Proto80400331* Proto80400331::New() const {
  return new Proto80400331;
}

void Proto80400331::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_time_ = 0;
    red_score_ = 0;
    blue_score_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400331::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_red_score;
        break;
      }
      
      // optional int32 red_score = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_red_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &red_score_)));
          set_has_red_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_blue_score;
        break;
      }
      
      // optional int32 blue_score = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_blue_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blue_score_)));
          set_has_blue_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400331::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_time = 1;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_time(), output);
  }
  
  // optional int32 red_score = 2;
  if (has_red_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->red_score(), output);
  }
  
  // optional int32 blue_score = 3;
  if (has_blue_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->blue_score(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400331::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_time = 1;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_time(), target);
  }
  
  // optional int32 red_score = 2;
  if (has_red_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->red_score(), target);
  }
  
  // optional int32 blue_score = 3;
  if (has_blue_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->blue_score(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400331::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_time = 1;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 red_score = 2;
    if (has_red_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->red_score());
    }
    
    // optional int32 blue_score = 3;
    if (has_blue_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->blue_score());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400331::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400331* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400331*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400331::MergeFrom(const Proto80400331& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_red_score()) {
      set_red_score(from.red_score());
    }
    if (from.has_blue_score()) {
      set_blue_score(from.blue_score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400331::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400331::CopyFrom(const Proto80400331& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400331::IsInitialized() const {
  
  return true;
}

void Proto80400331::Swap(Proto80400331* other) {
  if (other != this) {
    std::swap(left_time_, other->left_time_);
    std::swap(red_score_, other->red_score_);
    std::swap(blue_score_, other->blue_score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400331::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400331_descriptor_;
  metadata.reflection = Proto80400331_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400332::kAddExpFieldNumber;
const int Proto80400332::kTotalExpFieldNumber;
#endif  // !_MSC_VER

Proto80400332::Proto80400332()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400332::InitAsDefaultInstance() {
}

Proto80400332::Proto80400332(const Proto80400332& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400332::SharedCtor() {
  _cached_size_ = 0;
  add_exp_ = 0;
  total_exp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400332::~Proto80400332() {
  SharedDtor();
}

void Proto80400332::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400332::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400332::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400332_descriptor_;
}

const Proto80400332& Proto80400332::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto80400332* Proto80400332::default_instance_ = NULL;

Proto80400332* Proto80400332::New() const {
  return new Proto80400332;
}

void Proto80400332::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    add_exp_ = 0;
    total_exp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400332::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 add_exp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_exp_)));
          set_has_add_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_exp;
        break;
      }
      
      // optional int32 total_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_exp_)));
          set_has_total_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400332::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 add_exp = 1;
  if (has_add_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->add_exp(), output);
  }
  
  // optional int32 total_exp = 2;
  if (has_total_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_exp(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400332::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 add_exp = 1;
  if (has_add_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->add_exp(), target);
  }
  
  // optional int32 total_exp = 2;
  if (has_total_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_exp(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400332::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 add_exp = 1;
    if (has_add_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_exp());
    }
    
    // optional int32 total_exp = 2;
    if (has_total_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_exp());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400332::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400332* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400332*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400332::MergeFrom(const Proto80400332& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_add_exp()) {
      set_add_exp(from.add_exp());
    }
    if (from.has_total_exp()) {
      set_total_exp(from.total_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400332::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400332::CopyFrom(const Proto80400332& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400332::IsInitialized() const {
  
  return true;
}

void Proto80400332::Swap(Proto80400332* other) {
  if (other != this) {
    std::swap(add_exp_, other->add_exp_);
    std::swap(total_exp_, other->total_exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400332::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400332_descriptor_;
  metadata.reflection = Proto80400332_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400701::kCurLabelIdFieldNumber;
const int Proto51400701::kPermantLabelListFieldNumber;
const int Proto51400701::kLimitTimeLabelListFieldNumber;
const int Proto51400701::kPropListFieldNumber;
const int Proto51400701::kUnshownListFieldNumber;
#endif  // !_MSC_VER

Proto51400701::Proto51400701()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400701::InitAsDefaultInstance() {
  prop_list_ = const_cast< ::ProtoFightPro*>(&::ProtoFightPro::default_instance());
}

Proto51400701::Proto51400701(const Proto51400701& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400701::SharedCtor() {
  _cached_size_ = 0;
  cur_label_id_ = 0;
  prop_list_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400701::~Proto51400701() {
  SharedDtor();
}

void Proto51400701::SharedDtor() {
  if (this != default_instance_) {
    delete prop_list_;
  }
}

void Proto51400701::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400701::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400701_descriptor_;
}

const Proto51400701& Proto51400701::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto51400701* Proto51400701::default_instance_ = NULL;

Proto51400701* Proto51400701::New() const {
  return new Proto51400701;
}

void Proto51400701::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_label_id_ = 0;
    if (has_prop_list()) {
      if (prop_list_ != NULL) prop_list_->::ProtoFightPro::Clear();
    }
  }
  permant_label_list_.Clear();
  limit_time_label_list_.Clear();
  unshown_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400701::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_label_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_label_id_)));
          set_has_cur_label_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_permant_label_list;
        break;
      }
      
      // repeated int32 permant_label_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_permant_label_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_permant_label_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_permant_label_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_permant_label_list;
        if (input->ExpectTag(26)) goto parse_limit_time_label_list;
        break;
      }
      
      // repeated .ProtoLimitTimeLabel limit_time_label_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_limit_time_label_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_limit_time_label_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_limit_time_label_list;
        if (input->ExpectTag(34)) goto parse_prop_list;
        break;
      }
      
      // optional .ProtoFightPro prop_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prop_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prop_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_unshown_list;
        break;
      }
      
      // repeated int32 unshown_list = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unshown_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_unshown_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_unshown_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_unshown_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400701::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_label_id = 1;
  if (has_cur_label_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_label_id(), output);
  }
  
  // repeated int32 permant_label_list = 2;
  for (int i = 0; i < this->permant_label_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->permant_label_list(i), output);
  }
  
  // repeated .ProtoLimitTimeLabel limit_time_label_list = 3;
  for (int i = 0; i < this->limit_time_label_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->limit_time_label_list(i), output);
  }
  
  // optional .ProtoFightPro prop_list = 4;
  if (has_prop_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->prop_list(), output);
  }
  
  // repeated int32 unshown_list = 5;
  for (int i = 0; i < this->unshown_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->unshown_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400701::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_label_id = 1;
  if (has_cur_label_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_label_id(), target);
  }
  
  // repeated int32 permant_label_list = 2;
  for (int i = 0; i < this->permant_label_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->permant_label_list(i), target);
  }
  
  // repeated .ProtoLimitTimeLabel limit_time_label_list = 3;
  for (int i = 0; i < this->limit_time_label_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->limit_time_label_list(i), target);
  }
  
  // optional .ProtoFightPro prop_list = 4;
  if (has_prop_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->prop_list(), target);
  }
  
  // repeated int32 unshown_list = 5;
  for (int i = 0; i < this->unshown_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->unshown_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400701::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_label_id = 1;
    if (has_cur_label_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_label_id());
    }
    
    // optional .ProtoFightPro prop_list = 4;
    if (has_prop_list()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prop_list());
    }
    
  }
  // repeated int32 permant_label_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->permant_label_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->permant_label_list(i));
    }
    total_size += 1 * this->permant_label_list_size() + data_size;
  }
  
  // repeated .ProtoLimitTimeLabel limit_time_label_list = 3;
  total_size += 1 * this->limit_time_label_list_size();
  for (int i = 0; i < this->limit_time_label_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->limit_time_label_list(i));
  }
  
  // repeated int32 unshown_list = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->unshown_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->unshown_list(i));
    }
    total_size += 1 * this->unshown_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400701::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400701* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400701*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400701::MergeFrom(const Proto51400701& from) {
  GOOGLE_CHECK_NE(&from, this);
  permant_label_list_.MergeFrom(from.permant_label_list_);
  limit_time_label_list_.MergeFrom(from.limit_time_label_list_);
  unshown_list_.MergeFrom(from.unshown_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_label_id()) {
      set_cur_label_id(from.cur_label_id());
    }
    if (from.has_prop_list()) {
      mutable_prop_list()->::ProtoFightPro::MergeFrom(from.prop_list());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400701::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400701::CopyFrom(const Proto51400701& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400701::IsInitialized() const {
  
  return true;
}

void Proto51400701::Swap(Proto51400701* other) {
  if (other != this) {
    std::swap(cur_label_id_, other->cur_label_id_);
    permant_label_list_.Swap(&other->permant_label_list_);
    limit_time_label_list_.Swap(&other->limit_time_label_list_);
    std::swap(prop_list_, other->prop_list_);
    unshown_list_.Swap(&other->unshown_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400701::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400701_descriptor_;
  metadata.reflection = Proto51400701_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400702::kLabelIdFieldNumber;
#endif  // !_MSC_VER

Proto11400702::Proto11400702()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400702::InitAsDefaultInstance() {
}

Proto11400702::Proto11400702(const Proto11400702& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400702::SharedCtor() {
  _cached_size_ = 0;
  label_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400702::~Proto11400702() {
  SharedDtor();
}

void Proto11400702::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400702::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400702::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400702_descriptor_;
}

const Proto11400702& Proto11400702::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto11400702* Proto11400702::default_instance_ = NULL;

Proto11400702* Proto11400702::New() const {
  return new Proto11400702;
}

void Proto11400702::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    label_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400702::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 label_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_id_)));
          set_has_label_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400702::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 label_id = 1;
  if (has_label_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->label_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400702::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 label_id = 1;
  if (has_label_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->label_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400702::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 label_id = 1;
    if (has_label_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400702::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400702* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400702*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400702::MergeFrom(const Proto11400702& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_label_id()) {
      set_label_id(from.label_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400702::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400702::CopyFrom(const Proto11400702& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400702::IsInitialized() const {
  
  return true;
}

void Proto11400702::Swap(Proto11400702* other) {
  if (other != this) {
    std::swap(label_id_, other->label_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400702::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400702_descriptor_;
  metadata.reflection = Proto11400702_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400702::kLabelIdFieldNumber;
#endif  // !_MSC_VER

Proto51400702::Proto51400702()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400702::InitAsDefaultInstance() {
}

Proto51400702::Proto51400702(const Proto51400702& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400702::SharedCtor() {
  _cached_size_ = 0;
  label_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400702::~Proto51400702() {
  SharedDtor();
}

void Proto51400702::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400702::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400702::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400702_descriptor_;
}

const Proto51400702& Proto51400702::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto51400702* Proto51400702::default_instance_ = NULL;

Proto51400702* Proto51400702::New() const {
  return new Proto51400702;
}

void Proto51400702::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    label_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400702::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 label_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_id_)));
          set_has_label_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400702::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 label_id = 1;
  if (has_label_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->label_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400702::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 label_id = 1;
  if (has_label_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->label_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400702::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 label_id = 1;
    if (has_label_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400702::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400702* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400702*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400702::MergeFrom(const Proto51400702& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_label_id()) {
      set_label_id(from.label_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400702::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400702::CopyFrom(const Proto51400702& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400702::IsInitialized() const {
  
  return true;
}

void Proto51400702::Swap(Proto51400702* other) {
  if (other != this) {
    std::swap(label_id_, other->label_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400702::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400702_descriptor_;
  metadata.reflection = Proto51400702_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400701::kOperateFieldNumber;
const int Proto81400701::kLabelIdFieldNumber;
const int Proto81400701::kLeftTimeFieldNumber;
const int Proto81400701::kPropListFieldNumber;
#endif  // !_MSC_VER

Proto81400701::Proto81400701()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400701::InitAsDefaultInstance() {
  prop_list_ = const_cast< ::ProtoFightPro*>(&::ProtoFightPro::default_instance());
}

Proto81400701::Proto81400701(const Proto81400701& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400701::SharedCtor() {
  _cached_size_ = 0;
  operate_ = 0;
  label_id_ = 0;
  left_time_ = 0;
  prop_list_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400701::~Proto81400701() {
  SharedDtor();
}

void Proto81400701::SharedDtor() {
  if (this != default_instance_) {
    delete prop_list_;
  }
}

void Proto81400701::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400701::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400701_descriptor_;
}

const Proto81400701& Proto81400701::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto81400701* Proto81400701::default_instance_ = NULL;

Proto81400701* Proto81400701::New() const {
  return new Proto81400701;
}

void Proto81400701::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    operate_ = 0;
    label_id_ = 0;
    left_time_ = 0;
    if (has_prop_list()) {
      if (prop_list_ != NULL) prop_list_->::ProtoFightPro::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400701::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 operate = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operate_)));
          set_has_operate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_label_id;
        break;
      }
      
      // optional int32 label_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_label_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_id_)));
          set_has_label_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_prop_list;
        break;
      }
      
      // optional .ProtoFightPro prop_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prop_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prop_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400701::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 operate = 1;
  if (has_operate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->operate(), output);
  }
  
  // optional int32 label_id = 2;
  if (has_label_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->label_id(), output);
  }
  
  // optional int32 left_time = 3;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_time(), output);
  }
  
  // optional .ProtoFightPro prop_list = 4;
  if (has_prop_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->prop_list(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400701::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 operate = 1;
  if (has_operate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->operate(), target);
  }
  
  // optional int32 label_id = 2;
  if (has_label_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->label_id(), target);
  }
  
  // optional int32 left_time = 3;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_time(), target);
  }
  
  // optional .ProtoFightPro prop_list = 4;
  if (has_prop_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->prop_list(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400701::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 operate = 1;
    if (has_operate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->operate());
    }
    
    // optional int32 label_id = 2;
    if (has_label_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_id());
    }
    
    // optional int32 left_time = 3;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional .ProtoFightPro prop_list = 4;
    if (has_prop_list()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prop_list());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400701::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400701* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400701*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400701::MergeFrom(const Proto81400701& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_operate()) {
      set_operate(from.operate());
    }
    if (from.has_label_id()) {
      set_label_id(from.label_id());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_prop_list()) {
      mutable_prop_list()->::ProtoFightPro::MergeFrom(from.prop_list());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400701::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400701::CopyFrom(const Proto81400701& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400701::IsInitialized() const {
  
  return true;
}

void Proto81400701::Swap(Proto81400701* other) {
  if (other != this) {
    std::swap(operate_, other->operate_);
    std::swap(label_id_, other->label_id_);
    std::swap(left_time_, other->left_time_);
    std::swap(prop_list_, other->prop_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400701::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400701_descriptor_;
  metadata.reflection = Proto81400701_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400904::kIsForceBuyFieldNumber;
#endif  // !_MSC_VER

Proto11400904::Proto11400904()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400904::InitAsDefaultInstance() {
}

Proto11400904::Proto11400904(const Proto11400904& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400904::SharedCtor() {
  _cached_size_ = 0;
  is_force_buy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400904::~Proto11400904() {
  SharedDtor();
}

void Proto11400904::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400904::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400904::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400904_descriptor_;
}

const Proto11400904& Proto11400904::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto11400904* Proto11400904::default_instance_ = NULL;

Proto11400904* Proto11400904::New() const {
  return new Proto11400904;
}

void Proto11400904::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_force_buy_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400904::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 is_force_buy = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_force_buy_)));
          set_has_is_force_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400904::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 is_force_buy = 1;
  if (has_is_force_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->is_force_buy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400904::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 is_force_buy = 1;
  if (has_is_force_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->is_force_buy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400904::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 is_force_buy = 1;
    if (has_is_force_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_force_buy());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400904::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400904* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400904*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400904::MergeFrom(const Proto11400904& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_force_buy()) {
      set_is_force_buy(from.is_force_buy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400904::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400904::CopyFrom(const Proto11400904& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400904::IsInitialized() const {
  
  return true;
}

void Proto11400904::Swap(Proto11400904* other) {
  if (other != this) {
    std::swap(is_force_buy_, other->is_force_buy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400904::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400904_descriptor_;
  metadata.reflection = Proto11400904_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400904::kItemListFieldNumber;
const int Proto51400904::kLackCopperFieldNumber;
const int Proto51400904::kLackBindCopperFieldNumber;
const int Proto51400904::kNeedGoldFieldNumber;
const int Proto51400904::kCurLuckyFieldNumber;
#endif  // !_MSC_VER

Proto51400904::Proto51400904()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400904::InitAsDefaultInstance() {
}

Proto51400904::Proto51400904(const Proto51400904& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400904::SharedCtor() {
  _cached_size_ = 0;
  lack_copper_ = 0;
  lack_bind_copper_ = 0;
  need_gold_ = 0;
  cur_lucky_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400904::~Proto51400904() {
  SharedDtor();
}

void Proto51400904::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400904::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400904::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400904_descriptor_;
}

const Proto51400904& Proto51400904::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto51400904* Proto51400904::default_instance_ = NULL;

Proto51400904* Proto51400904::New() const {
  return new Proto51400904;
}

void Proto51400904::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    lack_copper_ = 0;
    lack_bind_copper_ = 0;
    need_gold_ = 0;
    cur_lucky_ = 0;
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400904::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_list;
        if (input->ExpectTag(16)) goto parse_lack_copper;
        break;
      }
      
      // optional int32 lack_copper = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lack_copper:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lack_copper_)));
          set_has_lack_copper();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_lack_bind_copper;
        break;
      }
      
      // optional int32 lack_bind_copper = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lack_bind_copper:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lack_bind_copper_)));
          set_has_lack_bind_copper();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_need_gold;
        break;
      }
      
      // optional int32 need_gold = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_need_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_gold_)));
          set_has_need_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_cur_lucky;
        break;
      }
      
      // optional int32 cur_lucky = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_lucky:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_lucky_)));
          set_has_cur_lucky();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400904::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(i), output);
  }
  
  // optional int32 lack_copper = 2;
  if (has_lack_copper()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lack_copper(), output);
  }
  
  // optional int32 lack_bind_copper = 3;
  if (has_lack_bind_copper()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lack_bind_copper(), output);
  }
  
  // optional int32 need_gold = 4;
  if (has_need_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->need_gold(), output);
  }
  
  // optional int32 cur_lucky = 5;
  if (has_cur_lucky()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cur_lucky(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400904::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_list(i), target);
  }
  
  // optional int32 lack_copper = 2;
  if (has_lack_copper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->lack_copper(), target);
  }
  
  // optional int32 lack_bind_copper = 3;
  if (has_lack_bind_copper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lack_bind_copper(), target);
  }
  
  // optional int32 need_gold = 4;
  if (has_need_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->need_gold(), target);
  }
  
  // optional int32 cur_lucky = 5;
  if (has_cur_lucky()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cur_lucky(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400904::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 lack_copper = 2;
    if (has_lack_copper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lack_copper());
    }
    
    // optional int32 lack_bind_copper = 3;
    if (has_lack_bind_copper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lack_bind_copper());
    }
    
    // optional int32 need_gold = 4;
    if (has_need_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->need_gold());
    }
    
    // optional int32 cur_lucky = 5;
    if (has_cur_lucky()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_lucky());
    }
    
  }
  // repeated .ProtoItem item_list = 1;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400904::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400904* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400904*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400904::MergeFrom(const Proto51400904& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_lack_copper()) {
      set_lack_copper(from.lack_copper());
    }
    if (from.has_lack_bind_copper()) {
      set_lack_bind_copper(from.lack_bind_copper());
    }
    if (from.has_need_gold()) {
      set_need_gold(from.need_gold());
    }
    if (from.has_cur_lucky()) {
      set_cur_lucky(from.cur_lucky());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400904::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400904::CopyFrom(const Proto51400904& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400904::IsInitialized() const {
  
  return true;
}

void Proto51400904::Swap(Proto51400904* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(lack_copper_, other->lack_copper_);
    std::swap(lack_bind_copper_, other->lack_bind_copper_);
    std::swap(need_gold_, other->need_gold_);
    std::swap(cur_lucky_, other->cur_lucky_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400904::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400904_descriptor_;
  metadata.reflection = Proto51400904_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400901::kRecordListFieldNumber;
#endif  // !_MSC_VER

Proto81400901::Proto81400901()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400901::InitAsDefaultInstance() {
}

Proto81400901::Proto81400901(const Proto81400901& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400901::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400901::~Proto81400901() {
  SharedDtor();
}

void Proto81400901::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400901::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400901::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400901_descriptor_;
}

const Proto81400901& Proto81400901::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto81400901* Proto81400901::default_instance_ = NULL;

Proto81400901* Proto81400901::New() const {
  return new Proto81400901;
}

void Proto81400901::Clear() {
  record_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400901::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoDivineRecord record_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_record_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_record_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400901::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoDivineRecord record_list = 1;
  for (int i = 0; i < this->record_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->record_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400901::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoDivineRecord record_list = 1;
  for (int i = 0; i < this->record_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->record_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400901::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoDivineRecord record_list = 1;
  total_size += 1 * this->record_list_size();
  for (int i = 0; i < this->record_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400901::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400901* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400901*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400901::MergeFrom(const Proto81400901& from) {
  GOOGLE_CHECK_NE(&from, this);
  record_list_.MergeFrom(from.record_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400901::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400901::CopyFrom(const Proto81400901& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400901::IsInitialized() const {
  
  return true;
}

void Proto81400901::Swap(Proto81400901* other) {
  if (other != this) {
    record_list_.Swap(&other->record_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400901::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400901_descriptor_;
  metadata.reflection = Proto81400901_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400908::kRecordListFieldNumber;
#endif  // !_MSC_VER

Proto51400908::Proto51400908()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400908::InitAsDefaultInstance() {
}

Proto51400908::Proto51400908(const Proto51400908& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400908::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400908::~Proto51400908() {
  SharedDtor();
}

void Proto51400908::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400908::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400908::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400908_descriptor_;
}

const Proto51400908& Proto51400908::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto51400908* Proto51400908::default_instance_ = NULL;

Proto51400908* Proto51400908::New() const {
  return new Proto51400908;
}

void Proto51400908::Clear() {
  record_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400908::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoDivineRecord record_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_record_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_record_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400908::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoDivineRecord record_list = 1;
  for (int i = 0; i < this->record_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->record_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400908::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoDivineRecord record_list = 1;
  for (int i = 0; i < this->record_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->record_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400908::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoDivineRecord record_list = 1;
  total_size += 1 * this->record_list_size();
  for (int i = 0; i < this->record_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400908::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400908* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400908*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400908::MergeFrom(const Proto51400908& from) {
  GOOGLE_CHECK_NE(&from, this);
  record_list_.MergeFrom(from.record_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400908::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400908::CopyFrom(const Proto51400908& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400908::IsInitialized() const {
  
  return true;
}

void Proto51400908::Swap(Proto51400908* other) {
  if (other != this) {
    record_list_.Swap(&other->record_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400908::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400908_descriptor_;
  metadata.reflection = Proto51400908_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401102::kAchIndexFieldNumber;
const int Proto11401102::kAchieveIdFieldNumber;
#endif  // !_MSC_VER

Proto11401102::Proto11401102()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401102::InitAsDefaultInstance() {
}

Proto11401102::Proto11401102(const Proto11401102& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401102::SharedCtor() {
  _cached_size_ = 0;
  ach_index_ = 0;
  achieve_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401102::~Proto11401102() {
  SharedDtor();
}

void Proto11401102::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401102::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401102::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401102_descriptor_;
}

const Proto11401102& Proto11401102::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto11401102* Proto11401102::default_instance_ = NULL;

Proto11401102* Proto11401102::New() const {
  return new Proto11401102;
}

void Proto11401102::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ach_index_ = 0;
    achieve_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401102::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ach_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ach_index_)));
          set_has_ach_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_achieve_id;
        break;
      }
      
      // optional int32 achieve_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_achieve_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &achieve_id_)));
          set_has_achieve_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401102::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ach_index = 1;
  if (has_ach_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ach_index(), output);
  }
  
  // optional int32 achieve_id = 2;
  if (has_achieve_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->achieve_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401102::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ach_index = 1;
  if (has_ach_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ach_index(), target);
  }
  
  // optional int32 achieve_id = 2;
  if (has_achieve_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->achieve_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401102::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ach_index = 1;
    if (has_ach_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ach_index());
    }
    
    // optional int32 achieve_id = 2;
    if (has_achieve_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->achieve_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401102::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401102* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401102*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401102::MergeFrom(const Proto11401102& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ach_index()) {
      set_ach_index(from.ach_index());
    }
    if (from.has_achieve_id()) {
      set_achieve_id(from.achieve_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401102::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401102::CopyFrom(const Proto11401102& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401102::IsInitialized() const {
  
  return true;
}

void Proto11401102::Swap(Proto11401102* other) {
  if (other != this) {
    std::swap(ach_index_, other->ach_index_);
    std::swap(achieve_id_, other->achieve_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401102::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401102_descriptor_;
  metadata.reflection = Proto11401102_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401101::kAchieveIdFieldNumber;
#endif  // !_MSC_VER

Proto81401101::Proto81401101()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401101::InitAsDefaultInstance() {
}

Proto81401101::Proto81401101(const Proto81401101& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401101::SharedCtor() {
  _cached_size_ = 0;
  achieve_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401101::~Proto81401101() {
  SharedDtor();
}

void Proto81401101::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401101::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401101::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401101_descriptor_;
}

const Proto81401101& Proto81401101::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto81401101* Proto81401101::default_instance_ = NULL;

Proto81401101* Proto81401101::New() const {
  return new Proto81401101;
}

void Proto81401101::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    achieve_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401101::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 achieve_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &achieve_id_)));
          set_has_achieve_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401101::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 achieve_id = 1;
  if (has_achieve_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->achieve_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401101::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 achieve_id = 1;
  if (has_achieve_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->achieve_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401101::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 achieve_id = 1;
    if (has_achieve_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->achieve_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401101::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401101* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401101*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401101::MergeFrom(const Proto81401101& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_achieve_id()) {
      set_achieve_id(from.achieve_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401101::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401101::CopyFrom(const Proto81401101& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401101::IsInitialized() const {
  
  return true;
}

void Proto81401101::Swap(Proto81401101* other) {
  if (other != this) {
    std::swap(achieve_id_, other->achieve_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401101::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401101_descriptor_;
  metadata.reflection = Proto81401101_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401101::kAchieveListFieldNumber;
const int Proto51401101::kAchieveLevelFieldNumber;
const int Proto51401101::kPointSetFieldNumber;
const int Proto51401101::kProgressFieldNumber;
#endif  // !_MSC_VER

Proto51401101::Proto51401101()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401101::InitAsDefaultInstance() {
}

Proto51401101::Proto51401101(const Proto51401101& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401101::SharedCtor() {
  _cached_size_ = 0;
  achieve_level_ = 0;
  progress_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401101::~Proto51401101() {
  SharedDtor();
}

void Proto51401101::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401101::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401101::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401101_descriptor_;
}

const Proto51401101& Proto51401101::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto51401101* Proto51401101::default_instance_ = NULL;

Proto51401101* Proto51401101::New() const {
  return new Proto51401101;
}

void Proto51401101::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    achieve_level_ = 0;
    progress_ = 0;
  }
  achieve_list_.Clear();
  point_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401101::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoAchieveDetail achieve_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_achieve_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_achieve_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_achieve_list;
        if (input->ExpectTag(16)) goto parse_achieve_level;
        break;
      }
      
      // optional int32 achieve_level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_achieve_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &achieve_level_)));
          set_has_achieve_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_point_set;
        break;
      }
      
      // repeated .ProtoPairObj point_set = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_point_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_point_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_point_set;
        if (input->ExpectTag(32)) goto parse_progress;
        break;
      }
      
      // optional int32 progress = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_progress:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &progress_)));
          set_has_progress();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401101::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoAchieveDetail achieve_list = 1;
  for (int i = 0; i < this->achieve_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->achieve_list(i), output);
  }
  
  // optional int32 achieve_level = 2;
  if (has_achieve_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->achieve_level(), output);
  }
  
  // repeated .ProtoPairObj point_set = 3;
  for (int i = 0; i < this->point_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->point_set(i), output);
  }
  
  // optional int32 progress = 4;
  if (has_progress()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->progress(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401101::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoAchieveDetail achieve_list = 1;
  for (int i = 0; i < this->achieve_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->achieve_list(i), target);
  }
  
  // optional int32 achieve_level = 2;
  if (has_achieve_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->achieve_level(), target);
  }
  
  // repeated .ProtoPairObj point_set = 3;
  for (int i = 0; i < this->point_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->point_set(i), target);
  }
  
  // optional int32 progress = 4;
  if (has_progress()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->progress(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401101::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 achieve_level = 2;
    if (has_achieve_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->achieve_level());
    }
    
    // optional int32 progress = 4;
    if (has_progress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->progress());
    }
    
  }
  // repeated .ProtoAchieveDetail achieve_list = 1;
  total_size += 1 * this->achieve_list_size();
  for (int i = 0; i < this->achieve_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->achieve_list(i));
  }
  
  // repeated .ProtoPairObj point_set = 3;
  total_size += 1 * this->point_set_size();
  for (int i = 0; i < this->point_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->point_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401101::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401101* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401101*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401101::MergeFrom(const Proto51401101& from) {
  GOOGLE_CHECK_NE(&from, this);
  achieve_list_.MergeFrom(from.achieve_list_);
  point_set_.MergeFrom(from.point_set_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_achieve_level()) {
      set_achieve_level(from.achieve_level());
    }
    if (from.has_progress()) {
      set_progress(from.progress());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401101::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401101::CopyFrom(const Proto51401101& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401101::IsInitialized() const {
  
  return true;
}

void Proto51401101::Swap(Proto51401101* other) {
  if (other != this) {
    achieve_list_.Swap(&other->achieve_list_);
    std::swap(achieve_level_, other->achieve_level_);
    point_set_.Swap(&other->point_set_);
    std::swap(progress_, other->progress_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401101::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401101_descriptor_;
  metadata.reflection = Proto51401101_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401102::kAchieveIdFieldNumber;
#endif  // !_MSC_VER

Proto51401102::Proto51401102()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401102::InitAsDefaultInstance() {
}

Proto51401102::Proto51401102(const Proto51401102& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401102::SharedCtor() {
  _cached_size_ = 0;
  achieve_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401102::~Proto51401102() {
  SharedDtor();
}

void Proto51401102::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401102::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401102::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401102_descriptor_;
}

const Proto51401102& Proto51401102::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto51401102* Proto51401102::default_instance_ = NULL;

Proto51401102* Proto51401102::New() const {
  return new Proto51401102;
}

void Proto51401102::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    achieve_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401102::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 achieve_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &achieve_id_)));
          set_has_achieve_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401102::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 achieve_id = 1;
  if (has_achieve_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->achieve_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401102::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 achieve_id = 1;
  if (has_achieve_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->achieve_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401102::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 achieve_id = 1;
    if (has_achieve_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->achieve_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401102::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401102* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401102*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401102::MergeFrom(const Proto51401102& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_achieve_id()) {
      set_achieve_id(from.achieve_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401102::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401102::CopyFrom(const Proto51401102& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401102::IsInitialized() const {
  
  return true;
}

void Proto51401102::Swap(Proto51401102* other) {
  if (other != this) {
    std::swap(achieve_id_, other->achieve_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401102::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401102_descriptor_;
  metadata.reflection = Proto51401102_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400703::kLabelIdFieldNumber;
#endif  // !_MSC_VER

Proto11400703::Proto11400703()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400703::InitAsDefaultInstance() {
}

Proto11400703::Proto11400703(const Proto11400703& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400703::SharedCtor() {
  _cached_size_ = 0;
  label_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400703::~Proto11400703() {
  SharedDtor();
}

void Proto11400703::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400703::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400703::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400703_descriptor_;
}

const Proto11400703& Proto11400703::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto11400703* Proto11400703::default_instance_ = NULL;

Proto11400703* Proto11400703::New() const {
  return new Proto11400703;
}

void Proto11400703::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    label_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400703::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 label_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_id_)));
          set_has_label_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400703::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 label_id = 1;
  if (has_label_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->label_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400703::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 label_id = 1;
  if (has_label_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->label_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400703::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 label_id = 1;
    if (has_label_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400703::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400703* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400703*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400703::MergeFrom(const Proto11400703& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_label_id()) {
      set_label_id(from.label_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400703::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400703::CopyFrom(const Proto11400703& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400703::IsInitialized() const {
  
  return true;
}

void Proto11400703::Swap(Proto11400703* other) {
  if (other != this) {
    std::swap(label_id_, other->label_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400703::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400703_descriptor_;
  metadata.reflection = Proto11400703_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400703::kLabelIdFieldNumber;
#endif  // !_MSC_VER

Proto51400703::Proto51400703()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400703::InitAsDefaultInstance() {
}

Proto51400703::Proto51400703(const Proto51400703& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400703::SharedCtor() {
  _cached_size_ = 0;
  label_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400703::~Proto51400703() {
  SharedDtor();
}

void Proto51400703::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400703::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400703::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400703_descriptor_;
}

const Proto51400703& Proto51400703::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto51400703* Proto51400703::default_instance_ = NULL;

Proto51400703* Proto51400703::New() const {
  return new Proto51400703;
}

void Proto51400703::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    label_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400703::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 label_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_id_)));
          set_has_label_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400703::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 label_id = 1;
  if (has_label_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->label_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400703::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 label_id = 1;
  if (has_label_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->label_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400703::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 label_id = 1;
    if (has_label_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400703::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400703* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400703*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400703::MergeFrom(const Proto51400703& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_label_id()) {
      set_label_id(from.label_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400703::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400703::CopyFrom(const Proto51400703& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400703::IsInitialized() const {
  
  return true;
}

void Proto51400703::Swap(Proto51400703* other) {
  if (other != this) {
    std::swap(label_id_, other->label_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400703::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400703_descriptor_;
  metadata.reflection = Proto51400703_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400704::kLabelIdFieldNumber;
#endif  // !_MSC_VER

Proto11400704::Proto11400704()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400704::InitAsDefaultInstance() {
}

Proto11400704::Proto11400704(const Proto11400704& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400704::SharedCtor() {
  _cached_size_ = 0;
  label_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400704::~Proto11400704() {
  SharedDtor();
}

void Proto11400704::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400704::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400704::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400704_descriptor_;
}

const Proto11400704& Proto11400704::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto11400704* Proto11400704::default_instance_ = NULL;

Proto11400704* Proto11400704::New() const {
  return new Proto11400704;
}

void Proto11400704::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    label_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400704::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 label_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_id_)));
          set_has_label_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400704::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 label_id = 1;
  if (has_label_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->label_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400704::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 label_id = 1;
  if (has_label_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->label_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400704::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 label_id = 1;
    if (has_label_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400704::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400704* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400704*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400704::MergeFrom(const Proto11400704& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_label_id()) {
      set_label_id(from.label_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400704::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400704::CopyFrom(const Proto11400704& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400704::IsInitialized() const {
  
  return true;
}

void Proto11400704::Swap(Proto11400704* other) {
  if (other != this) {
    std::swap(label_id_, other->label_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400704::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400704_descriptor_;
  metadata.reflection = Proto11400704_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400704::kLabelIdFieldNumber;
const int Proto51400704::kLeftTimeFieldNumber;
#endif  // !_MSC_VER

Proto51400704::Proto51400704()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400704::InitAsDefaultInstance() {
}

Proto51400704::Proto51400704(const Proto51400704& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400704::SharedCtor() {
  _cached_size_ = 0;
  label_id_ = 0;
  left_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400704::~Proto51400704() {
  SharedDtor();
}

void Proto51400704::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400704::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400704::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400704_descriptor_;
}

const Proto51400704& Proto51400704::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto51400704* Proto51400704::default_instance_ = NULL;

Proto51400704* Proto51400704::New() const {
  return new Proto51400704;
}

void Proto51400704::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    label_id_ = 0;
    left_time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400704::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 label_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_id_)));
          set_has_label_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400704::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 label_id = 1;
  if (has_label_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->label_id(), output);
  }
  
  // optional int32 left_time = 2;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400704::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 label_id = 1;
  if (has_label_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->label_id(), target);
  }
  
  // optional int32 left_time = 2;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400704::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 label_id = 1;
    if (has_label_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_id());
    }
    
    // optional int32 left_time = 2;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400704::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400704* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400704*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400704::MergeFrom(const Proto51400704& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_label_id()) {
      set_label_id(from.label_id());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400704::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400704::CopyFrom(const Proto51400704& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400704::IsInitialized() const {
  
  return true;
}

void Proto51400704::Swap(Proto51400704* other) {
  if (other != this) {
    std::swap(label_id_, other->label_id_);
    std::swap(left_time_, other->left_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400704::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400704_descriptor_;
  metadata.reflection = Proto51400704_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400706::kSkillListFieldNumber;
#endif  // !_MSC_VER

Proto50400706::Proto50400706()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400706::InitAsDefaultInstance() {
}

Proto50400706::Proto50400706(const Proto50400706& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400706::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400706::~Proto50400706() {
  SharedDtor();
}

void Proto50400706::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400706::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400706::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400706_descriptor_;
}

const Proto50400706& Proto50400706::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto50400706* Proto50400706::default_instance_ = NULL;

Proto50400706* Proto50400706::New() const {
  return new Proto50400706;
}

void Proto50400706::Clear() {
  skill_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400706::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 skill_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_skill_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_skill_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_skill_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400706::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 skill_list = 1;
  for (int i = 0; i < this->skill_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->skill_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400706::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 skill_list = 1;
  for (int i = 0; i < this->skill_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->skill_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400706::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 skill_list = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->skill_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->skill_list(i));
    }
    total_size += 1 * this->skill_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400706::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400706* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400706*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400706::MergeFrom(const Proto50400706& from) {
  GOOGLE_CHECK_NE(&from, this);
  skill_list_.MergeFrom(from.skill_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400706::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400706::CopyFrom(const Proto50400706& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400706::IsInitialized() const {
  
  return true;
}

void Proto50400706::Swap(Proto50400706* other) {
  if (other != this) {
    skill_list_.Swap(&other->skill_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400706::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400706_descriptor_;
  metadata.reflection = Proto50400706_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400901::kScriptSortFieldNumber;
const int Proto10400901::kPieceFieldNumber;
const int Proto10400901::kChapterFieldNumber;
const int Proto10400901::kReplacementsSetFieldNumber;
const int Proto10400901::kTeamIdFieldNumber;
const int Proto10400901::kTeamSetFieldNumber;
const int Proto10400901::kCheerNumFieldNumber;
const int Proto10400901::kEncourageNumFieldNumber;
#endif  // !_MSC_VER

Proto10400901::Proto10400901()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400901::InitAsDefaultInstance() {
}

Proto10400901::Proto10400901(const Proto10400901& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400901::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  piece_ = 0;
  chapter_ = 0;
  team_id_ = GOOGLE_LONGLONG(0);
  cheer_num_ = 0;
  encourage_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400901::~Proto10400901() {
  SharedDtor();
}

void Proto10400901::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400901::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400901::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400901_descriptor_;
}

const Proto10400901& Proto10400901::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto10400901* Proto10400901::default_instance_ = NULL;

Proto10400901* Proto10400901::New() const {
  return new Proto10400901;
}

void Proto10400901::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
    piece_ = 0;
    chapter_ = 0;
    team_id_ = GOOGLE_LONGLONG(0);
    cheer_num_ = 0;
    encourage_num_ = 0;
  }
  replacements_set_.Clear();
  team_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400901::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_piece;
        break;
      }
      
      // optional int32 piece = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_piece:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &piece_)));
          set_has_piece();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_chapter;
        break;
      }
      
      // optional int32 chapter = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_chapter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chapter_)));
          set_has_chapter();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_replacements_set;
        break;
      }
      
      // repeated int64 replacements_set = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_replacements_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 32, input, this->mutable_replacements_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_replacements_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_replacements_set;
        if (input->ExpectTag(40)) goto parse_team_id;
        break;
      }
      
      // optional int64 team_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_team_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_team_set;
        break;
      }
      
      // repeated int64 team_set = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_team_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 48, input, this->mutable_team_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_team_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_team_set;
        if (input->ExpectTag(56)) goto parse_cheer_num;
        break;
      }
      
      // optional int32 cheer_num = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cheer_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cheer_num_)));
          set_has_cheer_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_encourage_num;
        break;
      }
      
      // optional int32 encourage_num = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_encourage_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &encourage_num_)));
          set_has_encourage_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400901::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  // optional int32 piece = 2;
  if (has_piece()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->piece(), output);
  }
  
  // optional int32 chapter = 3;
  if (has_chapter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->chapter(), output);
  }
  
  // repeated int64 replacements_set = 4;
  for (int i = 0; i < this->replacements_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->replacements_set(i), output);
  }
  
  // optional int64 team_id = 5;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->team_id(), output);
  }
  
  // repeated int64 team_set = 6;
  for (int i = 0; i < this->team_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      6, this->team_set(i), output);
  }
  
  // optional int32 cheer_num = 7;
  if (has_cheer_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->cheer_num(), output);
  }
  
  // optional int32 encourage_num = 8;
  if (has_encourage_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->encourage_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400901::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  // optional int32 piece = 2;
  if (has_piece()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->piece(), target);
  }
  
  // optional int32 chapter = 3;
  if (has_chapter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->chapter(), target);
  }
  
  // repeated int64 replacements_set = 4;
  for (int i = 0; i < this->replacements_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(4, this->replacements_set(i), target);
  }
  
  // optional int64 team_id = 5;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->team_id(), target);
  }
  
  // repeated int64 team_set = 6;
  for (int i = 0; i < this->team_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(6, this->team_set(i), target);
  }
  
  // optional int32 cheer_num = 7;
  if (has_cheer_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->cheer_num(), target);
  }
  
  // optional int32 encourage_num = 8;
  if (has_encourage_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->encourage_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400901::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 piece = 2;
    if (has_piece()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->piece());
    }
    
    // optional int32 chapter = 3;
    if (has_chapter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chapter());
    }
    
    // optional int64 team_id = 5;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->team_id());
    }
    
    // optional int32 cheer_num = 7;
    if (has_cheer_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cheer_num());
    }
    
    // optional int32 encourage_num = 8;
    if (has_encourage_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->encourage_num());
    }
    
  }
  // repeated int64 replacements_set = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->replacements_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->replacements_set(i));
    }
    total_size += 1 * this->replacements_set_size() + data_size;
  }
  
  // repeated int64 team_set = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->team_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->team_set(i));
    }
    total_size += 1 * this->team_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400901::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400901* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400901*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400901::MergeFrom(const Proto10400901& from) {
  GOOGLE_CHECK_NE(&from, this);
  replacements_set_.MergeFrom(from.replacements_set_);
  team_set_.MergeFrom(from.team_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_piece()) {
      set_piece(from.piece());
    }
    if (from.has_chapter()) {
      set_chapter(from.chapter());
    }
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
    if (from.has_cheer_num()) {
      set_cheer_num(from.cheer_num());
    }
    if (from.has_encourage_num()) {
      set_encourage_num(from.encourage_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400901::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400901::CopyFrom(const Proto10400901& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400901::IsInitialized() const {
  
  return true;
}

void Proto10400901::Swap(Proto10400901* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(piece_, other->piece_);
    std::swap(chapter_, other->chapter_);
    replacements_set_.Swap(&other->replacements_set_);
    std::swap(team_id_, other->team_id_);
    team_set_.Swap(&other->team_set_);
    std::swap(cheer_num_, other->cheer_num_);
    std::swap(encourage_num_, other->encourage_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400901::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400901_descriptor_;
  metadata.reflection = Proto10400901_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400901::kDayPassTimeFieldNumber;
#endif  // !_MSC_VER

Proto50400901::Proto50400901()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400901::InitAsDefaultInstance() {
}

Proto50400901::Proto50400901(const Proto50400901& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400901::SharedCtor() {
  _cached_size_ = 0;
  day_pass_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400901::~Proto50400901() {
  SharedDtor();
}

void Proto50400901::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400901::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400901::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400901_descriptor_;
}

const Proto50400901& Proto50400901::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto50400901* Proto50400901::default_instance_ = NULL;

Proto50400901* Proto50400901::New() const {
  return new Proto50400901;
}

void Proto50400901::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    day_pass_time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400901::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 day_pass_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_pass_time_)));
          set_has_day_pass_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400901::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 day_pass_time = 1;
  if (has_day_pass_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->day_pass_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400901::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 day_pass_time = 1;
  if (has_day_pass_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->day_pass_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400901::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 day_pass_time = 1;
    if (has_day_pass_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->day_pass_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400901::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400901* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400901*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400901::MergeFrom(const Proto50400901& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_day_pass_time()) {
      set_day_pass_time(from.day_pass_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400901::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400901::CopyFrom(const Proto50400901& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400901::IsInitialized() const {
  
  return true;
}

void Proto50400901::Swap(Proto50400901* other) {
  if (other != this) {
    std::swap(day_pass_time_, other->day_pass_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400901::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400901_descriptor_;
  metadata.reflection = Proto50400901_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400901::kEvenCutFieldNumber;
const int Proto80400901::kPropRateFieldNumber;
const int Proto80400901::kMaxEvenCutFieldNumber;
#endif  // !_MSC_VER

Proto80400901::Proto80400901()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400901::InitAsDefaultInstance() {
}

Proto80400901::Proto80400901(const Proto80400901& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400901::SharedCtor() {
  _cached_size_ = 0;
  even_cut_ = 0;
  prop_rate_ = 0;
  max_even_cut_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400901::~Proto80400901() {
  SharedDtor();
}

void Proto80400901::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400901::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400901::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400901_descriptor_;
}

const Proto80400901& Proto80400901::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto80400901* Proto80400901::default_instance_ = NULL;

Proto80400901* Proto80400901::New() const {
  return new Proto80400901;
}

void Proto80400901::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    even_cut_ = 0;
    prop_rate_ = 0;
    max_even_cut_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400901::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 even_cut = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &even_cut_)));
          set_has_even_cut();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_prop_rate;
        break;
      }
      
      // optional int32 prop_rate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_prop_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prop_rate_)));
          set_has_prop_rate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_max_even_cut;
        break;
      }
      
      // optional int32 max_even_cut = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_even_cut:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_even_cut_)));
          set_has_max_even_cut();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400901::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 even_cut = 1;
  if (has_even_cut()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->even_cut(), output);
  }
  
  // optional int32 prop_rate = 2;
  if (has_prop_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->prop_rate(), output);
  }
  
  // optional int32 max_even_cut = 3;
  if (has_max_even_cut()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_even_cut(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400901::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 even_cut = 1;
  if (has_even_cut()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->even_cut(), target);
  }
  
  // optional int32 prop_rate = 2;
  if (has_prop_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->prop_rate(), target);
  }
  
  // optional int32 max_even_cut = 3;
  if (has_max_even_cut()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_even_cut(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400901::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 even_cut = 1;
    if (has_even_cut()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->even_cut());
    }
    
    // optional int32 prop_rate = 2;
    if (has_prop_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->prop_rate());
    }
    
    // optional int32 max_even_cut = 3;
    if (has_max_even_cut()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_even_cut());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400901::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400901* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400901*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400901::MergeFrom(const Proto80400901& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_even_cut()) {
      set_even_cut(from.even_cut());
    }
    if (from.has_prop_rate()) {
      set_prop_rate(from.prop_rate());
    }
    if (from.has_max_even_cut()) {
      set_max_even_cut(from.max_even_cut());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400901::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400901::CopyFrom(const Proto80400901& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400901::IsInitialized() const {
  
  return true;
}

void Proto80400901::Swap(Proto80400901* other) {
  if (other != this) {
    std::swap(even_cut_, other->even_cut_);
    std::swap(prop_rate_, other->prop_rate_);
    std::swap(max_even_cut_, other->max_even_cut_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400901::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400901_descriptor_;
  metadata.reflection = Proto80400901_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400903::kLeftSecFieldNumber;
const int Proto50400903::kScriptSortFieldNumber;
const int Proto50400903::kTotalSecFieldNumber;
const int Proto50400903::kLeftReliveFieldNumber;
const int Proto50400903::kTotalReliveFieldNumber;
const int Proto50400903::kLeftMonsterFieldNumber;
const int Proto50400903::kTotalMonsterFieldNumber;
const int Proto50400903::kMonsterRecFieldNumber;
const int Proto50400903::kTopEvencutFieldNumber;
const int Proto50400903::kScriptStatusFieldNumber;
const int Proto50400903::kKilledMonsterFieldNumber;
const int Proto50400903::kCurrentWaveFieldNumber;
const int Proto50400903::kCurrentFloorFieldNumber;
const int Proto50400903::kProtectNpcBloodFieldNumber;
const int Proto50400903::kProtectNpcMaxbloodFieldNumber;
const int Proto50400903::kPieceFieldNumber;
const int Proto50400903::kChapterFieldNumber;
const int Proto50400903::kUsedSecFieldNumber;
const int Proto50400903::kPuppetListFieldNumber;
const int Proto50400903::kRescueSortFieldNumber;
const int Proto50400903::kRescueLeftFieldNumber;
const int Proto50400903::kPoemTextFieldNumber;
const int Proto50400903::kPoemAppearIndexFieldNumber;
const int Proto50400903::kPoemSizeFieldNumber;
const int Proto50400903::kIsFirstScriptFieldNumber;
const int Proto50400903::kDifficultyFieldNumber;
const int Proto50400903::kDayPassTimeFieldNumber;
const int Proto50400903::kHatchSortFieldNumber;
const int Proto50400903::kHatchCondFieldNumber;
const int Proto50400903::kTotalWaveFieldNumber;
const int Proto50400903::kBeginWaveFieldNumber;
const int Proto50400903::kGetExpFieldNumber;
#endif  // !_MSC_VER

Proto50400903::Proto50400903()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400903::InitAsDefaultInstance() {
}

Proto50400903::Proto50400903(const Proto50400903& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400903::SharedCtor() {
  _cached_size_ = 0;
  left_sec_ = 0;
  script_sort_ = 0;
  total_sec_ = 0;
  left_relive_ = 0;
  total_relive_ = 0;
  left_monster_ = 0;
  total_monster_ = 0;
  top_evencut_ = 0;
  script_status_ = 0;
  killed_monster_ = 0;
  current_wave_ = 0;
  current_floor_ = 0;
  protect_npc_blood_ = 0;
  protect_npc_maxblood_ = 0;
  piece_ = 0;
  chapter_ = 0;
  used_sec_ = 0;
  rescue_sort_ = 0;
  rescue_left_ = 0;
  poem_text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  poem_size_ = 0;
  is_first_script_ = 0;
  difficulty_ = 0;
  day_pass_time_ = 0;
  hatch_sort_ = 0;
  hatch_cond_ = 0;
  total_wave_ = 0;
  begin_wave_ = 0;
  get_exp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400903::~Proto50400903() {
  SharedDtor();
}

void Proto50400903::SharedDtor() {
  if (poem_text_ != &::google::protobuf::internal::kEmptyString) {
    delete poem_text_;
  }
  if (this != default_instance_) {
  }
}

void Proto50400903::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400903::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400903_descriptor_;
}

const Proto50400903& Proto50400903::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto50400903* Proto50400903::default_instance_ = NULL;

Proto50400903* Proto50400903::New() const {
  return new Proto50400903;
}

void Proto50400903::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_sec_ = 0;
    script_sort_ = 0;
    total_sec_ = 0;
    left_relive_ = 0;
    total_relive_ = 0;
    left_monster_ = 0;
    total_monster_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    top_evencut_ = 0;
    script_status_ = 0;
    killed_monster_ = 0;
    current_wave_ = 0;
    current_floor_ = 0;
    protect_npc_blood_ = 0;
    protect_npc_maxblood_ = 0;
    piece_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    chapter_ = 0;
    used_sec_ = 0;
    rescue_sort_ = 0;
    rescue_left_ = 0;
    if (has_poem_text()) {
      if (poem_text_ != &::google::protobuf::internal::kEmptyString) {
        poem_text_->clear();
      }
    }
    poem_size_ = 0;
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    is_first_script_ = 0;
    difficulty_ = 0;
    day_pass_time_ = 0;
    hatch_sort_ = 0;
    hatch_cond_ = 0;
    total_wave_ = 0;
    begin_wave_ = 0;
    get_exp_ = 0;
  }
  monster_rec_.Clear();
  puppet_list_.Clear();
  poem_appear_index_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400903::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_sec = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_sec_)));
          set_has_left_sec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_script_sort;
        break;
      }
      
      // optional int32 script_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_total_sec;
        break;
      }
      
      // optional int32 total_sec = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_sec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_sec_)));
          set_has_total_sec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_left_relive;
        break;
      }
      
      // optional int32 left_relive = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_relive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_relive_)));
          set_has_left_relive();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_total_relive;
        break;
      }
      
      // optional int32 total_relive = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_relive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_relive_)));
          set_has_total_relive();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_left_monster;
        break;
      }
      
      // optional int32 left_monster = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_monster:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_monster_)));
          set_has_left_monster();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_total_monster;
        break;
      }
      
      // optional int32 total_monster = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_monster:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_monster_)));
          set_has_total_monster();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_monster_rec;
        break;
      }
      
      // repeated .ProtoMonster monster_rec = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_monster_rec:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_monster_rec()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_monster_rec;
        if (input->ExpectTag(72)) goto parse_top_evencut;
        break;
      }
      
      // optional int32 top_evencut = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_top_evencut:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_evencut_)));
          set_has_top_evencut();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_script_status;
        break;
      }
      
      // optional int32 script_status = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_status_)));
          set_has_script_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_killed_monster;
        break;
      }
      
      // optional int32 killed_monster = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_killed_monster:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &killed_monster_)));
          set_has_killed_monster();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_current_wave;
        break;
      }
      
      // optional int32 current_wave = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_current_wave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_wave_)));
          set_has_current_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_current_floor;
        break;
      }
      
      // optional int32 current_floor = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_current_floor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_floor_)));
          set_has_current_floor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_protect_npc_blood;
        break;
      }
      
      // optional int32 protect_npc_blood = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_protect_npc_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &protect_npc_blood_)));
          set_has_protect_npc_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_protect_npc_maxblood;
        break;
      }
      
      // optional int32 protect_npc_maxblood = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_protect_npc_maxblood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &protect_npc_maxblood_)));
          set_has_protect_npc_maxblood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_piece;
        break;
      }
      
      // optional int32 piece = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_piece:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &piece_)));
          set_has_piece();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_chapter;
        break;
      }
      
      // optional int32 chapter = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_chapter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chapter_)));
          set_has_chapter();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_used_sec;
        break;
      }
      
      // optional int32 used_sec = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_used_sec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &used_sec_)));
          set_has_used_sec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_puppet_list;
        break;
      }
      
      // repeated int32 puppet_list = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_puppet_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 152, input, this->mutable_puppet_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_puppet_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_puppet_list;
        if (input->ExpectTag(160)) goto parse_rescue_sort;
        break;
      }
      
      // optional int32 rescue_sort = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rescue_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rescue_sort_)));
          set_has_rescue_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_rescue_left;
        break;
      }
      
      // optional int32 rescue_left = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rescue_left:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rescue_left_)));
          set_has_rescue_left();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_poem_text;
        break;
      }
      
      // optional string poem_text = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_poem_text:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_poem_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->poem_text().data(), this->poem_text().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_poem_appear_index;
        break;
      }
      
      // repeated int32 poem_appear_index = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_poem_appear_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 184, input, this->mutable_poem_appear_index())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_poem_appear_index())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_poem_appear_index;
        if (input->ExpectTag(192)) goto parse_poem_size;
        break;
      }
      
      // optional int32 poem_size = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_poem_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &poem_size_)));
          set_has_poem_size();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_is_first_script;
        break;
      }
      
      // optional int32 is_first_script = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_first_script:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_first_script_)));
          set_has_is_first_script();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(208)) goto parse_difficulty;
        break;
      }
      
      // optional int32 difficulty = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_difficulty:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &difficulty_)));
          set_has_difficulty();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(216)) goto parse_day_pass_time;
        break;
      }
      
      // optional int32 day_pass_time = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_day_pass_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_pass_time_)));
          set_has_day_pass_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(224)) goto parse_hatch_sort;
        break;
      }
      
      // optional int32 hatch_sort = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hatch_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hatch_sort_)));
          set_has_hatch_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(232)) goto parse_hatch_cond;
        break;
      }
      
      // optional int32 hatch_cond = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hatch_cond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hatch_cond_)));
          set_has_hatch_cond();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(240)) goto parse_total_wave;
        break;
      }
      
      // optional int32 total_wave = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_wave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_wave_)));
          set_has_total_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(248)) goto parse_begin_wave;
        break;
      }
      
      // optional int32 begin_wave = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_begin_wave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &begin_wave_)));
          set_has_begin_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(256)) goto parse_get_exp;
        break;
      }
      
      // optional int32 get_exp = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_get_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &get_exp_)));
          set_has_get_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400903::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_sec = 1;
  if (has_left_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_sec(), output);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->script_sort(), output);
  }
  
  // optional int32 total_sec = 3;
  if (has_total_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_sec(), output);
  }
  
  // optional int32 left_relive = 4;
  if (has_left_relive()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->left_relive(), output);
  }
  
  // optional int32 total_relive = 5;
  if (has_total_relive()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->total_relive(), output);
  }
  
  // optional int32 left_monster = 6;
  if (has_left_monster()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->left_monster(), output);
  }
  
  // optional int32 total_monster = 7;
  if (has_total_monster()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->total_monster(), output);
  }
  
  // repeated .ProtoMonster monster_rec = 8;
  for (int i = 0; i < this->monster_rec_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->monster_rec(i), output);
  }
  
  // optional int32 top_evencut = 9;
  if (has_top_evencut()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->top_evencut(), output);
  }
  
  // optional int32 script_status = 10;
  if (has_script_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->script_status(), output);
  }
  
  // optional int32 killed_monster = 11;
  if (has_killed_monster()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->killed_monster(), output);
  }
  
  // optional int32 current_wave = 12;
  if (has_current_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->current_wave(), output);
  }
  
  // optional int32 current_floor = 13;
  if (has_current_floor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->current_floor(), output);
  }
  
  // optional int32 protect_npc_blood = 14;
  if (has_protect_npc_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->protect_npc_blood(), output);
  }
  
  // optional int32 protect_npc_maxblood = 15;
  if (has_protect_npc_maxblood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->protect_npc_maxblood(), output);
  }
  
  // optional int32 piece = 16;
  if (has_piece()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->piece(), output);
  }
  
  // optional int32 chapter = 17;
  if (has_chapter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->chapter(), output);
  }
  
  // optional int32 used_sec = 18;
  if (has_used_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->used_sec(), output);
  }
  
  // repeated int32 puppet_list = 19;
  for (int i = 0; i < this->puppet_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      19, this->puppet_list(i), output);
  }
  
  // optional int32 rescue_sort = 20;
  if (has_rescue_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->rescue_sort(), output);
  }
  
  // optional int32 rescue_left = 21;
  if (has_rescue_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->rescue_left(), output);
  }
  
  // optional string poem_text = 22;
  if (has_poem_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->poem_text().data(), this->poem_text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->poem_text(), output);
  }
  
  // repeated int32 poem_appear_index = 23;
  for (int i = 0; i < this->poem_appear_index_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      23, this->poem_appear_index(i), output);
  }
  
  // optional int32 poem_size = 24;
  if (has_poem_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->poem_size(), output);
  }
  
  // optional int32 is_first_script = 25;
  if (has_is_first_script()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->is_first_script(), output);
  }
  
  // optional int32 difficulty = 26;
  if (has_difficulty()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->difficulty(), output);
  }
  
  // optional int32 day_pass_time = 27;
  if (has_day_pass_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->day_pass_time(), output);
  }
  
  // optional int32 hatch_sort = 28;
  if (has_hatch_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->hatch_sort(), output);
  }
  
  // optional int32 hatch_cond = 29;
  if (has_hatch_cond()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->hatch_cond(), output);
  }
  
  // optional int32 total_wave = 30;
  if (has_total_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->total_wave(), output);
  }
  
  // optional int32 begin_wave = 31;
  if (has_begin_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->begin_wave(), output);
  }
  
  // optional int32 get_exp = 32;
  if (has_get_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->get_exp(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400903::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_sec = 1;
  if (has_left_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_sec(), target);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->script_sort(), target);
  }
  
  // optional int32 total_sec = 3;
  if (has_total_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_sec(), target);
  }
  
  // optional int32 left_relive = 4;
  if (has_left_relive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->left_relive(), target);
  }
  
  // optional int32 total_relive = 5;
  if (has_total_relive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->total_relive(), target);
  }
  
  // optional int32 left_monster = 6;
  if (has_left_monster()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->left_monster(), target);
  }
  
  // optional int32 total_monster = 7;
  if (has_total_monster()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->total_monster(), target);
  }
  
  // repeated .ProtoMonster monster_rec = 8;
  for (int i = 0; i < this->monster_rec_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->monster_rec(i), target);
  }
  
  // optional int32 top_evencut = 9;
  if (has_top_evencut()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->top_evencut(), target);
  }
  
  // optional int32 script_status = 10;
  if (has_script_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->script_status(), target);
  }
  
  // optional int32 killed_monster = 11;
  if (has_killed_monster()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->killed_monster(), target);
  }
  
  // optional int32 current_wave = 12;
  if (has_current_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->current_wave(), target);
  }
  
  // optional int32 current_floor = 13;
  if (has_current_floor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->current_floor(), target);
  }
  
  // optional int32 protect_npc_blood = 14;
  if (has_protect_npc_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->protect_npc_blood(), target);
  }
  
  // optional int32 protect_npc_maxblood = 15;
  if (has_protect_npc_maxblood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->protect_npc_maxblood(), target);
  }
  
  // optional int32 piece = 16;
  if (has_piece()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->piece(), target);
  }
  
  // optional int32 chapter = 17;
  if (has_chapter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->chapter(), target);
  }
  
  // optional int32 used_sec = 18;
  if (has_used_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->used_sec(), target);
  }
  
  // repeated int32 puppet_list = 19;
  for (int i = 0; i < this->puppet_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(19, this->puppet_list(i), target);
  }
  
  // optional int32 rescue_sort = 20;
  if (has_rescue_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->rescue_sort(), target);
  }
  
  // optional int32 rescue_left = 21;
  if (has_rescue_left()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->rescue_left(), target);
  }
  
  // optional string poem_text = 22;
  if (has_poem_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->poem_text().data(), this->poem_text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->poem_text(), target);
  }
  
  // repeated int32 poem_appear_index = 23;
  for (int i = 0; i < this->poem_appear_index_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(23, this->poem_appear_index(i), target);
  }
  
  // optional int32 poem_size = 24;
  if (has_poem_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->poem_size(), target);
  }
  
  // optional int32 is_first_script = 25;
  if (has_is_first_script()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->is_first_script(), target);
  }
  
  // optional int32 difficulty = 26;
  if (has_difficulty()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->difficulty(), target);
  }
  
  // optional int32 day_pass_time = 27;
  if (has_day_pass_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->day_pass_time(), target);
  }
  
  // optional int32 hatch_sort = 28;
  if (has_hatch_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->hatch_sort(), target);
  }
  
  // optional int32 hatch_cond = 29;
  if (has_hatch_cond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->hatch_cond(), target);
  }
  
  // optional int32 total_wave = 30;
  if (has_total_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->total_wave(), target);
  }
  
  // optional int32 begin_wave = 31;
  if (has_begin_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->begin_wave(), target);
  }
  
  // optional int32 get_exp = 32;
  if (has_get_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->get_exp(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400903::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_sec = 1;
    if (has_left_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_sec());
    }
    
    // optional int32 script_sort = 2;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 total_sec = 3;
    if (has_total_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_sec());
    }
    
    // optional int32 left_relive = 4;
    if (has_left_relive()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_relive());
    }
    
    // optional int32 total_relive = 5;
    if (has_total_relive()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_relive());
    }
    
    // optional int32 left_monster = 6;
    if (has_left_monster()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_monster());
    }
    
    // optional int32 total_monster = 7;
    if (has_total_monster()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_monster());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 top_evencut = 9;
    if (has_top_evencut()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top_evencut());
    }
    
    // optional int32 script_status = 10;
    if (has_script_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_status());
    }
    
    // optional int32 killed_monster = 11;
    if (has_killed_monster()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->killed_monster());
    }
    
    // optional int32 current_wave = 12;
    if (has_current_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->current_wave());
    }
    
    // optional int32 current_floor = 13;
    if (has_current_floor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->current_floor());
    }
    
    // optional int32 protect_npc_blood = 14;
    if (has_protect_npc_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->protect_npc_blood());
    }
    
    // optional int32 protect_npc_maxblood = 15;
    if (has_protect_npc_maxblood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->protect_npc_maxblood());
    }
    
    // optional int32 piece = 16;
    if (has_piece()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->piece());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 chapter = 17;
    if (has_chapter()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chapter());
    }
    
    // optional int32 used_sec = 18;
    if (has_used_sec()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->used_sec());
    }
    
    // optional int32 rescue_sort = 20;
    if (has_rescue_sort()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rescue_sort());
    }
    
    // optional int32 rescue_left = 21;
    if (has_rescue_left()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rescue_left());
    }
    
    // optional string poem_text = 22;
    if (has_poem_text()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->poem_text());
    }
    
    // optional int32 poem_size = 24;
    if (has_poem_size()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->poem_size());
    }
    
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional int32 is_first_script = 25;
    if (has_is_first_script()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_first_script());
    }
    
    // optional int32 difficulty = 26;
    if (has_difficulty()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->difficulty());
    }
    
    // optional int32 day_pass_time = 27;
    if (has_day_pass_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->day_pass_time());
    }
    
    // optional int32 hatch_sort = 28;
    if (has_hatch_sort()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hatch_sort());
    }
    
    // optional int32 hatch_cond = 29;
    if (has_hatch_cond()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hatch_cond());
    }
    
    // optional int32 total_wave = 30;
    if (has_total_wave()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_wave());
    }
    
    // optional int32 begin_wave = 31;
    if (has_begin_wave()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->begin_wave());
    }
    
    // optional int32 get_exp = 32;
    if (has_get_exp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->get_exp());
    }
    
  }
  // repeated .ProtoMonster monster_rec = 8;
  total_size += 1 * this->monster_rec_size();
  for (int i = 0; i < this->monster_rec_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->monster_rec(i));
  }
  
  // repeated int32 puppet_list = 19;
  {
    int data_size = 0;
    for (int i = 0; i < this->puppet_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->puppet_list(i));
    }
    total_size += 2 * this->puppet_list_size() + data_size;
  }
  
  // repeated int32 poem_appear_index = 23;
  {
    int data_size = 0;
    for (int i = 0; i < this->poem_appear_index_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->poem_appear_index(i));
    }
    total_size += 2 * this->poem_appear_index_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400903::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400903* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400903*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400903::MergeFrom(const Proto50400903& from) {
  GOOGLE_CHECK_NE(&from, this);
  monster_rec_.MergeFrom(from.monster_rec_);
  puppet_list_.MergeFrom(from.puppet_list_);
  poem_appear_index_.MergeFrom(from.poem_appear_index_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_sec()) {
      set_left_sec(from.left_sec());
    }
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_total_sec()) {
      set_total_sec(from.total_sec());
    }
    if (from.has_left_relive()) {
      set_left_relive(from.left_relive());
    }
    if (from.has_total_relive()) {
      set_total_relive(from.total_relive());
    }
    if (from.has_left_monster()) {
      set_left_monster(from.left_monster());
    }
    if (from.has_total_monster()) {
      set_total_monster(from.total_monster());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_top_evencut()) {
      set_top_evencut(from.top_evencut());
    }
    if (from.has_script_status()) {
      set_script_status(from.script_status());
    }
    if (from.has_killed_monster()) {
      set_killed_monster(from.killed_monster());
    }
    if (from.has_current_wave()) {
      set_current_wave(from.current_wave());
    }
    if (from.has_current_floor()) {
      set_current_floor(from.current_floor());
    }
    if (from.has_protect_npc_blood()) {
      set_protect_npc_blood(from.protect_npc_blood());
    }
    if (from.has_protect_npc_maxblood()) {
      set_protect_npc_maxblood(from.protect_npc_maxblood());
    }
    if (from.has_piece()) {
      set_piece(from.piece());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_chapter()) {
      set_chapter(from.chapter());
    }
    if (from.has_used_sec()) {
      set_used_sec(from.used_sec());
    }
    if (from.has_rescue_sort()) {
      set_rescue_sort(from.rescue_sort());
    }
    if (from.has_rescue_left()) {
      set_rescue_left(from.rescue_left());
    }
    if (from.has_poem_text()) {
      set_poem_text(from.poem_text());
    }
    if (from.has_poem_size()) {
      set_poem_size(from.poem_size());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_is_first_script()) {
      set_is_first_script(from.is_first_script());
    }
    if (from.has_difficulty()) {
      set_difficulty(from.difficulty());
    }
    if (from.has_day_pass_time()) {
      set_day_pass_time(from.day_pass_time());
    }
    if (from.has_hatch_sort()) {
      set_hatch_sort(from.hatch_sort());
    }
    if (from.has_hatch_cond()) {
      set_hatch_cond(from.hatch_cond());
    }
    if (from.has_total_wave()) {
      set_total_wave(from.total_wave());
    }
    if (from.has_begin_wave()) {
      set_begin_wave(from.begin_wave());
    }
    if (from.has_get_exp()) {
      set_get_exp(from.get_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400903::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400903::CopyFrom(const Proto50400903& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400903::IsInitialized() const {
  
  return true;
}

void Proto50400903::Swap(Proto50400903* other) {
  if (other != this) {
    std::swap(left_sec_, other->left_sec_);
    std::swap(script_sort_, other->script_sort_);
    std::swap(total_sec_, other->total_sec_);
    std::swap(left_relive_, other->left_relive_);
    std::swap(total_relive_, other->total_relive_);
    std::swap(left_monster_, other->left_monster_);
    std::swap(total_monster_, other->total_monster_);
    monster_rec_.Swap(&other->monster_rec_);
    std::swap(top_evencut_, other->top_evencut_);
    std::swap(script_status_, other->script_status_);
    std::swap(killed_monster_, other->killed_monster_);
    std::swap(current_wave_, other->current_wave_);
    std::swap(current_floor_, other->current_floor_);
    std::swap(protect_npc_blood_, other->protect_npc_blood_);
    std::swap(protect_npc_maxblood_, other->protect_npc_maxblood_);
    std::swap(piece_, other->piece_);
    std::swap(chapter_, other->chapter_);
    std::swap(used_sec_, other->used_sec_);
    puppet_list_.Swap(&other->puppet_list_);
    std::swap(rescue_sort_, other->rescue_sort_);
    std::swap(rescue_left_, other->rescue_left_);
    std::swap(poem_text_, other->poem_text_);
    poem_appear_index_.Swap(&other->poem_appear_index_);
    std::swap(poem_size_, other->poem_size_);
    std::swap(is_first_script_, other->is_first_script_);
    std::swap(difficulty_, other->difficulty_);
    std::swap(day_pass_time_, other->day_pass_time_);
    std::swap(hatch_sort_, other->hatch_sort_);
    std::swap(hatch_cond_, other->hatch_cond_);
    std::swap(total_wave_, other->total_wave_);
    std::swap(begin_wave_, other->begin_wave_);
    std::swap(get_exp_, other->get_exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400903::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400903_descriptor_;
  metadata.reflection = Proto50400903_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400902::kLeftMonsterFieldNumber;
const int Proto80400902::kTotalMonsterFieldNumber;
const int Proto80400902::kMonsterRecFieldNumber;
const int Proto80400902::kKilledMonsterFieldNumber;
const int Proto80400902::kHatchSortFieldNumber;
const int Proto80400902::kHatchCondFieldNumber;
#endif  // !_MSC_VER

Proto80400902::Proto80400902()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400902::InitAsDefaultInstance() {
}

Proto80400902::Proto80400902(const Proto80400902& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400902::SharedCtor() {
  _cached_size_ = 0;
  left_monster_ = 0;
  total_monster_ = 0;
  killed_monster_ = 0;
  hatch_sort_ = 0;
  hatch_cond_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400902::~Proto80400902() {
  SharedDtor();
}

void Proto80400902::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400902::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400902::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400902_descriptor_;
}

const Proto80400902& Proto80400902::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto80400902* Proto80400902::default_instance_ = NULL;

Proto80400902* Proto80400902::New() const {
  return new Proto80400902;
}

void Proto80400902::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_monster_ = 0;
    total_monster_ = 0;
    killed_monster_ = 0;
    hatch_sort_ = 0;
    hatch_cond_ = 0;
  }
  monster_rec_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400902::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_monster = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_monster_)));
          set_has_left_monster();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_monster;
        break;
      }
      
      // optional int32 total_monster = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_monster:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_monster_)));
          set_has_total_monster();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_monster_rec;
        break;
      }
      
      // repeated .ProtoMonster monster_rec = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_monster_rec:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_monster_rec()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_monster_rec;
        if (input->ExpectTag(32)) goto parse_killed_monster;
        break;
      }
      
      // optional int32 killed_monster = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_killed_monster:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &killed_monster_)));
          set_has_killed_monster();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_hatch_sort;
        break;
      }
      
      // optional int32 hatch_sort = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hatch_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hatch_sort_)));
          set_has_hatch_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_hatch_cond;
        break;
      }
      
      // optional int32 hatch_cond = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hatch_cond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hatch_cond_)));
          set_has_hatch_cond();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400902::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_monster = 1;
  if (has_left_monster()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_monster(), output);
  }
  
  // optional int32 total_monster = 2;
  if (has_total_monster()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_monster(), output);
  }
  
  // repeated .ProtoMonster monster_rec = 3;
  for (int i = 0; i < this->monster_rec_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->monster_rec(i), output);
  }
  
  // optional int32 killed_monster = 4;
  if (has_killed_monster()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->killed_monster(), output);
  }
  
  // optional int32 hatch_sort = 5;
  if (has_hatch_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->hatch_sort(), output);
  }
  
  // optional int32 hatch_cond = 6;
  if (has_hatch_cond()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->hatch_cond(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400902::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_monster = 1;
  if (has_left_monster()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_monster(), target);
  }
  
  // optional int32 total_monster = 2;
  if (has_total_monster()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_monster(), target);
  }
  
  // repeated .ProtoMonster monster_rec = 3;
  for (int i = 0; i < this->monster_rec_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->monster_rec(i), target);
  }
  
  // optional int32 killed_monster = 4;
  if (has_killed_monster()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->killed_monster(), target);
  }
  
  // optional int32 hatch_sort = 5;
  if (has_hatch_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->hatch_sort(), target);
  }
  
  // optional int32 hatch_cond = 6;
  if (has_hatch_cond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->hatch_cond(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400902::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_monster = 1;
    if (has_left_monster()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_monster());
    }
    
    // optional int32 total_monster = 2;
    if (has_total_monster()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_monster());
    }
    
    // optional int32 killed_monster = 4;
    if (has_killed_monster()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->killed_monster());
    }
    
    // optional int32 hatch_sort = 5;
    if (has_hatch_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hatch_sort());
    }
    
    // optional int32 hatch_cond = 6;
    if (has_hatch_cond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hatch_cond());
    }
    
  }
  // repeated .ProtoMonster monster_rec = 3;
  total_size += 1 * this->monster_rec_size();
  for (int i = 0; i < this->monster_rec_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->monster_rec(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400902::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400902* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400902*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400902::MergeFrom(const Proto80400902& from) {
  GOOGLE_CHECK_NE(&from, this);
  monster_rec_.MergeFrom(from.monster_rec_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_monster()) {
      set_left_monster(from.left_monster());
    }
    if (from.has_total_monster()) {
      set_total_monster(from.total_monster());
    }
    if (from.has_killed_monster()) {
      set_killed_monster(from.killed_monster());
    }
    if (from.has_hatch_sort()) {
      set_hatch_sort(from.hatch_sort());
    }
    if (from.has_hatch_cond()) {
      set_hatch_cond(from.hatch_cond());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400902::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400902::CopyFrom(const Proto80400902& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400902::IsInitialized() const {
  
  return true;
}

void Proto80400902::Swap(Proto80400902* other) {
  if (other != this) {
    std::swap(left_monster_, other->left_monster_);
    std::swap(total_monster_, other->total_monster_);
    monster_rec_.Swap(&other->monster_rec_);
    std::swap(killed_monster_, other->killed_monster_);
    std::swap(hatch_sort_, other->hatch_sort_);
    std::swap(hatch_cond_, other->hatch_cond_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400902::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400902_descriptor_;
  metadata.reflection = Proto80400902_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400903::kLeftReliveFieldNumber;
const int Proto80400903::kTotalReliveFieldNumber;
#endif  // !_MSC_VER

Proto80400903::Proto80400903()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400903::InitAsDefaultInstance() {
}

Proto80400903::Proto80400903(const Proto80400903& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400903::SharedCtor() {
  _cached_size_ = 0;
  left_relive_ = 0;
  total_relive_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400903::~Proto80400903() {
  SharedDtor();
}

void Proto80400903::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400903::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400903::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400903_descriptor_;
}

const Proto80400903& Proto80400903::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto80400903* Proto80400903::default_instance_ = NULL;

Proto80400903* Proto80400903::New() const {
  return new Proto80400903;
}

void Proto80400903::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_relive_ = 0;
    total_relive_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400903::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_relive = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_relive_)));
          set_has_left_relive();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_relive;
        break;
      }
      
      // optional int32 total_relive = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_relive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_relive_)));
          set_has_total_relive();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400903::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_relive = 1;
  if (has_left_relive()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_relive(), output);
  }
  
  // optional int32 total_relive = 2;
  if (has_total_relive()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_relive(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400903::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_relive = 1;
  if (has_left_relive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_relive(), target);
  }
  
  // optional int32 total_relive = 2;
  if (has_total_relive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_relive(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400903::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_relive = 1;
    if (has_left_relive()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_relive());
    }
    
    // optional int32 total_relive = 2;
    if (has_total_relive()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_relive());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400903::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400903* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400903*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400903::MergeFrom(const Proto80400903& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_relive()) {
      set_left_relive(from.left_relive());
    }
    if (from.has_total_relive()) {
      set_total_relive(from.total_relive());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400903::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400903::CopyFrom(const Proto80400903& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400903::IsInitialized() const {
  
  return true;
}

void Proto80400903::Swap(Proto80400903* other) {
  if (other != this) {
    std::swap(left_relive_, other->left_relive_);
    std::swap(total_relive_, other->total_relive_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400903::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400903_descriptor_;
  metadata.reflection = Proto80400903_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400111::kSceneIdFieldNumber;
const int Proto10400111::kPixelXFieldNumber;
const int Proto10400111::kPixelYFieldNumber;
const int Proto10400111::kTypeFieldNumber;
const int Proto10400111::kClientTypeFieldNumber;
#endif  // !_MSC_VER

Proto10400111::Proto10400111()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400111::InitAsDefaultInstance() {
}

Proto10400111::Proto10400111(const Proto10400111& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400111::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  type_ = 0;
  client_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400111::~Proto10400111() {
  SharedDtor();
}

void Proto10400111::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400111::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400111::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400111_descriptor_;
}

const Proto10400111& Proto10400111::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto10400111* Proto10400111::default_instance_ = NULL;

Proto10400111* Proto10400111::New() const {
  return new Proto10400111;
}

void Proto10400111::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
    type_ = 0;
    client_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400111::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }
      
      // optional int32 type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_client_type;
        break;
      }
      
      // optional int32 client_type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_client_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_type_)));
          set_has_client_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400111::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_y(), output);
  }
  
  // optional int32 type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }
  
  // optional int32 client_type = 5;
  if (has_client_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->client_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400111::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_y(), target);
  }
  
  // optional int32 type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }
  
  // optional int32 client_type = 5;
  if (has_client_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->client_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400111::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 pixel_x = 2;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 3;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
    // optional int32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 client_type = 5;
    if (has_client_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->client_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400111::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400111* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400111*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400111::MergeFrom(const Proto10400111& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_client_type()) {
      set_client_type(from.client_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400111::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400111::CopyFrom(const Proto10400111& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400111::IsInitialized() const {
  
  return true;
}

void Proto10400111::Swap(Proto10400111* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(type_, other->type_);
    std::swap(client_type_, other->client_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400111::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400111_descriptor_;
  metadata.reflection = Proto10400111_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400110::kSceneIdFieldNumber;
const int Proto50400110::kPixelXFieldNumber;
const int Proto50400110::kPixelYFieldNumber;
const int Proto50400110::kIsFirstEnterFieldNumber;
const int Proto50400110::kSpaceIdFieldNumber;
const int Proto50400110::kTypeFieldNumber;
const int Proto50400110::kClientTypeFieldNumber;
#endif  // !_MSC_VER

Proto50400110::Proto50400110()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400110::InitAsDefaultInstance() {
}

Proto50400110::Proto50400110(const Proto50400110& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400110::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  is_first_enter_ = 0;
  space_id_ = 0;
  type_ = 0;
  client_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400110::~Proto50400110() {
  SharedDtor();
}

void Proto50400110::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400110::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400110::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400110_descriptor_;
}

const Proto50400110& Proto50400110::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto50400110* Proto50400110::default_instance_ = NULL;

Proto50400110* Proto50400110::New() const {
  return new Proto50400110;
}

void Proto50400110::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
    is_first_enter_ = 0;
    space_id_ = 0;
    type_ = 0;
    client_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400110::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_is_first_enter;
        break;
      }
      
      // optional int32 is_first_enter = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_first_enter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_first_enter_)));
          set_has_is_first_enter();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_space_id;
        break;
      }
      
      // optional int32 space_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_space_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &space_id_)));
          set_has_space_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_type;
        break;
      }
      
      // optional int32 type = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_client_type;
        break;
      }
      
      // optional int32 client_type = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_client_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_type_)));
          set_has_client_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400110::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_y(), output);
  }
  
  // optional int32 is_first_enter = 4;
  if (has_is_first_enter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->is_first_enter(), output);
  }
  
  // optional int32 space_id = 5;
  if (has_space_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->space_id(), output);
  }
  
  // optional int32 type = 6;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->type(), output);
  }
  
  // optional int32 client_type = 7;
  if (has_client_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->client_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400110::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_y(), target);
  }
  
  // optional int32 is_first_enter = 4;
  if (has_is_first_enter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->is_first_enter(), target);
  }
  
  // optional int32 space_id = 5;
  if (has_space_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->space_id(), target);
  }
  
  // optional int32 type = 6;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->type(), target);
  }
  
  // optional int32 client_type = 7;
  if (has_client_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->client_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400110::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 pixel_x = 2;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 3;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
    // optional int32 is_first_enter = 4;
    if (has_is_first_enter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_first_enter());
    }
    
    // optional int32 space_id = 5;
    if (has_space_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->space_id());
    }
    
    // optional int32 type = 6;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 client_type = 7;
    if (has_client_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->client_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400110::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400110* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400110*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400110::MergeFrom(const Proto50400110& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
    if (from.has_is_first_enter()) {
      set_is_first_enter(from.is_first_enter());
    }
    if (from.has_space_id()) {
      set_space_id(from.space_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_client_type()) {
      set_client_type(from.client_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400110::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400110::CopyFrom(const Proto50400110& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400110::IsInitialized() const {
  
  return true;
}

void Proto50400110::Swap(Proto50400110* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(is_first_enter_, other->is_first_enter_);
    std::swap(space_id_, other->space_id_);
    std::swap(type_, other->type_);
    std::swap(client_type_, other->client_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400110::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400110_descriptor_;
  metadata.reflection = Proto50400110_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400600::kRefineLevelFieldNumber;
const int Proto51400600::kRefineDegreeFieldNumber;
const int Proto51400600::kCostMoneyFieldNumber;
const int Proto51400600::kCostItemFieldNumber;
const int Proto51400600::kAtualCostMoneyFieldNumber;
#endif  // !_MSC_VER

Proto51400600::Proto51400600()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400600::InitAsDefaultInstance() {
  cost_money_ = const_cast< ::ProtoMoney*>(&::ProtoMoney::default_instance());
  atual_cost_money_ = const_cast< ::ProtoMoney*>(&::ProtoMoney::default_instance());
}

Proto51400600::Proto51400600(const Proto51400600& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400600::SharedCtor() {
  _cached_size_ = 0;
  refine_level_ = 0;
  refine_degree_ = 0;
  cost_money_ = NULL;
  atual_cost_money_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400600::~Proto51400600() {
  SharedDtor();
}

void Proto51400600::SharedDtor() {
  if (this != default_instance_) {
    delete cost_money_;
    delete atual_cost_money_;
  }
}

void Proto51400600::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400600::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400600_descriptor_;
}

const Proto51400600& Proto51400600::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto51400600* Proto51400600::default_instance_ = NULL;

Proto51400600* Proto51400600::New() const {
  return new Proto51400600;
}

void Proto51400600::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    refine_level_ = 0;
    refine_degree_ = 0;
    if (has_cost_money()) {
      if (cost_money_ != NULL) cost_money_->::ProtoMoney::Clear();
    }
    if (has_atual_cost_money()) {
      if (atual_cost_money_ != NULL) atual_cost_money_->::ProtoMoney::Clear();
    }
  }
  cost_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400600::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 refine_level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refine_level_)));
          set_has_refine_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_refine_degree;
        break;
      }
      
      // optional int32 refine_degree = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refine_degree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refine_degree_)));
          set_has_refine_degree();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_cost_money;
        break;
      }
      
      // optional .ProtoMoney cost_money = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cost_money:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cost_money()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_cost_item;
        break;
      }
      
      // repeated .ProtoPairObj cost_item = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cost_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cost_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_cost_item;
        if (input->ExpectTag(42)) goto parse_atual_cost_money;
        break;
      }
      
      // optional .ProtoMoney atual_cost_money = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_atual_cost_money:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_atual_cost_money()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400600::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 refine_level = 1;
  if (has_refine_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->refine_level(), output);
  }
  
  // optional int32 refine_degree = 2;
  if (has_refine_degree()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->refine_degree(), output);
  }
  
  // optional .ProtoMoney cost_money = 3;
  if (has_cost_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cost_money(), output);
  }
  
  // repeated .ProtoPairObj cost_item = 4;
  for (int i = 0; i < this->cost_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->cost_item(i), output);
  }
  
  // optional .ProtoMoney atual_cost_money = 5;
  if (has_atual_cost_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->atual_cost_money(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400600::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 refine_level = 1;
  if (has_refine_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->refine_level(), target);
  }
  
  // optional int32 refine_degree = 2;
  if (has_refine_degree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->refine_degree(), target);
  }
  
  // optional .ProtoMoney cost_money = 3;
  if (has_cost_money()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->cost_money(), target);
  }
  
  // repeated .ProtoPairObj cost_item = 4;
  for (int i = 0; i < this->cost_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->cost_item(i), target);
  }
  
  // optional .ProtoMoney atual_cost_money = 5;
  if (has_atual_cost_money()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->atual_cost_money(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400600::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 refine_level = 1;
    if (has_refine_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refine_level());
    }
    
    // optional int32 refine_degree = 2;
    if (has_refine_degree()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refine_degree());
    }
    
    // optional .ProtoMoney cost_money = 3;
    if (has_cost_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cost_money());
    }
    
    // optional .ProtoMoney atual_cost_money = 5;
    if (has_atual_cost_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->atual_cost_money());
    }
    
  }
  // repeated .ProtoPairObj cost_item = 4;
  total_size += 1 * this->cost_item_size();
  for (int i = 0; i < this->cost_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cost_item(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400600::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400600* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400600*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400600::MergeFrom(const Proto51400600& from) {
  GOOGLE_CHECK_NE(&from, this);
  cost_item_.MergeFrom(from.cost_item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_refine_level()) {
      set_refine_level(from.refine_level());
    }
    if (from.has_refine_degree()) {
      set_refine_degree(from.refine_degree());
    }
    if (from.has_cost_money()) {
      mutable_cost_money()->::ProtoMoney::MergeFrom(from.cost_money());
    }
    if (from.has_atual_cost_money()) {
      mutable_atual_cost_money()->::ProtoMoney::MergeFrom(from.atual_cost_money());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400600::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400600::CopyFrom(const Proto51400600& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400600::IsInitialized() const {
  
  return true;
}

void Proto51400600::Swap(Proto51400600* other) {
  if (other != this) {
    std::swap(refine_level_, other->refine_level_);
    std::swap(refine_degree_, other->refine_degree_);
    std::swap(cost_money_, other->cost_money_);
    cost_item_.Swap(&other->cost_item_);
    std::swap(atual_cost_money_, other->atual_cost_money_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400600::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400600_descriptor_;
  metadata.reflection = Proto51400600_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401201::kActivityInfoFieldNumber;
#endif  // !_MSC_VER

Proto81401201::Proto81401201()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401201::InitAsDefaultInstance() {
}

Proto81401201::Proto81401201(const Proto81401201& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401201::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401201::~Proto81401201() {
  SharedDtor();
}

void Proto81401201::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401201::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401201::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401201_descriptor_;
}

const Proto81401201& Proto81401201::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto81401201* Proto81401201::default_instance_ = NULL;

Proto81401201* Proto81401201::New() const {
  return new Proto81401201;
}

void Proto81401201::Clear() {
  activity_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401201::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoActivityInfo activity_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_activity_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_activity_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_activity_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401201::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoActivityInfo activity_info = 1;
  for (int i = 0; i < this->activity_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->activity_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401201::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoActivityInfo activity_info = 1;
  for (int i = 0; i < this->activity_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->activity_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401201::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoActivityInfo activity_info = 1;
  total_size += 1 * this->activity_info_size();
  for (int i = 0; i < this->activity_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->activity_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401201::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401201* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401201*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401201::MergeFrom(const Proto81401201& from) {
  GOOGLE_CHECK_NE(&from, this);
  activity_info_.MergeFrom(from.activity_info_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401201::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401201::CopyFrom(const Proto81401201& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401201::IsInitialized() const {
  
  return true;
}

void Proto81401201::Swap(Proto81401201* other) {
  if (other != this) {
    activity_info_.Swap(&other->activity_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401201::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401201_descriptor_;
  metadata.reflection = Proto81401201_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10001::kItemIdFieldNumber;
const int Proto10001::kRefineLevelFieldNumber;
const int Proto10001::kIsBrightenFieldNumber;
const int Proto10001::kBindStatusFieldNumber;
const int Proto10001::kLuckValueFieldNumber;
const int Proto10001::kJewelListsFieldNumber;
const int Proto10001::kExtrasAttrFieldNumber;
const int Proto10001::kBasePolishFieldNumber;
const int Proto10001::kSpecialJewelFieldNumber;
const int Proto10001::kSpecialJewelsFieldNumber;
#endif  // !_MSC_VER

Proto10001::Proto10001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10001::InitAsDefaultInstance() {
  extras_attr_ = const_cast< ::ProtoEquipPolishStruct*>(&::ProtoEquipPolishStruct::default_instance());
  base_polish_ = const_cast< ::ProtoEquipPolish*>(&::ProtoEquipPolish::default_instance());
  special_jewel_ = const_cast< ::ProtoPairObj*>(&::ProtoPairObj::default_instance());
}

Proto10001::Proto10001(const Proto10001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10001::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  refine_level_ = 0;
  is_brighten_ = 0;
  bind_status_ = 0;
  luck_value_ = 0;
  extras_attr_ = NULL;
  base_polish_ = NULL;
  special_jewel_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10001::~Proto10001() {
  SharedDtor();
}

void Proto10001::SharedDtor() {
  if (this != default_instance_) {
    delete extras_attr_;
    delete base_polish_;
    delete special_jewel_;
  }
}

void Proto10001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10001_descriptor_;
}

const Proto10001& Proto10001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto10001* Proto10001::default_instance_ = NULL;

Proto10001* Proto10001::New() const {
  return new Proto10001;
}

void Proto10001::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    refine_level_ = 0;
    is_brighten_ = 0;
    bind_status_ = 0;
    luck_value_ = 0;
    if (has_extras_attr()) {
      if (extras_attr_ != NULL) extras_attr_->::ProtoEquipPolishStruct::Clear();
    }
    if (has_base_polish()) {
      if (base_polish_ != NULL) base_polish_->::ProtoEquipPolish::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_special_jewel()) {
      if (special_jewel_ != NULL) special_jewel_->::ProtoPairObj::Clear();
    }
  }
  jewel_lists_.Clear();
  special_jewels_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_refine_level;
        break;
      }
      
      // optional int32 refine_level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refine_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refine_level_)));
          set_has_refine_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_brighten;
        break;
      }
      
      // optional int32 is_brighten = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_brighten:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_brighten_)));
          set_has_is_brighten();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_bind_status;
        break;
      }
      
      // optional int32 bind_status = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bind_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bind_status_)));
          set_has_bind_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_luck_value;
        break;
      }
      
      // optional int32 luck_value = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_luck_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &luck_value_)));
          set_has_luck_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_jewel_lists;
        break;
      }
      
      // repeated .ProtoPairObj jewel_lists = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_jewel_lists:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_jewel_lists()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_jewel_lists;
        if (input->ExpectTag(58)) goto parse_extras_attr;
        break;
      }
      
      // optional .ProtoEquipPolishStruct extras_attr = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_extras_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extras_attr()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_base_polish;
        break;
      }
      
      // optional .ProtoEquipPolish base_polish = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_base_polish:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_base_polish()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_special_jewel;
        break;
      }
      
      // optional .ProtoPairObj special_jewel = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_special_jewel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_special_jewel()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_special_jewels;
        break;
      }
      
      // repeated .ProtoPairObj special_jewels = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_special_jewels:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_special_jewels()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_special_jewels;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 refine_level = 2;
  if (has_refine_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->refine_level(), output);
  }
  
  // optional int32 is_brighten = 3;
  if (has_is_brighten()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_brighten(), output);
  }
  
  // optional int32 bind_status = 4;
  if (has_bind_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->bind_status(), output);
  }
  
  // optional int32 luck_value = 5;
  if (has_luck_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->luck_value(), output);
  }
  
  // repeated .ProtoPairObj jewel_lists = 6;
  for (int i = 0; i < this->jewel_lists_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->jewel_lists(i), output);
  }
  
  // optional .ProtoEquipPolishStruct extras_attr = 7;
  if (has_extras_attr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->extras_attr(), output);
  }
  
  // optional .ProtoEquipPolish base_polish = 8;
  if (has_base_polish()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->base_polish(), output);
  }
  
  // optional .ProtoPairObj special_jewel = 9;
  if (has_special_jewel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->special_jewel(), output);
  }
  
  // repeated .ProtoPairObj special_jewels = 10;
  for (int i = 0; i < this->special_jewels_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->special_jewels(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 refine_level = 2;
  if (has_refine_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->refine_level(), target);
  }
  
  // optional int32 is_brighten = 3;
  if (has_is_brighten()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_brighten(), target);
  }
  
  // optional int32 bind_status = 4;
  if (has_bind_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->bind_status(), target);
  }
  
  // optional int32 luck_value = 5;
  if (has_luck_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->luck_value(), target);
  }
  
  // repeated .ProtoPairObj jewel_lists = 6;
  for (int i = 0; i < this->jewel_lists_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->jewel_lists(i), target);
  }
  
  // optional .ProtoEquipPolishStruct extras_attr = 7;
  if (has_extras_attr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->extras_attr(), target);
  }
  
  // optional .ProtoEquipPolish base_polish = 8;
  if (has_base_polish()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->base_polish(), target);
  }
  
  // optional .ProtoPairObj special_jewel = 9;
  if (has_special_jewel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->special_jewel(), target);
  }
  
  // repeated .ProtoPairObj special_jewels = 10;
  for (int i = 0; i < this->special_jewels_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->special_jewels(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10001::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 refine_level = 2;
    if (has_refine_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refine_level());
    }
    
    // optional int32 is_brighten = 3;
    if (has_is_brighten()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_brighten());
    }
    
    // optional int32 bind_status = 4;
    if (has_bind_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bind_status());
    }
    
    // optional int32 luck_value = 5;
    if (has_luck_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->luck_value());
    }
    
    // optional .ProtoEquipPolishStruct extras_attr = 7;
    if (has_extras_attr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->extras_attr());
    }
    
    // optional .ProtoEquipPolish base_polish = 8;
    if (has_base_polish()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->base_polish());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .ProtoPairObj special_jewel = 9;
    if (has_special_jewel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->special_jewel());
    }
    
  }
  // repeated .ProtoPairObj jewel_lists = 6;
  total_size += 1 * this->jewel_lists_size();
  for (int i = 0; i < this->jewel_lists_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->jewel_lists(i));
  }
  
  // repeated .ProtoPairObj special_jewels = 10;
  total_size += 1 * this->special_jewels_size();
  for (int i = 0; i < this->special_jewels_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->special_jewels(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10001::MergeFrom(const Proto10001& from) {
  GOOGLE_CHECK_NE(&from, this);
  jewel_lists_.MergeFrom(from.jewel_lists_);
  special_jewels_.MergeFrom(from.special_jewels_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_refine_level()) {
      set_refine_level(from.refine_level());
    }
    if (from.has_is_brighten()) {
      set_is_brighten(from.is_brighten());
    }
    if (from.has_bind_status()) {
      set_bind_status(from.bind_status());
    }
    if (from.has_luck_value()) {
      set_luck_value(from.luck_value());
    }
    if (from.has_extras_attr()) {
      mutable_extras_attr()->::ProtoEquipPolishStruct::MergeFrom(from.extras_attr());
    }
    if (from.has_base_polish()) {
      mutable_base_polish()->::ProtoEquipPolish::MergeFrom(from.base_polish());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_special_jewel()) {
      mutable_special_jewel()->::ProtoPairObj::MergeFrom(from.special_jewel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10001::CopyFrom(const Proto10001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10001::IsInitialized() const {
  
  return true;
}

void Proto10001::Swap(Proto10001* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(refine_level_, other->refine_level_);
    std::swap(is_brighten_, other->is_brighten_);
    std::swap(bind_status_, other->bind_status_);
    std::swap(luck_value_, other->luck_value_);
    jewel_lists_.Swap(&other->jewel_lists_);
    std::swap(extras_attr_, other->extras_attr_);
    std::swap(base_polish_, other->base_polish_);
    std::swap(special_jewel_, other->special_jewel_);
    special_jewels_.Swap(&other->special_jewels_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10001_descriptor_;
  metadata.reflection = Proto10001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10002::kItemIdFieldNumber;
const int Proto10002::kBindStatusFieldNumber;
#endif  // !_MSC_VER

Proto10002::Proto10002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10002::InitAsDefaultInstance() {
}

Proto10002::Proto10002(const Proto10002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10002::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  bind_status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10002::~Proto10002() {
  SharedDtor();
}

void Proto10002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10002_descriptor_;
}

const Proto10002& Proto10002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto10002* Proto10002::default_instance_ = NULL;

Proto10002* Proto10002::New() const {
  return new Proto10002;
}

void Proto10002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    bind_status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_bind_status;
        break;
      }
      
      // optional int32 bind_status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bind_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bind_status_)));
          set_has_bind_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 bind_status = 2;
  if (has_bind_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->bind_status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 bind_status = 2;
  if (has_bind_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->bind_status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 bind_status = 2;
    if (has_bind_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bind_status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10002::MergeFrom(const Proto10002& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_bind_status()) {
      set_bind_status(from.bind_status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10002::CopyFrom(const Proto10002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10002::IsInitialized() const {
  
  return true;
}

void Proto10002::Swap(Proto10002* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(bind_status_, other->bind_status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10002_descriptor_;
  metadata.reflection = Proto10002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10003::kItemIdFieldNumber;
const int Proto10003::kIsLimitTimeFieldNumber;
const int Proto10003::kLeftTimeFieldNumber;
const int Proto10003::kBindStatusFieldNumber;
#endif  // !_MSC_VER

Proto10003::Proto10003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10003::InitAsDefaultInstance() {
}

Proto10003::Proto10003(const Proto10003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10003::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  is_limit_time_ = 0;
  left_time_ = 0;
  bind_status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10003::~Proto10003() {
  SharedDtor();
}

void Proto10003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10003_descriptor_;
}

const Proto10003& Proto10003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto10003* Proto10003::default_instance_ = NULL;

Proto10003* Proto10003::New() const {
  return new Proto10003;
}

void Proto10003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    is_limit_time_ = 0;
    left_time_ = 0;
    bind_status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_limit_time;
        break;
      }
      
      // optional int32 is_limit_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_limit_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_limit_time_)));
          set_has_is_limit_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_bind_status;
        break;
      }
      
      // optional int32 bind_status = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bind_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bind_status_)));
          set_has_bind_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 is_limit_time = 2;
  if (has_is_limit_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_limit_time(), output);
  }
  
  // optional int32 left_time = 3;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_time(), output);
  }
  
  // optional int32 bind_status = 4;
  if (has_bind_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->bind_status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 is_limit_time = 2;
  if (has_is_limit_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_limit_time(), target);
  }
  
  // optional int32 left_time = 3;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_time(), target);
  }
  
  // optional int32 bind_status = 4;
  if (has_bind_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->bind_status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 is_limit_time = 2;
    if (has_is_limit_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_limit_time());
    }
    
    // optional int32 left_time = 3;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 bind_status = 4;
    if (has_bind_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bind_status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10003::MergeFrom(const Proto10003& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_is_limit_time()) {
      set_is_limit_time(from.is_limit_time());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_bind_status()) {
      set_bind_status(from.bind_status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10003::CopyFrom(const Proto10003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10003::IsInitialized() const {
  
  return true;
}

void Proto10003::Swap(Proto10003* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(is_limit_time_, other->is_limit_time_);
    std::swap(left_time_, other->left_time_);
    std::swap(bind_status_, other->bind_status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10003_descriptor_;
  metadata.reflection = Proto10003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10004::kItemIdFieldNumber;
const int Proto10004::kSubItemListFieldNumber;
const int Proto10004::kBindStatusFieldNumber;
#endif  // !_MSC_VER

Proto10004::Proto10004()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10004::InitAsDefaultInstance() {
}

Proto10004::Proto10004(const Proto10004& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10004::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  bind_status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10004::~Proto10004() {
  SharedDtor();
}

void Proto10004::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10004::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10004::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10004_descriptor_;
}

const Proto10004& Proto10004::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto10004* Proto10004::default_instance_ = NULL;

Proto10004* Proto10004::New() const {
  return new Proto10004;
}

void Proto10004::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    bind_status_ = 0;
  }
  sub_item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10004::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sub_item_list;
        break;
      }
      
      // repeated int32 sub_item_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sub_item_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_sub_item_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_sub_item_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sub_item_list;
        if (input->ExpectTag(24)) goto parse_bind_status;
        break;
      }
      
      // optional int32 bind_status = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bind_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bind_status_)));
          set_has_bind_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10004::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // repeated int32 sub_item_list = 2;
  for (int i = 0; i < this->sub_item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->sub_item_list(i), output);
  }
  
  // optional int32 bind_status = 3;
  if (has_bind_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->bind_status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10004::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // repeated int32 sub_item_list = 2;
  for (int i = 0; i < this->sub_item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->sub_item_list(i), target);
  }
  
  // optional int32 bind_status = 3;
  if (has_bind_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->bind_status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10004::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 bind_status = 3;
    if (has_bind_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bind_status());
    }
    
  }
  // repeated int32 sub_item_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->sub_item_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->sub_item_list(i));
    }
    total_size += 1 * this->sub_item_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10004::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10004* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10004*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10004::MergeFrom(const Proto10004& from) {
  GOOGLE_CHECK_NE(&from, this);
  sub_item_list_.MergeFrom(from.sub_item_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_bind_status()) {
      set_bind_status(from.bind_status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10004::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10004::CopyFrom(const Proto10004& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10004::IsInitialized() const {
  
  return true;
}

void Proto10004::Swap(Proto10004* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    sub_item_list_.Swap(&other->sub_item_list_);
    std::swap(bind_status_, other->bind_status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10004::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10004_descriptor_;
  metadata.reflection = Proto10004_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10005::kPetIdFieldNumber;
const int Proto10005::kPetNameFieldNumber;
const int Proto10005::kAblityFieldNumber;
const int Proto10005::kPetSortFieldNumber;
const int Proto10005::kBindStatusFieldNumber;
#endif  // !_MSC_VER

Proto10005::Proto10005()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10005::InitAsDefaultInstance() {
}

Proto10005::Proto10005(const Proto10005& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10005::SharedCtor() {
  _cached_size_ = 0;
  pet_id_ = GOOGLE_LONGLONG(0);
  pet_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ablity_ = 0;
  pet_sort_ = 0;
  bind_status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10005::~Proto10005() {
  SharedDtor();
}

void Proto10005::SharedDtor() {
  if (pet_name_ != &::google::protobuf::internal::kEmptyString) {
    delete pet_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto10005::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10005::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10005_descriptor_;
}

const Proto10005& Proto10005::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto10005* Proto10005::default_instance_ = NULL;

Proto10005* Proto10005::New() const {
  return new Proto10005;
}

void Proto10005::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pet_id_ = GOOGLE_LONGLONG(0);
    if (has_pet_name()) {
      if (pet_name_ != &::google::protobuf::internal::kEmptyString) {
        pet_name_->clear();
      }
    }
    ablity_ = 0;
    pet_sort_ = 0;
    bind_status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10005::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 pet_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pet_id_)));
          set_has_pet_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_pet_name;
        break;
      }
      
      // optional string pet_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pet_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pet_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->pet_name().data(), this->pet_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_ablity;
        break;
      }
      
      // optional int32 ablity = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ablity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ablity_)));
          set_has_ablity();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pet_sort;
        break;
      }
      
      // optional int32 pet_sort = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pet_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pet_sort_)));
          set_has_pet_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_bind_status;
        break;
      }
      
      // optional int32 bind_status = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bind_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bind_status_)));
          set_has_bind_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10005::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 pet_id = 1;
  if (has_pet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->pet_id(), output);
  }
  
  // optional string pet_name = 2;
  if (has_pet_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pet_name().data(), this->pet_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->pet_name(), output);
  }
  
  // optional int32 ablity = 3;
  if (has_ablity()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ablity(), output);
  }
  
  // optional int32 pet_sort = 4;
  if (has_pet_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pet_sort(), output);
  }
  
  // optional int32 bind_status = 5;
  if (has_bind_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->bind_status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10005::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 pet_id = 1;
  if (has_pet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->pet_id(), target);
  }
  
  // optional string pet_name = 2;
  if (has_pet_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->pet_name().data(), this->pet_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pet_name(), target);
  }
  
  // optional int32 ablity = 3;
  if (has_ablity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ablity(), target);
  }
  
  // optional int32 pet_sort = 4;
  if (has_pet_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pet_sort(), target);
  }
  
  // optional int32 bind_status = 5;
  if (has_bind_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->bind_status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10005::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 pet_id = 1;
    if (has_pet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pet_id());
    }
    
    // optional string pet_name = 2;
    if (has_pet_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pet_name());
    }
    
    // optional int32 ablity = 3;
    if (has_ablity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ablity());
    }
    
    // optional int32 pet_sort = 4;
    if (has_pet_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pet_sort());
    }
    
    // optional int32 bind_status = 5;
    if (has_bind_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bind_status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10005::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10005* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10005*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10005::MergeFrom(const Proto10005& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pet_id()) {
      set_pet_id(from.pet_id());
    }
    if (from.has_pet_name()) {
      set_pet_name(from.pet_name());
    }
    if (from.has_ablity()) {
      set_ablity(from.ablity());
    }
    if (from.has_pet_sort()) {
      set_pet_sort(from.pet_sort());
    }
    if (from.has_bind_status()) {
      set_bind_status(from.bind_status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10005::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10005::CopyFrom(const Proto10005& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10005::IsInitialized() const {
  
  return true;
}

void Proto10005::Swap(Proto10005* other) {
  if (other != this) {
    std::swap(pet_id_, other->pet_id_);
    std::swap(pet_name_, other->pet_name_);
    std::swap(ablity_, other->ablity_);
    std::swap(pet_sort_, other->pet_sort_);
    std::swap(bind_status_, other->bind_status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10005::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10005_descriptor_;
  metadata.reflection = Proto10005_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400904::kCurrentWaveFieldNumber;
const int Proto80400904::kFinishWaveFieldNumber;
const int Proto80400904::kTotalWaveFieldNumber;
#endif  // !_MSC_VER

Proto80400904::Proto80400904()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400904::InitAsDefaultInstance() {
}

Proto80400904::Proto80400904(const Proto80400904& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400904::SharedCtor() {
  _cached_size_ = 0;
  current_wave_ = 0;
  finish_wave_ = 0;
  total_wave_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400904::~Proto80400904() {
  SharedDtor();
}

void Proto80400904::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400904::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400904::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400904_descriptor_;
}

const Proto80400904& Proto80400904::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto80400904* Proto80400904::default_instance_ = NULL;

Proto80400904* Proto80400904::New() const {
  return new Proto80400904;
}

void Proto80400904::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    current_wave_ = 0;
    finish_wave_ = 0;
    total_wave_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400904::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 current_wave = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_wave_)));
          set_has_current_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_finish_wave;
        break;
      }
      
      // optional int32 finish_wave = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_finish_wave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &finish_wave_)));
          set_has_finish_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_total_wave;
        break;
      }
      
      // optional int32 total_wave = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_wave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_wave_)));
          set_has_total_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400904::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 current_wave = 1;
  if (has_current_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->current_wave(), output);
  }
  
  // optional int32 finish_wave = 2;
  if (has_finish_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->finish_wave(), output);
  }
  
  // optional int32 total_wave = 3;
  if (has_total_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_wave(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400904::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 current_wave = 1;
  if (has_current_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->current_wave(), target);
  }
  
  // optional int32 finish_wave = 2;
  if (has_finish_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->finish_wave(), target);
  }
  
  // optional int32 total_wave = 3;
  if (has_total_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_wave(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400904::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 current_wave = 1;
    if (has_current_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->current_wave());
    }
    
    // optional int32 finish_wave = 2;
    if (has_finish_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->finish_wave());
    }
    
    // optional int32 total_wave = 3;
    if (has_total_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_wave());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400904::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400904* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400904*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400904::MergeFrom(const Proto80400904& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_current_wave()) {
      set_current_wave(from.current_wave());
    }
    if (from.has_finish_wave()) {
      set_finish_wave(from.finish_wave());
    }
    if (from.has_total_wave()) {
      set_total_wave(from.total_wave());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400904::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400904::CopyFrom(const Proto80400904& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400904::IsInitialized() const {
  
  return true;
}

void Proto80400904::Swap(Proto80400904* other) {
  if (other != this) {
    std::swap(current_wave_, other->current_wave_);
    std::swap(finish_wave_, other->finish_wave_);
    std::swap(total_wave_, other->total_wave_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400904::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400904_descriptor_;
  metadata.reflection = Proto80400904_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400501::kStepListFieldNumber;
const int Proto10400501::kTowardFieldNumber;
#endif  // !_MSC_VER

Proto10400501::Proto10400501()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400501::InitAsDefaultInstance() {
}

Proto10400501::Proto10400501(const Proto10400501& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400501::SharedCtor() {
  _cached_size_ = 0;
  toward_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400501::~Proto10400501() {
  SharedDtor();
}

void Proto10400501::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400501::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400501::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400501_descriptor_;
}

const Proto10400501& Proto10400501::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto10400501* Proto10400501::default_instance_ = NULL;

Proto10400501* Proto10400501::New() const {
  return new Proto10400501;
}

void Proto10400501::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    toward_ = 0;
  }
  step_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400501::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoCoord step_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_step_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_step_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_step_list;
        if (input->ExpectTag(16)) goto parse_toward;
        break;
      }
      
      // optional int32 toward = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_toward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &toward_)));
          set_has_toward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400501::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoCoord step_list = 1;
  for (int i = 0; i < this->step_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->step_list(i), output);
  }
  
  // optional int32 toward = 2;
  if (has_toward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->toward(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400501::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoCoord step_list = 1;
  for (int i = 0; i < this->step_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->step_list(i), target);
  }
  
  // optional int32 toward = 2;
  if (has_toward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->toward(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400501::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 toward = 2;
    if (has_toward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->toward());
    }
    
  }
  // repeated .ProtoCoord step_list = 1;
  total_size += 1 * this->step_list_size();
  for (int i = 0; i < this->step_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->step_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400501::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400501* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400501*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400501::MergeFrom(const Proto10400501& from) {
  GOOGLE_CHECK_NE(&from, this);
  step_list_.MergeFrom(from.step_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_toward()) {
      set_toward(from.toward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400501::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400501::CopyFrom(const Proto10400501& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400501::IsInitialized() const {
  
  return true;
}

void Proto10400501::Swap(Proto10400501* other) {
  if (other != this) {
    step_list_.Swap(&other->step_list_);
    std::swap(toward_, other->toward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400501::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400501_descriptor_;
  metadata.reflection = Proto10400501_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400109::kSceneIdFieldNumber;
const int Proto50400109::kPixelXFieldNumber;
const int Proto50400109::kPixelYFieldNumber;
#endif  // !_MSC_VER

Proto50400109::Proto50400109()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400109::InitAsDefaultInstance() {
}

Proto50400109::Proto50400109(const Proto50400109& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400109::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400109::~Proto50400109() {
  SharedDtor();
}

void Proto50400109::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400109::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400109::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400109_descriptor_;
}

const Proto50400109& Proto50400109::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto50400109* Proto50400109::default_instance_ = NULL;

Proto50400109* Proto50400109::New() const {
  return new Proto50400109;
}

void Proto50400109::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400109::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400109::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400109::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400109::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 pixel_x = 2;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 3;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400109::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400109* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400109*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400109::MergeFrom(const Proto50400109& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400109::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400109::CopyFrom(const Proto50400109& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400109::IsInitialized() const {
  
  return true;
}

void Proto50400109::Swap(Proto50400109* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400109::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400109_descriptor_;
  metadata.reflection = Proto50400109_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10200007::kFlauntIdFieldNumber;
#endif  // !_MSC_VER

Proto10200007::Proto10200007()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10200007::InitAsDefaultInstance() {
}

Proto10200007::Proto10200007(const Proto10200007& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10200007::SharedCtor() {
  _cached_size_ = 0;
  flaunt_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10200007::~Proto10200007() {
  SharedDtor();
}

void Proto10200007::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10200007::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10200007::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10200007_descriptor_;
}

const Proto10200007& Proto10200007::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto10200007* Proto10200007::default_instance_ = NULL;

Proto10200007* Proto10200007::New() const {
  return new Proto10200007;
}

void Proto10200007::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    flaunt_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10200007::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 flaunt_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &flaunt_id_)));
          set_has_flaunt_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10200007::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 flaunt_id = 1;
  if (has_flaunt_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->flaunt_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10200007::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 flaunt_id = 1;
  if (has_flaunt_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->flaunt_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10200007::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 flaunt_id = 1;
    if (has_flaunt_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->flaunt_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10200007::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10200007* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10200007*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10200007::MergeFrom(const Proto10200007& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flaunt_id()) {
      set_flaunt_id(from.flaunt_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10200007::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10200007::CopyFrom(const Proto10200007& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10200007::IsInitialized() const {
  
  return true;
}

void Proto10200007::Swap(Proto10200007* other) {
  if (other != this) {
    std::swap(flaunt_id_, other->flaunt_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10200007::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10200007_descriptor_;
  metadata.reflection = Proto10200007_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50200007::kFlauntIdFieldNumber;
const int Proto50200007::kTypeFieldNumber;
const int Proto50200007::kMsgFieldNumber;
#endif  // !_MSC_VER

Proto50200007::Proto50200007()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50200007::InitAsDefaultInstance() {
}

Proto50200007::Proto50200007(const Proto50200007& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50200007::SharedCtor() {
  _cached_size_ = 0;
  flaunt_id_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50200007::~Proto50200007() {
  SharedDtor();
}

void Proto50200007::SharedDtor() {
  if (msg_ != &::google::protobuf::internal::kEmptyString) {
    delete msg_;
  }
  if (this != default_instance_) {
  }
}

void Proto50200007::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50200007::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50200007_descriptor_;
}

const Proto50200007& Proto50200007::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto50200007* Proto50200007::default_instance_ = NULL;

Proto50200007* Proto50200007::New() const {
  return new Proto50200007;
}

void Proto50200007::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    flaunt_id_ = GOOGLE_LONGLONG(0);
    type_ = 0;
    if (has_msg()) {
      if (msg_ != &::google::protobuf::internal::kEmptyString) {
        msg_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50200007::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 flaunt_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &flaunt_id_)));
          set_has_flaunt_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_msg;
        break;
      }
      
      // optional bytes msg = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50200007::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 flaunt_id = 1;
  if (has_flaunt_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->flaunt_id(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  // optional bytes msg = 3;
  if (has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->msg(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50200007::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 flaunt_id = 1;
  if (has_flaunt_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->flaunt_id(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  // optional bytes msg = 3;
  if (has_msg()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->msg(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50200007::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 flaunt_id = 1;
    if (has_flaunt_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->flaunt_id());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional bytes msg = 3;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->msg());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50200007::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50200007* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50200007*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50200007::MergeFrom(const Proto50200007& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flaunt_id()) {
      set_flaunt_id(from.flaunt_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_msg()) {
      set_msg(from.msg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50200007::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50200007::CopyFrom(const Proto50200007& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50200007::IsInitialized() const {
  
  return true;
}

void Proto50200007::Swap(Proto50200007* other) {
  if (other != this) {
    std::swap(flaunt_id_, other->flaunt_id_);
    std::swap(type_, other->type_);
    std::swap(msg_, other->msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50200007::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50200007_descriptor_;
  metadata.reflection = Proto50200007_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400002::kDropIdFieldNumber;
#endif  // !_MSC_VER

Proto10400002::Proto10400002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400002::InitAsDefaultInstance() {
}

Proto10400002::Proto10400002(const Proto10400002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400002::SharedCtor() {
  _cached_size_ = 0;
  drop_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400002::~Proto10400002() {
  SharedDtor();
}

void Proto10400002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400002_descriptor_;
}

const Proto10400002& Proto10400002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient005_2eproto();  return *default_instance_;
}

Proto10400002* Proto10400002::default_instance_ = NULL;

Proto10400002* Proto10400002::New() const {
  return new Proto10400002;
}

void Proto10400002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    drop_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 drop_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &drop_id_)));
          set_has_drop_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 drop_id = 1;
  if (has_drop_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->drop_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 drop_id = 1;
  if (has_drop_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->drop_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 drop_id = 1;
    if (has_drop_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->drop_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400002::MergeFrom(const Proto10400002& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_drop_id()) {
      set_drop_id(from.drop_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400002::CopyFrom(const Proto10400002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400002::IsInitialized() const {
  
  return true;
}

void Proto10400002::Swap(Proto10400002* other) {
  if (other != this) {
    std::swap(drop_id_, other->drop_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400002_descriptor_;
  metadata.reflection = Proto10400002_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
