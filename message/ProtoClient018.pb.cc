// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient018.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto80400387_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400387_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100159_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100159_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100159_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100159_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401806_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401806_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401807_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401807_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401811_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401811_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401811_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401811_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400112_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400112_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80401032_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80401032_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400122_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400122_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400827_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400827_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400827_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400827_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100504_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100504_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100505_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100505_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80401033_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80401033_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100321_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100321_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100322_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100322_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100322_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100322_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100323_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100323_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100323_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100323_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400135_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400135_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400135_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400135_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100324_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100324_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81405011_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81405011_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11405012_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11405012_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51405012_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51405012_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81405012_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81405012_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81405013_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81405013_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100214_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100214_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100214_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100214_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401501_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401501_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401503_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401503_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401812_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401812_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401812_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401812_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401102_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401102_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80405020_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80405020_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401417_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401417_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401417_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401417_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102002_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102002_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102004_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102004_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102004_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102004_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102005_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102005_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102005_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102005_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400388_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400388_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400117_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400117_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100111_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100111_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient018_2eproto() {
  protobuf_AddDesc_ProtoClient018_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient018.proto");
  GOOGLE_CHECK(file != NULL);
  Proto80400387_descriptor_ = file->message_type(0);
  static const int Proto80400387_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400387, leader_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400387, impeach_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400387, need_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400387, now_num_),
  };
  Proto80400387_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400387_descriptor_,
      Proto80400387::default_instance_,
      Proto80400387_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400387, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400387, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400387));
  Proto10100159_descriptor_ = file->message_type(1);
  static const int Proto10100159_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100159, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100159, remove_type_),
  };
  Proto10100159_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100159_descriptor_,
      Proto10100159::default_instance_,
      Proto10100159_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100159, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100159, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100159));
  Proto50100159_descriptor_ = file->message_type(2);
  static const int Proto50100159_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100159, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100159, src_friend_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100159, des_friend_type_),
  };
  Proto50100159_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100159_descriptor_,
      Proto50100159::default_instance_,
      Proto50100159_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100159, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100159, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100159));
  Proto81401806_descriptor_ = file->message_type(3);
  static const int Proto81401806_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401806, left_min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401806, buy_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401806, buy_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401806, reward_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401806, show_icon_),
  };
  Proto81401806_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401806_descriptor_,
      Proto81401806::default_instance_,
      Proto81401806_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401806, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401806, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401806));
  Proto81401807_descriptor_ = file->message_type(4);
  static const int Proto81401807_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401807, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401807, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401807, normal_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401807, vip_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401807, is_draw_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401807, vip_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401807, show_icon_),
  };
  Proto81401807_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401807_descriptor_,
      Proto81401807::default_instance_,
      Proto81401807_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401807, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401807, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401807));
  Proto11401811_descriptor_ = file->message_type(5);
  static const int Proto11401811_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401811, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401811, type_),
  };
  Proto11401811_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401811_descriptor_,
      Proto11401811::default_instance_,
      Proto11401811_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401811, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401811, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401811));
  Proto51401811_descriptor_ = file->message_type(6);
  static const int Proto51401811_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401811, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401811, status_),
  };
  Proto51401811_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401811_descriptor_,
      Proto51401811::default_instance_,
      Proto51401811_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401811, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401811, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401811));
  Proto81400112_descriptor_ = file->message_type(7);
  static const int Proto81400112_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400112, rank_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400112, script_id_),
  };
  Proto81400112_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400112_descriptor_,
      Proto81400112::default_instance_,
      Proto81400112_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400112, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400112, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400112));
  Proto80401032_descriptor_ = file->message_type(8);
  static const int Proto80401032_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401032, notify_id_),
  };
  Proto80401032_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80401032_descriptor_,
      Proto80401032::default_instance_,
      Proto80401032_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401032, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401032, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80401032));
  Proto50400122_descriptor_ = file->message_type(9);
  static const int Proto50400122_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400122, mattack_label_),
  };
  Proto50400122_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400122_descriptor_,
      Proto50400122::default_instance_,
      Proto50400122_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400122, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400122, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400122));
  Proto10400827_descriptor_ = file->message_type(10);
  static const int Proto10400827_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400827, index_),
  };
  Proto10400827_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400827_descriptor_,
      Proto10400827::default_instance_,
      Proto10400827_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400827, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400827, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400827));
  Proto50400827_descriptor_ = file->message_type(11);
  static const int Proto50400827_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400827, index_),
  };
  Proto50400827_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400827_descriptor_,
      Proto50400827::default_instance_,
      Proto50400827_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400827, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400827, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400827));
  Proto80100504_descriptor_ = file->message_type(12);
  static const int Proto80100504_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100504, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100504, first_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100504, second_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100504, left_time_),
  };
  Proto80100504_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100504_descriptor_,
      Proto80100504::default_instance_,
      Proto80100504_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100504, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100504, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100504));
  Proto80100505_descriptor_ = file->message_type(13);
  static const int Proto80100505_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100505, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100505, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100505, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100505, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100505, reward_id_),
  };
  Proto80100505_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100505_descriptor_,
      Proto80100505::default_instance_,
      Proto80100505_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100505, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100505, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100505));
  Proto80401033_descriptor_ = file->message_type(14);
  static const int Proto80401033_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401033, boss_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401033, buff_id_),
  };
  Proto80401033_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80401033_descriptor_,
      Proto80401033::default_instance_,
      Proto80401033_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401033, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401033, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80401033));
  Proto50100321_descriptor_ = file->message_type(15);
  static const int Proto50100321_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100321, team_info_),
  };
  Proto50100321_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100321_descriptor_,
      Proto50100321::default_instance_,
      Proto50100321_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100321, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100321, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100321));
  Proto10100322_descriptor_ = file->message_type(16);
  static const int Proto10100322_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100322, status_),
  };
  Proto10100322_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100322_descriptor_,
      Proto10100322::default_instance_,
      Proto10100322_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100322, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100322, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100322));
  Proto50100322_descriptor_ = file->message_type(17);
  static const int Proto50100322_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100322, status_),
  };
  Proto50100322_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100322_descriptor_,
      Proto50100322::default_instance_,
      Proto50100322_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100322, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100322, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100322));
  Proto10100323_descriptor_ = file->message_type(18);
  static const int Proto10100323_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100323, status_),
  };
  Proto10100323_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100323_descriptor_,
      Proto10100323::default_instance_,
      Proto10100323_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100323, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100323, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100323));
  Proto50100323_descriptor_ = file->message_type(19);
  static const int Proto50100323_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100323, status_),
  };
  Proto50100323_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100323_descriptor_,
      Proto50100323::default_instance_,
      Proto50100323_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100323, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100323, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100323));
  Proto11400135_descriptor_ = file->message_type(20);
  static const int Proto11400135_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400135, exchange_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400135, amount_),
  };
  Proto11400135_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400135_descriptor_,
      Proto11400135::default_instance_,
      Proto11400135_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400135, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400135, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400135));
  Proto51400135_descriptor_ = file->message_type(21);
  static const int Proto51400135_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400135, exchange_id_),
  };
  Proto51400135_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400135_descriptor_,
      Proto51400135::default_instance_,
      Proto51400135_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400135, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400135, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400135));
  Proto50100324_descriptor_ = file->message_type(22);
  static const int Proto50100324_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100324, near_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100324, league_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100324, friend_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100324, other_info_),
  };
  Proto50100324_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100324_descriptor_,
      Proto50100324::default_instance_,
      Proto50100324_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100324, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100324, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100324));
  Proto81405011_descriptor_ = file->message_type(23);
  static const int Proto81405011_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405011, free_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405011, reset_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405011, game_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405011, game_length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405011, reset_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405011, other_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405011, item_list_),
  };
  Proto81405011_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81405011_descriptor_,
      Proto81405011::default_instance_,
      Proto81405011_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405011, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405011, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81405011));
  Proto11405012_descriptor_ = file->message_type(24);
  static const int Proto11405012_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11405012, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11405012, other_info_),
  };
  Proto11405012_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11405012_descriptor_,
      Proto11405012::default_instance_,
      Proto11405012_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11405012, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11405012, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11405012));
  Proto51405012_descriptor_ = file->message_type(25);
  static const int Proto51405012_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51405012, dice_num_),
  };
  Proto51405012_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51405012_descriptor_,
      Proto51405012::default_instance_,
      Proto51405012_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51405012, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51405012, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51405012));
  Proto81405012_descriptor_ = file->message_type(26);
  static const int Proto81405012_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405012, gird_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405012, is_get_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405012, is_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405012, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405012, other_info_),
  };
  Proto81405012_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81405012_descriptor_,
      Proto81405012::default_instance_,
      Proto81405012_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405012, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405012, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81405012));
  Proto81405013_descriptor_ = file->message_type(27);
  static const int Proto81405013_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405013, reward_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405013, other_info_),
  };
  Proto81405013_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81405013_descriptor_,
      Proto81405013::default_instance_,
      Proto81405013_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405013, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81405013, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81405013));
  Proto10100214_descriptor_ = file->message_type(28);
  static const int Proto10100214_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100214, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100214, buy_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100214, cash_coupon_use_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100214, amount_),
  };
  Proto10100214_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100214_descriptor_,
      Proto10100214::default_instance_,
      Proto10100214_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100214, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100214, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100214));
  Proto50100214_descriptor_ = file->message_type(29);
  static const int Proto50100214_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100214, index_),
  };
  Proto50100214_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100214_descriptor_,
      Proto50100214::default_instance_,
      Proto50100214_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100214, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100214, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100214));
  Proto51401501_descriptor_ = file->message_type(30);
  static const int Proto51401501_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401501, day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401501, get_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401501, refresh_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401501, open_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401501, buy_status_),
  };
  Proto51401501_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401501_descriptor_,
      Proto51401501::default_instance_,
      Proto51401501_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401501, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401501, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401501));
  Proto11401503_descriptor_ = file->message_type(31);
  static const int Proto11401503_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401503, map_id_),
  };
  Proto11401503_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401503_descriptor_,
      Proto11401503::default_instance_,
      Proto11401503_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401503, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401503, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401503));
  Proto11401812_descriptor_ = file->message_type(32);
  static const int Proto11401812_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401812, type_),
  };
  Proto11401812_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401812_descriptor_,
      Proto11401812::default_instance_,
      Proto11401812_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401812, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401812, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401812));
  Proto51401812_descriptor_ = file->message_type(33);
  static const int Proto51401812_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401812, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401812, fist_recharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401812, type_),
  };
  Proto51401812_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401812_descriptor_,
      Proto51401812::default_instance_,
      Proto51401812_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401812, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401812, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401812));
  Proto81401102_descriptor_ = file->message_type(34);
  static const int Proto81401102_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401102, achieve_detail_),
  };
  Proto81401102_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401102_descriptor_,
      Proto81401102::default_instance_,
      Proto81401102_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401102, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401102, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401102));
  Proto80405020_descriptor_ = file->message_type(35);
  static const int Proto80405020_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405020, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405020, other_info_),
  };
  Proto80405020_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80405020_descriptor_,
      Proto80405020::default_instance_,
      Proto80405020_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405020, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405020, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80405020));
  Proto51401417_descriptor_ = file->message_type(36);
  static const int Proto51401417_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401417, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401417, restore_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401417, is_all_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401417, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401417, restore_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401417, other_info_),
  };
  Proto51401417_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401417_descriptor_,
      Proto51401417::default_instance_,
      Proto51401417_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401417, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401417, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401417));
  Proto11401417_descriptor_ = file->message_type(37);
  static const int Proto11401417_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401417, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401417, restore_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401417, is_all_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401417, other_info_),
  };
  Proto11401417_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401417_descriptor_,
      Proto11401417::default_instance_,
      Proto11401417_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401417, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401417, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401417));
  Proto50102001_descriptor_ = file->message_type(38);
  static const int Proto50102001_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102001, activity_set_),
  };
  Proto50102001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102001_descriptor_,
      Proto50102001::default_instance_,
      Proto50102001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102001));
  Proto10102002_descriptor_ = file->message_type(39);
  static const int Proto10102002_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102002, activity_id_),
  };
  Proto10102002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102002_descriptor_,
      Proto10102002::default_instance_,
      Proto10102002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102002));
  Proto50102002_descriptor_ = file->message_type(40);
  static const int Proto50102002_offsets_[23] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, my_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, left_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, left_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, person_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, server_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, slot_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, now_slot_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, reset_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, free_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, refresh_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, left_free_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, draw_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, draw_free_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, reward_get_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, nine_word_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, reward_show_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, rank_reward_show_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, open_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, reset_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, reward_location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, total_recharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, fish_detail_),
  };
  Proto50102002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102002_descriptor_,
      Proto50102002::default_instance_,
      Proto50102002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102002));
  Proto10102003_descriptor_ = file->message_type(41);
  static const int Proto10102003_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102003, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102003, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102003, type_),
  };
  Proto10102003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102003_descriptor_,
      Proto10102003::default_instance_,
      Proto10102003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102003));
  Proto50102003_descriptor_ = file->message_type(42);
  static const int Proto50102003_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102003, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102003, slot_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102003, record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102003, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102003, mult_),
  };
  Proto50102003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102003_descriptor_,
      Proto50102003::default_instance_,
      Proto50102003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102003));
  Proto10102004_descriptor_ = file->message_type(43);
  static const int Proto10102004_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102004, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102004, exchange_id_),
  };
  Proto10102004_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102004_descriptor_,
      Proto10102004::default_instance_,
      Proto10102004_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102004, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102004, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102004));
  Proto50102004_descriptor_ = file->message_type(44);
  static const int Proto50102004_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102004, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102004, cur_score_),
  };
  Proto50102004_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102004_descriptor_,
      Proto50102004::default_instance_,
      Proto50102004_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102004, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102004, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102004));
  Proto10102005_descriptor_ = file->message_type(45);
  static const int Proto10102005_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102005, activity_id_),
  };
  Proto10102005_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102005_descriptor_,
      Proto10102005::default_instance_,
      Proto10102005_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102005, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102005, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102005));
  Proto50102005_descriptor_ = file->message_type(46);
  static const int Proto50102005_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102005, activity_id_),
  };
  Proto50102005_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102005_descriptor_,
      Proto50102005::default_instance_,
      Proto50102005_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102005, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102005, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102005));
  Proto80400388_descriptor_ = file->message_type(47);
  static const int Proto80400388_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400388, refresh_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400388, add_exp_),
  };
  Proto80400388_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400388_descriptor_,
      Proto80400388::default_instance_,
      Proto80400388_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400388, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400388, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400388));
  Proto80400117_descriptor_ = file->message_type(48);
  static const int Proto80400117_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400117, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400117, other_info_),
  };
  Proto80400117_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400117_descriptor_,
      Proto80400117::default_instance_,
      Proto80400117_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400117, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400117, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400117));
  Proto80100111_descriptor_ = file->message_type(49);
  static const int Proto80100111_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100111, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100111, state_),
  };
  Proto80100111_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100111_descriptor_,
      Proto80100111::default_instance_,
      Proto80100111_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100111, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100111, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100111));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient018_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400387_descriptor_, &Proto80400387::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100159_descriptor_, &Proto10100159::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100159_descriptor_, &Proto50100159::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401806_descriptor_, &Proto81401806::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401807_descriptor_, &Proto81401807::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401811_descriptor_, &Proto11401811::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401811_descriptor_, &Proto51401811::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400112_descriptor_, &Proto81400112::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80401032_descriptor_, &Proto80401032::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400122_descriptor_, &Proto50400122::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400827_descriptor_, &Proto10400827::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400827_descriptor_, &Proto50400827::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100504_descriptor_, &Proto80100504::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100505_descriptor_, &Proto80100505::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80401033_descriptor_, &Proto80401033::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100321_descriptor_, &Proto50100321::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100322_descriptor_, &Proto10100322::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100322_descriptor_, &Proto50100322::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100323_descriptor_, &Proto10100323::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100323_descriptor_, &Proto50100323::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400135_descriptor_, &Proto11400135::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400135_descriptor_, &Proto51400135::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100324_descriptor_, &Proto50100324::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81405011_descriptor_, &Proto81405011::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11405012_descriptor_, &Proto11405012::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51405012_descriptor_, &Proto51405012::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81405012_descriptor_, &Proto81405012::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81405013_descriptor_, &Proto81405013::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100214_descriptor_, &Proto10100214::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100214_descriptor_, &Proto50100214::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401501_descriptor_, &Proto51401501::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401503_descriptor_, &Proto11401503::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401812_descriptor_, &Proto11401812::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401812_descriptor_, &Proto51401812::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401102_descriptor_, &Proto81401102::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80405020_descriptor_, &Proto80405020::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401417_descriptor_, &Proto51401417::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401417_descriptor_, &Proto11401417::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102001_descriptor_, &Proto50102001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102002_descriptor_, &Proto10102002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102002_descriptor_, &Proto50102002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102003_descriptor_, &Proto10102003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102003_descriptor_, &Proto50102003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102004_descriptor_, &Proto10102004::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102004_descriptor_, &Proto50102004::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102005_descriptor_, &Proto10102005::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102005_descriptor_, &Proto50102005::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400388_descriptor_, &Proto80400388::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400117_descriptor_, &Proto80400117::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100111_descriptor_, &Proto80100111::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient018_2eproto() {
  delete Proto80400387::default_instance_;
  delete Proto80400387_reflection_;
  delete Proto10100159::default_instance_;
  delete Proto10100159_reflection_;
  delete Proto50100159::default_instance_;
  delete Proto50100159_reflection_;
  delete Proto81401806::default_instance_;
  delete Proto81401806_reflection_;
  delete Proto81401807::default_instance_;
  delete Proto81401807_reflection_;
  delete Proto11401811::default_instance_;
  delete Proto11401811_reflection_;
  delete Proto51401811::default_instance_;
  delete Proto51401811_reflection_;
  delete Proto81400112::default_instance_;
  delete Proto81400112_reflection_;
  delete Proto80401032::default_instance_;
  delete Proto80401032_reflection_;
  delete Proto50400122::default_instance_;
  delete Proto50400122_reflection_;
  delete Proto10400827::default_instance_;
  delete Proto10400827_reflection_;
  delete Proto50400827::default_instance_;
  delete Proto50400827_reflection_;
  delete Proto80100504::default_instance_;
  delete Proto80100504_reflection_;
  delete Proto80100505::default_instance_;
  delete Proto80100505_reflection_;
  delete Proto80401033::default_instance_;
  delete Proto80401033_reflection_;
  delete Proto50100321::default_instance_;
  delete Proto50100321_reflection_;
  delete Proto10100322::default_instance_;
  delete Proto10100322_reflection_;
  delete Proto50100322::default_instance_;
  delete Proto50100322_reflection_;
  delete Proto10100323::default_instance_;
  delete Proto10100323_reflection_;
  delete Proto50100323::default_instance_;
  delete Proto50100323_reflection_;
  delete Proto11400135::default_instance_;
  delete Proto11400135_reflection_;
  delete Proto51400135::default_instance_;
  delete Proto51400135_reflection_;
  delete Proto50100324::default_instance_;
  delete Proto50100324_reflection_;
  delete Proto81405011::default_instance_;
  delete Proto81405011_reflection_;
  delete Proto11405012::default_instance_;
  delete Proto11405012_reflection_;
  delete Proto51405012::default_instance_;
  delete Proto51405012_reflection_;
  delete Proto81405012::default_instance_;
  delete Proto81405012_reflection_;
  delete Proto81405013::default_instance_;
  delete Proto81405013_reflection_;
  delete Proto10100214::default_instance_;
  delete Proto10100214_reflection_;
  delete Proto50100214::default_instance_;
  delete Proto50100214_reflection_;
  delete Proto51401501::default_instance_;
  delete Proto51401501_reflection_;
  delete Proto11401503::default_instance_;
  delete Proto11401503_reflection_;
  delete Proto11401812::default_instance_;
  delete Proto11401812_reflection_;
  delete Proto51401812::default_instance_;
  delete Proto51401812_reflection_;
  delete Proto81401102::default_instance_;
  delete Proto81401102_reflection_;
  delete Proto80405020::default_instance_;
  delete Proto80405020_reflection_;
  delete Proto51401417::default_instance_;
  delete Proto51401417_reflection_;
  delete Proto11401417::default_instance_;
  delete Proto11401417_reflection_;
  delete Proto50102001::default_instance_;
  delete Proto50102001_reflection_;
  delete Proto10102002::default_instance_;
  delete Proto10102002_reflection_;
  delete Proto50102002::default_instance_;
  delete Proto50102002_reflection_;
  delete Proto10102003::default_instance_;
  delete Proto10102003_reflection_;
  delete Proto50102003::default_instance_;
  delete Proto50102003_reflection_;
  delete Proto10102004::default_instance_;
  delete Proto10102004_reflection_;
  delete Proto50102004::default_instance_;
  delete Proto50102004_reflection_;
  delete Proto10102005::default_instance_;
  delete Proto10102005_reflection_;
  delete Proto50102005::default_instance_;
  delete Proto50102005_reflection_;
  delete Proto80400388::default_instance_;
  delete Proto80400388_reflection_;
  delete Proto80400117::default_instance_;
  delete Proto80400117_reflection_;
  delete Proto80100111::default_instance_;
  delete Proto80100111_reflection_;
}

void protobuf_AddDesc_ProtoClient018_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient018.proto\032\021ProtoPublic.prot"
    "o\"]\n\rProto80400387\022\023\n\013leader_name\030\001 \001(\t\022"
    "\024\n\014impeach_name\030\002 \001(\t\022\020\n\010need_num\030\003 \001(\005\022"
    "\017\n\007now_num\030\004 \001(\005\"5\n\rProto10100159\022\017\n\007rol"
    "e_id\030\001 \001(\003\022\023\n\013remove_type\030\002 \001(\005\"R\n\rProto"
    "50100159\022\017\n\007role_id\030\001 \001(\003\022\027\n\017src_friend_"
    "type\030\002 \001(\005\022\027\n\017des_friend_type\030\003 \001(\005\"l\n\rP"
    "roto81401806\022\020\n\010left_min\030\001 \001(\003\022\020\n\010buy_ti"
    "me\030\002 \001(\005\022\021\n\tbuy_money\030\003 \001(\005\022\021\n\treward_id"
    "\030\004 \001(\005\022\021\n\tshow_icon\030\005 \001(\005\"\255\001\n\rProto81401"
    "807\022\021\n\tleft_time\030\001 \001(\003\022\r\n\005index\030\002 \001(\005\022\"\n"
    "\013normal_list\030\003 \003(\0132\r.ProtoPairObj\022\037\n\010vip"
    "_list\030\004 \003(\0132\r.ProtoPairObj\022\017\n\007is_draw\030\005 "
    "\001(\005\022\021\n\tvip_level\030\006 \001(\005\022\021\n\tshow_icon\030\007 \001("
    "\005\",\n\rProto11401811\022\r\n\005index\030\001 \001(\005\022\014\n\004typ"
    "e\030\002 \001(\005\".\n\rProto51401811\022\r\n\005index\030\001 \001(\005\022"
    "\016\n\006status\030\002 \001(\005\"G\n\rProto81400112\022#\n\trank"
    "_list\030\001 \003(\0132\020.ProtoLScoreInfo\022\021\n\tscript_"
    "id\030\002 \001(\005\"\"\n\rProto80401032\022\021\n\tnotify_id\030\001"
    " \001(\005\":\n\rProto50400122\022)\n\rmattack_label\030\001"
    " \003(\0132\022.ProtoMAttackLabel\"\036\n\rProto1040082"
    "7\022\r\n\005index\030\001 \001(\005\"\036\n\rProto50400827\022\r\n\005ind"
    "ex\030\001 \001(\005\"k\n\rProto80100504\022\014\n\004flag\030\001 \001(\005\022"
    "\033\n\005first\030\002 \001(\0132\014.ProtoLMRole\022\034\n\006second\030\003"
    " \001(\0132\014.ProtoLMRole\022\021\n\tleft_time\030\004 \001(\005\"\\\n"
    "\rProto80100505\022\014\n\004flag\030\001 \001(\005\022\014\n\004name\030\002 \001"
    "(\t\022\r\n\005stage\030\003 \001(\005\022\r\n\005score\030\004 \001(\005\022\021\n\trewa"
    "rd_id\030\005 \001(\005\"1\n\rProto80401033\022\017\n\007boss_id\030"
    "\001 \001(\003\022\017\n\007buff_id\030\002 \001(\005\"0\n\rProto50100321\022"
    "\037\n\tteam_info\030\001 \003(\0132\014.ProtoTeamer\"\037\n\rProt"
    "o10100322\022\016\n\006status\030\001 \001(\005\"\037\n\rProto501003"
    "22\022\016\n\006status\030\001 \001(\005\"\037\n\rProto10100323\022\016\n\006s"
    "tatus\030\001 \001(\005\"\037\n\rProto50100323\022\016\n\006status\030\001"
    " \001(\005\"4\n\rProto11400135\022\023\n\013exchange_id\030\001 \001"
    "(\005\022\016\n\006amount\030\002 \001(\005\"$\n\rProto51400135\022\023\n\013e"
    "xchange_id\030\001 \001(\005\"\232\001\n\rProto50100324\022\037\n\tne"
    "ar_list\030\001 \003(\0132\014.ProtoTeamer\022!\n\013league_li"
    "st\030\002 \003(\0132\014.ProtoTeamer\022!\n\013friend_list\030\003 "
    "\003(\0132\014.ProtoTeamer\022\"\n\nother_info\030\004 \001(\0132\016."
    "ProtoThreeObj\"\270\001\n\rProto81405011\022\022\n\nfree_"
    "times\030\001 \001(\005\022\023\n\013reset_times\030\002 \001(\005\022\022\n\ngame"
    "_index\030\003 \001(\005\022\023\n\013game_length\030\004 \001(\005\022\022\n\nres"
    "et_tick\030\005 \001(\003\022\"\n\nother_info\030\006 \001(\0132\016.Prot"
    "oThreeObj\022\035\n\titem_list\030\007 \003(\0132\n.ProtoItem"
    "\"A\n\rProto11405012\022\014\n\004type\030\001 \001(\005\022\"\n\nother"
    "_info\030\002 \001(\0132\016.ProtoThreeObj\"!\n\rProto5140"
    "5012\022\020\n\010dice_num\030\001 \001(\005\"\211\001\n\rProto81405012"
    "\022\022\n\ngird_index\030\001 \001(\005\022\016\n\006is_get\030\002 \001(\005\022\021\n\t"
    "is_double\030\003 \001(\005\022\035\n\titem_list\030\004 \003(\0132\n.Pro"
    "toItem\022\"\n\nother_info\030\005 \001(\0132\016.ProtoThreeO"
    "bj\"F\n\rProto81405013\022\021\n\treward_id\030\001 \001(\005\022\""
    "\n\nother_info\030\002 \001(\0132\016.ProtoThreeObj\"Z\n\rPr"
    "oto10100214\022\r\n\005index\030\001 \001(\005\022\021\n\tbuy_index\030"
    "\002 \001(\005\022\027\n\017cash_coupon_use\030\003 \001(\005\022\016\n\006amount"
    "\030\004 \001(\005\"\036\n\rProto50100214\022\r\n\005index\030\001 \001(\005\"r"
    "\n\rProto51401501\022\013\n\003day\030\001 \001(\005\022\022\n\nget_stat"
    "us\030\002 \001(\005\022\017\n\007refresh\030\003 \001(\005\022\014\n\004open\030\004 \001(\005\022"
    "!\n\nbuy_status\030\005 \003(\0132\r.ProtoPairObj\"\037\n\rPr"
    "oto11401503\022\016\n\006map_id\030\001 \001(\005\"\035\n\rProto1140"
    "1812\022\014\n\004type\030\001 \001(\005\"G\n\rProto51401812\022\021\n\tl"
    "eft_time\030\001 \001(\005\022\025\n\rfist_recharge\030\002 \003(\005\022\014\n"
    "\004type\030\003 \001(\005\"<\n\rProto81401102\022+\n\016achieve_"
    "detail\030\001 \003(\0132\023.ProtoAchieveDetail\"C\n\rPro"
    "to80405020\022\016\n\006status\030\001 \001(\005\022\"\n\nother_info"
    "\030\002 \001(\0132\016.ProtoThreeObj\"\265\001\n\rProto51401417"
    "\022\023\n\013activity_id\030\001 \001(\005\022\024\n\014restore_type\030\002 "
    "\001(\005\022\016\n\006is_all\030\003 \001(\005\022\035\n\titem_list\030\004 \003(\0132\n"
    ".ProtoItem\022&\n\014restore_info\030\005 \001(\0132\020.Proto"
    "ExpRestore\022\"\n\nother_info\030\006 \001(\0132\016.ProtoTh"
    "reeObj\"n\n\rProto11401417\022\023\n\013activity_id\030\001"
    " \001(\005\022\024\n\014restore_type\030\002 \001(\005\022\016\n\006is_all\030\003 \001"
    "(\005\022\"\n\nother_info\030\004 \001(\0132\016.ProtoThreeObj\"%"
    "\n\rProto50102001\022\024\n\014activity_set\030\001 \003(\005\"$\n"
    "\rProto10102002\022\023\n\013activity_id\030\001 \001(\005\"\306\004\n\r"
    "Proto50102002\022\023\n\013activity_id\030\001 \001(\005\022\020\n\010my"
    "_score\030\002 \001(\005\022\021\n\tleft_tick\030\003 \001(\005\022\021\n\tleft_"
    "gold\030\004 \001(\005\022)\n\rperson_record\030\005 \003(\0132\022.Prot"
    "oPersonRecord\022)\n\rserver_record\030\006 \003(\0132\022.P"
    "rotoServerRecord\022!\n\tslot_info\030\007 \003(\0132\016.Pr"
    "otoSlotInfo\022\023\n\013now_slot_id\030\010 \001(\005\022\023\n\013rese"
    "t_times\030\t \001(\005\022\022\n\nfree_times\030\n \001(\005\022\024\n\014ref"
    "resh_tick\030\013 \001(\005\022\026\n\016left_free_time\030\014 \001(\005\022"
    "\022\n\ndraw_limit\030\r \001(\005\022\027\n\017draw_free_times\030\016"
    " \001(\005\022\022\n\nreward_get\030\017 \001(\005\022\030\n\020nine_word_re"
    "ward\030\020 \001(\005\022\023\n\013reward_show\030\021 \001(\005\022\030\n\020rank_"
    "reward_show\030\022 \001(\005\022\022\n\nopen_times\030\023 \001(\005\022\022\n"
    "\nreset_cost\030\024 \001(\005\022\027\n\017reward_location\030\025 \003"
    "(\005\022\026\n\016total_recharge\030\026 \001(\005\022 \n\013fish_detai"
    "l\030\027 \003(\0132\013.FishDetail\"B\n\rProto10102003\022\023\n"
    "\013activity_id\030\001 \001(\005\022\016\n\006amount\030\002 \001(\005\022\014\n\004ty"
    "pe\030\003 \001(\005\"x\n\rProto50102003\022\023\n\013activity_id"
    "\030\001 \001(\005\022\020\n\010slot_set\030\002 \003(\005\022\"\n\006record\030\003 \003(\013"
    "2\022.ProtoPersonRecord\022\016\n\006amount\030\004 \001(\005\022\014\n\004"
    "mult\030\005 \001(\005\"9\n\rProto10102004\022\023\n\013activity_"
    "id\030\001 \001(\005\022\023\n\013exchange_id\030\002 \001(\005\"7\n\rProto50"
    "102004\022\023\n\013activity_id\030\001 \001(\005\022\021\n\tcur_score"
    "\030\002 \001(\005\"$\n\rProto10102005\022\023\n\013activity_id\030\001"
    " \001(\005\"$\n\rProto50102005\022\023\n\013activity_id\030\001 \001"
    "(\005\"6\n\rProto80400388\022\024\n\014refresh_tick\030\001 \001("
    "\005\022\017\n\007add_exp\030\002 \001(\005\"@\n\rProto80400117\022\013\n\003e"
    "xp\030\001 \001(\005\022\"\n\nother_info\030\002 \001(\0132\016.ProtoThre"
    "eObj\",\n\rProto80100111\022\014\n\004type\030\001 \001(\005\022\r\n\005s"
    "tate\030\002 \001(\005", 4090);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient018.proto", &protobuf_RegisterTypes);
  Proto80400387::default_instance_ = new Proto80400387();
  Proto10100159::default_instance_ = new Proto10100159();
  Proto50100159::default_instance_ = new Proto50100159();
  Proto81401806::default_instance_ = new Proto81401806();
  Proto81401807::default_instance_ = new Proto81401807();
  Proto11401811::default_instance_ = new Proto11401811();
  Proto51401811::default_instance_ = new Proto51401811();
  Proto81400112::default_instance_ = new Proto81400112();
  Proto80401032::default_instance_ = new Proto80401032();
  Proto50400122::default_instance_ = new Proto50400122();
  Proto10400827::default_instance_ = new Proto10400827();
  Proto50400827::default_instance_ = new Proto50400827();
  Proto80100504::default_instance_ = new Proto80100504();
  Proto80100505::default_instance_ = new Proto80100505();
  Proto80401033::default_instance_ = new Proto80401033();
  Proto50100321::default_instance_ = new Proto50100321();
  Proto10100322::default_instance_ = new Proto10100322();
  Proto50100322::default_instance_ = new Proto50100322();
  Proto10100323::default_instance_ = new Proto10100323();
  Proto50100323::default_instance_ = new Proto50100323();
  Proto11400135::default_instance_ = new Proto11400135();
  Proto51400135::default_instance_ = new Proto51400135();
  Proto50100324::default_instance_ = new Proto50100324();
  Proto81405011::default_instance_ = new Proto81405011();
  Proto11405012::default_instance_ = new Proto11405012();
  Proto51405012::default_instance_ = new Proto51405012();
  Proto81405012::default_instance_ = new Proto81405012();
  Proto81405013::default_instance_ = new Proto81405013();
  Proto10100214::default_instance_ = new Proto10100214();
  Proto50100214::default_instance_ = new Proto50100214();
  Proto51401501::default_instance_ = new Proto51401501();
  Proto11401503::default_instance_ = new Proto11401503();
  Proto11401812::default_instance_ = new Proto11401812();
  Proto51401812::default_instance_ = new Proto51401812();
  Proto81401102::default_instance_ = new Proto81401102();
  Proto80405020::default_instance_ = new Proto80405020();
  Proto51401417::default_instance_ = new Proto51401417();
  Proto11401417::default_instance_ = new Proto11401417();
  Proto50102001::default_instance_ = new Proto50102001();
  Proto10102002::default_instance_ = new Proto10102002();
  Proto50102002::default_instance_ = new Proto50102002();
  Proto10102003::default_instance_ = new Proto10102003();
  Proto50102003::default_instance_ = new Proto50102003();
  Proto10102004::default_instance_ = new Proto10102004();
  Proto50102004::default_instance_ = new Proto50102004();
  Proto10102005::default_instance_ = new Proto10102005();
  Proto50102005::default_instance_ = new Proto50102005();
  Proto80400388::default_instance_ = new Proto80400388();
  Proto80400117::default_instance_ = new Proto80400117();
  Proto80100111::default_instance_ = new Proto80100111();
  Proto80400387::default_instance_->InitAsDefaultInstance();
  Proto10100159::default_instance_->InitAsDefaultInstance();
  Proto50100159::default_instance_->InitAsDefaultInstance();
  Proto81401806::default_instance_->InitAsDefaultInstance();
  Proto81401807::default_instance_->InitAsDefaultInstance();
  Proto11401811::default_instance_->InitAsDefaultInstance();
  Proto51401811::default_instance_->InitAsDefaultInstance();
  Proto81400112::default_instance_->InitAsDefaultInstance();
  Proto80401032::default_instance_->InitAsDefaultInstance();
  Proto50400122::default_instance_->InitAsDefaultInstance();
  Proto10400827::default_instance_->InitAsDefaultInstance();
  Proto50400827::default_instance_->InitAsDefaultInstance();
  Proto80100504::default_instance_->InitAsDefaultInstance();
  Proto80100505::default_instance_->InitAsDefaultInstance();
  Proto80401033::default_instance_->InitAsDefaultInstance();
  Proto50100321::default_instance_->InitAsDefaultInstance();
  Proto10100322::default_instance_->InitAsDefaultInstance();
  Proto50100322::default_instance_->InitAsDefaultInstance();
  Proto10100323::default_instance_->InitAsDefaultInstance();
  Proto50100323::default_instance_->InitAsDefaultInstance();
  Proto11400135::default_instance_->InitAsDefaultInstance();
  Proto51400135::default_instance_->InitAsDefaultInstance();
  Proto50100324::default_instance_->InitAsDefaultInstance();
  Proto81405011::default_instance_->InitAsDefaultInstance();
  Proto11405012::default_instance_->InitAsDefaultInstance();
  Proto51405012::default_instance_->InitAsDefaultInstance();
  Proto81405012::default_instance_->InitAsDefaultInstance();
  Proto81405013::default_instance_->InitAsDefaultInstance();
  Proto10100214::default_instance_->InitAsDefaultInstance();
  Proto50100214::default_instance_->InitAsDefaultInstance();
  Proto51401501::default_instance_->InitAsDefaultInstance();
  Proto11401503::default_instance_->InitAsDefaultInstance();
  Proto11401812::default_instance_->InitAsDefaultInstance();
  Proto51401812::default_instance_->InitAsDefaultInstance();
  Proto81401102::default_instance_->InitAsDefaultInstance();
  Proto80405020::default_instance_->InitAsDefaultInstance();
  Proto51401417::default_instance_->InitAsDefaultInstance();
  Proto11401417::default_instance_->InitAsDefaultInstance();
  Proto50102001::default_instance_->InitAsDefaultInstance();
  Proto10102002::default_instance_->InitAsDefaultInstance();
  Proto50102002::default_instance_->InitAsDefaultInstance();
  Proto10102003::default_instance_->InitAsDefaultInstance();
  Proto50102003::default_instance_->InitAsDefaultInstance();
  Proto10102004::default_instance_->InitAsDefaultInstance();
  Proto50102004::default_instance_->InitAsDefaultInstance();
  Proto10102005::default_instance_->InitAsDefaultInstance();
  Proto50102005::default_instance_->InitAsDefaultInstance();
  Proto80400388::default_instance_->InitAsDefaultInstance();
  Proto80400117::default_instance_->InitAsDefaultInstance();
  Proto80100111::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient018_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient018_2eproto {
  StaticDescriptorInitializer_ProtoClient018_2eproto() {
    protobuf_AddDesc_ProtoClient018_2eproto();
  }
} static_descriptor_initializer_ProtoClient018_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto80400387::kLeaderNameFieldNumber;
const int Proto80400387::kImpeachNameFieldNumber;
const int Proto80400387::kNeedNumFieldNumber;
const int Proto80400387::kNowNumFieldNumber;
#endif  // !_MSC_VER

Proto80400387::Proto80400387()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400387::InitAsDefaultInstance() {
}

Proto80400387::Proto80400387(const Proto80400387& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400387::SharedCtor() {
  _cached_size_ = 0;
  leader_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  impeach_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  need_num_ = 0;
  now_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400387::~Proto80400387() {
  SharedDtor();
}

void Proto80400387::SharedDtor() {
  if (leader_name_ != &::google::protobuf::internal::kEmptyString) {
    delete leader_name_;
  }
  if (impeach_name_ != &::google::protobuf::internal::kEmptyString) {
    delete impeach_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400387::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400387::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400387_descriptor_;
}

const Proto80400387& Proto80400387::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto80400387* Proto80400387::default_instance_ = NULL;

Proto80400387* Proto80400387::New() const {
  return new Proto80400387;
}

void Proto80400387::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_leader_name()) {
      if (leader_name_ != &::google::protobuf::internal::kEmptyString) {
        leader_name_->clear();
      }
    }
    if (has_impeach_name()) {
      if (impeach_name_ != &::google::protobuf::internal::kEmptyString) {
        impeach_name_->clear();
      }
    }
    need_num_ = 0;
    now_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400387::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string leader_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->leader_name().data(), this->leader_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_impeach_name;
        break;
      }
      
      // optional string impeach_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_impeach_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_impeach_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->impeach_name().data(), this->impeach_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_need_num;
        break;
      }
      
      // optional int32 need_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_need_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_num_)));
          set_has_need_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_now_num;
        break;
      }
      
      // optional int32 now_num = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_now_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &now_num_)));
          set_has_now_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400387::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string leader_name = 1;
  if (has_leader_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leader_name().data(), this->leader_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->leader_name(), output);
  }
  
  // optional string impeach_name = 2;
  if (has_impeach_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->impeach_name().data(), this->impeach_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->impeach_name(), output);
  }
  
  // optional int32 need_num = 3;
  if (has_need_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->need_num(), output);
  }
  
  // optional int32 now_num = 4;
  if (has_now_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->now_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400387::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string leader_name = 1;
  if (has_leader_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leader_name().data(), this->leader_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->leader_name(), target);
  }
  
  // optional string impeach_name = 2;
  if (has_impeach_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->impeach_name().data(), this->impeach_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->impeach_name(), target);
  }
  
  // optional int32 need_num = 3;
  if (has_need_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->need_num(), target);
  }
  
  // optional int32 now_num = 4;
  if (has_now_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->now_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400387::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string leader_name = 1;
    if (has_leader_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->leader_name());
    }
    
    // optional string impeach_name = 2;
    if (has_impeach_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->impeach_name());
    }
    
    // optional int32 need_num = 3;
    if (has_need_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->need_num());
    }
    
    // optional int32 now_num = 4;
    if (has_now_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->now_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400387::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400387* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400387*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400387::MergeFrom(const Proto80400387& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_leader_name()) {
      set_leader_name(from.leader_name());
    }
    if (from.has_impeach_name()) {
      set_impeach_name(from.impeach_name());
    }
    if (from.has_need_num()) {
      set_need_num(from.need_num());
    }
    if (from.has_now_num()) {
      set_now_num(from.now_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400387::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400387::CopyFrom(const Proto80400387& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400387::IsInitialized() const {
  
  return true;
}

void Proto80400387::Swap(Proto80400387* other) {
  if (other != this) {
    std::swap(leader_name_, other->leader_name_);
    std::swap(impeach_name_, other->impeach_name_);
    std::swap(need_num_, other->need_num_);
    std::swap(now_num_, other->now_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400387::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400387_descriptor_;
  metadata.reflection = Proto80400387_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100159::kRoleIdFieldNumber;
const int Proto10100159::kRemoveTypeFieldNumber;
#endif  // !_MSC_VER

Proto10100159::Proto10100159()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100159::InitAsDefaultInstance() {
}

Proto10100159::Proto10100159(const Proto10100159& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100159::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  remove_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100159::~Proto10100159() {
  SharedDtor();
}

void Proto10100159::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100159::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100159::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100159_descriptor_;
}

const Proto10100159& Proto10100159::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto10100159* Proto10100159::default_instance_ = NULL;

Proto10100159* Proto10100159::New() const {
  return new Proto10100159;
}

void Proto10100159::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    remove_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100159::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_remove_type;
        break;
      }
      
      // optional int32 remove_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_remove_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &remove_type_)));
          set_has_remove_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100159::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 remove_type = 2;
  if (has_remove_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->remove_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100159::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 remove_type = 2;
  if (has_remove_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->remove_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100159::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 remove_type = 2;
    if (has_remove_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->remove_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100159::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100159* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100159*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100159::MergeFrom(const Proto10100159& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_remove_type()) {
      set_remove_type(from.remove_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100159::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100159::CopyFrom(const Proto10100159& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100159::IsInitialized() const {
  
  return true;
}

void Proto10100159::Swap(Proto10100159* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(remove_type_, other->remove_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100159::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100159_descriptor_;
  metadata.reflection = Proto10100159_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100159::kRoleIdFieldNumber;
const int Proto50100159::kSrcFriendTypeFieldNumber;
const int Proto50100159::kDesFriendTypeFieldNumber;
#endif  // !_MSC_VER

Proto50100159::Proto50100159()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100159::InitAsDefaultInstance() {
}

Proto50100159::Proto50100159(const Proto50100159& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100159::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  src_friend_type_ = 0;
  des_friend_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100159::~Proto50100159() {
  SharedDtor();
}

void Proto50100159::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100159::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100159::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100159_descriptor_;
}

const Proto50100159& Proto50100159::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto50100159* Proto50100159::default_instance_ = NULL;

Proto50100159* Proto50100159::New() const {
  return new Proto50100159;
}

void Proto50100159::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    src_friend_type_ = 0;
    des_friend_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100159::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_src_friend_type;
        break;
      }
      
      // optional int32 src_friend_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_src_friend_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &src_friend_type_)));
          set_has_src_friend_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_des_friend_type;
        break;
      }
      
      // optional int32 des_friend_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_des_friend_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &des_friend_type_)));
          set_has_des_friend_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100159::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 src_friend_type = 2;
  if (has_src_friend_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->src_friend_type(), output);
  }
  
  // optional int32 des_friend_type = 3;
  if (has_des_friend_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->des_friend_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100159::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 src_friend_type = 2;
  if (has_src_friend_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->src_friend_type(), target);
  }
  
  // optional int32 des_friend_type = 3;
  if (has_des_friend_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->des_friend_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100159::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 src_friend_type = 2;
    if (has_src_friend_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->src_friend_type());
    }
    
    // optional int32 des_friend_type = 3;
    if (has_des_friend_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->des_friend_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100159::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100159* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100159*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100159::MergeFrom(const Proto50100159& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_src_friend_type()) {
      set_src_friend_type(from.src_friend_type());
    }
    if (from.has_des_friend_type()) {
      set_des_friend_type(from.des_friend_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100159::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100159::CopyFrom(const Proto50100159& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100159::IsInitialized() const {
  
  return true;
}

void Proto50100159::Swap(Proto50100159* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(src_friend_type_, other->src_friend_type_);
    std::swap(des_friend_type_, other->des_friend_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100159::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100159_descriptor_;
  metadata.reflection = Proto50100159_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401806::kLeftMinFieldNumber;
const int Proto81401806::kBuyTimeFieldNumber;
const int Proto81401806::kBuyMoneyFieldNumber;
const int Proto81401806::kRewardIdFieldNumber;
const int Proto81401806::kShowIconFieldNumber;
#endif  // !_MSC_VER

Proto81401806::Proto81401806()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401806::InitAsDefaultInstance() {
}

Proto81401806::Proto81401806(const Proto81401806& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401806::SharedCtor() {
  _cached_size_ = 0;
  left_min_ = GOOGLE_LONGLONG(0);
  buy_time_ = 0;
  buy_money_ = 0;
  reward_id_ = 0;
  show_icon_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401806::~Proto81401806() {
  SharedDtor();
}

void Proto81401806::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401806::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401806::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401806_descriptor_;
}

const Proto81401806& Proto81401806::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto81401806* Proto81401806::default_instance_ = NULL;

Proto81401806* Proto81401806::New() const {
  return new Proto81401806;
}

void Proto81401806::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_min_ = GOOGLE_LONGLONG(0);
    buy_time_ = 0;
    buy_money_ = 0;
    reward_id_ = 0;
    show_icon_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401806::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 left_min = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &left_min_)));
          set_has_left_min();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_buy_time;
        break;
      }
      
      // optional int32 buy_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_time_)));
          set_has_buy_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_buy_money;
        break;
      }
      
      // optional int32 buy_money = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_money_)));
          set_has_buy_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_reward_id;
        break;
      }
      
      // optional int32 reward_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_id_)));
          set_has_reward_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_show_icon;
        break;
      }
      
      // optional int32 show_icon = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_show_icon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &show_icon_)));
          set_has_show_icon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401806::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 left_min = 1;
  if (has_left_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->left_min(), output);
  }
  
  // optional int32 buy_time = 2;
  if (has_buy_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->buy_time(), output);
  }
  
  // optional int32 buy_money = 3;
  if (has_buy_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->buy_money(), output);
  }
  
  // optional int32 reward_id = 4;
  if (has_reward_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->reward_id(), output);
  }
  
  // optional int32 show_icon = 5;
  if (has_show_icon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->show_icon(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401806::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 left_min = 1;
  if (has_left_min()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->left_min(), target);
  }
  
  // optional int32 buy_time = 2;
  if (has_buy_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->buy_time(), target);
  }
  
  // optional int32 buy_money = 3;
  if (has_buy_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->buy_money(), target);
  }
  
  // optional int32 reward_id = 4;
  if (has_reward_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->reward_id(), target);
  }
  
  // optional int32 show_icon = 5;
  if (has_show_icon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->show_icon(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401806::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 left_min = 1;
    if (has_left_min()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->left_min());
    }
    
    // optional int32 buy_time = 2;
    if (has_buy_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_time());
    }
    
    // optional int32 buy_money = 3;
    if (has_buy_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_money());
    }
    
    // optional int32 reward_id = 4;
    if (has_reward_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_id());
    }
    
    // optional int32 show_icon = 5;
    if (has_show_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->show_icon());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401806::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401806* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401806*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401806::MergeFrom(const Proto81401806& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_min()) {
      set_left_min(from.left_min());
    }
    if (from.has_buy_time()) {
      set_buy_time(from.buy_time());
    }
    if (from.has_buy_money()) {
      set_buy_money(from.buy_money());
    }
    if (from.has_reward_id()) {
      set_reward_id(from.reward_id());
    }
    if (from.has_show_icon()) {
      set_show_icon(from.show_icon());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401806::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401806::CopyFrom(const Proto81401806& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401806::IsInitialized() const {
  
  return true;
}

void Proto81401806::Swap(Proto81401806* other) {
  if (other != this) {
    std::swap(left_min_, other->left_min_);
    std::swap(buy_time_, other->buy_time_);
    std::swap(buy_money_, other->buy_money_);
    std::swap(reward_id_, other->reward_id_);
    std::swap(show_icon_, other->show_icon_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401806::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401806_descriptor_;
  metadata.reflection = Proto81401806_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401807::kLeftTimeFieldNumber;
const int Proto81401807::kIndexFieldNumber;
const int Proto81401807::kNormalListFieldNumber;
const int Proto81401807::kVipListFieldNumber;
const int Proto81401807::kIsDrawFieldNumber;
const int Proto81401807::kVipLevelFieldNumber;
const int Proto81401807::kShowIconFieldNumber;
#endif  // !_MSC_VER

Proto81401807::Proto81401807()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401807::InitAsDefaultInstance() {
}

Proto81401807::Proto81401807(const Proto81401807& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401807::SharedCtor() {
  _cached_size_ = 0;
  left_time_ = GOOGLE_LONGLONG(0);
  index_ = 0;
  is_draw_ = 0;
  vip_level_ = 0;
  show_icon_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401807::~Proto81401807() {
  SharedDtor();
}

void Proto81401807::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401807::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401807::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401807_descriptor_;
}

const Proto81401807& Proto81401807::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto81401807* Proto81401807::default_instance_ = NULL;

Proto81401807* Proto81401807::New() const {
  return new Proto81401807;
}

void Proto81401807::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_time_ = GOOGLE_LONGLONG(0);
    index_ = 0;
    is_draw_ = 0;
    vip_level_ = 0;
    show_icon_ = 0;
  }
  normal_list_.Clear();
  vip_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401807::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 left_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }
      
      // optional int32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_normal_list;
        break;
      }
      
      // repeated .ProtoPairObj normal_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_normal_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_normal_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_normal_list;
        if (input->ExpectTag(34)) goto parse_vip_list;
        break;
      }
      
      // repeated .ProtoPairObj vip_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_vip_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_vip_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_vip_list;
        if (input->ExpectTag(40)) goto parse_is_draw;
        break;
      }
      
      // optional int32 is_draw = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_draw:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_draw_)));
          set_has_is_draw();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_vip_level;
        break;
      }
      
      // optional int32 vip_level = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_level_)));
          set_has_vip_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_show_icon;
        break;
      }
      
      // optional int32 show_icon = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_show_icon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &show_icon_)));
          set_has_show_icon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401807::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 left_time = 1;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->left_time(), output);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }
  
  // repeated .ProtoPairObj normal_list = 3;
  for (int i = 0; i < this->normal_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->normal_list(i), output);
  }
  
  // repeated .ProtoPairObj vip_list = 4;
  for (int i = 0; i < this->vip_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->vip_list(i), output);
  }
  
  // optional int32 is_draw = 5;
  if (has_is_draw()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->is_draw(), output);
  }
  
  // optional int32 vip_level = 6;
  if (has_vip_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->vip_level(), output);
  }
  
  // optional int32 show_icon = 7;
  if (has_show_icon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->show_icon(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401807::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 left_time = 1;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->left_time(), target);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }
  
  // repeated .ProtoPairObj normal_list = 3;
  for (int i = 0; i < this->normal_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->normal_list(i), target);
  }
  
  // repeated .ProtoPairObj vip_list = 4;
  for (int i = 0; i < this->vip_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->vip_list(i), target);
  }
  
  // optional int32 is_draw = 5;
  if (has_is_draw()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->is_draw(), target);
  }
  
  // optional int32 vip_level = 6;
  if (has_vip_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->vip_level(), target);
  }
  
  // optional int32 show_icon = 7;
  if (has_show_icon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->show_icon(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401807::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 left_time = 1;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->left_time());
    }
    
    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 is_draw = 5;
    if (has_is_draw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_draw());
    }
    
    // optional int32 vip_level = 6;
    if (has_vip_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_level());
    }
    
    // optional int32 show_icon = 7;
    if (has_show_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->show_icon());
    }
    
  }
  // repeated .ProtoPairObj normal_list = 3;
  total_size += 1 * this->normal_list_size();
  for (int i = 0; i < this->normal_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->normal_list(i));
  }
  
  // repeated .ProtoPairObj vip_list = 4;
  total_size += 1 * this->vip_list_size();
  for (int i = 0; i < this->vip_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vip_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401807::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401807* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401807*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401807::MergeFrom(const Proto81401807& from) {
  GOOGLE_CHECK_NE(&from, this);
  normal_list_.MergeFrom(from.normal_list_);
  vip_list_.MergeFrom(from.vip_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_is_draw()) {
      set_is_draw(from.is_draw());
    }
    if (from.has_vip_level()) {
      set_vip_level(from.vip_level());
    }
    if (from.has_show_icon()) {
      set_show_icon(from.show_icon());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401807::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401807::CopyFrom(const Proto81401807& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401807::IsInitialized() const {
  
  return true;
}

void Proto81401807::Swap(Proto81401807* other) {
  if (other != this) {
    std::swap(left_time_, other->left_time_);
    std::swap(index_, other->index_);
    normal_list_.Swap(&other->normal_list_);
    vip_list_.Swap(&other->vip_list_);
    std::swap(is_draw_, other->is_draw_);
    std::swap(vip_level_, other->vip_level_);
    std::swap(show_icon_, other->show_icon_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401807::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401807_descriptor_;
  metadata.reflection = Proto81401807_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401811::kIndexFieldNumber;
const int Proto11401811::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto11401811::Proto11401811()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401811::InitAsDefaultInstance() {
}

Proto11401811::Proto11401811(const Proto11401811& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401811::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401811::~Proto11401811() {
  SharedDtor();
}

void Proto11401811::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401811::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401811::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401811_descriptor_;
}

const Proto11401811& Proto11401811::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto11401811* Proto11401811::default_instance_ = NULL;

Proto11401811* Proto11401811::New() const {
  return new Proto11401811;
}

void Proto11401811::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401811::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401811::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401811::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401811::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401811::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401811* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401811*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401811::MergeFrom(const Proto11401811& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401811::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401811::CopyFrom(const Proto11401811& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401811::IsInitialized() const {
  
  return true;
}

void Proto11401811::Swap(Proto11401811* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401811::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401811_descriptor_;
  metadata.reflection = Proto11401811_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401811::kIndexFieldNumber;
const int Proto51401811::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto51401811::Proto51401811()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401811::InitAsDefaultInstance() {
}

Proto51401811::Proto51401811(const Proto51401811& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401811::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401811::~Proto51401811() {
  SharedDtor();
}

void Proto51401811::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401811::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401811::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401811_descriptor_;
}

const Proto51401811& Proto51401811::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto51401811* Proto51401811::default_instance_ = NULL;

Proto51401811* Proto51401811::New() const {
  return new Proto51401811;
}

void Proto51401811::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401811::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }
      
      // optional int32 status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401811::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional int32 status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401811::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional int32 status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401811::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401811::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401811* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401811*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401811::MergeFrom(const Proto51401811& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401811::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401811::CopyFrom(const Proto51401811& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401811::IsInitialized() const {
  
  return true;
}

void Proto51401811::Swap(Proto51401811* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401811::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401811_descriptor_;
  metadata.reflection = Proto51401811_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400112::kRankListFieldNumber;
const int Proto81400112::kScriptIdFieldNumber;
#endif  // !_MSC_VER

Proto81400112::Proto81400112()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400112::InitAsDefaultInstance() {
}

Proto81400112::Proto81400112(const Proto81400112& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400112::SharedCtor() {
  _cached_size_ = 0;
  script_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400112::~Proto81400112() {
  SharedDtor();
}

void Proto81400112::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400112::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400112::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400112_descriptor_;
}

const Proto81400112& Proto81400112::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto81400112* Proto81400112::default_instance_ = NULL;

Proto81400112* Proto81400112::New() const {
  return new Proto81400112;
}

void Proto81400112::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    script_id_ = 0;
  }
  rank_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400112::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoLScoreInfo rank_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rank_list;
        if (input->ExpectTag(16)) goto parse_script_id;
        break;
      }
      
      // optional int32 script_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_id_)));
          set_has_script_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400112::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoLScoreInfo rank_list = 1;
  for (int i = 0; i < this->rank_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rank_list(i), output);
  }
  
  // optional int32 script_id = 2;
  if (has_script_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->script_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400112::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoLScoreInfo rank_list = 1;
  for (int i = 0; i < this->rank_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rank_list(i), target);
  }
  
  // optional int32 script_id = 2;
  if (has_script_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->script_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400112::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 script_id = 2;
    if (has_script_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_id());
    }
    
  }
  // repeated .ProtoLScoreInfo rank_list = 1;
  total_size += 1 * this->rank_list_size();
  for (int i = 0; i < this->rank_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400112::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400112* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400112*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400112::MergeFrom(const Proto81400112& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_list_.MergeFrom(from.rank_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_script_id()) {
      set_script_id(from.script_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400112::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400112::CopyFrom(const Proto81400112& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400112::IsInitialized() const {
  
  return true;
}

void Proto81400112::Swap(Proto81400112* other) {
  if (other != this) {
    rank_list_.Swap(&other->rank_list_);
    std::swap(script_id_, other->script_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400112::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400112_descriptor_;
  metadata.reflection = Proto81400112_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80401032::kNotifyIdFieldNumber;
#endif  // !_MSC_VER

Proto80401032::Proto80401032()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80401032::InitAsDefaultInstance() {
}

Proto80401032::Proto80401032(const Proto80401032& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80401032::SharedCtor() {
  _cached_size_ = 0;
  notify_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80401032::~Proto80401032() {
  SharedDtor();
}

void Proto80401032::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80401032::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80401032::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80401032_descriptor_;
}

const Proto80401032& Proto80401032::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto80401032* Proto80401032::default_instance_ = NULL;

Proto80401032* Proto80401032::New() const {
  return new Proto80401032;
}

void Proto80401032::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    notify_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80401032::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 notify_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &notify_id_)));
          set_has_notify_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80401032::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 notify_id = 1;
  if (has_notify_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->notify_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80401032::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 notify_id = 1;
  if (has_notify_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->notify_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80401032::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 notify_id = 1;
    if (has_notify_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->notify_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80401032::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80401032* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80401032*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80401032::MergeFrom(const Proto80401032& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_notify_id()) {
      set_notify_id(from.notify_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80401032::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80401032::CopyFrom(const Proto80401032& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80401032::IsInitialized() const {
  
  return true;
}

void Proto80401032::Swap(Proto80401032* other) {
  if (other != this) {
    std::swap(notify_id_, other->notify_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80401032::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80401032_descriptor_;
  metadata.reflection = Proto80401032_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400122::kMattackLabelFieldNumber;
#endif  // !_MSC_VER

Proto50400122::Proto50400122()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400122::InitAsDefaultInstance() {
}

Proto50400122::Proto50400122(const Proto50400122& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400122::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400122::~Proto50400122() {
  SharedDtor();
}

void Proto50400122::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400122::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400122::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400122_descriptor_;
}

const Proto50400122& Proto50400122::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto50400122* Proto50400122::default_instance_ = NULL;

Proto50400122* Proto50400122::New() const {
  return new Proto50400122;
}

void Proto50400122::Clear() {
  mattack_label_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400122::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoMAttackLabel mattack_label = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mattack_label:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mattack_label()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_mattack_label;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400122::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoMAttackLabel mattack_label = 1;
  for (int i = 0; i < this->mattack_label_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->mattack_label(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400122::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoMAttackLabel mattack_label = 1;
  for (int i = 0; i < this->mattack_label_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->mattack_label(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400122::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoMAttackLabel mattack_label = 1;
  total_size += 1 * this->mattack_label_size();
  for (int i = 0; i < this->mattack_label_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mattack_label(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400122::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400122* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400122*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400122::MergeFrom(const Proto50400122& from) {
  GOOGLE_CHECK_NE(&from, this);
  mattack_label_.MergeFrom(from.mattack_label_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400122::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400122::CopyFrom(const Proto50400122& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400122::IsInitialized() const {
  
  return true;
}

void Proto50400122::Swap(Proto50400122* other) {
  if (other != this) {
    mattack_label_.Swap(&other->mattack_label_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400122::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400122_descriptor_;
  metadata.reflection = Proto50400122_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400827::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto10400827::Proto10400827()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400827::InitAsDefaultInstance() {
}

Proto10400827::Proto10400827(const Proto10400827& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400827::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400827::~Proto10400827() {
  SharedDtor();
}

void Proto10400827::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400827::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400827::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400827_descriptor_;
}

const Proto10400827& Proto10400827::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto10400827* Proto10400827::default_instance_ = NULL;

Proto10400827* Proto10400827::New() const {
  return new Proto10400827;
}

void Proto10400827::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400827::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400827::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400827::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400827::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400827::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400827* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400827*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400827::MergeFrom(const Proto10400827& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400827::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400827::CopyFrom(const Proto10400827& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400827::IsInitialized() const {
  
  return true;
}

void Proto10400827::Swap(Proto10400827* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400827::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400827_descriptor_;
  metadata.reflection = Proto10400827_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400827::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto50400827::Proto50400827()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400827::InitAsDefaultInstance() {
}

Proto50400827::Proto50400827(const Proto50400827& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400827::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400827::~Proto50400827() {
  SharedDtor();
}

void Proto50400827::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400827::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400827::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400827_descriptor_;
}

const Proto50400827& Proto50400827::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto50400827* Proto50400827::default_instance_ = NULL;

Proto50400827* Proto50400827::New() const {
  return new Proto50400827;
}

void Proto50400827::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400827::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400827::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400827::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400827::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400827::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400827* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400827*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400827::MergeFrom(const Proto50400827& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400827::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400827::CopyFrom(const Proto50400827& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400827::IsInitialized() const {
  
  return true;
}

void Proto50400827::Swap(Proto50400827* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400827::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400827_descriptor_;
  metadata.reflection = Proto50400827_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100504::kFlagFieldNumber;
const int Proto80100504::kFirstFieldNumber;
const int Proto80100504::kSecondFieldNumber;
const int Proto80100504::kLeftTimeFieldNumber;
#endif  // !_MSC_VER

Proto80100504::Proto80100504()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100504::InitAsDefaultInstance() {
  first_ = const_cast< ::ProtoLMRole*>(&::ProtoLMRole::default_instance());
  second_ = const_cast< ::ProtoLMRole*>(&::ProtoLMRole::default_instance());
}

Proto80100504::Proto80100504(const Proto80100504& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100504::SharedCtor() {
  _cached_size_ = 0;
  flag_ = 0;
  first_ = NULL;
  second_ = NULL;
  left_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100504::~Proto80100504() {
  SharedDtor();
}

void Proto80100504::SharedDtor() {
  if (this != default_instance_) {
    delete first_;
    delete second_;
  }
}

void Proto80100504::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100504::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100504_descriptor_;
}

const Proto80100504& Proto80100504::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto80100504* Proto80100504::default_instance_ = NULL;

Proto80100504* Proto80100504::New() const {
  return new Proto80100504;
}

void Proto80100504::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    flag_ = 0;
    if (has_first()) {
      if (first_ != NULL) first_->::ProtoLMRole::Clear();
    }
    if (has_second()) {
      if (second_ != NULL) second_->::ProtoLMRole::Clear();
    }
    left_time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100504::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_first;
        break;
      }
      
      // optional .ProtoLMRole first = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_first:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_first()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_second;
        break;
      }
      
      // optional .ProtoLMRole second = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_second:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_second()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100504::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 flag = 1;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag(), output);
  }
  
  // optional .ProtoLMRole first = 2;
  if (has_first()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->first(), output);
  }
  
  // optional .ProtoLMRole second = 3;
  if (has_second()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->second(), output);
  }
  
  // optional int32 left_time = 4;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->left_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100504::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 flag = 1;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag(), target);
  }
  
  // optional .ProtoLMRole first = 2;
  if (has_first()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->first(), target);
  }
  
  // optional .ProtoLMRole second = 3;
  if (has_second()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->second(), target);
  }
  
  // optional int32 left_time = 4;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->left_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100504::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 flag = 1;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }
    
    // optional .ProtoLMRole first = 2;
    if (has_first()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->first());
    }
    
    // optional .ProtoLMRole second = 3;
    if (has_second()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->second());
    }
    
    // optional int32 left_time = 4;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100504::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100504* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100504*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100504::MergeFrom(const Proto80100504& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flag()) {
      set_flag(from.flag());
    }
    if (from.has_first()) {
      mutable_first()->::ProtoLMRole::MergeFrom(from.first());
    }
    if (from.has_second()) {
      mutable_second()->::ProtoLMRole::MergeFrom(from.second());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100504::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100504::CopyFrom(const Proto80100504& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100504::IsInitialized() const {
  
  return true;
}

void Proto80100504::Swap(Proto80100504* other) {
  if (other != this) {
    std::swap(flag_, other->flag_);
    std::swap(first_, other->first_);
    std::swap(second_, other->second_);
    std::swap(left_time_, other->left_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100504::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100504_descriptor_;
  metadata.reflection = Proto80100504_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100505::kFlagFieldNumber;
const int Proto80100505::kNameFieldNumber;
const int Proto80100505::kStageFieldNumber;
const int Proto80100505::kScoreFieldNumber;
const int Proto80100505::kRewardIdFieldNumber;
#endif  // !_MSC_VER

Proto80100505::Proto80100505()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100505::InitAsDefaultInstance() {
}

Proto80100505::Proto80100505(const Proto80100505& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100505::SharedCtor() {
  _cached_size_ = 0;
  flag_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stage_ = 0;
  score_ = 0;
  reward_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100505::~Proto80100505() {
  SharedDtor();
}

void Proto80100505::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80100505::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100505::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100505_descriptor_;
}

const Proto80100505& Proto80100505::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto80100505* Proto80100505::default_instance_ = NULL;

Proto80100505* Proto80100505::New() const {
  return new Proto80100505;
}

void Proto80100505::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    flag_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    stage_ = 0;
    score_ = 0;
    reward_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100505::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_stage;
        break;
      }
      
      // optional int32 stage = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_)));
          set_has_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_score;
        break;
      }
      
      // optional int32 score = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_reward_id;
        break;
      }
      
      // optional int32 reward_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_id_)));
          set_has_reward_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100505::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 flag = 1;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag(), output);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  // optional int32 stage = 3;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->stage(), output);
  }
  
  // optional int32 score = 4;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->score(), output);
  }
  
  // optional int32 reward_id = 5;
  if (has_reward_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->reward_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100505::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 flag = 1;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag(), target);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  // optional int32 stage = 3;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->stage(), target);
  }
  
  // optional int32 score = 4;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->score(), target);
  }
  
  // optional int32 reward_id = 5;
  if (has_reward_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->reward_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100505::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 flag = 1;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }
    
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // optional int32 stage = 3;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stage());
    }
    
    // optional int32 score = 4;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }
    
    // optional int32 reward_id = 5;
    if (has_reward_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100505::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100505* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100505*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100505::MergeFrom(const Proto80100505& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flag()) {
      set_flag(from.flag());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_stage()) {
      set_stage(from.stage());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_reward_id()) {
      set_reward_id(from.reward_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100505::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100505::CopyFrom(const Proto80100505& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100505::IsInitialized() const {
  
  return true;
}

void Proto80100505::Swap(Proto80100505* other) {
  if (other != this) {
    std::swap(flag_, other->flag_);
    std::swap(name_, other->name_);
    std::swap(stage_, other->stage_);
    std::swap(score_, other->score_);
    std::swap(reward_id_, other->reward_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100505::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100505_descriptor_;
  metadata.reflection = Proto80100505_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80401033::kBossIdFieldNumber;
const int Proto80401033::kBuffIdFieldNumber;
#endif  // !_MSC_VER

Proto80401033::Proto80401033()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80401033::InitAsDefaultInstance() {
}

Proto80401033::Proto80401033(const Proto80401033& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80401033::SharedCtor() {
  _cached_size_ = 0;
  boss_id_ = GOOGLE_LONGLONG(0);
  buff_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80401033::~Proto80401033() {
  SharedDtor();
}

void Proto80401033::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80401033::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80401033::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80401033_descriptor_;
}

const Proto80401033& Proto80401033::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto80401033* Proto80401033::default_instance_ = NULL;

Proto80401033* Proto80401033::New() const {
  return new Proto80401033;
}

void Proto80401033::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    boss_id_ = GOOGLE_LONGLONG(0);
    buff_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80401033::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 boss_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &boss_id_)));
          set_has_boss_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_buff_id;
        break;
      }
      
      // optional int32 buff_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buff_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buff_id_)));
          set_has_buff_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80401033::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 boss_id = 1;
  if (has_boss_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->boss_id(), output);
  }
  
  // optional int32 buff_id = 2;
  if (has_buff_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->buff_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80401033::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 boss_id = 1;
  if (has_boss_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->boss_id(), target);
  }
  
  // optional int32 buff_id = 2;
  if (has_buff_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->buff_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80401033::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 boss_id = 1;
    if (has_boss_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->boss_id());
    }
    
    // optional int32 buff_id = 2;
    if (has_buff_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buff_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80401033::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80401033* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80401033*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80401033::MergeFrom(const Proto80401033& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_boss_id()) {
      set_boss_id(from.boss_id());
    }
    if (from.has_buff_id()) {
      set_buff_id(from.buff_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80401033::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80401033::CopyFrom(const Proto80401033& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80401033::IsInitialized() const {
  
  return true;
}

void Proto80401033::Swap(Proto80401033* other) {
  if (other != this) {
    std::swap(boss_id_, other->boss_id_);
    std::swap(buff_id_, other->buff_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80401033::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80401033_descriptor_;
  metadata.reflection = Proto80401033_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100321::kTeamInfoFieldNumber;
#endif  // !_MSC_VER

Proto50100321::Proto50100321()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100321::InitAsDefaultInstance() {
}

Proto50100321::Proto50100321(const Proto50100321& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100321::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100321::~Proto50100321() {
  SharedDtor();
}

void Proto50100321::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100321::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100321::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100321_descriptor_;
}

const Proto50100321& Proto50100321::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto50100321* Proto50100321::default_instance_ = NULL;

Proto50100321* Proto50100321::New() const {
  return new Proto50100321;
}

void Proto50100321::Clear() {
  team_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100321::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoTeamer team_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_team_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_team_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_team_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100321::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoTeamer team_info = 1;
  for (int i = 0; i < this->team_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->team_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100321::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoTeamer team_info = 1;
  for (int i = 0; i < this->team_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->team_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100321::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoTeamer team_info = 1;
  total_size += 1 * this->team_info_size();
  for (int i = 0; i < this->team_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->team_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100321::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100321* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100321*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100321::MergeFrom(const Proto50100321& from) {
  GOOGLE_CHECK_NE(&from, this);
  team_info_.MergeFrom(from.team_info_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100321::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100321::CopyFrom(const Proto50100321& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100321::IsInitialized() const {
  
  return true;
}

void Proto50100321::Swap(Proto50100321* other) {
  if (other != this) {
    team_info_.Swap(&other->team_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100321::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100321_descriptor_;
  metadata.reflection = Proto50100321_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100322::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto10100322::Proto10100322()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100322::InitAsDefaultInstance() {
}

Proto10100322::Proto10100322(const Proto10100322& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100322::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100322::~Proto10100322() {
  SharedDtor();
}

void Proto10100322::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100322::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100322::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100322_descriptor_;
}

const Proto10100322& Proto10100322::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto10100322* Proto10100322::default_instance_ = NULL;

Proto10100322* Proto10100322::New() const {
  return new Proto10100322;
}

void Proto10100322::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100322::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100322::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100322::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100322::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100322::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100322* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100322*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100322::MergeFrom(const Proto10100322& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100322::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100322::CopyFrom(const Proto10100322& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100322::IsInitialized() const {
  
  return true;
}

void Proto10100322::Swap(Proto10100322* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100322::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100322_descriptor_;
  metadata.reflection = Proto10100322_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100322::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto50100322::Proto50100322()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100322::InitAsDefaultInstance() {
}

Proto50100322::Proto50100322(const Proto50100322& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100322::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100322::~Proto50100322() {
  SharedDtor();
}

void Proto50100322::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100322::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100322::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100322_descriptor_;
}

const Proto50100322& Proto50100322::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto50100322* Proto50100322::default_instance_ = NULL;

Proto50100322* Proto50100322::New() const {
  return new Proto50100322;
}

void Proto50100322::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100322::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100322::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100322::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100322::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100322::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100322* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100322*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100322::MergeFrom(const Proto50100322& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100322::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100322::CopyFrom(const Proto50100322& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100322::IsInitialized() const {
  
  return true;
}

void Proto50100322::Swap(Proto50100322* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100322::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100322_descriptor_;
  metadata.reflection = Proto50100322_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100323::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto10100323::Proto10100323()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100323::InitAsDefaultInstance() {
}

Proto10100323::Proto10100323(const Proto10100323& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100323::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100323::~Proto10100323() {
  SharedDtor();
}

void Proto10100323::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100323::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100323::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100323_descriptor_;
}

const Proto10100323& Proto10100323::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto10100323* Proto10100323::default_instance_ = NULL;

Proto10100323* Proto10100323::New() const {
  return new Proto10100323;
}

void Proto10100323::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100323::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100323::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100323::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100323::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100323::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100323* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100323*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100323::MergeFrom(const Proto10100323& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100323::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100323::CopyFrom(const Proto10100323& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100323::IsInitialized() const {
  
  return true;
}

void Proto10100323::Swap(Proto10100323* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100323::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100323_descriptor_;
  metadata.reflection = Proto10100323_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100323::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto50100323::Proto50100323()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100323::InitAsDefaultInstance() {
}

Proto50100323::Proto50100323(const Proto50100323& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100323::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100323::~Proto50100323() {
  SharedDtor();
}

void Proto50100323::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100323::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100323::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100323_descriptor_;
}

const Proto50100323& Proto50100323::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto50100323* Proto50100323::default_instance_ = NULL;

Proto50100323* Proto50100323::New() const {
  return new Proto50100323;
}

void Proto50100323::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100323::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100323::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100323::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100323::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100323::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100323* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100323*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100323::MergeFrom(const Proto50100323& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100323::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100323::CopyFrom(const Proto50100323& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100323::IsInitialized() const {
  
  return true;
}

void Proto50100323::Swap(Proto50100323* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100323::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100323_descriptor_;
  metadata.reflection = Proto50100323_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400135::kExchangeIdFieldNumber;
const int Proto11400135::kAmountFieldNumber;
#endif  // !_MSC_VER

Proto11400135::Proto11400135()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400135::InitAsDefaultInstance() {
}

Proto11400135::Proto11400135(const Proto11400135& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400135::SharedCtor() {
  _cached_size_ = 0;
  exchange_id_ = 0;
  amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400135::~Proto11400135() {
  SharedDtor();
}

void Proto11400135::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400135::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400135::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400135_descriptor_;
}

const Proto11400135& Proto11400135::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto11400135* Proto11400135::default_instance_ = NULL;

Proto11400135* Proto11400135::New() const {
  return new Proto11400135;
}

void Proto11400135::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    exchange_id_ = 0;
    amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400135::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 exchange_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchange_id_)));
          set_has_exchange_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400135::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 exchange_id = 1;
  if (has_exchange_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->exchange_id(), output);
  }
  
  // optional int32 amount = 2;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400135::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 exchange_id = 1;
  if (has_exchange_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->exchange_id(), target);
  }
  
  // optional int32 amount = 2;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400135::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 exchange_id = 1;
    if (has_exchange_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exchange_id());
    }
    
    // optional int32 amount = 2;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400135::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400135* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400135*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400135::MergeFrom(const Proto11400135& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_exchange_id()) {
      set_exchange_id(from.exchange_id());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400135::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400135::CopyFrom(const Proto11400135& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400135::IsInitialized() const {
  
  return true;
}

void Proto11400135::Swap(Proto11400135* other) {
  if (other != this) {
    std::swap(exchange_id_, other->exchange_id_);
    std::swap(amount_, other->amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400135::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400135_descriptor_;
  metadata.reflection = Proto11400135_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400135::kExchangeIdFieldNumber;
#endif  // !_MSC_VER

Proto51400135::Proto51400135()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400135::InitAsDefaultInstance() {
}

Proto51400135::Proto51400135(const Proto51400135& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400135::SharedCtor() {
  _cached_size_ = 0;
  exchange_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400135::~Proto51400135() {
  SharedDtor();
}

void Proto51400135::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400135::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400135::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400135_descriptor_;
}

const Proto51400135& Proto51400135::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto51400135* Proto51400135::default_instance_ = NULL;

Proto51400135* Proto51400135::New() const {
  return new Proto51400135;
}

void Proto51400135::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    exchange_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400135::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 exchange_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchange_id_)));
          set_has_exchange_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400135::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 exchange_id = 1;
  if (has_exchange_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->exchange_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400135::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 exchange_id = 1;
  if (has_exchange_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->exchange_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400135::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 exchange_id = 1;
    if (has_exchange_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exchange_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400135::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400135* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400135*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400135::MergeFrom(const Proto51400135& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_exchange_id()) {
      set_exchange_id(from.exchange_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400135::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400135::CopyFrom(const Proto51400135& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400135::IsInitialized() const {
  
  return true;
}

void Proto51400135::Swap(Proto51400135* other) {
  if (other != this) {
    std::swap(exchange_id_, other->exchange_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400135::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400135_descriptor_;
  metadata.reflection = Proto51400135_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100324::kNearListFieldNumber;
const int Proto50100324::kLeagueListFieldNumber;
const int Proto50100324::kFriendListFieldNumber;
const int Proto50100324::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto50100324::Proto50100324()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100324::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto50100324::Proto50100324(const Proto50100324& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100324::SharedCtor() {
  _cached_size_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100324::~Proto50100324() {
  SharedDtor();
}

void Proto50100324::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto50100324::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100324::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100324_descriptor_;
}

const Proto50100324& Proto50100324::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto50100324* Proto50100324::default_instance_ = NULL;

Proto50100324* Proto50100324::New() const {
  return new Proto50100324;
}

void Proto50100324::Clear() {
  if (_has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  near_list_.Clear();
  league_list_.Clear();
  friend_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100324::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoTeamer near_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_near_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_near_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_near_list;
        if (input->ExpectTag(18)) goto parse_league_list;
        break;
      }
      
      // repeated .ProtoTeamer league_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_league_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_league_list;
        if (input->ExpectTag(26)) goto parse_friend_list;
        break;
      }
      
      // repeated .ProtoTeamer friend_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_friend_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friend_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_friend_list;
        if (input->ExpectTag(34)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100324::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoTeamer near_list = 1;
  for (int i = 0; i < this->near_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->near_list(i), output);
  }
  
  // repeated .ProtoTeamer league_list = 2;
  for (int i = 0; i < this->league_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->league_list(i), output);
  }
  
  // repeated .ProtoTeamer friend_list = 3;
  for (int i = 0; i < this->friend_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->friend_list(i), output);
  }
  
  // optional .ProtoThreeObj other_info = 4;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100324::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoTeamer near_list = 1;
  for (int i = 0; i < this->near_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->near_list(i), target);
  }
  
  // repeated .ProtoTeamer league_list = 2;
  for (int i = 0; i < this->league_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->league_list(i), target);
  }
  
  // repeated .ProtoTeamer friend_list = 3;
  for (int i = 0; i < this->friend_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->friend_list(i), target);
  }
  
  // optional .ProtoThreeObj other_info = 4;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100324::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    // optional .ProtoThreeObj other_info = 4;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  // repeated .ProtoTeamer near_list = 1;
  total_size += 1 * this->near_list_size();
  for (int i = 0; i < this->near_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->near_list(i));
  }
  
  // repeated .ProtoTeamer league_list = 2;
  total_size += 1 * this->league_list_size();
  for (int i = 0; i < this->league_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->league_list(i));
  }
  
  // repeated .ProtoTeamer friend_list = 3;
  total_size += 1 * this->friend_list_size();
  for (int i = 0; i < this->friend_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->friend_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100324::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100324* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100324*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100324::MergeFrom(const Proto50100324& from) {
  GOOGLE_CHECK_NE(&from, this);
  near_list_.MergeFrom(from.near_list_);
  league_list_.MergeFrom(from.league_list_);
  friend_list_.MergeFrom(from.friend_list_);
  if (from._has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100324::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100324::CopyFrom(const Proto50100324& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100324::IsInitialized() const {
  
  return true;
}

void Proto50100324::Swap(Proto50100324* other) {
  if (other != this) {
    near_list_.Swap(&other->near_list_);
    league_list_.Swap(&other->league_list_);
    friend_list_.Swap(&other->friend_list_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100324::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100324_descriptor_;
  metadata.reflection = Proto50100324_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81405011::kFreeTimesFieldNumber;
const int Proto81405011::kResetTimesFieldNumber;
const int Proto81405011::kGameIndexFieldNumber;
const int Proto81405011::kGameLengthFieldNumber;
const int Proto81405011::kResetTickFieldNumber;
const int Proto81405011::kOtherInfoFieldNumber;
const int Proto81405011::kItemListFieldNumber;
#endif  // !_MSC_VER

Proto81405011::Proto81405011()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81405011::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto81405011::Proto81405011(const Proto81405011& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81405011::SharedCtor() {
  _cached_size_ = 0;
  free_times_ = 0;
  reset_times_ = 0;
  game_index_ = 0;
  game_length_ = 0;
  reset_tick_ = GOOGLE_LONGLONG(0);
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81405011::~Proto81405011() {
  SharedDtor();
}

void Proto81405011::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto81405011::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81405011::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81405011_descriptor_;
}

const Proto81405011& Proto81405011::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto81405011* Proto81405011::default_instance_ = NULL;

Proto81405011* Proto81405011::New() const {
  return new Proto81405011;
}

void Proto81405011::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    free_times_ = 0;
    reset_times_ = 0;
    game_index_ = 0;
    game_length_ = 0;
    reset_tick_ = GOOGLE_LONGLONG(0);
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81405011::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 free_times = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &free_times_)));
          set_has_free_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_reset_times;
        break;
      }
      
      // optional int32 reset_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reset_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reset_times_)));
          set_has_reset_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_game_index;
        break;
      }
      
      // optional int32 game_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_game_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_index_)));
          set_has_game_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_game_length;
        break;
      }
      
      // optional int32 game_length = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_game_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_length_)));
          set_has_game_length();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_reset_tick;
        break;
      }
      
      // optional int64 reset_tick = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reset_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reset_tick_)));
          set_has_reset_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoItem item_list = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81405011::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 free_times = 1;
  if (has_free_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->free_times(), output);
  }
  
  // optional int32 reset_times = 2;
  if (has_reset_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reset_times(), output);
  }
  
  // optional int32 game_index = 3;
  if (has_game_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->game_index(), output);
  }
  
  // optional int32 game_length = 4;
  if (has_game_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->game_length(), output);
  }
  
  // optional int64 reset_tick = 5;
  if (has_reset_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->reset_tick(), output);
  }
  
  // optional .ProtoThreeObj other_info = 6;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->other_info(), output);
  }
  
  // repeated .ProtoItem item_list = 7;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->item_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81405011::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 free_times = 1;
  if (has_free_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->free_times(), target);
  }
  
  // optional int32 reset_times = 2;
  if (has_reset_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reset_times(), target);
  }
  
  // optional int32 game_index = 3;
  if (has_game_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->game_index(), target);
  }
  
  // optional int32 game_length = 4;
  if (has_game_length()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->game_length(), target);
  }
  
  // optional int64 reset_tick = 5;
  if (has_reset_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->reset_tick(), target);
  }
  
  // optional .ProtoThreeObj other_info = 6;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->other_info(), target);
  }
  
  // repeated .ProtoItem item_list = 7;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->item_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81405011::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 free_times = 1;
    if (has_free_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->free_times());
    }
    
    // optional int32 reset_times = 2;
    if (has_reset_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reset_times());
    }
    
    // optional int32 game_index = 3;
    if (has_game_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->game_index());
    }
    
    // optional int32 game_length = 4;
    if (has_game_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->game_length());
    }
    
    // optional int64 reset_tick = 5;
    if (has_reset_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->reset_tick());
    }
    
    // optional .ProtoThreeObj other_info = 6;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  // repeated .ProtoItem item_list = 7;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81405011::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81405011* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81405011*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81405011::MergeFrom(const Proto81405011& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_free_times()) {
      set_free_times(from.free_times());
    }
    if (from.has_reset_times()) {
      set_reset_times(from.reset_times());
    }
    if (from.has_game_index()) {
      set_game_index(from.game_index());
    }
    if (from.has_game_length()) {
      set_game_length(from.game_length());
    }
    if (from.has_reset_tick()) {
      set_reset_tick(from.reset_tick());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81405011::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81405011::CopyFrom(const Proto81405011& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81405011::IsInitialized() const {
  
  return true;
}

void Proto81405011::Swap(Proto81405011* other) {
  if (other != this) {
    std::swap(free_times_, other->free_times_);
    std::swap(reset_times_, other->reset_times_);
    std::swap(game_index_, other->game_index_);
    std::swap(game_length_, other->game_length_);
    std::swap(reset_tick_, other->reset_tick_);
    std::swap(other_info_, other->other_info_);
    item_list_.Swap(&other->item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81405011::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81405011_descriptor_;
  metadata.reflection = Proto81405011_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11405012::kTypeFieldNumber;
const int Proto11405012::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto11405012::Proto11405012()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11405012::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto11405012::Proto11405012(const Proto11405012& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11405012::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11405012::~Proto11405012() {
  SharedDtor();
}

void Proto11405012::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto11405012::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11405012::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11405012_descriptor_;
}

const Proto11405012& Proto11405012::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto11405012* Proto11405012::default_instance_ = NULL;

Proto11405012* Proto11405012::New() const {
  return new Proto11405012;
}

void Proto11405012::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11405012::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11405012::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11405012::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11405012::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11405012::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11405012* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11405012*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11405012::MergeFrom(const Proto11405012& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11405012::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11405012::CopyFrom(const Proto11405012& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11405012::IsInitialized() const {
  
  return true;
}

void Proto11405012::Swap(Proto11405012* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11405012::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11405012_descriptor_;
  metadata.reflection = Proto11405012_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51405012::kDiceNumFieldNumber;
#endif  // !_MSC_VER

Proto51405012::Proto51405012()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51405012::InitAsDefaultInstance() {
}

Proto51405012::Proto51405012(const Proto51405012& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51405012::SharedCtor() {
  _cached_size_ = 0;
  dice_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51405012::~Proto51405012() {
  SharedDtor();
}

void Proto51405012::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51405012::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51405012::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51405012_descriptor_;
}

const Proto51405012& Proto51405012::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto51405012* Proto51405012::default_instance_ = NULL;

Proto51405012* Proto51405012::New() const {
  return new Proto51405012;
}

void Proto51405012::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    dice_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51405012::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 dice_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dice_num_)));
          set_has_dice_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51405012::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 dice_num = 1;
  if (has_dice_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->dice_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51405012::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 dice_num = 1;
  if (has_dice_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->dice_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51405012::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 dice_num = 1;
    if (has_dice_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dice_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51405012::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51405012* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51405012*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51405012::MergeFrom(const Proto51405012& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dice_num()) {
      set_dice_num(from.dice_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51405012::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51405012::CopyFrom(const Proto51405012& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51405012::IsInitialized() const {
  
  return true;
}

void Proto51405012::Swap(Proto51405012* other) {
  if (other != this) {
    std::swap(dice_num_, other->dice_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51405012::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51405012_descriptor_;
  metadata.reflection = Proto51405012_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81405012::kGirdIndexFieldNumber;
const int Proto81405012::kIsGetFieldNumber;
const int Proto81405012::kIsDoubleFieldNumber;
const int Proto81405012::kItemListFieldNumber;
const int Proto81405012::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto81405012::Proto81405012()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81405012::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto81405012::Proto81405012(const Proto81405012& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81405012::SharedCtor() {
  _cached_size_ = 0;
  gird_index_ = 0;
  is_get_ = 0;
  is_double_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81405012::~Proto81405012() {
  SharedDtor();
}

void Proto81405012::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto81405012::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81405012::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81405012_descriptor_;
}

const Proto81405012& Proto81405012::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto81405012* Proto81405012::default_instance_ = NULL;

Proto81405012* Proto81405012::New() const {
  return new Proto81405012;
}

void Proto81405012::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gird_index_ = 0;
    is_get_ = 0;
    is_double_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81405012::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 gird_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gird_index_)));
          set_has_gird_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_get;
        break;
      }
      
      // optional int32 is_get = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_get:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_get_)));
          set_has_is_get();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_double;
        break;
      }
      
      // optional int32 is_double = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_double_)));
          set_has_is_double();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoItem item_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_item_list;
        if (input->ExpectTag(42)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81405012::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 gird_index = 1;
  if (has_gird_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gird_index(), output);
  }
  
  // optional int32 is_get = 2;
  if (has_is_get()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_get(), output);
  }
  
  // optional int32 is_double = 3;
  if (has_is_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_double(), output);
  }
  
  // repeated .ProtoItem item_list = 4;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->item_list(i), output);
  }
  
  // optional .ProtoThreeObj other_info = 5;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81405012::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 gird_index = 1;
  if (has_gird_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gird_index(), target);
  }
  
  // optional int32 is_get = 2;
  if (has_is_get()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_get(), target);
  }
  
  // optional int32 is_double = 3;
  if (has_is_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_double(), target);
  }
  
  // repeated .ProtoItem item_list = 4;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->item_list(i), target);
  }
  
  // optional .ProtoThreeObj other_info = 5;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81405012::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 gird_index = 1;
    if (has_gird_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gird_index());
    }
    
    // optional int32 is_get = 2;
    if (has_is_get()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_get());
    }
    
    // optional int32 is_double = 3;
    if (has_is_double()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_double());
    }
    
    // optional .ProtoThreeObj other_info = 5;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  // repeated .ProtoItem item_list = 4;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81405012::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81405012* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81405012*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81405012::MergeFrom(const Proto81405012& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gird_index()) {
      set_gird_index(from.gird_index());
    }
    if (from.has_is_get()) {
      set_is_get(from.is_get());
    }
    if (from.has_is_double()) {
      set_is_double(from.is_double());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81405012::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81405012::CopyFrom(const Proto81405012& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81405012::IsInitialized() const {
  
  return true;
}

void Proto81405012::Swap(Proto81405012* other) {
  if (other != this) {
    std::swap(gird_index_, other->gird_index_);
    std::swap(is_get_, other->is_get_);
    std::swap(is_double_, other->is_double_);
    item_list_.Swap(&other->item_list_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81405012::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81405012_descriptor_;
  metadata.reflection = Proto81405012_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81405013::kRewardIdFieldNumber;
const int Proto81405013::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto81405013::Proto81405013()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81405013::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto81405013::Proto81405013(const Proto81405013& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81405013::SharedCtor() {
  _cached_size_ = 0;
  reward_id_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81405013::~Proto81405013() {
  SharedDtor();
}

void Proto81405013::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto81405013::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81405013::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81405013_descriptor_;
}

const Proto81405013& Proto81405013::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto81405013* Proto81405013::default_instance_ = NULL;

Proto81405013* Proto81405013::New() const {
  return new Proto81405013;
}

void Proto81405013::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    reward_id_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81405013::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 reward_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_id_)));
          set_has_reward_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81405013::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 reward_id = 1;
  if (has_reward_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reward_id(), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81405013::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 reward_id = 1;
  if (has_reward_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reward_id(), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81405013::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 reward_id = 1;
    if (has_reward_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_id());
    }
    
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81405013::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81405013* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81405013*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81405013::MergeFrom(const Proto81405013& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward_id()) {
      set_reward_id(from.reward_id());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81405013::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81405013::CopyFrom(const Proto81405013& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81405013::IsInitialized() const {
  
  return true;
}

void Proto81405013::Swap(Proto81405013* other) {
  if (other != this) {
    std::swap(reward_id_, other->reward_id_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81405013::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81405013_descriptor_;
  metadata.reflection = Proto81405013_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100214::kIndexFieldNumber;
const int Proto10100214::kBuyIndexFieldNumber;
const int Proto10100214::kCashCouponUseFieldNumber;
const int Proto10100214::kAmountFieldNumber;
#endif  // !_MSC_VER

Proto10100214::Proto10100214()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100214::InitAsDefaultInstance() {
}

Proto10100214::Proto10100214(const Proto10100214& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100214::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  buy_index_ = 0;
  cash_coupon_use_ = 0;
  amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100214::~Proto10100214() {
  SharedDtor();
}

void Proto10100214::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100214::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100214::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100214_descriptor_;
}

const Proto10100214& Proto10100214::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto10100214* Proto10100214::default_instance_ = NULL;

Proto10100214* Proto10100214::New() const {
  return new Proto10100214;
}

void Proto10100214::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    buy_index_ = 0;
    cash_coupon_use_ = 0;
    amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100214::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_buy_index;
        break;
      }
      
      // optional int32 buy_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_index_)));
          set_has_buy_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cash_coupon_use;
        break;
      }
      
      // optional int32 cash_coupon_use = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cash_coupon_use:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cash_coupon_use_)));
          set_has_cash_coupon_use();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100214::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional int32 buy_index = 2;
  if (has_buy_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->buy_index(), output);
  }
  
  // optional int32 cash_coupon_use = 3;
  if (has_cash_coupon_use()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cash_coupon_use(), output);
  }
  
  // optional int32 amount = 4;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100214::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional int32 buy_index = 2;
  if (has_buy_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->buy_index(), target);
  }
  
  // optional int32 cash_coupon_use = 3;
  if (has_cash_coupon_use()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cash_coupon_use(), target);
  }
  
  // optional int32 amount = 4;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100214::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 buy_index = 2;
    if (has_buy_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_index());
    }
    
    // optional int32 cash_coupon_use = 3;
    if (has_cash_coupon_use()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cash_coupon_use());
    }
    
    // optional int32 amount = 4;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100214::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100214* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100214*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100214::MergeFrom(const Proto10100214& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_buy_index()) {
      set_buy_index(from.buy_index());
    }
    if (from.has_cash_coupon_use()) {
      set_cash_coupon_use(from.cash_coupon_use());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100214::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100214::CopyFrom(const Proto10100214& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100214::IsInitialized() const {
  
  return true;
}

void Proto10100214::Swap(Proto10100214* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(buy_index_, other->buy_index_);
    std::swap(cash_coupon_use_, other->cash_coupon_use_);
    std::swap(amount_, other->amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100214::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100214_descriptor_;
  metadata.reflection = Proto10100214_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100214::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto50100214::Proto50100214()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100214::InitAsDefaultInstance() {
}

Proto50100214::Proto50100214(const Proto50100214& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100214::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100214::~Proto50100214() {
  SharedDtor();
}

void Proto50100214::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100214::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100214::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100214_descriptor_;
}

const Proto50100214& Proto50100214::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto50100214* Proto50100214::default_instance_ = NULL;

Proto50100214* Proto50100214::New() const {
  return new Proto50100214;
}

void Proto50100214::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100214::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100214::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100214::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100214::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100214::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100214* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100214*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100214::MergeFrom(const Proto50100214& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100214::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100214::CopyFrom(const Proto50100214& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100214::IsInitialized() const {
  
  return true;
}

void Proto50100214::Swap(Proto50100214* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100214::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100214_descriptor_;
  metadata.reflection = Proto50100214_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401501::kDayFieldNumber;
const int Proto51401501::kGetStatusFieldNumber;
const int Proto51401501::kRefreshFieldNumber;
const int Proto51401501::kOpenFieldNumber;
const int Proto51401501::kBuyStatusFieldNumber;
#endif  // !_MSC_VER

Proto51401501::Proto51401501()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401501::InitAsDefaultInstance() {
}

Proto51401501::Proto51401501(const Proto51401501& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401501::SharedCtor() {
  _cached_size_ = 0;
  day_ = 0;
  get_status_ = 0;
  refresh_ = 0;
  open_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401501::~Proto51401501() {
  SharedDtor();
}

void Proto51401501::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401501::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401501::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401501_descriptor_;
}

const Proto51401501& Proto51401501::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto51401501* Proto51401501::default_instance_ = NULL;

Proto51401501* Proto51401501::New() const {
  return new Proto51401501;
}

void Proto51401501::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    day_ = 0;
    get_status_ = 0;
    refresh_ = 0;
    open_ = 0;
  }
  buy_status_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401501::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 day = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_)));
          set_has_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_get_status;
        break;
      }
      
      // optional int32 get_status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_get_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &get_status_)));
          set_has_get_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_refresh;
        break;
      }
      
      // optional int32 refresh = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refresh_)));
          set_has_refresh();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_open;
        break;
      }
      
      // optional int32 open = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_)));
          set_has_open();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_buy_status;
        break;
      }
      
      // repeated .ProtoPairObj buy_status = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buy_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buy_status()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_buy_status;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401501::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 day = 1;
  if (has_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->day(), output);
  }
  
  // optional int32 get_status = 2;
  if (has_get_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->get_status(), output);
  }
  
  // optional int32 refresh = 3;
  if (has_refresh()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->refresh(), output);
  }
  
  // optional int32 open = 4;
  if (has_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->open(), output);
  }
  
  // repeated .ProtoPairObj buy_status = 5;
  for (int i = 0; i < this->buy_status_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->buy_status(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401501::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 day = 1;
  if (has_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->day(), target);
  }
  
  // optional int32 get_status = 2;
  if (has_get_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->get_status(), target);
  }
  
  // optional int32 refresh = 3;
  if (has_refresh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->refresh(), target);
  }
  
  // optional int32 open = 4;
  if (has_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->open(), target);
  }
  
  // repeated .ProtoPairObj buy_status = 5;
  for (int i = 0; i < this->buy_status_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->buy_status(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401501::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 day = 1;
    if (has_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->day());
    }
    
    // optional int32 get_status = 2;
    if (has_get_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->get_status());
    }
    
    // optional int32 refresh = 3;
    if (has_refresh()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refresh());
    }
    
    // optional int32 open = 4;
    if (has_open()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open());
    }
    
  }
  // repeated .ProtoPairObj buy_status = 5;
  total_size += 1 * this->buy_status_size();
  for (int i = 0; i < this->buy_status_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buy_status(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401501::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401501* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401501*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401501::MergeFrom(const Proto51401501& from) {
  GOOGLE_CHECK_NE(&from, this);
  buy_status_.MergeFrom(from.buy_status_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_day()) {
      set_day(from.day());
    }
    if (from.has_get_status()) {
      set_get_status(from.get_status());
    }
    if (from.has_refresh()) {
      set_refresh(from.refresh());
    }
    if (from.has_open()) {
      set_open(from.open());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401501::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401501::CopyFrom(const Proto51401501& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401501::IsInitialized() const {
  
  return true;
}

void Proto51401501::Swap(Proto51401501* other) {
  if (other != this) {
    std::swap(day_, other->day_);
    std::swap(get_status_, other->get_status_);
    std::swap(refresh_, other->refresh_);
    std::swap(open_, other->open_);
    buy_status_.Swap(&other->buy_status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401501::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401501_descriptor_;
  metadata.reflection = Proto51401501_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401503::kMapIdFieldNumber;
#endif  // !_MSC_VER

Proto11401503::Proto11401503()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401503::InitAsDefaultInstance() {
}

Proto11401503::Proto11401503(const Proto11401503& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401503::SharedCtor() {
  _cached_size_ = 0;
  map_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401503::~Proto11401503() {
  SharedDtor();
}

void Proto11401503::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401503::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401503::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401503_descriptor_;
}

const Proto11401503& Proto11401503::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto11401503* Proto11401503::default_instance_ = NULL;

Proto11401503* Proto11401503::New() const {
  return new Proto11401503;
}

void Proto11401503::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    map_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401503::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 map_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_id_)));
          set_has_map_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401503::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 map_id = 1;
  if (has_map_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->map_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401503::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 map_id = 1;
  if (has_map_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->map_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401503::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 map_id = 1;
    if (has_map_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->map_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401503::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401503* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401503*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401503::MergeFrom(const Proto11401503& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_map_id()) {
      set_map_id(from.map_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401503::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401503::CopyFrom(const Proto11401503& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401503::IsInitialized() const {
  
  return true;
}

void Proto11401503::Swap(Proto11401503* other) {
  if (other != this) {
    std::swap(map_id_, other->map_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401503::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401503_descriptor_;
  metadata.reflection = Proto11401503_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401812::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto11401812::Proto11401812()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401812::InitAsDefaultInstance() {
}

Proto11401812::Proto11401812(const Proto11401812& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401812::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401812::~Proto11401812() {
  SharedDtor();
}

void Proto11401812::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401812::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401812::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401812_descriptor_;
}

const Proto11401812& Proto11401812::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto11401812* Proto11401812::default_instance_ = NULL;

Proto11401812* Proto11401812::New() const {
  return new Proto11401812;
}

void Proto11401812::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401812::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401812::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401812::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401812::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401812::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401812* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401812*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401812::MergeFrom(const Proto11401812& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401812::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401812::CopyFrom(const Proto11401812& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401812::IsInitialized() const {
  
  return true;
}

void Proto11401812::Swap(Proto11401812* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401812::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401812_descriptor_;
  metadata.reflection = Proto11401812_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401812::kLeftTimeFieldNumber;
const int Proto51401812::kFistRechargeFieldNumber;
const int Proto51401812::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto51401812::Proto51401812()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401812::InitAsDefaultInstance() {
}

Proto51401812::Proto51401812(const Proto51401812& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401812::SharedCtor() {
  _cached_size_ = 0;
  left_time_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401812::~Proto51401812() {
  SharedDtor();
}

void Proto51401812::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401812::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401812::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401812_descriptor_;
}

const Proto51401812& Proto51401812::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto51401812* Proto51401812::default_instance_ = NULL;

Proto51401812* Proto51401812::New() const {
  return new Proto51401812;
}

void Proto51401812::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_time_ = 0;
    type_ = 0;
  }
  fist_recharge_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401812::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_fist_recharge;
        break;
      }
      
      // repeated int32 fist_recharge = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fist_recharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_fist_recharge())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_fist_recharge())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_fist_recharge;
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }
      
      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401812::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_time = 1;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_time(), output);
  }
  
  // repeated int32 fist_recharge = 2;
  for (int i = 0; i < this->fist_recharge_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->fist_recharge(i), output);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401812::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_time = 1;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_time(), target);
  }
  
  // repeated int32 fist_recharge = 2;
  for (int i = 0; i < this->fist_recharge_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->fist_recharge(i), target);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401812::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_time = 1;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  // repeated int32 fist_recharge = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->fist_recharge_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->fist_recharge(i));
    }
    total_size += 1 * this->fist_recharge_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401812::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401812* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401812*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401812::MergeFrom(const Proto51401812& from) {
  GOOGLE_CHECK_NE(&from, this);
  fist_recharge_.MergeFrom(from.fist_recharge_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401812::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401812::CopyFrom(const Proto51401812& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401812::IsInitialized() const {
  
  return true;
}

void Proto51401812::Swap(Proto51401812* other) {
  if (other != this) {
    std::swap(left_time_, other->left_time_);
    fist_recharge_.Swap(&other->fist_recharge_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401812::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401812_descriptor_;
  metadata.reflection = Proto51401812_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401102::kAchieveDetailFieldNumber;
#endif  // !_MSC_VER

Proto81401102::Proto81401102()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401102::InitAsDefaultInstance() {
}

Proto81401102::Proto81401102(const Proto81401102& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401102::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401102::~Proto81401102() {
  SharedDtor();
}

void Proto81401102::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401102::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401102::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401102_descriptor_;
}

const Proto81401102& Proto81401102::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto81401102* Proto81401102::default_instance_ = NULL;

Proto81401102* Proto81401102::New() const {
  return new Proto81401102;
}

void Proto81401102::Clear() {
  achieve_detail_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401102::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoAchieveDetail achieve_detail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_achieve_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_achieve_detail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_achieve_detail;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401102::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoAchieveDetail achieve_detail = 1;
  for (int i = 0; i < this->achieve_detail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->achieve_detail(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401102::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoAchieveDetail achieve_detail = 1;
  for (int i = 0; i < this->achieve_detail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->achieve_detail(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401102::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoAchieveDetail achieve_detail = 1;
  total_size += 1 * this->achieve_detail_size();
  for (int i = 0; i < this->achieve_detail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->achieve_detail(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401102::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401102* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401102*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401102::MergeFrom(const Proto81401102& from) {
  GOOGLE_CHECK_NE(&from, this);
  achieve_detail_.MergeFrom(from.achieve_detail_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401102::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401102::CopyFrom(const Proto81401102& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401102::IsInitialized() const {
  
  return true;
}

void Proto81401102::Swap(Proto81401102* other) {
  if (other != this) {
    achieve_detail_.Swap(&other->achieve_detail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401102::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401102_descriptor_;
  metadata.reflection = Proto81401102_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80405020::kStatusFieldNumber;
const int Proto80405020::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto80405020::Proto80405020()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80405020::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto80405020::Proto80405020(const Proto80405020& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80405020::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80405020::~Proto80405020() {
  SharedDtor();
}

void Proto80405020::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto80405020::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80405020::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80405020_descriptor_;
}

const Proto80405020& Proto80405020::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto80405020* Proto80405020::default_instance_ = NULL;

Proto80405020* Proto80405020::New() const {
  return new Proto80405020;
}

void Proto80405020::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80405020::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80405020::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80405020::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80405020::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80405020::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80405020* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80405020*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80405020::MergeFrom(const Proto80405020& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80405020::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80405020::CopyFrom(const Proto80405020& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80405020::IsInitialized() const {
  
  return true;
}

void Proto80405020::Swap(Proto80405020* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80405020::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80405020_descriptor_;
  metadata.reflection = Proto80405020_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401417::kActivityIdFieldNumber;
const int Proto51401417::kRestoreTypeFieldNumber;
const int Proto51401417::kIsAllFieldNumber;
const int Proto51401417::kItemListFieldNumber;
const int Proto51401417::kRestoreInfoFieldNumber;
const int Proto51401417::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto51401417::Proto51401417()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401417::InitAsDefaultInstance() {
  restore_info_ = const_cast< ::ProtoExpRestore*>(&::ProtoExpRestore::default_instance());
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto51401417::Proto51401417(const Proto51401417& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401417::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  restore_type_ = 0;
  is_all_ = 0;
  restore_info_ = NULL;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401417::~Proto51401417() {
  SharedDtor();
}

void Proto51401417::SharedDtor() {
  if (this != default_instance_) {
    delete restore_info_;
    delete other_info_;
  }
}

void Proto51401417::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401417::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401417_descriptor_;
}

const Proto51401417& Proto51401417::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto51401417* Proto51401417::default_instance_ = NULL;

Proto51401417* Proto51401417::New() const {
  return new Proto51401417;
}

void Proto51401417::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    restore_type_ = 0;
    is_all_ = 0;
    if (has_restore_info()) {
      if (restore_info_ != NULL) restore_info_->::ProtoExpRestore::Clear();
    }
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401417::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_restore_type;
        break;
      }
      
      // optional int32 restore_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_restore_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &restore_type_)));
          set_has_restore_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_all;
        break;
      }
      
      // optional int32 is_all = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_all:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_all_)));
          set_has_is_all();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoItem item_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_item_list;
        if (input->ExpectTag(42)) goto parse_restore_info;
        break;
      }
      
      // optional .ProtoExpRestore restore_info = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_restore_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_restore_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401417::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 restore_type = 2;
  if (has_restore_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->restore_type(), output);
  }
  
  // optional int32 is_all = 3;
  if (has_is_all()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_all(), output);
  }
  
  // repeated .ProtoItem item_list = 4;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->item_list(i), output);
  }
  
  // optional .ProtoExpRestore restore_info = 5;
  if (has_restore_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->restore_info(), output);
  }
  
  // optional .ProtoThreeObj other_info = 6;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401417::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 restore_type = 2;
  if (has_restore_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->restore_type(), target);
  }
  
  // optional int32 is_all = 3;
  if (has_is_all()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_all(), target);
  }
  
  // repeated .ProtoItem item_list = 4;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->item_list(i), target);
  }
  
  // optional .ProtoExpRestore restore_info = 5;
  if (has_restore_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->restore_info(), target);
  }
  
  // optional .ProtoThreeObj other_info = 6;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401417::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 restore_type = 2;
    if (has_restore_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->restore_type());
    }
    
    // optional int32 is_all = 3;
    if (has_is_all()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_all());
    }
    
    // optional .ProtoExpRestore restore_info = 5;
    if (has_restore_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->restore_info());
    }
    
    // optional .ProtoThreeObj other_info = 6;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  // repeated .ProtoItem item_list = 4;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401417::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401417* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401417*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401417::MergeFrom(const Proto51401417& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_restore_type()) {
      set_restore_type(from.restore_type());
    }
    if (from.has_is_all()) {
      set_is_all(from.is_all());
    }
    if (from.has_restore_info()) {
      mutable_restore_info()->::ProtoExpRestore::MergeFrom(from.restore_info());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401417::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401417::CopyFrom(const Proto51401417& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401417::IsInitialized() const {
  
  return true;
}

void Proto51401417::Swap(Proto51401417* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(restore_type_, other->restore_type_);
    std::swap(is_all_, other->is_all_);
    item_list_.Swap(&other->item_list_);
    std::swap(restore_info_, other->restore_info_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401417::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401417_descriptor_;
  metadata.reflection = Proto51401417_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401417::kActivityIdFieldNumber;
const int Proto11401417::kRestoreTypeFieldNumber;
const int Proto11401417::kIsAllFieldNumber;
const int Proto11401417::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto11401417::Proto11401417()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401417::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto11401417::Proto11401417(const Proto11401417& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401417::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  restore_type_ = 0;
  is_all_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401417::~Proto11401417() {
  SharedDtor();
}

void Proto11401417::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto11401417::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401417::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401417_descriptor_;
}

const Proto11401417& Proto11401417::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto11401417* Proto11401417::default_instance_ = NULL;

Proto11401417* Proto11401417::New() const {
  return new Proto11401417;
}

void Proto11401417::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    restore_type_ = 0;
    is_all_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401417::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_restore_type;
        break;
      }
      
      // optional int32 restore_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_restore_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &restore_type_)));
          set_has_restore_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_all;
        break;
      }
      
      // optional int32 is_all = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_all:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_all_)));
          set_has_is_all();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401417::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 restore_type = 2;
  if (has_restore_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->restore_type(), output);
  }
  
  // optional int32 is_all = 3;
  if (has_is_all()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_all(), output);
  }
  
  // optional .ProtoThreeObj other_info = 4;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401417::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 restore_type = 2;
  if (has_restore_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->restore_type(), target);
  }
  
  // optional int32 is_all = 3;
  if (has_is_all()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_all(), target);
  }
  
  // optional .ProtoThreeObj other_info = 4;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401417::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 restore_type = 2;
    if (has_restore_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->restore_type());
    }
    
    // optional int32 is_all = 3;
    if (has_is_all()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_all());
    }
    
    // optional .ProtoThreeObj other_info = 4;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401417::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401417* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401417*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401417::MergeFrom(const Proto11401417& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_restore_type()) {
      set_restore_type(from.restore_type());
    }
    if (from.has_is_all()) {
      set_is_all(from.is_all());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401417::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401417::CopyFrom(const Proto11401417& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401417::IsInitialized() const {
  
  return true;
}

void Proto11401417::Swap(Proto11401417* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(restore_type_, other->restore_type_);
    std::swap(is_all_, other->is_all_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401417::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401417_descriptor_;
  metadata.reflection = Proto11401417_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102001::kActivitySetFieldNumber;
#endif  // !_MSC_VER

Proto50102001::Proto50102001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102001::InitAsDefaultInstance() {
}

Proto50102001::Proto50102001(const Proto50102001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102001::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102001::~Proto50102001() {
  SharedDtor();
}

void Proto50102001::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102001_descriptor_;
}

const Proto50102001& Proto50102001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto50102001* Proto50102001::default_instance_ = NULL;

Proto50102001* Proto50102001::New() const {
  return new Proto50102001;
}

void Proto50102001::Clear() {
  activity_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 activity_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_activity_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_activity_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_activity_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 activity_set = 1;
  for (int i = 0; i < this->activity_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->activity_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 activity_set = 1;
  for (int i = 0; i < this->activity_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->activity_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102001::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 activity_set = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->activity_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->activity_set(i));
    }
    total_size += 1 * this->activity_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102001::MergeFrom(const Proto50102001& from) {
  GOOGLE_CHECK_NE(&from, this);
  activity_set_.MergeFrom(from.activity_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102001::CopyFrom(const Proto50102001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102001::IsInitialized() const {
  
  return true;
}

void Proto50102001::Swap(Proto50102001* other) {
  if (other != this) {
    activity_set_.Swap(&other->activity_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102001_descriptor_;
  metadata.reflection = Proto50102001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102002::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto10102002::Proto10102002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102002::InitAsDefaultInstance() {
}

Proto10102002::Proto10102002(const Proto10102002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102002::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102002::~Proto10102002() {
  SharedDtor();
}

void Proto10102002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102002_descriptor_;
}

const Proto10102002& Proto10102002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto10102002* Proto10102002::default_instance_ = NULL;

Proto10102002* Proto10102002::New() const {
  return new Proto10102002;
}

void Proto10102002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102002::MergeFrom(const Proto10102002& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102002::CopyFrom(const Proto10102002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102002::IsInitialized() const {
  
  return true;
}

void Proto10102002::Swap(Proto10102002* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102002_descriptor_;
  metadata.reflection = Proto10102002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102002::kActivityIdFieldNumber;
const int Proto50102002::kMyScoreFieldNumber;
const int Proto50102002::kLeftTickFieldNumber;
const int Proto50102002::kLeftGoldFieldNumber;
const int Proto50102002::kPersonRecordFieldNumber;
const int Proto50102002::kServerRecordFieldNumber;
const int Proto50102002::kSlotInfoFieldNumber;
const int Proto50102002::kNowSlotIdFieldNumber;
const int Proto50102002::kResetTimesFieldNumber;
const int Proto50102002::kFreeTimesFieldNumber;
const int Proto50102002::kRefreshTickFieldNumber;
const int Proto50102002::kLeftFreeTimeFieldNumber;
const int Proto50102002::kDrawLimitFieldNumber;
const int Proto50102002::kDrawFreeTimesFieldNumber;
const int Proto50102002::kRewardGetFieldNumber;
const int Proto50102002::kNineWordRewardFieldNumber;
const int Proto50102002::kRewardShowFieldNumber;
const int Proto50102002::kRankRewardShowFieldNumber;
const int Proto50102002::kOpenTimesFieldNumber;
const int Proto50102002::kResetCostFieldNumber;
const int Proto50102002::kRewardLocationFieldNumber;
const int Proto50102002::kTotalRechargeFieldNumber;
const int Proto50102002::kFishDetailFieldNumber;
#endif  // !_MSC_VER

Proto50102002::Proto50102002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102002::InitAsDefaultInstance() {
}

Proto50102002::Proto50102002(const Proto50102002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102002::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  my_score_ = 0;
  left_tick_ = 0;
  left_gold_ = 0;
  now_slot_id_ = 0;
  reset_times_ = 0;
  free_times_ = 0;
  refresh_tick_ = 0;
  left_free_time_ = 0;
  draw_limit_ = 0;
  draw_free_times_ = 0;
  reward_get_ = 0;
  nine_word_reward_ = 0;
  reward_show_ = 0;
  rank_reward_show_ = 0;
  open_times_ = 0;
  reset_cost_ = 0;
  total_recharge_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102002::~Proto50102002() {
  SharedDtor();
}

void Proto50102002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102002_descriptor_;
}

const Proto50102002& Proto50102002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto50102002* Proto50102002::default_instance_ = NULL;

Proto50102002* Proto50102002::New() const {
  return new Proto50102002;
}

void Proto50102002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    my_score_ = 0;
    left_tick_ = 0;
    left_gold_ = 0;
    now_slot_id_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    reset_times_ = 0;
    free_times_ = 0;
    refresh_tick_ = 0;
    left_free_time_ = 0;
    draw_limit_ = 0;
    draw_free_times_ = 0;
    reward_get_ = 0;
    nine_word_reward_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    reward_show_ = 0;
    rank_reward_show_ = 0;
    open_times_ = 0;
    reset_cost_ = 0;
    total_recharge_ = 0;
  }
  person_record_.Clear();
  server_record_.Clear();
  slot_info_.Clear();
  reward_location_.Clear();
  fish_detail_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_my_score;
        break;
      }
      
      // optional int32 my_score = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_my_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &my_score_)));
          set_has_my_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left_tick;
        break;
      }
      
      // optional int32 left_tick = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_tick_)));
          set_has_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_left_gold;
        break;
      }
      
      // optional int32 left_gold = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_gold_)));
          set_has_left_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_person_record;
        break;
      }
      
      // repeated .ProtoPersonRecord person_record = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_person_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_person_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_person_record;
        if (input->ExpectTag(50)) goto parse_server_record;
        break;
      }
      
      // repeated .ProtoServerRecord server_record = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_server_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_server_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_server_record;
        if (input->ExpectTag(58)) goto parse_slot_info;
        break;
      }
      
      // repeated .ProtoSlotInfo slot_info = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_slot_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_slot_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_slot_info;
        if (input->ExpectTag(64)) goto parse_now_slot_id;
        break;
      }
      
      // optional int32 now_slot_id = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_now_slot_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &now_slot_id_)));
          set_has_now_slot_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_reset_times;
        break;
      }
      
      // optional int32 reset_times = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reset_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reset_times_)));
          set_has_reset_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_free_times;
        break;
      }
      
      // optional int32 free_times = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_free_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &free_times_)));
          set_has_free_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_refresh_tick;
        break;
      }
      
      // optional int32 refresh_tick = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refresh_tick_)));
          set_has_refresh_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_left_free_time;
        break;
      }
      
      // optional int32 left_free_time = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_free_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_free_time_)));
          set_has_left_free_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_draw_limit;
        break;
      }
      
      // optional int32 draw_limit = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_draw_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &draw_limit_)));
          set_has_draw_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_draw_free_times;
        break;
      }
      
      // optional int32 draw_free_times = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_draw_free_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &draw_free_times_)));
          set_has_draw_free_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_reward_get;
        break;
      }
      
      // optional int32 reward_get = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_get:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_get_)));
          set_has_reward_get();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_nine_word_reward;
        break;
      }
      
      // optional int32 nine_word_reward = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nine_word_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nine_word_reward_)));
          set_has_nine_word_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_reward_show;
        break;
      }
      
      // optional int32 reward_show = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_show:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_show_)));
          set_has_reward_show();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_rank_reward_show;
        break;
      }
      
      // optional int32 rank_reward_show = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_reward_show:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_reward_show_)));
          set_has_rank_reward_show();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_open_times;
        break;
      }
      
      // optional int32 open_times = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_open_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_times_)));
          set_has_open_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_reset_cost;
        break;
      }
      
      // optional int32 reset_cost = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reset_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reset_cost_)));
          set_has_reset_cost();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_reward_location;
        break;
      }
      
      // repeated int32 reward_location = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_location:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 168, input, this->mutable_reward_location())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_reward_location())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_reward_location;
        if (input->ExpectTag(176)) goto parse_total_recharge;
        break;
      }
      
      // optional int32 total_recharge = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_recharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_recharge_)));
          set_has_total_recharge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_fish_detail;
        break;
      }
      
      // repeated .FishDetail fish_detail = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fish_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fish_detail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_fish_detail;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 my_score = 2;
  if (has_my_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->my_score(), output);
  }
  
  // optional int32 left_tick = 3;
  if (has_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_tick(), output);
  }
  
  // optional int32 left_gold = 4;
  if (has_left_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->left_gold(), output);
  }
  
  // repeated .ProtoPersonRecord person_record = 5;
  for (int i = 0; i < this->person_record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->person_record(i), output);
  }
  
  // repeated .ProtoServerRecord server_record = 6;
  for (int i = 0; i < this->server_record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->server_record(i), output);
  }
  
  // repeated .ProtoSlotInfo slot_info = 7;
  for (int i = 0; i < this->slot_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->slot_info(i), output);
  }
  
  // optional int32 now_slot_id = 8;
  if (has_now_slot_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->now_slot_id(), output);
  }
  
  // optional int32 reset_times = 9;
  if (has_reset_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->reset_times(), output);
  }
  
  // optional int32 free_times = 10;
  if (has_free_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->free_times(), output);
  }
  
  // optional int32 refresh_tick = 11;
  if (has_refresh_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->refresh_tick(), output);
  }
  
  // optional int32 left_free_time = 12;
  if (has_left_free_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->left_free_time(), output);
  }
  
  // optional int32 draw_limit = 13;
  if (has_draw_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->draw_limit(), output);
  }
  
  // optional int32 draw_free_times = 14;
  if (has_draw_free_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->draw_free_times(), output);
  }
  
  // optional int32 reward_get = 15;
  if (has_reward_get()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->reward_get(), output);
  }
  
  // optional int32 nine_word_reward = 16;
  if (has_nine_word_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->nine_word_reward(), output);
  }
  
  // optional int32 reward_show = 17;
  if (has_reward_show()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->reward_show(), output);
  }
  
  // optional int32 rank_reward_show = 18;
  if (has_rank_reward_show()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->rank_reward_show(), output);
  }
  
  // optional int32 open_times = 19;
  if (has_open_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->open_times(), output);
  }
  
  // optional int32 reset_cost = 20;
  if (has_reset_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->reset_cost(), output);
  }
  
  // repeated int32 reward_location = 21;
  for (int i = 0; i < this->reward_location_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      21, this->reward_location(i), output);
  }
  
  // optional int32 total_recharge = 22;
  if (has_total_recharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->total_recharge(), output);
  }
  
  // repeated .FishDetail fish_detail = 23;
  for (int i = 0; i < this->fish_detail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->fish_detail(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 my_score = 2;
  if (has_my_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->my_score(), target);
  }
  
  // optional int32 left_tick = 3;
  if (has_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_tick(), target);
  }
  
  // optional int32 left_gold = 4;
  if (has_left_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->left_gold(), target);
  }
  
  // repeated .ProtoPersonRecord person_record = 5;
  for (int i = 0; i < this->person_record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->person_record(i), target);
  }
  
  // repeated .ProtoServerRecord server_record = 6;
  for (int i = 0; i < this->server_record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->server_record(i), target);
  }
  
  // repeated .ProtoSlotInfo slot_info = 7;
  for (int i = 0; i < this->slot_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->slot_info(i), target);
  }
  
  // optional int32 now_slot_id = 8;
  if (has_now_slot_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->now_slot_id(), target);
  }
  
  // optional int32 reset_times = 9;
  if (has_reset_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->reset_times(), target);
  }
  
  // optional int32 free_times = 10;
  if (has_free_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->free_times(), target);
  }
  
  // optional int32 refresh_tick = 11;
  if (has_refresh_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->refresh_tick(), target);
  }
  
  // optional int32 left_free_time = 12;
  if (has_left_free_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->left_free_time(), target);
  }
  
  // optional int32 draw_limit = 13;
  if (has_draw_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->draw_limit(), target);
  }
  
  // optional int32 draw_free_times = 14;
  if (has_draw_free_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->draw_free_times(), target);
  }
  
  // optional int32 reward_get = 15;
  if (has_reward_get()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->reward_get(), target);
  }
  
  // optional int32 nine_word_reward = 16;
  if (has_nine_word_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->nine_word_reward(), target);
  }
  
  // optional int32 reward_show = 17;
  if (has_reward_show()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->reward_show(), target);
  }
  
  // optional int32 rank_reward_show = 18;
  if (has_rank_reward_show()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->rank_reward_show(), target);
  }
  
  // optional int32 open_times = 19;
  if (has_open_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->open_times(), target);
  }
  
  // optional int32 reset_cost = 20;
  if (has_reset_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->reset_cost(), target);
  }
  
  // repeated int32 reward_location = 21;
  for (int i = 0; i < this->reward_location_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(21, this->reward_location(i), target);
  }
  
  // optional int32 total_recharge = 22;
  if (has_total_recharge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->total_recharge(), target);
  }
  
  // repeated .FishDetail fish_detail = 23;
  for (int i = 0; i < this->fish_detail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->fish_detail(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 my_score = 2;
    if (has_my_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->my_score());
    }
    
    // optional int32 left_tick = 3;
    if (has_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_tick());
    }
    
    // optional int32 left_gold = 4;
    if (has_left_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_gold());
    }
    
    // optional int32 now_slot_id = 8;
    if (has_now_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->now_slot_id());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 reset_times = 9;
    if (has_reset_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reset_times());
    }
    
    // optional int32 free_times = 10;
    if (has_free_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->free_times());
    }
    
    // optional int32 refresh_tick = 11;
    if (has_refresh_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refresh_tick());
    }
    
    // optional int32 left_free_time = 12;
    if (has_left_free_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_free_time());
    }
    
    // optional int32 draw_limit = 13;
    if (has_draw_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->draw_limit());
    }
    
    // optional int32 draw_free_times = 14;
    if (has_draw_free_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->draw_free_times());
    }
    
    // optional int32 reward_get = 15;
    if (has_reward_get()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_get());
    }
    
    // optional int32 nine_word_reward = 16;
    if (has_nine_word_reward()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nine_word_reward());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 reward_show = 17;
    if (has_reward_show()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_show());
    }
    
    // optional int32 rank_reward_show = 18;
    if (has_rank_reward_show()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_reward_show());
    }
    
    // optional int32 open_times = 19;
    if (has_open_times()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open_times());
    }
    
    // optional int32 reset_cost = 20;
    if (has_reset_cost()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reset_cost());
    }
    
    // optional int32 total_recharge = 22;
    if (has_total_recharge()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_recharge());
    }
    
  }
  // repeated .ProtoPersonRecord person_record = 5;
  total_size += 1 * this->person_record_size();
  for (int i = 0; i < this->person_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->person_record(i));
  }
  
  // repeated .ProtoServerRecord server_record = 6;
  total_size += 1 * this->server_record_size();
  for (int i = 0; i < this->server_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->server_record(i));
  }
  
  // repeated .ProtoSlotInfo slot_info = 7;
  total_size += 1 * this->slot_info_size();
  for (int i = 0; i < this->slot_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->slot_info(i));
  }
  
  // repeated int32 reward_location = 21;
  {
    int data_size = 0;
    for (int i = 0; i < this->reward_location_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->reward_location(i));
    }
    total_size += 2 * this->reward_location_size() + data_size;
  }
  
  // repeated .FishDetail fish_detail = 23;
  total_size += 2 * this->fish_detail_size();
  for (int i = 0; i < this->fish_detail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fish_detail(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102002::MergeFrom(const Proto50102002& from) {
  GOOGLE_CHECK_NE(&from, this);
  person_record_.MergeFrom(from.person_record_);
  server_record_.MergeFrom(from.server_record_);
  slot_info_.MergeFrom(from.slot_info_);
  reward_location_.MergeFrom(from.reward_location_);
  fish_detail_.MergeFrom(from.fish_detail_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_my_score()) {
      set_my_score(from.my_score());
    }
    if (from.has_left_tick()) {
      set_left_tick(from.left_tick());
    }
    if (from.has_left_gold()) {
      set_left_gold(from.left_gold());
    }
    if (from.has_now_slot_id()) {
      set_now_slot_id(from.now_slot_id());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_reset_times()) {
      set_reset_times(from.reset_times());
    }
    if (from.has_free_times()) {
      set_free_times(from.free_times());
    }
    if (from.has_refresh_tick()) {
      set_refresh_tick(from.refresh_tick());
    }
    if (from.has_left_free_time()) {
      set_left_free_time(from.left_free_time());
    }
    if (from.has_draw_limit()) {
      set_draw_limit(from.draw_limit());
    }
    if (from.has_draw_free_times()) {
      set_draw_free_times(from.draw_free_times());
    }
    if (from.has_reward_get()) {
      set_reward_get(from.reward_get());
    }
    if (from.has_nine_word_reward()) {
      set_nine_word_reward(from.nine_word_reward());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_reward_show()) {
      set_reward_show(from.reward_show());
    }
    if (from.has_rank_reward_show()) {
      set_rank_reward_show(from.rank_reward_show());
    }
    if (from.has_open_times()) {
      set_open_times(from.open_times());
    }
    if (from.has_reset_cost()) {
      set_reset_cost(from.reset_cost());
    }
    if (from.has_total_recharge()) {
      set_total_recharge(from.total_recharge());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102002::CopyFrom(const Proto50102002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102002::IsInitialized() const {
  
  return true;
}

void Proto50102002::Swap(Proto50102002* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(my_score_, other->my_score_);
    std::swap(left_tick_, other->left_tick_);
    std::swap(left_gold_, other->left_gold_);
    person_record_.Swap(&other->person_record_);
    server_record_.Swap(&other->server_record_);
    slot_info_.Swap(&other->slot_info_);
    std::swap(now_slot_id_, other->now_slot_id_);
    std::swap(reset_times_, other->reset_times_);
    std::swap(free_times_, other->free_times_);
    std::swap(refresh_tick_, other->refresh_tick_);
    std::swap(left_free_time_, other->left_free_time_);
    std::swap(draw_limit_, other->draw_limit_);
    std::swap(draw_free_times_, other->draw_free_times_);
    std::swap(reward_get_, other->reward_get_);
    std::swap(nine_word_reward_, other->nine_word_reward_);
    std::swap(reward_show_, other->reward_show_);
    std::swap(rank_reward_show_, other->rank_reward_show_);
    std::swap(open_times_, other->open_times_);
    std::swap(reset_cost_, other->reset_cost_);
    reward_location_.Swap(&other->reward_location_);
    std::swap(total_recharge_, other->total_recharge_);
    fish_detail_.Swap(&other->fish_detail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102002_descriptor_;
  metadata.reflection = Proto50102002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102003::kActivityIdFieldNumber;
const int Proto10102003::kAmountFieldNumber;
const int Proto10102003::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto10102003::Proto10102003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102003::InitAsDefaultInstance() {
}

Proto10102003::Proto10102003(const Proto10102003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102003::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  amount_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102003::~Proto10102003() {
  SharedDtor();
}

void Proto10102003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102003_descriptor_;
}

const Proto10102003& Proto10102003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto10102003* Proto10102003::default_instance_ = NULL;

Proto10102003* Proto10102003::New() const {
  return new Proto10102003;
}

void Proto10102003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    amount_ = 0;
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }
      
      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 amount = 2;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->amount(), output);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 amount = 2;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->amount(), target);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 amount = 2;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102003::MergeFrom(const Proto10102003& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102003::CopyFrom(const Proto10102003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102003::IsInitialized() const {
  
  return true;
}

void Proto10102003::Swap(Proto10102003* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(amount_, other->amount_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102003_descriptor_;
  metadata.reflection = Proto10102003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102003::kActivityIdFieldNumber;
const int Proto50102003::kSlotSetFieldNumber;
const int Proto50102003::kRecordFieldNumber;
const int Proto50102003::kAmountFieldNumber;
const int Proto50102003::kMultFieldNumber;
#endif  // !_MSC_VER

Proto50102003::Proto50102003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102003::InitAsDefaultInstance() {
}

Proto50102003::Proto50102003(const Proto50102003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102003::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  amount_ = 0;
  mult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102003::~Proto50102003() {
  SharedDtor();
}

void Proto50102003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102003_descriptor_;
}

const Proto50102003& Proto50102003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto50102003* Proto50102003::default_instance_ = NULL;

Proto50102003* Proto50102003::New() const {
  return new Proto50102003;
}

void Proto50102003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    amount_ = 0;
    mult_ = 0;
  }
  slot_set_.Clear();
  record_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_slot_set;
        break;
      }
      
      // repeated int32 slot_set = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_slot_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_slot_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_slot_set;
        if (input->ExpectTag(26)) goto parse_record;
        break;
      }
      
      // repeated .ProtoPersonRecord record = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_record;
        if (input->ExpectTag(32)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_mult;
        break;
      }
      
      // optional int32 mult = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mult_)));
          set_has_mult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // repeated int32 slot_set = 2;
  for (int i = 0; i < this->slot_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->slot_set(i), output);
  }
  
  // repeated .ProtoPersonRecord record = 3;
  for (int i = 0; i < this->record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->record(i), output);
  }
  
  // optional int32 amount = 4;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->amount(), output);
  }
  
  // optional int32 mult = 5;
  if (has_mult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->mult(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // repeated int32 slot_set = 2;
  for (int i = 0; i < this->slot_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->slot_set(i), target);
  }
  
  // repeated .ProtoPersonRecord record = 3;
  for (int i = 0; i < this->record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->record(i), target);
  }
  
  // optional int32 amount = 4;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->amount(), target);
  }
  
  // optional int32 mult = 5;
  if (has_mult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->mult(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 amount = 4;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
    // optional int32 mult = 5;
    if (has_mult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mult());
    }
    
  }
  // repeated int32 slot_set = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->slot_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->slot_set(i));
    }
    total_size += 1 * this->slot_set_size() + data_size;
  }
  
  // repeated .ProtoPersonRecord record = 3;
  total_size += 1 * this->record_size();
  for (int i = 0; i < this->record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102003::MergeFrom(const Proto50102003& from) {
  GOOGLE_CHECK_NE(&from, this);
  slot_set_.MergeFrom(from.slot_set_);
  record_.MergeFrom(from.record_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_mult()) {
      set_mult(from.mult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102003::CopyFrom(const Proto50102003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102003::IsInitialized() const {
  
  return true;
}

void Proto50102003::Swap(Proto50102003* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    slot_set_.Swap(&other->slot_set_);
    record_.Swap(&other->record_);
    std::swap(amount_, other->amount_);
    std::swap(mult_, other->mult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102003_descriptor_;
  metadata.reflection = Proto50102003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102004::kActivityIdFieldNumber;
const int Proto10102004::kExchangeIdFieldNumber;
#endif  // !_MSC_VER

Proto10102004::Proto10102004()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102004::InitAsDefaultInstance() {
}

Proto10102004::Proto10102004(const Proto10102004& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102004::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  exchange_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102004::~Proto10102004() {
  SharedDtor();
}

void Proto10102004::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102004::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102004::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102004_descriptor_;
}

const Proto10102004& Proto10102004::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto10102004* Proto10102004::default_instance_ = NULL;

Proto10102004* Proto10102004::New() const {
  return new Proto10102004;
}

void Proto10102004::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    exchange_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102004::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exchange_id;
        break;
      }
      
      // optional int32 exchange_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exchange_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchange_id_)));
          set_has_exchange_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102004::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 exchange_id = 2;
  if (has_exchange_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exchange_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102004::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 exchange_id = 2;
  if (has_exchange_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exchange_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102004::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 exchange_id = 2;
    if (has_exchange_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exchange_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102004::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102004* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102004*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102004::MergeFrom(const Proto10102004& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_exchange_id()) {
      set_exchange_id(from.exchange_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102004::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102004::CopyFrom(const Proto10102004& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102004::IsInitialized() const {
  
  return true;
}

void Proto10102004::Swap(Proto10102004* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(exchange_id_, other->exchange_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102004::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102004_descriptor_;
  metadata.reflection = Proto10102004_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102004::kActivityIdFieldNumber;
const int Proto50102004::kCurScoreFieldNumber;
#endif  // !_MSC_VER

Proto50102004::Proto50102004()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102004::InitAsDefaultInstance() {
}

Proto50102004::Proto50102004(const Proto50102004& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102004::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  cur_score_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102004::~Proto50102004() {
  SharedDtor();
}

void Proto50102004::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102004::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102004::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102004_descriptor_;
}

const Proto50102004& Proto50102004::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto50102004* Proto50102004::default_instance_ = NULL;

Proto50102004* Proto50102004::New() const {
  return new Proto50102004;
}

void Proto50102004::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    cur_score_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102004::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cur_score;
        break;
      }
      
      // optional int32 cur_score = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_score_)));
          set_has_cur_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102004::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 cur_score = 2;
  if (has_cur_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cur_score(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102004::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 cur_score = 2;
  if (has_cur_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cur_score(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102004::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 cur_score = 2;
    if (has_cur_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_score());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102004::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102004* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102004*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102004::MergeFrom(const Proto50102004& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_cur_score()) {
      set_cur_score(from.cur_score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102004::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102004::CopyFrom(const Proto50102004& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102004::IsInitialized() const {
  
  return true;
}

void Proto50102004::Swap(Proto50102004* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(cur_score_, other->cur_score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102004::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102004_descriptor_;
  metadata.reflection = Proto50102004_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102005::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto10102005::Proto10102005()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102005::InitAsDefaultInstance() {
}

Proto10102005::Proto10102005(const Proto10102005& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102005::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102005::~Proto10102005() {
  SharedDtor();
}

void Proto10102005::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102005::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102005::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102005_descriptor_;
}

const Proto10102005& Proto10102005::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto10102005* Proto10102005::default_instance_ = NULL;

Proto10102005* Proto10102005::New() const {
  return new Proto10102005;
}

void Proto10102005::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102005::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102005::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102005::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102005::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102005::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102005* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102005*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102005::MergeFrom(const Proto10102005& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102005::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102005::CopyFrom(const Proto10102005& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102005::IsInitialized() const {
  
  return true;
}

void Proto10102005::Swap(Proto10102005* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102005::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102005_descriptor_;
  metadata.reflection = Proto10102005_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102005::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto50102005::Proto50102005()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102005::InitAsDefaultInstance() {
}

Proto50102005::Proto50102005(const Proto50102005& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102005::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102005::~Proto50102005() {
  SharedDtor();
}

void Proto50102005::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102005::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102005::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102005_descriptor_;
}

const Proto50102005& Proto50102005::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto50102005* Proto50102005::default_instance_ = NULL;

Proto50102005* Proto50102005::New() const {
  return new Proto50102005;
}

void Proto50102005::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102005::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102005::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102005::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102005::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102005::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102005* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102005*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102005::MergeFrom(const Proto50102005& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102005::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102005::CopyFrom(const Proto50102005& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102005::IsInitialized() const {
  
  return true;
}

void Proto50102005::Swap(Proto50102005* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102005::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102005_descriptor_;
  metadata.reflection = Proto50102005_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400388::kRefreshTickFieldNumber;
const int Proto80400388::kAddExpFieldNumber;
#endif  // !_MSC_VER

Proto80400388::Proto80400388()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400388::InitAsDefaultInstance() {
}

Proto80400388::Proto80400388(const Proto80400388& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400388::SharedCtor() {
  _cached_size_ = 0;
  refresh_tick_ = 0;
  add_exp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400388::~Proto80400388() {
  SharedDtor();
}

void Proto80400388::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400388::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400388::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400388_descriptor_;
}

const Proto80400388& Proto80400388::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto80400388* Proto80400388::default_instance_ = NULL;

Proto80400388* Proto80400388::New() const {
  return new Proto80400388;
}

void Proto80400388::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    refresh_tick_ = 0;
    add_exp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400388::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 refresh_tick = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refresh_tick_)));
          set_has_refresh_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_add_exp;
        break;
      }
      
      // optional int32 add_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_add_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_exp_)));
          set_has_add_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400388::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 refresh_tick = 1;
  if (has_refresh_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->refresh_tick(), output);
  }
  
  // optional int32 add_exp = 2;
  if (has_add_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->add_exp(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400388::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 refresh_tick = 1;
  if (has_refresh_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->refresh_tick(), target);
  }
  
  // optional int32 add_exp = 2;
  if (has_add_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->add_exp(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400388::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 refresh_tick = 1;
    if (has_refresh_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refresh_tick());
    }
    
    // optional int32 add_exp = 2;
    if (has_add_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_exp());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400388::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400388* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400388*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400388::MergeFrom(const Proto80400388& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_refresh_tick()) {
      set_refresh_tick(from.refresh_tick());
    }
    if (from.has_add_exp()) {
      set_add_exp(from.add_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400388::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400388::CopyFrom(const Proto80400388& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400388::IsInitialized() const {
  
  return true;
}

void Proto80400388::Swap(Proto80400388* other) {
  if (other != this) {
    std::swap(refresh_tick_, other->refresh_tick_);
    std::swap(add_exp_, other->add_exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400388::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400388_descriptor_;
  metadata.reflection = Proto80400388_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400117::kExpFieldNumber;
const int Proto80400117::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto80400117::Proto80400117()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400117::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto80400117::Proto80400117(const Proto80400117& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400117::SharedCtor() {
  _cached_size_ = 0;
  exp_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400117::~Proto80400117() {
  SharedDtor();
}

void Proto80400117::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto80400117::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400117::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400117_descriptor_;
}

const Proto80400117& Proto80400117::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto80400117* Proto80400117::default_instance_ = NULL;

Proto80400117* Proto80400117::New() const {
  return new Proto80400117;
}

void Proto80400117::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    exp_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400117::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 exp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400117::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 exp = 1;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->exp(), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400117::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 exp = 1;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->exp(), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400117::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 exp = 1;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }
    
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400117::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400117* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400117*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400117::MergeFrom(const Proto80400117& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400117::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400117::CopyFrom(const Proto80400117& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400117::IsInitialized() const {
  
  return true;
}

void Proto80400117::Swap(Proto80400117* other) {
  if (other != this) {
    std::swap(exp_, other->exp_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400117::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400117_descriptor_;
  metadata.reflection = Proto80400117_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100111::kTypeFieldNumber;
const int Proto80100111::kStateFieldNumber;
#endif  // !_MSC_VER

Proto80100111::Proto80100111()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100111::InitAsDefaultInstance() {
}

Proto80100111::Proto80100111(const Proto80100111& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100111::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100111::~Proto80100111() {
  SharedDtor();
}

void Proto80100111::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80100111::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100111::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100111_descriptor_;
}

const Proto80100111& Proto80100111::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient018_2eproto();  return *default_instance_;
}

Proto80100111* Proto80100111::default_instance_ = NULL;

Proto80100111* Proto80100111::New() const {
  return new Proto80100111;
}

void Proto80100111::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100111::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }
      
      // optional int32 state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100111::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100111::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100111::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100111::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100111* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100111*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100111::MergeFrom(const Proto80100111& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100111::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100111::CopyFrom(const Proto80100111& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100111::IsInitialized() const {
  
  return true;
}

void Proto80100111::Swap(Proto80100111* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100111::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100111_descriptor_;
  metadata.reflection = Proto80100111_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
