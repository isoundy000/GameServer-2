// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient011.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto80400917_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400917_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401805_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401805_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401804_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401804_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400366_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400366_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400367_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400367_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400152_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400152_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400152_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400152_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400368_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400368_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400614_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400614_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400614_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400614_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400369_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400369_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400615_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400615_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400615_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400615_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400120_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400120_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400121_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400121_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80401302_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80401302_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80401303_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80401303_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401302_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401302_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10401303_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10401303_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401303_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401303_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400007_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400007_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400007_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400007_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400008_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400008_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400008_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400008_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400372_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400372_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400115_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400115_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100633_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100633_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100633_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100633_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400324_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400324_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100648_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100648_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100648_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100648_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10401522_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10401522_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401522_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401522_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401523_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401523_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400373_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400373_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400007_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400007_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400375_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400375_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10600104_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10600104_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400224_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400224_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400117_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400117_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400117_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400117_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400225_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400225_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400343_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400343_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400344_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400344_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400711_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400711_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400711_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400711_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400803_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400803_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400616_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400616_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400616_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400616_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400617_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400617_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient011_2eproto() {
  protobuf_AddDesc_ProtoClient011_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient011.proto");
  GOOGLE_CHECK(file != NULL);
  Proto80400917_descriptor_ = file->message_type(0);
  static const int Proto80400917_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400917, sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400917, tip_id_),
  };
  Proto80400917_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400917_descriptor_,
      Proto80400917::default_instance_,
      Proto80400917_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400917, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400917, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400917));
  Proto11401805_descriptor_ = file->message_type(1);
  static const int Proto11401805_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401805, reward_index_),
  };
  Proto11401805_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401805_descriptor_,
      Proto11401805::default_instance_,
      Proto11401805_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401805, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401805, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401805));
  Proto81401804_descriptor_ = file->message_type(2);
  static const int Proto81401804_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401804, show_icon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401804, total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401804, target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401804, reward_states_),
  };
  Proto81401804_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401804_descriptor_,
      Proto81401804::default_instance_,
      Proto81401804_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401804, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401804, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401804));
  Proto80400366_descriptor_ = file->message_type(3);
  static const int Proto80400366_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400366, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400366, active_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400366, is_first_),
  };
  Proto80400366_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400366_descriptor_,
      Proto80400366::default_instance_,
      Proto80400366_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400366, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400366, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400366));
  Proto80400367_descriptor_ = file->message_type(4);
  static const int Proto80400367_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400367, tips_state_),
  };
  Proto80400367_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400367_descriptor_,
      Proto80400367::default_instance_,
      Proto80400367_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400367, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400367, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400367));
  Proto11400152_descriptor_ = file->message_type(5);
  static const int Proto11400152_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400152, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400152, money_),
  };
  Proto11400152_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400152_descriptor_,
      Proto11400152::default_instance_,
      Proto11400152_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400152, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400152, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400152));
  Proto51400152_descriptor_ = file->message_type(6);
  static const int Proto51400152_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400152, need_gold_),
  };
  Proto51400152_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400152_descriptor_,
      Proto51400152::default_instance_,
      Proto51400152_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400152, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400152, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400152));
  Proto80400368_descriptor_ = file->message_type(7);
  static const int Proto80400368_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400368, active_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400368, is_first_),
  };
  Proto80400368_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400368_descriptor_,
      Proto80400368::default_instance_,
      Proto80400368_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400368, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400368, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400368));
  Proto11400614_descriptor_ = file->message_type(8);
  static const int Proto11400614_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400614, index_),
  };
  Proto11400614_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400614_descriptor_,
      Proto11400614::default_instance_,
      Proto11400614_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400614, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400614, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400614));
  Proto51400614_descriptor_ = file->message_type(9);
  static const int Proto51400614_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400614, item_id_),
  };
  Proto51400614_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400614_descriptor_,
      Proto51400614::default_instance_,
      Proto51400614_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400614, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400614, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400614));
  Proto80400369_descriptor_ = file->message_type(10);
  static const int Proto80400369_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400369, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400369, add_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400369, left_open_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400369, cur_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400369, total_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400369, total_add_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400369, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400369, fight_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400369, legue_name_),
  };
  Proto80400369_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400369_descriptor_,
      Proto80400369::default_instance_,
      Proto80400369_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400369, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400369, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400369));
  Proto11400615_descriptor_ = file->message_type(11);
  static const int Proto11400615_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400615, index_),
  };
  Proto11400615_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400615_descriptor_,
      Proto11400615::default_instance_,
      Proto11400615_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400615, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400615, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400615));
  Proto51400615_descriptor_ = file->message_type(12);
  static const int Proto51400615_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400615, diff_value_),
  };
  Proto51400615_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400615_descriptor_,
      Proto51400615::default_instance_,
      Proto51400615_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400615, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400615, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400615));
  Proto11400120_descriptor_ = file->message_type(13);
  static const int Proto11400120_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400120, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400120, name_),
  };
  Proto11400120_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400120_descriptor_,
      Proto11400120::default_instance_,
      Proto11400120_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400120, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400120, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400120));
  Proto11400121_descriptor_ = file->message_type(14);
  static const int Proto11400121_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400121, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400121, name_),
  };
  Proto11400121_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400121_descriptor_,
      Proto11400121::default_instance_,
      Proto11400121_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400121, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400121, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400121));
  Proto80401302_descriptor_ = file->message_type(15);
  static const int Proto80401302_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401302, left_sec_),
  };
  Proto80401302_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80401302_descriptor_,
      Proto80401302::default_instance_,
      Proto80401302_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401302, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401302, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80401302));
  Proto80401303_descriptor_ = file->message_type(16);
  static const int Proto80401303_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401303, floor_),
  };
  Proto80401303_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80401303_descriptor_,
      Proto80401303::default_instance_,
      Proto80401303_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401303, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401303, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80401303));
  Proto50401302_descriptor_ = file->message_type(17);
  static const int Proto50401302_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401302, cur_floor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401302, my_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401302, my_exploit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401302, total_kill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401302, cur_kill_player_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401302, floor_kill_player_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401302, cur_bekill_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401302, bekill_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401302, per_sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401302, per_exploit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401302, left_tick_),
  };
  Proto50401302_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401302_descriptor_,
      Proto50401302::default_instance_,
      Proto50401302_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401302, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401302, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401302));
  Proto10401303_descriptor_ = file->message_type(18);
  static const int Proto10401303_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401303, is_fresh_),
  };
  Proto10401303_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10401303_descriptor_,
      Proto10401303::default_instance_,
      Proto10401303_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401303, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401303, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10401303));
  Proto50401303_descriptor_ = file->message_type(19);
  static const int Proto50401303_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401303, my_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401303, peak_war_list_),
  };
  Proto50401303_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401303_descriptor_,
      Proto50401303::default_instance_,
      Proto50401303_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401303, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401303, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401303));
  Proto11400007_descriptor_ = file->message_type(20);
  static const int Proto11400007_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400007, act_index_),
  };
  Proto11400007_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400007_descriptor_,
      Proto11400007::default_instance_,
      Proto11400007_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400007, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400007, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400007));
  Proto51400007_descriptor_ = file->message_type(21);
  static const int Proto51400007_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400007, act_detail_),
  };
  Proto51400007_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400007_descriptor_,
      Proto51400007::default_instance_,
      Proto51400007_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400007, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400007, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400007));
  Proto11400008_descriptor_ = file->message_type(22);
  static const int Proto11400008_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400008, act_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400008, reward_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400008, reward_num_),
  };
  Proto11400008_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400008_descriptor_,
      Proto11400008::default_instance_,
      Proto11400008_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400008, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400008, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400008));
  Proto51400008_descriptor_ = file->message_type(23);
  static const int Proto51400008_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400008, act_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400008, reward_info_),
  };
  Proto51400008_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400008_descriptor_,
      Proto51400008::default_instance_,
      Proto51400008_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400008, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400008, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400008));
  Proto80400372_descriptor_ = file->message_type(24);
  static const int Proto80400372_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400372, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400372, effect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400372, index_),
  };
  Proto80400372_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400372_descriptor_,
      Proto80400372::default_instance_,
      Proto80400372_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400372, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400372, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400372));
  Proto80400115_descriptor_ = file->message_type(25);
  static const int Proto80400115_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400115, space_id_),
  };
  Proto80400115_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400115_descriptor_,
      Proto80400115::default_instance_,
      Proto80400115_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400115, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400115, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400115));
  Proto10100633_descriptor_ = file->message_type(26);
  static const int Proto10100633_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100633, page_index_),
  };
  Proto10100633_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100633_descriptor_,
      Proto10100633::default_instance_,
      Proto10100633_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100633, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100633, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100633));
  Proto50100633_descriptor_ = file->message_type(27);
  static const int Proto50100633_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100633, page_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100633, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100633, league_set_),
  };
  Proto50100633_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100633_descriptor_,
      Proto50100633::default_instance_,
      Proto50100633_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100633, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100633, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100633));
  Proto10400324_descriptor_ = file->message_type(28);
  static const int Proto10400324_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400324, league_id_),
  };
  Proto10400324_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400324_descriptor_,
      Proto10400324::default_instance_,
      Proto10400324_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400324, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400324, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400324));
  Proto10100648_descriptor_ = file->message_type(29);
  static const int Proto10100648_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100648, role_id_),
  };
  Proto10100648_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100648_descriptor_,
      Proto10100648::default_instance_,
      Proto10100648_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100648, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100648, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100648));
  Proto50100648_descriptor_ = file->message_type(30);
  static const int Proto50100648_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100648, same_flag_),
  };
  Proto50100648_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100648_descriptor_,
      Proto50100648::default_instance_,
      Proto50100648_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100648, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100648, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100648));
  Proto10401522_descriptor_ = file->message_type(31);
  static const int Proto10401522_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401522, type_),
  };
  Proto10401522_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10401522_descriptor_,
      Proto10401522::default_instance_,
      Proto10401522_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401522, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401522, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10401522));
  Proto50401522_descriptor_ = file->message_type(32);
  static const int Proto50401522_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401522, ai_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401522, start_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401522, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401522, player_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401522, type_),
  };
  Proto50401522_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401522_descriptor_,
      Proto50401522::default_instance_,
      Proto50401522_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401522, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401522, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401522));
  Proto50401523_descriptor_ = file->message_type(33);
  static const int Proto50401523_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401523, escort_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401523, rob_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401523, protect_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401523, wish_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401523, convoy_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401523, cur_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401523, time_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401523, start_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401523, ai_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401523, protect_name_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401523, protect_id_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401523, protect_player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401523, protect_player_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401523, stop_protect_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401523, stop_protect_name_),
  };
  Proto50401523_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401523_descriptor_,
      Proto50401523::default_instance_,
      Proto50401523_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401523, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401523, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401523));
  Proto80400373_descriptor_ = file->message_type(34);
  static const int Proto80400373_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400373, cur_progress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400373, left_time_),
  };
  Proto80400373_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400373_descriptor_,
      Proto80400373::default_instance_,
      Proto80400373_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400373, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400373, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400373));
  Proto50400007_descriptor_ = file->message_type(35);
  static const int Proto50400007_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400007, kill_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400007, color_),
  };
  Proto50400007_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400007_descriptor_,
      Proto50400007::default_instance_,
      Proto50400007_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400007, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400007, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400007));
  Proto80400375_descriptor_ = file->message_type(36);
  static const int Proto80400375_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400375, attackor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400375, attackor_id_),
  };
  Proto80400375_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400375_descriptor_,
      Proto80400375::default_instance_,
      Proto80400375_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400375, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400375, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400375));
  Proto10600104_descriptor_ = file->message_type(37);
  static const int Proto10600104_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10600104, role_id_),
  };
  Proto10600104_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10600104_descriptor_,
      Proto10600104::default_instance_,
      Proto10600104_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10600104, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10600104, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10600104));
  Proto80400224_descriptor_ = file->message_type(38);
  static const int Proto80400224_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400224, mover_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400224, hard_tick_),
  };
  Proto80400224_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400224_descriptor_,
      Proto80400224::default_instance_,
      Proto80400224_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400224, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400224, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400224));
  Proto10400117_descriptor_ = file->message_type(39);
  static const int Proto10400117_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400117, target_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400117, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400117, pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400117, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400117, attack_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400117, dart_type_),
  };
  Proto10400117_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400117_descriptor_,
      Proto10400117::default_instance_,
      Proto10400117_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400117, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400117, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400117));
  Proto50400117_descriptor_ = file->message_type(40);
  static const int Proto50400117_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400117, need_correct_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400117, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400117, pixel_y_),
  };
  Proto50400117_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400117_descriptor_,
      Proto50400117::default_instance_,
      Proto50400117_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400117, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400117, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400117));
  Proto80400225_descriptor_ = file->message_type(41);
  static const int Proto80400225_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400225, mover_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400225, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400225, pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400225, attack_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400225, dart_type_),
  };
  Proto80400225_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400225_descriptor_,
      Proto80400225::default_instance_,
      Proto80400225_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400225, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400225, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400225));
  Proto51400343_descriptor_ = file->message_type(42);
  static const int Proto51400343_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400343, status_),
  };
  Proto51400343_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400343_descriptor_,
      Proto51400343::default_instance_,
      Proto51400343_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400343, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400343, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400343));
  Proto51400344_descriptor_ = file->message_type(43);
  static const int Proto51400344_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400344, extra_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400344, extra_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400344, fast_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400344, routine_task_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400344, total_routine_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400344, routine_task_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400344, double_award_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400344, extra_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400344, task_award_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400344, task_award_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400344, task_award_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400344, next_routine_task_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400344, award_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400344, extra_award_id_),
  };
  Proto51400344_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400344_descriptor_,
      Proto51400344::default_instance_,
      Proto51400344_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400344, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400344, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400344));
  Proto10400711_descriptor_ = file->message_type(44);
  static const int Proto10400711_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400711, skill_id_),
  };
  Proto10400711_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400711_descriptor_,
      Proto10400711::default_instance_,
      Proto10400711_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400711, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400711, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400711));
  Proto50400711_descriptor_ = file->message_type(45);
  static const int Proto50400711_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400711, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400711, skill_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400711, savvy_),
  };
  Proto50400711_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400711_descriptor_,
      Proto50400711::default_instance_,
      Proto50400711_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400711, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400711, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400711));
  Proto80400803_descriptor_ = file->message_type(46);
  static const int Proto80400803_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400803, vip_type_),
  };
  Proto80400803_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400803_descriptor_,
      Proto80400803::default_instance_,
      Proto80400803_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400803, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400803, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400803));
  Proto11400616_descriptor_ = file->message_type(47);
  static const int Proto11400616_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400616, operate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400616, auto_buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400616, src_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400616, des_item_),
  };
  Proto11400616_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400616_descriptor_,
      Proto11400616::default_instance_,
      Proto11400616_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400616, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400616, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400616));
  Proto51400616_descriptor_ = file->message_type(48);
  static const int Proto51400616_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400616, item_des_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400616, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400616, cost_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400616, cost_item_),
  };
  Proto51400616_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400616_descriptor_,
      Proto51400616::default_instance_,
      Proto51400616_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400616, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400616, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400616));
  Proto11400617_descriptor_ = file->message_type(49);
  static const int Proto11400617_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400617, equip_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400617, jewal_index_),
  };
  Proto11400617_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400617_descriptor_,
      Proto11400617::default_instance_,
      Proto11400617_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400617, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400617, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400617));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient011_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400917_descriptor_, &Proto80400917::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401805_descriptor_, &Proto11401805::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401804_descriptor_, &Proto81401804::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400366_descriptor_, &Proto80400366::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400367_descriptor_, &Proto80400367::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400152_descriptor_, &Proto11400152::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400152_descriptor_, &Proto51400152::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400368_descriptor_, &Proto80400368::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400614_descriptor_, &Proto11400614::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400614_descriptor_, &Proto51400614::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400369_descriptor_, &Proto80400369::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400615_descriptor_, &Proto11400615::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400615_descriptor_, &Proto51400615::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400120_descriptor_, &Proto11400120::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400121_descriptor_, &Proto11400121::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80401302_descriptor_, &Proto80401302::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80401303_descriptor_, &Proto80401303::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401302_descriptor_, &Proto50401302::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10401303_descriptor_, &Proto10401303::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401303_descriptor_, &Proto50401303::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400007_descriptor_, &Proto11400007::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400007_descriptor_, &Proto51400007::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400008_descriptor_, &Proto11400008::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400008_descriptor_, &Proto51400008::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400372_descriptor_, &Proto80400372::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400115_descriptor_, &Proto80400115::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100633_descriptor_, &Proto10100633::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100633_descriptor_, &Proto50100633::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400324_descriptor_, &Proto10400324::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100648_descriptor_, &Proto10100648::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100648_descriptor_, &Proto50100648::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10401522_descriptor_, &Proto10401522::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401522_descriptor_, &Proto50401522::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401523_descriptor_, &Proto50401523::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400373_descriptor_, &Proto80400373::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400007_descriptor_, &Proto50400007::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400375_descriptor_, &Proto80400375::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10600104_descriptor_, &Proto10600104::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400224_descriptor_, &Proto80400224::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400117_descriptor_, &Proto10400117::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400117_descriptor_, &Proto50400117::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400225_descriptor_, &Proto80400225::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400343_descriptor_, &Proto51400343::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400344_descriptor_, &Proto51400344::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400711_descriptor_, &Proto10400711::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400711_descriptor_, &Proto50400711::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400803_descriptor_, &Proto80400803::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400616_descriptor_, &Proto11400616::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400616_descriptor_, &Proto51400616::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400617_descriptor_, &Proto11400617::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient011_2eproto() {
  delete Proto80400917::default_instance_;
  delete Proto80400917_reflection_;
  delete Proto11401805::default_instance_;
  delete Proto11401805_reflection_;
  delete Proto81401804::default_instance_;
  delete Proto81401804_reflection_;
  delete Proto80400366::default_instance_;
  delete Proto80400366_reflection_;
  delete Proto80400367::default_instance_;
  delete Proto80400367_reflection_;
  delete Proto11400152::default_instance_;
  delete Proto11400152_reflection_;
  delete Proto51400152::default_instance_;
  delete Proto51400152_reflection_;
  delete Proto80400368::default_instance_;
  delete Proto80400368_reflection_;
  delete Proto11400614::default_instance_;
  delete Proto11400614_reflection_;
  delete Proto51400614::default_instance_;
  delete Proto51400614_reflection_;
  delete Proto80400369::default_instance_;
  delete Proto80400369_reflection_;
  delete Proto11400615::default_instance_;
  delete Proto11400615_reflection_;
  delete Proto51400615::default_instance_;
  delete Proto51400615_reflection_;
  delete Proto11400120::default_instance_;
  delete Proto11400120_reflection_;
  delete Proto11400121::default_instance_;
  delete Proto11400121_reflection_;
  delete Proto80401302::default_instance_;
  delete Proto80401302_reflection_;
  delete Proto80401303::default_instance_;
  delete Proto80401303_reflection_;
  delete Proto50401302::default_instance_;
  delete Proto50401302_reflection_;
  delete Proto10401303::default_instance_;
  delete Proto10401303_reflection_;
  delete Proto50401303::default_instance_;
  delete Proto50401303_reflection_;
  delete Proto11400007::default_instance_;
  delete Proto11400007_reflection_;
  delete Proto51400007::default_instance_;
  delete Proto51400007_reflection_;
  delete Proto11400008::default_instance_;
  delete Proto11400008_reflection_;
  delete Proto51400008::default_instance_;
  delete Proto51400008_reflection_;
  delete Proto80400372::default_instance_;
  delete Proto80400372_reflection_;
  delete Proto80400115::default_instance_;
  delete Proto80400115_reflection_;
  delete Proto10100633::default_instance_;
  delete Proto10100633_reflection_;
  delete Proto50100633::default_instance_;
  delete Proto50100633_reflection_;
  delete Proto10400324::default_instance_;
  delete Proto10400324_reflection_;
  delete Proto10100648::default_instance_;
  delete Proto10100648_reflection_;
  delete Proto50100648::default_instance_;
  delete Proto50100648_reflection_;
  delete Proto10401522::default_instance_;
  delete Proto10401522_reflection_;
  delete Proto50401522::default_instance_;
  delete Proto50401522_reflection_;
  delete Proto50401523::default_instance_;
  delete Proto50401523_reflection_;
  delete Proto80400373::default_instance_;
  delete Proto80400373_reflection_;
  delete Proto50400007::default_instance_;
  delete Proto50400007_reflection_;
  delete Proto80400375::default_instance_;
  delete Proto80400375_reflection_;
  delete Proto10600104::default_instance_;
  delete Proto10600104_reflection_;
  delete Proto80400224::default_instance_;
  delete Proto80400224_reflection_;
  delete Proto10400117::default_instance_;
  delete Proto10400117_reflection_;
  delete Proto50400117::default_instance_;
  delete Proto50400117_reflection_;
  delete Proto80400225::default_instance_;
  delete Proto80400225_reflection_;
  delete Proto51400343::default_instance_;
  delete Proto51400343_reflection_;
  delete Proto51400344::default_instance_;
  delete Proto51400344_reflection_;
  delete Proto10400711::default_instance_;
  delete Proto10400711_reflection_;
  delete Proto50400711::default_instance_;
  delete Proto50400711_reflection_;
  delete Proto80400803::default_instance_;
  delete Proto80400803_reflection_;
  delete Proto11400616::default_instance_;
  delete Proto11400616_reflection_;
  delete Proto51400616::default_instance_;
  delete Proto51400616_reflection_;
  delete Proto11400617::default_instance_;
  delete Proto11400617_reflection_;
}

void protobuf_AddDesc_ProtoClient011_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient011.proto\032\021ProtoPublic.prot"
    "o\"-\n\rProto80400917\022\014\n\004sort\030\001 \001(\005\022\016\n\006tip_"
    "id\030\002 \001(\005\"%\n\rProto11401805\022\024\n\014reward_inde"
    "x\030\001 \001(\005\"X\n\rProto81401804\022\021\n\tshow_icon\030\001 "
    "\001(\005\022\r\n\005total\030\002 \001(\003\022\016\n\006target\030\003 \001(\003\022\025\n\rre"
    "ward_states\030\004 \003(\005\"I\n\rProto80400366\022\021\n\tle"
    "ft_time\030\001 \001(\005\022\023\n\013active_time\030\002 \001(\005\022\020\n\010is"
    "_first\030\003 \001(\005\"#\n\rProto80400367\022\022\n\ntips_st"
    "ate\030\001 \001(\005\"J\n\rProto11400152\022\035\n\titem_list\030"
    "\001 \003(\0132\n.ProtoItem\022\032\n\005money\030\002 \001(\0132\013.Proto"
    "Money\"\"\n\rProto51400152\022\021\n\tneed_gold\030\001 \001("
    "\005\"6\n\rProto80400368\022\023\n\013active_type\030\001 \001(\005\022"
    "\020\n\010is_first\030\002 \001(\005\"\036\n\rProto11400614\022\r\n\005in"
    "dex\030\001 \001(\005\" \n\rProto51400614\022\017\n\007item_id\030\001 "
    "\001(\005\"\274\001\n\rProto80400369\022\021\n\tleft_time\030\001 \001(\005"
    "\022\017\n\007add_exp\030\002 \001(\005\022\026\n\016left_open_time\030\003 \001("
    "\005\022\021\n\tcur_blood\030\004 \001(\005\022\023\n\013total_blood\030\005 \001("
    "\005\022\021\n\ttotal_add\030\006 \001(\005\022\014\n\004type\030\007 \001(\005\022\022\n\nfi"
    "ght_type\030\010 \001(\005\022\022\n\nlegue_name\030\t \001(\t\"\036\n\rPr"
    "oto11400615\022\r\n\005index\030\001 \001(\005\"#\n\rProto51400"
    "615\022\022\n\ndiff_value\030\001 \001(\005\",\n\rProto11400120"
    "\022\r\n\005index\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\",\n\rProto11"
    "400121\022\r\n\005index\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\"!\n\rP"
    "roto80401302\022\020\n\010left_sec\030\001 \001(\005\"\036\n\rProto8"
    "0401303\022\r\n\005floor\030\001 \001(\005\"\372\001\n\rProto50401302"
    "\022\021\n\tcur_floor\030\001 \001(\005\022\017\n\007my_rank\030\002 \001(\005\022\022\n\n"
    "my_exploit\030\003 \001(\005\022\022\n\ntotal_kill\030\004 \001(\005\022\027\n\017"
    "cur_kill_player\030\005 \001(\005\022\031\n\021floor_kill_play"
    "er\030\006 \001(\005\022\031\n\021cur_bekill_amount\030\007 \001(\005\022\025\n\rb"
    "ekill_amount\030\010 \001(\005\022\017\n\007per_sec\030\t \001(\005\022\023\n\013p"
    "er_exploit\030\n \001(\005\022\021\n\tleft_tick\030\013 \001(\005\"!\n\rP"
    "roto10401303\022\020\n\010is_fresh\030\001 \001(\005\"J\n\rProto5"
    "0401303\022\017\n\007my_rank\030\001 \001(\005\022(\n\rpeak_war_lis"
    "t\030\002 \003(\0132\021.ProtoPeakWarRank\"\"\n\rProto11400"
    "007\022\021\n\tact_index\030\001 \001(\005\"2\n\rProto51400007\022"
    "!\n\nact_detail\030\001 \001(\0132\r.PActTypeItem\"L\n\rPr"
    "oto11400008\022\021\n\tact_index\030\001 \001(\005\022\024\n\014reward"
    "_index\030\002 \001(\005\022\022\n\nreward_num\030\003 \001(\005\"F\n\rProt"
    "o51400008\022\021\n\tact_index\030\001 \001(\005\022\"\n\013reward_i"
    "nfo\030\002 \003(\0132\r.ProtoPairObj\"=\n\rProto8040037"
    "2\022\r\n\005state\030\001 \001(\005\022\016\n\006effect\030\002 \001(\005\022\r\n\005inde"
    "x\030\003 \001(\005\"!\n\rProto80400115\022\020\n\010space_id\030\001 \001"
    "(\005\"#\n\rProto10100633\022\022\n\npage_index\030\001 \001(\005\""
    "]\n\rProto50100633\022\022\n\npage_index\030\001 \001(\005\022\022\n\n"
    "total_page\030\002 \001(\005\022$\n\nleague_set\030\003 \003(\0132\020.P"
    "rotoLeagueItem\"\"\n\rProto10400324\022\021\n\tleagu"
    "e_id\030\001 \001(\003\" \n\rProto10100648\022\017\n\007role_id\030\001"
    " \001(\003\"\"\n\rProto50100648\022\021\n\tsame_flag\030\001 \001(\005"
    "\"\035\n\rProto10401522\022\014\n\004type\030\001 \001(\005\"h\n\rProto"
    "50401522\022\r\n\005ai_id\030\001 \001(\003\022\022\n\nstart_tick\030\002 "
    "\001(\003\022\021\n\tplayer_id\030\003 \001(\003\022\023\n\013player_name\030\004 "
    "\001(\t\022\014\n\004type\030\005 \001(\005\"\341\002\n\rProto50401523\022\024\n\014e"
    "scort_times\030\001 \001(\005\022\021\n\trob_times\030\002 \001(\005\022\025\n\r"
    "protect_times\030\003 \001(\005\022\022\n\nwish_times\030\004 \001(\005\022"
    "\022\n\nconvoy_exp\030\005 \001(\005\022\021\n\tcur_level\030\006 \001(\005\022\022"
    "\n\ntime_limit\030\007 \001(\005\022\022\n\nstart_tick\030\010 \001(\003\022\r"
    "\n\005ai_id\030\t \001(\003\022\031\n\021protect_name_list\030\n \003(\t"
    "\022\027\n\017protect_id_list\030\013 \003(\003\022\031\n\021protect_pla"
    "yer_id\030\014 \001(\003\022\033\n\023protect_player_name\030\r \001("
    "\t\022\027\n\017stop_protect_id\030\016 \001(\003\022\031\n\021stop_prote"
    "ct_name\030\017 \001(\t\"8\n\rProto80400373\022\024\n\014cur_pr"
    "ogress\030\001 \001(\005\022\021\n\tleft_time\030\002 \001(\005\"2\n\rProto"
    "50400007\022\022\n\nkill_value\030\001 \001(\005\022\r\n\005color\030\002 "
    "\001(\005\"6\n\rProto80400375\022\020\n\010attackor\030\001 \001(\t\022\023"
    "\n\013attackor_id\030\002 \001(\003\" \n\rProto10600104\022\017\n\007"
    "role_id\030\001 \001(\003\"4\n\rProto80400224\022\020\n\010mover_"
    "id\030\001 \001(\003\022\021\n\thard_tick\030\002 \001(\001\"|\n\rProto1040"
    "0117\022\021\n\ttarget_id\030\001 \001(\003\022\017\n\007pixel_x\030\002 \001(\005"
    "\022\017\n\007pixel_y\030\003 \001(\005\022\020\n\010skill_id\030\004 \001(\005\022\021\n\ta"
    "ttack_id\030\005 \001(\003\022\021\n\tdart_type\030\006 \001(\005\"G\n\rPro"
    "to50400117\022\024\n\014need_correct\030\001 \001(\005\022\017\n\007pixe"
    "l_x\030\002 \001(\005\022\017\n\007pixel_y\030\003 \001(\005\"i\n\rProto80400"
    "225\022\020\n\010mover_id\030\001 \001(\003\022\017\n\007pixel_x\030\002 \001(\005\022\017"
    "\n\007pixel_y\030\003 \001(\005\022\021\n\tattack_id\030\004 \001(\003\022\021\n\tda"
    "rt_type\030\005 \001(\005\"\037\n\rProto51400343\022\016\n\006status"
    "\030\001 \001(\005\"\304\003\n\rProto51400344\022\021\n\textra_exp\030\001 "
    "\001(\005\022\036\n\nextra_item\030\002 \003(\0132\n.ProtoItem\022\036\n\tf"
    "ast_gold\030\003 \001(\0132\013.ProtoMoney\022\032\n\022routine_t"
    "ask_index\030\004 \001(\005\022\032\n\022total_routine_size\030\005 "
    "\001(\005\022$\n\014routine_task\030\006 \001(\0132\016.ProtoTaskInf"
    "o\022\'\n\022double_award_money\030\007 \001(\0132\013.ProtoMon"
    "ey\022 \n\013extra_money\030\010 \001(\0132\013.ProtoMoney\022%\n\020"
    "task_award_money\030\t \001(\0132\013.ProtoMoney\022\026\n\016t"
    "ask_award_exp\030\n \001(\005\022#\n\017task_award_item\030\013"
    " \003(\0132\n.ProtoItem\022)\n\021next_routine_task\030\014 "
    "\001(\0132\016.ProtoTaskInfo\022\020\n\010award_id\030\r \001(\005\022\026\n"
    "\016extra_award_id\030\016 \001(\005\"!\n\rProto10400711\022\020"
    "\n\010skill_id\030\001 \001(\005\"E\n\rProto50400711\022\020\n\010ski"
    "ll_id\030\001 \001(\005\022\023\n\013skill_level\030\002 \001(\005\022\r\n\005savv"
    "y\030\003 \001(\005\"!\n\rProto80400803\022\020\n\010vip_type\030\001 \001"
    "(\005\"|\n\rProto11400616\022\017\n\007operate\030\001 \001(\005\022\020\n\010"
    "auto_buy\030\002 \001(\005\022#\n\010src_item\030\003 \001(\0132\021.Proto"
    "PackageItem\022#\n\010des_item\030\004 \001(\0132\021.ProtoPac"
    "kageItem\"[\n\rProto51400616\022\023\n\013item_des_id"
    "\030\001 \001(\005\022\016\n\006result\030\002 \001(\005\022\022\n\ncost_money\030\003 \001"
    "(\005\022\021\n\tcost_item\030\004 \001(\005\"9\n\rProto11400617\022\023"
    "\n\013equip_index\030\001 \001(\005\022\023\n\013jewal_index\030\002 \001(\005", 3880);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient011.proto", &protobuf_RegisterTypes);
  Proto80400917::default_instance_ = new Proto80400917();
  Proto11401805::default_instance_ = new Proto11401805();
  Proto81401804::default_instance_ = new Proto81401804();
  Proto80400366::default_instance_ = new Proto80400366();
  Proto80400367::default_instance_ = new Proto80400367();
  Proto11400152::default_instance_ = new Proto11400152();
  Proto51400152::default_instance_ = new Proto51400152();
  Proto80400368::default_instance_ = new Proto80400368();
  Proto11400614::default_instance_ = new Proto11400614();
  Proto51400614::default_instance_ = new Proto51400614();
  Proto80400369::default_instance_ = new Proto80400369();
  Proto11400615::default_instance_ = new Proto11400615();
  Proto51400615::default_instance_ = new Proto51400615();
  Proto11400120::default_instance_ = new Proto11400120();
  Proto11400121::default_instance_ = new Proto11400121();
  Proto80401302::default_instance_ = new Proto80401302();
  Proto80401303::default_instance_ = new Proto80401303();
  Proto50401302::default_instance_ = new Proto50401302();
  Proto10401303::default_instance_ = new Proto10401303();
  Proto50401303::default_instance_ = new Proto50401303();
  Proto11400007::default_instance_ = new Proto11400007();
  Proto51400007::default_instance_ = new Proto51400007();
  Proto11400008::default_instance_ = new Proto11400008();
  Proto51400008::default_instance_ = new Proto51400008();
  Proto80400372::default_instance_ = new Proto80400372();
  Proto80400115::default_instance_ = new Proto80400115();
  Proto10100633::default_instance_ = new Proto10100633();
  Proto50100633::default_instance_ = new Proto50100633();
  Proto10400324::default_instance_ = new Proto10400324();
  Proto10100648::default_instance_ = new Proto10100648();
  Proto50100648::default_instance_ = new Proto50100648();
  Proto10401522::default_instance_ = new Proto10401522();
  Proto50401522::default_instance_ = new Proto50401522();
  Proto50401523::default_instance_ = new Proto50401523();
  Proto80400373::default_instance_ = new Proto80400373();
  Proto50400007::default_instance_ = new Proto50400007();
  Proto80400375::default_instance_ = new Proto80400375();
  Proto10600104::default_instance_ = new Proto10600104();
  Proto80400224::default_instance_ = new Proto80400224();
  Proto10400117::default_instance_ = new Proto10400117();
  Proto50400117::default_instance_ = new Proto50400117();
  Proto80400225::default_instance_ = new Proto80400225();
  Proto51400343::default_instance_ = new Proto51400343();
  Proto51400344::default_instance_ = new Proto51400344();
  Proto10400711::default_instance_ = new Proto10400711();
  Proto50400711::default_instance_ = new Proto50400711();
  Proto80400803::default_instance_ = new Proto80400803();
  Proto11400616::default_instance_ = new Proto11400616();
  Proto51400616::default_instance_ = new Proto51400616();
  Proto11400617::default_instance_ = new Proto11400617();
  Proto80400917::default_instance_->InitAsDefaultInstance();
  Proto11401805::default_instance_->InitAsDefaultInstance();
  Proto81401804::default_instance_->InitAsDefaultInstance();
  Proto80400366::default_instance_->InitAsDefaultInstance();
  Proto80400367::default_instance_->InitAsDefaultInstance();
  Proto11400152::default_instance_->InitAsDefaultInstance();
  Proto51400152::default_instance_->InitAsDefaultInstance();
  Proto80400368::default_instance_->InitAsDefaultInstance();
  Proto11400614::default_instance_->InitAsDefaultInstance();
  Proto51400614::default_instance_->InitAsDefaultInstance();
  Proto80400369::default_instance_->InitAsDefaultInstance();
  Proto11400615::default_instance_->InitAsDefaultInstance();
  Proto51400615::default_instance_->InitAsDefaultInstance();
  Proto11400120::default_instance_->InitAsDefaultInstance();
  Proto11400121::default_instance_->InitAsDefaultInstance();
  Proto80401302::default_instance_->InitAsDefaultInstance();
  Proto80401303::default_instance_->InitAsDefaultInstance();
  Proto50401302::default_instance_->InitAsDefaultInstance();
  Proto10401303::default_instance_->InitAsDefaultInstance();
  Proto50401303::default_instance_->InitAsDefaultInstance();
  Proto11400007::default_instance_->InitAsDefaultInstance();
  Proto51400007::default_instance_->InitAsDefaultInstance();
  Proto11400008::default_instance_->InitAsDefaultInstance();
  Proto51400008::default_instance_->InitAsDefaultInstance();
  Proto80400372::default_instance_->InitAsDefaultInstance();
  Proto80400115::default_instance_->InitAsDefaultInstance();
  Proto10100633::default_instance_->InitAsDefaultInstance();
  Proto50100633::default_instance_->InitAsDefaultInstance();
  Proto10400324::default_instance_->InitAsDefaultInstance();
  Proto10100648::default_instance_->InitAsDefaultInstance();
  Proto50100648::default_instance_->InitAsDefaultInstance();
  Proto10401522::default_instance_->InitAsDefaultInstance();
  Proto50401522::default_instance_->InitAsDefaultInstance();
  Proto50401523::default_instance_->InitAsDefaultInstance();
  Proto80400373::default_instance_->InitAsDefaultInstance();
  Proto50400007::default_instance_->InitAsDefaultInstance();
  Proto80400375::default_instance_->InitAsDefaultInstance();
  Proto10600104::default_instance_->InitAsDefaultInstance();
  Proto80400224::default_instance_->InitAsDefaultInstance();
  Proto10400117::default_instance_->InitAsDefaultInstance();
  Proto50400117::default_instance_->InitAsDefaultInstance();
  Proto80400225::default_instance_->InitAsDefaultInstance();
  Proto51400343::default_instance_->InitAsDefaultInstance();
  Proto51400344::default_instance_->InitAsDefaultInstance();
  Proto10400711::default_instance_->InitAsDefaultInstance();
  Proto50400711::default_instance_->InitAsDefaultInstance();
  Proto80400803::default_instance_->InitAsDefaultInstance();
  Proto11400616::default_instance_->InitAsDefaultInstance();
  Proto51400616::default_instance_->InitAsDefaultInstance();
  Proto11400617::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient011_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient011_2eproto {
  StaticDescriptorInitializer_ProtoClient011_2eproto() {
    protobuf_AddDesc_ProtoClient011_2eproto();
  }
} static_descriptor_initializer_ProtoClient011_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto80400917::kSortFieldNumber;
const int Proto80400917::kTipIdFieldNumber;
#endif  // !_MSC_VER

Proto80400917::Proto80400917()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400917::InitAsDefaultInstance() {
}

Proto80400917::Proto80400917(const Proto80400917& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400917::SharedCtor() {
  _cached_size_ = 0;
  sort_ = 0;
  tip_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400917::~Proto80400917() {
  SharedDtor();
}

void Proto80400917::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400917::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400917::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400917_descriptor_;
}

const Proto80400917& Proto80400917::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto80400917* Proto80400917::default_instance_ = NULL;

Proto80400917* Proto80400917::New() const {
  return new Proto80400917;
}

void Proto80400917::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    sort_ = 0;
    tip_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400917::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sort_)));
          set_has_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_tip_id;
        break;
      }
      
      // optional int32 tip_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tip_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tip_id_)));
          set_has_tip_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400917::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 sort = 1;
  if (has_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sort(), output);
  }
  
  // optional int32 tip_id = 2;
  if (has_tip_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->tip_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400917::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 sort = 1;
  if (has_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sort(), target);
  }
  
  // optional int32 tip_id = 2;
  if (has_tip_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->tip_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400917::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 sort = 1;
    if (has_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sort());
    }
    
    // optional int32 tip_id = 2;
    if (has_tip_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tip_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400917::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400917* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400917*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400917::MergeFrom(const Proto80400917& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sort()) {
      set_sort(from.sort());
    }
    if (from.has_tip_id()) {
      set_tip_id(from.tip_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400917::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400917::CopyFrom(const Proto80400917& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400917::IsInitialized() const {
  
  return true;
}

void Proto80400917::Swap(Proto80400917* other) {
  if (other != this) {
    std::swap(sort_, other->sort_);
    std::swap(tip_id_, other->tip_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400917::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400917_descriptor_;
  metadata.reflection = Proto80400917_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401805::kRewardIndexFieldNumber;
#endif  // !_MSC_VER

Proto11401805::Proto11401805()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401805::InitAsDefaultInstance() {
}

Proto11401805::Proto11401805(const Proto11401805& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401805::SharedCtor() {
  _cached_size_ = 0;
  reward_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401805::~Proto11401805() {
  SharedDtor();
}

void Proto11401805::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401805::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401805::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401805_descriptor_;
}

const Proto11401805& Proto11401805::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto11401805* Proto11401805::default_instance_ = NULL;

Proto11401805* Proto11401805::New() const {
  return new Proto11401805;
}

void Proto11401805::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    reward_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401805::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 reward_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_index_)));
          set_has_reward_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401805::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 reward_index = 1;
  if (has_reward_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reward_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401805::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 reward_index = 1;
  if (has_reward_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reward_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401805::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 reward_index = 1;
    if (has_reward_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401805::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401805* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401805*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401805::MergeFrom(const Proto11401805& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward_index()) {
      set_reward_index(from.reward_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401805::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401805::CopyFrom(const Proto11401805& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401805::IsInitialized() const {
  
  return true;
}

void Proto11401805::Swap(Proto11401805* other) {
  if (other != this) {
    std::swap(reward_index_, other->reward_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401805::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401805_descriptor_;
  metadata.reflection = Proto11401805_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401804::kShowIconFieldNumber;
const int Proto81401804::kTotalFieldNumber;
const int Proto81401804::kTargetFieldNumber;
const int Proto81401804::kRewardStatesFieldNumber;
#endif  // !_MSC_VER

Proto81401804::Proto81401804()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401804::InitAsDefaultInstance() {
}

Proto81401804::Proto81401804(const Proto81401804& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401804::SharedCtor() {
  _cached_size_ = 0;
  show_icon_ = 0;
  total_ = GOOGLE_LONGLONG(0);
  target_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401804::~Proto81401804() {
  SharedDtor();
}

void Proto81401804::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401804::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401804::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401804_descriptor_;
}

const Proto81401804& Proto81401804::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto81401804* Proto81401804::default_instance_ = NULL;

Proto81401804* Proto81401804::New() const {
  return new Proto81401804;
}

void Proto81401804::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    show_icon_ = 0;
    total_ = GOOGLE_LONGLONG(0);
    target_ = GOOGLE_LONGLONG(0);
  }
  reward_states_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401804::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 show_icon = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &show_icon_)));
          set_has_show_icon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total;
        break;
      }
      
      // optional int64 total = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_)));
          set_has_total();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_target;
        break;
      }
      
      // optional int64 target = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_target:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_)));
          set_has_target();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_reward_states;
        break;
      }
      
      // repeated int32 reward_states = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_states:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_reward_states())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_reward_states())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_reward_states;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401804::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 show_icon = 1;
  if (has_show_icon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->show_icon(), output);
  }
  
  // optional int64 total = 2;
  if (has_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->total(), output);
  }
  
  // optional int64 target = 3;
  if (has_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->target(), output);
  }
  
  // repeated int32 reward_states = 4;
  for (int i = 0; i < this->reward_states_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->reward_states(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401804::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 show_icon = 1;
  if (has_show_icon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->show_icon(), target);
  }
  
  // optional int64 total = 2;
  if (has_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->total(), target);
  }
  
  // optional int64 target = 3;
  if (has_target()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->target(), target);
  }
  
  // repeated int32 reward_states = 4;
  for (int i = 0; i < this->reward_states_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->reward_states(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401804::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 show_icon = 1;
    if (has_show_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->show_icon());
    }
    
    // optional int64 total = 2;
    if (has_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->total());
    }
    
    // optional int64 target = 3;
    if (has_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->target());
    }
    
  }
  // repeated int32 reward_states = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->reward_states_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->reward_states(i));
    }
    total_size += 1 * this->reward_states_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401804::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401804* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401804*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401804::MergeFrom(const Proto81401804& from) {
  GOOGLE_CHECK_NE(&from, this);
  reward_states_.MergeFrom(from.reward_states_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_show_icon()) {
      set_show_icon(from.show_icon());
    }
    if (from.has_total()) {
      set_total(from.total());
    }
    if (from.has_target()) {
      set_target(from.target());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401804::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401804::CopyFrom(const Proto81401804& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401804::IsInitialized() const {
  
  return true;
}

void Proto81401804::Swap(Proto81401804* other) {
  if (other != this) {
    std::swap(show_icon_, other->show_icon_);
    std::swap(total_, other->total_);
    std::swap(target_, other->target_);
    reward_states_.Swap(&other->reward_states_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401804::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401804_descriptor_;
  metadata.reflection = Proto81401804_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400366::kLeftTimeFieldNumber;
const int Proto80400366::kActiveTimeFieldNumber;
const int Proto80400366::kIsFirstFieldNumber;
#endif  // !_MSC_VER

Proto80400366::Proto80400366()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400366::InitAsDefaultInstance() {
}

Proto80400366::Proto80400366(const Proto80400366& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400366::SharedCtor() {
  _cached_size_ = 0;
  left_time_ = 0;
  active_time_ = 0;
  is_first_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400366::~Proto80400366() {
  SharedDtor();
}

void Proto80400366::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400366::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400366::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400366_descriptor_;
}

const Proto80400366& Proto80400366::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto80400366* Proto80400366::default_instance_ = NULL;

Proto80400366* Proto80400366::New() const {
  return new Proto80400366;
}

void Proto80400366::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_time_ = 0;
    active_time_ = 0;
    is_first_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400366::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_active_time;
        break;
      }
      
      // optional int32 active_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_active_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &active_time_)));
          set_has_active_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_first;
        break;
      }
      
      // optional int32 is_first = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_first:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_first_)));
          set_has_is_first();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400366::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_time = 1;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_time(), output);
  }
  
  // optional int32 active_time = 2;
  if (has_active_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->active_time(), output);
  }
  
  // optional int32 is_first = 3;
  if (has_is_first()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_first(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400366::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_time = 1;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_time(), target);
  }
  
  // optional int32 active_time = 2;
  if (has_active_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->active_time(), target);
  }
  
  // optional int32 is_first = 3;
  if (has_is_first()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_first(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400366::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_time = 1;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 active_time = 2;
    if (has_active_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->active_time());
    }
    
    // optional int32 is_first = 3;
    if (has_is_first()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_first());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400366::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400366* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400366*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400366::MergeFrom(const Proto80400366& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_active_time()) {
      set_active_time(from.active_time());
    }
    if (from.has_is_first()) {
      set_is_first(from.is_first());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400366::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400366::CopyFrom(const Proto80400366& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400366::IsInitialized() const {
  
  return true;
}

void Proto80400366::Swap(Proto80400366* other) {
  if (other != this) {
    std::swap(left_time_, other->left_time_);
    std::swap(active_time_, other->active_time_);
    std::swap(is_first_, other->is_first_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400366::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400366_descriptor_;
  metadata.reflection = Proto80400366_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400367::kTipsStateFieldNumber;
#endif  // !_MSC_VER

Proto80400367::Proto80400367()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400367::InitAsDefaultInstance() {
}

Proto80400367::Proto80400367(const Proto80400367& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400367::SharedCtor() {
  _cached_size_ = 0;
  tips_state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400367::~Proto80400367() {
  SharedDtor();
}

void Proto80400367::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400367::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400367::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400367_descriptor_;
}

const Proto80400367& Proto80400367::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto80400367* Proto80400367::default_instance_ = NULL;

Proto80400367* Proto80400367::New() const {
  return new Proto80400367;
}

void Proto80400367::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tips_state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400367::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tips_state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tips_state_)));
          set_has_tips_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400367::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 tips_state = 1;
  if (has_tips_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tips_state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400367::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 tips_state = 1;
  if (has_tips_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tips_state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400367::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 tips_state = 1;
    if (has_tips_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tips_state());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400367::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400367* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400367*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400367::MergeFrom(const Proto80400367& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tips_state()) {
      set_tips_state(from.tips_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400367::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400367::CopyFrom(const Proto80400367& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400367::IsInitialized() const {
  
  return true;
}

void Proto80400367::Swap(Proto80400367* other) {
  if (other != this) {
    std::swap(tips_state_, other->tips_state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400367::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400367_descriptor_;
  metadata.reflection = Proto80400367_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400152::kItemListFieldNumber;
const int Proto11400152::kMoneyFieldNumber;
#endif  // !_MSC_VER

Proto11400152::Proto11400152()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400152::InitAsDefaultInstance() {
  money_ = const_cast< ::ProtoMoney*>(&::ProtoMoney::default_instance());
}

Proto11400152::Proto11400152(const Proto11400152& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400152::SharedCtor() {
  _cached_size_ = 0;
  money_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400152::~Proto11400152() {
  SharedDtor();
}

void Proto11400152::SharedDtor() {
  if (this != default_instance_) {
    delete money_;
  }
}

void Proto11400152::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400152::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400152_descriptor_;
}

const Proto11400152& Proto11400152::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto11400152* Proto11400152::default_instance_ = NULL;

Proto11400152* Proto11400152::New() const {
  return new Proto11400152;
}

void Proto11400152::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_money()) {
      if (money_ != NULL) money_->::ProtoMoney::Clear();
    }
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400152::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_list;
        if (input->ExpectTag(18)) goto parse_money;
        break;
      }
      
      // optional .ProtoMoney money = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_money:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_money()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400152::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(i), output);
  }
  
  // optional .ProtoMoney money = 2;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->money(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400152::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_list(i), target);
  }
  
  // optional .ProtoMoney money = 2;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->money(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400152::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .ProtoMoney money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->money());
    }
    
  }
  // repeated .ProtoItem item_list = 1;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400152::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400152* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400152*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400152::MergeFrom(const Proto11400152& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_money()) {
      mutable_money()->::ProtoMoney::MergeFrom(from.money());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400152::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400152::CopyFrom(const Proto11400152& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400152::IsInitialized() const {
  
  return true;
}

void Proto11400152::Swap(Proto11400152* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(money_, other->money_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400152::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400152_descriptor_;
  metadata.reflection = Proto11400152_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400152::kNeedGoldFieldNumber;
#endif  // !_MSC_VER

Proto51400152::Proto51400152()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400152::InitAsDefaultInstance() {
}

Proto51400152::Proto51400152(const Proto51400152& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400152::SharedCtor() {
  _cached_size_ = 0;
  need_gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400152::~Proto51400152() {
  SharedDtor();
}

void Proto51400152::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400152::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400152::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400152_descriptor_;
}

const Proto51400152& Proto51400152::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto51400152* Proto51400152::default_instance_ = NULL;

Proto51400152* Proto51400152::New() const {
  return new Proto51400152;
}

void Proto51400152::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    need_gold_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400152::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 need_gold = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_gold_)));
          set_has_need_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400152::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 need_gold = 1;
  if (has_need_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->need_gold(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400152::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 need_gold = 1;
  if (has_need_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->need_gold(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400152::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 need_gold = 1;
    if (has_need_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->need_gold());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400152::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400152* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400152*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400152::MergeFrom(const Proto51400152& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_need_gold()) {
      set_need_gold(from.need_gold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400152::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400152::CopyFrom(const Proto51400152& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400152::IsInitialized() const {
  
  return true;
}

void Proto51400152::Swap(Proto51400152* other) {
  if (other != this) {
    std::swap(need_gold_, other->need_gold_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400152::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400152_descriptor_;
  metadata.reflection = Proto51400152_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400368::kActiveTypeFieldNumber;
const int Proto80400368::kIsFirstFieldNumber;
#endif  // !_MSC_VER

Proto80400368::Proto80400368()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400368::InitAsDefaultInstance() {
}

Proto80400368::Proto80400368(const Proto80400368& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400368::SharedCtor() {
  _cached_size_ = 0;
  active_type_ = 0;
  is_first_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400368::~Proto80400368() {
  SharedDtor();
}

void Proto80400368::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400368::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400368::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400368_descriptor_;
}

const Proto80400368& Proto80400368::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto80400368* Proto80400368::default_instance_ = NULL;

Proto80400368* Proto80400368::New() const {
  return new Proto80400368;
}

void Proto80400368::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    active_type_ = 0;
    is_first_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400368::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 active_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &active_type_)));
          set_has_active_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_first;
        break;
      }
      
      // optional int32 is_first = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_first:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_first_)));
          set_has_is_first();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400368::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 active_type = 1;
  if (has_active_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->active_type(), output);
  }
  
  // optional int32 is_first = 2;
  if (has_is_first()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_first(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400368::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 active_type = 1;
  if (has_active_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->active_type(), target);
  }
  
  // optional int32 is_first = 2;
  if (has_is_first()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_first(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400368::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 active_type = 1;
    if (has_active_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->active_type());
    }
    
    // optional int32 is_first = 2;
    if (has_is_first()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_first());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400368::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400368* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400368*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400368::MergeFrom(const Proto80400368& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_active_type()) {
      set_active_type(from.active_type());
    }
    if (from.has_is_first()) {
      set_is_first(from.is_first());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400368::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400368::CopyFrom(const Proto80400368& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400368::IsInitialized() const {
  
  return true;
}

void Proto80400368::Swap(Proto80400368* other) {
  if (other != this) {
    std::swap(active_type_, other->active_type_);
    std::swap(is_first_, other->is_first_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400368::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400368_descriptor_;
  metadata.reflection = Proto80400368_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400614::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400614::Proto11400614()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400614::InitAsDefaultInstance() {
}

Proto11400614::Proto11400614(const Proto11400614& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400614::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400614::~Proto11400614() {
  SharedDtor();
}

void Proto11400614::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400614::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400614::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400614_descriptor_;
}

const Proto11400614& Proto11400614::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto11400614* Proto11400614::default_instance_ = NULL;

Proto11400614* Proto11400614::New() const {
  return new Proto11400614;
}

void Proto11400614::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400614::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400614::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400614::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400614::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400614::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400614* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400614*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400614::MergeFrom(const Proto11400614& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400614::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400614::CopyFrom(const Proto11400614& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400614::IsInitialized() const {
  
  return true;
}

void Proto11400614::Swap(Proto11400614* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400614::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400614_descriptor_;
  metadata.reflection = Proto11400614_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400614::kItemIdFieldNumber;
#endif  // !_MSC_VER

Proto51400614::Proto51400614()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400614::InitAsDefaultInstance() {
}

Proto51400614::Proto51400614(const Proto51400614& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400614::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400614::~Proto51400614() {
  SharedDtor();
}

void Proto51400614::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400614::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400614::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400614_descriptor_;
}

const Proto51400614& Proto51400614::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto51400614* Proto51400614::default_instance_ = NULL;

Proto51400614* Proto51400614::New() const {
  return new Proto51400614;
}

void Proto51400614::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400614::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400614::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400614::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400614::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400614::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400614* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400614*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400614::MergeFrom(const Proto51400614& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400614::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400614::CopyFrom(const Proto51400614& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400614::IsInitialized() const {
  
  return true;
}

void Proto51400614::Swap(Proto51400614* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400614::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400614_descriptor_;
  metadata.reflection = Proto51400614_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400369::kLeftTimeFieldNumber;
const int Proto80400369::kAddExpFieldNumber;
const int Proto80400369::kLeftOpenTimeFieldNumber;
const int Proto80400369::kCurBloodFieldNumber;
const int Proto80400369::kTotalBloodFieldNumber;
const int Proto80400369::kTotalAddFieldNumber;
const int Proto80400369::kTypeFieldNumber;
const int Proto80400369::kFightTypeFieldNumber;
const int Proto80400369::kLegueNameFieldNumber;
#endif  // !_MSC_VER

Proto80400369::Proto80400369()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400369::InitAsDefaultInstance() {
}

Proto80400369::Proto80400369(const Proto80400369& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400369::SharedCtor() {
  _cached_size_ = 0;
  left_time_ = 0;
  add_exp_ = 0;
  left_open_time_ = 0;
  cur_blood_ = 0;
  total_blood_ = 0;
  total_add_ = 0;
  type_ = 0;
  fight_type_ = 0;
  legue_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400369::~Proto80400369() {
  SharedDtor();
}

void Proto80400369::SharedDtor() {
  if (legue_name_ != &::google::protobuf::internal::kEmptyString) {
    delete legue_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400369::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400369::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400369_descriptor_;
}

const Proto80400369& Proto80400369::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto80400369* Proto80400369::default_instance_ = NULL;

Proto80400369* Proto80400369::New() const {
  return new Proto80400369;
}

void Proto80400369::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_time_ = 0;
    add_exp_ = 0;
    left_open_time_ = 0;
    cur_blood_ = 0;
    total_blood_ = 0;
    total_add_ = 0;
    type_ = 0;
    fight_type_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_legue_name()) {
      if (legue_name_ != &::google::protobuf::internal::kEmptyString) {
        legue_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400369::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_add_exp;
        break;
      }
      
      // optional int32 add_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_add_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_exp_)));
          set_has_add_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left_open_time;
        break;
      }
      
      // optional int32 left_open_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_open_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_open_time_)));
          set_has_left_open_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_cur_blood;
        break;
      }
      
      // optional int32 cur_blood = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_blood_)));
          set_has_cur_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_total_blood;
        break;
      }
      
      // optional int32 total_blood = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_blood_)));
          set_has_total_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_total_add;
        break;
      }
      
      // optional int32 total_add = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_add:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_add_)));
          set_has_total_add();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_type;
        break;
      }
      
      // optional int32 type = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_fight_type;
        break;
      }
      
      // optional int32 fight_type = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_type_)));
          set_has_fight_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_legue_name;
        break;
      }
      
      // optional string legue_name = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_legue_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_legue_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->legue_name().data(), this->legue_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400369::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_time = 1;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_time(), output);
  }
  
  // optional int32 add_exp = 2;
  if (has_add_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->add_exp(), output);
  }
  
  // optional int32 left_open_time = 3;
  if (has_left_open_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_open_time(), output);
  }
  
  // optional int32 cur_blood = 4;
  if (has_cur_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cur_blood(), output);
  }
  
  // optional int32 total_blood = 5;
  if (has_total_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->total_blood(), output);
  }
  
  // optional int32 total_add = 6;
  if (has_total_add()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->total_add(), output);
  }
  
  // optional int32 type = 7;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->type(), output);
  }
  
  // optional int32 fight_type = 8;
  if (has_fight_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->fight_type(), output);
  }
  
  // optional string legue_name = 9;
  if (has_legue_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->legue_name().data(), this->legue_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->legue_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400369::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_time = 1;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_time(), target);
  }
  
  // optional int32 add_exp = 2;
  if (has_add_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->add_exp(), target);
  }
  
  // optional int32 left_open_time = 3;
  if (has_left_open_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_open_time(), target);
  }
  
  // optional int32 cur_blood = 4;
  if (has_cur_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cur_blood(), target);
  }
  
  // optional int32 total_blood = 5;
  if (has_total_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->total_blood(), target);
  }
  
  // optional int32 total_add = 6;
  if (has_total_add()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->total_add(), target);
  }
  
  // optional int32 type = 7;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->type(), target);
  }
  
  // optional int32 fight_type = 8;
  if (has_fight_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->fight_type(), target);
  }
  
  // optional string legue_name = 9;
  if (has_legue_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->legue_name().data(), this->legue_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->legue_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400369::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_time = 1;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 add_exp = 2;
    if (has_add_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_exp());
    }
    
    // optional int32 left_open_time = 3;
    if (has_left_open_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_open_time());
    }
    
    // optional int32 cur_blood = 4;
    if (has_cur_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_blood());
    }
    
    // optional int32 total_blood = 5;
    if (has_total_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_blood());
    }
    
    // optional int32 total_add = 6;
    if (has_total_add()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_add());
    }
    
    // optional int32 type = 7;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 fight_type = 8;
    if (has_fight_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_type());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string legue_name = 9;
    if (has_legue_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->legue_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400369::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400369* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400369*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400369::MergeFrom(const Proto80400369& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_add_exp()) {
      set_add_exp(from.add_exp());
    }
    if (from.has_left_open_time()) {
      set_left_open_time(from.left_open_time());
    }
    if (from.has_cur_blood()) {
      set_cur_blood(from.cur_blood());
    }
    if (from.has_total_blood()) {
      set_total_blood(from.total_blood());
    }
    if (from.has_total_add()) {
      set_total_add(from.total_add());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_fight_type()) {
      set_fight_type(from.fight_type());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_legue_name()) {
      set_legue_name(from.legue_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400369::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400369::CopyFrom(const Proto80400369& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400369::IsInitialized() const {
  
  return true;
}

void Proto80400369::Swap(Proto80400369* other) {
  if (other != this) {
    std::swap(left_time_, other->left_time_);
    std::swap(add_exp_, other->add_exp_);
    std::swap(left_open_time_, other->left_open_time_);
    std::swap(cur_blood_, other->cur_blood_);
    std::swap(total_blood_, other->total_blood_);
    std::swap(total_add_, other->total_add_);
    std::swap(type_, other->type_);
    std::swap(fight_type_, other->fight_type_);
    std::swap(legue_name_, other->legue_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400369::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400369_descriptor_;
  metadata.reflection = Proto80400369_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400615::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400615::Proto11400615()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400615::InitAsDefaultInstance() {
}

Proto11400615::Proto11400615(const Proto11400615& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400615::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400615::~Proto11400615() {
  SharedDtor();
}

void Proto11400615::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400615::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400615::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400615_descriptor_;
}

const Proto11400615& Proto11400615::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto11400615* Proto11400615::default_instance_ = NULL;

Proto11400615* Proto11400615::New() const {
  return new Proto11400615;
}

void Proto11400615::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400615::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400615::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400615::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400615::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400615::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400615* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400615*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400615::MergeFrom(const Proto11400615& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400615::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400615::CopyFrom(const Proto11400615& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400615::IsInitialized() const {
  
  return true;
}

void Proto11400615::Swap(Proto11400615* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400615::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400615_descriptor_;
  metadata.reflection = Proto11400615_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400615::kDiffValueFieldNumber;
#endif  // !_MSC_VER

Proto51400615::Proto51400615()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400615::InitAsDefaultInstance() {
}

Proto51400615::Proto51400615(const Proto51400615& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400615::SharedCtor() {
  _cached_size_ = 0;
  diff_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400615::~Proto51400615() {
  SharedDtor();
}

void Proto51400615::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400615::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400615::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400615_descriptor_;
}

const Proto51400615& Proto51400615::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto51400615* Proto51400615::default_instance_ = NULL;

Proto51400615* Proto51400615::New() const {
  return new Proto51400615;
}

void Proto51400615::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    diff_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400615::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 diff_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &diff_value_)));
          set_has_diff_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400615::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 diff_value = 1;
  if (has_diff_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->diff_value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400615::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 diff_value = 1;
  if (has_diff_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->diff_value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400615::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 diff_value = 1;
    if (has_diff_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->diff_value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400615::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400615* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400615*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400615::MergeFrom(const Proto51400615& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_diff_value()) {
      set_diff_value(from.diff_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400615::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400615::CopyFrom(const Proto51400615& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400615::IsInitialized() const {
  
  return true;
}

void Proto51400615::Swap(Proto51400615* other) {
  if (other != this) {
    std::swap(diff_value_, other->diff_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400615::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400615_descriptor_;
  metadata.reflection = Proto51400615_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400120::kIndexFieldNumber;
const int Proto11400120::kNameFieldNumber;
#endif  // !_MSC_VER

Proto11400120::Proto11400120()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400120::InitAsDefaultInstance() {
}

Proto11400120::Proto11400120(const Proto11400120& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400120::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400120::~Proto11400120() {
  SharedDtor();
}

void Proto11400120::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Proto11400120::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400120::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400120_descriptor_;
}

const Proto11400120& Proto11400120::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto11400120* Proto11400120::default_instance_ = NULL;

Proto11400120* Proto11400120::New() const {
  return new Proto11400120;
}

void Proto11400120::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400120::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400120::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400120::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400120::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400120::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400120* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400120*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400120::MergeFrom(const Proto11400120& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400120::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400120::CopyFrom(const Proto11400120& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400120::IsInitialized() const {
  
  return true;
}

void Proto11400120::Swap(Proto11400120* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400120::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400120_descriptor_;
  metadata.reflection = Proto11400120_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400121::kIndexFieldNumber;
const int Proto11400121::kNameFieldNumber;
#endif  // !_MSC_VER

Proto11400121::Proto11400121()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400121::InitAsDefaultInstance() {
}

Proto11400121::Proto11400121(const Proto11400121& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400121::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400121::~Proto11400121() {
  SharedDtor();
}

void Proto11400121::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Proto11400121::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400121::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400121_descriptor_;
}

const Proto11400121& Proto11400121::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto11400121* Proto11400121::default_instance_ = NULL;

Proto11400121* Proto11400121::New() const {
  return new Proto11400121;
}

void Proto11400121::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400121::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400121::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400121::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400121::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400121::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400121* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400121*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400121::MergeFrom(const Proto11400121& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400121::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400121::CopyFrom(const Proto11400121& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400121::IsInitialized() const {
  
  return true;
}

void Proto11400121::Swap(Proto11400121* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400121::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400121_descriptor_;
  metadata.reflection = Proto11400121_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80401302::kLeftSecFieldNumber;
#endif  // !_MSC_VER

Proto80401302::Proto80401302()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80401302::InitAsDefaultInstance() {
}

Proto80401302::Proto80401302(const Proto80401302& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80401302::SharedCtor() {
  _cached_size_ = 0;
  left_sec_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80401302::~Proto80401302() {
  SharedDtor();
}

void Proto80401302::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80401302::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80401302::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80401302_descriptor_;
}

const Proto80401302& Proto80401302::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto80401302* Proto80401302::default_instance_ = NULL;

Proto80401302* Proto80401302::New() const {
  return new Proto80401302;
}

void Proto80401302::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_sec_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80401302::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_sec = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_sec_)));
          set_has_left_sec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80401302::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_sec = 1;
  if (has_left_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_sec(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80401302::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_sec = 1;
  if (has_left_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_sec(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80401302::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_sec = 1;
    if (has_left_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_sec());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80401302::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80401302* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80401302*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80401302::MergeFrom(const Proto80401302& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_sec()) {
      set_left_sec(from.left_sec());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80401302::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80401302::CopyFrom(const Proto80401302& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80401302::IsInitialized() const {
  
  return true;
}

void Proto80401302::Swap(Proto80401302* other) {
  if (other != this) {
    std::swap(left_sec_, other->left_sec_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80401302::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80401302_descriptor_;
  metadata.reflection = Proto80401302_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80401303::kFloorFieldNumber;
#endif  // !_MSC_VER

Proto80401303::Proto80401303()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80401303::InitAsDefaultInstance() {
}

Proto80401303::Proto80401303(const Proto80401303& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80401303::SharedCtor() {
  _cached_size_ = 0;
  floor_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80401303::~Proto80401303() {
  SharedDtor();
}

void Proto80401303::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80401303::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80401303::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80401303_descriptor_;
}

const Proto80401303& Proto80401303::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto80401303* Proto80401303::default_instance_ = NULL;

Proto80401303* Proto80401303::New() const {
  return new Proto80401303;
}

void Proto80401303::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    floor_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80401303::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 floor = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &floor_)));
          set_has_floor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80401303::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 floor = 1;
  if (has_floor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->floor(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80401303::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 floor = 1;
  if (has_floor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->floor(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80401303::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 floor = 1;
    if (has_floor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->floor());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80401303::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80401303* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80401303*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80401303::MergeFrom(const Proto80401303& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_floor()) {
      set_floor(from.floor());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80401303::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80401303::CopyFrom(const Proto80401303& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80401303::IsInitialized() const {
  
  return true;
}

void Proto80401303::Swap(Proto80401303* other) {
  if (other != this) {
    std::swap(floor_, other->floor_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80401303::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80401303_descriptor_;
  metadata.reflection = Proto80401303_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401302::kCurFloorFieldNumber;
const int Proto50401302::kMyRankFieldNumber;
const int Proto50401302::kMyExploitFieldNumber;
const int Proto50401302::kTotalKillFieldNumber;
const int Proto50401302::kCurKillPlayerFieldNumber;
const int Proto50401302::kFloorKillPlayerFieldNumber;
const int Proto50401302::kCurBekillAmountFieldNumber;
const int Proto50401302::kBekillAmountFieldNumber;
const int Proto50401302::kPerSecFieldNumber;
const int Proto50401302::kPerExploitFieldNumber;
const int Proto50401302::kLeftTickFieldNumber;
#endif  // !_MSC_VER

Proto50401302::Proto50401302()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401302::InitAsDefaultInstance() {
}

Proto50401302::Proto50401302(const Proto50401302& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401302::SharedCtor() {
  _cached_size_ = 0;
  cur_floor_ = 0;
  my_rank_ = 0;
  my_exploit_ = 0;
  total_kill_ = 0;
  cur_kill_player_ = 0;
  floor_kill_player_ = 0;
  cur_bekill_amount_ = 0;
  bekill_amount_ = 0;
  per_sec_ = 0;
  per_exploit_ = 0;
  left_tick_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401302::~Proto50401302() {
  SharedDtor();
}

void Proto50401302::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50401302::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401302::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401302_descriptor_;
}

const Proto50401302& Proto50401302::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto50401302* Proto50401302::default_instance_ = NULL;

Proto50401302* Proto50401302::New() const {
  return new Proto50401302;
}

void Proto50401302::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_floor_ = 0;
    my_rank_ = 0;
    my_exploit_ = 0;
    total_kill_ = 0;
    cur_kill_player_ = 0;
    floor_kill_player_ = 0;
    cur_bekill_amount_ = 0;
    bekill_amount_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    per_sec_ = 0;
    per_exploit_ = 0;
    left_tick_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401302::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_floor = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_floor_)));
          set_has_cur_floor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_my_rank;
        break;
      }
      
      // optional int32 my_rank = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_my_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &my_rank_)));
          set_has_my_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_my_exploit;
        break;
      }
      
      // optional int32 my_exploit = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_my_exploit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &my_exploit_)));
          set_has_my_exploit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_total_kill;
        break;
      }
      
      // optional int32 total_kill = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_kill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_kill_)));
          set_has_total_kill();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_cur_kill_player;
        break;
      }
      
      // optional int32 cur_kill_player = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_kill_player:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_kill_player_)));
          set_has_cur_kill_player();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_floor_kill_player;
        break;
      }
      
      // optional int32 floor_kill_player = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_floor_kill_player:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &floor_kill_player_)));
          set_has_floor_kill_player();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_cur_bekill_amount;
        break;
      }
      
      // optional int32 cur_bekill_amount = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_bekill_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_bekill_amount_)));
          set_has_cur_bekill_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_bekill_amount;
        break;
      }
      
      // optional int32 bekill_amount = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bekill_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bekill_amount_)));
          set_has_bekill_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_per_sec;
        break;
      }
      
      // optional int32 per_sec = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_per_sec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &per_sec_)));
          set_has_per_sec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_per_exploit;
        break;
      }
      
      // optional int32 per_exploit = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_per_exploit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &per_exploit_)));
          set_has_per_exploit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_left_tick;
        break;
      }
      
      // optional int32 left_tick = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_tick_)));
          set_has_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401302::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_floor = 1;
  if (has_cur_floor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_floor(), output);
  }
  
  // optional int32 my_rank = 2;
  if (has_my_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->my_rank(), output);
  }
  
  // optional int32 my_exploit = 3;
  if (has_my_exploit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->my_exploit(), output);
  }
  
  // optional int32 total_kill = 4;
  if (has_total_kill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->total_kill(), output);
  }
  
  // optional int32 cur_kill_player = 5;
  if (has_cur_kill_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cur_kill_player(), output);
  }
  
  // optional int32 floor_kill_player = 6;
  if (has_floor_kill_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->floor_kill_player(), output);
  }
  
  // optional int32 cur_bekill_amount = 7;
  if (has_cur_bekill_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->cur_bekill_amount(), output);
  }
  
  // optional int32 bekill_amount = 8;
  if (has_bekill_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->bekill_amount(), output);
  }
  
  // optional int32 per_sec = 9;
  if (has_per_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->per_sec(), output);
  }
  
  // optional int32 per_exploit = 10;
  if (has_per_exploit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->per_exploit(), output);
  }
  
  // optional int32 left_tick = 11;
  if (has_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->left_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401302::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_floor = 1;
  if (has_cur_floor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_floor(), target);
  }
  
  // optional int32 my_rank = 2;
  if (has_my_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->my_rank(), target);
  }
  
  // optional int32 my_exploit = 3;
  if (has_my_exploit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->my_exploit(), target);
  }
  
  // optional int32 total_kill = 4;
  if (has_total_kill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->total_kill(), target);
  }
  
  // optional int32 cur_kill_player = 5;
  if (has_cur_kill_player()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cur_kill_player(), target);
  }
  
  // optional int32 floor_kill_player = 6;
  if (has_floor_kill_player()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->floor_kill_player(), target);
  }
  
  // optional int32 cur_bekill_amount = 7;
  if (has_cur_bekill_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->cur_bekill_amount(), target);
  }
  
  // optional int32 bekill_amount = 8;
  if (has_bekill_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->bekill_amount(), target);
  }
  
  // optional int32 per_sec = 9;
  if (has_per_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->per_sec(), target);
  }
  
  // optional int32 per_exploit = 10;
  if (has_per_exploit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->per_exploit(), target);
  }
  
  // optional int32 left_tick = 11;
  if (has_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->left_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401302::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_floor = 1;
    if (has_cur_floor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_floor());
    }
    
    // optional int32 my_rank = 2;
    if (has_my_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->my_rank());
    }
    
    // optional int32 my_exploit = 3;
    if (has_my_exploit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->my_exploit());
    }
    
    // optional int32 total_kill = 4;
    if (has_total_kill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_kill());
    }
    
    // optional int32 cur_kill_player = 5;
    if (has_cur_kill_player()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_kill_player());
    }
    
    // optional int32 floor_kill_player = 6;
    if (has_floor_kill_player()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->floor_kill_player());
    }
    
    // optional int32 cur_bekill_amount = 7;
    if (has_cur_bekill_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_bekill_amount());
    }
    
    // optional int32 bekill_amount = 8;
    if (has_bekill_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bekill_amount());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 per_sec = 9;
    if (has_per_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->per_sec());
    }
    
    // optional int32 per_exploit = 10;
    if (has_per_exploit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->per_exploit());
    }
    
    // optional int32 left_tick = 11;
    if (has_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_tick());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401302::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401302* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401302*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401302::MergeFrom(const Proto50401302& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_floor()) {
      set_cur_floor(from.cur_floor());
    }
    if (from.has_my_rank()) {
      set_my_rank(from.my_rank());
    }
    if (from.has_my_exploit()) {
      set_my_exploit(from.my_exploit());
    }
    if (from.has_total_kill()) {
      set_total_kill(from.total_kill());
    }
    if (from.has_cur_kill_player()) {
      set_cur_kill_player(from.cur_kill_player());
    }
    if (from.has_floor_kill_player()) {
      set_floor_kill_player(from.floor_kill_player());
    }
    if (from.has_cur_bekill_amount()) {
      set_cur_bekill_amount(from.cur_bekill_amount());
    }
    if (from.has_bekill_amount()) {
      set_bekill_amount(from.bekill_amount());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_per_sec()) {
      set_per_sec(from.per_sec());
    }
    if (from.has_per_exploit()) {
      set_per_exploit(from.per_exploit());
    }
    if (from.has_left_tick()) {
      set_left_tick(from.left_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401302::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401302::CopyFrom(const Proto50401302& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401302::IsInitialized() const {
  
  return true;
}

void Proto50401302::Swap(Proto50401302* other) {
  if (other != this) {
    std::swap(cur_floor_, other->cur_floor_);
    std::swap(my_rank_, other->my_rank_);
    std::swap(my_exploit_, other->my_exploit_);
    std::swap(total_kill_, other->total_kill_);
    std::swap(cur_kill_player_, other->cur_kill_player_);
    std::swap(floor_kill_player_, other->floor_kill_player_);
    std::swap(cur_bekill_amount_, other->cur_bekill_amount_);
    std::swap(bekill_amount_, other->bekill_amount_);
    std::swap(per_sec_, other->per_sec_);
    std::swap(per_exploit_, other->per_exploit_);
    std::swap(left_tick_, other->left_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401302::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401302_descriptor_;
  metadata.reflection = Proto50401302_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10401303::kIsFreshFieldNumber;
#endif  // !_MSC_VER

Proto10401303::Proto10401303()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10401303::InitAsDefaultInstance() {
}

Proto10401303::Proto10401303(const Proto10401303& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10401303::SharedCtor() {
  _cached_size_ = 0;
  is_fresh_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10401303::~Proto10401303() {
  SharedDtor();
}

void Proto10401303::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10401303::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10401303::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10401303_descriptor_;
}

const Proto10401303& Proto10401303::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto10401303* Proto10401303::default_instance_ = NULL;

Proto10401303* Proto10401303::New() const {
  return new Proto10401303;
}

void Proto10401303::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_fresh_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10401303::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 is_fresh = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_fresh_)));
          set_has_is_fresh();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10401303::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 is_fresh = 1;
  if (has_is_fresh()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->is_fresh(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10401303::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 is_fresh = 1;
  if (has_is_fresh()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->is_fresh(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10401303::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 is_fresh = 1;
    if (has_is_fresh()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_fresh());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10401303::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10401303* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10401303*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10401303::MergeFrom(const Proto10401303& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_fresh()) {
      set_is_fresh(from.is_fresh());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10401303::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10401303::CopyFrom(const Proto10401303& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10401303::IsInitialized() const {
  
  return true;
}

void Proto10401303::Swap(Proto10401303* other) {
  if (other != this) {
    std::swap(is_fresh_, other->is_fresh_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10401303::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10401303_descriptor_;
  metadata.reflection = Proto10401303_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401303::kMyRankFieldNumber;
const int Proto50401303::kPeakWarListFieldNumber;
#endif  // !_MSC_VER

Proto50401303::Proto50401303()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401303::InitAsDefaultInstance() {
}

Proto50401303::Proto50401303(const Proto50401303& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401303::SharedCtor() {
  _cached_size_ = 0;
  my_rank_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401303::~Proto50401303() {
  SharedDtor();
}

void Proto50401303::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50401303::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401303::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401303_descriptor_;
}

const Proto50401303& Proto50401303::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto50401303* Proto50401303::default_instance_ = NULL;

Proto50401303* Proto50401303::New() const {
  return new Proto50401303;
}

void Proto50401303::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    my_rank_ = 0;
  }
  peak_war_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401303::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 my_rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &my_rank_)));
          set_has_my_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_peak_war_list;
        break;
      }
      
      // repeated .ProtoPeakWarRank peak_war_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_peak_war_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_peak_war_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_peak_war_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401303::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 my_rank = 1;
  if (has_my_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->my_rank(), output);
  }
  
  // repeated .ProtoPeakWarRank peak_war_list = 2;
  for (int i = 0; i < this->peak_war_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->peak_war_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401303::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 my_rank = 1;
  if (has_my_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->my_rank(), target);
  }
  
  // repeated .ProtoPeakWarRank peak_war_list = 2;
  for (int i = 0; i < this->peak_war_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->peak_war_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401303::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 my_rank = 1;
    if (has_my_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->my_rank());
    }
    
  }
  // repeated .ProtoPeakWarRank peak_war_list = 2;
  total_size += 1 * this->peak_war_list_size();
  for (int i = 0; i < this->peak_war_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->peak_war_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401303::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401303* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401303*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401303::MergeFrom(const Proto50401303& from) {
  GOOGLE_CHECK_NE(&from, this);
  peak_war_list_.MergeFrom(from.peak_war_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_my_rank()) {
      set_my_rank(from.my_rank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401303::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401303::CopyFrom(const Proto50401303& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401303::IsInitialized() const {
  
  return true;
}

void Proto50401303::Swap(Proto50401303* other) {
  if (other != this) {
    std::swap(my_rank_, other->my_rank_);
    peak_war_list_.Swap(&other->peak_war_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401303::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401303_descriptor_;
  metadata.reflection = Proto50401303_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400007::kActIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400007::Proto11400007()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400007::InitAsDefaultInstance() {
}

Proto11400007::Proto11400007(const Proto11400007& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400007::SharedCtor() {
  _cached_size_ = 0;
  act_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400007::~Proto11400007() {
  SharedDtor();
}

void Proto11400007::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400007::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400007::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400007_descriptor_;
}

const Proto11400007& Proto11400007::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto11400007* Proto11400007::default_instance_ = NULL;

Proto11400007* Proto11400007::New() const {
  return new Proto11400007;
}

void Proto11400007::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    act_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400007::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 act_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_index_)));
          set_has_act_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400007::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 act_index = 1;
  if (has_act_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->act_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400007::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 act_index = 1;
  if (has_act_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->act_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400007::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 act_index = 1;
    if (has_act_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400007::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400007* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400007*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400007::MergeFrom(const Proto11400007& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_act_index()) {
      set_act_index(from.act_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400007::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400007::CopyFrom(const Proto11400007& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400007::IsInitialized() const {
  
  return true;
}

void Proto11400007::Swap(Proto11400007* other) {
  if (other != this) {
    std::swap(act_index_, other->act_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400007::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400007_descriptor_;
  metadata.reflection = Proto11400007_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400007::kActDetailFieldNumber;
#endif  // !_MSC_VER

Proto51400007::Proto51400007()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400007::InitAsDefaultInstance() {
  act_detail_ = const_cast< ::PActTypeItem*>(&::PActTypeItem::default_instance());
}

Proto51400007::Proto51400007(const Proto51400007& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400007::SharedCtor() {
  _cached_size_ = 0;
  act_detail_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400007::~Proto51400007() {
  SharedDtor();
}

void Proto51400007::SharedDtor() {
  if (this != default_instance_) {
    delete act_detail_;
  }
}

void Proto51400007::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400007::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400007_descriptor_;
}

const Proto51400007& Proto51400007::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto51400007* Proto51400007::default_instance_ = NULL;

Proto51400007* Proto51400007::New() const {
  return new Proto51400007;
}

void Proto51400007::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_act_detail()) {
      if (act_detail_ != NULL) act_detail_->::PActTypeItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400007::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PActTypeItem act_detail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_act_detail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400007::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .PActTypeItem act_detail = 1;
  if (has_act_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->act_detail(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400007::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .PActTypeItem act_detail = 1;
  if (has_act_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->act_detail(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400007::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PActTypeItem act_detail = 1;
    if (has_act_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->act_detail());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400007::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400007* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400007*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400007::MergeFrom(const Proto51400007& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_act_detail()) {
      mutable_act_detail()->::PActTypeItem::MergeFrom(from.act_detail());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400007::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400007::CopyFrom(const Proto51400007& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400007::IsInitialized() const {
  
  return true;
}

void Proto51400007::Swap(Proto51400007* other) {
  if (other != this) {
    std::swap(act_detail_, other->act_detail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400007::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400007_descriptor_;
  metadata.reflection = Proto51400007_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400008::kActIndexFieldNumber;
const int Proto11400008::kRewardIndexFieldNumber;
const int Proto11400008::kRewardNumFieldNumber;
#endif  // !_MSC_VER

Proto11400008::Proto11400008()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400008::InitAsDefaultInstance() {
}

Proto11400008::Proto11400008(const Proto11400008& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400008::SharedCtor() {
  _cached_size_ = 0;
  act_index_ = 0;
  reward_index_ = 0;
  reward_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400008::~Proto11400008() {
  SharedDtor();
}

void Proto11400008::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400008::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400008::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400008_descriptor_;
}

const Proto11400008& Proto11400008::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto11400008* Proto11400008::default_instance_ = NULL;

Proto11400008* Proto11400008::New() const {
  return new Proto11400008;
}

void Proto11400008::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    act_index_ = 0;
    reward_index_ = 0;
    reward_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400008::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 act_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_index_)));
          set_has_act_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_reward_index;
        break;
      }
      
      // optional int32 reward_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_index_)));
          set_has_reward_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_reward_num;
        break;
      }
      
      // optional int32 reward_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_num_)));
          set_has_reward_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400008::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 act_index = 1;
  if (has_act_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->act_index(), output);
  }
  
  // optional int32 reward_index = 2;
  if (has_reward_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reward_index(), output);
  }
  
  // optional int32 reward_num = 3;
  if (has_reward_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->reward_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400008::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 act_index = 1;
  if (has_act_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->act_index(), target);
  }
  
  // optional int32 reward_index = 2;
  if (has_reward_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reward_index(), target);
  }
  
  // optional int32 reward_num = 3;
  if (has_reward_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->reward_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400008::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 act_index = 1;
    if (has_act_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_index());
    }
    
    // optional int32 reward_index = 2;
    if (has_reward_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_index());
    }
    
    // optional int32 reward_num = 3;
    if (has_reward_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400008::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400008* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400008*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400008::MergeFrom(const Proto11400008& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_act_index()) {
      set_act_index(from.act_index());
    }
    if (from.has_reward_index()) {
      set_reward_index(from.reward_index());
    }
    if (from.has_reward_num()) {
      set_reward_num(from.reward_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400008::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400008::CopyFrom(const Proto11400008& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400008::IsInitialized() const {
  
  return true;
}

void Proto11400008::Swap(Proto11400008* other) {
  if (other != this) {
    std::swap(act_index_, other->act_index_);
    std::swap(reward_index_, other->reward_index_);
    std::swap(reward_num_, other->reward_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400008::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400008_descriptor_;
  metadata.reflection = Proto11400008_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400008::kActIndexFieldNumber;
const int Proto51400008::kRewardInfoFieldNumber;
#endif  // !_MSC_VER

Proto51400008::Proto51400008()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400008::InitAsDefaultInstance() {
}

Proto51400008::Proto51400008(const Proto51400008& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400008::SharedCtor() {
  _cached_size_ = 0;
  act_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400008::~Proto51400008() {
  SharedDtor();
}

void Proto51400008::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400008::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400008::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400008_descriptor_;
}

const Proto51400008& Proto51400008::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto51400008* Proto51400008::default_instance_ = NULL;

Proto51400008* Proto51400008::New() const {
  return new Proto51400008;
}

void Proto51400008::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    act_index_ = 0;
  }
  reward_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400008::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 act_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_index_)));
          set_has_act_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_reward_info;
        break;
      }
      
      // repeated .ProtoPairObj reward_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_reward_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_reward_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400008::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 act_index = 1;
  if (has_act_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->act_index(), output);
  }
  
  // repeated .ProtoPairObj reward_info = 2;
  for (int i = 0; i < this->reward_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->reward_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400008::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 act_index = 1;
  if (has_act_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->act_index(), target);
  }
  
  // repeated .ProtoPairObj reward_info = 2;
  for (int i = 0; i < this->reward_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->reward_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400008::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 act_index = 1;
    if (has_act_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_index());
    }
    
  }
  // repeated .ProtoPairObj reward_info = 2;
  total_size += 1 * this->reward_info_size();
  for (int i = 0; i < this->reward_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400008::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400008* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400008*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400008::MergeFrom(const Proto51400008& from) {
  GOOGLE_CHECK_NE(&from, this);
  reward_info_.MergeFrom(from.reward_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_act_index()) {
      set_act_index(from.act_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400008::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400008::CopyFrom(const Proto51400008& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400008::IsInitialized() const {
  
  return true;
}

void Proto51400008::Swap(Proto51400008* other) {
  if (other != this) {
    std::swap(act_index_, other->act_index_);
    reward_info_.Swap(&other->reward_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400008::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400008_descriptor_;
  metadata.reflection = Proto51400008_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400372::kStateFieldNumber;
const int Proto80400372::kEffectFieldNumber;
const int Proto80400372::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto80400372::Proto80400372()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400372::InitAsDefaultInstance() {
}

Proto80400372::Proto80400372(const Proto80400372& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400372::SharedCtor() {
  _cached_size_ = 0;
  state_ = 0;
  effect_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400372::~Proto80400372() {
  SharedDtor();
}

void Proto80400372::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400372::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400372::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400372_descriptor_;
}

const Proto80400372& Proto80400372::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto80400372* Proto80400372::default_instance_ = NULL;

Proto80400372* Proto80400372::New() const {
  return new Proto80400372;
}

void Proto80400372::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    state_ = 0;
    effect_ = 0;
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400372::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_effect;
        break;
      }
      
      // optional int32 effect = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_effect:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effect_)));
          set_has_effect();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_index;
        break;
      }
      
      // optional int32 index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400372::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->state(), output);
  }
  
  // optional int32 effect = 2;
  if (has_effect()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->effect(), output);
  }
  
  // optional int32 index = 3;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400372::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->state(), target);
  }
  
  // optional int32 effect = 2;
  if (has_effect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->effect(), target);
  }
  
  // optional int32 index = 3;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400372::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 state = 1;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
    // optional int32 effect = 2;
    if (has_effect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->effect());
    }
    
    // optional int32 index = 3;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400372::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400372* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400372*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400372::MergeFrom(const Proto80400372& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_effect()) {
      set_effect(from.effect());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400372::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400372::CopyFrom(const Proto80400372& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400372::IsInitialized() const {
  
  return true;
}

void Proto80400372::Swap(Proto80400372* other) {
  if (other != this) {
    std::swap(state_, other->state_);
    std::swap(effect_, other->effect_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400372::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400372_descriptor_;
  metadata.reflection = Proto80400372_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400115::kSpaceIdFieldNumber;
#endif  // !_MSC_VER

Proto80400115::Proto80400115()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400115::InitAsDefaultInstance() {
}

Proto80400115::Proto80400115(const Proto80400115& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400115::SharedCtor() {
  _cached_size_ = 0;
  space_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400115::~Proto80400115() {
  SharedDtor();
}

void Proto80400115::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400115::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400115::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400115_descriptor_;
}

const Proto80400115& Proto80400115::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto80400115* Proto80400115::default_instance_ = NULL;

Proto80400115* Proto80400115::New() const {
  return new Proto80400115;
}

void Proto80400115::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    space_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400115::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 space_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &space_id_)));
          set_has_space_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400115::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 space_id = 1;
  if (has_space_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->space_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400115::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 space_id = 1;
  if (has_space_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->space_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400115::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 space_id = 1;
    if (has_space_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->space_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400115::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400115* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400115*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400115::MergeFrom(const Proto80400115& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_space_id()) {
      set_space_id(from.space_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400115::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400115::CopyFrom(const Proto80400115& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400115::IsInitialized() const {
  
  return true;
}

void Proto80400115::Swap(Proto80400115* other) {
  if (other != this) {
    std::swap(space_id_, other->space_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400115::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400115_descriptor_;
  metadata.reflection = Proto80400115_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100633::kPageIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100633::Proto10100633()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100633::InitAsDefaultInstance() {
}

Proto10100633::Proto10100633(const Proto10100633& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100633::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100633::~Proto10100633() {
  SharedDtor();
}

void Proto10100633::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100633::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100633::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100633_descriptor_;
}

const Proto10100633& Proto10100633::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto10100633* Proto10100633::default_instance_ = NULL;

Proto10100633* Proto10100633::New() const {
  return new Proto10100633;
}

void Proto10100633::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100633::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100633::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100633::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100633::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100633::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100633* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100633*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100633::MergeFrom(const Proto10100633& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100633::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100633::CopyFrom(const Proto10100633& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100633::IsInitialized() const {
  
  return true;
}

void Proto10100633::Swap(Proto10100633* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100633::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100633_descriptor_;
  metadata.reflection = Proto10100633_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100633::kPageIndexFieldNumber;
const int Proto50100633::kTotalPageFieldNumber;
const int Proto50100633::kLeagueSetFieldNumber;
#endif  // !_MSC_VER

Proto50100633::Proto50100633()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100633::InitAsDefaultInstance() {
}

Proto50100633::Proto50100633(const Proto50100633& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100633::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  total_page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100633::~Proto50100633() {
  SharedDtor();
}

void Proto50100633::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100633::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100633::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100633_descriptor_;
}

const Proto50100633& Proto50100633::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto50100633* Proto50100633::default_instance_ = NULL;

Proto50100633* Proto50100633::New() const {
  return new Proto50100633;
}

void Proto50100633::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
    total_page_ = 0;
  }
  league_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100633::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_league_set;
        break;
      }
      
      // repeated .ProtoLeagueItem league_set = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_league_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_league_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100633::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  // optional int32 total_page = 2;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_page(), output);
  }
  
  // repeated .ProtoLeagueItem league_set = 3;
  for (int i = 0; i < this->league_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->league_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100633::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  // optional int32 total_page = 2;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_page(), target);
  }
  
  // repeated .ProtoLeagueItem league_set = 3;
  for (int i = 0; i < this->league_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->league_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100633::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
    // optional int32 total_page = 2;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
  }
  // repeated .ProtoLeagueItem league_set = 3;
  total_size += 1 * this->league_set_size();
  for (int i = 0; i < this->league_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->league_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100633::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100633* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100633*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100633::MergeFrom(const Proto50100633& from) {
  GOOGLE_CHECK_NE(&from, this);
  league_set_.MergeFrom(from.league_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100633::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100633::CopyFrom(const Proto50100633& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100633::IsInitialized() const {
  
  return true;
}

void Proto50100633::Swap(Proto50100633* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(total_page_, other->total_page_);
    league_set_.Swap(&other->league_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100633::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100633_descriptor_;
  metadata.reflection = Proto50100633_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400324::kLeagueIdFieldNumber;
#endif  // !_MSC_VER

Proto10400324::Proto10400324()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400324::InitAsDefaultInstance() {
}

Proto10400324::Proto10400324(const Proto10400324& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400324::SharedCtor() {
  _cached_size_ = 0;
  league_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400324::~Proto10400324() {
  SharedDtor();
}

void Proto10400324::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400324::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400324::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400324_descriptor_;
}

const Proto10400324& Proto10400324::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto10400324* Proto10400324::default_instance_ = NULL;

Proto10400324* Proto10400324::New() const {
  return new Proto10400324;
}

void Proto10400324::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400324::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 league_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_id_)));
          set_has_league_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400324::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 league_id = 1;
  if (has_league_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->league_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400324::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 league_id = 1;
  if (has_league_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->league_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400324::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 league_id = 1;
    if (has_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400324::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400324* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400324*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400324::MergeFrom(const Proto10400324& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_id()) {
      set_league_id(from.league_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400324::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400324::CopyFrom(const Proto10400324& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400324::IsInitialized() const {
  
  return true;
}

void Proto10400324::Swap(Proto10400324* other) {
  if (other != this) {
    std::swap(league_id_, other->league_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400324::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400324_descriptor_;
  metadata.reflection = Proto10400324_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100648::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto10100648::Proto10100648()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100648::InitAsDefaultInstance() {
}

Proto10100648::Proto10100648(const Proto10100648& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100648::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100648::~Proto10100648() {
  SharedDtor();
}

void Proto10100648::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100648::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100648::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100648_descriptor_;
}

const Proto10100648& Proto10100648::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto10100648* Proto10100648::default_instance_ = NULL;

Proto10100648* Proto10100648::New() const {
  return new Proto10100648;
}

void Proto10100648::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100648::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100648::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100648::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100648::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100648::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100648* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100648*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100648::MergeFrom(const Proto10100648& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100648::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100648::CopyFrom(const Proto10100648& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100648::IsInitialized() const {
  
  return true;
}

void Proto10100648::Swap(Proto10100648* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100648::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100648_descriptor_;
  metadata.reflection = Proto10100648_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100648::kSameFlagFieldNumber;
#endif  // !_MSC_VER

Proto50100648::Proto50100648()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100648::InitAsDefaultInstance() {
}

Proto50100648::Proto50100648(const Proto50100648& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100648::SharedCtor() {
  _cached_size_ = 0;
  same_flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100648::~Proto50100648() {
  SharedDtor();
}

void Proto50100648::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100648::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100648::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100648_descriptor_;
}

const Proto50100648& Proto50100648::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto50100648* Proto50100648::default_instance_ = NULL;

Proto50100648* Proto50100648::New() const {
  return new Proto50100648;
}

void Proto50100648::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    same_flag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100648::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 same_flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &same_flag_)));
          set_has_same_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100648::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 same_flag = 1;
  if (has_same_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->same_flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100648::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 same_flag = 1;
  if (has_same_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->same_flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100648::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 same_flag = 1;
    if (has_same_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->same_flag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100648::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100648* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100648*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100648::MergeFrom(const Proto50100648& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_same_flag()) {
      set_same_flag(from.same_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100648::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100648::CopyFrom(const Proto50100648& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100648::IsInitialized() const {
  
  return true;
}

void Proto50100648::Swap(Proto50100648* other) {
  if (other != this) {
    std::swap(same_flag_, other->same_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100648::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100648_descriptor_;
  metadata.reflection = Proto50100648_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10401522::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto10401522::Proto10401522()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10401522::InitAsDefaultInstance() {
}

Proto10401522::Proto10401522(const Proto10401522& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10401522::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10401522::~Proto10401522() {
  SharedDtor();
}

void Proto10401522::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10401522::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10401522::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10401522_descriptor_;
}

const Proto10401522& Proto10401522::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto10401522* Proto10401522::default_instance_ = NULL;

Proto10401522* Proto10401522::New() const {
  return new Proto10401522;
}

void Proto10401522::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10401522::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10401522::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10401522::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10401522::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10401522::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10401522* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10401522*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10401522::MergeFrom(const Proto10401522& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10401522::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10401522::CopyFrom(const Proto10401522& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10401522::IsInitialized() const {
  
  return true;
}

void Proto10401522::Swap(Proto10401522* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10401522::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10401522_descriptor_;
  metadata.reflection = Proto10401522_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401522::kAiIdFieldNumber;
const int Proto50401522::kStartTickFieldNumber;
const int Proto50401522::kPlayerIdFieldNumber;
const int Proto50401522::kPlayerNameFieldNumber;
const int Proto50401522::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto50401522::Proto50401522()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401522::InitAsDefaultInstance() {
}

Proto50401522::Proto50401522(const Proto50401522& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401522::SharedCtor() {
  _cached_size_ = 0;
  ai_id_ = GOOGLE_LONGLONG(0);
  start_tick_ = GOOGLE_LONGLONG(0);
  player_id_ = GOOGLE_LONGLONG(0);
  player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401522::~Proto50401522() {
  SharedDtor();
}

void Proto50401522::SharedDtor() {
  if (player_name_ != &::google::protobuf::internal::kEmptyString) {
    delete player_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto50401522::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401522::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401522_descriptor_;
}

const Proto50401522& Proto50401522::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto50401522* Proto50401522::default_instance_ = NULL;

Proto50401522* Proto50401522::New() const {
  return new Proto50401522;
}

void Proto50401522::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ai_id_ = GOOGLE_LONGLONG(0);
    start_tick_ = GOOGLE_LONGLONG(0);
    player_id_ = GOOGLE_LONGLONG(0);
    if (has_player_name()) {
      if (player_name_ != &::google::protobuf::internal::kEmptyString) {
        player_name_->clear();
      }
    }
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401522::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ai_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ai_id_)));
          set_has_ai_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_start_tick;
        break;
      }
      
      // optional int64 start_tick = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_tick_)));
          set_has_start_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_player_id;
        break;
      }
      
      // optional int64 player_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
          set_has_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_player_name;
        break;
      }
      
      // optional string player_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_player_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_player_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->player_name().data(), this->player_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }
      
      // optional int32 type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401522::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 ai_id = 1;
  if (has_ai_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ai_id(), output);
  }
  
  // optional int64 start_tick = 2;
  if (has_start_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->start_tick(), output);
  }
  
  // optional int64 player_id = 3;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->player_id(), output);
  }
  
  // optional string player_name = 4;
  if (has_player_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->player_name().data(), this->player_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->player_name(), output);
  }
  
  // optional int32 type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401522::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 ai_id = 1;
  if (has_ai_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ai_id(), target);
  }
  
  // optional int64 start_tick = 2;
  if (has_start_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->start_tick(), target);
  }
  
  // optional int64 player_id = 3;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->player_id(), target);
  }
  
  // optional string player_name = 4;
  if (has_player_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->player_name().data(), this->player_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->player_name(), target);
  }
  
  // optional int32 type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401522::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 ai_id = 1;
    if (has_ai_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ai_id());
    }
    
    // optional int64 start_tick = 2;
    if (has_start_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_tick());
    }
    
    // optional int64 player_id = 3;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_id());
    }
    
    // optional string player_name = 4;
    if (has_player_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->player_name());
    }
    
    // optional int32 type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401522::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401522* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401522*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401522::MergeFrom(const Proto50401522& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ai_id()) {
      set_ai_id(from.ai_id());
    }
    if (from.has_start_tick()) {
      set_start_tick(from.start_tick());
    }
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
    if (from.has_player_name()) {
      set_player_name(from.player_name());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401522::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401522::CopyFrom(const Proto50401522& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401522::IsInitialized() const {
  
  return true;
}

void Proto50401522::Swap(Proto50401522* other) {
  if (other != this) {
    std::swap(ai_id_, other->ai_id_);
    std::swap(start_tick_, other->start_tick_);
    std::swap(player_id_, other->player_id_);
    std::swap(player_name_, other->player_name_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401522::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401522_descriptor_;
  metadata.reflection = Proto50401522_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401523::kEscortTimesFieldNumber;
const int Proto50401523::kRobTimesFieldNumber;
const int Proto50401523::kProtectTimesFieldNumber;
const int Proto50401523::kWishTimesFieldNumber;
const int Proto50401523::kConvoyExpFieldNumber;
const int Proto50401523::kCurLevelFieldNumber;
const int Proto50401523::kTimeLimitFieldNumber;
const int Proto50401523::kStartTickFieldNumber;
const int Proto50401523::kAiIdFieldNumber;
const int Proto50401523::kProtectNameListFieldNumber;
const int Proto50401523::kProtectIdListFieldNumber;
const int Proto50401523::kProtectPlayerIdFieldNumber;
const int Proto50401523::kProtectPlayerNameFieldNumber;
const int Proto50401523::kStopProtectIdFieldNumber;
const int Proto50401523::kStopProtectNameFieldNumber;
#endif  // !_MSC_VER

Proto50401523::Proto50401523()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401523::InitAsDefaultInstance() {
}

Proto50401523::Proto50401523(const Proto50401523& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401523::SharedCtor() {
  _cached_size_ = 0;
  escort_times_ = 0;
  rob_times_ = 0;
  protect_times_ = 0;
  wish_times_ = 0;
  convoy_exp_ = 0;
  cur_level_ = 0;
  time_limit_ = 0;
  start_tick_ = GOOGLE_LONGLONG(0);
  ai_id_ = GOOGLE_LONGLONG(0);
  protect_player_id_ = GOOGLE_LONGLONG(0);
  protect_player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stop_protect_id_ = GOOGLE_LONGLONG(0);
  stop_protect_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401523::~Proto50401523() {
  SharedDtor();
}

void Proto50401523::SharedDtor() {
  if (protect_player_name_ != &::google::protobuf::internal::kEmptyString) {
    delete protect_player_name_;
  }
  if (stop_protect_name_ != &::google::protobuf::internal::kEmptyString) {
    delete stop_protect_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto50401523::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401523::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401523_descriptor_;
}

const Proto50401523& Proto50401523::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto50401523* Proto50401523::default_instance_ = NULL;

Proto50401523* Proto50401523::New() const {
  return new Proto50401523;
}

void Proto50401523::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    escort_times_ = 0;
    rob_times_ = 0;
    protect_times_ = 0;
    wish_times_ = 0;
    convoy_exp_ = 0;
    cur_level_ = 0;
    time_limit_ = 0;
    start_tick_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    ai_id_ = GOOGLE_LONGLONG(0);
    protect_player_id_ = GOOGLE_LONGLONG(0);
    if (has_protect_player_name()) {
      if (protect_player_name_ != &::google::protobuf::internal::kEmptyString) {
        protect_player_name_->clear();
      }
    }
    stop_protect_id_ = GOOGLE_LONGLONG(0);
    if (has_stop_protect_name()) {
      if (stop_protect_name_ != &::google::protobuf::internal::kEmptyString) {
        stop_protect_name_->clear();
      }
    }
  }
  protect_name_list_.Clear();
  protect_id_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401523::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 escort_times = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &escort_times_)));
          set_has_escort_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_rob_times;
        break;
      }
      
      // optional int32 rob_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rob_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rob_times_)));
          set_has_rob_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_protect_times;
        break;
      }
      
      // optional int32 protect_times = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_protect_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &protect_times_)));
          set_has_protect_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_wish_times;
        break;
      }
      
      // optional int32 wish_times = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wish_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wish_times_)));
          set_has_wish_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_convoy_exp;
        break;
      }
      
      // optional int32 convoy_exp = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_convoy_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &convoy_exp_)));
          set_has_convoy_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_cur_level;
        break;
      }
      
      // optional int32 cur_level = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_level_)));
          set_has_cur_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_time_limit;
        break;
      }
      
      // optional int32 time_limit = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_limit_)));
          set_has_time_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_start_tick;
        break;
      }
      
      // optional int64 start_tick = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_tick_)));
          set_has_start_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_ai_id;
        break;
      }
      
      // optional int64 ai_id = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ai_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ai_id_)));
          set_has_ai_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_protect_name_list;
        break;
      }
      
      // repeated string protect_name_list = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_protect_name_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_protect_name_list()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->protect_name_list(0).data(), this->protect_name_list(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_protect_name_list;
        if (input->ExpectTag(88)) goto parse_protect_id_list;
        break;
      }
      
      // repeated int64 protect_id_list = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_protect_id_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 88, input, this->mutable_protect_id_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_protect_id_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_protect_id_list;
        if (input->ExpectTag(96)) goto parse_protect_player_id;
        break;
      }
      
      // optional int64 protect_player_id = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_protect_player_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &protect_player_id_)));
          set_has_protect_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_protect_player_name;
        break;
      }
      
      // optional string protect_player_name = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_protect_player_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protect_player_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->protect_player_name().data(), this->protect_player_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_stop_protect_id;
        break;
      }
      
      // optional int64 stop_protect_id = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stop_protect_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &stop_protect_id_)));
          set_has_stop_protect_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_stop_protect_name;
        break;
      }
      
      // optional string stop_protect_name = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_stop_protect_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stop_protect_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->stop_protect_name().data(), this->stop_protect_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401523::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 escort_times = 1;
  if (has_escort_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->escort_times(), output);
  }
  
  // optional int32 rob_times = 2;
  if (has_rob_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rob_times(), output);
  }
  
  // optional int32 protect_times = 3;
  if (has_protect_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->protect_times(), output);
  }
  
  // optional int32 wish_times = 4;
  if (has_wish_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->wish_times(), output);
  }
  
  // optional int32 convoy_exp = 5;
  if (has_convoy_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->convoy_exp(), output);
  }
  
  // optional int32 cur_level = 6;
  if (has_cur_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->cur_level(), output);
  }
  
  // optional int32 time_limit = 7;
  if (has_time_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->time_limit(), output);
  }
  
  // optional int64 start_tick = 8;
  if (has_start_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->start_tick(), output);
  }
  
  // optional int64 ai_id = 9;
  if (has_ai_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->ai_id(), output);
  }
  
  // repeated string protect_name_list = 10;
  for (int i = 0; i < this->protect_name_list_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->protect_name_list(i).data(), this->protect_name_list(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->protect_name_list(i), output);
  }
  
  // repeated int64 protect_id_list = 11;
  for (int i = 0; i < this->protect_id_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      11, this->protect_id_list(i), output);
  }
  
  // optional int64 protect_player_id = 12;
  if (has_protect_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->protect_player_id(), output);
  }
  
  // optional string protect_player_name = 13;
  if (has_protect_player_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->protect_player_name().data(), this->protect_player_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->protect_player_name(), output);
  }
  
  // optional int64 stop_protect_id = 14;
  if (has_stop_protect_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(14, this->stop_protect_id(), output);
  }
  
  // optional string stop_protect_name = 15;
  if (has_stop_protect_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stop_protect_name().data(), this->stop_protect_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->stop_protect_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401523::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 escort_times = 1;
  if (has_escort_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->escort_times(), target);
  }
  
  // optional int32 rob_times = 2;
  if (has_rob_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rob_times(), target);
  }
  
  // optional int32 protect_times = 3;
  if (has_protect_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->protect_times(), target);
  }
  
  // optional int32 wish_times = 4;
  if (has_wish_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->wish_times(), target);
  }
  
  // optional int32 convoy_exp = 5;
  if (has_convoy_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->convoy_exp(), target);
  }
  
  // optional int32 cur_level = 6;
  if (has_cur_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->cur_level(), target);
  }
  
  // optional int32 time_limit = 7;
  if (has_time_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->time_limit(), target);
  }
  
  // optional int64 start_tick = 8;
  if (has_start_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->start_tick(), target);
  }
  
  // optional int64 ai_id = 9;
  if (has_ai_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->ai_id(), target);
  }
  
  // repeated string protect_name_list = 10;
  for (int i = 0; i < this->protect_name_list_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->protect_name_list(i).data(), this->protect_name_list(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->protect_name_list(i), target);
  }
  
  // repeated int64 protect_id_list = 11;
  for (int i = 0; i < this->protect_id_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(11, this->protect_id_list(i), target);
  }
  
  // optional int64 protect_player_id = 12;
  if (has_protect_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->protect_player_id(), target);
  }
  
  // optional string protect_player_name = 13;
  if (has_protect_player_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->protect_player_name().data(), this->protect_player_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->protect_player_name(), target);
  }
  
  // optional int64 stop_protect_id = 14;
  if (has_stop_protect_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(14, this->stop_protect_id(), target);
  }
  
  // optional string stop_protect_name = 15;
  if (has_stop_protect_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->stop_protect_name().data(), this->stop_protect_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->stop_protect_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401523::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 escort_times = 1;
    if (has_escort_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->escort_times());
    }
    
    // optional int32 rob_times = 2;
    if (has_rob_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rob_times());
    }
    
    // optional int32 protect_times = 3;
    if (has_protect_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->protect_times());
    }
    
    // optional int32 wish_times = 4;
    if (has_wish_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wish_times());
    }
    
    // optional int32 convoy_exp = 5;
    if (has_convoy_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->convoy_exp());
    }
    
    // optional int32 cur_level = 6;
    if (has_cur_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_level());
    }
    
    // optional int32 time_limit = 7;
    if (has_time_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time_limit());
    }
    
    // optional int64 start_tick = 8;
    if (has_start_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_tick());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 ai_id = 9;
    if (has_ai_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ai_id());
    }
    
    // optional int64 protect_player_id = 12;
    if (has_protect_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->protect_player_id());
    }
    
    // optional string protect_player_name = 13;
    if (has_protect_player_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->protect_player_name());
    }
    
    // optional int64 stop_protect_id = 14;
    if (has_stop_protect_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->stop_protect_id());
    }
    
    // optional string stop_protect_name = 15;
    if (has_stop_protect_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stop_protect_name());
    }
    
  }
  // repeated string protect_name_list = 10;
  total_size += 1 * this->protect_name_list_size();
  for (int i = 0; i < this->protect_name_list_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->protect_name_list(i));
  }
  
  // repeated int64 protect_id_list = 11;
  {
    int data_size = 0;
    for (int i = 0; i < this->protect_id_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->protect_id_list(i));
    }
    total_size += 1 * this->protect_id_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401523::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401523* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401523*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401523::MergeFrom(const Proto50401523& from) {
  GOOGLE_CHECK_NE(&from, this);
  protect_name_list_.MergeFrom(from.protect_name_list_);
  protect_id_list_.MergeFrom(from.protect_id_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_escort_times()) {
      set_escort_times(from.escort_times());
    }
    if (from.has_rob_times()) {
      set_rob_times(from.rob_times());
    }
    if (from.has_protect_times()) {
      set_protect_times(from.protect_times());
    }
    if (from.has_wish_times()) {
      set_wish_times(from.wish_times());
    }
    if (from.has_convoy_exp()) {
      set_convoy_exp(from.convoy_exp());
    }
    if (from.has_cur_level()) {
      set_cur_level(from.cur_level());
    }
    if (from.has_time_limit()) {
      set_time_limit(from.time_limit());
    }
    if (from.has_start_tick()) {
      set_start_tick(from.start_tick());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_ai_id()) {
      set_ai_id(from.ai_id());
    }
    if (from.has_protect_player_id()) {
      set_protect_player_id(from.protect_player_id());
    }
    if (from.has_protect_player_name()) {
      set_protect_player_name(from.protect_player_name());
    }
    if (from.has_stop_protect_id()) {
      set_stop_protect_id(from.stop_protect_id());
    }
    if (from.has_stop_protect_name()) {
      set_stop_protect_name(from.stop_protect_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401523::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401523::CopyFrom(const Proto50401523& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401523::IsInitialized() const {
  
  return true;
}

void Proto50401523::Swap(Proto50401523* other) {
  if (other != this) {
    std::swap(escort_times_, other->escort_times_);
    std::swap(rob_times_, other->rob_times_);
    std::swap(protect_times_, other->protect_times_);
    std::swap(wish_times_, other->wish_times_);
    std::swap(convoy_exp_, other->convoy_exp_);
    std::swap(cur_level_, other->cur_level_);
    std::swap(time_limit_, other->time_limit_);
    std::swap(start_tick_, other->start_tick_);
    std::swap(ai_id_, other->ai_id_);
    protect_name_list_.Swap(&other->protect_name_list_);
    protect_id_list_.Swap(&other->protect_id_list_);
    std::swap(protect_player_id_, other->protect_player_id_);
    std::swap(protect_player_name_, other->protect_player_name_);
    std::swap(stop_protect_id_, other->stop_protect_id_);
    std::swap(stop_protect_name_, other->stop_protect_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401523::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401523_descriptor_;
  metadata.reflection = Proto50401523_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400373::kCurProgressFieldNumber;
const int Proto80400373::kLeftTimeFieldNumber;
#endif  // !_MSC_VER

Proto80400373::Proto80400373()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400373::InitAsDefaultInstance() {
}

Proto80400373::Proto80400373(const Proto80400373& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400373::SharedCtor() {
  _cached_size_ = 0;
  cur_progress_ = 0;
  left_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400373::~Proto80400373() {
  SharedDtor();
}

void Proto80400373::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400373::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400373::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400373_descriptor_;
}

const Proto80400373& Proto80400373::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto80400373* Proto80400373::default_instance_ = NULL;

Proto80400373* Proto80400373::New() const {
  return new Proto80400373;
}

void Proto80400373::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_progress_ = 0;
    left_time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400373::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_progress = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_progress_)));
          set_has_cur_progress();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400373::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_progress = 1;
  if (has_cur_progress()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_progress(), output);
  }
  
  // optional int32 left_time = 2;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400373::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_progress = 1;
  if (has_cur_progress()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_progress(), target);
  }
  
  // optional int32 left_time = 2;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400373::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_progress = 1;
    if (has_cur_progress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_progress());
    }
    
    // optional int32 left_time = 2;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400373::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400373* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400373*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400373::MergeFrom(const Proto80400373& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_progress()) {
      set_cur_progress(from.cur_progress());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400373::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400373::CopyFrom(const Proto80400373& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400373::IsInitialized() const {
  
  return true;
}

void Proto80400373::Swap(Proto80400373* other) {
  if (other != this) {
    std::swap(cur_progress_, other->cur_progress_);
    std::swap(left_time_, other->left_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400373::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400373_descriptor_;
  metadata.reflection = Proto80400373_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400007::kKillValueFieldNumber;
const int Proto50400007::kColorFieldNumber;
#endif  // !_MSC_VER

Proto50400007::Proto50400007()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400007::InitAsDefaultInstance() {
}

Proto50400007::Proto50400007(const Proto50400007& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400007::SharedCtor() {
  _cached_size_ = 0;
  kill_value_ = 0;
  color_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400007::~Proto50400007() {
  SharedDtor();
}

void Proto50400007::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400007::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400007::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400007_descriptor_;
}

const Proto50400007& Proto50400007::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto50400007* Proto50400007::default_instance_ = NULL;

Proto50400007* Proto50400007::New() const {
  return new Proto50400007;
}

void Proto50400007::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    kill_value_ = 0;
    color_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400007::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 kill_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kill_value_)));
          set_has_kill_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_color;
        break;
      }
      
      // optional int32 color = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &color_)));
          set_has_color();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400007::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 kill_value = 1;
  if (has_kill_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->kill_value(), output);
  }
  
  // optional int32 color = 2;
  if (has_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->color(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400007::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 kill_value = 1;
  if (has_kill_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->kill_value(), target);
  }
  
  // optional int32 color = 2;
  if (has_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->color(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400007::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 kill_value = 1;
    if (has_kill_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->kill_value());
    }
    
    // optional int32 color = 2;
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->color());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400007::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400007* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400007*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400007::MergeFrom(const Proto50400007& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_kill_value()) {
      set_kill_value(from.kill_value());
    }
    if (from.has_color()) {
      set_color(from.color());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400007::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400007::CopyFrom(const Proto50400007& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400007::IsInitialized() const {
  
  return true;
}

void Proto50400007::Swap(Proto50400007* other) {
  if (other != this) {
    std::swap(kill_value_, other->kill_value_);
    std::swap(color_, other->color_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400007::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400007_descriptor_;
  metadata.reflection = Proto50400007_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400375::kAttackorFieldNumber;
const int Proto80400375::kAttackorIdFieldNumber;
#endif  // !_MSC_VER

Proto80400375::Proto80400375()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400375::InitAsDefaultInstance() {
}

Proto80400375::Proto80400375(const Proto80400375& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400375::SharedCtor() {
  _cached_size_ = 0;
  attackor_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  attackor_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400375::~Proto80400375() {
  SharedDtor();
}

void Proto80400375::SharedDtor() {
  if (attackor_ != &::google::protobuf::internal::kEmptyString) {
    delete attackor_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400375::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400375::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400375_descriptor_;
}

const Proto80400375& Proto80400375::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto80400375* Proto80400375::default_instance_ = NULL;

Proto80400375* Proto80400375::New() const {
  return new Proto80400375;
}

void Proto80400375::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_attackor()) {
      if (attackor_ != &::google::protobuf::internal::kEmptyString) {
        attackor_->clear();
      }
    }
    attackor_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400375::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string attackor = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attackor()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->attackor().data(), this->attackor().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_attackor_id;
        break;
      }
      
      // optional int64 attackor_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attackor_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &attackor_id_)));
          set_has_attackor_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400375::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string attackor = 1;
  if (has_attackor()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->attackor().data(), this->attackor().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->attackor(), output);
  }
  
  // optional int64 attackor_id = 2;
  if (has_attackor_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->attackor_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400375::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string attackor = 1;
  if (has_attackor()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->attackor().data(), this->attackor().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->attackor(), target);
  }
  
  // optional int64 attackor_id = 2;
  if (has_attackor_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->attackor_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400375::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string attackor = 1;
    if (has_attackor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->attackor());
    }
    
    // optional int64 attackor_id = 2;
    if (has_attackor_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->attackor_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400375::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400375* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400375*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400375::MergeFrom(const Proto80400375& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_attackor()) {
      set_attackor(from.attackor());
    }
    if (from.has_attackor_id()) {
      set_attackor_id(from.attackor_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400375::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400375::CopyFrom(const Proto80400375& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400375::IsInitialized() const {
  
  return true;
}

void Proto80400375::Swap(Proto80400375* other) {
  if (other != this) {
    std::swap(attackor_, other->attackor_);
    std::swap(attackor_id_, other->attackor_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400375::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400375_descriptor_;
  metadata.reflection = Proto80400375_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10600104::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto10600104::Proto10600104()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10600104::InitAsDefaultInstance() {
}

Proto10600104::Proto10600104(const Proto10600104& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10600104::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10600104::~Proto10600104() {
  SharedDtor();
}

void Proto10600104::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10600104::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10600104::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10600104_descriptor_;
}

const Proto10600104& Proto10600104::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto10600104* Proto10600104::default_instance_ = NULL;

Proto10600104* Proto10600104::New() const {
  return new Proto10600104;
}

void Proto10600104::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10600104::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10600104::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10600104::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10600104::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10600104::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10600104* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10600104*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10600104::MergeFrom(const Proto10600104& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10600104::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10600104::CopyFrom(const Proto10600104& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10600104::IsInitialized() const {
  
  return true;
}

void Proto10600104::Swap(Proto10600104* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10600104::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10600104_descriptor_;
  metadata.reflection = Proto10600104_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400224::kMoverIdFieldNumber;
const int Proto80400224::kHardTickFieldNumber;
#endif  // !_MSC_VER

Proto80400224::Proto80400224()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400224::InitAsDefaultInstance() {
}

Proto80400224::Proto80400224(const Proto80400224& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400224::SharedCtor() {
  _cached_size_ = 0;
  mover_id_ = GOOGLE_LONGLONG(0);
  hard_tick_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400224::~Proto80400224() {
  SharedDtor();
}

void Proto80400224::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400224::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400224::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400224_descriptor_;
}

const Proto80400224& Proto80400224::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto80400224* Proto80400224::default_instance_ = NULL;

Proto80400224* Proto80400224::New() const {
  return new Proto80400224;
}

void Proto80400224::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mover_id_ = GOOGLE_LONGLONG(0);
    hard_tick_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400224::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 mover_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mover_id_)));
          set_has_mover_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(17)) goto parse_hard_tick;
        break;
      }
      
      // optional double hard_tick = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_hard_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &hard_tick_)));
          set_has_hard_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400224::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->mover_id(), output);
  }
  
  // optional double hard_tick = 2;
  if (has_hard_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->hard_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400224::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->mover_id(), target);
  }
  
  // optional double hard_tick = 2;
  if (has_hard_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->hard_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400224::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 mover_id = 1;
    if (has_mover_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mover_id());
    }
    
    // optional double hard_tick = 2;
    if (has_hard_tick()) {
      total_size += 1 + 8;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400224::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400224* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400224*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400224::MergeFrom(const Proto80400224& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mover_id()) {
      set_mover_id(from.mover_id());
    }
    if (from.has_hard_tick()) {
      set_hard_tick(from.hard_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400224::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400224::CopyFrom(const Proto80400224& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400224::IsInitialized() const {
  
  return true;
}

void Proto80400224::Swap(Proto80400224* other) {
  if (other != this) {
    std::swap(mover_id_, other->mover_id_);
    std::swap(hard_tick_, other->hard_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400224::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400224_descriptor_;
  metadata.reflection = Proto80400224_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400117::kTargetIdFieldNumber;
const int Proto10400117::kPixelXFieldNumber;
const int Proto10400117::kPixelYFieldNumber;
const int Proto10400117::kSkillIdFieldNumber;
const int Proto10400117::kAttackIdFieldNumber;
const int Proto10400117::kDartTypeFieldNumber;
#endif  // !_MSC_VER

Proto10400117::Proto10400117()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400117::InitAsDefaultInstance() {
}

Proto10400117::Proto10400117(const Proto10400117& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400117::SharedCtor() {
  _cached_size_ = 0;
  target_id_ = GOOGLE_LONGLONG(0);
  pixel_x_ = 0;
  pixel_y_ = 0;
  skill_id_ = 0;
  attack_id_ = GOOGLE_LONGLONG(0);
  dart_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400117::~Proto10400117() {
  SharedDtor();
}

void Proto10400117::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400117::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400117::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400117_descriptor_;
}

const Proto10400117& Proto10400117::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto10400117* Proto10400117::default_instance_ = NULL;

Proto10400117* Proto10400117::New() const {
  return new Proto10400117;
}

void Proto10400117::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    target_id_ = GOOGLE_LONGLONG(0);
    pixel_x_ = 0;
    pixel_y_ = 0;
    skill_id_ = 0;
    attack_id_ = GOOGLE_LONGLONG(0);
    dart_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400117::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 target_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_id_)));
          set_has_target_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_skill_id;
        break;
      }
      
      // optional int32 skill_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_attack_id;
        break;
      }
      
      // optional int64 attack_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attack_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &attack_id_)));
          set_has_attack_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_dart_type;
        break;
      }
      
      // optional int32 dart_type = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dart_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dart_type_)));
          set_has_dart_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400117::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 target_id = 1;
  if (has_target_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->target_id(), output);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_y(), output);
  }
  
  // optional int32 skill_id = 4;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->skill_id(), output);
  }
  
  // optional int64 attack_id = 5;
  if (has_attack_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->attack_id(), output);
  }
  
  // optional int32 dart_type = 6;
  if (has_dart_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->dart_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400117::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 target_id = 1;
  if (has_target_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->target_id(), target);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_y(), target);
  }
  
  // optional int32 skill_id = 4;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->skill_id(), target);
  }
  
  // optional int64 attack_id = 5;
  if (has_attack_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->attack_id(), target);
  }
  
  // optional int32 dart_type = 6;
  if (has_dart_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->dart_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400117::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 target_id = 1;
    if (has_target_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->target_id());
    }
    
    // optional int32 pixel_x = 2;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 3;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
    // optional int32 skill_id = 4;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
    // optional int64 attack_id = 5;
    if (has_attack_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->attack_id());
    }
    
    // optional int32 dart_type = 6;
    if (has_dart_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dart_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400117::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400117* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400117*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400117::MergeFrom(const Proto10400117& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_target_id()) {
      set_target_id(from.target_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_attack_id()) {
      set_attack_id(from.attack_id());
    }
    if (from.has_dart_type()) {
      set_dart_type(from.dart_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400117::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400117::CopyFrom(const Proto10400117& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400117::IsInitialized() const {
  
  return true;
}

void Proto10400117::Swap(Proto10400117* other) {
  if (other != this) {
    std::swap(target_id_, other->target_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(attack_id_, other->attack_id_);
    std::swap(dart_type_, other->dart_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400117::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400117_descriptor_;
  metadata.reflection = Proto10400117_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400117::kNeedCorrectFieldNumber;
const int Proto50400117::kPixelXFieldNumber;
const int Proto50400117::kPixelYFieldNumber;
#endif  // !_MSC_VER

Proto50400117::Proto50400117()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400117::InitAsDefaultInstance() {
}

Proto50400117::Proto50400117(const Proto50400117& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400117::SharedCtor() {
  _cached_size_ = 0;
  need_correct_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400117::~Proto50400117() {
  SharedDtor();
}

void Proto50400117::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400117::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400117::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400117_descriptor_;
}

const Proto50400117& Proto50400117::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto50400117* Proto50400117::default_instance_ = NULL;

Proto50400117* Proto50400117::New() const {
  return new Proto50400117;
}

void Proto50400117::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    need_correct_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400117::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 need_correct = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_correct_)));
          set_has_need_correct();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400117::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 need_correct = 1;
  if (has_need_correct()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->need_correct(), output);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400117::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 need_correct = 1;
  if (has_need_correct()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->need_correct(), target);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400117::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 need_correct = 1;
    if (has_need_correct()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->need_correct());
    }
    
    // optional int32 pixel_x = 2;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 3;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400117::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400117* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400117*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400117::MergeFrom(const Proto50400117& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_need_correct()) {
      set_need_correct(from.need_correct());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400117::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400117::CopyFrom(const Proto50400117& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400117::IsInitialized() const {
  
  return true;
}

void Proto50400117::Swap(Proto50400117* other) {
  if (other != this) {
    std::swap(need_correct_, other->need_correct_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400117::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400117_descriptor_;
  metadata.reflection = Proto50400117_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400225::kMoverIdFieldNumber;
const int Proto80400225::kPixelXFieldNumber;
const int Proto80400225::kPixelYFieldNumber;
const int Proto80400225::kAttackIdFieldNumber;
const int Proto80400225::kDartTypeFieldNumber;
#endif  // !_MSC_VER

Proto80400225::Proto80400225()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400225::InitAsDefaultInstance() {
}

Proto80400225::Proto80400225(const Proto80400225& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400225::SharedCtor() {
  _cached_size_ = 0;
  mover_id_ = GOOGLE_LONGLONG(0);
  pixel_x_ = 0;
  pixel_y_ = 0;
  attack_id_ = GOOGLE_LONGLONG(0);
  dart_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400225::~Proto80400225() {
  SharedDtor();
}

void Proto80400225::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400225::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400225::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400225_descriptor_;
}

const Proto80400225& Proto80400225::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto80400225* Proto80400225::default_instance_ = NULL;

Proto80400225* Proto80400225::New() const {
  return new Proto80400225;
}

void Proto80400225::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mover_id_ = GOOGLE_LONGLONG(0);
    pixel_x_ = 0;
    pixel_y_ = 0;
    attack_id_ = GOOGLE_LONGLONG(0);
    dart_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400225::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 mover_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mover_id_)));
          set_has_mover_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_attack_id;
        break;
      }
      
      // optional int64 attack_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attack_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &attack_id_)));
          set_has_attack_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_dart_type;
        break;
      }
      
      // optional int32 dart_type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dart_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dart_type_)));
          set_has_dart_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400225::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->mover_id(), output);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_y(), output);
  }
  
  // optional int64 attack_id = 4;
  if (has_attack_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->attack_id(), output);
  }
  
  // optional int32 dart_type = 5;
  if (has_dart_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->dart_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400225::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->mover_id(), target);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_y(), target);
  }
  
  // optional int64 attack_id = 4;
  if (has_attack_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->attack_id(), target);
  }
  
  // optional int32 dart_type = 5;
  if (has_dart_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->dart_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400225::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 mover_id = 1;
    if (has_mover_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mover_id());
    }
    
    // optional int32 pixel_x = 2;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 3;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
    // optional int64 attack_id = 4;
    if (has_attack_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->attack_id());
    }
    
    // optional int32 dart_type = 5;
    if (has_dart_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dart_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400225::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400225* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400225*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400225::MergeFrom(const Proto80400225& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mover_id()) {
      set_mover_id(from.mover_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
    if (from.has_attack_id()) {
      set_attack_id(from.attack_id());
    }
    if (from.has_dart_type()) {
      set_dart_type(from.dart_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400225::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400225::CopyFrom(const Proto80400225& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400225::IsInitialized() const {
  
  return true;
}

void Proto80400225::Swap(Proto80400225* other) {
  if (other != this) {
    std::swap(mover_id_, other->mover_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(attack_id_, other->attack_id_);
    std::swap(dart_type_, other->dart_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400225::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400225_descriptor_;
  metadata.reflection = Proto80400225_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400343::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto51400343::Proto51400343()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400343::InitAsDefaultInstance() {
}

Proto51400343::Proto51400343(const Proto51400343& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400343::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400343::~Proto51400343() {
  SharedDtor();
}

void Proto51400343::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400343::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400343::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400343_descriptor_;
}

const Proto51400343& Proto51400343::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto51400343* Proto51400343::default_instance_ = NULL;

Proto51400343* Proto51400343::New() const {
  return new Proto51400343;
}

void Proto51400343::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400343::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400343::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400343::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400343::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400343::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400343* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400343*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400343::MergeFrom(const Proto51400343& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400343::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400343::CopyFrom(const Proto51400343& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400343::IsInitialized() const {
  
  return true;
}

void Proto51400343::Swap(Proto51400343* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400343::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400343_descriptor_;
  metadata.reflection = Proto51400343_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400344::kExtraExpFieldNumber;
const int Proto51400344::kExtraItemFieldNumber;
const int Proto51400344::kFastGoldFieldNumber;
const int Proto51400344::kRoutineTaskIndexFieldNumber;
const int Proto51400344::kTotalRoutineSizeFieldNumber;
const int Proto51400344::kRoutineTaskFieldNumber;
const int Proto51400344::kDoubleAwardMoneyFieldNumber;
const int Proto51400344::kExtraMoneyFieldNumber;
const int Proto51400344::kTaskAwardMoneyFieldNumber;
const int Proto51400344::kTaskAwardExpFieldNumber;
const int Proto51400344::kTaskAwardItemFieldNumber;
const int Proto51400344::kNextRoutineTaskFieldNumber;
const int Proto51400344::kAwardIdFieldNumber;
const int Proto51400344::kExtraAwardIdFieldNumber;
#endif  // !_MSC_VER

Proto51400344::Proto51400344()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400344::InitAsDefaultInstance() {
  fast_gold_ = const_cast< ::ProtoMoney*>(&::ProtoMoney::default_instance());
  routine_task_ = const_cast< ::ProtoTaskInfo*>(&::ProtoTaskInfo::default_instance());
  double_award_money_ = const_cast< ::ProtoMoney*>(&::ProtoMoney::default_instance());
  extra_money_ = const_cast< ::ProtoMoney*>(&::ProtoMoney::default_instance());
  task_award_money_ = const_cast< ::ProtoMoney*>(&::ProtoMoney::default_instance());
  next_routine_task_ = const_cast< ::ProtoTaskInfo*>(&::ProtoTaskInfo::default_instance());
}

Proto51400344::Proto51400344(const Proto51400344& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400344::SharedCtor() {
  _cached_size_ = 0;
  extra_exp_ = 0;
  fast_gold_ = NULL;
  routine_task_index_ = 0;
  total_routine_size_ = 0;
  routine_task_ = NULL;
  double_award_money_ = NULL;
  extra_money_ = NULL;
  task_award_money_ = NULL;
  task_award_exp_ = 0;
  next_routine_task_ = NULL;
  award_id_ = 0;
  extra_award_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400344::~Proto51400344() {
  SharedDtor();
}

void Proto51400344::SharedDtor() {
  if (this != default_instance_) {
    delete fast_gold_;
    delete routine_task_;
    delete double_award_money_;
    delete extra_money_;
    delete task_award_money_;
    delete next_routine_task_;
  }
}

void Proto51400344::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400344::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400344_descriptor_;
}

const Proto51400344& Proto51400344::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto51400344* Proto51400344::default_instance_ = NULL;

Proto51400344* Proto51400344::New() const {
  return new Proto51400344;
}

void Proto51400344::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    extra_exp_ = 0;
    if (has_fast_gold()) {
      if (fast_gold_ != NULL) fast_gold_->::ProtoMoney::Clear();
    }
    routine_task_index_ = 0;
    total_routine_size_ = 0;
    if (has_routine_task()) {
      if (routine_task_ != NULL) routine_task_->::ProtoTaskInfo::Clear();
    }
    if (has_double_award_money()) {
      if (double_award_money_ != NULL) double_award_money_->::ProtoMoney::Clear();
    }
    if (has_extra_money()) {
      if (extra_money_ != NULL) extra_money_->::ProtoMoney::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_task_award_money()) {
      if (task_award_money_ != NULL) task_award_money_->::ProtoMoney::Clear();
    }
    task_award_exp_ = 0;
    if (has_next_routine_task()) {
      if (next_routine_task_ != NULL) next_routine_task_->::ProtoTaskInfo::Clear();
    }
    award_id_ = 0;
    extra_award_id_ = 0;
  }
  extra_item_.Clear();
  task_award_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400344::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 extra_exp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &extra_exp_)));
          set_has_extra_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_extra_item;
        break;
      }
      
      // repeated .ProtoItem extra_item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_extra_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_extra_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_extra_item;
        if (input->ExpectTag(26)) goto parse_fast_gold;
        break;
      }
      
      // optional .ProtoMoney fast_gold = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fast_gold:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fast_gold()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_routine_task_index;
        break;
      }
      
      // optional int32 routine_task_index = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_routine_task_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &routine_task_index_)));
          set_has_routine_task_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_total_routine_size;
        break;
      }
      
      // optional int32 total_routine_size = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_routine_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_routine_size_)));
          set_has_total_routine_size();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_routine_task;
        break;
      }
      
      // optional .ProtoTaskInfo routine_task = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_routine_task:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_routine_task()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_double_award_money;
        break;
      }
      
      // optional .ProtoMoney double_award_money = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_double_award_money:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_double_award_money()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_extra_money;
        break;
      }
      
      // optional .ProtoMoney extra_money = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_extra_money:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extra_money()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_task_award_money;
        break;
      }
      
      // optional .ProtoMoney task_award_money = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_task_award_money:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_task_award_money()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_task_award_exp;
        break;
      }
      
      // optional int32 task_award_exp = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_task_award_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_award_exp_)));
          set_has_task_award_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_task_award_item;
        break;
      }
      
      // repeated .ProtoItem task_award_item = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_task_award_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_task_award_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_task_award_item;
        if (input->ExpectTag(98)) goto parse_next_routine_task;
        break;
      }
      
      // optional .ProtoTaskInfo next_routine_task = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_next_routine_task:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_next_routine_task()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_award_id;
        break;
      }
      
      // optional int32 award_id = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_award_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &award_id_)));
          set_has_award_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_extra_award_id;
        break;
      }
      
      // optional int32 extra_award_id = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_extra_award_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &extra_award_id_)));
          set_has_extra_award_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400344::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 extra_exp = 1;
  if (has_extra_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->extra_exp(), output);
  }
  
  // repeated .ProtoItem extra_item = 2;
  for (int i = 0; i < this->extra_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->extra_item(i), output);
  }
  
  // optional .ProtoMoney fast_gold = 3;
  if (has_fast_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->fast_gold(), output);
  }
  
  // optional int32 routine_task_index = 4;
  if (has_routine_task_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->routine_task_index(), output);
  }
  
  // optional int32 total_routine_size = 5;
  if (has_total_routine_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->total_routine_size(), output);
  }
  
  // optional .ProtoTaskInfo routine_task = 6;
  if (has_routine_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->routine_task(), output);
  }
  
  // optional .ProtoMoney double_award_money = 7;
  if (has_double_award_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->double_award_money(), output);
  }
  
  // optional .ProtoMoney extra_money = 8;
  if (has_extra_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->extra_money(), output);
  }
  
  // optional .ProtoMoney task_award_money = 9;
  if (has_task_award_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->task_award_money(), output);
  }
  
  // optional int32 task_award_exp = 10;
  if (has_task_award_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->task_award_exp(), output);
  }
  
  // repeated .ProtoItem task_award_item = 11;
  for (int i = 0; i < this->task_award_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->task_award_item(i), output);
  }
  
  // optional .ProtoTaskInfo next_routine_task = 12;
  if (has_next_routine_task()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->next_routine_task(), output);
  }
  
  // optional int32 award_id = 13;
  if (has_award_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->award_id(), output);
  }
  
  // optional int32 extra_award_id = 14;
  if (has_extra_award_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->extra_award_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400344::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 extra_exp = 1;
  if (has_extra_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->extra_exp(), target);
  }
  
  // repeated .ProtoItem extra_item = 2;
  for (int i = 0; i < this->extra_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->extra_item(i), target);
  }
  
  // optional .ProtoMoney fast_gold = 3;
  if (has_fast_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->fast_gold(), target);
  }
  
  // optional int32 routine_task_index = 4;
  if (has_routine_task_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->routine_task_index(), target);
  }
  
  // optional int32 total_routine_size = 5;
  if (has_total_routine_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->total_routine_size(), target);
  }
  
  // optional .ProtoTaskInfo routine_task = 6;
  if (has_routine_task()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->routine_task(), target);
  }
  
  // optional .ProtoMoney double_award_money = 7;
  if (has_double_award_money()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->double_award_money(), target);
  }
  
  // optional .ProtoMoney extra_money = 8;
  if (has_extra_money()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->extra_money(), target);
  }
  
  // optional .ProtoMoney task_award_money = 9;
  if (has_task_award_money()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->task_award_money(), target);
  }
  
  // optional int32 task_award_exp = 10;
  if (has_task_award_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->task_award_exp(), target);
  }
  
  // repeated .ProtoItem task_award_item = 11;
  for (int i = 0; i < this->task_award_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->task_award_item(i), target);
  }
  
  // optional .ProtoTaskInfo next_routine_task = 12;
  if (has_next_routine_task()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->next_routine_task(), target);
  }
  
  // optional int32 award_id = 13;
  if (has_award_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->award_id(), target);
  }
  
  // optional int32 extra_award_id = 14;
  if (has_extra_award_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->extra_award_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400344::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 extra_exp = 1;
    if (has_extra_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->extra_exp());
    }
    
    // optional .ProtoMoney fast_gold = 3;
    if (has_fast_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fast_gold());
    }
    
    // optional int32 routine_task_index = 4;
    if (has_routine_task_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->routine_task_index());
    }
    
    // optional int32 total_routine_size = 5;
    if (has_total_routine_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_routine_size());
    }
    
    // optional .ProtoTaskInfo routine_task = 6;
    if (has_routine_task()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->routine_task());
    }
    
    // optional .ProtoMoney double_award_money = 7;
    if (has_double_award_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->double_award_money());
    }
    
    // optional .ProtoMoney extra_money = 8;
    if (has_extra_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->extra_money());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .ProtoMoney task_award_money = 9;
    if (has_task_award_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->task_award_money());
    }
    
    // optional int32 task_award_exp = 10;
    if (has_task_award_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task_award_exp());
    }
    
    // optional .ProtoTaskInfo next_routine_task = 12;
    if (has_next_routine_task()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->next_routine_task());
    }
    
    // optional int32 award_id = 13;
    if (has_award_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->award_id());
    }
    
    // optional int32 extra_award_id = 14;
    if (has_extra_award_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->extra_award_id());
    }
    
  }
  // repeated .ProtoItem extra_item = 2;
  total_size += 1 * this->extra_item_size();
  for (int i = 0; i < this->extra_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra_item(i));
  }
  
  // repeated .ProtoItem task_award_item = 11;
  total_size += 1 * this->task_award_item_size();
  for (int i = 0; i < this->task_award_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->task_award_item(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400344::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400344* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400344*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400344::MergeFrom(const Proto51400344& from) {
  GOOGLE_CHECK_NE(&from, this);
  extra_item_.MergeFrom(from.extra_item_);
  task_award_item_.MergeFrom(from.task_award_item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_extra_exp()) {
      set_extra_exp(from.extra_exp());
    }
    if (from.has_fast_gold()) {
      mutable_fast_gold()->::ProtoMoney::MergeFrom(from.fast_gold());
    }
    if (from.has_routine_task_index()) {
      set_routine_task_index(from.routine_task_index());
    }
    if (from.has_total_routine_size()) {
      set_total_routine_size(from.total_routine_size());
    }
    if (from.has_routine_task()) {
      mutable_routine_task()->::ProtoTaskInfo::MergeFrom(from.routine_task());
    }
    if (from.has_double_award_money()) {
      mutable_double_award_money()->::ProtoMoney::MergeFrom(from.double_award_money());
    }
    if (from.has_extra_money()) {
      mutable_extra_money()->::ProtoMoney::MergeFrom(from.extra_money());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_task_award_money()) {
      mutable_task_award_money()->::ProtoMoney::MergeFrom(from.task_award_money());
    }
    if (from.has_task_award_exp()) {
      set_task_award_exp(from.task_award_exp());
    }
    if (from.has_next_routine_task()) {
      mutable_next_routine_task()->::ProtoTaskInfo::MergeFrom(from.next_routine_task());
    }
    if (from.has_award_id()) {
      set_award_id(from.award_id());
    }
    if (from.has_extra_award_id()) {
      set_extra_award_id(from.extra_award_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400344::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400344::CopyFrom(const Proto51400344& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400344::IsInitialized() const {
  
  return true;
}

void Proto51400344::Swap(Proto51400344* other) {
  if (other != this) {
    std::swap(extra_exp_, other->extra_exp_);
    extra_item_.Swap(&other->extra_item_);
    std::swap(fast_gold_, other->fast_gold_);
    std::swap(routine_task_index_, other->routine_task_index_);
    std::swap(total_routine_size_, other->total_routine_size_);
    std::swap(routine_task_, other->routine_task_);
    std::swap(double_award_money_, other->double_award_money_);
    std::swap(extra_money_, other->extra_money_);
    std::swap(task_award_money_, other->task_award_money_);
    std::swap(task_award_exp_, other->task_award_exp_);
    task_award_item_.Swap(&other->task_award_item_);
    std::swap(next_routine_task_, other->next_routine_task_);
    std::swap(award_id_, other->award_id_);
    std::swap(extra_award_id_, other->extra_award_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400344::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400344_descriptor_;
  metadata.reflection = Proto51400344_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400711::kSkillIdFieldNumber;
#endif  // !_MSC_VER

Proto10400711::Proto10400711()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400711::InitAsDefaultInstance() {
}

Proto10400711::Proto10400711(const Proto10400711& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400711::SharedCtor() {
  _cached_size_ = 0;
  skill_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400711::~Proto10400711() {
  SharedDtor();
}

void Proto10400711::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400711::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400711::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400711_descriptor_;
}

const Proto10400711& Proto10400711::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto10400711* Proto10400711::default_instance_ = NULL;

Proto10400711* Proto10400711::New() const {
  return new Proto10400711;
}

void Proto10400711::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skill_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400711::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 skill_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400711::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skill_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400711::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skill_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400711::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 skill_id = 1;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400711::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400711* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400711*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400711::MergeFrom(const Proto10400711& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400711::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400711::CopyFrom(const Proto10400711& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400711::IsInitialized() const {
  
  return true;
}

void Proto10400711::Swap(Proto10400711* other) {
  if (other != this) {
    std::swap(skill_id_, other->skill_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400711::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400711_descriptor_;
  metadata.reflection = Proto10400711_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400711::kSkillIdFieldNumber;
const int Proto50400711::kSkillLevelFieldNumber;
const int Proto50400711::kSavvyFieldNumber;
#endif  // !_MSC_VER

Proto50400711::Proto50400711()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400711::InitAsDefaultInstance() {
}

Proto50400711::Proto50400711(const Proto50400711& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400711::SharedCtor() {
  _cached_size_ = 0;
  skill_id_ = 0;
  skill_level_ = 0;
  savvy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400711::~Proto50400711() {
  SharedDtor();
}

void Proto50400711::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400711::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400711::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400711_descriptor_;
}

const Proto50400711& Proto50400711::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto50400711* Proto50400711::default_instance_ = NULL;

Proto50400711* Proto50400711::New() const {
  return new Proto50400711;
}

void Proto50400711::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skill_id_ = 0;
    skill_level_ = 0;
    savvy_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400711::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 skill_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_skill_level;
        break;
      }
      
      // optional int32 skill_level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_level_)));
          set_has_skill_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_savvy;
        break;
      }
      
      // optional int32 savvy = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_savvy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &savvy_)));
          set_has_savvy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400711::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skill_id(), output);
  }
  
  // optional int32 skill_level = 2;
  if (has_skill_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skill_level(), output);
  }
  
  // optional int32 savvy = 3;
  if (has_savvy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->savvy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400711::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skill_id(), target);
  }
  
  // optional int32 skill_level = 2;
  if (has_skill_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skill_level(), target);
  }
  
  // optional int32 savvy = 3;
  if (has_savvy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->savvy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400711::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 skill_id = 1;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
    // optional int32 skill_level = 2;
    if (has_skill_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_level());
    }
    
    // optional int32 savvy = 3;
    if (has_savvy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->savvy());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400711::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400711* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400711*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400711::MergeFrom(const Proto50400711& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_skill_level()) {
      set_skill_level(from.skill_level());
    }
    if (from.has_savvy()) {
      set_savvy(from.savvy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400711::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400711::CopyFrom(const Proto50400711& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400711::IsInitialized() const {
  
  return true;
}

void Proto50400711::Swap(Proto50400711* other) {
  if (other != this) {
    std::swap(skill_id_, other->skill_id_);
    std::swap(skill_level_, other->skill_level_);
    std::swap(savvy_, other->savvy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400711::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400711_descriptor_;
  metadata.reflection = Proto50400711_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400803::kVipTypeFieldNumber;
#endif  // !_MSC_VER

Proto80400803::Proto80400803()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400803::InitAsDefaultInstance() {
}

Proto80400803::Proto80400803(const Proto80400803& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400803::SharedCtor() {
  _cached_size_ = 0;
  vip_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400803::~Proto80400803() {
  SharedDtor();
}

void Proto80400803::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400803::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400803::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400803_descriptor_;
}

const Proto80400803& Proto80400803::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto80400803* Proto80400803::default_instance_ = NULL;

Proto80400803* Proto80400803::New() const {
  return new Proto80400803;
}

void Proto80400803::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    vip_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400803::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 vip_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_type_)));
          set_has_vip_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400803::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 vip_type = 1;
  if (has_vip_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vip_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400803::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 vip_type = 1;
  if (has_vip_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->vip_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400803::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 vip_type = 1;
    if (has_vip_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400803::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400803* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400803*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400803::MergeFrom(const Proto80400803& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_vip_type()) {
      set_vip_type(from.vip_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400803::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400803::CopyFrom(const Proto80400803& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400803::IsInitialized() const {
  
  return true;
}

void Proto80400803::Swap(Proto80400803* other) {
  if (other != this) {
    std::swap(vip_type_, other->vip_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400803::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400803_descriptor_;
  metadata.reflection = Proto80400803_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400616::kOperateFieldNumber;
const int Proto11400616::kAutoBuyFieldNumber;
const int Proto11400616::kSrcItemFieldNumber;
const int Proto11400616::kDesItemFieldNumber;
#endif  // !_MSC_VER

Proto11400616::Proto11400616()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400616::InitAsDefaultInstance() {
  src_item_ = const_cast< ::ProtoPackageItem*>(&::ProtoPackageItem::default_instance());
  des_item_ = const_cast< ::ProtoPackageItem*>(&::ProtoPackageItem::default_instance());
}

Proto11400616::Proto11400616(const Proto11400616& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400616::SharedCtor() {
  _cached_size_ = 0;
  operate_ = 0;
  auto_buy_ = 0;
  src_item_ = NULL;
  des_item_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400616::~Proto11400616() {
  SharedDtor();
}

void Proto11400616::SharedDtor() {
  if (this != default_instance_) {
    delete src_item_;
    delete des_item_;
  }
}

void Proto11400616::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400616::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400616_descriptor_;
}

const Proto11400616& Proto11400616::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto11400616* Proto11400616::default_instance_ = NULL;

Proto11400616* Proto11400616::New() const {
  return new Proto11400616;
}

void Proto11400616::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    operate_ = 0;
    auto_buy_ = 0;
    if (has_src_item()) {
      if (src_item_ != NULL) src_item_->::ProtoPackageItem::Clear();
    }
    if (has_des_item()) {
      if (des_item_ != NULL) des_item_->::ProtoPackageItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400616::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 operate = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operate_)));
          set_has_operate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_auto_buy;
        break;
      }
      
      // optional int32 auto_buy = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_buy_)));
          set_has_auto_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_src_item;
        break;
      }
      
      // optional .ProtoPackageItem src_item = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_src_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_src_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_des_item;
        break;
      }
      
      // optional .ProtoPackageItem des_item = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_des_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_des_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400616::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 operate = 1;
  if (has_operate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->operate(), output);
  }
  
  // optional int32 auto_buy = 2;
  if (has_auto_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->auto_buy(), output);
  }
  
  // optional .ProtoPackageItem src_item = 3;
  if (has_src_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->src_item(), output);
  }
  
  // optional .ProtoPackageItem des_item = 4;
  if (has_des_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->des_item(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400616::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 operate = 1;
  if (has_operate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->operate(), target);
  }
  
  // optional int32 auto_buy = 2;
  if (has_auto_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->auto_buy(), target);
  }
  
  // optional .ProtoPackageItem src_item = 3;
  if (has_src_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->src_item(), target);
  }
  
  // optional .ProtoPackageItem des_item = 4;
  if (has_des_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->des_item(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400616::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 operate = 1;
    if (has_operate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->operate());
    }
    
    // optional int32 auto_buy = 2;
    if (has_auto_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_buy());
    }
    
    // optional .ProtoPackageItem src_item = 3;
    if (has_src_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->src_item());
    }
    
    // optional .ProtoPackageItem des_item = 4;
    if (has_des_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->des_item());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400616::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400616* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400616*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400616::MergeFrom(const Proto11400616& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_operate()) {
      set_operate(from.operate());
    }
    if (from.has_auto_buy()) {
      set_auto_buy(from.auto_buy());
    }
    if (from.has_src_item()) {
      mutable_src_item()->::ProtoPackageItem::MergeFrom(from.src_item());
    }
    if (from.has_des_item()) {
      mutable_des_item()->::ProtoPackageItem::MergeFrom(from.des_item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400616::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400616::CopyFrom(const Proto11400616& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400616::IsInitialized() const {
  
  return true;
}

void Proto11400616::Swap(Proto11400616* other) {
  if (other != this) {
    std::swap(operate_, other->operate_);
    std::swap(auto_buy_, other->auto_buy_);
    std::swap(src_item_, other->src_item_);
    std::swap(des_item_, other->des_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400616::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400616_descriptor_;
  metadata.reflection = Proto11400616_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400616::kItemDesIdFieldNumber;
const int Proto51400616::kResultFieldNumber;
const int Proto51400616::kCostMoneyFieldNumber;
const int Proto51400616::kCostItemFieldNumber;
#endif  // !_MSC_VER

Proto51400616::Proto51400616()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400616::InitAsDefaultInstance() {
}

Proto51400616::Proto51400616(const Proto51400616& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400616::SharedCtor() {
  _cached_size_ = 0;
  item_des_id_ = 0;
  result_ = 0;
  cost_money_ = 0;
  cost_item_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400616::~Proto51400616() {
  SharedDtor();
}

void Proto51400616::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400616::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400616::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400616_descriptor_;
}

const Proto51400616& Proto51400616::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto51400616* Proto51400616::default_instance_ = NULL;

Proto51400616* Proto51400616::New() const {
  return new Proto51400616;
}

void Proto51400616::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_des_id_ = 0;
    result_ = 0;
    cost_money_ = 0;
    cost_item_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400616::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_des_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_des_id_)));
          set_has_item_des_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }
      
      // optional int32 result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cost_money;
        break;
      }
      
      // optional int32 cost_money = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cost_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cost_money_)));
          set_has_cost_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_cost_item;
        break;
      }
      
      // optional int32 cost_item = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cost_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cost_item_)));
          set_has_cost_item();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400616::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_des_id = 1;
  if (has_item_des_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_des_id(), output);
  }
  
  // optional int32 result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }
  
  // optional int32 cost_money = 3;
  if (has_cost_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cost_money(), output);
  }
  
  // optional int32 cost_item = 4;
  if (has_cost_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cost_item(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400616::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_des_id = 1;
  if (has_item_des_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_des_id(), target);
  }
  
  // optional int32 result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }
  
  // optional int32 cost_money = 3;
  if (has_cost_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cost_money(), target);
  }
  
  // optional int32 cost_item = 4;
  if (has_cost_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cost_item(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400616::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_des_id = 1;
    if (has_item_des_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_des_id());
    }
    
    // optional int32 result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
    // optional int32 cost_money = 3;
    if (has_cost_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cost_money());
    }
    
    // optional int32 cost_item = 4;
    if (has_cost_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cost_item());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400616::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400616* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400616*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400616::MergeFrom(const Proto51400616& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_des_id()) {
      set_item_des_id(from.item_des_id());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_cost_money()) {
      set_cost_money(from.cost_money());
    }
    if (from.has_cost_item()) {
      set_cost_item(from.cost_item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400616::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400616::CopyFrom(const Proto51400616& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400616::IsInitialized() const {
  
  return true;
}

void Proto51400616::Swap(Proto51400616* other) {
  if (other != this) {
    std::swap(item_des_id_, other->item_des_id_);
    std::swap(result_, other->result_);
    std::swap(cost_money_, other->cost_money_);
    std::swap(cost_item_, other->cost_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400616::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400616_descriptor_;
  metadata.reflection = Proto51400616_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400617::kEquipIndexFieldNumber;
const int Proto11400617::kJewalIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400617::Proto11400617()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400617::InitAsDefaultInstance() {
}

Proto11400617::Proto11400617(const Proto11400617& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400617::SharedCtor() {
  _cached_size_ = 0;
  equip_index_ = 0;
  jewal_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400617::~Proto11400617() {
  SharedDtor();
}

void Proto11400617::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400617::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400617::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400617_descriptor_;
}

const Proto11400617& Proto11400617::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient011_2eproto();  return *default_instance_;
}

Proto11400617* Proto11400617::default_instance_ = NULL;

Proto11400617* Proto11400617::New() const {
  return new Proto11400617;
}

void Proto11400617::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    equip_index_ = 0;
    jewal_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400617::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 equip_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equip_index_)));
          set_has_equip_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_jewal_index;
        break;
      }
      
      // optional int32 jewal_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jewal_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jewal_index_)));
          set_has_jewal_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400617::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 equip_index = 1;
  if (has_equip_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->equip_index(), output);
  }
  
  // optional int32 jewal_index = 2;
  if (has_jewal_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->jewal_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400617::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 equip_index = 1;
  if (has_equip_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->equip_index(), target);
  }
  
  // optional int32 jewal_index = 2;
  if (has_jewal_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->jewal_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400617::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 equip_index = 1;
    if (has_equip_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equip_index());
    }
    
    // optional int32 jewal_index = 2;
    if (has_jewal_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jewal_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400617::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400617* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400617*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400617::MergeFrom(const Proto11400617& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equip_index()) {
      set_equip_index(from.equip_index());
    }
    if (from.has_jewal_index()) {
      set_jewal_index(from.jewal_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400617::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400617::CopyFrom(const Proto11400617& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400617::IsInitialized() const {
  
  return true;
}

void Proto11400617::Swap(Proto11400617* other) {
  if (other != this) {
    std::swap(equip_index_, other->equip_index_);
    std::swap(jewal_index_, other->jewal_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400617::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400617_descriptor_;
  metadata.reflection = Proto11400617_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
