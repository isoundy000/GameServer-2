// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient003.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto11400404_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400404_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400405_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400405_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400405_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400405_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400404_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400404_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400501_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400501_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400501_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400501_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400502_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400502_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400503_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400503_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400505_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400505_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400506_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400506_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400506_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400506_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400507_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400507_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400507_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400507_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400508_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400508_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400508_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400508_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400516_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400516_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400601_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400601_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400601_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400601_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400602_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400602_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400602_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400602_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400603_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400603_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400603_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400603_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400604_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400604_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400605_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400605_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400650_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400650_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400519_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400519_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400519_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400519_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400520_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400520_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400520_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400520_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400521_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400521_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400521_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400521_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400600_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400600_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400607_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400607_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400607_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400607_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400111_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400111_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400608_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400608_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400609_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400609_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400609_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400609_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400610_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400610_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400610_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400610_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400611_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400611_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400611_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400611_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400612_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400612_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400612_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400612_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400601_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400601_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400111_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400111_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400651_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400651_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400651_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400651_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400652_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400652_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400652_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400652_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient003_2eproto() {
  protobuf_AddDesc_ProtoClient003_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient003.proto");
  GOOGLE_CHECK(file != NULL);
  Proto11400404_descriptor_ = file->message_type(0);
  static const int Proto11400404_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400404, type_),
  };
  Proto11400404_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400404_descriptor_,
      Proto11400404::default_instance_,
      Proto11400404_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400404, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400404, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400404));
  Proto11400405_descriptor_ = file->message_type(1);
  static const int Proto11400405_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400405, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400405, mount_shape_),
  };
  Proto11400405_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400405_descriptor_,
      Proto11400405::default_instance_,
      Proto11400405_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400405, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400405, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400405));
  Proto51400405_descriptor_ = file->message_type(2);
  static const int Proto51400405_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400405, type_),
  };
  Proto51400405_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400405_descriptor_,
      Proto51400405::default_instance_,
      Proto51400405_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400405, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400405, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400405));
  Proto51400404_descriptor_ = file->message_type(3);
  static const int Proto51400404_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400404, type_),
  };
  Proto51400404_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400404_descriptor_,
      Proto51400404::default_instance_,
      Proto51400404_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400404, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400404, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400404));
  Proto11400501_descriptor_ = file->message_type(4);
  static const int Proto11400501_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400501, beast_id_),
  };
  Proto11400501_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400501_descriptor_,
      Proto11400501::default_instance_,
      Proto11400501_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400501, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400501, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400501));
  Proto51400501_descriptor_ = file->message_type(5);
  static const int Proto51400501_offsets_[27] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, beast_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, beast_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, beast_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, action_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, beast_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, beast_growth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, beast_ability_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, attack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, hit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, crite_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, sky_soul_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, earth_soul_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, life_soul_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, skill_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, sky_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, earth_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, life_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, growth_attack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, growth_hit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, growth_crit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, conbine_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, total_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, skill_block_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, skill_conditon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, ability_trans_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, is_guard_),
  };
  Proto51400501_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400501_descriptor_,
      Proto51400501::default_instance_,
      Proto51400501_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400501, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400501));
  Proto51400502_descriptor_ = file->message_type(6);
  static const int Proto51400502_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400502, beast_set_),
  };
  Proto51400502_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400502_descriptor_,
      Proto51400502::default_instance_,
      Proto51400502_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400502, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400502, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400502));
  Proto11400503_descriptor_ = file->message_type(7);
  static const int Proto11400503_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400503, beast_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400503, beast_name_),
  };
  Proto11400503_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400503_descriptor_,
      Proto11400503::default_instance_,
      Proto11400503_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400503, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400503, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400503));
  Proto11400505_descriptor_ = file->message_type(8);
  static const int Proto11400505_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400505, beast_id_),
  };
  Proto11400505_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400505_descriptor_,
      Proto11400505::default_instance_,
      Proto11400505_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400505, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400505, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400505));
  Proto11400506_descriptor_ = file->message_type(9);
  static const int Proto11400506_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400506, beast_id_),
  };
  Proto11400506_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400506_descriptor_,
      Proto11400506::default_instance_,
      Proto11400506_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400506, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400506, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400506));
  Proto51400506_descriptor_ = file->message_type(10);
  static const int Proto51400506_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400506, beast_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400506, beast_state_),
  };
  Proto51400506_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400506_descriptor_,
      Proto51400506::default_instance_,
      Proto51400506_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400506, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400506, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400506));
  Proto11400507_descriptor_ = file->message_type(11);
  static const int Proto11400507_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400507, beast_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400507, auto_buy_),
  };
  Proto11400507_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400507_descriptor_,
      Proto11400507::default_instance_,
      Proto11400507_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400507, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400507, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400507));
  Proto51400507_descriptor_ = file->message_type(12);
  static const int Proto51400507_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400507, success_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400507, change_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400507, upgrade_flag_),
  };
  Proto51400507_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400507_descriptor_,
      Proto51400507::default_instance_,
      Proto51400507_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400507, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400507, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400507));
  Proto11400508_descriptor_ = file->message_type(13);
  static const int Proto11400508_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400508, beast_id_),
  };
  Proto11400508_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400508_descriptor_,
      Proto11400508::default_instance_,
      Proto11400508_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400508, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400508, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400508));
  Proto51400508_descriptor_ = file->message_type(14);
  static const int Proto51400508_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400508, growth_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400508, growth_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400508, beast_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400508, force_),
  };
  Proto51400508_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400508_descriptor_,
      Proto51400508::default_instance_,
      Proto51400508_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400508, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400508, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400508));
  Proto51400516_descriptor_ = file->message_type(15);
  static const int Proto51400516_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400516, skill_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400516, beast_id_),
  };
  Proto51400516_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400516_descriptor_,
      Proto51400516::default_instance_,
      Proto51400516_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400516, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400516, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400516));
  Proto11400601_descriptor_ = file->message_type(16);
  static const int Proto11400601_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400601, pkg_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400601, is_auto_buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400601, is_batch_refine_),
  };
  Proto11400601_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400601_descriptor_,
      Proto11400601::default_instance_,
      Proto11400601_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400601, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400601, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400601));
  Proto51400601_descriptor_ = file->message_type(17);
  static const int Proto51400601_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400601, is_grade_up_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400601, pkg_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400601, strengthen_lvl_),
  };
  Proto51400601_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400601_descriptor_,
      Proto51400601::default_instance_,
      Proto51400601_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400601, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400601, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400601));
  Proto11400602_descriptor_ = file->message_type(18);
  static const int Proto11400602_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400602, pkg_index_),
  };
  Proto11400602_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400602_descriptor_,
      Proto11400602::default_instance_,
      Proto11400602_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400602, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400602, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400602));
  Proto51400602_descriptor_ = file->message_type(19);
  static const int Proto51400602_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400602, aim_item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400602, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400602, pkg_index_),
  };
  Proto51400602_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400602_descriptor_,
      Proto51400602::default_instance_,
      Proto51400602_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400602, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400602, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400602));
  Proto11400603_descriptor_ = file->message_type(20);
  static const int Proto11400603_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400603, martial_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400603, pkg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400603, pkg_index_),
  };
  Proto11400603_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400603_descriptor_,
      Proto11400603::default_instance_,
      Proto11400603_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400603, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400603, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400603));
  Proto51400603_descriptor_ = file->message_type(21);
  static const int Proto51400603_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400603, aim_item_id_),
  };
  Proto51400603_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400603_descriptor_,
      Proto51400603::default_instance_,
      Proto51400603_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400603, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400603, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400603));
  Proto11400604_descriptor_ = file->message_type(22);
  static const int Proto11400604_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400604, pkg_index_),
  };
  Proto11400604_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400604_descriptor_,
      Proto11400604::default_instance_,
      Proto11400604_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400604, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400604, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400604));
  Proto11400605_descriptor_ = file->message_type(23);
  static const int Proto11400605_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400605, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400605, pkg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400605, pkg_index_),
  };
  Proto11400605_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400605_descriptor_,
      Proto11400605::default_instance_,
      Proto11400605_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400605, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400605, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400605));
  Proto11400650_descriptor_ = file->message_type(24);
  static const int Proto11400650_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400650, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400650, pkg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400650, pkg_index_),
  };
  Proto11400650_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400650_descriptor_,
      Proto11400650::default_instance_,
      Proto11400650_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400650, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400650, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400650));
  Proto11400519_descriptor_ = file->message_type(25);
  static const int Proto11400519_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400519, beast_id_),
  };
  Proto11400519_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400519_descriptor_,
      Proto11400519::default_instance_,
      Proto11400519_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400519, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400519, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400519));
  Proto51400519_descriptor_ = file->message_type(26);
  static const int Proto51400519_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400519, sky_soul_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400519, sky_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400519, earth_soul_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400519, earth_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400519, life_soul_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400519, life_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400519, beast_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400519, force_),
  };
  Proto51400519_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400519_descriptor_,
      Proto51400519::default_instance_,
      Proto51400519_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400519, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400519, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400519));
  Proto11400520_descriptor_ = file->message_type(27);
  static const int Proto11400520_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400520, beast_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400520, soul_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400520, auto_buy_),
  };
  Proto11400520_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400520_descriptor_,
      Proto11400520::default_instance_,
      Proto11400520_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400520, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400520, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400520));
  Proto51400520_descriptor_ = file->message_type(28);
  static const int Proto51400520_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400520, soul_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400520, refine_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400520, refine_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400520, upgrade_flag_),
  };
  Proto51400520_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400520_descriptor_,
      Proto51400520::default_instance_,
      Proto51400520_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400520, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400520, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400520));
  Proto11400521_descriptor_ = file->message_type(29);
  static const int Proto11400521_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400521, combine_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400521, main_beast_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400521, sub_beast_),
  };
  Proto11400521_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400521_descriptor_,
      Proto11400521::default_instance_,
      Proto11400521_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400521, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400521, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400521));
  Proto51400521_descriptor_ = file->message_type(30);
  static const int Proto51400521_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400521, main_beast_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400521, beast_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400521, beast_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400521, ability_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400521, growth_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400521, sky_soul_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400521, earth_soul_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400521, life_soul_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400521, attack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400521, hit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400521, crit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400521, force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400521, conbine_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400521, total_value_),
  };
  Proto51400521_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400521_descriptor_,
      Proto51400521::default_instance_,
      Proto51400521_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400521, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400521, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400521));
  Proto11400600_descriptor_ = file->message_type(31);
  static const int Proto11400600_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400600, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400600, pkg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400600, pkg_index_),
  };
  Proto11400600_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400600_descriptor_,
      Proto11400600::default_instance_,
      Proto11400600_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400600, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400600, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400600));
  Proto11400607_descriptor_ = file->message_type(32);
  static const int Proto11400607_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400607, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400607, is_batch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400607, is_auto_buy_),
  };
  Proto11400607_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400607_descriptor_,
      Proto11400607::default_instance_,
      Proto11400607_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400607, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400607, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400607));
  Proto51400607_descriptor_ = file->message_type(33);
  static const int Proto51400607_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400607, degree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400607, is_upgrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400607, id_),
  };
  Proto51400607_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400607_descriptor_,
      Proto51400607::default_instance_,
      Proto51400607_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400607, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400607, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400607));
  Proto81400111_descriptor_ = file->message_type(34);
  static const int Proto81400111_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400111, skill_info_),
  };
  Proto81400111_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400111_descriptor_,
      Proto81400111::default_instance_,
      Proto81400111_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400111, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400111, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400111));
  Proto51400608_descriptor_ = file->message_type(35);
  static const int Proto51400608_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400608, attr_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400608, magical_list_),
  };
  Proto51400608_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400608_descriptor_,
      Proto51400608::default_instance_,
      Proto51400608_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400608, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400608, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400608));
  Proto11400609_descriptor_ = file->message_type(36);
  static const int Proto11400609_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400609, magical_id_),
  };
  Proto11400609_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400609_descriptor_,
      Proto11400609::default_instance_,
      Proto11400609_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400609, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400609, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400609));
  Proto51400609_descriptor_ = file->message_type(37);
  static const int Proto51400609_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400609, magical_id_),
  };
  Proto51400609_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400609_descriptor_,
      Proto51400609::default_instance_,
      Proto51400609_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400609, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400609, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400609));
  Proto11400610_descriptor_ = file->message_type(38);
  static const int Proto11400610_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400610, magical_id_),
  };
  Proto11400610_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400610_descriptor_,
      Proto11400610::default_instance_,
      Proto11400610_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400610, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400610, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400610));
  Proto51400610_descriptor_ = file->message_type(39);
  static const int Proto51400610_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400610, magical_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400610, lucky_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400610, cur_use_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400610, single_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400610, batch_record_),
  };
  Proto51400610_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400610_descriptor_,
      Proto51400610::default_instance_,
      Proto51400610_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400610, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400610, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400610));
  Proto11400611_descriptor_ = file->message_type(40);
  static const int Proto11400611_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400611, magical_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400611, is_special_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400611, is_batch_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400611, is_auto_buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400611, lock_list_),
  };
  Proto11400611_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400611_descriptor_,
      Proto11400611::default_instance_,
      Proto11400611_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400611, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400611, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400611));
  Proto51400611_descriptor_ = file->message_type(41);
  static const int Proto51400611_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400611, magical_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400611, is_special_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400611, lucky_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400611, magical_record_list_),
  };
  Proto51400611_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400611_descriptor_,
      Proto51400611::default_instance_,
      Proto51400611_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400611, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400611, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400611));
  Proto11400612_descriptor_ = file->message_type(42);
  static const int Proto11400612_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400612, polish_batch_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400612, select_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400612, magical_id_),
  };
  Proto11400612_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400612_descriptor_,
      Proto11400612::default_instance_,
      Proto11400612_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400612, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400612, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400612));
  Proto51400612_descriptor_ = file->message_type(43);
  static const int Proto51400612_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400612, polish_batch_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400612, magical_detail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400612, magical_id_),
  };
  Proto51400612_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400612_descriptor_,
      Proto51400612::default_instance_,
      Proto51400612_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400612, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400612, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400612));
  Proto81400601_descriptor_ = file->message_type(44);
  static const int Proto81400601_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400601, attr_list_),
  };
  Proto81400601_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400601_descriptor_,
      Proto81400601::default_instance_,
      Proto81400601_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400601, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400601, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400601));
  Proto80400111_descriptor_ = file->message_type(45);
  static const int Proto80400111_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400111, ai_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400111, ai_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400111, speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400111, toward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400111, ai_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400111, max_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400111, fight_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400111, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400111, space_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400111, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400111, pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400111, sub_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400111, sub_name_),
  };
  Proto80400111_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400111_descriptor_,
      Proto80400111::default_instance_,
      Proto80400111_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400111, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400111, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400111));
  Proto11400651_descriptor_ = file->message_type(46);
  static const int Proto11400651_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400651, fashion_part_),
  };
  Proto11400651_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400651_descriptor_,
      Proto11400651::default_instance_,
      Proto11400651_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400651, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400651, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400651));
  Proto51400651_descriptor_ = file->message_type(47);
  static const int Proto51400651_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400651, fashion_part_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400651, fashion_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400651, in_use_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400651, pkg_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400651, show_fashion_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400651, show_vip_fashion_list_),
  };
  Proto51400651_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400651_descriptor_,
      Proto51400651::default_instance_,
      Proto51400651_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400651, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400651, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400651));
  Proto11400652_descriptor_ = file->message_type(48);
  static const int Proto11400652_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400652, pkg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400652, fashion_id_),
  };
  Proto11400652_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400652_descriptor_,
      Proto11400652::default_instance_,
      Proto11400652_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400652, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400652, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400652));
  Proto51400652_descriptor_ = file->message_type(49);
  static const int Proto51400652_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400652, pkg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400652, pkg_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400652, old_fashion_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400652, new_fashion_id_),
  };
  Proto51400652_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400652_descriptor_,
      Proto51400652::default_instance_,
      Proto51400652_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400652, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400652, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400652));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient003_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400404_descriptor_, &Proto11400404::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400405_descriptor_, &Proto11400405::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400405_descriptor_, &Proto51400405::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400404_descriptor_, &Proto51400404::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400501_descriptor_, &Proto11400501::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400501_descriptor_, &Proto51400501::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400502_descriptor_, &Proto51400502::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400503_descriptor_, &Proto11400503::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400505_descriptor_, &Proto11400505::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400506_descriptor_, &Proto11400506::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400506_descriptor_, &Proto51400506::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400507_descriptor_, &Proto11400507::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400507_descriptor_, &Proto51400507::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400508_descriptor_, &Proto11400508::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400508_descriptor_, &Proto51400508::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400516_descriptor_, &Proto51400516::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400601_descriptor_, &Proto11400601::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400601_descriptor_, &Proto51400601::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400602_descriptor_, &Proto11400602::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400602_descriptor_, &Proto51400602::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400603_descriptor_, &Proto11400603::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400603_descriptor_, &Proto51400603::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400604_descriptor_, &Proto11400604::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400605_descriptor_, &Proto11400605::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400650_descriptor_, &Proto11400650::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400519_descriptor_, &Proto11400519::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400519_descriptor_, &Proto51400519::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400520_descriptor_, &Proto11400520::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400520_descriptor_, &Proto51400520::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400521_descriptor_, &Proto11400521::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400521_descriptor_, &Proto51400521::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400600_descriptor_, &Proto11400600::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400607_descriptor_, &Proto11400607::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400607_descriptor_, &Proto51400607::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400111_descriptor_, &Proto81400111::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400608_descriptor_, &Proto51400608::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400609_descriptor_, &Proto11400609::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400609_descriptor_, &Proto51400609::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400610_descriptor_, &Proto11400610::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400610_descriptor_, &Proto51400610::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400611_descriptor_, &Proto11400611::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400611_descriptor_, &Proto51400611::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400612_descriptor_, &Proto11400612::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400612_descriptor_, &Proto51400612::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400601_descriptor_, &Proto81400601::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400111_descriptor_, &Proto80400111::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400651_descriptor_, &Proto11400651::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400651_descriptor_, &Proto51400651::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400652_descriptor_, &Proto11400652::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400652_descriptor_, &Proto51400652::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient003_2eproto() {
  delete Proto11400404::default_instance_;
  delete Proto11400404_reflection_;
  delete Proto11400405::default_instance_;
  delete Proto11400405_reflection_;
  delete Proto51400405::default_instance_;
  delete Proto51400405_reflection_;
  delete Proto51400404::default_instance_;
  delete Proto51400404_reflection_;
  delete Proto11400501::default_instance_;
  delete Proto11400501_reflection_;
  delete Proto51400501::default_instance_;
  delete Proto51400501_reflection_;
  delete Proto51400502::default_instance_;
  delete Proto51400502_reflection_;
  delete Proto11400503::default_instance_;
  delete Proto11400503_reflection_;
  delete Proto11400505::default_instance_;
  delete Proto11400505_reflection_;
  delete Proto11400506::default_instance_;
  delete Proto11400506_reflection_;
  delete Proto51400506::default_instance_;
  delete Proto51400506_reflection_;
  delete Proto11400507::default_instance_;
  delete Proto11400507_reflection_;
  delete Proto51400507::default_instance_;
  delete Proto51400507_reflection_;
  delete Proto11400508::default_instance_;
  delete Proto11400508_reflection_;
  delete Proto51400508::default_instance_;
  delete Proto51400508_reflection_;
  delete Proto51400516::default_instance_;
  delete Proto51400516_reflection_;
  delete Proto11400601::default_instance_;
  delete Proto11400601_reflection_;
  delete Proto51400601::default_instance_;
  delete Proto51400601_reflection_;
  delete Proto11400602::default_instance_;
  delete Proto11400602_reflection_;
  delete Proto51400602::default_instance_;
  delete Proto51400602_reflection_;
  delete Proto11400603::default_instance_;
  delete Proto11400603_reflection_;
  delete Proto51400603::default_instance_;
  delete Proto51400603_reflection_;
  delete Proto11400604::default_instance_;
  delete Proto11400604_reflection_;
  delete Proto11400605::default_instance_;
  delete Proto11400605_reflection_;
  delete Proto11400650::default_instance_;
  delete Proto11400650_reflection_;
  delete Proto11400519::default_instance_;
  delete Proto11400519_reflection_;
  delete Proto51400519::default_instance_;
  delete Proto51400519_reflection_;
  delete Proto11400520::default_instance_;
  delete Proto11400520_reflection_;
  delete Proto51400520::default_instance_;
  delete Proto51400520_reflection_;
  delete Proto11400521::default_instance_;
  delete Proto11400521_reflection_;
  delete Proto51400521::default_instance_;
  delete Proto51400521_reflection_;
  delete Proto11400600::default_instance_;
  delete Proto11400600_reflection_;
  delete Proto11400607::default_instance_;
  delete Proto11400607_reflection_;
  delete Proto51400607::default_instance_;
  delete Proto51400607_reflection_;
  delete Proto81400111::default_instance_;
  delete Proto81400111_reflection_;
  delete Proto51400608::default_instance_;
  delete Proto51400608_reflection_;
  delete Proto11400609::default_instance_;
  delete Proto11400609_reflection_;
  delete Proto51400609::default_instance_;
  delete Proto51400609_reflection_;
  delete Proto11400610::default_instance_;
  delete Proto11400610_reflection_;
  delete Proto51400610::default_instance_;
  delete Proto51400610_reflection_;
  delete Proto11400611::default_instance_;
  delete Proto11400611_reflection_;
  delete Proto51400611::default_instance_;
  delete Proto51400611_reflection_;
  delete Proto11400612::default_instance_;
  delete Proto11400612_reflection_;
  delete Proto51400612::default_instance_;
  delete Proto51400612_reflection_;
  delete Proto81400601::default_instance_;
  delete Proto81400601_reflection_;
  delete Proto80400111::default_instance_;
  delete Proto80400111_reflection_;
  delete Proto11400651::default_instance_;
  delete Proto11400651_reflection_;
  delete Proto51400651::default_instance_;
  delete Proto51400651_reflection_;
  delete Proto11400652::default_instance_;
  delete Proto11400652_reflection_;
  delete Proto51400652::default_instance_;
  delete Proto51400652_reflection_;
}

void protobuf_AddDesc_ProtoClient003_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient003.proto\032\021ProtoPublic.prot"
    "o\"\035\n\rProto11400404\022\014\n\004type\030\001 \001(\005\"2\n\rProt"
    "o11400405\022\014\n\004type\030\001 \001(\005\022\023\n\013mount_shape\030\002"
    " \001(\005\"\035\n\rProto51400405\022\014\n\004type\030\001 \001(\005\"\035\n\rP"
    "roto51400404\022\014\n\004type\030\001 \001(\005\"!\n\rProto11400"
    "501\022\020\n\010beast_id\030\001 \001(\003\"\275\004\n\rProto51400501\022"
    "\020\n\010beast_id\030\001 \001(\003\022\022\n\nbeast_sort\030\002 \001(\005\022\022\n"
    "\nbeast_name\030\003 \001(\t\022\024\n\014action_state\030\004 \001(\005\022"
    "\023\n\013beast_level\030\005 \001(\005\022\024\n\014beast_growth\030\006 \001"
    "(\005\022\025\n\rbeast_ability\030\007 \001(\005\022\016\n\006attack\030\010 \001("
    "\005\022\013\n\003hit\030\t \001(\005\022\r\n\005crite\030\n \001(\005\022\r\n\005force\030\013"
    " \001(\005\022\020\n\010sky_soul\030\014 \001(\005\022\022\n\nearth_soul\030\r \001"
    "(\005\022\021\n\tlife_soul\030\016 \001(\005\022#\n\tskill_set\030\017 \003(\013"
    "2\020.ProtoBeastSkill\022\021\n\tsky_value\030\020 \001(\005\022\023\n"
    "\013earth_value\030\021 \001(\005\022\022\n\nlife_value\030\022 \001(\005\022\025"
    "\n\rgrowth_attack\030\023 \001(\005\022\022\n\ngrowth_hit\030\024 \001("
    "\005\022\023\n\013growth_crit\030\025 \001(\005\022\025\n\rconbine_value\030"
    "\026 \001(\005\022\023\n\013total_value\030\027 \001(\005\022\023\n\013skill_bloc"
    "k\030\030 \001(\005\022\026\n\016skill_conditon\030\031 \003(\005\022\032\n\022abili"
    "ty_trans_rate\030\032 \001(\005\022\020\n\010is_guard\030\033 \001(\005\"7\n"
    "\rProto51400502\022&\n\tbeast_set\030\001 \003(\0132\023.Prot"
    "oBaseBeastInfo\"5\n\rProto11400503\022\020\n\010beast"
    "_id\030\001 \001(\003\022\022\n\nbeast_name\030\002 \001(\t\"!\n\rProto11"
    "400505\022\020\n\010beast_id\030\001 \001(\003\"!\n\rProto1140050"
    "6\022\020\n\010beast_id\030\001 \001(\003\"6\n\rProto51400506\022\020\n\010"
    "beast_id\030\001 \001(\003\022\023\n\013beast_state\030\002 \001(\005\"3\n\rP"
    "roto11400507\022\020\n\010beast_id\030\001 \001(\003\022\020\n\010auto_b"
    "uy\030\002 \001(\005\"Q\n\rProto51400507\022\024\n\014success_fla"
    "g\030\001 \001(\005\022\024\n\014change_value\030\002 \001(\005\022\024\n\014upgrade"
    "_flag\030\003 \001(\005\"!\n\rProto11400508\022\020\n\010beast_id"
    "\030\001 \001(\003\"\\\n\rProto51400508\022\024\n\014growth_level\030"
    "\001 \001(\005\022\024\n\014growth_value\030\002 \001(\005\022\020\n\010beast_id\030"
    "\003 \001(\003\022\r\n\005force\030\004 \001(\005\"F\n\rProto51400516\022#\n"
    "\tskill_set\030\001 \003(\0132\020.ProtoBeastSkill\022\020\n\010be"
    "ast_id\030\002 \001(\003\"P\n\rProto11400601\022\021\n\tpkg_ind"
    "ex\030\001 \001(\005\022\023\n\013is_auto_buy\030\002 \001(\005\022\027\n\017is_batc"
    "h_refine\030\003 \001(\005\"O\n\rProto51400601\022\023\n\013is_gr"
    "ade_up\030\001 \001(\005\022\021\n\tpkg_index\030\002 \001(\005\022\026\n\016stren"
    "gthen_lvl\030\003 \001(\005\"\"\n\rProto11400602\022\021\n\tpkg_"
    "index\030\001 \001(\005\"H\n\rProto51400602\022\023\n\013aim_item"
    "_id\030\001 \001(\005\022\017\n\007item_id\030\002 \001(\005\022\021\n\tpkg_index\030"
    "\003 \001(\005\"H\n\rProto11400603\022\022\n\nmartial_id\030\001 \001"
    "(\005\022\020\n\010pkg_type\030\002 \001(\005\022\021\n\tpkg_index\030\003 \001(\005\""
    "$\n\rProto51400603\022\023\n\013aim_item_id\030\001 \001(\005\"\"\n"
    "\rProto11400604\022\021\n\tpkg_index\030\001 \001(\005\"E\n\rPro"
    "to11400605\022\017\n\007item_id\030\001 \001(\005\022\020\n\010pkg_type\030"
    "\002 \001(\005\022\021\n\tpkg_index\030\003 \001(\005\"E\n\rProto1140065"
    "0\022\017\n\007item_id\030\001 \001(\005\022\020\n\010pkg_type\030\002 \001(\005\022\021\n\t"
    "pkg_index\030\003 \001(\005\"!\n\rProto11400519\022\020\n\010beas"
    "t_id\030\001 \001(\003\"\245\001\n\rProto51400519\022\020\n\010sky_soul"
    "\030\001 \001(\005\022\021\n\tsky_value\030\002 \001(\005\022\022\n\nearth_soul\030"
    "\003 \001(\005\022\023\n\013earth_value\030\004 \001(\005\022\021\n\tlife_soul\030"
    "\005 \001(\005\022\022\n\nlife_value\030\006 \001(\005\022\020\n\010beast_id\030\007 "
    "\001(\003\022\r\n\005force\030\010 \001(\005\"F\n\rProto11400520\022\020\n\010b"
    "east_id\030\001 \001(\003\022\021\n\tsoul_type\030\002 \001(\005\022\020\n\010auto"
    "_buy\030\003 \001(\005\"c\n\rProto51400520\022\021\n\tsoul_type"
    "\030\001 \001(\005\022\023\n\013refine_flag\030\002 \001(\005\022\024\n\014refine_va"
    "lue\030\003 \001(\005\022\024\n\014upgrade_flag\030\004 \001(\005\"L\n\rProto"
    "11400521\022\024\n\014combine_flag\030\001 \001(\005\022\022\n\nmain_b"
    "east\030\002 \001(\003\022\021\n\tsub_beast\030\003 \001(\003\"\217\002\n\rProto5"
    "1400521\022\022\n\nmain_beast\030\001 \001(\003\022\022\n\nbeast_sor"
    "t\030\002 \001(\005\022\022\n\nbeast_name\030\003 \001(\t\022\017\n\007ability\030\004"
    " \001(\005\022\022\n\ngrowth_lvl\030\005 \001(\005\022\020\n\010sky_soul\030\006 \001"
    "(\005\022\022\n\nearth_soul\030\007 \001(\005\022\021\n\tlife_soul\030\010 \001("
    "\005\022\016\n\006attack\030\t \001(\005\022\013\n\003hit\030\n \001(\005\022\014\n\004crit\030\013"
    " \001(\005\022\r\n\005force\030\014 \001(\005\022\025\n\rconbine_value\030\r \001"
    "(\005\022\023\n\013total_value\030\016 \001(\005\"E\n\rProto11400600"
    "\022\017\n\007item_id\030\001 \001(\005\022\020\n\010pkg_type\030\002 \001(\005\022\021\n\tp"
    "kg_index\030\003 \001(\005\"B\n\rProto11400607\022\n\n\002id\030\001 "
    "\001(\005\022\020\n\010is_batch\030\002 \001(\005\022\023\n\013is_auto_buy\030\003 \001"
    "(\005\"\?\n\rProto51400607\022\016\n\006degree\030\001 \001(\005\022\022\n\ni"
    "s_upgrade\030\002 \001(\005\022\n\n\002id\030\003 \001(\005\"5\n\rProto8140"
    "0111\022$\n\nskill_info\030\001 \001(\0132\020.ProtoBeastSki"
    "ll\"V\n\rProto51400608\022 \n\tattr_list\030\001 \003(\0132\r"
    ".ProtoPairObj\022#\n\014magical_list\030\002 \003(\0132\r.Pr"
    "otoPairObj\"#\n\rProto11400609\022\022\n\nmagical_i"
    "d\030\001 \001(\005\"#\n\rProto51400609\022\022\n\nmagical_id\030\001"
    " \001(\005\"#\n\rProto11400610\022\022\n\nmagical_id\030\001 \001("
    "\005\"\257\001\n\rProto51400610\022\022\n\nmagical_id\030\001 \001(\005\022"
    "\023\n\013lucky_value\030\002 \001(\005\022\"\n\007cur_use\030\003 \001(\0132\021."
    "ProtoMagicalInfo\022(\n\rsingle_record\030\004 \001(\0132"
    "\021.ProtoMagicalInfo\022\'\n\014batch_record\030\005 \003(\013"
    "2\021.ProtoMagicalInfo\"q\n\rProto11400611\022\022\n\n"
    "magical_id\030\001 \001(\005\022\022\n\nis_special\030\002 \001(\005\022\020\n\010"
    "is_batch\030\003 \001(\005\022\023\n\013is_auto_buy\030\004 \001(\005\022\021\n\tl"
    "ock_list\030\005 \003(\005\"z\n\rProto51400611\022\022\n\nmagic"
    "al_id\030\001 \001(\005\022\022\n\nis_special\030\002 \001(\005\022\021\n\tlucky"
    "_num\030\003 \001(\005\022.\n\023magical_record_list\030\004 \003(\0132"
    "\021.ProtoMagicalInfo\"T\n\rProto11400612\022\031\n\021p"
    "olish_batch_mode\030\001 \001(\005\022\024\n\014select_index\030\002"
    " \001(\005\022\022\n\nmagical_id\030\003 \001(\005\"i\n\rProto5140061"
    "2\022\031\n\021polish_batch_mode\030\001 \001(\005\022)\n\016magical_"
    "detail\030\002 \001(\0132\021.ProtoMagicalInfo\022\022\n\nmagic"
    "al_id\030\003 \001(\005\"1\n\rProto81400601\022 \n\tattr_lis"
    "t\030\001 \003(\0132\r.ProtoPairObj\"\360\001\n\rProto80400111"
    "\022\r\n\005ai_id\030\001 \001(\003\022\017\n\007ai_sort\030\002 \001(\005\022\r\n\005spee"
    "d\030\003 \001(\005\022\016\n\006toward\030\004 \001(\005\022\020\n\010ai_blood\030\005 \001("
    "\005\022\021\n\tmax_blood\030\006 \001(\005\022\023\n\013fight_state\030\007 \001("
    "\005\022\020\n\010scene_id\030\010 \001(\005\022\020\n\010space_id\030\t \001(\005\022\017\n"
    "\007pixel_x\030\n \001(\005\022\017\n\007pixel_y\030\013 \001(\005\022\016\n\006sub_i"
    "d\030\014 \001(\003\022\020\n\010sub_name\030\r \001(\t\"%\n\rProto114006"
    "51\022\024\n\014fashion_part\030\001 \001(\005\"\247\001\n\rProto514006"
    "51\022\024\n\014fashion_part\030\001 \001(\005\022 \n\014fashion_list"
    "\030\002 \003(\0132\n.ProtoItem\022\021\n\tin_use_id\030\003 \001(\005\022\021\n"
    "\tpkg_index\030\004 \001(\005\022\031\n\021show_fashion_list\030\005 "
    "\003(\005\022\035\n\025show_vip_fashion_list\030\006 \003(\005\"5\n\rPr"
    "oto11400652\022\020\n\010pkg_type\030\001 \001(\005\022\022\n\nfashion"
    "_id\030\002 \001(\005\"d\n\rProto51400652\022\020\n\010pkg_type\030\001"
    " \001(\005\022\021\n\tpkg_index\030\002 \001(\005\022\026\n\016old_fashion_i"
    "d\030\003 \001(\005\022\026\n\016new_fashion_id\030\004 \001(\005", 4391);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient003.proto", &protobuf_RegisterTypes);
  Proto11400404::default_instance_ = new Proto11400404();
  Proto11400405::default_instance_ = new Proto11400405();
  Proto51400405::default_instance_ = new Proto51400405();
  Proto51400404::default_instance_ = new Proto51400404();
  Proto11400501::default_instance_ = new Proto11400501();
  Proto51400501::default_instance_ = new Proto51400501();
  Proto51400502::default_instance_ = new Proto51400502();
  Proto11400503::default_instance_ = new Proto11400503();
  Proto11400505::default_instance_ = new Proto11400505();
  Proto11400506::default_instance_ = new Proto11400506();
  Proto51400506::default_instance_ = new Proto51400506();
  Proto11400507::default_instance_ = new Proto11400507();
  Proto51400507::default_instance_ = new Proto51400507();
  Proto11400508::default_instance_ = new Proto11400508();
  Proto51400508::default_instance_ = new Proto51400508();
  Proto51400516::default_instance_ = new Proto51400516();
  Proto11400601::default_instance_ = new Proto11400601();
  Proto51400601::default_instance_ = new Proto51400601();
  Proto11400602::default_instance_ = new Proto11400602();
  Proto51400602::default_instance_ = new Proto51400602();
  Proto11400603::default_instance_ = new Proto11400603();
  Proto51400603::default_instance_ = new Proto51400603();
  Proto11400604::default_instance_ = new Proto11400604();
  Proto11400605::default_instance_ = new Proto11400605();
  Proto11400650::default_instance_ = new Proto11400650();
  Proto11400519::default_instance_ = new Proto11400519();
  Proto51400519::default_instance_ = new Proto51400519();
  Proto11400520::default_instance_ = new Proto11400520();
  Proto51400520::default_instance_ = new Proto51400520();
  Proto11400521::default_instance_ = new Proto11400521();
  Proto51400521::default_instance_ = new Proto51400521();
  Proto11400600::default_instance_ = new Proto11400600();
  Proto11400607::default_instance_ = new Proto11400607();
  Proto51400607::default_instance_ = new Proto51400607();
  Proto81400111::default_instance_ = new Proto81400111();
  Proto51400608::default_instance_ = new Proto51400608();
  Proto11400609::default_instance_ = new Proto11400609();
  Proto51400609::default_instance_ = new Proto51400609();
  Proto11400610::default_instance_ = new Proto11400610();
  Proto51400610::default_instance_ = new Proto51400610();
  Proto11400611::default_instance_ = new Proto11400611();
  Proto51400611::default_instance_ = new Proto51400611();
  Proto11400612::default_instance_ = new Proto11400612();
  Proto51400612::default_instance_ = new Proto51400612();
  Proto81400601::default_instance_ = new Proto81400601();
  Proto80400111::default_instance_ = new Proto80400111();
  Proto11400651::default_instance_ = new Proto11400651();
  Proto51400651::default_instance_ = new Proto51400651();
  Proto11400652::default_instance_ = new Proto11400652();
  Proto51400652::default_instance_ = new Proto51400652();
  Proto11400404::default_instance_->InitAsDefaultInstance();
  Proto11400405::default_instance_->InitAsDefaultInstance();
  Proto51400405::default_instance_->InitAsDefaultInstance();
  Proto51400404::default_instance_->InitAsDefaultInstance();
  Proto11400501::default_instance_->InitAsDefaultInstance();
  Proto51400501::default_instance_->InitAsDefaultInstance();
  Proto51400502::default_instance_->InitAsDefaultInstance();
  Proto11400503::default_instance_->InitAsDefaultInstance();
  Proto11400505::default_instance_->InitAsDefaultInstance();
  Proto11400506::default_instance_->InitAsDefaultInstance();
  Proto51400506::default_instance_->InitAsDefaultInstance();
  Proto11400507::default_instance_->InitAsDefaultInstance();
  Proto51400507::default_instance_->InitAsDefaultInstance();
  Proto11400508::default_instance_->InitAsDefaultInstance();
  Proto51400508::default_instance_->InitAsDefaultInstance();
  Proto51400516::default_instance_->InitAsDefaultInstance();
  Proto11400601::default_instance_->InitAsDefaultInstance();
  Proto51400601::default_instance_->InitAsDefaultInstance();
  Proto11400602::default_instance_->InitAsDefaultInstance();
  Proto51400602::default_instance_->InitAsDefaultInstance();
  Proto11400603::default_instance_->InitAsDefaultInstance();
  Proto51400603::default_instance_->InitAsDefaultInstance();
  Proto11400604::default_instance_->InitAsDefaultInstance();
  Proto11400605::default_instance_->InitAsDefaultInstance();
  Proto11400650::default_instance_->InitAsDefaultInstance();
  Proto11400519::default_instance_->InitAsDefaultInstance();
  Proto51400519::default_instance_->InitAsDefaultInstance();
  Proto11400520::default_instance_->InitAsDefaultInstance();
  Proto51400520::default_instance_->InitAsDefaultInstance();
  Proto11400521::default_instance_->InitAsDefaultInstance();
  Proto51400521::default_instance_->InitAsDefaultInstance();
  Proto11400600::default_instance_->InitAsDefaultInstance();
  Proto11400607::default_instance_->InitAsDefaultInstance();
  Proto51400607::default_instance_->InitAsDefaultInstance();
  Proto81400111::default_instance_->InitAsDefaultInstance();
  Proto51400608::default_instance_->InitAsDefaultInstance();
  Proto11400609::default_instance_->InitAsDefaultInstance();
  Proto51400609::default_instance_->InitAsDefaultInstance();
  Proto11400610::default_instance_->InitAsDefaultInstance();
  Proto51400610::default_instance_->InitAsDefaultInstance();
  Proto11400611::default_instance_->InitAsDefaultInstance();
  Proto51400611::default_instance_->InitAsDefaultInstance();
  Proto11400612::default_instance_->InitAsDefaultInstance();
  Proto51400612::default_instance_->InitAsDefaultInstance();
  Proto81400601::default_instance_->InitAsDefaultInstance();
  Proto80400111::default_instance_->InitAsDefaultInstance();
  Proto11400651::default_instance_->InitAsDefaultInstance();
  Proto51400651::default_instance_->InitAsDefaultInstance();
  Proto11400652::default_instance_->InitAsDefaultInstance();
  Proto51400652::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient003_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient003_2eproto {
  StaticDescriptorInitializer_ProtoClient003_2eproto() {
    protobuf_AddDesc_ProtoClient003_2eproto();
  }
} static_descriptor_initializer_ProtoClient003_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto11400404::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto11400404::Proto11400404()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400404::InitAsDefaultInstance() {
}

Proto11400404::Proto11400404(const Proto11400404& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400404::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400404::~Proto11400404() {
  SharedDtor();
}

void Proto11400404::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400404::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400404::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400404_descriptor_;
}

const Proto11400404& Proto11400404::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400404* Proto11400404::default_instance_ = NULL;

Proto11400404* Proto11400404::New() const {
  return new Proto11400404;
}

void Proto11400404::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400404::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400404::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400404::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400404::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400404::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400404* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400404*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400404::MergeFrom(const Proto11400404& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400404::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400404::CopyFrom(const Proto11400404& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400404::IsInitialized() const {
  
  return true;
}

void Proto11400404::Swap(Proto11400404* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400404::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400404_descriptor_;
  metadata.reflection = Proto11400404_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400405::kTypeFieldNumber;
const int Proto11400405::kMountShapeFieldNumber;
#endif  // !_MSC_VER

Proto11400405::Proto11400405()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400405::InitAsDefaultInstance() {
}

Proto11400405::Proto11400405(const Proto11400405& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400405::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  mount_shape_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400405::~Proto11400405() {
  SharedDtor();
}

void Proto11400405::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400405::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400405::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400405_descriptor_;
}

const Proto11400405& Proto11400405::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400405* Proto11400405::default_instance_ = NULL;

Proto11400405* Proto11400405::New() const {
  return new Proto11400405;
}

void Proto11400405::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    mount_shape_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400405::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_mount_shape;
        break;
      }
      
      // optional int32 mount_shape = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mount_shape:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mount_shape_)));
          set_has_mount_shape();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400405::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 mount_shape = 2;
  if (has_mount_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mount_shape(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400405::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 mount_shape = 2;
  if (has_mount_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mount_shape(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400405::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 mount_shape = 2;
    if (has_mount_shape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mount_shape());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400405::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400405* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400405*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400405::MergeFrom(const Proto11400405& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_mount_shape()) {
      set_mount_shape(from.mount_shape());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400405::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400405::CopyFrom(const Proto11400405& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400405::IsInitialized() const {
  
  return true;
}

void Proto11400405::Swap(Proto11400405* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(mount_shape_, other->mount_shape_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400405::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400405_descriptor_;
  metadata.reflection = Proto11400405_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400405::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto51400405::Proto51400405()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400405::InitAsDefaultInstance() {
}

Proto51400405::Proto51400405(const Proto51400405& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400405::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400405::~Proto51400405() {
  SharedDtor();
}

void Proto51400405::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400405::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400405::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400405_descriptor_;
}

const Proto51400405& Proto51400405::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400405* Proto51400405::default_instance_ = NULL;

Proto51400405* Proto51400405::New() const {
  return new Proto51400405;
}

void Proto51400405::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400405::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400405::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400405::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400405::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400405::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400405* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400405*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400405::MergeFrom(const Proto51400405& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400405::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400405::CopyFrom(const Proto51400405& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400405::IsInitialized() const {
  
  return true;
}

void Proto51400405::Swap(Proto51400405* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400405::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400405_descriptor_;
  metadata.reflection = Proto51400405_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400404::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto51400404::Proto51400404()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400404::InitAsDefaultInstance() {
}

Proto51400404::Proto51400404(const Proto51400404& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400404::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400404::~Proto51400404() {
  SharedDtor();
}

void Proto51400404::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400404::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400404::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400404_descriptor_;
}

const Proto51400404& Proto51400404::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400404* Proto51400404::default_instance_ = NULL;

Proto51400404* Proto51400404::New() const {
  return new Proto51400404;
}

void Proto51400404::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400404::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400404::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400404::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400404::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400404::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400404* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400404*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400404::MergeFrom(const Proto51400404& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400404::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400404::CopyFrom(const Proto51400404& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400404::IsInitialized() const {
  
  return true;
}

void Proto51400404::Swap(Proto51400404* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400404::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400404_descriptor_;
  metadata.reflection = Proto51400404_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400501::kBeastIdFieldNumber;
#endif  // !_MSC_VER

Proto11400501::Proto11400501()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400501::InitAsDefaultInstance() {
}

Proto11400501::Proto11400501(const Proto11400501& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400501::SharedCtor() {
  _cached_size_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400501::~Proto11400501() {
  SharedDtor();
}

void Proto11400501::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400501::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400501::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400501_descriptor_;
}

const Proto11400501& Proto11400501::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400501* Proto11400501::default_instance_ = NULL;

Proto11400501* Proto11400501::New() const {
  return new Proto11400501;
}

void Proto11400501::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    beast_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400501::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 beast_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400501::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->beast_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400501::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->beast_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400501::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 beast_id = 1;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400501::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400501* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400501*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400501::MergeFrom(const Proto11400501& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400501::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400501::CopyFrom(const Proto11400501& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400501::IsInitialized() const {
  
  return true;
}

void Proto11400501::Swap(Proto11400501* other) {
  if (other != this) {
    std::swap(beast_id_, other->beast_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400501::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400501_descriptor_;
  metadata.reflection = Proto11400501_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400501::kBeastIdFieldNumber;
const int Proto51400501::kBeastSortFieldNumber;
const int Proto51400501::kBeastNameFieldNumber;
const int Proto51400501::kActionStateFieldNumber;
const int Proto51400501::kBeastLevelFieldNumber;
const int Proto51400501::kBeastGrowthFieldNumber;
const int Proto51400501::kBeastAbilityFieldNumber;
const int Proto51400501::kAttackFieldNumber;
const int Proto51400501::kHitFieldNumber;
const int Proto51400501::kCriteFieldNumber;
const int Proto51400501::kForceFieldNumber;
const int Proto51400501::kSkySoulFieldNumber;
const int Proto51400501::kEarthSoulFieldNumber;
const int Proto51400501::kLifeSoulFieldNumber;
const int Proto51400501::kSkillSetFieldNumber;
const int Proto51400501::kSkyValueFieldNumber;
const int Proto51400501::kEarthValueFieldNumber;
const int Proto51400501::kLifeValueFieldNumber;
const int Proto51400501::kGrowthAttackFieldNumber;
const int Proto51400501::kGrowthHitFieldNumber;
const int Proto51400501::kGrowthCritFieldNumber;
const int Proto51400501::kConbineValueFieldNumber;
const int Proto51400501::kTotalValueFieldNumber;
const int Proto51400501::kSkillBlockFieldNumber;
const int Proto51400501::kSkillConditonFieldNumber;
const int Proto51400501::kAbilityTransRateFieldNumber;
const int Proto51400501::kIsGuardFieldNumber;
#endif  // !_MSC_VER

Proto51400501::Proto51400501()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400501::InitAsDefaultInstance() {
}

Proto51400501::Proto51400501(const Proto51400501& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400501::SharedCtor() {
  _cached_size_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  beast_sort_ = 0;
  beast_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  action_state_ = 0;
  beast_level_ = 0;
  beast_growth_ = 0;
  beast_ability_ = 0;
  attack_ = 0;
  hit_ = 0;
  crite_ = 0;
  force_ = 0;
  sky_soul_ = 0;
  earth_soul_ = 0;
  life_soul_ = 0;
  sky_value_ = 0;
  earth_value_ = 0;
  life_value_ = 0;
  growth_attack_ = 0;
  growth_hit_ = 0;
  growth_crit_ = 0;
  conbine_value_ = 0;
  total_value_ = 0;
  skill_block_ = 0;
  ability_trans_rate_ = 0;
  is_guard_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400501::~Proto51400501() {
  SharedDtor();
}

void Proto51400501::SharedDtor() {
  if (beast_name_ != &::google::protobuf::internal::kEmptyString) {
    delete beast_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto51400501::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400501::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400501_descriptor_;
}

const Proto51400501& Proto51400501::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400501* Proto51400501::default_instance_ = NULL;

Proto51400501* Proto51400501::New() const {
  return new Proto51400501;
}

void Proto51400501::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    beast_id_ = GOOGLE_LONGLONG(0);
    beast_sort_ = 0;
    if (has_beast_name()) {
      if (beast_name_ != &::google::protobuf::internal::kEmptyString) {
        beast_name_->clear();
      }
    }
    action_state_ = 0;
    beast_level_ = 0;
    beast_growth_ = 0;
    beast_ability_ = 0;
    attack_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    hit_ = 0;
    crite_ = 0;
    force_ = 0;
    sky_soul_ = 0;
    earth_soul_ = 0;
    life_soul_ = 0;
    sky_value_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    earth_value_ = 0;
    life_value_ = 0;
    growth_attack_ = 0;
    growth_hit_ = 0;
    growth_crit_ = 0;
    conbine_value_ = 0;
    total_value_ = 0;
    skill_block_ = 0;
  }
  if (_has_bits_[25 / 32] & (0xffu << (25 % 32))) {
    ability_trans_rate_ = 0;
    is_guard_ = 0;
  }
  skill_set_.Clear();
  skill_conditon_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400501::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 beast_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_beast_sort;
        break;
      }
      
      // optional int32 beast_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beast_sort_)));
          set_has_beast_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_beast_name;
        break;
      }
      
      // optional string beast_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_beast_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_beast_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->beast_name().data(), this->beast_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_action_state;
        break;
      }
      
      // optional int32 action_state = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_action_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_state_)));
          set_has_action_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_beast_level;
        break;
      }
      
      // optional int32 beast_level = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beast_level_)));
          set_has_beast_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_beast_growth;
        break;
      }
      
      // optional int32 beast_growth = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_growth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beast_growth_)));
          set_has_beast_growth();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_beast_ability;
        break;
      }
      
      // optional int32 beast_ability = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_ability:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beast_ability_)));
          set_has_beast_ability();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_attack;
        break;
      }
      
      // optional int32 attack = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attack_)));
          set_has_attack();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_hit;
        break;
      }
      
      // optional int32 hit = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hit_)));
          set_has_hit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_crite;
        break;
      }
      
      // optional int32 crite = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_crite:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crite_)));
          set_has_crite();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_force;
        break;
      }
      
      // optional int32 force = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_sky_soul;
        break;
      }
      
      // optional int32 sky_soul = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sky_soul:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sky_soul_)));
          set_has_sky_soul();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_earth_soul;
        break;
      }
      
      // optional int32 earth_soul = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_earth_soul:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &earth_soul_)));
          set_has_earth_soul();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_life_soul;
        break;
      }
      
      // optional int32 life_soul = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_life_soul:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &life_soul_)));
          set_has_life_soul();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_skill_set;
        break;
      }
      
      // repeated .ProtoBeastSkill skill_set = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skill_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_skill_set;
        if (input->ExpectTag(128)) goto parse_sky_value;
        break;
      }
      
      // optional int32 sky_value = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sky_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sky_value_)));
          set_has_sky_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_earth_value;
        break;
      }
      
      // optional int32 earth_value = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_earth_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &earth_value_)));
          set_has_earth_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_life_value;
        break;
      }
      
      // optional int32 life_value = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_life_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &life_value_)));
          set_has_life_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_growth_attack;
        break;
      }
      
      // optional int32 growth_attack = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_growth_attack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &growth_attack_)));
          set_has_growth_attack();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_growth_hit;
        break;
      }
      
      // optional int32 growth_hit = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_growth_hit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &growth_hit_)));
          set_has_growth_hit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_growth_crit;
        break;
      }
      
      // optional int32 growth_crit = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_growth_crit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &growth_crit_)));
          set_has_growth_crit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_conbine_value;
        break;
      }
      
      // optional int32 conbine_value = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_conbine_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &conbine_value_)));
          set_has_conbine_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_total_value;
        break;
      }
      
      // optional int32 total_value = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_value_)));
          set_has_total_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_skill_block;
        break;
      }
      
      // optional int32 skill_block = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_block:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_block_)));
          set_has_skill_block();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_skill_conditon;
        break;
      }
      
      // repeated int32 skill_conditon = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_conditon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 200, input, this->mutable_skill_conditon())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_skill_conditon())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_skill_conditon;
        if (input->ExpectTag(208)) goto parse_ability_trans_rate;
        break;
      }
      
      // optional int32 ability_trans_rate = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ability_trans_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ability_trans_rate_)));
          set_has_ability_trans_rate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(216)) goto parse_is_guard;
        break;
      }
      
      // optional int32 is_guard = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_guard:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_guard_)));
          set_has_is_guard();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400501::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->beast_id(), output);
  }
  
  // optional int32 beast_sort = 2;
  if (has_beast_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->beast_sort(), output);
  }
  
  // optional string beast_name = 3;
  if (has_beast_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->beast_name().data(), this->beast_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->beast_name(), output);
  }
  
  // optional int32 action_state = 4;
  if (has_action_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->action_state(), output);
  }
  
  // optional int32 beast_level = 5;
  if (has_beast_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->beast_level(), output);
  }
  
  // optional int32 beast_growth = 6;
  if (has_beast_growth()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->beast_growth(), output);
  }
  
  // optional int32 beast_ability = 7;
  if (has_beast_ability()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->beast_ability(), output);
  }
  
  // optional int32 attack = 8;
  if (has_attack()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->attack(), output);
  }
  
  // optional int32 hit = 9;
  if (has_hit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->hit(), output);
  }
  
  // optional int32 crite = 10;
  if (has_crite()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->crite(), output);
  }
  
  // optional int32 force = 11;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->force(), output);
  }
  
  // optional int32 sky_soul = 12;
  if (has_sky_soul()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->sky_soul(), output);
  }
  
  // optional int32 earth_soul = 13;
  if (has_earth_soul()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->earth_soul(), output);
  }
  
  // optional int32 life_soul = 14;
  if (has_life_soul()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->life_soul(), output);
  }
  
  // repeated .ProtoBeastSkill skill_set = 15;
  for (int i = 0; i < this->skill_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->skill_set(i), output);
  }
  
  // optional int32 sky_value = 16;
  if (has_sky_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->sky_value(), output);
  }
  
  // optional int32 earth_value = 17;
  if (has_earth_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->earth_value(), output);
  }
  
  // optional int32 life_value = 18;
  if (has_life_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->life_value(), output);
  }
  
  // optional int32 growth_attack = 19;
  if (has_growth_attack()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->growth_attack(), output);
  }
  
  // optional int32 growth_hit = 20;
  if (has_growth_hit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->growth_hit(), output);
  }
  
  // optional int32 growth_crit = 21;
  if (has_growth_crit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->growth_crit(), output);
  }
  
  // optional int32 conbine_value = 22;
  if (has_conbine_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->conbine_value(), output);
  }
  
  // optional int32 total_value = 23;
  if (has_total_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->total_value(), output);
  }
  
  // optional int32 skill_block = 24;
  if (has_skill_block()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->skill_block(), output);
  }
  
  // repeated int32 skill_conditon = 25;
  for (int i = 0; i < this->skill_conditon_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      25, this->skill_conditon(i), output);
  }
  
  // optional int32 ability_trans_rate = 26;
  if (has_ability_trans_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->ability_trans_rate(), output);
  }
  
  // optional int32 is_guard = 27;
  if (has_is_guard()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->is_guard(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400501::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->beast_id(), target);
  }
  
  // optional int32 beast_sort = 2;
  if (has_beast_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->beast_sort(), target);
  }
  
  // optional string beast_name = 3;
  if (has_beast_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->beast_name().data(), this->beast_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->beast_name(), target);
  }
  
  // optional int32 action_state = 4;
  if (has_action_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->action_state(), target);
  }
  
  // optional int32 beast_level = 5;
  if (has_beast_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->beast_level(), target);
  }
  
  // optional int32 beast_growth = 6;
  if (has_beast_growth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->beast_growth(), target);
  }
  
  // optional int32 beast_ability = 7;
  if (has_beast_ability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->beast_ability(), target);
  }
  
  // optional int32 attack = 8;
  if (has_attack()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->attack(), target);
  }
  
  // optional int32 hit = 9;
  if (has_hit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->hit(), target);
  }
  
  // optional int32 crite = 10;
  if (has_crite()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->crite(), target);
  }
  
  // optional int32 force = 11;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->force(), target);
  }
  
  // optional int32 sky_soul = 12;
  if (has_sky_soul()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->sky_soul(), target);
  }
  
  // optional int32 earth_soul = 13;
  if (has_earth_soul()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->earth_soul(), target);
  }
  
  // optional int32 life_soul = 14;
  if (has_life_soul()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->life_soul(), target);
  }
  
  // repeated .ProtoBeastSkill skill_set = 15;
  for (int i = 0; i < this->skill_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->skill_set(i), target);
  }
  
  // optional int32 sky_value = 16;
  if (has_sky_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->sky_value(), target);
  }
  
  // optional int32 earth_value = 17;
  if (has_earth_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->earth_value(), target);
  }
  
  // optional int32 life_value = 18;
  if (has_life_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->life_value(), target);
  }
  
  // optional int32 growth_attack = 19;
  if (has_growth_attack()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->growth_attack(), target);
  }
  
  // optional int32 growth_hit = 20;
  if (has_growth_hit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->growth_hit(), target);
  }
  
  // optional int32 growth_crit = 21;
  if (has_growth_crit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->growth_crit(), target);
  }
  
  // optional int32 conbine_value = 22;
  if (has_conbine_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->conbine_value(), target);
  }
  
  // optional int32 total_value = 23;
  if (has_total_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->total_value(), target);
  }
  
  // optional int32 skill_block = 24;
  if (has_skill_block()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->skill_block(), target);
  }
  
  // repeated int32 skill_conditon = 25;
  for (int i = 0; i < this->skill_conditon_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(25, this->skill_conditon(i), target);
  }
  
  // optional int32 ability_trans_rate = 26;
  if (has_ability_trans_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->ability_trans_rate(), target);
  }
  
  // optional int32 is_guard = 27;
  if (has_is_guard()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->is_guard(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400501::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 beast_id = 1;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
    // optional int32 beast_sort = 2;
    if (has_beast_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->beast_sort());
    }
    
    // optional string beast_name = 3;
    if (has_beast_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->beast_name());
    }
    
    // optional int32 action_state = 4;
    if (has_action_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action_state());
    }
    
    // optional int32 beast_level = 5;
    if (has_beast_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->beast_level());
    }
    
    // optional int32 beast_growth = 6;
    if (has_beast_growth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->beast_growth());
    }
    
    // optional int32 beast_ability = 7;
    if (has_beast_ability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->beast_ability());
    }
    
    // optional int32 attack = 8;
    if (has_attack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attack());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 hit = 9;
    if (has_hit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hit());
    }
    
    // optional int32 crite = 10;
    if (has_crite()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crite());
    }
    
    // optional int32 force = 11;
    if (has_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->force());
    }
    
    // optional int32 sky_soul = 12;
    if (has_sky_soul()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sky_soul());
    }
    
    // optional int32 earth_soul = 13;
    if (has_earth_soul()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->earth_soul());
    }
    
    // optional int32 life_soul = 14;
    if (has_life_soul()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->life_soul());
    }
    
    // optional int32 sky_value = 16;
    if (has_sky_value()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sky_value());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 earth_value = 17;
    if (has_earth_value()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->earth_value());
    }
    
    // optional int32 life_value = 18;
    if (has_life_value()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->life_value());
    }
    
    // optional int32 growth_attack = 19;
    if (has_growth_attack()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->growth_attack());
    }
    
    // optional int32 growth_hit = 20;
    if (has_growth_hit()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->growth_hit());
    }
    
    // optional int32 growth_crit = 21;
    if (has_growth_crit()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->growth_crit());
    }
    
    // optional int32 conbine_value = 22;
    if (has_conbine_value()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->conbine_value());
    }
    
    // optional int32 total_value = 23;
    if (has_total_value()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_value());
    }
    
    // optional int32 skill_block = 24;
    if (has_skill_block()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_block());
    }
    
  }
  if (_has_bits_[25 / 32] & (0xffu << (25 % 32))) {
    // optional int32 ability_trans_rate = 26;
    if (has_ability_trans_rate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ability_trans_rate());
    }
    
    // optional int32 is_guard = 27;
    if (has_is_guard()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_guard());
    }
    
  }
  // repeated .ProtoBeastSkill skill_set = 15;
  total_size += 1 * this->skill_set_size();
  for (int i = 0; i < this->skill_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skill_set(i));
  }
  
  // repeated int32 skill_conditon = 25;
  {
    int data_size = 0;
    for (int i = 0; i < this->skill_conditon_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->skill_conditon(i));
    }
    total_size += 2 * this->skill_conditon_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400501::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400501* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400501*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400501::MergeFrom(const Proto51400501& from) {
  GOOGLE_CHECK_NE(&from, this);
  skill_set_.MergeFrom(from.skill_set_);
  skill_conditon_.MergeFrom(from.skill_conditon_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
    if (from.has_beast_sort()) {
      set_beast_sort(from.beast_sort());
    }
    if (from.has_beast_name()) {
      set_beast_name(from.beast_name());
    }
    if (from.has_action_state()) {
      set_action_state(from.action_state());
    }
    if (from.has_beast_level()) {
      set_beast_level(from.beast_level());
    }
    if (from.has_beast_growth()) {
      set_beast_growth(from.beast_growth());
    }
    if (from.has_beast_ability()) {
      set_beast_ability(from.beast_ability());
    }
    if (from.has_attack()) {
      set_attack(from.attack());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_hit()) {
      set_hit(from.hit());
    }
    if (from.has_crite()) {
      set_crite(from.crite());
    }
    if (from.has_force()) {
      set_force(from.force());
    }
    if (from.has_sky_soul()) {
      set_sky_soul(from.sky_soul());
    }
    if (from.has_earth_soul()) {
      set_earth_soul(from.earth_soul());
    }
    if (from.has_life_soul()) {
      set_life_soul(from.life_soul());
    }
    if (from.has_sky_value()) {
      set_sky_value(from.sky_value());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_earth_value()) {
      set_earth_value(from.earth_value());
    }
    if (from.has_life_value()) {
      set_life_value(from.life_value());
    }
    if (from.has_growth_attack()) {
      set_growth_attack(from.growth_attack());
    }
    if (from.has_growth_hit()) {
      set_growth_hit(from.growth_hit());
    }
    if (from.has_growth_crit()) {
      set_growth_crit(from.growth_crit());
    }
    if (from.has_conbine_value()) {
      set_conbine_value(from.conbine_value());
    }
    if (from.has_total_value()) {
      set_total_value(from.total_value());
    }
    if (from.has_skill_block()) {
      set_skill_block(from.skill_block());
    }
  }
  if (from._has_bits_[25 / 32] & (0xffu << (25 % 32))) {
    if (from.has_ability_trans_rate()) {
      set_ability_trans_rate(from.ability_trans_rate());
    }
    if (from.has_is_guard()) {
      set_is_guard(from.is_guard());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400501::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400501::CopyFrom(const Proto51400501& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400501::IsInitialized() const {
  
  return true;
}

void Proto51400501::Swap(Proto51400501* other) {
  if (other != this) {
    std::swap(beast_id_, other->beast_id_);
    std::swap(beast_sort_, other->beast_sort_);
    std::swap(beast_name_, other->beast_name_);
    std::swap(action_state_, other->action_state_);
    std::swap(beast_level_, other->beast_level_);
    std::swap(beast_growth_, other->beast_growth_);
    std::swap(beast_ability_, other->beast_ability_);
    std::swap(attack_, other->attack_);
    std::swap(hit_, other->hit_);
    std::swap(crite_, other->crite_);
    std::swap(force_, other->force_);
    std::swap(sky_soul_, other->sky_soul_);
    std::swap(earth_soul_, other->earth_soul_);
    std::swap(life_soul_, other->life_soul_);
    skill_set_.Swap(&other->skill_set_);
    std::swap(sky_value_, other->sky_value_);
    std::swap(earth_value_, other->earth_value_);
    std::swap(life_value_, other->life_value_);
    std::swap(growth_attack_, other->growth_attack_);
    std::swap(growth_hit_, other->growth_hit_);
    std::swap(growth_crit_, other->growth_crit_);
    std::swap(conbine_value_, other->conbine_value_);
    std::swap(total_value_, other->total_value_);
    std::swap(skill_block_, other->skill_block_);
    skill_conditon_.Swap(&other->skill_conditon_);
    std::swap(ability_trans_rate_, other->ability_trans_rate_);
    std::swap(is_guard_, other->is_guard_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400501::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400501_descriptor_;
  metadata.reflection = Proto51400501_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400502::kBeastSetFieldNumber;
#endif  // !_MSC_VER

Proto51400502::Proto51400502()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400502::InitAsDefaultInstance() {
}

Proto51400502::Proto51400502(const Proto51400502& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400502::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400502::~Proto51400502() {
  SharedDtor();
}

void Proto51400502::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400502::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400502::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400502_descriptor_;
}

const Proto51400502& Proto51400502::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400502* Proto51400502::default_instance_ = NULL;

Proto51400502* Proto51400502::New() const {
  return new Proto51400502;
}

void Proto51400502::Clear() {
  beast_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400502::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoBaseBeastInfo beast_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_beast_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_beast_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_beast_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400502::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoBaseBeastInfo beast_set = 1;
  for (int i = 0; i < this->beast_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->beast_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400502::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoBaseBeastInfo beast_set = 1;
  for (int i = 0; i < this->beast_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->beast_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400502::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoBaseBeastInfo beast_set = 1;
  total_size += 1 * this->beast_set_size();
  for (int i = 0; i < this->beast_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->beast_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400502::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400502* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400502*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400502::MergeFrom(const Proto51400502& from) {
  GOOGLE_CHECK_NE(&from, this);
  beast_set_.MergeFrom(from.beast_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400502::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400502::CopyFrom(const Proto51400502& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400502::IsInitialized() const {
  
  return true;
}

void Proto51400502::Swap(Proto51400502* other) {
  if (other != this) {
    beast_set_.Swap(&other->beast_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400502::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400502_descriptor_;
  metadata.reflection = Proto51400502_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400503::kBeastIdFieldNumber;
const int Proto11400503::kBeastNameFieldNumber;
#endif  // !_MSC_VER

Proto11400503::Proto11400503()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400503::InitAsDefaultInstance() {
}

Proto11400503::Proto11400503(const Proto11400503& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400503::SharedCtor() {
  _cached_size_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  beast_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400503::~Proto11400503() {
  SharedDtor();
}

void Proto11400503::SharedDtor() {
  if (beast_name_ != &::google::protobuf::internal::kEmptyString) {
    delete beast_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto11400503::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400503::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400503_descriptor_;
}

const Proto11400503& Proto11400503::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400503* Proto11400503::default_instance_ = NULL;

Proto11400503* Proto11400503::New() const {
  return new Proto11400503;
}

void Proto11400503::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    beast_id_ = GOOGLE_LONGLONG(0);
    if (has_beast_name()) {
      if (beast_name_ != &::google::protobuf::internal::kEmptyString) {
        beast_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400503::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 beast_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_beast_name;
        break;
      }
      
      // optional string beast_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_beast_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_beast_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->beast_name().data(), this->beast_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400503::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->beast_id(), output);
  }
  
  // optional string beast_name = 2;
  if (has_beast_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->beast_name().data(), this->beast_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->beast_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400503::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->beast_id(), target);
  }
  
  // optional string beast_name = 2;
  if (has_beast_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->beast_name().data(), this->beast_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->beast_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400503::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 beast_id = 1;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
    // optional string beast_name = 2;
    if (has_beast_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->beast_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400503::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400503* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400503*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400503::MergeFrom(const Proto11400503& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
    if (from.has_beast_name()) {
      set_beast_name(from.beast_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400503::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400503::CopyFrom(const Proto11400503& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400503::IsInitialized() const {
  
  return true;
}

void Proto11400503::Swap(Proto11400503* other) {
  if (other != this) {
    std::swap(beast_id_, other->beast_id_);
    std::swap(beast_name_, other->beast_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400503::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400503_descriptor_;
  metadata.reflection = Proto11400503_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400505::kBeastIdFieldNumber;
#endif  // !_MSC_VER

Proto11400505::Proto11400505()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400505::InitAsDefaultInstance() {
}

Proto11400505::Proto11400505(const Proto11400505& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400505::SharedCtor() {
  _cached_size_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400505::~Proto11400505() {
  SharedDtor();
}

void Proto11400505::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400505::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400505::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400505_descriptor_;
}

const Proto11400505& Proto11400505::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400505* Proto11400505::default_instance_ = NULL;

Proto11400505* Proto11400505::New() const {
  return new Proto11400505;
}

void Proto11400505::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    beast_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400505::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 beast_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400505::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->beast_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400505::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->beast_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400505::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 beast_id = 1;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400505::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400505* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400505*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400505::MergeFrom(const Proto11400505& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400505::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400505::CopyFrom(const Proto11400505& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400505::IsInitialized() const {
  
  return true;
}

void Proto11400505::Swap(Proto11400505* other) {
  if (other != this) {
    std::swap(beast_id_, other->beast_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400505::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400505_descriptor_;
  metadata.reflection = Proto11400505_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400506::kBeastIdFieldNumber;
#endif  // !_MSC_VER

Proto11400506::Proto11400506()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400506::InitAsDefaultInstance() {
}

Proto11400506::Proto11400506(const Proto11400506& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400506::SharedCtor() {
  _cached_size_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400506::~Proto11400506() {
  SharedDtor();
}

void Proto11400506::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400506::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400506::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400506_descriptor_;
}

const Proto11400506& Proto11400506::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400506* Proto11400506::default_instance_ = NULL;

Proto11400506* Proto11400506::New() const {
  return new Proto11400506;
}

void Proto11400506::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    beast_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400506::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 beast_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400506::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->beast_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400506::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->beast_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400506::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 beast_id = 1;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400506::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400506* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400506*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400506::MergeFrom(const Proto11400506& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400506::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400506::CopyFrom(const Proto11400506& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400506::IsInitialized() const {
  
  return true;
}

void Proto11400506::Swap(Proto11400506* other) {
  if (other != this) {
    std::swap(beast_id_, other->beast_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400506::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400506_descriptor_;
  metadata.reflection = Proto11400506_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400506::kBeastIdFieldNumber;
const int Proto51400506::kBeastStateFieldNumber;
#endif  // !_MSC_VER

Proto51400506::Proto51400506()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400506::InitAsDefaultInstance() {
}

Proto51400506::Proto51400506(const Proto51400506& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400506::SharedCtor() {
  _cached_size_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  beast_state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400506::~Proto51400506() {
  SharedDtor();
}

void Proto51400506::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400506::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400506::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400506_descriptor_;
}

const Proto51400506& Proto51400506::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400506* Proto51400506::default_instance_ = NULL;

Proto51400506* Proto51400506::New() const {
  return new Proto51400506;
}

void Proto51400506::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    beast_id_ = GOOGLE_LONGLONG(0);
    beast_state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400506::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 beast_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_beast_state;
        break;
      }
      
      // optional int32 beast_state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beast_state_)));
          set_has_beast_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400506::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->beast_id(), output);
  }
  
  // optional int32 beast_state = 2;
  if (has_beast_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->beast_state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400506::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->beast_id(), target);
  }
  
  // optional int32 beast_state = 2;
  if (has_beast_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->beast_state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400506::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 beast_id = 1;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
    // optional int32 beast_state = 2;
    if (has_beast_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->beast_state());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400506::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400506* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400506*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400506::MergeFrom(const Proto51400506& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
    if (from.has_beast_state()) {
      set_beast_state(from.beast_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400506::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400506::CopyFrom(const Proto51400506& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400506::IsInitialized() const {
  
  return true;
}

void Proto51400506::Swap(Proto51400506* other) {
  if (other != this) {
    std::swap(beast_id_, other->beast_id_);
    std::swap(beast_state_, other->beast_state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400506::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400506_descriptor_;
  metadata.reflection = Proto51400506_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400507::kBeastIdFieldNumber;
const int Proto11400507::kAutoBuyFieldNumber;
#endif  // !_MSC_VER

Proto11400507::Proto11400507()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400507::InitAsDefaultInstance() {
}

Proto11400507::Proto11400507(const Proto11400507& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400507::SharedCtor() {
  _cached_size_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  auto_buy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400507::~Proto11400507() {
  SharedDtor();
}

void Proto11400507::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400507::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400507::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400507_descriptor_;
}

const Proto11400507& Proto11400507::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400507* Proto11400507::default_instance_ = NULL;

Proto11400507* Proto11400507::New() const {
  return new Proto11400507;
}

void Proto11400507::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    beast_id_ = GOOGLE_LONGLONG(0);
    auto_buy_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400507::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 beast_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_auto_buy;
        break;
      }
      
      // optional int32 auto_buy = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_buy_)));
          set_has_auto_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400507::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->beast_id(), output);
  }
  
  // optional int32 auto_buy = 2;
  if (has_auto_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->auto_buy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400507::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->beast_id(), target);
  }
  
  // optional int32 auto_buy = 2;
  if (has_auto_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->auto_buy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400507::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 beast_id = 1;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
    // optional int32 auto_buy = 2;
    if (has_auto_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_buy());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400507::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400507* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400507*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400507::MergeFrom(const Proto11400507& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
    if (from.has_auto_buy()) {
      set_auto_buy(from.auto_buy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400507::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400507::CopyFrom(const Proto11400507& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400507::IsInitialized() const {
  
  return true;
}

void Proto11400507::Swap(Proto11400507* other) {
  if (other != this) {
    std::swap(beast_id_, other->beast_id_);
    std::swap(auto_buy_, other->auto_buy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400507::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400507_descriptor_;
  metadata.reflection = Proto11400507_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400507::kSuccessFlagFieldNumber;
const int Proto51400507::kChangeValueFieldNumber;
const int Proto51400507::kUpgradeFlagFieldNumber;
#endif  // !_MSC_VER

Proto51400507::Proto51400507()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400507::InitAsDefaultInstance() {
}

Proto51400507::Proto51400507(const Proto51400507& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400507::SharedCtor() {
  _cached_size_ = 0;
  success_flag_ = 0;
  change_value_ = 0;
  upgrade_flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400507::~Proto51400507() {
  SharedDtor();
}

void Proto51400507::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400507::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400507::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400507_descriptor_;
}

const Proto51400507& Proto51400507::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400507* Proto51400507::default_instance_ = NULL;

Proto51400507* Proto51400507::New() const {
  return new Proto51400507;
}

void Proto51400507::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    success_flag_ = 0;
    change_value_ = 0;
    upgrade_flag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400507::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 success_flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &success_flag_)));
          set_has_success_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_change_value;
        break;
      }
      
      // optional int32 change_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_change_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &change_value_)));
          set_has_change_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_upgrade_flag;
        break;
      }
      
      // optional int32 upgrade_flag = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_upgrade_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &upgrade_flag_)));
          set_has_upgrade_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400507::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 success_flag = 1;
  if (has_success_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->success_flag(), output);
  }
  
  // optional int32 change_value = 2;
  if (has_change_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->change_value(), output);
  }
  
  // optional int32 upgrade_flag = 3;
  if (has_upgrade_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->upgrade_flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400507::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 success_flag = 1;
  if (has_success_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->success_flag(), target);
  }
  
  // optional int32 change_value = 2;
  if (has_change_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->change_value(), target);
  }
  
  // optional int32 upgrade_flag = 3;
  if (has_upgrade_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->upgrade_flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400507::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 success_flag = 1;
    if (has_success_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->success_flag());
    }
    
    // optional int32 change_value = 2;
    if (has_change_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->change_value());
    }
    
    // optional int32 upgrade_flag = 3;
    if (has_upgrade_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->upgrade_flag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400507::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400507* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400507*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400507::MergeFrom(const Proto51400507& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_success_flag()) {
      set_success_flag(from.success_flag());
    }
    if (from.has_change_value()) {
      set_change_value(from.change_value());
    }
    if (from.has_upgrade_flag()) {
      set_upgrade_flag(from.upgrade_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400507::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400507::CopyFrom(const Proto51400507& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400507::IsInitialized() const {
  
  return true;
}

void Proto51400507::Swap(Proto51400507* other) {
  if (other != this) {
    std::swap(success_flag_, other->success_flag_);
    std::swap(change_value_, other->change_value_);
    std::swap(upgrade_flag_, other->upgrade_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400507::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400507_descriptor_;
  metadata.reflection = Proto51400507_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400508::kBeastIdFieldNumber;
#endif  // !_MSC_VER

Proto11400508::Proto11400508()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400508::InitAsDefaultInstance() {
}

Proto11400508::Proto11400508(const Proto11400508& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400508::SharedCtor() {
  _cached_size_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400508::~Proto11400508() {
  SharedDtor();
}

void Proto11400508::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400508::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400508::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400508_descriptor_;
}

const Proto11400508& Proto11400508::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400508* Proto11400508::default_instance_ = NULL;

Proto11400508* Proto11400508::New() const {
  return new Proto11400508;
}

void Proto11400508::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    beast_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400508::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 beast_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400508::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->beast_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400508::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->beast_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400508::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 beast_id = 1;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400508::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400508* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400508*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400508::MergeFrom(const Proto11400508& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400508::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400508::CopyFrom(const Proto11400508& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400508::IsInitialized() const {
  
  return true;
}

void Proto11400508::Swap(Proto11400508* other) {
  if (other != this) {
    std::swap(beast_id_, other->beast_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400508::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400508_descriptor_;
  metadata.reflection = Proto11400508_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400508::kGrowthLevelFieldNumber;
const int Proto51400508::kGrowthValueFieldNumber;
const int Proto51400508::kBeastIdFieldNumber;
const int Proto51400508::kForceFieldNumber;
#endif  // !_MSC_VER

Proto51400508::Proto51400508()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400508::InitAsDefaultInstance() {
}

Proto51400508::Proto51400508(const Proto51400508& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400508::SharedCtor() {
  _cached_size_ = 0;
  growth_level_ = 0;
  growth_value_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  force_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400508::~Proto51400508() {
  SharedDtor();
}

void Proto51400508::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400508::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400508::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400508_descriptor_;
}

const Proto51400508& Proto51400508::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400508* Proto51400508::default_instance_ = NULL;

Proto51400508* Proto51400508::New() const {
  return new Proto51400508;
}

void Proto51400508::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    growth_level_ = 0;
    growth_value_ = 0;
    beast_id_ = GOOGLE_LONGLONG(0);
    force_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400508::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 growth_level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &growth_level_)));
          set_has_growth_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_growth_value;
        break;
      }
      
      // optional int32 growth_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_growth_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &growth_value_)));
          set_has_growth_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_beast_id;
        break;
      }
      
      // optional int64 beast_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_force;
        break;
      }
      
      // optional int32 force = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400508::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 growth_level = 1;
  if (has_growth_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->growth_level(), output);
  }
  
  // optional int32 growth_value = 2;
  if (has_growth_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->growth_value(), output);
  }
  
  // optional int64 beast_id = 3;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->beast_id(), output);
  }
  
  // optional int32 force = 4;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->force(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400508::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 growth_level = 1;
  if (has_growth_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->growth_level(), target);
  }
  
  // optional int32 growth_value = 2;
  if (has_growth_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->growth_value(), target);
  }
  
  // optional int64 beast_id = 3;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->beast_id(), target);
  }
  
  // optional int32 force = 4;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->force(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400508::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 growth_level = 1;
    if (has_growth_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->growth_level());
    }
    
    // optional int32 growth_value = 2;
    if (has_growth_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->growth_value());
    }
    
    // optional int64 beast_id = 3;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
    // optional int32 force = 4;
    if (has_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->force());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400508::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400508* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400508*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400508::MergeFrom(const Proto51400508& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_growth_level()) {
      set_growth_level(from.growth_level());
    }
    if (from.has_growth_value()) {
      set_growth_value(from.growth_value());
    }
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
    if (from.has_force()) {
      set_force(from.force());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400508::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400508::CopyFrom(const Proto51400508& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400508::IsInitialized() const {
  
  return true;
}

void Proto51400508::Swap(Proto51400508* other) {
  if (other != this) {
    std::swap(growth_level_, other->growth_level_);
    std::swap(growth_value_, other->growth_value_);
    std::swap(beast_id_, other->beast_id_);
    std::swap(force_, other->force_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400508::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400508_descriptor_;
  metadata.reflection = Proto51400508_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400516::kSkillSetFieldNumber;
const int Proto51400516::kBeastIdFieldNumber;
#endif  // !_MSC_VER

Proto51400516::Proto51400516()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400516::InitAsDefaultInstance() {
}

Proto51400516::Proto51400516(const Proto51400516& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400516::SharedCtor() {
  _cached_size_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400516::~Proto51400516() {
  SharedDtor();
}

void Proto51400516::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400516::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400516::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400516_descriptor_;
}

const Proto51400516& Proto51400516::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400516* Proto51400516::default_instance_ = NULL;

Proto51400516* Proto51400516::New() const {
  return new Proto51400516;
}

void Proto51400516::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    beast_id_ = GOOGLE_LONGLONG(0);
  }
  skill_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400516::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoBeastSkill skill_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skill_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_skill_set;
        if (input->ExpectTag(16)) goto parse_beast_id;
        break;
      }
      
      // optional int64 beast_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400516::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoBeastSkill skill_set = 1;
  for (int i = 0; i < this->skill_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->skill_set(i), output);
  }
  
  // optional int64 beast_id = 2;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->beast_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400516::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoBeastSkill skill_set = 1;
  for (int i = 0; i < this->skill_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->skill_set(i), target);
  }
  
  // optional int64 beast_id = 2;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->beast_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400516::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int64 beast_id = 2;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
  }
  // repeated .ProtoBeastSkill skill_set = 1;
  total_size += 1 * this->skill_set_size();
  for (int i = 0; i < this->skill_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skill_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400516::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400516* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400516*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400516::MergeFrom(const Proto51400516& from) {
  GOOGLE_CHECK_NE(&from, this);
  skill_set_.MergeFrom(from.skill_set_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400516::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400516::CopyFrom(const Proto51400516& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400516::IsInitialized() const {
  
  return true;
}

void Proto51400516::Swap(Proto51400516* other) {
  if (other != this) {
    skill_set_.Swap(&other->skill_set_);
    std::swap(beast_id_, other->beast_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400516::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400516_descriptor_;
  metadata.reflection = Proto51400516_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400601::kPkgIndexFieldNumber;
const int Proto11400601::kIsAutoBuyFieldNumber;
const int Proto11400601::kIsBatchRefineFieldNumber;
#endif  // !_MSC_VER

Proto11400601::Proto11400601()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400601::InitAsDefaultInstance() {
}

Proto11400601::Proto11400601(const Proto11400601& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400601::SharedCtor() {
  _cached_size_ = 0;
  pkg_index_ = 0;
  is_auto_buy_ = 0;
  is_batch_refine_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400601::~Proto11400601() {
  SharedDtor();
}

void Proto11400601::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400601::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400601::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400601_descriptor_;
}

const Proto11400601& Proto11400601::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400601* Proto11400601::default_instance_ = NULL;

Proto11400601* Proto11400601::New() const {
  return new Proto11400601;
}

void Proto11400601::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pkg_index_ = 0;
    is_auto_buy_ = 0;
    is_batch_refine_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400601::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pkg_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_auto_buy;
        break;
      }
      
      // optional int32 is_auto_buy = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_auto_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_auto_buy_)));
          set_has_is_auto_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_batch_refine;
        break;
      }
      
      // optional int32 is_batch_refine = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_batch_refine:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_batch_refine_)));
          set_has_is_batch_refine();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400601::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pkg_index = 1;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pkg_index(), output);
  }
  
  // optional int32 is_auto_buy = 2;
  if (has_is_auto_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_auto_buy(), output);
  }
  
  // optional int32 is_batch_refine = 3;
  if (has_is_batch_refine()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_batch_refine(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400601::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pkg_index = 1;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pkg_index(), target);
  }
  
  // optional int32 is_auto_buy = 2;
  if (has_is_auto_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_auto_buy(), target);
  }
  
  // optional int32 is_batch_refine = 3;
  if (has_is_batch_refine()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_batch_refine(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400601::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pkg_index = 1;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
    // optional int32 is_auto_buy = 2;
    if (has_is_auto_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_auto_buy());
    }
    
    // optional int32 is_batch_refine = 3;
    if (has_is_batch_refine()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_batch_refine());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400601::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400601* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400601*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400601::MergeFrom(const Proto11400601& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
    if (from.has_is_auto_buy()) {
      set_is_auto_buy(from.is_auto_buy());
    }
    if (from.has_is_batch_refine()) {
      set_is_batch_refine(from.is_batch_refine());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400601::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400601::CopyFrom(const Proto11400601& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400601::IsInitialized() const {
  
  return true;
}

void Proto11400601::Swap(Proto11400601* other) {
  if (other != this) {
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(is_auto_buy_, other->is_auto_buy_);
    std::swap(is_batch_refine_, other->is_batch_refine_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400601::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400601_descriptor_;
  metadata.reflection = Proto11400601_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400601::kIsGradeUpFieldNumber;
const int Proto51400601::kPkgIndexFieldNumber;
const int Proto51400601::kStrengthenLvlFieldNumber;
#endif  // !_MSC_VER

Proto51400601::Proto51400601()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400601::InitAsDefaultInstance() {
}

Proto51400601::Proto51400601(const Proto51400601& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400601::SharedCtor() {
  _cached_size_ = 0;
  is_grade_up_ = 0;
  pkg_index_ = 0;
  strengthen_lvl_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400601::~Proto51400601() {
  SharedDtor();
}

void Proto51400601::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400601::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400601::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400601_descriptor_;
}

const Proto51400601& Proto51400601::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400601* Proto51400601::default_instance_ = NULL;

Proto51400601* Proto51400601::New() const {
  return new Proto51400601;
}

void Proto51400601::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_grade_up_ = 0;
    pkg_index_ = 0;
    strengthen_lvl_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400601::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 is_grade_up = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_grade_up_)));
          set_has_is_grade_up();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pkg_index;
        break;
      }
      
      // optional int32 pkg_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_strengthen_lvl;
        break;
      }
      
      // optional int32 strengthen_lvl = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_strengthen_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &strengthen_lvl_)));
          set_has_strengthen_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400601::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 is_grade_up = 1;
  if (has_is_grade_up()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->is_grade_up(), output);
  }
  
  // optional int32 pkg_index = 2;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pkg_index(), output);
  }
  
  // optional int32 strengthen_lvl = 3;
  if (has_strengthen_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->strengthen_lvl(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400601::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 is_grade_up = 1;
  if (has_is_grade_up()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->is_grade_up(), target);
  }
  
  // optional int32 pkg_index = 2;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pkg_index(), target);
  }
  
  // optional int32 strengthen_lvl = 3;
  if (has_strengthen_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->strengthen_lvl(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400601::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 is_grade_up = 1;
    if (has_is_grade_up()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_grade_up());
    }
    
    // optional int32 pkg_index = 2;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
    // optional int32 strengthen_lvl = 3;
    if (has_strengthen_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->strengthen_lvl());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400601::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400601* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400601*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400601::MergeFrom(const Proto51400601& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_grade_up()) {
      set_is_grade_up(from.is_grade_up());
    }
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
    if (from.has_strengthen_lvl()) {
      set_strengthen_lvl(from.strengthen_lvl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400601::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400601::CopyFrom(const Proto51400601& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400601::IsInitialized() const {
  
  return true;
}

void Proto51400601::Swap(Proto51400601* other) {
  if (other != this) {
    std::swap(is_grade_up_, other->is_grade_up_);
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(strengthen_lvl_, other->strengthen_lvl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400601::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400601_descriptor_;
  metadata.reflection = Proto51400601_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400602::kPkgIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400602::Proto11400602()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400602::InitAsDefaultInstance() {
}

Proto11400602::Proto11400602(const Proto11400602& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400602::SharedCtor() {
  _cached_size_ = 0;
  pkg_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400602::~Proto11400602() {
  SharedDtor();
}

void Proto11400602::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400602::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400602::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400602_descriptor_;
}

const Proto11400602& Proto11400602::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400602* Proto11400602::default_instance_ = NULL;

Proto11400602* Proto11400602::New() const {
  return new Proto11400602;
}

void Proto11400602::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pkg_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400602::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pkg_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400602::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pkg_index = 1;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pkg_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400602::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pkg_index = 1;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pkg_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400602::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pkg_index = 1;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400602::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400602* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400602*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400602::MergeFrom(const Proto11400602& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400602::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400602::CopyFrom(const Proto11400602& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400602::IsInitialized() const {
  
  return true;
}

void Proto11400602::Swap(Proto11400602* other) {
  if (other != this) {
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400602::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400602_descriptor_;
  metadata.reflection = Proto11400602_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400602::kAimItemIdFieldNumber;
const int Proto51400602::kItemIdFieldNumber;
const int Proto51400602::kPkgIndexFieldNumber;
#endif  // !_MSC_VER

Proto51400602::Proto51400602()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400602::InitAsDefaultInstance() {
}

Proto51400602::Proto51400602(const Proto51400602& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400602::SharedCtor() {
  _cached_size_ = 0;
  aim_item_id_ = 0;
  item_id_ = 0;
  pkg_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400602::~Proto51400602() {
  SharedDtor();
}

void Proto51400602::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400602::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400602::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400602_descriptor_;
}

const Proto51400602& Proto51400602::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400602* Proto51400602::default_instance_ = NULL;

Proto51400602* Proto51400602::New() const {
  return new Proto51400602;
}

void Proto51400602::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    aim_item_id_ = 0;
    item_id_ = 0;
    pkg_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400602::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 aim_item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &aim_item_id_)));
          set_has_aim_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }
      
      // optional int32 item_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pkg_index;
        break;
      }
      
      // optional int32 pkg_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400602::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 aim_item_id = 1;
  if (has_aim_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->aim_item_id(), output);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_id(), output);
  }
  
  // optional int32 pkg_index = 3;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pkg_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400602::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 aim_item_id = 1;
  if (has_aim_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->aim_item_id(), target);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_id(), target);
  }
  
  // optional int32 pkg_index = 3;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pkg_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400602::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 aim_item_id = 1;
    if (has_aim_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->aim_item_id());
    }
    
    // optional int32 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 pkg_index = 3;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400602::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400602* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400602*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400602::MergeFrom(const Proto51400602& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_aim_item_id()) {
      set_aim_item_id(from.aim_item_id());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400602::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400602::CopyFrom(const Proto51400602& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400602::IsInitialized() const {
  
  return true;
}

void Proto51400602::Swap(Proto51400602* other) {
  if (other != this) {
    std::swap(aim_item_id_, other->aim_item_id_);
    std::swap(item_id_, other->item_id_);
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400602::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400602_descriptor_;
  metadata.reflection = Proto51400602_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400603::kMartialIdFieldNumber;
const int Proto11400603::kPkgTypeFieldNumber;
const int Proto11400603::kPkgIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400603::Proto11400603()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400603::InitAsDefaultInstance() {
}

Proto11400603::Proto11400603(const Proto11400603& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400603::SharedCtor() {
  _cached_size_ = 0;
  martial_id_ = 0;
  pkg_type_ = 0;
  pkg_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400603::~Proto11400603() {
  SharedDtor();
}

void Proto11400603::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400603::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400603::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400603_descriptor_;
}

const Proto11400603& Proto11400603::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400603* Proto11400603::default_instance_ = NULL;

Proto11400603* Proto11400603::New() const {
  return new Proto11400603;
}

void Proto11400603::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    martial_id_ = 0;
    pkg_type_ = 0;
    pkg_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400603::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 martial_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &martial_id_)));
          set_has_martial_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pkg_type;
        break;
      }
      
      // optional int32 pkg_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_type_)));
          set_has_pkg_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pkg_index;
        break;
      }
      
      // optional int32 pkg_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400603::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 martial_id = 1;
  if (has_martial_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->martial_id(), output);
  }
  
  // optional int32 pkg_type = 2;
  if (has_pkg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pkg_type(), output);
  }
  
  // optional int32 pkg_index = 3;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pkg_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400603::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 martial_id = 1;
  if (has_martial_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->martial_id(), target);
  }
  
  // optional int32 pkg_type = 2;
  if (has_pkg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pkg_type(), target);
  }
  
  // optional int32 pkg_index = 3;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pkg_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400603::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 martial_id = 1;
    if (has_martial_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->martial_id());
    }
    
    // optional int32 pkg_type = 2;
    if (has_pkg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_type());
    }
    
    // optional int32 pkg_index = 3;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400603::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400603* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400603*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400603::MergeFrom(const Proto11400603& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_martial_id()) {
      set_martial_id(from.martial_id());
    }
    if (from.has_pkg_type()) {
      set_pkg_type(from.pkg_type());
    }
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400603::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400603::CopyFrom(const Proto11400603& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400603::IsInitialized() const {
  
  return true;
}

void Proto11400603::Swap(Proto11400603* other) {
  if (other != this) {
    std::swap(martial_id_, other->martial_id_);
    std::swap(pkg_type_, other->pkg_type_);
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400603::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400603_descriptor_;
  metadata.reflection = Proto11400603_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400603::kAimItemIdFieldNumber;
#endif  // !_MSC_VER

Proto51400603::Proto51400603()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400603::InitAsDefaultInstance() {
}

Proto51400603::Proto51400603(const Proto51400603& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400603::SharedCtor() {
  _cached_size_ = 0;
  aim_item_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400603::~Proto51400603() {
  SharedDtor();
}

void Proto51400603::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400603::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400603::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400603_descriptor_;
}

const Proto51400603& Proto51400603::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400603* Proto51400603::default_instance_ = NULL;

Proto51400603* Proto51400603::New() const {
  return new Proto51400603;
}

void Proto51400603::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    aim_item_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400603::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 aim_item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &aim_item_id_)));
          set_has_aim_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400603::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 aim_item_id = 1;
  if (has_aim_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->aim_item_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400603::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 aim_item_id = 1;
  if (has_aim_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->aim_item_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400603::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 aim_item_id = 1;
    if (has_aim_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->aim_item_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400603::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400603* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400603*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400603::MergeFrom(const Proto51400603& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_aim_item_id()) {
      set_aim_item_id(from.aim_item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400603::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400603::CopyFrom(const Proto51400603& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400603::IsInitialized() const {
  
  return true;
}

void Proto51400603::Swap(Proto51400603* other) {
  if (other != this) {
    std::swap(aim_item_id_, other->aim_item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400603::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400603_descriptor_;
  metadata.reflection = Proto51400603_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400604::kPkgIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400604::Proto11400604()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400604::InitAsDefaultInstance() {
}

Proto11400604::Proto11400604(const Proto11400604& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400604::SharedCtor() {
  _cached_size_ = 0;
  pkg_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400604::~Proto11400604() {
  SharedDtor();
}

void Proto11400604::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400604::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400604::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400604_descriptor_;
}

const Proto11400604& Proto11400604::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400604* Proto11400604::default_instance_ = NULL;

Proto11400604* Proto11400604::New() const {
  return new Proto11400604;
}

void Proto11400604::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pkg_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400604::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pkg_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400604::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pkg_index = 1;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pkg_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400604::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pkg_index = 1;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pkg_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400604::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pkg_index = 1;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400604::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400604* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400604*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400604::MergeFrom(const Proto11400604& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400604::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400604::CopyFrom(const Proto11400604& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400604::IsInitialized() const {
  
  return true;
}

void Proto11400604::Swap(Proto11400604* other) {
  if (other != this) {
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400604::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400604_descriptor_;
  metadata.reflection = Proto11400604_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400605::kItemIdFieldNumber;
const int Proto11400605::kPkgTypeFieldNumber;
const int Proto11400605::kPkgIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400605::Proto11400605()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400605::InitAsDefaultInstance() {
}

Proto11400605::Proto11400605(const Proto11400605& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400605::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  pkg_type_ = 0;
  pkg_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400605::~Proto11400605() {
  SharedDtor();
}

void Proto11400605::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400605::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400605::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400605_descriptor_;
}

const Proto11400605& Proto11400605::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400605* Proto11400605::default_instance_ = NULL;

Proto11400605* Proto11400605::New() const {
  return new Proto11400605;
}

void Proto11400605::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    pkg_type_ = 0;
    pkg_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400605::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pkg_type;
        break;
      }
      
      // optional int32 pkg_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_type_)));
          set_has_pkg_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pkg_index;
        break;
      }
      
      // optional int32 pkg_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400605::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 pkg_type = 2;
  if (has_pkg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pkg_type(), output);
  }
  
  // optional int32 pkg_index = 3;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pkg_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400605::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 pkg_type = 2;
  if (has_pkg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pkg_type(), target);
  }
  
  // optional int32 pkg_index = 3;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pkg_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400605::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 pkg_type = 2;
    if (has_pkg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_type());
    }
    
    // optional int32 pkg_index = 3;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400605::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400605* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400605*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400605::MergeFrom(const Proto11400605& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_pkg_type()) {
      set_pkg_type(from.pkg_type());
    }
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400605::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400605::CopyFrom(const Proto11400605& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400605::IsInitialized() const {
  
  return true;
}

void Proto11400605::Swap(Proto11400605* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(pkg_type_, other->pkg_type_);
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400605::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400605_descriptor_;
  metadata.reflection = Proto11400605_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400650::kItemIdFieldNumber;
const int Proto11400650::kPkgTypeFieldNumber;
const int Proto11400650::kPkgIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400650::Proto11400650()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400650::InitAsDefaultInstance() {
}

Proto11400650::Proto11400650(const Proto11400650& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400650::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  pkg_type_ = 0;
  pkg_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400650::~Proto11400650() {
  SharedDtor();
}

void Proto11400650::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400650::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400650::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400650_descriptor_;
}

const Proto11400650& Proto11400650::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400650* Proto11400650::default_instance_ = NULL;

Proto11400650* Proto11400650::New() const {
  return new Proto11400650;
}

void Proto11400650::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    pkg_type_ = 0;
    pkg_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400650::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pkg_type;
        break;
      }
      
      // optional int32 pkg_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_type_)));
          set_has_pkg_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pkg_index;
        break;
      }
      
      // optional int32 pkg_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400650::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 pkg_type = 2;
  if (has_pkg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pkg_type(), output);
  }
  
  // optional int32 pkg_index = 3;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pkg_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400650::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 pkg_type = 2;
  if (has_pkg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pkg_type(), target);
  }
  
  // optional int32 pkg_index = 3;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pkg_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400650::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 pkg_type = 2;
    if (has_pkg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_type());
    }
    
    // optional int32 pkg_index = 3;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400650::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400650* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400650*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400650::MergeFrom(const Proto11400650& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_pkg_type()) {
      set_pkg_type(from.pkg_type());
    }
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400650::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400650::CopyFrom(const Proto11400650& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400650::IsInitialized() const {
  
  return true;
}

void Proto11400650::Swap(Proto11400650* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(pkg_type_, other->pkg_type_);
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400650::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400650_descriptor_;
  metadata.reflection = Proto11400650_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400519::kBeastIdFieldNumber;
#endif  // !_MSC_VER

Proto11400519::Proto11400519()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400519::InitAsDefaultInstance() {
}

Proto11400519::Proto11400519(const Proto11400519& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400519::SharedCtor() {
  _cached_size_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400519::~Proto11400519() {
  SharedDtor();
}

void Proto11400519::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400519::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400519::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400519_descriptor_;
}

const Proto11400519& Proto11400519::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400519* Proto11400519::default_instance_ = NULL;

Proto11400519* Proto11400519::New() const {
  return new Proto11400519;
}

void Proto11400519::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    beast_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400519::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 beast_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400519::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->beast_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400519::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->beast_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400519::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 beast_id = 1;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400519::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400519* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400519*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400519::MergeFrom(const Proto11400519& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400519::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400519::CopyFrom(const Proto11400519& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400519::IsInitialized() const {
  
  return true;
}

void Proto11400519::Swap(Proto11400519* other) {
  if (other != this) {
    std::swap(beast_id_, other->beast_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400519::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400519_descriptor_;
  metadata.reflection = Proto11400519_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400519::kSkySoulFieldNumber;
const int Proto51400519::kSkyValueFieldNumber;
const int Proto51400519::kEarthSoulFieldNumber;
const int Proto51400519::kEarthValueFieldNumber;
const int Proto51400519::kLifeSoulFieldNumber;
const int Proto51400519::kLifeValueFieldNumber;
const int Proto51400519::kBeastIdFieldNumber;
const int Proto51400519::kForceFieldNumber;
#endif  // !_MSC_VER

Proto51400519::Proto51400519()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400519::InitAsDefaultInstance() {
}

Proto51400519::Proto51400519(const Proto51400519& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400519::SharedCtor() {
  _cached_size_ = 0;
  sky_soul_ = 0;
  sky_value_ = 0;
  earth_soul_ = 0;
  earth_value_ = 0;
  life_soul_ = 0;
  life_value_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  force_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400519::~Proto51400519() {
  SharedDtor();
}

void Proto51400519::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400519::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400519::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400519_descriptor_;
}

const Proto51400519& Proto51400519::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400519* Proto51400519::default_instance_ = NULL;

Proto51400519* Proto51400519::New() const {
  return new Proto51400519;
}

void Proto51400519::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    sky_soul_ = 0;
    sky_value_ = 0;
    earth_soul_ = 0;
    earth_value_ = 0;
    life_soul_ = 0;
    life_value_ = 0;
    beast_id_ = GOOGLE_LONGLONG(0);
    force_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400519::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sky_soul = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sky_soul_)));
          set_has_sky_soul();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sky_value;
        break;
      }
      
      // optional int32 sky_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sky_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sky_value_)));
          set_has_sky_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_earth_soul;
        break;
      }
      
      // optional int32 earth_soul = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_earth_soul:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &earth_soul_)));
          set_has_earth_soul();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_earth_value;
        break;
      }
      
      // optional int32 earth_value = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_earth_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &earth_value_)));
          set_has_earth_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_life_soul;
        break;
      }
      
      // optional int32 life_soul = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_life_soul:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &life_soul_)));
          set_has_life_soul();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_life_value;
        break;
      }
      
      // optional int32 life_value = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_life_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &life_value_)));
          set_has_life_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_beast_id;
        break;
      }
      
      // optional int64 beast_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_force;
        break;
      }
      
      // optional int32 force = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400519::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 sky_soul = 1;
  if (has_sky_soul()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sky_soul(), output);
  }
  
  // optional int32 sky_value = 2;
  if (has_sky_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sky_value(), output);
  }
  
  // optional int32 earth_soul = 3;
  if (has_earth_soul()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->earth_soul(), output);
  }
  
  // optional int32 earth_value = 4;
  if (has_earth_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->earth_value(), output);
  }
  
  // optional int32 life_soul = 5;
  if (has_life_soul()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->life_soul(), output);
  }
  
  // optional int32 life_value = 6;
  if (has_life_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->life_value(), output);
  }
  
  // optional int64 beast_id = 7;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->beast_id(), output);
  }
  
  // optional int32 force = 8;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->force(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400519::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 sky_soul = 1;
  if (has_sky_soul()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sky_soul(), target);
  }
  
  // optional int32 sky_value = 2;
  if (has_sky_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sky_value(), target);
  }
  
  // optional int32 earth_soul = 3;
  if (has_earth_soul()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->earth_soul(), target);
  }
  
  // optional int32 earth_value = 4;
  if (has_earth_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->earth_value(), target);
  }
  
  // optional int32 life_soul = 5;
  if (has_life_soul()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->life_soul(), target);
  }
  
  // optional int32 life_value = 6;
  if (has_life_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->life_value(), target);
  }
  
  // optional int64 beast_id = 7;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->beast_id(), target);
  }
  
  // optional int32 force = 8;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->force(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400519::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 sky_soul = 1;
    if (has_sky_soul()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sky_soul());
    }
    
    // optional int32 sky_value = 2;
    if (has_sky_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sky_value());
    }
    
    // optional int32 earth_soul = 3;
    if (has_earth_soul()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->earth_soul());
    }
    
    // optional int32 earth_value = 4;
    if (has_earth_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->earth_value());
    }
    
    // optional int32 life_soul = 5;
    if (has_life_soul()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->life_soul());
    }
    
    // optional int32 life_value = 6;
    if (has_life_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->life_value());
    }
    
    // optional int64 beast_id = 7;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
    // optional int32 force = 8;
    if (has_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->force());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400519::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400519* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400519*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400519::MergeFrom(const Proto51400519& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sky_soul()) {
      set_sky_soul(from.sky_soul());
    }
    if (from.has_sky_value()) {
      set_sky_value(from.sky_value());
    }
    if (from.has_earth_soul()) {
      set_earth_soul(from.earth_soul());
    }
    if (from.has_earth_value()) {
      set_earth_value(from.earth_value());
    }
    if (from.has_life_soul()) {
      set_life_soul(from.life_soul());
    }
    if (from.has_life_value()) {
      set_life_value(from.life_value());
    }
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
    if (from.has_force()) {
      set_force(from.force());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400519::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400519::CopyFrom(const Proto51400519& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400519::IsInitialized() const {
  
  return true;
}

void Proto51400519::Swap(Proto51400519* other) {
  if (other != this) {
    std::swap(sky_soul_, other->sky_soul_);
    std::swap(sky_value_, other->sky_value_);
    std::swap(earth_soul_, other->earth_soul_);
    std::swap(earth_value_, other->earth_value_);
    std::swap(life_soul_, other->life_soul_);
    std::swap(life_value_, other->life_value_);
    std::swap(beast_id_, other->beast_id_);
    std::swap(force_, other->force_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400519::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400519_descriptor_;
  metadata.reflection = Proto51400519_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400520::kBeastIdFieldNumber;
const int Proto11400520::kSoulTypeFieldNumber;
const int Proto11400520::kAutoBuyFieldNumber;
#endif  // !_MSC_VER

Proto11400520::Proto11400520()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400520::InitAsDefaultInstance() {
}

Proto11400520::Proto11400520(const Proto11400520& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400520::SharedCtor() {
  _cached_size_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  soul_type_ = 0;
  auto_buy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400520::~Proto11400520() {
  SharedDtor();
}

void Proto11400520::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400520::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400520::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400520_descriptor_;
}

const Proto11400520& Proto11400520::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400520* Proto11400520::default_instance_ = NULL;

Proto11400520* Proto11400520::New() const {
  return new Proto11400520;
}

void Proto11400520::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    beast_id_ = GOOGLE_LONGLONG(0);
    soul_type_ = 0;
    auto_buy_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400520::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 beast_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_soul_type;
        break;
      }
      
      // optional int32 soul_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_soul_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &soul_type_)));
          set_has_soul_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_auto_buy;
        break;
      }
      
      // optional int32 auto_buy = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_buy_)));
          set_has_auto_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400520::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->beast_id(), output);
  }
  
  // optional int32 soul_type = 2;
  if (has_soul_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->soul_type(), output);
  }
  
  // optional int32 auto_buy = 3;
  if (has_auto_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->auto_buy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400520::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->beast_id(), target);
  }
  
  // optional int32 soul_type = 2;
  if (has_soul_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->soul_type(), target);
  }
  
  // optional int32 auto_buy = 3;
  if (has_auto_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->auto_buy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400520::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 beast_id = 1;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
    // optional int32 soul_type = 2;
    if (has_soul_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->soul_type());
    }
    
    // optional int32 auto_buy = 3;
    if (has_auto_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_buy());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400520::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400520* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400520*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400520::MergeFrom(const Proto11400520& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
    if (from.has_soul_type()) {
      set_soul_type(from.soul_type());
    }
    if (from.has_auto_buy()) {
      set_auto_buy(from.auto_buy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400520::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400520::CopyFrom(const Proto11400520& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400520::IsInitialized() const {
  
  return true;
}

void Proto11400520::Swap(Proto11400520* other) {
  if (other != this) {
    std::swap(beast_id_, other->beast_id_);
    std::swap(soul_type_, other->soul_type_);
    std::swap(auto_buy_, other->auto_buy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400520::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400520_descriptor_;
  metadata.reflection = Proto11400520_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400520::kSoulTypeFieldNumber;
const int Proto51400520::kRefineFlagFieldNumber;
const int Proto51400520::kRefineValueFieldNumber;
const int Proto51400520::kUpgradeFlagFieldNumber;
#endif  // !_MSC_VER

Proto51400520::Proto51400520()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400520::InitAsDefaultInstance() {
}

Proto51400520::Proto51400520(const Proto51400520& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400520::SharedCtor() {
  _cached_size_ = 0;
  soul_type_ = 0;
  refine_flag_ = 0;
  refine_value_ = 0;
  upgrade_flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400520::~Proto51400520() {
  SharedDtor();
}

void Proto51400520::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400520::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400520::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400520_descriptor_;
}

const Proto51400520& Proto51400520::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400520* Proto51400520::default_instance_ = NULL;

Proto51400520* Proto51400520::New() const {
  return new Proto51400520;
}

void Proto51400520::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    soul_type_ = 0;
    refine_flag_ = 0;
    refine_value_ = 0;
    upgrade_flag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400520::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 soul_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &soul_type_)));
          set_has_soul_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_refine_flag;
        break;
      }
      
      // optional int32 refine_flag = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refine_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refine_flag_)));
          set_has_refine_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_refine_value;
        break;
      }
      
      // optional int32 refine_value = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refine_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refine_value_)));
          set_has_refine_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_upgrade_flag;
        break;
      }
      
      // optional int32 upgrade_flag = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_upgrade_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &upgrade_flag_)));
          set_has_upgrade_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400520::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 soul_type = 1;
  if (has_soul_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->soul_type(), output);
  }
  
  // optional int32 refine_flag = 2;
  if (has_refine_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->refine_flag(), output);
  }
  
  // optional int32 refine_value = 3;
  if (has_refine_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->refine_value(), output);
  }
  
  // optional int32 upgrade_flag = 4;
  if (has_upgrade_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->upgrade_flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400520::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 soul_type = 1;
  if (has_soul_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->soul_type(), target);
  }
  
  // optional int32 refine_flag = 2;
  if (has_refine_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->refine_flag(), target);
  }
  
  // optional int32 refine_value = 3;
  if (has_refine_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->refine_value(), target);
  }
  
  // optional int32 upgrade_flag = 4;
  if (has_upgrade_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->upgrade_flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400520::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 soul_type = 1;
    if (has_soul_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->soul_type());
    }
    
    // optional int32 refine_flag = 2;
    if (has_refine_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refine_flag());
    }
    
    // optional int32 refine_value = 3;
    if (has_refine_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refine_value());
    }
    
    // optional int32 upgrade_flag = 4;
    if (has_upgrade_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->upgrade_flag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400520::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400520* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400520*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400520::MergeFrom(const Proto51400520& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_soul_type()) {
      set_soul_type(from.soul_type());
    }
    if (from.has_refine_flag()) {
      set_refine_flag(from.refine_flag());
    }
    if (from.has_refine_value()) {
      set_refine_value(from.refine_value());
    }
    if (from.has_upgrade_flag()) {
      set_upgrade_flag(from.upgrade_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400520::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400520::CopyFrom(const Proto51400520& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400520::IsInitialized() const {
  
  return true;
}

void Proto51400520::Swap(Proto51400520* other) {
  if (other != this) {
    std::swap(soul_type_, other->soul_type_);
    std::swap(refine_flag_, other->refine_flag_);
    std::swap(refine_value_, other->refine_value_);
    std::swap(upgrade_flag_, other->upgrade_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400520::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400520_descriptor_;
  metadata.reflection = Proto51400520_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400521::kCombineFlagFieldNumber;
const int Proto11400521::kMainBeastFieldNumber;
const int Proto11400521::kSubBeastFieldNumber;
#endif  // !_MSC_VER

Proto11400521::Proto11400521()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400521::InitAsDefaultInstance() {
}

Proto11400521::Proto11400521(const Proto11400521& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400521::SharedCtor() {
  _cached_size_ = 0;
  combine_flag_ = 0;
  main_beast_ = GOOGLE_LONGLONG(0);
  sub_beast_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400521::~Proto11400521() {
  SharedDtor();
}

void Proto11400521::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400521::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400521::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400521_descriptor_;
}

const Proto11400521& Proto11400521::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400521* Proto11400521::default_instance_ = NULL;

Proto11400521* Proto11400521::New() const {
  return new Proto11400521;
}

void Proto11400521::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    combine_flag_ = 0;
    main_beast_ = GOOGLE_LONGLONG(0);
    sub_beast_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400521::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 combine_flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &combine_flag_)));
          set_has_combine_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_main_beast;
        break;
      }
      
      // optional int64 main_beast = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_main_beast:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &main_beast_)));
          set_has_main_beast();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_sub_beast;
        break;
      }
      
      // optional int64 sub_beast = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sub_beast:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sub_beast_)));
          set_has_sub_beast();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400521::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 combine_flag = 1;
  if (has_combine_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->combine_flag(), output);
  }
  
  // optional int64 main_beast = 2;
  if (has_main_beast()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->main_beast(), output);
  }
  
  // optional int64 sub_beast = 3;
  if (has_sub_beast()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->sub_beast(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400521::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 combine_flag = 1;
  if (has_combine_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->combine_flag(), target);
  }
  
  // optional int64 main_beast = 2;
  if (has_main_beast()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->main_beast(), target);
  }
  
  // optional int64 sub_beast = 3;
  if (has_sub_beast()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->sub_beast(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400521::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 combine_flag = 1;
    if (has_combine_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->combine_flag());
    }
    
    // optional int64 main_beast = 2;
    if (has_main_beast()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->main_beast());
    }
    
    // optional int64 sub_beast = 3;
    if (has_sub_beast()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->sub_beast());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400521::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400521* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400521*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400521::MergeFrom(const Proto11400521& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_combine_flag()) {
      set_combine_flag(from.combine_flag());
    }
    if (from.has_main_beast()) {
      set_main_beast(from.main_beast());
    }
    if (from.has_sub_beast()) {
      set_sub_beast(from.sub_beast());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400521::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400521::CopyFrom(const Proto11400521& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400521::IsInitialized() const {
  
  return true;
}

void Proto11400521::Swap(Proto11400521* other) {
  if (other != this) {
    std::swap(combine_flag_, other->combine_flag_);
    std::swap(main_beast_, other->main_beast_);
    std::swap(sub_beast_, other->sub_beast_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400521::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400521_descriptor_;
  metadata.reflection = Proto11400521_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400521::kMainBeastFieldNumber;
const int Proto51400521::kBeastSortFieldNumber;
const int Proto51400521::kBeastNameFieldNumber;
const int Proto51400521::kAbilityFieldNumber;
const int Proto51400521::kGrowthLvlFieldNumber;
const int Proto51400521::kSkySoulFieldNumber;
const int Proto51400521::kEarthSoulFieldNumber;
const int Proto51400521::kLifeSoulFieldNumber;
const int Proto51400521::kAttackFieldNumber;
const int Proto51400521::kHitFieldNumber;
const int Proto51400521::kCritFieldNumber;
const int Proto51400521::kForceFieldNumber;
const int Proto51400521::kConbineValueFieldNumber;
const int Proto51400521::kTotalValueFieldNumber;
#endif  // !_MSC_VER

Proto51400521::Proto51400521()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400521::InitAsDefaultInstance() {
}

Proto51400521::Proto51400521(const Proto51400521& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400521::SharedCtor() {
  _cached_size_ = 0;
  main_beast_ = GOOGLE_LONGLONG(0);
  beast_sort_ = 0;
  beast_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ability_ = 0;
  growth_lvl_ = 0;
  sky_soul_ = 0;
  earth_soul_ = 0;
  life_soul_ = 0;
  attack_ = 0;
  hit_ = 0;
  crit_ = 0;
  force_ = 0;
  conbine_value_ = 0;
  total_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400521::~Proto51400521() {
  SharedDtor();
}

void Proto51400521::SharedDtor() {
  if (beast_name_ != &::google::protobuf::internal::kEmptyString) {
    delete beast_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto51400521::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400521::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400521_descriptor_;
}

const Proto51400521& Proto51400521::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400521* Proto51400521::default_instance_ = NULL;

Proto51400521* Proto51400521::New() const {
  return new Proto51400521;
}

void Proto51400521::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    main_beast_ = GOOGLE_LONGLONG(0);
    beast_sort_ = 0;
    if (has_beast_name()) {
      if (beast_name_ != &::google::protobuf::internal::kEmptyString) {
        beast_name_->clear();
      }
    }
    ability_ = 0;
    growth_lvl_ = 0;
    sky_soul_ = 0;
    earth_soul_ = 0;
    life_soul_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    attack_ = 0;
    hit_ = 0;
    crit_ = 0;
    force_ = 0;
    conbine_value_ = 0;
    total_value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400521::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 main_beast = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &main_beast_)));
          set_has_main_beast();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_beast_sort;
        break;
      }
      
      // optional int32 beast_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beast_sort_)));
          set_has_beast_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_beast_name;
        break;
      }
      
      // optional string beast_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_beast_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_beast_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->beast_name().data(), this->beast_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_ability;
        break;
      }
      
      // optional int32 ability = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ability:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ability_)));
          set_has_ability();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_growth_lvl;
        break;
      }
      
      // optional int32 growth_lvl = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_growth_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &growth_lvl_)));
          set_has_growth_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_sky_soul;
        break;
      }
      
      // optional int32 sky_soul = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sky_soul:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sky_soul_)));
          set_has_sky_soul();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_earth_soul;
        break;
      }
      
      // optional int32 earth_soul = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_earth_soul:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &earth_soul_)));
          set_has_earth_soul();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_life_soul;
        break;
      }
      
      // optional int32 life_soul = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_life_soul:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &life_soul_)));
          set_has_life_soul();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_attack;
        break;
      }
      
      // optional int32 attack = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attack_)));
          set_has_attack();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_hit;
        break;
      }
      
      // optional int32 hit = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hit_)));
          set_has_hit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_crit;
        break;
      }
      
      // optional int32 crit = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_crit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crit_)));
          set_has_crit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_force;
        break;
      }
      
      // optional int32 force = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_conbine_value;
        break;
      }
      
      // optional int32 conbine_value = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_conbine_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &conbine_value_)));
          set_has_conbine_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_total_value;
        break;
      }
      
      // optional int32 total_value = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_value_)));
          set_has_total_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400521::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 main_beast = 1;
  if (has_main_beast()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->main_beast(), output);
  }
  
  // optional int32 beast_sort = 2;
  if (has_beast_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->beast_sort(), output);
  }
  
  // optional string beast_name = 3;
  if (has_beast_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->beast_name().data(), this->beast_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->beast_name(), output);
  }
  
  // optional int32 ability = 4;
  if (has_ability()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ability(), output);
  }
  
  // optional int32 growth_lvl = 5;
  if (has_growth_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->growth_lvl(), output);
  }
  
  // optional int32 sky_soul = 6;
  if (has_sky_soul()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->sky_soul(), output);
  }
  
  // optional int32 earth_soul = 7;
  if (has_earth_soul()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->earth_soul(), output);
  }
  
  // optional int32 life_soul = 8;
  if (has_life_soul()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->life_soul(), output);
  }
  
  // optional int32 attack = 9;
  if (has_attack()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->attack(), output);
  }
  
  // optional int32 hit = 10;
  if (has_hit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->hit(), output);
  }
  
  // optional int32 crit = 11;
  if (has_crit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->crit(), output);
  }
  
  // optional int32 force = 12;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->force(), output);
  }
  
  // optional int32 conbine_value = 13;
  if (has_conbine_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->conbine_value(), output);
  }
  
  // optional int32 total_value = 14;
  if (has_total_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->total_value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400521::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 main_beast = 1;
  if (has_main_beast()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->main_beast(), target);
  }
  
  // optional int32 beast_sort = 2;
  if (has_beast_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->beast_sort(), target);
  }
  
  // optional string beast_name = 3;
  if (has_beast_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->beast_name().data(), this->beast_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->beast_name(), target);
  }
  
  // optional int32 ability = 4;
  if (has_ability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ability(), target);
  }
  
  // optional int32 growth_lvl = 5;
  if (has_growth_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->growth_lvl(), target);
  }
  
  // optional int32 sky_soul = 6;
  if (has_sky_soul()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->sky_soul(), target);
  }
  
  // optional int32 earth_soul = 7;
  if (has_earth_soul()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->earth_soul(), target);
  }
  
  // optional int32 life_soul = 8;
  if (has_life_soul()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->life_soul(), target);
  }
  
  // optional int32 attack = 9;
  if (has_attack()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->attack(), target);
  }
  
  // optional int32 hit = 10;
  if (has_hit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->hit(), target);
  }
  
  // optional int32 crit = 11;
  if (has_crit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->crit(), target);
  }
  
  // optional int32 force = 12;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->force(), target);
  }
  
  // optional int32 conbine_value = 13;
  if (has_conbine_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->conbine_value(), target);
  }
  
  // optional int32 total_value = 14;
  if (has_total_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->total_value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400521::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 main_beast = 1;
    if (has_main_beast()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->main_beast());
    }
    
    // optional int32 beast_sort = 2;
    if (has_beast_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->beast_sort());
    }
    
    // optional string beast_name = 3;
    if (has_beast_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->beast_name());
    }
    
    // optional int32 ability = 4;
    if (has_ability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ability());
    }
    
    // optional int32 growth_lvl = 5;
    if (has_growth_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->growth_lvl());
    }
    
    // optional int32 sky_soul = 6;
    if (has_sky_soul()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sky_soul());
    }
    
    // optional int32 earth_soul = 7;
    if (has_earth_soul()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->earth_soul());
    }
    
    // optional int32 life_soul = 8;
    if (has_life_soul()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->life_soul());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 attack = 9;
    if (has_attack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attack());
    }
    
    // optional int32 hit = 10;
    if (has_hit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hit());
    }
    
    // optional int32 crit = 11;
    if (has_crit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crit());
    }
    
    // optional int32 force = 12;
    if (has_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->force());
    }
    
    // optional int32 conbine_value = 13;
    if (has_conbine_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->conbine_value());
    }
    
    // optional int32 total_value = 14;
    if (has_total_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400521::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400521* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400521*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400521::MergeFrom(const Proto51400521& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_main_beast()) {
      set_main_beast(from.main_beast());
    }
    if (from.has_beast_sort()) {
      set_beast_sort(from.beast_sort());
    }
    if (from.has_beast_name()) {
      set_beast_name(from.beast_name());
    }
    if (from.has_ability()) {
      set_ability(from.ability());
    }
    if (from.has_growth_lvl()) {
      set_growth_lvl(from.growth_lvl());
    }
    if (from.has_sky_soul()) {
      set_sky_soul(from.sky_soul());
    }
    if (from.has_earth_soul()) {
      set_earth_soul(from.earth_soul());
    }
    if (from.has_life_soul()) {
      set_life_soul(from.life_soul());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_attack()) {
      set_attack(from.attack());
    }
    if (from.has_hit()) {
      set_hit(from.hit());
    }
    if (from.has_crit()) {
      set_crit(from.crit());
    }
    if (from.has_force()) {
      set_force(from.force());
    }
    if (from.has_conbine_value()) {
      set_conbine_value(from.conbine_value());
    }
    if (from.has_total_value()) {
      set_total_value(from.total_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400521::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400521::CopyFrom(const Proto51400521& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400521::IsInitialized() const {
  
  return true;
}

void Proto51400521::Swap(Proto51400521* other) {
  if (other != this) {
    std::swap(main_beast_, other->main_beast_);
    std::swap(beast_sort_, other->beast_sort_);
    std::swap(beast_name_, other->beast_name_);
    std::swap(ability_, other->ability_);
    std::swap(growth_lvl_, other->growth_lvl_);
    std::swap(sky_soul_, other->sky_soul_);
    std::swap(earth_soul_, other->earth_soul_);
    std::swap(life_soul_, other->life_soul_);
    std::swap(attack_, other->attack_);
    std::swap(hit_, other->hit_);
    std::swap(crit_, other->crit_);
    std::swap(force_, other->force_);
    std::swap(conbine_value_, other->conbine_value_);
    std::swap(total_value_, other->total_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400521::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400521_descriptor_;
  metadata.reflection = Proto51400521_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400600::kItemIdFieldNumber;
const int Proto11400600::kPkgTypeFieldNumber;
const int Proto11400600::kPkgIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400600::Proto11400600()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400600::InitAsDefaultInstance() {
}

Proto11400600::Proto11400600(const Proto11400600& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400600::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  pkg_type_ = 0;
  pkg_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400600::~Proto11400600() {
  SharedDtor();
}

void Proto11400600::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400600::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400600::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400600_descriptor_;
}

const Proto11400600& Proto11400600::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400600* Proto11400600::default_instance_ = NULL;

Proto11400600* Proto11400600::New() const {
  return new Proto11400600;
}

void Proto11400600::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    pkg_type_ = 0;
    pkg_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400600::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pkg_type;
        break;
      }
      
      // optional int32 pkg_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_type_)));
          set_has_pkg_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pkg_index;
        break;
      }
      
      // optional int32 pkg_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400600::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 pkg_type = 2;
  if (has_pkg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pkg_type(), output);
  }
  
  // optional int32 pkg_index = 3;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pkg_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400600::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 pkg_type = 2;
  if (has_pkg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pkg_type(), target);
  }
  
  // optional int32 pkg_index = 3;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pkg_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400600::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 pkg_type = 2;
    if (has_pkg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_type());
    }
    
    // optional int32 pkg_index = 3;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400600::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400600* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400600*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400600::MergeFrom(const Proto11400600& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_pkg_type()) {
      set_pkg_type(from.pkg_type());
    }
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400600::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400600::CopyFrom(const Proto11400600& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400600::IsInitialized() const {
  
  return true;
}

void Proto11400600::Swap(Proto11400600* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(pkg_type_, other->pkg_type_);
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400600::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400600_descriptor_;
  metadata.reflection = Proto11400600_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400607::kIdFieldNumber;
const int Proto11400607::kIsBatchFieldNumber;
const int Proto11400607::kIsAutoBuyFieldNumber;
#endif  // !_MSC_VER

Proto11400607::Proto11400607()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400607::InitAsDefaultInstance() {
}

Proto11400607::Proto11400607(const Proto11400607& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400607::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  is_batch_ = 0;
  is_auto_buy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400607::~Proto11400607() {
  SharedDtor();
}

void Proto11400607::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400607::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400607::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400607_descriptor_;
}

const Proto11400607& Proto11400607::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400607* Proto11400607::default_instance_ = NULL;

Proto11400607* Proto11400607::New() const {
  return new Proto11400607;
}

void Proto11400607::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    is_batch_ = 0;
    is_auto_buy_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400607::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_batch;
        break;
      }
      
      // optional int32 is_batch = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_batch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_batch_)));
          set_has_is_batch();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_auto_buy;
        break;
      }
      
      // optional int32 is_auto_buy = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_auto_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_auto_buy_)));
          set_has_is_auto_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400607::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional int32 is_batch = 2;
  if (has_is_batch()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_batch(), output);
  }
  
  // optional int32 is_auto_buy = 3;
  if (has_is_auto_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_auto_buy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400607::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional int32 is_batch = 2;
  if (has_is_batch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_batch(), target);
  }
  
  // optional int32 is_auto_buy = 3;
  if (has_is_auto_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_auto_buy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400607::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional int32 is_batch = 2;
    if (has_is_batch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_batch());
    }
    
    // optional int32 is_auto_buy = 3;
    if (has_is_auto_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_auto_buy());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400607::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400607* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400607*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400607::MergeFrom(const Proto11400607& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_is_batch()) {
      set_is_batch(from.is_batch());
    }
    if (from.has_is_auto_buy()) {
      set_is_auto_buy(from.is_auto_buy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400607::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400607::CopyFrom(const Proto11400607& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400607::IsInitialized() const {
  
  return true;
}

void Proto11400607::Swap(Proto11400607* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(is_batch_, other->is_batch_);
    std::swap(is_auto_buy_, other->is_auto_buy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400607::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400607_descriptor_;
  metadata.reflection = Proto11400607_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400607::kDegreeFieldNumber;
const int Proto51400607::kIsUpgradeFieldNumber;
const int Proto51400607::kIdFieldNumber;
#endif  // !_MSC_VER

Proto51400607::Proto51400607()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400607::InitAsDefaultInstance() {
}

Proto51400607::Proto51400607(const Proto51400607& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400607::SharedCtor() {
  _cached_size_ = 0;
  degree_ = 0;
  is_upgrade_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400607::~Proto51400607() {
  SharedDtor();
}

void Proto51400607::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400607::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400607::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400607_descriptor_;
}

const Proto51400607& Proto51400607::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400607* Proto51400607::default_instance_ = NULL;

Proto51400607* Proto51400607::New() const {
  return new Proto51400607;
}

void Proto51400607::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    degree_ = 0;
    is_upgrade_ = 0;
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400607::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 degree = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &degree_)));
          set_has_degree();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_upgrade;
        break;
      }
      
      // optional int32 is_upgrade = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_upgrade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_upgrade_)));
          set_has_is_upgrade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_id;
        break;
      }
      
      // optional int32 id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400607::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 degree = 1;
  if (has_degree()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->degree(), output);
  }
  
  // optional int32 is_upgrade = 2;
  if (has_is_upgrade()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_upgrade(), output);
  }
  
  // optional int32 id = 3;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400607::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 degree = 1;
  if (has_degree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->degree(), target);
  }
  
  // optional int32 is_upgrade = 2;
  if (has_is_upgrade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_upgrade(), target);
  }
  
  // optional int32 id = 3;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400607::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 degree = 1;
    if (has_degree()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->degree());
    }
    
    // optional int32 is_upgrade = 2;
    if (has_is_upgrade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_upgrade());
    }
    
    // optional int32 id = 3;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400607::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400607* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400607*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400607::MergeFrom(const Proto51400607& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_degree()) {
      set_degree(from.degree());
    }
    if (from.has_is_upgrade()) {
      set_is_upgrade(from.is_upgrade());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400607::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400607::CopyFrom(const Proto51400607& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400607::IsInitialized() const {
  
  return true;
}

void Proto51400607::Swap(Proto51400607* other) {
  if (other != this) {
    std::swap(degree_, other->degree_);
    std::swap(is_upgrade_, other->is_upgrade_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400607::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400607_descriptor_;
  metadata.reflection = Proto51400607_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400111::kSkillInfoFieldNumber;
#endif  // !_MSC_VER

Proto81400111::Proto81400111()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400111::InitAsDefaultInstance() {
  skill_info_ = const_cast< ::ProtoBeastSkill*>(&::ProtoBeastSkill::default_instance());
}

Proto81400111::Proto81400111(const Proto81400111& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400111::SharedCtor() {
  _cached_size_ = 0;
  skill_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400111::~Proto81400111() {
  SharedDtor();
}

void Proto81400111::SharedDtor() {
  if (this != default_instance_) {
    delete skill_info_;
  }
}

void Proto81400111::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400111::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400111_descriptor_;
}

const Proto81400111& Proto81400111::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto81400111* Proto81400111::default_instance_ = NULL;

Proto81400111* Proto81400111::New() const {
  return new Proto81400111;
}

void Proto81400111::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_skill_info()) {
      if (skill_info_ != NULL) skill_info_->::ProtoBeastSkill::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400111::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoBeastSkill skill_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_skill_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400111::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoBeastSkill skill_info = 1;
  if (has_skill_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->skill_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400111::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoBeastSkill skill_info = 1;
  if (has_skill_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->skill_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400111::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoBeastSkill skill_info = 1;
    if (has_skill_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skill_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400111::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400111* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400111*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400111::MergeFrom(const Proto81400111& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill_info()) {
      mutable_skill_info()->::ProtoBeastSkill::MergeFrom(from.skill_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400111::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400111::CopyFrom(const Proto81400111& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400111::IsInitialized() const {
  
  return true;
}

void Proto81400111::Swap(Proto81400111* other) {
  if (other != this) {
    std::swap(skill_info_, other->skill_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400111::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400111_descriptor_;
  metadata.reflection = Proto81400111_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400608::kAttrListFieldNumber;
const int Proto51400608::kMagicalListFieldNumber;
#endif  // !_MSC_VER

Proto51400608::Proto51400608()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400608::InitAsDefaultInstance() {
}

Proto51400608::Proto51400608(const Proto51400608& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400608::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400608::~Proto51400608() {
  SharedDtor();
}

void Proto51400608::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400608::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400608::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400608_descriptor_;
}

const Proto51400608& Proto51400608::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400608* Proto51400608::default_instance_ = NULL;

Proto51400608* Proto51400608::New() const {
  return new Proto51400608;
}

void Proto51400608::Clear() {
  attr_list_.Clear();
  magical_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400608::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoPairObj attr_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attr_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attr_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_attr_list;
        if (input->ExpectTag(18)) goto parse_magical_list;
        break;
      }
      
      // repeated .ProtoPairObj magical_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_magical_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_magical_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_magical_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400608::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoPairObj attr_list = 1;
  for (int i = 0; i < this->attr_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->attr_list(i), output);
  }
  
  // repeated .ProtoPairObj magical_list = 2;
  for (int i = 0; i < this->magical_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->magical_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400608::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoPairObj attr_list = 1;
  for (int i = 0; i < this->attr_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->attr_list(i), target);
  }
  
  // repeated .ProtoPairObj magical_list = 2;
  for (int i = 0; i < this->magical_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->magical_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400608::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoPairObj attr_list = 1;
  total_size += 1 * this->attr_list_size();
  for (int i = 0; i < this->attr_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attr_list(i));
  }
  
  // repeated .ProtoPairObj magical_list = 2;
  total_size += 1 * this->magical_list_size();
  for (int i = 0; i < this->magical_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->magical_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400608::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400608* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400608*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400608::MergeFrom(const Proto51400608& from) {
  GOOGLE_CHECK_NE(&from, this);
  attr_list_.MergeFrom(from.attr_list_);
  magical_list_.MergeFrom(from.magical_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400608::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400608::CopyFrom(const Proto51400608& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400608::IsInitialized() const {
  
  return true;
}

void Proto51400608::Swap(Proto51400608* other) {
  if (other != this) {
    attr_list_.Swap(&other->attr_list_);
    magical_list_.Swap(&other->magical_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400608::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400608_descriptor_;
  metadata.reflection = Proto51400608_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400609::kMagicalIdFieldNumber;
#endif  // !_MSC_VER

Proto11400609::Proto11400609()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400609::InitAsDefaultInstance() {
}

Proto11400609::Proto11400609(const Proto11400609& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400609::SharedCtor() {
  _cached_size_ = 0;
  magical_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400609::~Proto11400609() {
  SharedDtor();
}

void Proto11400609::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400609::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400609::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400609_descriptor_;
}

const Proto11400609& Proto11400609::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400609* Proto11400609::default_instance_ = NULL;

Proto11400609* Proto11400609::New() const {
  return new Proto11400609;
}

void Proto11400609::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    magical_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400609::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 magical_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magical_id_)));
          set_has_magical_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400609::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 magical_id = 1;
  if (has_magical_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->magical_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400609::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 magical_id = 1;
  if (has_magical_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->magical_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400609::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 magical_id = 1;
    if (has_magical_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->magical_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400609::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400609* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400609*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400609::MergeFrom(const Proto11400609& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_magical_id()) {
      set_magical_id(from.magical_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400609::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400609::CopyFrom(const Proto11400609& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400609::IsInitialized() const {
  
  return true;
}

void Proto11400609::Swap(Proto11400609* other) {
  if (other != this) {
    std::swap(magical_id_, other->magical_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400609::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400609_descriptor_;
  metadata.reflection = Proto11400609_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400609::kMagicalIdFieldNumber;
#endif  // !_MSC_VER

Proto51400609::Proto51400609()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400609::InitAsDefaultInstance() {
}

Proto51400609::Proto51400609(const Proto51400609& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400609::SharedCtor() {
  _cached_size_ = 0;
  magical_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400609::~Proto51400609() {
  SharedDtor();
}

void Proto51400609::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400609::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400609::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400609_descriptor_;
}

const Proto51400609& Proto51400609::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400609* Proto51400609::default_instance_ = NULL;

Proto51400609* Proto51400609::New() const {
  return new Proto51400609;
}

void Proto51400609::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    magical_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400609::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 magical_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magical_id_)));
          set_has_magical_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400609::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 magical_id = 1;
  if (has_magical_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->magical_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400609::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 magical_id = 1;
  if (has_magical_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->magical_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400609::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 magical_id = 1;
    if (has_magical_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->magical_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400609::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400609* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400609*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400609::MergeFrom(const Proto51400609& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_magical_id()) {
      set_magical_id(from.magical_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400609::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400609::CopyFrom(const Proto51400609& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400609::IsInitialized() const {
  
  return true;
}

void Proto51400609::Swap(Proto51400609* other) {
  if (other != this) {
    std::swap(magical_id_, other->magical_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400609::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400609_descriptor_;
  metadata.reflection = Proto51400609_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400610::kMagicalIdFieldNumber;
#endif  // !_MSC_VER

Proto11400610::Proto11400610()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400610::InitAsDefaultInstance() {
}

Proto11400610::Proto11400610(const Proto11400610& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400610::SharedCtor() {
  _cached_size_ = 0;
  magical_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400610::~Proto11400610() {
  SharedDtor();
}

void Proto11400610::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400610::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400610::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400610_descriptor_;
}

const Proto11400610& Proto11400610::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400610* Proto11400610::default_instance_ = NULL;

Proto11400610* Proto11400610::New() const {
  return new Proto11400610;
}

void Proto11400610::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    magical_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400610::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 magical_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magical_id_)));
          set_has_magical_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400610::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 magical_id = 1;
  if (has_magical_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->magical_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400610::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 magical_id = 1;
  if (has_magical_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->magical_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400610::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 magical_id = 1;
    if (has_magical_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->magical_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400610::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400610* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400610*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400610::MergeFrom(const Proto11400610& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_magical_id()) {
      set_magical_id(from.magical_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400610::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400610::CopyFrom(const Proto11400610& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400610::IsInitialized() const {
  
  return true;
}

void Proto11400610::Swap(Proto11400610* other) {
  if (other != this) {
    std::swap(magical_id_, other->magical_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400610::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400610_descriptor_;
  metadata.reflection = Proto11400610_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400610::kMagicalIdFieldNumber;
const int Proto51400610::kLuckyValueFieldNumber;
const int Proto51400610::kCurUseFieldNumber;
const int Proto51400610::kSingleRecordFieldNumber;
const int Proto51400610::kBatchRecordFieldNumber;
#endif  // !_MSC_VER

Proto51400610::Proto51400610()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400610::InitAsDefaultInstance() {
  cur_use_ = const_cast< ::ProtoMagicalInfo*>(&::ProtoMagicalInfo::default_instance());
  single_record_ = const_cast< ::ProtoMagicalInfo*>(&::ProtoMagicalInfo::default_instance());
}

Proto51400610::Proto51400610(const Proto51400610& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400610::SharedCtor() {
  _cached_size_ = 0;
  magical_id_ = 0;
  lucky_value_ = 0;
  cur_use_ = NULL;
  single_record_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400610::~Proto51400610() {
  SharedDtor();
}

void Proto51400610::SharedDtor() {
  if (this != default_instance_) {
    delete cur_use_;
    delete single_record_;
  }
}

void Proto51400610::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400610::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400610_descriptor_;
}

const Proto51400610& Proto51400610::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400610* Proto51400610::default_instance_ = NULL;

Proto51400610* Proto51400610::New() const {
  return new Proto51400610;
}

void Proto51400610::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    magical_id_ = 0;
    lucky_value_ = 0;
    if (has_cur_use()) {
      if (cur_use_ != NULL) cur_use_->::ProtoMagicalInfo::Clear();
    }
    if (has_single_record()) {
      if (single_record_ != NULL) single_record_->::ProtoMagicalInfo::Clear();
    }
  }
  batch_record_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400610::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 magical_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magical_id_)));
          set_has_magical_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_lucky_value;
        break;
      }
      
      // optional int32 lucky_value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lucky_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lucky_value_)));
          set_has_lucky_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_cur_use;
        break;
      }
      
      // optional .ProtoMagicalInfo cur_use = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cur_use:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cur_use()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_single_record;
        break;
      }
      
      // optional .ProtoMagicalInfo single_record = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_single_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_single_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_batch_record;
        break;
      }
      
      // repeated .ProtoMagicalInfo batch_record = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_batch_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_batch_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_batch_record;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400610::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 magical_id = 1;
  if (has_magical_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->magical_id(), output);
  }
  
  // optional int32 lucky_value = 2;
  if (has_lucky_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lucky_value(), output);
  }
  
  // optional .ProtoMagicalInfo cur_use = 3;
  if (has_cur_use()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cur_use(), output);
  }
  
  // optional .ProtoMagicalInfo single_record = 4;
  if (has_single_record()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->single_record(), output);
  }
  
  // repeated .ProtoMagicalInfo batch_record = 5;
  for (int i = 0; i < this->batch_record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->batch_record(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400610::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 magical_id = 1;
  if (has_magical_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->magical_id(), target);
  }
  
  // optional int32 lucky_value = 2;
  if (has_lucky_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->lucky_value(), target);
  }
  
  // optional .ProtoMagicalInfo cur_use = 3;
  if (has_cur_use()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->cur_use(), target);
  }
  
  // optional .ProtoMagicalInfo single_record = 4;
  if (has_single_record()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->single_record(), target);
  }
  
  // repeated .ProtoMagicalInfo batch_record = 5;
  for (int i = 0; i < this->batch_record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->batch_record(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400610::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 magical_id = 1;
    if (has_magical_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->magical_id());
    }
    
    // optional int32 lucky_value = 2;
    if (has_lucky_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lucky_value());
    }
    
    // optional .ProtoMagicalInfo cur_use = 3;
    if (has_cur_use()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cur_use());
    }
    
    // optional .ProtoMagicalInfo single_record = 4;
    if (has_single_record()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->single_record());
    }
    
  }
  // repeated .ProtoMagicalInfo batch_record = 5;
  total_size += 1 * this->batch_record_size();
  for (int i = 0; i < this->batch_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->batch_record(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400610::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400610* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400610*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400610::MergeFrom(const Proto51400610& from) {
  GOOGLE_CHECK_NE(&from, this);
  batch_record_.MergeFrom(from.batch_record_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_magical_id()) {
      set_magical_id(from.magical_id());
    }
    if (from.has_lucky_value()) {
      set_lucky_value(from.lucky_value());
    }
    if (from.has_cur_use()) {
      mutable_cur_use()->::ProtoMagicalInfo::MergeFrom(from.cur_use());
    }
    if (from.has_single_record()) {
      mutable_single_record()->::ProtoMagicalInfo::MergeFrom(from.single_record());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400610::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400610::CopyFrom(const Proto51400610& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400610::IsInitialized() const {
  
  return true;
}

void Proto51400610::Swap(Proto51400610* other) {
  if (other != this) {
    std::swap(magical_id_, other->magical_id_);
    std::swap(lucky_value_, other->lucky_value_);
    std::swap(cur_use_, other->cur_use_);
    std::swap(single_record_, other->single_record_);
    batch_record_.Swap(&other->batch_record_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400610::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400610_descriptor_;
  metadata.reflection = Proto51400610_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400611::kMagicalIdFieldNumber;
const int Proto11400611::kIsSpecialFieldNumber;
const int Proto11400611::kIsBatchFieldNumber;
const int Proto11400611::kIsAutoBuyFieldNumber;
const int Proto11400611::kLockListFieldNumber;
#endif  // !_MSC_VER

Proto11400611::Proto11400611()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400611::InitAsDefaultInstance() {
}

Proto11400611::Proto11400611(const Proto11400611& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400611::SharedCtor() {
  _cached_size_ = 0;
  magical_id_ = 0;
  is_special_ = 0;
  is_batch_ = 0;
  is_auto_buy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400611::~Proto11400611() {
  SharedDtor();
}

void Proto11400611::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400611::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400611::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400611_descriptor_;
}

const Proto11400611& Proto11400611::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400611* Proto11400611::default_instance_ = NULL;

Proto11400611* Proto11400611::New() const {
  return new Proto11400611;
}

void Proto11400611::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    magical_id_ = 0;
    is_special_ = 0;
    is_batch_ = 0;
    is_auto_buy_ = 0;
  }
  lock_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400611::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 magical_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magical_id_)));
          set_has_magical_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_special;
        break;
      }
      
      // optional int32 is_special = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_special:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_special_)));
          set_has_is_special();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_batch;
        break;
      }
      
      // optional int32 is_batch = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_batch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_batch_)));
          set_has_is_batch();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_is_auto_buy;
        break;
      }
      
      // optional int32 is_auto_buy = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_auto_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_auto_buy_)));
          set_has_is_auto_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_lock_list;
        break;
      }
      
      // repeated int32 lock_list = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lock_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_lock_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_lock_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_lock_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400611::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 magical_id = 1;
  if (has_magical_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->magical_id(), output);
  }
  
  // optional int32 is_special = 2;
  if (has_is_special()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_special(), output);
  }
  
  // optional int32 is_batch = 3;
  if (has_is_batch()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_batch(), output);
  }
  
  // optional int32 is_auto_buy = 4;
  if (has_is_auto_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->is_auto_buy(), output);
  }
  
  // repeated int32 lock_list = 5;
  for (int i = 0; i < this->lock_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->lock_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400611::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 magical_id = 1;
  if (has_magical_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->magical_id(), target);
  }
  
  // optional int32 is_special = 2;
  if (has_is_special()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_special(), target);
  }
  
  // optional int32 is_batch = 3;
  if (has_is_batch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_batch(), target);
  }
  
  // optional int32 is_auto_buy = 4;
  if (has_is_auto_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->is_auto_buy(), target);
  }
  
  // repeated int32 lock_list = 5;
  for (int i = 0; i < this->lock_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->lock_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400611::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 magical_id = 1;
    if (has_magical_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->magical_id());
    }
    
    // optional int32 is_special = 2;
    if (has_is_special()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_special());
    }
    
    // optional int32 is_batch = 3;
    if (has_is_batch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_batch());
    }
    
    // optional int32 is_auto_buy = 4;
    if (has_is_auto_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_auto_buy());
    }
    
  }
  // repeated int32 lock_list = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->lock_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->lock_list(i));
    }
    total_size += 1 * this->lock_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400611::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400611* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400611*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400611::MergeFrom(const Proto11400611& from) {
  GOOGLE_CHECK_NE(&from, this);
  lock_list_.MergeFrom(from.lock_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_magical_id()) {
      set_magical_id(from.magical_id());
    }
    if (from.has_is_special()) {
      set_is_special(from.is_special());
    }
    if (from.has_is_batch()) {
      set_is_batch(from.is_batch());
    }
    if (from.has_is_auto_buy()) {
      set_is_auto_buy(from.is_auto_buy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400611::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400611::CopyFrom(const Proto11400611& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400611::IsInitialized() const {
  
  return true;
}

void Proto11400611::Swap(Proto11400611* other) {
  if (other != this) {
    std::swap(magical_id_, other->magical_id_);
    std::swap(is_special_, other->is_special_);
    std::swap(is_batch_, other->is_batch_);
    std::swap(is_auto_buy_, other->is_auto_buy_);
    lock_list_.Swap(&other->lock_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400611::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400611_descriptor_;
  metadata.reflection = Proto11400611_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400611::kMagicalIdFieldNumber;
const int Proto51400611::kIsSpecialFieldNumber;
const int Proto51400611::kLuckyNumFieldNumber;
const int Proto51400611::kMagicalRecordListFieldNumber;
#endif  // !_MSC_VER

Proto51400611::Proto51400611()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400611::InitAsDefaultInstance() {
}

Proto51400611::Proto51400611(const Proto51400611& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400611::SharedCtor() {
  _cached_size_ = 0;
  magical_id_ = 0;
  is_special_ = 0;
  lucky_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400611::~Proto51400611() {
  SharedDtor();
}

void Proto51400611::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400611::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400611::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400611_descriptor_;
}

const Proto51400611& Proto51400611::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400611* Proto51400611::default_instance_ = NULL;

Proto51400611* Proto51400611::New() const {
  return new Proto51400611;
}

void Proto51400611::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    magical_id_ = 0;
    is_special_ = 0;
    lucky_num_ = 0;
  }
  magical_record_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400611::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 magical_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magical_id_)));
          set_has_magical_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_special;
        break;
      }
      
      // optional int32 is_special = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_special:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_special_)));
          set_has_is_special();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_lucky_num;
        break;
      }
      
      // optional int32 lucky_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lucky_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lucky_num_)));
          set_has_lucky_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_magical_record_list;
        break;
      }
      
      // repeated .ProtoMagicalInfo magical_record_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_magical_record_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_magical_record_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_magical_record_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400611::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 magical_id = 1;
  if (has_magical_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->magical_id(), output);
  }
  
  // optional int32 is_special = 2;
  if (has_is_special()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_special(), output);
  }
  
  // optional int32 lucky_num = 3;
  if (has_lucky_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lucky_num(), output);
  }
  
  // repeated .ProtoMagicalInfo magical_record_list = 4;
  for (int i = 0; i < this->magical_record_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->magical_record_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400611::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 magical_id = 1;
  if (has_magical_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->magical_id(), target);
  }
  
  // optional int32 is_special = 2;
  if (has_is_special()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_special(), target);
  }
  
  // optional int32 lucky_num = 3;
  if (has_lucky_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lucky_num(), target);
  }
  
  // repeated .ProtoMagicalInfo magical_record_list = 4;
  for (int i = 0; i < this->magical_record_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->magical_record_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400611::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 magical_id = 1;
    if (has_magical_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->magical_id());
    }
    
    // optional int32 is_special = 2;
    if (has_is_special()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_special());
    }
    
    // optional int32 lucky_num = 3;
    if (has_lucky_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lucky_num());
    }
    
  }
  // repeated .ProtoMagicalInfo magical_record_list = 4;
  total_size += 1 * this->magical_record_list_size();
  for (int i = 0; i < this->magical_record_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->magical_record_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400611::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400611* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400611*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400611::MergeFrom(const Proto51400611& from) {
  GOOGLE_CHECK_NE(&from, this);
  magical_record_list_.MergeFrom(from.magical_record_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_magical_id()) {
      set_magical_id(from.magical_id());
    }
    if (from.has_is_special()) {
      set_is_special(from.is_special());
    }
    if (from.has_lucky_num()) {
      set_lucky_num(from.lucky_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400611::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400611::CopyFrom(const Proto51400611& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400611::IsInitialized() const {
  
  return true;
}

void Proto51400611::Swap(Proto51400611* other) {
  if (other != this) {
    std::swap(magical_id_, other->magical_id_);
    std::swap(is_special_, other->is_special_);
    std::swap(lucky_num_, other->lucky_num_);
    magical_record_list_.Swap(&other->magical_record_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400611::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400611_descriptor_;
  metadata.reflection = Proto51400611_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400612::kPolishBatchModeFieldNumber;
const int Proto11400612::kSelectIndexFieldNumber;
const int Proto11400612::kMagicalIdFieldNumber;
#endif  // !_MSC_VER

Proto11400612::Proto11400612()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400612::InitAsDefaultInstance() {
}

Proto11400612::Proto11400612(const Proto11400612& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400612::SharedCtor() {
  _cached_size_ = 0;
  polish_batch_mode_ = 0;
  select_index_ = 0;
  magical_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400612::~Proto11400612() {
  SharedDtor();
}

void Proto11400612::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400612::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400612::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400612_descriptor_;
}

const Proto11400612& Proto11400612::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400612* Proto11400612::default_instance_ = NULL;

Proto11400612* Proto11400612::New() const {
  return new Proto11400612;
}

void Proto11400612::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    polish_batch_mode_ = 0;
    select_index_ = 0;
    magical_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400612::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 polish_batch_mode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &polish_batch_mode_)));
          set_has_polish_batch_mode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_select_index;
        break;
      }
      
      // optional int32 select_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_select_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &select_index_)));
          set_has_select_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_magical_id;
        break;
      }
      
      // optional int32 magical_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_magical_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magical_id_)));
          set_has_magical_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400612::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 polish_batch_mode = 1;
  if (has_polish_batch_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->polish_batch_mode(), output);
  }
  
  // optional int32 select_index = 2;
  if (has_select_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->select_index(), output);
  }
  
  // optional int32 magical_id = 3;
  if (has_magical_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->magical_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400612::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 polish_batch_mode = 1;
  if (has_polish_batch_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->polish_batch_mode(), target);
  }
  
  // optional int32 select_index = 2;
  if (has_select_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->select_index(), target);
  }
  
  // optional int32 magical_id = 3;
  if (has_magical_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->magical_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400612::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 polish_batch_mode = 1;
    if (has_polish_batch_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->polish_batch_mode());
    }
    
    // optional int32 select_index = 2;
    if (has_select_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->select_index());
    }
    
    // optional int32 magical_id = 3;
    if (has_magical_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->magical_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400612::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400612* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400612*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400612::MergeFrom(const Proto11400612& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_polish_batch_mode()) {
      set_polish_batch_mode(from.polish_batch_mode());
    }
    if (from.has_select_index()) {
      set_select_index(from.select_index());
    }
    if (from.has_magical_id()) {
      set_magical_id(from.magical_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400612::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400612::CopyFrom(const Proto11400612& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400612::IsInitialized() const {
  
  return true;
}

void Proto11400612::Swap(Proto11400612* other) {
  if (other != this) {
    std::swap(polish_batch_mode_, other->polish_batch_mode_);
    std::swap(select_index_, other->select_index_);
    std::swap(magical_id_, other->magical_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400612::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400612_descriptor_;
  metadata.reflection = Proto11400612_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400612::kPolishBatchModeFieldNumber;
const int Proto51400612::kMagicalDetailFieldNumber;
const int Proto51400612::kMagicalIdFieldNumber;
#endif  // !_MSC_VER

Proto51400612::Proto51400612()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400612::InitAsDefaultInstance() {
  magical_detail_ = const_cast< ::ProtoMagicalInfo*>(&::ProtoMagicalInfo::default_instance());
}

Proto51400612::Proto51400612(const Proto51400612& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400612::SharedCtor() {
  _cached_size_ = 0;
  polish_batch_mode_ = 0;
  magical_detail_ = NULL;
  magical_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400612::~Proto51400612() {
  SharedDtor();
}

void Proto51400612::SharedDtor() {
  if (this != default_instance_) {
    delete magical_detail_;
  }
}

void Proto51400612::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400612::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400612_descriptor_;
}

const Proto51400612& Proto51400612::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400612* Proto51400612::default_instance_ = NULL;

Proto51400612* Proto51400612::New() const {
  return new Proto51400612;
}

void Proto51400612::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    polish_batch_mode_ = 0;
    if (has_magical_detail()) {
      if (magical_detail_ != NULL) magical_detail_->::ProtoMagicalInfo::Clear();
    }
    magical_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400612::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 polish_batch_mode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &polish_batch_mode_)));
          set_has_polish_batch_mode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_magical_detail;
        break;
      }
      
      // optional .ProtoMagicalInfo magical_detail = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_magical_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_magical_detail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_magical_id;
        break;
      }
      
      // optional int32 magical_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_magical_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &magical_id_)));
          set_has_magical_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400612::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 polish_batch_mode = 1;
  if (has_polish_batch_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->polish_batch_mode(), output);
  }
  
  // optional .ProtoMagicalInfo magical_detail = 2;
  if (has_magical_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->magical_detail(), output);
  }
  
  // optional int32 magical_id = 3;
  if (has_magical_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->magical_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400612::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 polish_batch_mode = 1;
  if (has_polish_batch_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->polish_batch_mode(), target);
  }
  
  // optional .ProtoMagicalInfo magical_detail = 2;
  if (has_magical_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->magical_detail(), target);
  }
  
  // optional int32 magical_id = 3;
  if (has_magical_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->magical_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400612::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 polish_batch_mode = 1;
    if (has_polish_batch_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->polish_batch_mode());
    }
    
    // optional .ProtoMagicalInfo magical_detail = 2;
    if (has_magical_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->magical_detail());
    }
    
    // optional int32 magical_id = 3;
    if (has_magical_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->magical_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400612::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400612* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400612*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400612::MergeFrom(const Proto51400612& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_polish_batch_mode()) {
      set_polish_batch_mode(from.polish_batch_mode());
    }
    if (from.has_magical_detail()) {
      mutable_magical_detail()->::ProtoMagicalInfo::MergeFrom(from.magical_detail());
    }
    if (from.has_magical_id()) {
      set_magical_id(from.magical_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400612::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400612::CopyFrom(const Proto51400612& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400612::IsInitialized() const {
  
  return true;
}

void Proto51400612::Swap(Proto51400612* other) {
  if (other != this) {
    std::swap(polish_batch_mode_, other->polish_batch_mode_);
    std::swap(magical_detail_, other->magical_detail_);
    std::swap(magical_id_, other->magical_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400612::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400612_descriptor_;
  metadata.reflection = Proto51400612_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400601::kAttrListFieldNumber;
#endif  // !_MSC_VER

Proto81400601::Proto81400601()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400601::InitAsDefaultInstance() {
}

Proto81400601::Proto81400601(const Proto81400601& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400601::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400601::~Proto81400601() {
  SharedDtor();
}

void Proto81400601::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400601::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400601::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400601_descriptor_;
}

const Proto81400601& Proto81400601::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto81400601* Proto81400601::default_instance_ = NULL;

Proto81400601* Proto81400601::New() const {
  return new Proto81400601;
}

void Proto81400601::Clear() {
  attr_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400601::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoPairObj attr_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attr_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_attr_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_attr_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400601::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoPairObj attr_list = 1;
  for (int i = 0; i < this->attr_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->attr_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400601::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoPairObj attr_list = 1;
  for (int i = 0; i < this->attr_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->attr_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400601::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoPairObj attr_list = 1;
  total_size += 1 * this->attr_list_size();
  for (int i = 0; i < this->attr_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->attr_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400601::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400601* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400601*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400601::MergeFrom(const Proto81400601& from) {
  GOOGLE_CHECK_NE(&from, this);
  attr_list_.MergeFrom(from.attr_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400601::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400601::CopyFrom(const Proto81400601& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400601::IsInitialized() const {
  
  return true;
}

void Proto81400601::Swap(Proto81400601* other) {
  if (other != this) {
    attr_list_.Swap(&other->attr_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400601::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400601_descriptor_;
  metadata.reflection = Proto81400601_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400111::kAiIdFieldNumber;
const int Proto80400111::kAiSortFieldNumber;
const int Proto80400111::kSpeedFieldNumber;
const int Proto80400111::kTowardFieldNumber;
const int Proto80400111::kAiBloodFieldNumber;
const int Proto80400111::kMaxBloodFieldNumber;
const int Proto80400111::kFightStateFieldNumber;
const int Proto80400111::kSceneIdFieldNumber;
const int Proto80400111::kSpaceIdFieldNumber;
const int Proto80400111::kPixelXFieldNumber;
const int Proto80400111::kPixelYFieldNumber;
const int Proto80400111::kSubIdFieldNumber;
const int Proto80400111::kSubNameFieldNumber;
#endif  // !_MSC_VER

Proto80400111::Proto80400111()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400111::InitAsDefaultInstance() {
}

Proto80400111::Proto80400111(const Proto80400111& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400111::SharedCtor() {
  _cached_size_ = 0;
  ai_id_ = GOOGLE_LONGLONG(0);
  ai_sort_ = 0;
  speed_ = 0;
  toward_ = 0;
  ai_blood_ = 0;
  max_blood_ = 0;
  fight_state_ = 0;
  scene_id_ = 0;
  space_id_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  sub_id_ = GOOGLE_LONGLONG(0);
  sub_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400111::~Proto80400111() {
  SharedDtor();
}

void Proto80400111::SharedDtor() {
  if (sub_name_ != &::google::protobuf::internal::kEmptyString) {
    delete sub_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400111::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400111::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400111_descriptor_;
}

const Proto80400111& Proto80400111::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto80400111* Proto80400111::default_instance_ = NULL;

Proto80400111* Proto80400111::New() const {
  return new Proto80400111;
}

void Proto80400111::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ai_id_ = GOOGLE_LONGLONG(0);
    ai_sort_ = 0;
    speed_ = 0;
    toward_ = 0;
    ai_blood_ = 0;
    max_blood_ = 0;
    fight_state_ = 0;
    scene_id_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    space_id_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
    sub_id_ = GOOGLE_LONGLONG(0);
    if (has_sub_name()) {
      if (sub_name_ != &::google::protobuf::internal::kEmptyString) {
        sub_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400111::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ai_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ai_id_)));
          set_has_ai_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ai_sort;
        break;
      }
      
      // optional int32 ai_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ai_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ai_sort_)));
          set_has_ai_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_speed;
        break;
      }
      
      // optional int32 speed = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speed_)));
          set_has_speed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_toward;
        break;
      }
      
      // optional int32 toward = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_toward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &toward_)));
          set_has_toward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_ai_blood;
        break;
      }
      
      // optional int32 ai_blood = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ai_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ai_blood_)));
          set_has_ai_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_max_blood;
        break;
      }
      
      // optional int32 max_blood = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_blood_)));
          set_has_max_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_fight_state;
        break;
      }
      
      // optional int32 fight_state = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_state_)));
          set_has_fight_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_space_id;
        break;
      }
      
      // optional int32 space_id = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_space_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &space_id_)));
          set_has_space_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_sub_id;
        break;
      }
      
      // optional int64 sub_id = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sub_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sub_id_)));
          set_has_sub_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_sub_name;
        break;
      }
      
      // optional string sub_name = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sub_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sub_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sub_name().data(), this->sub_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400111::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 ai_id = 1;
  if (has_ai_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ai_id(), output);
  }
  
  // optional int32 ai_sort = 2;
  if (has_ai_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ai_sort(), output);
  }
  
  // optional int32 speed = 3;
  if (has_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->speed(), output);
  }
  
  // optional int32 toward = 4;
  if (has_toward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->toward(), output);
  }
  
  // optional int32 ai_blood = 5;
  if (has_ai_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ai_blood(), output);
  }
  
  // optional int32 max_blood = 6;
  if (has_max_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->max_blood(), output);
  }
  
  // optional int32 fight_state = 7;
  if (has_fight_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->fight_state(), output);
  }
  
  // optional int32 scene_id = 8;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->scene_id(), output);
  }
  
  // optional int32 space_id = 9;
  if (has_space_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->space_id(), output);
  }
  
  // optional int32 pixel_x = 10;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 11;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->pixel_y(), output);
  }
  
  // optional int64 sub_id = 12;
  if (has_sub_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->sub_id(), output);
  }
  
  // optional string sub_name = 13;
  if (has_sub_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sub_name().data(), this->sub_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->sub_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400111::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 ai_id = 1;
  if (has_ai_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ai_id(), target);
  }
  
  // optional int32 ai_sort = 2;
  if (has_ai_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ai_sort(), target);
  }
  
  // optional int32 speed = 3;
  if (has_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->speed(), target);
  }
  
  // optional int32 toward = 4;
  if (has_toward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->toward(), target);
  }
  
  // optional int32 ai_blood = 5;
  if (has_ai_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ai_blood(), target);
  }
  
  // optional int32 max_blood = 6;
  if (has_max_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->max_blood(), target);
  }
  
  // optional int32 fight_state = 7;
  if (has_fight_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->fight_state(), target);
  }
  
  // optional int32 scene_id = 8;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->scene_id(), target);
  }
  
  // optional int32 space_id = 9;
  if (has_space_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->space_id(), target);
  }
  
  // optional int32 pixel_x = 10;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 11;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->pixel_y(), target);
  }
  
  // optional int64 sub_id = 12;
  if (has_sub_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->sub_id(), target);
  }
  
  // optional string sub_name = 13;
  if (has_sub_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sub_name().data(), this->sub_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->sub_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400111::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 ai_id = 1;
    if (has_ai_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ai_id());
    }
    
    // optional int32 ai_sort = 2;
    if (has_ai_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ai_sort());
    }
    
    // optional int32 speed = 3;
    if (has_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->speed());
    }
    
    // optional int32 toward = 4;
    if (has_toward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->toward());
    }
    
    // optional int32 ai_blood = 5;
    if (has_ai_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ai_blood());
    }
    
    // optional int32 max_blood = 6;
    if (has_max_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_blood());
    }
    
    // optional int32 fight_state = 7;
    if (has_fight_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_state());
    }
    
    // optional int32 scene_id = 8;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 space_id = 9;
    if (has_space_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->space_id());
    }
    
    // optional int32 pixel_x = 10;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 11;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
    // optional int64 sub_id = 12;
    if (has_sub_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->sub_id());
    }
    
    // optional string sub_name = 13;
    if (has_sub_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sub_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400111::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400111* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400111*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400111::MergeFrom(const Proto80400111& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ai_id()) {
      set_ai_id(from.ai_id());
    }
    if (from.has_ai_sort()) {
      set_ai_sort(from.ai_sort());
    }
    if (from.has_speed()) {
      set_speed(from.speed());
    }
    if (from.has_toward()) {
      set_toward(from.toward());
    }
    if (from.has_ai_blood()) {
      set_ai_blood(from.ai_blood());
    }
    if (from.has_max_blood()) {
      set_max_blood(from.max_blood());
    }
    if (from.has_fight_state()) {
      set_fight_state(from.fight_state());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_space_id()) {
      set_space_id(from.space_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
    if (from.has_sub_id()) {
      set_sub_id(from.sub_id());
    }
    if (from.has_sub_name()) {
      set_sub_name(from.sub_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400111::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400111::CopyFrom(const Proto80400111& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400111::IsInitialized() const {
  
  return true;
}

void Proto80400111::Swap(Proto80400111* other) {
  if (other != this) {
    std::swap(ai_id_, other->ai_id_);
    std::swap(ai_sort_, other->ai_sort_);
    std::swap(speed_, other->speed_);
    std::swap(toward_, other->toward_);
    std::swap(ai_blood_, other->ai_blood_);
    std::swap(max_blood_, other->max_blood_);
    std::swap(fight_state_, other->fight_state_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(space_id_, other->space_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(sub_id_, other->sub_id_);
    std::swap(sub_name_, other->sub_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400111::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400111_descriptor_;
  metadata.reflection = Proto80400111_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400651::kFashionPartFieldNumber;
#endif  // !_MSC_VER

Proto11400651::Proto11400651()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400651::InitAsDefaultInstance() {
}

Proto11400651::Proto11400651(const Proto11400651& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400651::SharedCtor() {
  _cached_size_ = 0;
  fashion_part_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400651::~Proto11400651() {
  SharedDtor();
}

void Proto11400651::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400651::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400651::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400651_descriptor_;
}

const Proto11400651& Proto11400651::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400651* Proto11400651::default_instance_ = NULL;

Proto11400651* Proto11400651::New() const {
  return new Proto11400651;
}

void Proto11400651::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fashion_part_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400651::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fashion_part = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_part_)));
          set_has_fashion_part();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400651::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fashion_part = 1;
  if (has_fashion_part()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fashion_part(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400651::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fashion_part = 1;
  if (has_fashion_part()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fashion_part(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400651::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fashion_part = 1;
    if (has_fashion_part()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_part());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400651::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400651* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400651*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400651::MergeFrom(const Proto11400651& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashion_part()) {
      set_fashion_part(from.fashion_part());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400651::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400651::CopyFrom(const Proto11400651& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400651::IsInitialized() const {
  
  return true;
}

void Proto11400651::Swap(Proto11400651* other) {
  if (other != this) {
    std::swap(fashion_part_, other->fashion_part_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400651::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400651_descriptor_;
  metadata.reflection = Proto11400651_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400651::kFashionPartFieldNumber;
const int Proto51400651::kFashionListFieldNumber;
const int Proto51400651::kInUseIdFieldNumber;
const int Proto51400651::kPkgIndexFieldNumber;
const int Proto51400651::kShowFashionListFieldNumber;
const int Proto51400651::kShowVipFashionListFieldNumber;
#endif  // !_MSC_VER

Proto51400651::Proto51400651()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400651::InitAsDefaultInstance() {
}

Proto51400651::Proto51400651(const Proto51400651& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400651::SharedCtor() {
  _cached_size_ = 0;
  fashion_part_ = 0;
  in_use_id_ = 0;
  pkg_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400651::~Proto51400651() {
  SharedDtor();
}

void Proto51400651::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400651::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400651::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400651_descriptor_;
}

const Proto51400651& Proto51400651::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400651* Proto51400651::default_instance_ = NULL;

Proto51400651* Proto51400651::New() const {
  return new Proto51400651;
}

void Proto51400651::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fashion_part_ = 0;
    in_use_id_ = 0;
    pkg_index_ = 0;
  }
  fashion_list_.Clear();
  show_fashion_list_.Clear();
  show_vip_fashion_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400651::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fashion_part = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_part_)));
          set_has_fashion_part();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_fashion_list;
        break;
      }
      
      // repeated .ProtoItem fashion_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fashion_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fashion_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_fashion_list;
        if (input->ExpectTag(24)) goto parse_in_use_id;
        break;
      }
      
      // optional int32 in_use_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_in_use_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &in_use_id_)));
          set_has_in_use_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pkg_index;
        break;
      }
      
      // optional int32 pkg_index = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_show_fashion_list;
        break;
      }
      
      // repeated int32 show_fashion_list = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_show_fashion_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_show_fashion_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_show_fashion_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_show_fashion_list;
        if (input->ExpectTag(48)) goto parse_show_vip_fashion_list;
        break;
      }
      
      // repeated int32 show_vip_fashion_list = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_show_vip_fashion_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_show_vip_fashion_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_show_vip_fashion_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_show_vip_fashion_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400651::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fashion_part = 1;
  if (has_fashion_part()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fashion_part(), output);
  }
  
  // repeated .ProtoItem fashion_list = 2;
  for (int i = 0; i < this->fashion_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fashion_list(i), output);
  }
  
  // optional int32 in_use_id = 3;
  if (has_in_use_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->in_use_id(), output);
  }
  
  // optional int32 pkg_index = 4;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pkg_index(), output);
  }
  
  // repeated int32 show_fashion_list = 5;
  for (int i = 0; i < this->show_fashion_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->show_fashion_list(i), output);
  }
  
  // repeated int32 show_vip_fashion_list = 6;
  for (int i = 0; i < this->show_vip_fashion_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->show_vip_fashion_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400651::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fashion_part = 1;
  if (has_fashion_part()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fashion_part(), target);
  }
  
  // repeated .ProtoItem fashion_list = 2;
  for (int i = 0; i < this->fashion_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->fashion_list(i), target);
  }
  
  // optional int32 in_use_id = 3;
  if (has_in_use_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->in_use_id(), target);
  }
  
  // optional int32 pkg_index = 4;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pkg_index(), target);
  }
  
  // repeated int32 show_fashion_list = 5;
  for (int i = 0; i < this->show_fashion_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->show_fashion_list(i), target);
  }
  
  // repeated int32 show_vip_fashion_list = 6;
  for (int i = 0; i < this->show_vip_fashion_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->show_vip_fashion_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400651::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fashion_part = 1;
    if (has_fashion_part()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_part());
    }
    
    // optional int32 in_use_id = 3;
    if (has_in_use_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->in_use_id());
    }
    
    // optional int32 pkg_index = 4;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
  }
  // repeated .ProtoItem fashion_list = 2;
  total_size += 1 * this->fashion_list_size();
  for (int i = 0; i < this->fashion_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fashion_list(i));
  }
  
  // repeated int32 show_fashion_list = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->show_fashion_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->show_fashion_list(i));
    }
    total_size += 1 * this->show_fashion_list_size() + data_size;
  }
  
  // repeated int32 show_vip_fashion_list = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->show_vip_fashion_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->show_vip_fashion_list(i));
    }
    total_size += 1 * this->show_vip_fashion_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400651::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400651* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400651*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400651::MergeFrom(const Proto51400651& from) {
  GOOGLE_CHECK_NE(&from, this);
  fashion_list_.MergeFrom(from.fashion_list_);
  show_fashion_list_.MergeFrom(from.show_fashion_list_);
  show_vip_fashion_list_.MergeFrom(from.show_vip_fashion_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashion_part()) {
      set_fashion_part(from.fashion_part());
    }
    if (from.has_in_use_id()) {
      set_in_use_id(from.in_use_id());
    }
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400651::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400651::CopyFrom(const Proto51400651& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400651::IsInitialized() const {
  
  return true;
}

void Proto51400651::Swap(Proto51400651* other) {
  if (other != this) {
    std::swap(fashion_part_, other->fashion_part_);
    fashion_list_.Swap(&other->fashion_list_);
    std::swap(in_use_id_, other->in_use_id_);
    std::swap(pkg_index_, other->pkg_index_);
    show_fashion_list_.Swap(&other->show_fashion_list_);
    show_vip_fashion_list_.Swap(&other->show_vip_fashion_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400651::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400651_descriptor_;
  metadata.reflection = Proto51400651_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400652::kPkgTypeFieldNumber;
const int Proto11400652::kFashionIdFieldNumber;
#endif  // !_MSC_VER

Proto11400652::Proto11400652()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400652::InitAsDefaultInstance() {
}

Proto11400652::Proto11400652(const Proto11400652& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400652::SharedCtor() {
  _cached_size_ = 0;
  pkg_type_ = 0;
  fashion_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400652::~Proto11400652() {
  SharedDtor();
}

void Proto11400652::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400652::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400652::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400652_descriptor_;
}

const Proto11400652& Proto11400652::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto11400652* Proto11400652::default_instance_ = NULL;

Proto11400652* Proto11400652::New() const {
  return new Proto11400652;
}

void Proto11400652::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pkg_type_ = 0;
    fashion_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400652::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pkg_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_type_)));
          set_has_pkg_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_fashion_id;
        break;
      }
      
      // optional int32 fashion_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400652::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pkg_type = 1;
  if (has_pkg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pkg_type(), output);
  }
  
  // optional int32 fashion_id = 2;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fashion_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400652::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pkg_type = 1;
  if (has_pkg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pkg_type(), target);
  }
  
  // optional int32 fashion_id = 2;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fashion_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400652::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pkg_type = 1;
    if (has_pkg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_type());
    }
    
    // optional int32 fashion_id = 2;
    if (has_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400652::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400652* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400652*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400652::MergeFrom(const Proto11400652& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pkg_type()) {
      set_pkg_type(from.pkg_type());
    }
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400652::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400652::CopyFrom(const Proto11400652& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400652::IsInitialized() const {
  
  return true;
}

void Proto11400652::Swap(Proto11400652* other) {
  if (other != this) {
    std::swap(pkg_type_, other->pkg_type_);
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400652::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400652_descriptor_;
  metadata.reflection = Proto11400652_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400652::kPkgTypeFieldNumber;
const int Proto51400652::kPkgIndexFieldNumber;
const int Proto51400652::kOldFashionIdFieldNumber;
const int Proto51400652::kNewFashionIdFieldNumber;
#endif  // !_MSC_VER

Proto51400652::Proto51400652()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400652::InitAsDefaultInstance() {
}

Proto51400652::Proto51400652(const Proto51400652& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400652::SharedCtor() {
  _cached_size_ = 0;
  pkg_type_ = 0;
  pkg_index_ = 0;
  old_fashion_id_ = 0;
  new_fashion_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400652::~Proto51400652() {
  SharedDtor();
}

void Proto51400652::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400652::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400652::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400652_descriptor_;
}

const Proto51400652& Proto51400652::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient003_2eproto();  return *default_instance_;
}

Proto51400652* Proto51400652::default_instance_ = NULL;

Proto51400652* Proto51400652::New() const {
  return new Proto51400652;
}

void Proto51400652::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pkg_type_ = 0;
    pkg_index_ = 0;
    old_fashion_id_ = 0;
    new_fashion_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400652::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pkg_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_type_)));
          set_has_pkg_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pkg_index;
        break;
      }
      
      // optional int32 pkg_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_old_fashion_id;
        break;
      }
      
      // optional int32 old_fashion_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_old_fashion_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &old_fashion_id_)));
          set_has_old_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_new_fashion_id;
        break;
      }
      
      // optional int32 new_fashion_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_new_fashion_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &new_fashion_id_)));
          set_has_new_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400652::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pkg_type = 1;
  if (has_pkg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pkg_type(), output);
  }
  
  // optional int32 pkg_index = 2;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pkg_index(), output);
  }
  
  // optional int32 old_fashion_id = 3;
  if (has_old_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->old_fashion_id(), output);
  }
  
  // optional int32 new_fashion_id = 4;
  if (has_new_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->new_fashion_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400652::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pkg_type = 1;
  if (has_pkg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pkg_type(), target);
  }
  
  // optional int32 pkg_index = 2;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pkg_index(), target);
  }
  
  // optional int32 old_fashion_id = 3;
  if (has_old_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->old_fashion_id(), target);
  }
  
  // optional int32 new_fashion_id = 4;
  if (has_new_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->new_fashion_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400652::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pkg_type = 1;
    if (has_pkg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_type());
    }
    
    // optional int32 pkg_index = 2;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
    // optional int32 old_fashion_id = 3;
    if (has_old_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->old_fashion_id());
    }
    
    // optional int32 new_fashion_id = 4;
    if (has_new_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->new_fashion_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400652::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400652* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400652*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400652::MergeFrom(const Proto51400652& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pkg_type()) {
      set_pkg_type(from.pkg_type());
    }
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
    if (from.has_old_fashion_id()) {
      set_old_fashion_id(from.old_fashion_id());
    }
    if (from.has_new_fashion_id()) {
      set_new_fashion_id(from.new_fashion_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400652::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400652::CopyFrom(const Proto51400652& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400652::IsInitialized() const {
  
  return true;
}

void Proto51400652::Swap(Proto51400652* other) {
  if (other != this) {
    std::swap(pkg_type_, other->pkg_type_);
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(old_fashion_id_, other->old_fashion_id_);
    std::swap(new_fashion_id_, other->new_fashion_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400652::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400652_descriptor_;
  metadata.reflection = Proto51400652_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
