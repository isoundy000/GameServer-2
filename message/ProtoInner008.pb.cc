// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoInner008.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto30400451_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400451_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100240_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100240_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31402801_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31402801_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400170_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400170_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400180_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400180_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400323_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400323_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400190_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400190_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400502_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400502_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400503_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400503_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30102001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30102001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30102002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30102002_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30102003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30102003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400452_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400452_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402101_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402101_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30102004_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30102004_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400504_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400504_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400505_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400505_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400506_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400506_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100230_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100230_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400041_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400041_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100241_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100241_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31402901_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31402901_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400144_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400144_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400324_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400324_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400025_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400025_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400116_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400116_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400453_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400453_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400042_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400042_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400911_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400911_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402202_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402202_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402203_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402203_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400043_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400043_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400408_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400408_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30101802_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30101802_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400162_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400162_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400163_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400163_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402301_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402301_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100242_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100242_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30103001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30103001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400912_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400912_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31403101_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31403101_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400152_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400152_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400705_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400705_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100704_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100704_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400164_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400164_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400033_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400033_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100239_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100239_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100120_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100120_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400055_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400055_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400145_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400145_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoInner008_2eproto() {
  protobuf_AddDesc_ProtoInner008_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoInner008.proto");
  GOOGLE_CHECK(file != NULL);
  Proto30400451_descriptor_ = file->message_type(0);
  static const int Proto30400451_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400451, league_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400451, summon_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400451, boss_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400451, role_id_),
  };
  Proto30400451_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400451_descriptor_,
      Proto30400451::default_instance_,
      Proto30400451_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400451, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400451, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400451));
  Proto30100240_descriptor_ = file->message_type(1);
  static const int Proto30100240_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100240, summon_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100240, league_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100240, boss_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100240, role_set_),
  };
  Proto30100240_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100240_descriptor_,
      Proto30100240::default_instance_,
      Proto30100240_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100240, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100240, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100240));
  Proto31402801_descriptor_ = file->message_type(2);
  static const int Proto31402801_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402801, highest_sweep_),
  };
  Proto31402801_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31402801_descriptor_,
      Proto31402801::default_instance_,
      Proto31402801_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402801, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402801, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31402801));
  Proto31400170_descriptor_ = file->message_type(3);
  static const int Proto31400170_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400170, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400170, score_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400170, right_num_),
  };
  Proto31400170_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400170_descriptor_,
      Proto31400170::default_instance_,
      Proto31400170_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400170, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400170, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400170));
  Proto31400180_descriptor_ = file->message_type(4);
  static const int Proto31400180_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400180, received_mark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400180, offline_sum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400180, exp_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400180, longest_time_),
  };
  Proto31400180_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400180_descriptor_,
      Proto31400180::default_instance_,
      Proto31400180_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400180, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400180, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400180));
  Proto31400323_descriptor_ = file->message_type(5);
  static const int Proto31400323_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400323, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400323, serial_),
  };
  Proto31400323_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400323_descriptor_,
      Proto31400323::default_instance_,
      Proto31400323_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400323, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400323, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400323));
  Proto31400190_descriptor_ = file->message_type(6);
  static const int Proto31400190_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400190, player_id_),
  };
  Proto31400190_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400190_descriptor_,
      Proto31400190::default_instance_,
      Proto31400190_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400190, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400190, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400190));
  Proto30400502_descriptor_ = file->message_type(7);
  static const int Proto30400502_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400502, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400502, limit_force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400502, sceret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400502, auto_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400502, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400502, self_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400502, server_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400502, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400502, main_version_),
  };
  Proto30400502_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400502_descriptor_,
      Proto30400502::default_instance_,
      Proto30400502_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400502, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400502, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400502));
  Proto30400503_descriptor_ = file->message_type(8);
  static const int Proto30400503_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400503, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400503, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400503, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400503, role_),
  };
  Proto30400503_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400503_descriptor_,
      Proto30400503::default_instance_,
      Proto30400503_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400503, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400503, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400503));
  Proto30102001_descriptor_ = file->message_type(9);
  static const int Proto30102001_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102001, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102001, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102001, buff_time_),
  };
  Proto30102001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30102001_descriptor_,
      Proto30102001::default_instance_,
      Proto30102001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30102001));
  Proto30102002_descriptor_ = file->message_type(10);
  static const int Proto30102002_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102002, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102002, buff_time_),
  };
  Proto30102002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30102002_descriptor_,
      Proto30102002::default_instance_,
      Proto30102002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30102002));
  Proto30102003_descriptor_ = file->message_type(11);
  static const int Proto30102003_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102003, status_),
  };
  Proto30102003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30102003_descriptor_,
      Proto30102003::default_instance_,
      Proto30102003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30102003));
  Proto30400452_descriptor_ = file->message_type(12);
  static const int Proto30400452_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400452, league_index_),
  };
  Proto30400452_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400452_descriptor_,
      Proto30400452::default_instance_,
      Proto30400452_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400452, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400452, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400452));
  Proto30402101_descriptor_ = file->message_type(13);
  static const int Proto30402101_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402101, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402101, space_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402101, scene_id_),
  };
  Proto30402101_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402101_descriptor_,
      Proto30402101::default_instance_,
      Proto30402101_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402101, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402101, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402101));
  Proto30102004_descriptor_ = file->message_type(14);
  static const int Proto30102004_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102004, status_),
  };
  Proto30102004_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30102004_descriptor_,
      Proto30102004::default_instance_,
      Proto30102004_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102004, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102004, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30102004));
  Proto30400504_descriptor_ = file->message_type(15);
  static const int Proto30400504_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400504, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400504, server_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400504, self_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400504, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400504, score_),
  };
  Proto30400504_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400504_descriptor_,
      Proto30400504::default_instance_,
      Proto30400504_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400504, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400504, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400504));
  Proto30400505_descriptor_ = file->message_type(16);
  static const int Proto30400505_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400505, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400505, value_),
  };
  Proto30400505_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400505_descriptor_,
      Proto30400505::default_instance_,
      Proto30400505_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400505, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400505, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400505));
  Proto30400506_descriptor_ = file->message_type(17);
  static const int Proto30400506_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400506, index_),
  };
  Proto30400506_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400506_descriptor_,
      Proto30400506::default_instance_,
      Proto30400506_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400506, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400506, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400506));
  Proto30100230_descriptor_ = file->message_type(18);
  static const int Proto30100230_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100230, league_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100230, add_flag_exp_),
  };
  Proto30100230_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100230_descriptor_,
      Proto30100230::default_instance_,
      Proto30100230_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100230, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100230, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100230));
  Proto31400041_descriptor_ = file->message_type(19);
  static const int Proto31400041_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400041, item_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400041, serial_),
  };
  Proto31400041_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400041_descriptor_,
      Proto31400041::default_instance_,
      Proto31400041_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400041, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400041, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400041));
  Proto30100241_descriptor_ = file->message_type(20);
  static const int Proto30100241_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100241, first_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100241, sub1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100241, sub2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100241, sub3_),
  };
  Proto30100241_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100241_descriptor_,
      Proto30100241::default_instance_,
      Proto30100241_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100241, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100241, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100241));
  Proto31402901_descriptor_ = file->message_type(21);
  static const int Proto31402901_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402901, task_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402901, left_add_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402901, left_add_num_),
  };
  Proto31402901_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31402901_descriptor_,
      Proto31402901::default_instance_,
      Proto31402901_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402901, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402901, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31402901));
  Proto31400144_descriptor_ = file->message_type(22);
  static const int Proto31400144_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400144, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400144, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400144, open_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400144, refresh_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400144, style_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400144, task_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400144, find_task_),
  };
  Proto31400144_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400144_descriptor_,
      Proto31400144::default_instance_,
      Proto31400144_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400144, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400144, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400144));
  Proto31400324_descriptor_ = file->message_type(23);
  static const int Proto31400324_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400324, league_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400324, player_id_),
  };
  Proto31400324_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400324_descriptor_,
      Proto31400324::default_instance_,
      Proto31400324_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400324, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400324, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400324));
  Proto30400025_descriptor_ = file->message_type(24);
  static const int Proto30400025_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400025, average_level_),
  };
  Proto30400025_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400025_descriptor_,
      Proto30400025::default_instance_,
      Proto30400025_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400025, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400025, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400025));
  Proto30400116_descriptor_ = file->message_type(25);
  static const int Proto30400116_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400116, car_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400116, protect_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400116, protect_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400116, escort_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400116, escort_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400116, pre_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400116, start_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400116, till_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400116, target_level_),
  };
  Proto30400116_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400116_descriptor_,
      Proto30400116::default_instance_,
      Proto30400116_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400116, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400116, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400116));
  Proto30400453_descriptor_ = file->message_type(26);
  static const int Proto30400453_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400453, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400453, cycle_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400453, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400453, from_),
  };
  Proto30400453_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400453_descriptor_,
      Proto30400453::default_instance_,
      Proto30400453_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400453, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400453, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400453));
  Proto31400042_descriptor_ = file->message_type(27);
  static const int Proto31400042_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400042, proto_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400042, serial_obj_),
  };
  Proto31400042_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400042_descriptor_,
      Proto31400042::default_instance_,
      Proto31400042_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400042, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400042, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400042));
  Proto30400911_descriptor_ = file->message_type(28);
  static const int Proto30400911_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400911, num1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400911, num2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400911, script_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400911, page_),
  };
  Proto30400911_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400911_descriptor_,
      Proto30400911::default_instance_,
      Proto30400911_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400911, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400911, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400911));
  Proto30402202_descriptor_ = file->message_type(29);
  static const int Proto30402202_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402202, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402202, level_),
  };
  Proto30402202_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402202_descriptor_,
      Proto30402202::default_instance_,
      Proto30402202_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402202, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402202, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402202));
  Proto30402203_descriptor_ = file->message_type(30);
  static const int Proto30402203_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402203, boss_scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402203, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402203, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402203, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402203, use_fly_),
  };
  Proto30402203_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402203_descriptor_,
      Proto30402203::default_instance_,
      Proto30402203_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402203, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402203, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402203));
  Proto31400043_descriptor_ = file->message_type(31);
  static const int Proto31400043_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400043, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400043, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400043, bind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400043, serial_obj_),
  };
  Proto31400043_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400043_descriptor_,
      Proto31400043::default_instance_,
      Proto31400043_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400043, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400043, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400043));
  Proto30400408_descriptor_ = file->message_type(32);
  static const int Proto30400408_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400408, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400408, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400408, open_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400408, notify_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400408, style_lvl_),
  };
  Proto30400408_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400408_descriptor_,
      Proto30400408::default_instance_,
      Proto30400408_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400408, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400408, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400408));
  Proto30101802_descriptor_ = file->message_type(33);
  static const int Proto30101802_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101802, contri_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101802, add_num_),
  };
  Proto30101802_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30101802_descriptor_,
      Proto30101802::default_instance_,
      Proto30101802_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101802, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101802, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30101802));
  Proto31400162_descriptor_ = file->message_type(34);
  static const int Proto31400162_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400162, rebate_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400162, last_buy_time_),
  };
  Proto31400162_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400162_descriptor_,
      Proto31400162::default_instance_,
      Proto31400162_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400162, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400162, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400162));
  Proto31400163_descriptor_ = file->message_type(35);
  static const int Proto31400163_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400163, is_buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400163, invest_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400163, get_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400163, reward_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400163, buy_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400163, invest_rewards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400163, vip_rewards_),
  };
  Proto31400163_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400163_descriptor_,
      Proto31400163::default_instance_,
      Proto31400163_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400163, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400163, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400163));
  Proto30402301_descriptor_ = file->message_type(36);
  static const int Proto30402301_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402301, role_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402301, label_id_),
  };
  Proto30402301_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402301_descriptor_,
      Proto30402301::default_instance_,
      Proto30402301_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402301, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402301, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402301));
  Proto30100242_descriptor_ = file->message_type(37);
  static const int Proto30100242_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100242, activity_lwar_),
  };
  Proto30100242_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100242_descriptor_,
      Proto30100242::default_instance_,
      Proto30100242_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100242, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100242, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100242));
  Proto30103001_descriptor_ = file->message_type(38);
  static const int Proto30103001_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30103001, mail_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30103001, act_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30103001, reward_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30103001, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30103001, other_info_),
  };
  Proto30103001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30103001_descriptor_,
      Proto30103001::default_instance_,
      Proto30103001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30103001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30103001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30103001));
  Proto30400912_descriptor_ = file->message_type(39);
  static const int Proto30400912_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400912, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400912, role_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400912, fight_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400912, floor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400912, script_type_),
  };
  Proto30400912_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400912_descriptor_,
      Proto30400912::default_instance_,
      Proto30400912_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400912, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400912, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400912));
  Proto31403101_descriptor_ = file->message_type(40);
  static const int Proto31403101_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403101, is_buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403101, invest_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403101, get_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403101, vip_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403101, reward_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403101, buy_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403101, invest_rewards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403101, vip_rewards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403101, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403101, type_info_),
  };
  Proto31403101_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31403101_descriptor_,
      Proto31403101::default_instance_,
      Proto31403101_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403101, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403101, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31403101));
  Proto30400152_descriptor_ = file->message_type(41);
  static const int Proto30400152_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400152, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400152, item_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400152, tips_id_),
  };
  Proto30400152_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400152_descriptor_,
      Proto30400152::default_instance_,
      Proto30400152_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400152, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400152, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400152));
  Proto30400705_descriptor_ = file->message_type(42);
  static const int Proto30400705_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400705, role_id_),
  };
  Proto30400705_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400705_descriptor_,
      Proto30400705::default_instance_,
      Proto30400705_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400705, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400705, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400705));
  Proto30100704_descriptor_ = file->message_type(43);
  static const int Proto30100704_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100704, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100704, leader_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100704, team_list_),
  };
  Proto30100704_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100704_descriptor_,
      Proto30100704::default_instance_,
      Proto30100704_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100704, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100704, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100704));
  Proto31400164_descriptor_ = file->message_type(44);
  static const int Proto31400164_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400164, free_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400164, reset_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400164, game_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400164, game_length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400164, reset_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400164, other_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400164, item_list_),
  };
  Proto31400164_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400164_descriptor_,
      Proto31400164::default_instance_,
      Proto31400164_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400164, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400164, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400164));
  Proto31400033_descriptor_ = file->message_type(45);
  static const int Proto31400033_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400033, first_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400033, second_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400033, cost_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400033, cash_coupon_use_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400033, amount_),
  };
  Proto31400033_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400033_descriptor_,
      Proto31400033::default_instance_,
      Proto31400033_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400033, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400033, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400033));
  Proto30100239_descriptor_ = file->message_type(46);
  static const int Proto30100239_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100239, mount_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100239, flag_),
  };
  Proto30100239_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100239_descriptor_,
      Proto30100239::default_instance_,
      Proto30100239_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100239, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100239, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100239));
  Proto30100120_descriptor_ = file->message_type(47);
  static const int Proto30100120_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100120, permission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100120, other_info_),
  };
  Proto30100120_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100120_descriptor_,
      Proto30100120::default_instance_,
      Proto30100120_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100120, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100120, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100120));
  Proto30400055_descriptor_ = file->message_type(48);
  static const int Proto30400055_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400055, permission_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400055, other_info_),
  };
  Proto30400055_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400055_descriptor_,
      Proto30400055::default_instance_,
      Proto30400055_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400055, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400055, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400055));
  Proto31400145_descriptor_ = file->message_type(49);
  static const int Proto31400145_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400145, day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400145, open_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400145, get_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400145, refresh_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400145, buy_map_),
  };
  Proto31400145_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400145_descriptor_,
      Proto31400145::default_instance_,
      Proto31400145_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400145, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400145, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400145));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoInner008_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400451_descriptor_, &Proto30400451::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100240_descriptor_, &Proto30100240::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31402801_descriptor_, &Proto31402801::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400170_descriptor_, &Proto31400170::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400180_descriptor_, &Proto31400180::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400323_descriptor_, &Proto31400323::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400190_descriptor_, &Proto31400190::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400502_descriptor_, &Proto30400502::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400503_descriptor_, &Proto30400503::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30102001_descriptor_, &Proto30102001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30102002_descriptor_, &Proto30102002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30102003_descriptor_, &Proto30102003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400452_descriptor_, &Proto30400452::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402101_descriptor_, &Proto30402101::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30102004_descriptor_, &Proto30102004::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400504_descriptor_, &Proto30400504::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400505_descriptor_, &Proto30400505::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400506_descriptor_, &Proto30400506::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100230_descriptor_, &Proto30100230::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400041_descriptor_, &Proto31400041::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100241_descriptor_, &Proto30100241::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31402901_descriptor_, &Proto31402901::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400144_descriptor_, &Proto31400144::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400324_descriptor_, &Proto31400324::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400025_descriptor_, &Proto30400025::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400116_descriptor_, &Proto30400116::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400453_descriptor_, &Proto30400453::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400042_descriptor_, &Proto31400042::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400911_descriptor_, &Proto30400911::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402202_descriptor_, &Proto30402202::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402203_descriptor_, &Proto30402203::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400043_descriptor_, &Proto31400043::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400408_descriptor_, &Proto30400408::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30101802_descriptor_, &Proto30101802::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400162_descriptor_, &Proto31400162::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400163_descriptor_, &Proto31400163::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402301_descriptor_, &Proto30402301::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100242_descriptor_, &Proto30100242::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30103001_descriptor_, &Proto30103001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400912_descriptor_, &Proto30400912::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31403101_descriptor_, &Proto31403101::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400152_descriptor_, &Proto30400152::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400705_descriptor_, &Proto30400705::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100704_descriptor_, &Proto30100704::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400164_descriptor_, &Proto31400164::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400033_descriptor_, &Proto31400033::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100239_descriptor_, &Proto30100239::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100120_descriptor_, &Proto30100120::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400055_descriptor_, &Proto30400055::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400145_descriptor_, &Proto31400145::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoInner008_2eproto() {
  delete Proto30400451::default_instance_;
  delete Proto30400451_reflection_;
  delete Proto30100240::default_instance_;
  delete Proto30100240_reflection_;
  delete Proto31402801::default_instance_;
  delete Proto31402801_reflection_;
  delete Proto31400170::default_instance_;
  delete Proto31400170_reflection_;
  delete Proto31400180::default_instance_;
  delete Proto31400180_reflection_;
  delete Proto31400323::default_instance_;
  delete Proto31400323_reflection_;
  delete Proto31400190::default_instance_;
  delete Proto31400190_reflection_;
  delete Proto30400502::default_instance_;
  delete Proto30400502_reflection_;
  delete Proto30400503::default_instance_;
  delete Proto30400503_reflection_;
  delete Proto30102001::default_instance_;
  delete Proto30102001_reflection_;
  delete Proto30102002::default_instance_;
  delete Proto30102002_reflection_;
  delete Proto30102003::default_instance_;
  delete Proto30102003_reflection_;
  delete Proto30400452::default_instance_;
  delete Proto30400452_reflection_;
  delete Proto30402101::default_instance_;
  delete Proto30402101_reflection_;
  delete Proto30102004::default_instance_;
  delete Proto30102004_reflection_;
  delete Proto30400504::default_instance_;
  delete Proto30400504_reflection_;
  delete Proto30400505::default_instance_;
  delete Proto30400505_reflection_;
  delete Proto30400506::default_instance_;
  delete Proto30400506_reflection_;
  delete Proto30100230::default_instance_;
  delete Proto30100230_reflection_;
  delete Proto31400041::default_instance_;
  delete Proto31400041_reflection_;
  delete Proto30100241::default_instance_;
  delete Proto30100241_reflection_;
  delete Proto31402901::default_instance_;
  delete Proto31402901_reflection_;
  delete Proto31400144::default_instance_;
  delete Proto31400144_reflection_;
  delete Proto31400324::default_instance_;
  delete Proto31400324_reflection_;
  delete Proto30400025::default_instance_;
  delete Proto30400025_reflection_;
  delete Proto30400116::default_instance_;
  delete Proto30400116_reflection_;
  delete Proto30400453::default_instance_;
  delete Proto30400453_reflection_;
  delete Proto31400042::default_instance_;
  delete Proto31400042_reflection_;
  delete Proto30400911::default_instance_;
  delete Proto30400911_reflection_;
  delete Proto30402202::default_instance_;
  delete Proto30402202_reflection_;
  delete Proto30402203::default_instance_;
  delete Proto30402203_reflection_;
  delete Proto31400043::default_instance_;
  delete Proto31400043_reflection_;
  delete Proto30400408::default_instance_;
  delete Proto30400408_reflection_;
  delete Proto30101802::default_instance_;
  delete Proto30101802_reflection_;
  delete Proto31400162::default_instance_;
  delete Proto31400162_reflection_;
  delete Proto31400163::default_instance_;
  delete Proto31400163_reflection_;
  delete Proto30402301::default_instance_;
  delete Proto30402301_reflection_;
  delete Proto30100242::default_instance_;
  delete Proto30100242_reflection_;
  delete Proto30103001::default_instance_;
  delete Proto30103001_reflection_;
  delete Proto30400912::default_instance_;
  delete Proto30400912_reflection_;
  delete Proto31403101::default_instance_;
  delete Proto31403101_reflection_;
  delete Proto30400152::default_instance_;
  delete Proto30400152_reflection_;
  delete Proto30400705::default_instance_;
  delete Proto30400705_reflection_;
  delete Proto30100704::default_instance_;
  delete Proto30100704_reflection_;
  delete Proto31400164::default_instance_;
  delete Proto31400164_reflection_;
  delete Proto31400033::default_instance_;
  delete Proto31400033_reflection_;
  delete Proto30100239::default_instance_;
  delete Proto30100239_reflection_;
  delete Proto30100120::default_instance_;
  delete Proto30100120_reflection_;
  delete Proto30400055::default_instance_;
  delete Proto30400055_reflection_;
  delete Proto31400145::default_instance_;
  delete Proto31400145_reflection_;
}

void protobuf_AddDesc_ProtoInner008_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::protobuf_AddDesc_ProtoInnerPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023ProtoInner008.proto\032\021ProtoPublic.proto"
    "\032\026ProtoInnerPublic.proto\"_\n\rProto3040045"
    "1\022\024\n\014league_index\030\001 \001(\003\022\023\n\013summon_type\030\002"
    " \001(\005\022\022\n\nboss_index\030\003 \001(\005\022\017\n\007role_id\030\004 \001("
    "\003\"p\n\rProto30100240\022\023\n\013summon_type\030\001 \001(\005\022"
    "\024\n\014league_index\030\002 \001(\003\022\022\n\nboss_index\030\003 \001("
    "\005\022 \n\010role_set\030\004 \003(\0132\016.ProtoLWarItem\"&\n\rP"
    "roto31402801\022\025\n\rhighest_sweep\030\001 \001(\005\"F\n\rP"
    "roto31400170\022\017\n\007role_id\030\001 \001(\005\022\021\n\tscore_n"
    "um\030\002 \001(\005\022\021\n\tright_num\030\003 \001(\005\"b\n\rProto3140"
    "0180\022\025\n\rreceived_mark\030\001 \001(\005\022\023\n\013offline_s"
    "um\030\002 \001(\005\022\017\n\007exp_num\030\003 \001(\005\022\024\n\014longest_tim"
    "e\030\004 \001(\005\"<\n\rProto31400323\022\n\n\002id\030\001 \001(\005\022\037\n\006"
    "serial\030\002 \001(\0132\017.ProtoSerialObj\"\"\n\rProto31"
    "400190\022\021\n\tplayer_id\030\001 \001(\003\"\321\001\n\rProto30400"
    "502\022\020\n\010scene_id\030\001 \001(\005\022\023\n\013limit_force\030\002 \001"
    "(\005\022\016\n\006sceret\030\003 \001(\t\022\022\n\nauto_start\030\004 \001(\005\022\014"
    "\n\004type\030\005 \001(\005\022\037\n\tself_info\030\006 \001(\0132\014.ProtoT"
    "eamer\022!\n\013server_info\030\007 \001(\0132\014.ProtoServer"
    "\022\r\n\005index\030\010 \001(\005\022\024\n\014main_version\030\t \001(\t\"L\n"
    "\rProto30400503\022\020\n\010scene_id\030\001 \001(\005\022\014\n\004type"
    "\030\002 \001(\005\022\r\n\005index\030\003 \001(\005\022\014\n\004role\030\004 \001(\003\"G\n\rP"
    "roto30102001\022\023\n\013activity_id\030\001 \001(\005\022\016\n\006sta"
    "tus\030\002 \001(\005\022\021\n\tbuff_time\030\003 \001(\005\"2\n\rProto301"
    "02002\022\016\n\006status\030\001 \001(\005\022\021\n\tbuff_time\030\002 \001(\005"
    "\"\037\n\rProto30102003\022\016\n\006status\030\001 \001(\005\"%\n\rPro"
    "to30400452\022\024\n\014league_index\030\001 \001(\003\"F\n\rProt"
    "o30402101\022\021\n\tplayer_id\030\001 \001(\003\022\020\n\010space_id"
    "\030\002 \001(\005\022\020\n\010scene_id\030\003 \001(\005\"\037\n\rProto3010200"
    "4\022\016\n\006status\030\001 \001(\005\"\177\n\rProto30400504\022\014\n\004ty"
    "pe\030\001 \001(\005\022!\n\013server_info\030\002 \001(\0132\014.ProtoSer"
    "ver\022\037\n\tself_info\030\003 \001(\0132\014.ProtoTeamer\022\r\n\005"
    "stage\030\004 \001(\005\022\r\n\005score\030\005 \001(\005\",\n\rProto30400"
    "505\022\014\n\004type\030\001 \001(\005\022\r\n\005value\030\002 \001(\005\"\036\n\rProt"
    "o30400506\022\r\n\005index\030\001 \001(\005\";\n\rProto3010023"
    "0\022\024\n\014league_index\030\001 \001(\003\022\024\n\014add_flag_exp\030"
    "\002 \001(\005\"N\n\rProto31400041\022\034\n\010item_set\030\001 \001(\013"
    "2\n.ProtoItem\022\037\n\006serial\030\002 \001(\0132\017.ProtoSeri"
    "alObj\"M\n\rProto30100241\022\022\n\nfirst_type\030\001 \001"
    "(\005\022\014\n\004sub1\030\002 \001(\005\022\014\n\004sub2\030\003 \001(\005\022\014\n\004sub3\030\004"
    " \001(\005\"M\n\rProto31402901\022\017\n\007task_id\030\001 \001(\005\022\025"
    "\n\rleft_add_flag\030\002 \001(\005\022\024\n\014left_add_num\030\003 "
    "\001(\005\"\262\001\n\rProto31400144\022\r\n\005level\030\001 \001(\005\022\013\n\003"
    "exp\030\002 \001(\005\022\014\n\004open\030\003 \001(\005\022\024\n\014refresh_tick\030"
    "\004 \001(\005\022\021\n\tstyle_lvl\030\005 \001(\005\022&\n\ttask_info\030\006 "
    "\003(\0132\023.ProtoSwordPoolTask\022&\n\tfind_task\030\007 "
    "\003(\0132\023.ProtoSwordPoolTask\"5\n\rProto3140032"
    "4\022\021\n\tleague_id\030\001 \001(\003\022\021\n\tplayer_id\030\002 \001(\003\""
    "&\n\rProto30400025\022\025\n\raverage_level\030\001 \001(\005\""
    "\276\001\n\rProto30400116\022\021\n\tcar_index\030\001 \001(\003\022\022\n\n"
    "protect_id\030\002 \001(\003\022\024\n\014protect_list\030\003 \003(\003\022\023"
    "\n\013escort_type\030\004 \001(\005\022\022\n\nescort_exp\030\005 \001(\005\022"
    "\017\n\007pre_exp\030\006 \001(\005\022\022\n\nstart_tick\030\007 \001(\003\022\014\n\004"
    "till\030\010 \001(\005\022\024\n\014target_level\030\t \001(\005\"P\n\rProt"
    "o30400453\022\014\n\004type\030\001 \001(\005\022\020\n\010cycle_id\030\002 \001("
    "\005\022\021\n\tleft_time\030\003 \001(\003\022\014\n\004from\030\004 \001(\005\"T\n\rPr"
    "oto31400042\022\036\n\nproto_item\030\001 \003(\0132\n.ProtoI"
    "tem\022#\n\nserial_obj\030\002 \001(\0132\017.ProtoSerialObj"
    "\"N\n\rProto30400911\022\014\n\004num1\030\001 \001(\005\022\014\n\004num2\030"
    "\002 \001(\005\022\023\n\013script_type\030\003 \001(\005\022\014\n\004page\030\004 \001(\005"
    "\"/\n\rProto30402202\022\017\n\007role_id\030\001 \001(\003\022\r\n\005le"
    "vel\030\002 \001(\005\"g\n\rProto30402203\022\025\n\rboss_scene"
    "_id\030\001 \001(\005\022\r\n\005pos_x\030\002 \001(\005\022\r\n\005pos_y\030\003 \001(\005\022"
    "\020\n\010scene_id\030\004 \001(\005\022\017\n\007use_fly\030\005 \001(\005\"c\n\rPr"
    "oto31400043\022\017\n\007item_id\030\001 \001(\005\022\016\n\006amount\030\002"
    " \001(\005\022\014\n\004bind\030\003 \001(\005\022#\n\nserial_obj\030\004 \001(\0132\017"
    ".ProtoSerialObj\"a\n\rProto30400408\022\r\n\005leve"
    "l\030\001 \001(\005\022\013\n\003exp\030\002 \001(\005\022\014\n\004open\030\003 \001(\005\022\023\n\013no"
    "tify_flag\030\004 \001(\005\022\021\n\tstyle_lvl\030\005 \001(\005\"4\n\rPr"
    "oto30101802\022\022\n\ncontri_num\030\001 \001(\005\022\017\n\007add_n"
    "um\030\002 \001(\005\"<\n\rProto31400162\022\024\n\014rebate_time"
    "s\030\001 \001(\005\022\025\n\rlast_buy_time\030\002 \001(\003\"\235\001\n\rProto"
    "31400163\022\016\n\006is_buy\030\001 \001(\005\022\024\n\014invest_index"
    "\030\002 \001(\005\022\022\n\nget_reward\030\003 \001(\005\022\023\n\013reward_tim"
    "e\030\004 \001(\003\022\020\n\010buy_time\030\005 \001(\003\022\026\n\016invest_rewa"
    "rds\030\006 \003(\005\022\023\n\013vip_rewards\030\007 \003(\005\"D\n\rProto3"
    "0402301\022!\n\trole_info\030\001 \001(\0132\016.ProtoRoleIn"
    "fo\022\020\n\010label_id\030\002 \001(\005\">\n\rProto30100242\022-\n"
    "\ractivity_lwar\030\001 \003(\0132\026.ProtoActivityLWar"
    "Rank\"|\n\rProto30103001\022\017\n\007mail_id\030\001 \001(\005\022\020"
    "\n\010act_type\030\002 \001(\005\022\023\n\013reward_list\030\003 \003(\005\022\017\n"
    "\007role_id\030\004 \001(\003\022\"\n\nother_info\030\005 \001(\0132\016.Pro"
    "toThreeObj\"l\n\rProto30400912\022\017\n\007role_id\030\001"
    " \001(\003\022\021\n\trole_name\030\002 \001(\t\022\023\n\013fight_score\030\003"
    " \001(\005\022\r\n\005floor\030\004 \001(\005\022\023\n\013script_type\030\005 \001(\005"
    "\"\344\001\n\rProto31403101\022\016\n\006is_buy\030\001 \001(\005\022\024\n\014in"
    "vest_index\030\002 \001(\005\022\022\n\nget_reward\030\003 \001(\005\022\021\n\t"
    "vip_level\030\004 \001(\005\022\023\n\013reward_time\030\005 \001(\003\022\020\n\010"
    "buy_time\030\006 \001(\003\022\026\n\016invest_rewards\030\007 \003(\005\022\023"
    "\n\013vip_rewards\030\010 \003(\005\022\017\n\007role_id\030\t \001(\003\022!\n\t"
    "type_info\030\n \001(\0132\016.ProtoThreeObj\"F\n\rProto"
    "30400152\022\017\n\007item_id\030\001 \001(\005\022\023\n\013item_amount"
    "\030\002 \001(\005\022\017\n\007tips_id\030\003 \001(\005\" \n\rProto30400705"
    "\022\017\n\007role_id\030\001 \001(\003\"H\n\rProto30100704\022\017\n\007ro"
    "le_id\030\001 \001(\003\022\023\n\013leader_list\030\002 \003(\003\022\021\n\tteam"
    "_list\030\003 \003(\005\"\270\001\n\rProto31400164\022\022\n\nfree_ti"
    "mes\030\001 \001(\005\022\023\n\013reset_times\030\002 \001(\005\022\022\n\ngame_i"
    "ndex\030\003 \001(\005\022\023\n\013game_length\030\004 \001(\005\022\022\n\nreset"
    "_tick\030\005 \001(\003\022\"\n\nother_info\030\006 \001(\0132\016.ProtoT"
    "hreeObj\022\035\n\titem_list\030\007 \003(\0132\n.ProtoItem\"\202"
    "\001\n\rProto31400033\022\023\n\013first_index\030\001 \001(\005\022\024\n"
    "\014second_index\030\002 \001(\005\022\035\n\tcost_item\030\003 \003(\0132\n"
    ".ProtoItem\022\027\n\017cash_coupon_use\030\004 \001(\005\022\016\n\006a"
    "mount\030\005 \001(\005\"A\n\rProto30100239\022\"\n\nmount_in"
    "fo\030\001 \003(\0132\016.ProtoThreeObj\022\014\n\004flag\030\002 \001(\005\"G"
    "\n\rProto30100120\022\022\n\npermission\030\001 \001(\005\022\"\n\no"
    "ther_info\030\002 \001(\0132\016.ProtoThreeObj\"G\n\rProto"
    "30400055\022\022\n\npermission\030\001 \001(\005\022\"\n\nother_in"
    "fo\030\002 \001(\0132\016.ProtoThreeObj\"t\n\rProto3140014"
    "5\022\013\n\003day\030\001 \001(\005\022\014\n\004open\030\002 \001(\005\022\022\n\nget_stat"
    "us\030\003 \001(\005\022\024\n\014refresh_tick\030\004 \001(\003\022\036\n\007buy_ma"
    "p\030\005 \003(\0132\r.ProtoPairObj", 4462);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoInner008.proto", &protobuf_RegisterTypes);
  Proto30400451::default_instance_ = new Proto30400451();
  Proto30100240::default_instance_ = new Proto30100240();
  Proto31402801::default_instance_ = new Proto31402801();
  Proto31400170::default_instance_ = new Proto31400170();
  Proto31400180::default_instance_ = new Proto31400180();
  Proto31400323::default_instance_ = new Proto31400323();
  Proto31400190::default_instance_ = new Proto31400190();
  Proto30400502::default_instance_ = new Proto30400502();
  Proto30400503::default_instance_ = new Proto30400503();
  Proto30102001::default_instance_ = new Proto30102001();
  Proto30102002::default_instance_ = new Proto30102002();
  Proto30102003::default_instance_ = new Proto30102003();
  Proto30400452::default_instance_ = new Proto30400452();
  Proto30402101::default_instance_ = new Proto30402101();
  Proto30102004::default_instance_ = new Proto30102004();
  Proto30400504::default_instance_ = new Proto30400504();
  Proto30400505::default_instance_ = new Proto30400505();
  Proto30400506::default_instance_ = new Proto30400506();
  Proto30100230::default_instance_ = new Proto30100230();
  Proto31400041::default_instance_ = new Proto31400041();
  Proto30100241::default_instance_ = new Proto30100241();
  Proto31402901::default_instance_ = new Proto31402901();
  Proto31400144::default_instance_ = new Proto31400144();
  Proto31400324::default_instance_ = new Proto31400324();
  Proto30400025::default_instance_ = new Proto30400025();
  Proto30400116::default_instance_ = new Proto30400116();
  Proto30400453::default_instance_ = new Proto30400453();
  Proto31400042::default_instance_ = new Proto31400042();
  Proto30400911::default_instance_ = new Proto30400911();
  Proto30402202::default_instance_ = new Proto30402202();
  Proto30402203::default_instance_ = new Proto30402203();
  Proto31400043::default_instance_ = new Proto31400043();
  Proto30400408::default_instance_ = new Proto30400408();
  Proto30101802::default_instance_ = new Proto30101802();
  Proto31400162::default_instance_ = new Proto31400162();
  Proto31400163::default_instance_ = new Proto31400163();
  Proto30402301::default_instance_ = new Proto30402301();
  Proto30100242::default_instance_ = new Proto30100242();
  Proto30103001::default_instance_ = new Proto30103001();
  Proto30400912::default_instance_ = new Proto30400912();
  Proto31403101::default_instance_ = new Proto31403101();
  Proto30400152::default_instance_ = new Proto30400152();
  Proto30400705::default_instance_ = new Proto30400705();
  Proto30100704::default_instance_ = new Proto30100704();
  Proto31400164::default_instance_ = new Proto31400164();
  Proto31400033::default_instance_ = new Proto31400033();
  Proto30100239::default_instance_ = new Proto30100239();
  Proto30100120::default_instance_ = new Proto30100120();
  Proto30400055::default_instance_ = new Proto30400055();
  Proto31400145::default_instance_ = new Proto31400145();
  Proto30400451::default_instance_->InitAsDefaultInstance();
  Proto30100240::default_instance_->InitAsDefaultInstance();
  Proto31402801::default_instance_->InitAsDefaultInstance();
  Proto31400170::default_instance_->InitAsDefaultInstance();
  Proto31400180::default_instance_->InitAsDefaultInstance();
  Proto31400323::default_instance_->InitAsDefaultInstance();
  Proto31400190::default_instance_->InitAsDefaultInstance();
  Proto30400502::default_instance_->InitAsDefaultInstance();
  Proto30400503::default_instance_->InitAsDefaultInstance();
  Proto30102001::default_instance_->InitAsDefaultInstance();
  Proto30102002::default_instance_->InitAsDefaultInstance();
  Proto30102003::default_instance_->InitAsDefaultInstance();
  Proto30400452::default_instance_->InitAsDefaultInstance();
  Proto30402101::default_instance_->InitAsDefaultInstance();
  Proto30102004::default_instance_->InitAsDefaultInstance();
  Proto30400504::default_instance_->InitAsDefaultInstance();
  Proto30400505::default_instance_->InitAsDefaultInstance();
  Proto30400506::default_instance_->InitAsDefaultInstance();
  Proto30100230::default_instance_->InitAsDefaultInstance();
  Proto31400041::default_instance_->InitAsDefaultInstance();
  Proto30100241::default_instance_->InitAsDefaultInstance();
  Proto31402901::default_instance_->InitAsDefaultInstance();
  Proto31400144::default_instance_->InitAsDefaultInstance();
  Proto31400324::default_instance_->InitAsDefaultInstance();
  Proto30400025::default_instance_->InitAsDefaultInstance();
  Proto30400116::default_instance_->InitAsDefaultInstance();
  Proto30400453::default_instance_->InitAsDefaultInstance();
  Proto31400042::default_instance_->InitAsDefaultInstance();
  Proto30400911::default_instance_->InitAsDefaultInstance();
  Proto30402202::default_instance_->InitAsDefaultInstance();
  Proto30402203::default_instance_->InitAsDefaultInstance();
  Proto31400043::default_instance_->InitAsDefaultInstance();
  Proto30400408::default_instance_->InitAsDefaultInstance();
  Proto30101802::default_instance_->InitAsDefaultInstance();
  Proto31400162::default_instance_->InitAsDefaultInstance();
  Proto31400163::default_instance_->InitAsDefaultInstance();
  Proto30402301::default_instance_->InitAsDefaultInstance();
  Proto30100242::default_instance_->InitAsDefaultInstance();
  Proto30103001::default_instance_->InitAsDefaultInstance();
  Proto30400912::default_instance_->InitAsDefaultInstance();
  Proto31403101::default_instance_->InitAsDefaultInstance();
  Proto30400152::default_instance_->InitAsDefaultInstance();
  Proto30400705::default_instance_->InitAsDefaultInstance();
  Proto30100704::default_instance_->InitAsDefaultInstance();
  Proto31400164::default_instance_->InitAsDefaultInstance();
  Proto31400033::default_instance_->InitAsDefaultInstance();
  Proto30100239::default_instance_->InitAsDefaultInstance();
  Proto30100120::default_instance_->InitAsDefaultInstance();
  Proto30400055::default_instance_->InitAsDefaultInstance();
  Proto31400145::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoInner008_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoInner008_2eproto {
  StaticDescriptorInitializer_ProtoInner008_2eproto() {
    protobuf_AddDesc_ProtoInner008_2eproto();
  }
} static_descriptor_initializer_ProtoInner008_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto30400451::kLeagueIndexFieldNumber;
const int Proto30400451::kSummonTypeFieldNumber;
const int Proto30400451::kBossIndexFieldNumber;
const int Proto30400451::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto30400451::Proto30400451()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400451::InitAsDefaultInstance() {
}

Proto30400451::Proto30400451(const Proto30400451& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400451::SharedCtor() {
  _cached_size_ = 0;
  league_index_ = GOOGLE_LONGLONG(0);
  summon_type_ = 0;
  boss_index_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400451::~Proto30400451() {
  SharedDtor();
}

void Proto30400451::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400451::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400451::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400451_descriptor_;
}

const Proto30400451& Proto30400451::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30400451* Proto30400451::default_instance_ = NULL;

Proto30400451* Proto30400451::New() const {
  return new Proto30400451;
}

void Proto30400451::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_index_ = GOOGLE_LONGLONG(0);
    summon_type_ = 0;
    boss_index_ = 0;
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400451::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 league_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_index_)));
          set_has_league_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_summon_type;
        break;
      }
      
      // optional int32 summon_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_summon_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &summon_type_)));
          set_has_summon_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_boss_index;
        break;
      }
      
      // optional int32 boss_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_boss_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boss_index_)));
          set_has_boss_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400451::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->league_index(), output);
  }
  
  // optional int32 summon_type = 2;
  if (has_summon_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->summon_type(), output);
  }
  
  // optional int32 boss_index = 3;
  if (has_boss_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->boss_index(), output);
  }
  
  // optional int64 role_id = 4;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400451::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->league_index(), target);
  }
  
  // optional int32 summon_type = 2;
  if (has_summon_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->summon_type(), target);
  }
  
  // optional int32 boss_index = 3;
  if (has_boss_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->boss_index(), target);
  }
  
  // optional int64 role_id = 4;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400451::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 league_index = 1;
    if (has_league_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_index());
    }
    
    // optional int32 summon_type = 2;
    if (has_summon_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->summon_type());
    }
    
    // optional int32 boss_index = 3;
    if (has_boss_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boss_index());
    }
    
    // optional int64 role_id = 4;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400451::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400451* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400451*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400451::MergeFrom(const Proto30400451& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_index()) {
      set_league_index(from.league_index());
    }
    if (from.has_summon_type()) {
      set_summon_type(from.summon_type());
    }
    if (from.has_boss_index()) {
      set_boss_index(from.boss_index());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400451::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400451::CopyFrom(const Proto30400451& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400451::IsInitialized() const {
  
  return true;
}

void Proto30400451::Swap(Proto30400451* other) {
  if (other != this) {
    std::swap(league_index_, other->league_index_);
    std::swap(summon_type_, other->summon_type_);
    std::swap(boss_index_, other->boss_index_);
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400451::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400451_descriptor_;
  metadata.reflection = Proto30400451_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100240::kSummonTypeFieldNumber;
const int Proto30100240::kLeagueIndexFieldNumber;
const int Proto30100240::kBossIndexFieldNumber;
const int Proto30100240::kRoleSetFieldNumber;
#endif  // !_MSC_VER

Proto30100240::Proto30100240()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100240::InitAsDefaultInstance() {
}

Proto30100240::Proto30100240(const Proto30100240& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100240::SharedCtor() {
  _cached_size_ = 0;
  summon_type_ = 0;
  league_index_ = GOOGLE_LONGLONG(0);
  boss_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100240::~Proto30100240() {
  SharedDtor();
}

void Proto30100240::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100240::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100240::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100240_descriptor_;
}

const Proto30100240& Proto30100240::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30100240* Proto30100240::default_instance_ = NULL;

Proto30100240* Proto30100240::New() const {
  return new Proto30100240;
}

void Proto30100240::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    summon_type_ = 0;
    league_index_ = GOOGLE_LONGLONG(0);
    boss_index_ = 0;
  }
  role_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100240::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 summon_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &summon_type_)));
          set_has_summon_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_league_index;
        break;
      }
      
      // optional int64 league_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_index_)));
          set_has_league_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_boss_index;
        break;
      }
      
      // optional int32 boss_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_boss_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boss_index_)));
          set_has_boss_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_role_set;
        break;
      }
      
      // repeated .ProtoLWarItem role_set = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_role_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_role_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100240::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 summon_type = 1;
  if (has_summon_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->summon_type(), output);
  }
  
  // optional int64 league_index = 2;
  if (has_league_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->league_index(), output);
  }
  
  // optional int32 boss_index = 3;
  if (has_boss_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->boss_index(), output);
  }
  
  // repeated .ProtoLWarItem role_set = 4;
  for (int i = 0; i < this->role_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->role_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100240::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 summon_type = 1;
  if (has_summon_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->summon_type(), target);
  }
  
  // optional int64 league_index = 2;
  if (has_league_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->league_index(), target);
  }
  
  // optional int32 boss_index = 3;
  if (has_boss_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->boss_index(), target);
  }
  
  // repeated .ProtoLWarItem role_set = 4;
  for (int i = 0; i < this->role_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->role_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100240::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 summon_type = 1;
    if (has_summon_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->summon_type());
    }
    
    // optional int64 league_index = 2;
    if (has_league_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_index());
    }
    
    // optional int32 boss_index = 3;
    if (has_boss_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boss_index());
    }
    
  }
  // repeated .ProtoLWarItem role_set = 4;
  total_size += 1 * this->role_set_size();
  for (int i = 0; i < this->role_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100240::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100240* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100240*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100240::MergeFrom(const Proto30100240& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_set_.MergeFrom(from.role_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_summon_type()) {
      set_summon_type(from.summon_type());
    }
    if (from.has_league_index()) {
      set_league_index(from.league_index());
    }
    if (from.has_boss_index()) {
      set_boss_index(from.boss_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100240::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100240::CopyFrom(const Proto30100240& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100240::IsInitialized() const {
  
  return true;
}

void Proto30100240::Swap(Proto30100240* other) {
  if (other != this) {
    std::swap(summon_type_, other->summon_type_);
    std::swap(league_index_, other->league_index_);
    std::swap(boss_index_, other->boss_index_);
    role_set_.Swap(&other->role_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100240::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100240_descriptor_;
  metadata.reflection = Proto30100240_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31402801::kHighestSweepFieldNumber;
#endif  // !_MSC_VER

Proto31402801::Proto31402801()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31402801::InitAsDefaultInstance() {
}

Proto31402801::Proto31402801(const Proto31402801& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31402801::SharedCtor() {
  _cached_size_ = 0;
  highest_sweep_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31402801::~Proto31402801() {
  SharedDtor();
}

void Proto31402801::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31402801::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31402801::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31402801_descriptor_;
}

const Proto31402801& Proto31402801::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto31402801* Proto31402801::default_instance_ = NULL;

Proto31402801* Proto31402801::New() const {
  return new Proto31402801;
}

void Proto31402801::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    highest_sweep_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31402801::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 highest_sweep = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &highest_sweep_)));
          set_has_highest_sweep();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31402801::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 highest_sweep = 1;
  if (has_highest_sweep()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->highest_sweep(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31402801::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 highest_sweep = 1;
  if (has_highest_sweep()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->highest_sweep(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31402801::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 highest_sweep = 1;
    if (has_highest_sweep()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->highest_sweep());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31402801::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31402801* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31402801*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31402801::MergeFrom(const Proto31402801& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_highest_sweep()) {
      set_highest_sweep(from.highest_sweep());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31402801::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31402801::CopyFrom(const Proto31402801& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31402801::IsInitialized() const {
  
  return true;
}

void Proto31402801::Swap(Proto31402801* other) {
  if (other != this) {
    std::swap(highest_sweep_, other->highest_sweep_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31402801::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31402801_descriptor_;
  metadata.reflection = Proto31402801_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400170::kRoleIdFieldNumber;
const int Proto31400170::kScoreNumFieldNumber;
const int Proto31400170::kRightNumFieldNumber;
#endif  // !_MSC_VER

Proto31400170::Proto31400170()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400170::InitAsDefaultInstance() {
}

Proto31400170::Proto31400170(const Proto31400170& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400170::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = 0;
  score_num_ = 0;
  right_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400170::~Proto31400170() {
  SharedDtor();
}

void Proto31400170::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400170::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400170::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400170_descriptor_;
}

const Proto31400170& Proto31400170::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto31400170* Proto31400170::default_instance_ = NULL;

Proto31400170* Proto31400170::New() const {
  return new Proto31400170;
}

void Proto31400170::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = 0;
    score_num_ = 0;
    right_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400170::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_score_num;
        break;
      }
      
      // optional int32 score_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_score_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_num_)));
          set_has_score_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_right_num;
        break;
      }
      
      // optional int32 right_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_right_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &right_num_)));
          set_has_right_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400170::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->role_id(), output);
  }
  
  // optional int32 score_num = 2;
  if (has_score_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->score_num(), output);
  }
  
  // optional int32 right_num = 3;
  if (has_right_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->right_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400170::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->role_id(), target);
  }
  
  // optional int32 score_num = 2;
  if (has_score_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->score_num(), target);
  }
  
  // optional int32 right_num = 3;
  if (has_right_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->right_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400170::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->role_id());
    }
    
    // optional int32 score_num = 2;
    if (has_score_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score_num());
    }
    
    // optional int32 right_num = 3;
    if (has_right_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->right_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400170::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400170* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400170*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400170::MergeFrom(const Proto31400170& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_score_num()) {
      set_score_num(from.score_num());
    }
    if (from.has_right_num()) {
      set_right_num(from.right_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400170::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400170::CopyFrom(const Proto31400170& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400170::IsInitialized() const {
  
  return true;
}

void Proto31400170::Swap(Proto31400170* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(score_num_, other->score_num_);
    std::swap(right_num_, other->right_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400170::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400170_descriptor_;
  metadata.reflection = Proto31400170_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400180::kReceivedMarkFieldNumber;
const int Proto31400180::kOfflineSumFieldNumber;
const int Proto31400180::kExpNumFieldNumber;
const int Proto31400180::kLongestTimeFieldNumber;
#endif  // !_MSC_VER

Proto31400180::Proto31400180()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400180::InitAsDefaultInstance() {
}

Proto31400180::Proto31400180(const Proto31400180& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400180::SharedCtor() {
  _cached_size_ = 0;
  received_mark_ = 0;
  offline_sum_ = 0;
  exp_num_ = 0;
  longest_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400180::~Proto31400180() {
  SharedDtor();
}

void Proto31400180::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400180::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400180::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400180_descriptor_;
}

const Proto31400180& Proto31400180::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto31400180* Proto31400180::default_instance_ = NULL;

Proto31400180* Proto31400180::New() const {
  return new Proto31400180;
}

void Proto31400180::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    received_mark_ = 0;
    offline_sum_ = 0;
    exp_num_ = 0;
    longest_time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400180::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 received_mark = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &received_mark_)));
          set_has_received_mark();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_offline_sum;
        break;
      }
      
      // optional int32 offline_sum = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_offline_sum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offline_sum_)));
          set_has_offline_sum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_exp_num;
        break;
      }
      
      // optional int32 exp_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_num_)));
          set_has_exp_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_longest_time;
        break;
      }
      
      // optional int32 longest_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_longest_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &longest_time_)));
          set_has_longest_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400180::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 received_mark = 1;
  if (has_received_mark()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->received_mark(), output);
  }
  
  // optional int32 offline_sum = 2;
  if (has_offline_sum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->offline_sum(), output);
  }
  
  // optional int32 exp_num = 3;
  if (has_exp_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->exp_num(), output);
  }
  
  // optional int32 longest_time = 4;
  if (has_longest_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->longest_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400180::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 received_mark = 1;
  if (has_received_mark()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->received_mark(), target);
  }
  
  // optional int32 offline_sum = 2;
  if (has_offline_sum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->offline_sum(), target);
  }
  
  // optional int32 exp_num = 3;
  if (has_exp_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->exp_num(), target);
  }
  
  // optional int32 longest_time = 4;
  if (has_longest_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->longest_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400180::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 received_mark = 1;
    if (has_received_mark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->received_mark());
    }
    
    // optional int32 offline_sum = 2;
    if (has_offline_sum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->offline_sum());
    }
    
    // optional int32 exp_num = 3;
    if (has_exp_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp_num());
    }
    
    // optional int32 longest_time = 4;
    if (has_longest_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->longest_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400180::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400180* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400180*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400180::MergeFrom(const Proto31400180& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_received_mark()) {
      set_received_mark(from.received_mark());
    }
    if (from.has_offline_sum()) {
      set_offline_sum(from.offline_sum());
    }
    if (from.has_exp_num()) {
      set_exp_num(from.exp_num());
    }
    if (from.has_longest_time()) {
      set_longest_time(from.longest_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400180::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400180::CopyFrom(const Proto31400180& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400180::IsInitialized() const {
  
  return true;
}

void Proto31400180::Swap(Proto31400180* other) {
  if (other != this) {
    std::swap(received_mark_, other->received_mark_);
    std::swap(offline_sum_, other->offline_sum_);
    std::swap(exp_num_, other->exp_num_);
    std::swap(longest_time_, other->longest_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400180::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400180_descriptor_;
  metadata.reflection = Proto31400180_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400323::kIdFieldNumber;
const int Proto31400323::kSerialFieldNumber;
#endif  // !_MSC_VER

Proto31400323::Proto31400323()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400323::InitAsDefaultInstance() {
  serial_ = const_cast< ::ProtoSerialObj*>(&::ProtoSerialObj::default_instance());
}

Proto31400323::Proto31400323(const Proto31400323& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400323::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  serial_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400323::~Proto31400323() {
  SharedDtor();
}

void Proto31400323::SharedDtor() {
  if (this != default_instance_) {
    delete serial_;
  }
}

void Proto31400323::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400323::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400323_descriptor_;
}

const Proto31400323& Proto31400323::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto31400323* Proto31400323::default_instance_ = NULL;

Proto31400323* Proto31400323::New() const {
  return new Proto31400323;
}

void Proto31400323::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_serial()) {
      if (serial_ != NULL) serial_->::ProtoSerialObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400323::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_serial;
        break;
      }
      
      // optional .ProtoSerialObj serial = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_serial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serial()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400323::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional .ProtoSerialObj serial = 2;
  if (has_serial()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->serial(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400323::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional .ProtoSerialObj serial = 2;
  if (has_serial()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->serial(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400323::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional .ProtoSerialObj serial = 2;
    if (has_serial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serial());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400323::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400323* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400323*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400323::MergeFrom(const Proto31400323& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_serial()) {
      mutable_serial()->::ProtoSerialObj::MergeFrom(from.serial());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400323::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400323::CopyFrom(const Proto31400323& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400323::IsInitialized() const {
  
  return true;
}

void Proto31400323::Swap(Proto31400323* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(serial_, other->serial_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400323::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400323_descriptor_;
  metadata.reflection = Proto31400323_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400190::kPlayerIdFieldNumber;
#endif  // !_MSC_VER

Proto31400190::Proto31400190()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400190::InitAsDefaultInstance() {
}

Proto31400190::Proto31400190(const Proto31400190& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400190::SharedCtor() {
  _cached_size_ = 0;
  player_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400190::~Proto31400190() {
  SharedDtor();
}

void Proto31400190::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400190::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400190::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400190_descriptor_;
}

const Proto31400190& Proto31400190::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto31400190* Proto31400190::default_instance_ = NULL;

Proto31400190* Proto31400190::New() const {
  return new Proto31400190;
}

void Proto31400190::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    player_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400190::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 player_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
          set_has_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400190::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->player_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400190::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->player_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400190::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400190::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400190* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400190*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400190::MergeFrom(const Proto31400190& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400190::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400190::CopyFrom(const Proto31400190& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400190::IsInitialized() const {
  
  return true;
}

void Proto31400190::Swap(Proto31400190* other) {
  if (other != this) {
    std::swap(player_id_, other->player_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400190::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400190_descriptor_;
  metadata.reflection = Proto31400190_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400502::kSceneIdFieldNumber;
const int Proto30400502::kLimitForceFieldNumber;
const int Proto30400502::kSceretFieldNumber;
const int Proto30400502::kAutoStartFieldNumber;
const int Proto30400502::kTypeFieldNumber;
const int Proto30400502::kSelfInfoFieldNumber;
const int Proto30400502::kServerInfoFieldNumber;
const int Proto30400502::kIndexFieldNumber;
const int Proto30400502::kMainVersionFieldNumber;
#endif  // !_MSC_VER

Proto30400502::Proto30400502()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400502::InitAsDefaultInstance() {
  self_info_ = const_cast< ::ProtoTeamer*>(&::ProtoTeamer::default_instance());
  server_info_ = const_cast< ::ProtoServer*>(&::ProtoServer::default_instance());
}

Proto30400502::Proto30400502(const Proto30400502& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400502::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  limit_force_ = 0;
  sceret_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  auto_start_ = 0;
  type_ = 0;
  self_info_ = NULL;
  server_info_ = NULL;
  index_ = 0;
  main_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400502::~Proto30400502() {
  SharedDtor();
}

void Proto30400502::SharedDtor() {
  if (sceret_ != &::google::protobuf::internal::kEmptyString) {
    delete sceret_;
  }
  if (main_version_ != &::google::protobuf::internal::kEmptyString) {
    delete main_version_;
  }
  if (this != default_instance_) {
    delete self_info_;
    delete server_info_;
  }
}

void Proto30400502::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400502::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400502_descriptor_;
}

const Proto30400502& Proto30400502::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30400502* Proto30400502::default_instance_ = NULL;

Proto30400502* Proto30400502::New() const {
  return new Proto30400502;
}

void Proto30400502::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    limit_force_ = 0;
    if (has_sceret()) {
      if (sceret_ != &::google::protobuf::internal::kEmptyString) {
        sceret_->clear();
      }
    }
    auto_start_ = 0;
    type_ = 0;
    if (has_self_info()) {
      if (self_info_ != NULL) self_info_->::ProtoTeamer::Clear();
    }
    if (has_server_info()) {
      if (server_info_ != NULL) server_info_->::ProtoServer::Clear();
    }
    index_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_main_version()) {
      if (main_version_ != &::google::protobuf::internal::kEmptyString) {
        main_version_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400502::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_limit_force;
        break;
      }
      
      // optional int32 limit_force = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_limit_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_force_)));
          set_has_limit_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_sceret;
        break;
      }
      
      // optional string sceret = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sceret:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sceret()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sceret().data(), this->sceret().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_auto_start;
        break;
      }
      
      // optional int32 auto_start = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_start:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_start_)));
          set_has_auto_start();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }
      
      // optional int32 type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_self_info;
        break;
      }
      
      // optional .ProtoTeamer self_info = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_self_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_server_info;
        break;
      }
      
      // optional .ProtoServer server_info = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_server_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_server_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_index;
        break;
      }
      
      // optional int32 index = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_main_version;
        break;
      }
      
      // optional string main_version = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_main_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_main_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->main_version().data(), this->main_version().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400502::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 limit_force = 2;
  if (has_limit_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->limit_force(), output);
  }
  
  // optional string sceret = 3;
  if (has_sceret()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sceret().data(), this->sceret().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->sceret(), output);
  }
  
  // optional int32 auto_start = 4;
  if (has_auto_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->auto_start(), output);
  }
  
  // optional int32 type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }
  
  // optional .ProtoTeamer self_info = 6;
  if (has_self_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->self_info(), output);
  }
  
  // optional .ProtoServer server_info = 7;
  if (has_server_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->server_info(), output);
  }
  
  // optional int32 index = 8;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->index(), output);
  }
  
  // optional string main_version = 9;
  if (has_main_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->main_version().data(), this->main_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->main_version(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400502::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 limit_force = 2;
  if (has_limit_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->limit_force(), target);
  }
  
  // optional string sceret = 3;
  if (has_sceret()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sceret().data(), this->sceret().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sceret(), target);
  }
  
  // optional int32 auto_start = 4;
  if (has_auto_start()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->auto_start(), target);
  }
  
  // optional int32 type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }
  
  // optional .ProtoTeamer self_info = 6;
  if (has_self_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->self_info(), target);
  }
  
  // optional .ProtoServer server_info = 7;
  if (has_server_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->server_info(), target);
  }
  
  // optional int32 index = 8;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->index(), target);
  }
  
  // optional string main_version = 9;
  if (has_main_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->main_version().data(), this->main_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->main_version(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400502::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 limit_force = 2;
    if (has_limit_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->limit_force());
    }
    
    // optional string sceret = 3;
    if (has_sceret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sceret());
    }
    
    // optional int32 auto_start = 4;
    if (has_auto_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_start());
    }
    
    // optional int32 type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional .ProtoTeamer self_info = 6;
    if (has_self_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->self_info());
    }
    
    // optional .ProtoServer server_info = 7;
    if (has_server_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->server_info());
    }
    
    // optional int32 index = 8;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string main_version = 9;
    if (has_main_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->main_version());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400502::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400502* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400502*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400502::MergeFrom(const Proto30400502& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_limit_force()) {
      set_limit_force(from.limit_force());
    }
    if (from.has_sceret()) {
      set_sceret(from.sceret());
    }
    if (from.has_auto_start()) {
      set_auto_start(from.auto_start());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_self_info()) {
      mutable_self_info()->::ProtoTeamer::MergeFrom(from.self_info());
    }
    if (from.has_server_info()) {
      mutable_server_info()->::ProtoServer::MergeFrom(from.server_info());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_main_version()) {
      set_main_version(from.main_version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400502::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400502::CopyFrom(const Proto30400502& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400502::IsInitialized() const {
  
  return true;
}

void Proto30400502::Swap(Proto30400502* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(limit_force_, other->limit_force_);
    std::swap(sceret_, other->sceret_);
    std::swap(auto_start_, other->auto_start_);
    std::swap(type_, other->type_);
    std::swap(self_info_, other->self_info_);
    std::swap(server_info_, other->server_info_);
    std::swap(index_, other->index_);
    std::swap(main_version_, other->main_version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400502::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400502_descriptor_;
  metadata.reflection = Proto30400502_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400503::kSceneIdFieldNumber;
const int Proto30400503::kTypeFieldNumber;
const int Proto30400503::kIndexFieldNumber;
const int Proto30400503::kRoleFieldNumber;
#endif  // !_MSC_VER

Proto30400503::Proto30400503()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400503::InitAsDefaultInstance() {
}

Proto30400503::Proto30400503(const Proto30400503& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400503::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  type_ = 0;
  index_ = 0;
  role_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400503::~Proto30400503() {
  SharedDtor();
}

void Proto30400503::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400503::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400503::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400503_descriptor_;
}

const Proto30400503& Proto30400503::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30400503* Proto30400503::default_instance_ = NULL;

Proto30400503* Proto30400503::New() const {
  return new Proto30400503;
}

void Proto30400503::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    type_ = 0;
    index_ = 0;
    role_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400503::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_index;
        break;
      }
      
      // optional int32 index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_role;
        break;
      }
      
      // optional int64 role = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_)));
          set_has_role();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400503::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  // optional int32 index = 3;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->index(), output);
  }
  
  // optional int64 role = 4;
  if (has_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->role(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400503::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  // optional int32 index = 3;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->index(), target);
  }
  
  // optional int64 role = 4;
  if (has_role()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->role(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400503::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 index = 3;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int64 role = 4;
    if (has_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400503::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400503* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400503*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400503::MergeFrom(const Proto30400503& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_role()) {
      set_role(from.role());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400503::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400503::CopyFrom(const Proto30400503& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400503::IsInitialized() const {
  
  return true;
}

void Proto30400503::Swap(Proto30400503* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(type_, other->type_);
    std::swap(index_, other->index_);
    std::swap(role_, other->role_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400503::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400503_descriptor_;
  metadata.reflection = Proto30400503_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30102001::kActivityIdFieldNumber;
const int Proto30102001::kStatusFieldNumber;
const int Proto30102001::kBuffTimeFieldNumber;
#endif  // !_MSC_VER

Proto30102001::Proto30102001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30102001::InitAsDefaultInstance() {
}

Proto30102001::Proto30102001(const Proto30102001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30102001::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  status_ = 0;
  buff_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30102001::~Proto30102001() {
  SharedDtor();
}

void Proto30102001::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30102001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30102001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30102001_descriptor_;
}

const Proto30102001& Proto30102001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30102001* Proto30102001::default_instance_ = NULL;

Proto30102001* Proto30102001::New() const {
  return new Proto30102001;
}

void Proto30102001::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    status_ = 0;
    buff_time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30102001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }
      
      // optional int32 status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_buff_time;
        break;
      }
      
      // optional int32 buff_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buff_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buff_time_)));
          set_has_buff_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30102001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }
  
  // optional int32 buff_time = 3;
  if (has_buff_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->buff_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30102001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }
  
  // optional int32 buff_time = 3;
  if (has_buff_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->buff_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30102001::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int32 buff_time = 3;
    if (has_buff_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buff_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30102001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30102001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30102001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30102001::MergeFrom(const Proto30102001& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_buff_time()) {
      set_buff_time(from.buff_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30102001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30102001::CopyFrom(const Proto30102001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30102001::IsInitialized() const {
  
  return true;
}

void Proto30102001::Swap(Proto30102001* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(status_, other->status_);
    std::swap(buff_time_, other->buff_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30102001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30102001_descriptor_;
  metadata.reflection = Proto30102001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30102002::kStatusFieldNumber;
const int Proto30102002::kBuffTimeFieldNumber;
#endif  // !_MSC_VER

Proto30102002::Proto30102002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30102002::InitAsDefaultInstance() {
}

Proto30102002::Proto30102002(const Proto30102002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30102002::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  buff_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30102002::~Proto30102002() {
  SharedDtor();
}

void Proto30102002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30102002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30102002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30102002_descriptor_;
}

const Proto30102002& Proto30102002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30102002* Proto30102002::default_instance_ = NULL;

Proto30102002* Proto30102002::New() const {
  return new Proto30102002;
}

void Proto30102002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
    buff_time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30102002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_buff_time;
        break;
      }
      
      // optional int32 buff_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buff_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buff_time_)));
          set_has_buff_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30102002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  // optional int32 buff_time = 2;
  if (has_buff_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->buff_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30102002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  // optional int32 buff_time = 2;
  if (has_buff_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->buff_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30102002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int32 buff_time = 2;
    if (has_buff_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buff_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30102002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30102002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30102002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30102002::MergeFrom(const Proto30102002& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_buff_time()) {
      set_buff_time(from.buff_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30102002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30102002::CopyFrom(const Proto30102002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30102002::IsInitialized() const {
  
  return true;
}

void Proto30102002::Swap(Proto30102002* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(buff_time_, other->buff_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30102002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30102002_descriptor_;
  metadata.reflection = Proto30102002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30102003::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto30102003::Proto30102003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30102003::InitAsDefaultInstance() {
}

Proto30102003::Proto30102003(const Proto30102003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30102003::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30102003::~Proto30102003() {
  SharedDtor();
}

void Proto30102003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30102003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30102003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30102003_descriptor_;
}

const Proto30102003& Proto30102003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30102003* Proto30102003::default_instance_ = NULL;

Proto30102003* Proto30102003::New() const {
  return new Proto30102003;
}

void Proto30102003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30102003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30102003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30102003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30102003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30102003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30102003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30102003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30102003::MergeFrom(const Proto30102003& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30102003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30102003::CopyFrom(const Proto30102003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30102003::IsInitialized() const {
  
  return true;
}

void Proto30102003::Swap(Proto30102003* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30102003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30102003_descriptor_;
  metadata.reflection = Proto30102003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400452::kLeagueIndexFieldNumber;
#endif  // !_MSC_VER

Proto30400452::Proto30400452()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400452::InitAsDefaultInstance() {
}

Proto30400452::Proto30400452(const Proto30400452& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400452::SharedCtor() {
  _cached_size_ = 0;
  league_index_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400452::~Proto30400452() {
  SharedDtor();
}

void Proto30400452::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400452::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400452::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400452_descriptor_;
}

const Proto30400452& Proto30400452::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30400452* Proto30400452::default_instance_ = NULL;

Proto30400452* Proto30400452::New() const {
  return new Proto30400452;
}

void Proto30400452::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_index_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400452::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 league_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_index_)));
          set_has_league_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400452::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->league_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400452::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->league_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400452::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 league_index = 1;
    if (has_league_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400452::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400452* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400452*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400452::MergeFrom(const Proto30400452& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_index()) {
      set_league_index(from.league_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400452::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400452::CopyFrom(const Proto30400452& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400452::IsInitialized() const {
  
  return true;
}

void Proto30400452::Swap(Proto30400452* other) {
  if (other != this) {
    std::swap(league_index_, other->league_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400452::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400452_descriptor_;
  metadata.reflection = Proto30400452_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402101::kPlayerIdFieldNumber;
const int Proto30402101::kSpaceIdFieldNumber;
const int Proto30402101::kSceneIdFieldNumber;
#endif  // !_MSC_VER

Proto30402101::Proto30402101()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402101::InitAsDefaultInstance() {
}

Proto30402101::Proto30402101(const Proto30402101& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402101::SharedCtor() {
  _cached_size_ = 0;
  player_id_ = GOOGLE_LONGLONG(0);
  space_id_ = 0;
  scene_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402101::~Proto30402101() {
  SharedDtor();
}

void Proto30402101::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30402101::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402101::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402101_descriptor_;
}

const Proto30402101& Proto30402101::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30402101* Proto30402101::default_instance_ = NULL;

Proto30402101* Proto30402101::New() const {
  return new Proto30402101;
}

void Proto30402101::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    player_id_ = GOOGLE_LONGLONG(0);
    space_id_ = 0;
    scene_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402101::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 player_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
          set_has_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_space_id;
        break;
      }
      
      // optional int32 space_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_space_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &space_id_)));
          set_has_space_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402101::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->player_id(), output);
  }
  
  // optional int32 space_id = 2;
  if (has_space_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->space_id(), output);
  }
  
  // optional int32 scene_id = 3;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->scene_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402101::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->player_id(), target);
  }
  
  // optional int32 space_id = 2;
  if (has_space_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->space_id(), target);
  }
  
  // optional int32 scene_id = 3;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->scene_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402101::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_id());
    }
    
    // optional int32 space_id = 2;
    if (has_space_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->space_id());
    }
    
    // optional int32 scene_id = 3;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402101::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402101* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402101*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402101::MergeFrom(const Proto30402101& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
    if (from.has_space_id()) {
      set_space_id(from.space_id());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402101::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402101::CopyFrom(const Proto30402101& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402101::IsInitialized() const {
  
  return true;
}

void Proto30402101::Swap(Proto30402101* other) {
  if (other != this) {
    std::swap(player_id_, other->player_id_);
    std::swap(space_id_, other->space_id_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402101::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402101_descriptor_;
  metadata.reflection = Proto30402101_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30102004::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto30102004::Proto30102004()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30102004::InitAsDefaultInstance() {
}

Proto30102004::Proto30102004(const Proto30102004& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30102004::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30102004::~Proto30102004() {
  SharedDtor();
}

void Proto30102004::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30102004::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30102004::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30102004_descriptor_;
}

const Proto30102004& Proto30102004::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30102004* Proto30102004::default_instance_ = NULL;

Proto30102004* Proto30102004::New() const {
  return new Proto30102004;
}

void Proto30102004::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30102004::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30102004::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30102004::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30102004::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30102004::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30102004* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30102004*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30102004::MergeFrom(const Proto30102004& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30102004::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30102004::CopyFrom(const Proto30102004& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30102004::IsInitialized() const {
  
  return true;
}

void Proto30102004::Swap(Proto30102004* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30102004::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30102004_descriptor_;
  metadata.reflection = Proto30102004_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400504::kTypeFieldNumber;
const int Proto30400504::kServerInfoFieldNumber;
const int Proto30400504::kSelfInfoFieldNumber;
const int Proto30400504::kStageFieldNumber;
const int Proto30400504::kScoreFieldNumber;
#endif  // !_MSC_VER

Proto30400504::Proto30400504()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400504::InitAsDefaultInstance() {
  server_info_ = const_cast< ::ProtoServer*>(&::ProtoServer::default_instance());
  self_info_ = const_cast< ::ProtoTeamer*>(&::ProtoTeamer::default_instance());
}

Proto30400504::Proto30400504(const Proto30400504& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400504::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  server_info_ = NULL;
  self_info_ = NULL;
  stage_ = 0;
  score_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400504::~Proto30400504() {
  SharedDtor();
}

void Proto30400504::SharedDtor() {
  if (this != default_instance_) {
    delete server_info_;
    delete self_info_;
  }
}

void Proto30400504::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400504::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400504_descriptor_;
}

const Proto30400504& Proto30400504::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30400504* Proto30400504::default_instance_ = NULL;

Proto30400504* Proto30400504::New() const {
  return new Proto30400504;
}

void Proto30400504::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_server_info()) {
      if (server_info_ != NULL) server_info_->::ProtoServer::Clear();
    }
    if (has_self_info()) {
      if (self_info_ != NULL) self_info_->::ProtoTeamer::Clear();
    }
    stage_ = 0;
    score_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400504::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_server_info;
        break;
      }
      
      // optional .ProtoServer server_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_server_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_server_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_self_info;
        break;
      }
      
      // optional .ProtoTeamer self_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_self_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_stage;
        break;
      }
      
      // optional int32 stage = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_)));
          set_has_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_score;
        break;
      }
      
      // optional int32 score = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400504::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional .ProtoServer server_info = 2;
  if (has_server_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->server_info(), output);
  }
  
  // optional .ProtoTeamer self_info = 3;
  if (has_self_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->self_info(), output);
  }
  
  // optional int32 stage = 4;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->stage(), output);
  }
  
  // optional int32 score = 5;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->score(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400504::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional .ProtoServer server_info = 2;
  if (has_server_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->server_info(), target);
  }
  
  // optional .ProtoTeamer self_info = 3;
  if (has_self_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->self_info(), target);
  }
  
  // optional int32 stage = 4;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->stage(), target);
  }
  
  // optional int32 score = 5;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->score(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400504::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional .ProtoServer server_info = 2;
    if (has_server_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->server_info());
    }
    
    // optional .ProtoTeamer self_info = 3;
    if (has_self_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->self_info());
    }
    
    // optional int32 stage = 4;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stage());
    }
    
    // optional int32 score = 5;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400504::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400504* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400504*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400504::MergeFrom(const Proto30400504& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_server_info()) {
      mutable_server_info()->::ProtoServer::MergeFrom(from.server_info());
    }
    if (from.has_self_info()) {
      mutable_self_info()->::ProtoTeamer::MergeFrom(from.self_info());
    }
    if (from.has_stage()) {
      set_stage(from.stage());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400504::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400504::CopyFrom(const Proto30400504& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400504::IsInitialized() const {
  
  return true;
}

void Proto30400504::Swap(Proto30400504* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(server_info_, other->server_info_);
    std::swap(self_info_, other->self_info_);
    std::swap(stage_, other->stage_);
    std::swap(score_, other->score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400504::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400504_descriptor_;
  metadata.reflection = Proto30400504_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400505::kTypeFieldNumber;
const int Proto30400505::kValueFieldNumber;
#endif  // !_MSC_VER

Proto30400505::Proto30400505()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400505::InitAsDefaultInstance() {
}

Proto30400505::Proto30400505(const Proto30400505& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400505::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400505::~Proto30400505() {
  SharedDtor();
}

void Proto30400505::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400505::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400505::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400505_descriptor_;
}

const Proto30400505& Proto30400505::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30400505* Proto30400505::default_instance_ = NULL;

Proto30400505* Proto30400505::New() const {
  return new Proto30400505;
}

void Proto30400505::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400505::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }
      
      // optional int32 value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400505::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400505::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400505::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400505::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400505* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400505*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400505::MergeFrom(const Proto30400505& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400505::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400505::CopyFrom(const Proto30400505& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400505::IsInitialized() const {
  
  return true;
}

void Proto30400505::Swap(Proto30400505* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400505::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400505_descriptor_;
  metadata.reflection = Proto30400505_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400506::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto30400506::Proto30400506()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400506::InitAsDefaultInstance() {
}

Proto30400506::Proto30400506(const Proto30400506& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400506::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400506::~Proto30400506() {
  SharedDtor();
}

void Proto30400506::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400506::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400506::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400506_descriptor_;
}

const Proto30400506& Proto30400506::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30400506* Proto30400506::default_instance_ = NULL;

Proto30400506* Proto30400506::New() const {
  return new Proto30400506;
}

void Proto30400506::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400506::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400506::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400506::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400506::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400506::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400506* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400506*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400506::MergeFrom(const Proto30400506& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400506::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400506::CopyFrom(const Proto30400506& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400506::IsInitialized() const {
  
  return true;
}

void Proto30400506::Swap(Proto30400506* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400506::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400506_descriptor_;
  metadata.reflection = Proto30400506_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100230::kLeagueIndexFieldNumber;
const int Proto30100230::kAddFlagExpFieldNumber;
#endif  // !_MSC_VER

Proto30100230::Proto30100230()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100230::InitAsDefaultInstance() {
}

Proto30100230::Proto30100230(const Proto30100230& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100230::SharedCtor() {
  _cached_size_ = 0;
  league_index_ = GOOGLE_LONGLONG(0);
  add_flag_exp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100230::~Proto30100230() {
  SharedDtor();
}

void Proto30100230::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100230::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100230::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100230_descriptor_;
}

const Proto30100230& Proto30100230::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30100230* Proto30100230::default_instance_ = NULL;

Proto30100230* Proto30100230::New() const {
  return new Proto30100230;
}

void Proto30100230::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_index_ = GOOGLE_LONGLONG(0);
    add_flag_exp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100230::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 league_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_index_)));
          set_has_league_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_add_flag_exp;
        break;
      }
      
      // optional int32 add_flag_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_add_flag_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_flag_exp_)));
          set_has_add_flag_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100230::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->league_index(), output);
  }
  
  // optional int32 add_flag_exp = 2;
  if (has_add_flag_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->add_flag_exp(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100230::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->league_index(), target);
  }
  
  // optional int32 add_flag_exp = 2;
  if (has_add_flag_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->add_flag_exp(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100230::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 league_index = 1;
    if (has_league_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_index());
    }
    
    // optional int32 add_flag_exp = 2;
    if (has_add_flag_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_flag_exp());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100230::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100230* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100230*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100230::MergeFrom(const Proto30100230& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_index()) {
      set_league_index(from.league_index());
    }
    if (from.has_add_flag_exp()) {
      set_add_flag_exp(from.add_flag_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100230::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100230::CopyFrom(const Proto30100230& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100230::IsInitialized() const {
  
  return true;
}

void Proto30100230::Swap(Proto30100230* other) {
  if (other != this) {
    std::swap(league_index_, other->league_index_);
    std::swap(add_flag_exp_, other->add_flag_exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100230::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100230_descriptor_;
  metadata.reflection = Proto30100230_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400041::kItemSetFieldNumber;
const int Proto31400041::kSerialFieldNumber;
#endif  // !_MSC_VER

Proto31400041::Proto31400041()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400041::InitAsDefaultInstance() {
  item_set_ = const_cast< ::ProtoItem*>(&::ProtoItem::default_instance());
  serial_ = const_cast< ::ProtoSerialObj*>(&::ProtoSerialObj::default_instance());
}

Proto31400041::Proto31400041(const Proto31400041& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400041::SharedCtor() {
  _cached_size_ = 0;
  item_set_ = NULL;
  serial_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400041::~Proto31400041() {
  SharedDtor();
}

void Proto31400041::SharedDtor() {
  if (this != default_instance_) {
    delete item_set_;
    delete serial_;
  }
}

void Proto31400041::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400041::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400041_descriptor_;
}

const Proto31400041& Proto31400041::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto31400041* Proto31400041::default_instance_ = NULL;

Proto31400041* Proto31400041::New() const {
  return new Proto31400041;
}

void Proto31400041::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_item_set()) {
      if (item_set_ != NULL) item_set_->::ProtoItem::Clear();
    }
    if (has_serial()) {
      if (serial_ != NULL) serial_->::ProtoSerialObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400041::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoItem item_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_serial;
        break;
      }
      
      // optional .ProtoSerialObj serial = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_serial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serial()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400041::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoItem item_set = 1;
  if (has_item_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_set(), output);
  }
  
  // optional .ProtoSerialObj serial = 2;
  if (has_serial()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->serial(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400041::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoItem item_set = 1;
  if (has_item_set()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_set(), target);
  }
  
  // optional .ProtoSerialObj serial = 2;
  if (has_serial()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->serial(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400041::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoItem item_set = 1;
    if (has_item_set()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_set());
    }
    
    // optional .ProtoSerialObj serial = 2;
    if (has_serial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serial());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400041::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400041* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400041*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400041::MergeFrom(const Proto31400041& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_set()) {
      mutable_item_set()->::ProtoItem::MergeFrom(from.item_set());
    }
    if (from.has_serial()) {
      mutable_serial()->::ProtoSerialObj::MergeFrom(from.serial());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400041::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400041::CopyFrom(const Proto31400041& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400041::IsInitialized() const {
  
  return true;
}

void Proto31400041::Swap(Proto31400041* other) {
  if (other != this) {
    std::swap(item_set_, other->item_set_);
    std::swap(serial_, other->serial_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400041::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400041_descriptor_;
  metadata.reflection = Proto31400041_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100241::kFirstTypeFieldNumber;
const int Proto30100241::kSub1FieldNumber;
const int Proto30100241::kSub2FieldNumber;
const int Proto30100241::kSub3FieldNumber;
#endif  // !_MSC_VER

Proto30100241::Proto30100241()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100241::InitAsDefaultInstance() {
}

Proto30100241::Proto30100241(const Proto30100241& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100241::SharedCtor() {
  _cached_size_ = 0;
  first_type_ = 0;
  sub1_ = 0;
  sub2_ = 0;
  sub3_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100241::~Proto30100241() {
  SharedDtor();
}

void Proto30100241::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100241::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100241::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100241_descriptor_;
}

const Proto30100241& Proto30100241::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30100241* Proto30100241::default_instance_ = NULL;

Proto30100241* Proto30100241::New() const {
  return new Proto30100241;
}

void Proto30100241::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    first_type_ = 0;
    sub1_ = 0;
    sub2_ = 0;
    sub3_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100241::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 first_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_type_)));
          set_has_first_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sub1;
        break;
      }
      
      // optional int32 sub1 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sub1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sub1_)));
          set_has_sub1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_sub2;
        break;
      }
      
      // optional int32 sub2 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sub2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sub2_)));
          set_has_sub2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_sub3;
        break;
      }
      
      // optional int32 sub3 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sub3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sub3_)));
          set_has_sub3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100241::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 first_type = 1;
  if (has_first_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->first_type(), output);
  }
  
  // optional int32 sub1 = 2;
  if (has_sub1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sub1(), output);
  }
  
  // optional int32 sub2 = 3;
  if (has_sub2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sub2(), output);
  }
  
  // optional int32 sub3 = 4;
  if (has_sub3()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sub3(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100241::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 first_type = 1;
  if (has_first_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->first_type(), target);
  }
  
  // optional int32 sub1 = 2;
  if (has_sub1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sub1(), target);
  }
  
  // optional int32 sub2 = 3;
  if (has_sub2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sub2(), target);
  }
  
  // optional int32 sub3 = 4;
  if (has_sub3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sub3(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100241::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 first_type = 1;
    if (has_first_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_type());
    }
    
    // optional int32 sub1 = 2;
    if (has_sub1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sub1());
    }
    
    // optional int32 sub2 = 3;
    if (has_sub2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sub2());
    }
    
    // optional int32 sub3 = 4;
    if (has_sub3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sub3());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100241::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100241* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100241*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100241::MergeFrom(const Proto30100241& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_first_type()) {
      set_first_type(from.first_type());
    }
    if (from.has_sub1()) {
      set_sub1(from.sub1());
    }
    if (from.has_sub2()) {
      set_sub2(from.sub2());
    }
    if (from.has_sub3()) {
      set_sub3(from.sub3());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100241::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100241::CopyFrom(const Proto30100241& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100241::IsInitialized() const {
  
  return true;
}

void Proto30100241::Swap(Proto30100241* other) {
  if (other != this) {
    std::swap(first_type_, other->first_type_);
    std::swap(sub1_, other->sub1_);
    std::swap(sub2_, other->sub2_);
    std::swap(sub3_, other->sub3_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100241::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100241_descriptor_;
  metadata.reflection = Proto30100241_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31402901::kTaskIdFieldNumber;
const int Proto31402901::kLeftAddFlagFieldNumber;
const int Proto31402901::kLeftAddNumFieldNumber;
#endif  // !_MSC_VER

Proto31402901::Proto31402901()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31402901::InitAsDefaultInstance() {
}

Proto31402901::Proto31402901(const Proto31402901& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31402901::SharedCtor() {
  _cached_size_ = 0;
  task_id_ = 0;
  left_add_flag_ = 0;
  left_add_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31402901::~Proto31402901() {
  SharedDtor();
}

void Proto31402901::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31402901::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31402901::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31402901_descriptor_;
}

const Proto31402901& Proto31402901::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto31402901* Proto31402901::default_instance_ = NULL;

Proto31402901* Proto31402901::New() const {
  return new Proto31402901;
}

void Proto31402901::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    task_id_ = 0;
    left_add_flag_ = 0;
    left_add_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31402901::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 task_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
          set_has_task_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_left_add_flag;
        break;
      }
      
      // optional int32 left_add_flag = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_add_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_add_flag_)));
          set_has_left_add_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left_add_num;
        break;
      }
      
      // optional int32 left_add_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_add_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_add_num_)));
          set_has_left_add_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31402901::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->task_id(), output);
  }
  
  // optional int32 left_add_flag = 2;
  if (has_left_add_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_add_flag(), output);
  }
  
  // optional int32 left_add_num = 3;
  if (has_left_add_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_add_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31402901::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->task_id(), target);
  }
  
  // optional int32 left_add_flag = 2;
  if (has_left_add_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_add_flag(), target);
  }
  
  // optional int32 left_add_num = 3;
  if (has_left_add_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_add_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31402901::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 task_id = 1;
    if (has_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task_id());
    }
    
    // optional int32 left_add_flag = 2;
    if (has_left_add_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_add_flag());
    }
    
    // optional int32 left_add_num = 3;
    if (has_left_add_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_add_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31402901::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31402901* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31402901*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31402901::MergeFrom(const Proto31402901& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_task_id()) {
      set_task_id(from.task_id());
    }
    if (from.has_left_add_flag()) {
      set_left_add_flag(from.left_add_flag());
    }
    if (from.has_left_add_num()) {
      set_left_add_num(from.left_add_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31402901::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31402901::CopyFrom(const Proto31402901& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31402901::IsInitialized() const {
  
  return true;
}

void Proto31402901::Swap(Proto31402901* other) {
  if (other != this) {
    std::swap(task_id_, other->task_id_);
    std::swap(left_add_flag_, other->left_add_flag_);
    std::swap(left_add_num_, other->left_add_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31402901::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31402901_descriptor_;
  metadata.reflection = Proto31402901_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400144::kLevelFieldNumber;
const int Proto31400144::kExpFieldNumber;
const int Proto31400144::kOpenFieldNumber;
const int Proto31400144::kRefreshTickFieldNumber;
const int Proto31400144::kStyleLvlFieldNumber;
const int Proto31400144::kTaskInfoFieldNumber;
const int Proto31400144::kFindTaskFieldNumber;
#endif  // !_MSC_VER

Proto31400144::Proto31400144()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400144::InitAsDefaultInstance() {
}

Proto31400144::Proto31400144(const Proto31400144& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400144::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  exp_ = 0;
  open_ = 0;
  refresh_tick_ = 0;
  style_lvl_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400144::~Proto31400144() {
  SharedDtor();
}

void Proto31400144::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400144::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400144::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400144_descriptor_;
}

const Proto31400144& Proto31400144::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto31400144* Proto31400144::default_instance_ = NULL;

Proto31400144* Proto31400144::New() const {
  return new Proto31400144;
}

void Proto31400144::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    exp_ = 0;
    open_ = 0;
    refresh_tick_ = 0;
    style_lvl_ = 0;
  }
  task_info_.Clear();
  find_task_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400144::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exp;
        break;
      }
      
      // optional int32 exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_open;
        break;
      }
      
      // optional int32 open = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_)));
          set_has_open();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_refresh_tick;
        break;
      }
      
      // optional int32 refresh_tick = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refresh_tick_)));
          set_has_refresh_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_style_lvl;
        break;
      }
      
      // optional int32 style_lvl = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_style_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &style_lvl_)));
          set_has_style_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_task_info;
        break;
      }
      
      // repeated .ProtoSwordPoolTask task_info = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_task_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_task_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_task_info;
        if (input->ExpectTag(58)) goto parse_find_task;
        break;
      }
      
      // repeated .ProtoSwordPoolTask find_task = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_find_task:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_find_task()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_find_task;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400144::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exp(), output);
  }
  
  // optional int32 open = 3;
  if (has_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->open(), output);
  }
  
  // optional int32 refresh_tick = 4;
  if (has_refresh_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->refresh_tick(), output);
  }
  
  // optional int32 style_lvl = 5;
  if (has_style_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->style_lvl(), output);
  }
  
  // repeated .ProtoSwordPoolTask task_info = 6;
  for (int i = 0; i < this->task_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->task_info(i), output);
  }
  
  // repeated .ProtoSwordPoolTask find_task = 7;
  for (int i = 0; i < this->find_task_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->find_task(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400144::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exp(), target);
  }
  
  // optional int32 open = 3;
  if (has_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->open(), target);
  }
  
  // optional int32 refresh_tick = 4;
  if (has_refresh_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->refresh_tick(), target);
  }
  
  // optional int32 style_lvl = 5;
  if (has_style_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->style_lvl(), target);
  }
  
  // repeated .ProtoSwordPoolTask task_info = 6;
  for (int i = 0; i < this->task_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->task_info(i), target);
  }
  
  // repeated .ProtoSwordPoolTask find_task = 7;
  for (int i = 0; i < this->find_task_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->find_task(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400144::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 exp = 2;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }
    
    // optional int32 open = 3;
    if (has_open()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open());
    }
    
    // optional int32 refresh_tick = 4;
    if (has_refresh_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refresh_tick());
    }
    
    // optional int32 style_lvl = 5;
    if (has_style_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->style_lvl());
    }
    
  }
  // repeated .ProtoSwordPoolTask task_info = 6;
  total_size += 1 * this->task_info_size();
  for (int i = 0; i < this->task_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->task_info(i));
  }
  
  // repeated .ProtoSwordPoolTask find_task = 7;
  total_size += 1 * this->find_task_size();
  for (int i = 0; i < this->find_task_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->find_task(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400144::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400144* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400144*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400144::MergeFrom(const Proto31400144& from) {
  GOOGLE_CHECK_NE(&from, this);
  task_info_.MergeFrom(from.task_info_);
  find_task_.MergeFrom(from.find_task_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_open()) {
      set_open(from.open());
    }
    if (from.has_refresh_tick()) {
      set_refresh_tick(from.refresh_tick());
    }
    if (from.has_style_lvl()) {
      set_style_lvl(from.style_lvl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400144::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400144::CopyFrom(const Proto31400144& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400144::IsInitialized() const {
  
  return true;
}

void Proto31400144::Swap(Proto31400144* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(exp_, other->exp_);
    std::swap(open_, other->open_);
    std::swap(refresh_tick_, other->refresh_tick_);
    std::swap(style_lvl_, other->style_lvl_);
    task_info_.Swap(&other->task_info_);
    find_task_.Swap(&other->find_task_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400144::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400144_descriptor_;
  metadata.reflection = Proto31400144_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400324::kLeagueIdFieldNumber;
const int Proto31400324::kPlayerIdFieldNumber;
#endif  // !_MSC_VER

Proto31400324::Proto31400324()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400324::InitAsDefaultInstance() {
}

Proto31400324::Proto31400324(const Proto31400324& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400324::SharedCtor() {
  _cached_size_ = 0;
  league_id_ = GOOGLE_LONGLONG(0);
  player_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400324::~Proto31400324() {
  SharedDtor();
}

void Proto31400324::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400324::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400324::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400324_descriptor_;
}

const Proto31400324& Proto31400324::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto31400324* Proto31400324::default_instance_ = NULL;

Proto31400324* Proto31400324::New() const {
  return new Proto31400324;
}

void Proto31400324::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_id_ = GOOGLE_LONGLONG(0);
    player_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400324::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 league_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_id_)));
          set_has_league_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_player_id;
        break;
      }
      
      // optional int64 player_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
          set_has_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400324::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 league_id = 1;
  if (has_league_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->league_id(), output);
  }
  
  // optional int64 player_id = 2;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->player_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400324::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 league_id = 1;
  if (has_league_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->league_id(), target);
  }
  
  // optional int64 player_id = 2;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->player_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400324::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 league_id = 1;
    if (has_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_id());
    }
    
    // optional int64 player_id = 2;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400324::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400324* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400324*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400324::MergeFrom(const Proto31400324& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_id()) {
      set_league_id(from.league_id());
    }
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400324::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400324::CopyFrom(const Proto31400324& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400324::IsInitialized() const {
  
  return true;
}

void Proto31400324::Swap(Proto31400324* other) {
  if (other != this) {
    std::swap(league_id_, other->league_id_);
    std::swap(player_id_, other->player_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400324::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400324_descriptor_;
  metadata.reflection = Proto31400324_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400025::kAverageLevelFieldNumber;
#endif  // !_MSC_VER

Proto30400025::Proto30400025()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400025::InitAsDefaultInstance() {
}

Proto30400025::Proto30400025(const Proto30400025& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400025::SharedCtor() {
  _cached_size_ = 0;
  average_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400025::~Proto30400025() {
  SharedDtor();
}

void Proto30400025::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400025::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400025::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400025_descriptor_;
}

const Proto30400025& Proto30400025::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30400025* Proto30400025::default_instance_ = NULL;

Proto30400025* Proto30400025::New() const {
  return new Proto30400025;
}

void Proto30400025::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    average_level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400025::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 average_level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &average_level_)));
          set_has_average_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400025::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 average_level = 1;
  if (has_average_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->average_level(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400025::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 average_level = 1;
  if (has_average_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->average_level(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400025::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 average_level = 1;
    if (has_average_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->average_level());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400025::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400025* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400025*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400025::MergeFrom(const Proto30400025& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_average_level()) {
      set_average_level(from.average_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400025::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400025::CopyFrom(const Proto30400025& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400025::IsInitialized() const {
  
  return true;
}

void Proto30400025::Swap(Proto30400025* other) {
  if (other != this) {
    std::swap(average_level_, other->average_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400025::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400025_descriptor_;
  metadata.reflection = Proto30400025_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400116::kCarIndexFieldNumber;
const int Proto30400116::kProtectIdFieldNumber;
const int Proto30400116::kProtectListFieldNumber;
const int Proto30400116::kEscortTypeFieldNumber;
const int Proto30400116::kEscortExpFieldNumber;
const int Proto30400116::kPreExpFieldNumber;
const int Proto30400116::kStartTickFieldNumber;
const int Proto30400116::kTillFieldNumber;
const int Proto30400116::kTargetLevelFieldNumber;
#endif  // !_MSC_VER

Proto30400116::Proto30400116()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400116::InitAsDefaultInstance() {
}

Proto30400116::Proto30400116(const Proto30400116& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400116::SharedCtor() {
  _cached_size_ = 0;
  car_index_ = GOOGLE_LONGLONG(0);
  protect_id_ = GOOGLE_LONGLONG(0);
  escort_type_ = 0;
  escort_exp_ = 0;
  pre_exp_ = 0;
  start_tick_ = GOOGLE_LONGLONG(0);
  till_ = 0;
  target_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400116::~Proto30400116() {
  SharedDtor();
}

void Proto30400116::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400116::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400116::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400116_descriptor_;
}

const Proto30400116& Proto30400116::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30400116* Proto30400116::default_instance_ = NULL;

Proto30400116* Proto30400116::New() const {
  return new Proto30400116;
}

void Proto30400116::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    car_index_ = GOOGLE_LONGLONG(0);
    protect_id_ = GOOGLE_LONGLONG(0);
    escort_type_ = 0;
    escort_exp_ = 0;
    pre_exp_ = 0;
    start_tick_ = GOOGLE_LONGLONG(0);
    till_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    target_level_ = 0;
  }
  protect_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400116::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 car_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &car_index_)));
          set_has_car_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_protect_id;
        break;
      }
      
      // optional int64 protect_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_protect_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &protect_id_)));
          set_has_protect_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_protect_list;
        break;
      }
      
      // repeated int64 protect_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_protect_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24, input, this->mutable_protect_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_protect_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_protect_list;
        if (input->ExpectTag(32)) goto parse_escort_type;
        break;
      }
      
      // optional int32 escort_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_escort_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &escort_type_)));
          set_has_escort_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_escort_exp;
        break;
      }
      
      // optional int32 escort_exp = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_escort_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &escort_exp_)));
          set_has_escort_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_pre_exp;
        break;
      }
      
      // optional int32 pre_exp = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pre_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pre_exp_)));
          set_has_pre_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_start_tick;
        break;
      }
      
      // optional int64 start_tick = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_tick_)));
          set_has_start_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_till;
        break;
      }
      
      // optional int32 till = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_till:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &till_)));
          set_has_till();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_target_level;
        break;
      }
      
      // optional int32 target_level = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_target_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_level_)));
          set_has_target_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400116::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 car_index = 1;
  if (has_car_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->car_index(), output);
  }
  
  // optional int64 protect_id = 2;
  if (has_protect_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->protect_id(), output);
  }
  
  // repeated int64 protect_list = 3;
  for (int i = 0; i < this->protect_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->protect_list(i), output);
  }
  
  // optional int32 escort_type = 4;
  if (has_escort_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->escort_type(), output);
  }
  
  // optional int32 escort_exp = 5;
  if (has_escort_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->escort_exp(), output);
  }
  
  // optional int32 pre_exp = 6;
  if (has_pre_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->pre_exp(), output);
  }
  
  // optional int64 start_tick = 7;
  if (has_start_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->start_tick(), output);
  }
  
  // optional int32 till = 8;
  if (has_till()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->till(), output);
  }
  
  // optional int32 target_level = 9;
  if (has_target_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->target_level(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400116::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 car_index = 1;
  if (has_car_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->car_index(), target);
  }
  
  // optional int64 protect_id = 2;
  if (has_protect_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->protect_id(), target);
  }
  
  // repeated int64 protect_list = 3;
  for (int i = 0; i < this->protect_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->protect_list(i), target);
  }
  
  // optional int32 escort_type = 4;
  if (has_escort_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->escort_type(), target);
  }
  
  // optional int32 escort_exp = 5;
  if (has_escort_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->escort_exp(), target);
  }
  
  // optional int32 pre_exp = 6;
  if (has_pre_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->pre_exp(), target);
  }
  
  // optional int64 start_tick = 7;
  if (has_start_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->start_tick(), target);
  }
  
  // optional int32 till = 8;
  if (has_till()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->till(), target);
  }
  
  // optional int32 target_level = 9;
  if (has_target_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->target_level(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400116::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 car_index = 1;
    if (has_car_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->car_index());
    }
    
    // optional int64 protect_id = 2;
    if (has_protect_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->protect_id());
    }
    
    // optional int32 escort_type = 4;
    if (has_escort_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->escort_type());
    }
    
    // optional int32 escort_exp = 5;
    if (has_escort_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->escort_exp());
    }
    
    // optional int32 pre_exp = 6;
    if (has_pre_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pre_exp());
    }
    
    // optional int64 start_tick = 7;
    if (has_start_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_tick());
    }
    
    // optional int32 till = 8;
    if (has_till()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->till());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 target_level = 9;
    if (has_target_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_level());
    }
    
  }
  // repeated int64 protect_list = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->protect_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->protect_list(i));
    }
    total_size += 1 * this->protect_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400116::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400116* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400116*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400116::MergeFrom(const Proto30400116& from) {
  GOOGLE_CHECK_NE(&from, this);
  protect_list_.MergeFrom(from.protect_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_car_index()) {
      set_car_index(from.car_index());
    }
    if (from.has_protect_id()) {
      set_protect_id(from.protect_id());
    }
    if (from.has_escort_type()) {
      set_escort_type(from.escort_type());
    }
    if (from.has_escort_exp()) {
      set_escort_exp(from.escort_exp());
    }
    if (from.has_pre_exp()) {
      set_pre_exp(from.pre_exp());
    }
    if (from.has_start_tick()) {
      set_start_tick(from.start_tick());
    }
    if (from.has_till()) {
      set_till(from.till());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_target_level()) {
      set_target_level(from.target_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400116::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400116::CopyFrom(const Proto30400116& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400116::IsInitialized() const {
  
  return true;
}

void Proto30400116::Swap(Proto30400116* other) {
  if (other != this) {
    std::swap(car_index_, other->car_index_);
    std::swap(protect_id_, other->protect_id_);
    protect_list_.Swap(&other->protect_list_);
    std::swap(escort_type_, other->escort_type_);
    std::swap(escort_exp_, other->escort_exp_);
    std::swap(pre_exp_, other->pre_exp_);
    std::swap(start_tick_, other->start_tick_);
    std::swap(till_, other->till_);
    std::swap(target_level_, other->target_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400116::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400116_descriptor_;
  metadata.reflection = Proto30400116_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400453::kTypeFieldNumber;
const int Proto30400453::kCycleIdFieldNumber;
const int Proto30400453::kLeftTimeFieldNumber;
const int Proto30400453::kFromFieldNumber;
#endif  // !_MSC_VER

Proto30400453::Proto30400453()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400453::InitAsDefaultInstance() {
}

Proto30400453::Proto30400453(const Proto30400453& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400453::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  cycle_id_ = 0;
  left_time_ = GOOGLE_LONGLONG(0);
  from_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400453::~Proto30400453() {
  SharedDtor();
}

void Proto30400453::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400453::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400453::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400453_descriptor_;
}

const Proto30400453& Proto30400453::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30400453* Proto30400453::default_instance_ = NULL;

Proto30400453* Proto30400453::New() const {
  return new Proto30400453;
}

void Proto30400453::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    cycle_id_ = 0;
    left_time_ = GOOGLE_LONGLONG(0);
    from_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400453::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cycle_id;
        break;
      }
      
      // optional int32 cycle_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cycle_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cycle_id_)));
          set_has_cycle_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left_time;
        break;
      }
      
      // optional int64 left_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_from;
        break;
      }
      
      // optional int32 from = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_from:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_)));
          set_has_from();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400453::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 cycle_id = 2;
  if (has_cycle_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cycle_id(), output);
  }
  
  // optional int64 left_time = 3;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->left_time(), output);
  }
  
  // optional int32 from = 4;
  if (has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->from(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400453::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 cycle_id = 2;
  if (has_cycle_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cycle_id(), target);
  }
  
  // optional int64 left_time = 3;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->left_time(), target);
  }
  
  // optional int32 from = 4;
  if (has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->from(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400453::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 cycle_id = 2;
    if (has_cycle_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cycle_id());
    }
    
    // optional int64 left_time = 3;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->left_time());
    }
    
    // optional int32 from = 4;
    if (has_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->from());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400453::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400453* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400453*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400453::MergeFrom(const Proto30400453& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_cycle_id()) {
      set_cycle_id(from.cycle_id());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_from()) {
      set_from(from.from());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400453::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400453::CopyFrom(const Proto30400453& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400453::IsInitialized() const {
  
  return true;
}

void Proto30400453::Swap(Proto30400453* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(cycle_id_, other->cycle_id_);
    std::swap(left_time_, other->left_time_);
    std::swap(from_, other->from_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400453::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400453_descriptor_;
  metadata.reflection = Proto30400453_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400042::kProtoItemFieldNumber;
const int Proto31400042::kSerialObjFieldNumber;
#endif  // !_MSC_VER

Proto31400042::Proto31400042()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400042::InitAsDefaultInstance() {
  serial_obj_ = const_cast< ::ProtoSerialObj*>(&::ProtoSerialObj::default_instance());
}

Proto31400042::Proto31400042(const Proto31400042& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400042::SharedCtor() {
  _cached_size_ = 0;
  serial_obj_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400042::~Proto31400042() {
  SharedDtor();
}

void Proto31400042::SharedDtor() {
  if (this != default_instance_) {
    delete serial_obj_;
  }
}

void Proto31400042::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400042::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400042_descriptor_;
}

const Proto31400042& Proto31400042::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto31400042* Proto31400042::default_instance_ = NULL;

Proto31400042* Proto31400042::New() const {
  return new Proto31400042;
}

void Proto31400042::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_serial_obj()) {
      if (serial_obj_ != NULL) serial_obj_->::ProtoSerialObj::Clear();
    }
  }
  proto_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400042::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem proto_item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_proto_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_proto_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_proto_item;
        if (input->ExpectTag(18)) goto parse_serial_obj;
        break;
      }
      
      // optional .ProtoSerialObj serial_obj = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_serial_obj:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serial_obj()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400042::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem proto_item = 1;
  for (int i = 0; i < this->proto_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->proto_item(i), output);
  }
  
  // optional .ProtoSerialObj serial_obj = 2;
  if (has_serial_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->serial_obj(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400042::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem proto_item = 1;
  for (int i = 0; i < this->proto_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->proto_item(i), target);
  }
  
  // optional .ProtoSerialObj serial_obj = 2;
  if (has_serial_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->serial_obj(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400042::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .ProtoSerialObj serial_obj = 2;
    if (has_serial_obj()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serial_obj());
    }
    
  }
  // repeated .ProtoItem proto_item = 1;
  total_size += 1 * this->proto_item_size();
  for (int i = 0; i < this->proto_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->proto_item(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400042::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400042* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400042*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400042::MergeFrom(const Proto31400042& from) {
  GOOGLE_CHECK_NE(&from, this);
  proto_item_.MergeFrom(from.proto_item_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_serial_obj()) {
      mutable_serial_obj()->::ProtoSerialObj::MergeFrom(from.serial_obj());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400042::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400042::CopyFrom(const Proto31400042& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400042::IsInitialized() const {
  
  return true;
}

void Proto31400042::Swap(Proto31400042* other) {
  if (other != this) {
    proto_item_.Swap(&other->proto_item_);
    std::swap(serial_obj_, other->serial_obj_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400042::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400042_descriptor_;
  metadata.reflection = Proto31400042_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400911::kNum1FieldNumber;
const int Proto30400911::kNum2FieldNumber;
const int Proto30400911::kScriptTypeFieldNumber;
const int Proto30400911::kPageFieldNumber;
#endif  // !_MSC_VER

Proto30400911::Proto30400911()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400911::InitAsDefaultInstance() {
}

Proto30400911::Proto30400911(const Proto30400911& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400911::SharedCtor() {
  _cached_size_ = 0;
  num1_ = 0;
  num2_ = 0;
  script_type_ = 0;
  page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400911::~Proto30400911() {
  SharedDtor();
}

void Proto30400911::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400911::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400911::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400911_descriptor_;
}

const Proto30400911& Proto30400911::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30400911* Proto30400911::default_instance_ = NULL;

Proto30400911* Proto30400911::New() const {
  return new Proto30400911;
}

void Proto30400911::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    num1_ = 0;
    num2_ = 0;
    script_type_ = 0;
    page_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400911::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 num1 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num1_)));
          set_has_num1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_num2;
        break;
      }
      
      // optional int32 num2 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num2_)));
          set_has_num2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_script_type;
        break;
      }
      
      // optional int32 script_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_type_)));
          set_has_script_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_page;
        break;
      }
      
      // optional int32 page = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
          set_has_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400911::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 num1 = 1;
  if (has_num1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num1(), output);
  }
  
  // optional int32 num2 = 2;
  if (has_num2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num2(), output);
  }
  
  // optional int32 script_type = 3;
  if (has_script_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->script_type(), output);
  }
  
  // optional int32 page = 4;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400911::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 num1 = 1;
  if (has_num1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num1(), target);
  }
  
  // optional int32 num2 = 2;
  if (has_num2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num2(), target);
  }
  
  // optional int32 script_type = 3;
  if (has_script_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->script_type(), target);
  }
  
  // optional int32 page = 4;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400911::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 num1 = 1;
    if (has_num1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num1());
    }
    
    // optional int32 num2 = 2;
    if (has_num2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num2());
    }
    
    // optional int32 script_type = 3;
    if (has_script_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_type());
    }
    
    // optional int32 page = 4;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400911::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400911* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400911*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400911::MergeFrom(const Proto30400911& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num1()) {
      set_num1(from.num1());
    }
    if (from.has_num2()) {
      set_num2(from.num2());
    }
    if (from.has_script_type()) {
      set_script_type(from.script_type());
    }
    if (from.has_page()) {
      set_page(from.page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400911::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400911::CopyFrom(const Proto30400911& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400911::IsInitialized() const {
  
  return true;
}

void Proto30400911::Swap(Proto30400911* other) {
  if (other != this) {
    std::swap(num1_, other->num1_);
    std::swap(num2_, other->num2_);
    std::swap(script_type_, other->script_type_);
    std::swap(page_, other->page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400911::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400911_descriptor_;
  metadata.reflection = Proto30400911_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402202::kRoleIdFieldNumber;
const int Proto30402202::kLevelFieldNumber;
#endif  // !_MSC_VER

Proto30402202::Proto30402202()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402202::InitAsDefaultInstance() {
}

Proto30402202::Proto30402202(const Proto30402202& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402202::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402202::~Proto30402202() {
  SharedDtor();
}

void Proto30402202::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30402202::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402202::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402202_descriptor_;
}

const Proto30402202& Proto30402202::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30402202* Proto30402202::default_instance_ = NULL;

Proto30402202* Proto30402202::New() const {
  return new Proto30402202;
}

void Proto30402202::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402202::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }
      
      // optional int32 level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402202::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402202::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402202::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402202::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402202* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402202*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402202::MergeFrom(const Proto30402202& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402202::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402202::CopyFrom(const Proto30402202& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402202::IsInitialized() const {
  
  return true;
}

void Proto30402202::Swap(Proto30402202* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402202::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402202_descriptor_;
  metadata.reflection = Proto30402202_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402203::kBossSceneIdFieldNumber;
const int Proto30402203::kPosXFieldNumber;
const int Proto30402203::kPosYFieldNumber;
const int Proto30402203::kSceneIdFieldNumber;
const int Proto30402203::kUseFlyFieldNumber;
#endif  // !_MSC_VER

Proto30402203::Proto30402203()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402203::InitAsDefaultInstance() {
}

Proto30402203::Proto30402203(const Proto30402203& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402203::SharedCtor() {
  _cached_size_ = 0;
  boss_scene_id_ = 0;
  pos_x_ = 0;
  pos_y_ = 0;
  scene_id_ = 0;
  use_fly_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402203::~Proto30402203() {
  SharedDtor();
}

void Proto30402203::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30402203::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402203::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402203_descriptor_;
}

const Proto30402203& Proto30402203::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30402203* Proto30402203::default_instance_ = NULL;

Proto30402203* Proto30402203::New() const {
  return new Proto30402203;
}

void Proto30402203::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    boss_scene_id_ = 0;
    pos_x_ = 0;
    pos_y_ = 0;
    scene_id_ = 0;
    use_fly_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402203::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 boss_scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boss_scene_id_)));
          set_has_boss_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pos_x;
        break;
      }
      
      // optional int32 pos_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pos_y;
        break;
      }
      
      // optional int32 pos_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_use_fly;
        break;
      }
      
      // optional int32 use_fly = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_use_fly:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &use_fly_)));
          set_has_use_fly();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402203::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 boss_scene_id = 1;
  if (has_boss_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->boss_scene_id(), output);
  }
  
  // optional int32 pos_x = 2;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pos_x(), output);
  }
  
  // optional int32 pos_y = 3;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos_y(), output);
  }
  
  // optional int32 scene_id = 4;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->scene_id(), output);
  }
  
  // optional int32 use_fly = 5;
  if (has_use_fly()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->use_fly(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402203::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 boss_scene_id = 1;
  if (has_boss_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->boss_scene_id(), target);
  }
  
  // optional int32 pos_x = 2;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pos_x(), target);
  }
  
  // optional int32 pos_y = 3;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos_y(), target);
  }
  
  // optional int32 scene_id = 4;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->scene_id(), target);
  }
  
  // optional int32 use_fly = 5;
  if (has_use_fly()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->use_fly(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402203::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 boss_scene_id = 1;
    if (has_boss_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boss_scene_id());
    }
    
    // optional int32 pos_x = 2;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }
    
    // optional int32 pos_y = 3;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }
    
    // optional int32 scene_id = 4;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 use_fly = 5;
    if (has_use_fly()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->use_fly());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402203::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402203* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402203*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402203::MergeFrom(const Proto30402203& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_boss_scene_id()) {
      set_boss_scene_id(from.boss_scene_id());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_use_fly()) {
      set_use_fly(from.use_fly());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402203::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402203::CopyFrom(const Proto30402203& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402203::IsInitialized() const {
  
  return true;
}

void Proto30402203::Swap(Proto30402203* other) {
  if (other != this) {
    std::swap(boss_scene_id_, other->boss_scene_id_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(use_fly_, other->use_fly_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402203::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402203_descriptor_;
  metadata.reflection = Proto30402203_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400043::kItemIdFieldNumber;
const int Proto31400043::kAmountFieldNumber;
const int Proto31400043::kBindFieldNumber;
const int Proto31400043::kSerialObjFieldNumber;
#endif  // !_MSC_VER

Proto31400043::Proto31400043()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400043::InitAsDefaultInstance() {
  serial_obj_ = const_cast< ::ProtoSerialObj*>(&::ProtoSerialObj::default_instance());
}

Proto31400043::Proto31400043(const Proto31400043& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400043::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  amount_ = 0;
  bind_ = 0;
  serial_obj_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400043::~Proto31400043() {
  SharedDtor();
}

void Proto31400043::SharedDtor() {
  if (this != default_instance_) {
    delete serial_obj_;
  }
}

void Proto31400043::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400043::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400043_descriptor_;
}

const Proto31400043& Proto31400043::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto31400043* Proto31400043::default_instance_ = NULL;

Proto31400043* Proto31400043::New() const {
  return new Proto31400043;
}

void Proto31400043::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    amount_ = 0;
    bind_ = 0;
    if (has_serial_obj()) {
      if (serial_obj_ != NULL) serial_obj_->::ProtoSerialObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400043::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_bind;
        break;
      }
      
      // optional int32 bind = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bind_)));
          set_has_bind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_serial_obj;
        break;
      }
      
      // optional .ProtoSerialObj serial_obj = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_serial_obj:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serial_obj()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400043::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 amount = 2;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->amount(), output);
  }
  
  // optional int32 bind = 3;
  if (has_bind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->bind(), output);
  }
  
  // optional .ProtoSerialObj serial_obj = 4;
  if (has_serial_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->serial_obj(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400043::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 amount = 2;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->amount(), target);
  }
  
  // optional int32 bind = 3;
  if (has_bind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->bind(), target);
  }
  
  // optional .ProtoSerialObj serial_obj = 4;
  if (has_serial_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->serial_obj(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400043::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 amount = 2;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
    // optional int32 bind = 3;
    if (has_bind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bind());
    }
    
    // optional .ProtoSerialObj serial_obj = 4;
    if (has_serial_obj()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serial_obj());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400043::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400043* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400043*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400043::MergeFrom(const Proto31400043& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_bind()) {
      set_bind(from.bind());
    }
    if (from.has_serial_obj()) {
      mutable_serial_obj()->::ProtoSerialObj::MergeFrom(from.serial_obj());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400043::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400043::CopyFrom(const Proto31400043& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400043::IsInitialized() const {
  
  return true;
}

void Proto31400043::Swap(Proto31400043* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(amount_, other->amount_);
    std::swap(bind_, other->bind_);
    std::swap(serial_obj_, other->serial_obj_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400043::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400043_descriptor_;
  metadata.reflection = Proto31400043_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400408::kLevelFieldNumber;
const int Proto30400408::kExpFieldNumber;
const int Proto30400408::kOpenFieldNumber;
const int Proto30400408::kNotifyFlagFieldNumber;
const int Proto30400408::kStyleLvlFieldNumber;
#endif  // !_MSC_VER

Proto30400408::Proto30400408()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400408::InitAsDefaultInstance() {
}

Proto30400408::Proto30400408(const Proto30400408& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400408::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  exp_ = 0;
  open_ = 0;
  notify_flag_ = 0;
  style_lvl_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400408::~Proto30400408() {
  SharedDtor();
}

void Proto30400408::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400408::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400408::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400408_descriptor_;
}

const Proto30400408& Proto30400408::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30400408* Proto30400408::default_instance_ = NULL;

Proto30400408* Proto30400408::New() const {
  return new Proto30400408;
}

void Proto30400408::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    exp_ = 0;
    open_ = 0;
    notify_flag_ = 0;
    style_lvl_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400408::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exp;
        break;
      }
      
      // optional int32 exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_open;
        break;
      }
      
      // optional int32 open = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_)));
          set_has_open();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_notify_flag;
        break;
      }
      
      // optional int32 notify_flag = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_notify_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &notify_flag_)));
          set_has_notify_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_style_lvl;
        break;
      }
      
      // optional int32 style_lvl = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_style_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &style_lvl_)));
          set_has_style_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400408::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exp(), output);
  }
  
  // optional int32 open = 3;
  if (has_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->open(), output);
  }
  
  // optional int32 notify_flag = 4;
  if (has_notify_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->notify_flag(), output);
  }
  
  // optional int32 style_lvl = 5;
  if (has_style_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->style_lvl(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400408::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exp(), target);
  }
  
  // optional int32 open = 3;
  if (has_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->open(), target);
  }
  
  // optional int32 notify_flag = 4;
  if (has_notify_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->notify_flag(), target);
  }
  
  // optional int32 style_lvl = 5;
  if (has_style_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->style_lvl(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400408::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 exp = 2;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }
    
    // optional int32 open = 3;
    if (has_open()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open());
    }
    
    // optional int32 notify_flag = 4;
    if (has_notify_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->notify_flag());
    }
    
    // optional int32 style_lvl = 5;
    if (has_style_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->style_lvl());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400408::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400408* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400408*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400408::MergeFrom(const Proto30400408& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_open()) {
      set_open(from.open());
    }
    if (from.has_notify_flag()) {
      set_notify_flag(from.notify_flag());
    }
    if (from.has_style_lvl()) {
      set_style_lvl(from.style_lvl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400408::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400408::CopyFrom(const Proto30400408& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400408::IsInitialized() const {
  
  return true;
}

void Proto30400408::Swap(Proto30400408* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(exp_, other->exp_);
    std::swap(open_, other->open_);
    std::swap(notify_flag_, other->notify_flag_);
    std::swap(style_lvl_, other->style_lvl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400408::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400408_descriptor_;
  metadata.reflection = Proto30400408_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30101802::kContriNumFieldNumber;
const int Proto30101802::kAddNumFieldNumber;
#endif  // !_MSC_VER

Proto30101802::Proto30101802()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30101802::InitAsDefaultInstance() {
}

Proto30101802::Proto30101802(const Proto30101802& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30101802::SharedCtor() {
  _cached_size_ = 0;
  contri_num_ = 0;
  add_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30101802::~Proto30101802() {
  SharedDtor();
}

void Proto30101802::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30101802::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30101802::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30101802_descriptor_;
}

const Proto30101802& Proto30101802::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30101802* Proto30101802::default_instance_ = NULL;

Proto30101802* Proto30101802::New() const {
  return new Proto30101802;
}

void Proto30101802::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    contri_num_ = 0;
    add_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30101802::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 contri_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &contri_num_)));
          set_has_contri_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_add_num;
        break;
      }
      
      // optional int32 add_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_add_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_num_)));
          set_has_add_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30101802::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 contri_num = 1;
  if (has_contri_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->contri_num(), output);
  }
  
  // optional int32 add_num = 2;
  if (has_add_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->add_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30101802::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 contri_num = 1;
  if (has_contri_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->contri_num(), target);
  }
  
  // optional int32 add_num = 2;
  if (has_add_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->add_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30101802::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 contri_num = 1;
    if (has_contri_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->contri_num());
    }
    
    // optional int32 add_num = 2;
    if (has_add_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30101802::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30101802* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30101802*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30101802::MergeFrom(const Proto30101802& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_contri_num()) {
      set_contri_num(from.contri_num());
    }
    if (from.has_add_num()) {
      set_add_num(from.add_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30101802::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30101802::CopyFrom(const Proto30101802& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30101802::IsInitialized() const {
  
  return true;
}

void Proto30101802::Swap(Proto30101802* other) {
  if (other != this) {
    std::swap(contri_num_, other->contri_num_);
    std::swap(add_num_, other->add_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30101802::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30101802_descriptor_;
  metadata.reflection = Proto30101802_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400162::kRebateTimesFieldNumber;
const int Proto31400162::kLastBuyTimeFieldNumber;
#endif  // !_MSC_VER

Proto31400162::Proto31400162()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400162::InitAsDefaultInstance() {
}

Proto31400162::Proto31400162(const Proto31400162& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400162::SharedCtor() {
  _cached_size_ = 0;
  rebate_times_ = 0;
  last_buy_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400162::~Proto31400162() {
  SharedDtor();
}

void Proto31400162::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400162::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400162::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400162_descriptor_;
}

const Proto31400162& Proto31400162::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto31400162* Proto31400162::default_instance_ = NULL;

Proto31400162* Proto31400162::New() const {
  return new Proto31400162;
}

void Proto31400162::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rebate_times_ = 0;
    last_buy_time_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400162::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rebate_times = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rebate_times_)));
          set_has_rebate_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_last_buy_time;
        break;
      }
      
      // optional int64 last_buy_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last_buy_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &last_buy_time_)));
          set_has_last_buy_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400162::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 rebate_times = 1;
  if (has_rebate_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rebate_times(), output);
  }
  
  // optional int64 last_buy_time = 2;
  if (has_last_buy_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->last_buy_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400162::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 rebate_times = 1;
  if (has_rebate_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rebate_times(), target);
  }
  
  // optional int64 last_buy_time = 2;
  if (has_last_buy_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->last_buy_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400162::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 rebate_times = 1;
    if (has_rebate_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rebate_times());
    }
    
    // optional int64 last_buy_time = 2;
    if (has_last_buy_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->last_buy_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400162::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400162* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400162*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400162::MergeFrom(const Proto31400162& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rebate_times()) {
      set_rebate_times(from.rebate_times());
    }
    if (from.has_last_buy_time()) {
      set_last_buy_time(from.last_buy_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400162::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400162::CopyFrom(const Proto31400162& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400162::IsInitialized() const {
  
  return true;
}

void Proto31400162::Swap(Proto31400162* other) {
  if (other != this) {
    std::swap(rebate_times_, other->rebate_times_);
    std::swap(last_buy_time_, other->last_buy_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400162::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400162_descriptor_;
  metadata.reflection = Proto31400162_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400163::kIsBuyFieldNumber;
const int Proto31400163::kInvestIndexFieldNumber;
const int Proto31400163::kGetRewardFieldNumber;
const int Proto31400163::kRewardTimeFieldNumber;
const int Proto31400163::kBuyTimeFieldNumber;
const int Proto31400163::kInvestRewardsFieldNumber;
const int Proto31400163::kVipRewardsFieldNumber;
#endif  // !_MSC_VER

Proto31400163::Proto31400163()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400163::InitAsDefaultInstance() {
}

Proto31400163::Proto31400163(const Proto31400163& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400163::SharedCtor() {
  _cached_size_ = 0;
  is_buy_ = 0;
  invest_index_ = 0;
  get_reward_ = 0;
  reward_time_ = GOOGLE_LONGLONG(0);
  buy_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400163::~Proto31400163() {
  SharedDtor();
}

void Proto31400163::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400163::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400163::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400163_descriptor_;
}

const Proto31400163& Proto31400163::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto31400163* Proto31400163::default_instance_ = NULL;

Proto31400163* Proto31400163::New() const {
  return new Proto31400163;
}

void Proto31400163::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_buy_ = 0;
    invest_index_ = 0;
    get_reward_ = 0;
    reward_time_ = GOOGLE_LONGLONG(0);
    buy_time_ = GOOGLE_LONGLONG(0);
  }
  invest_rewards_.Clear();
  vip_rewards_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400163::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 is_buy = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_buy_)));
          set_has_is_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_invest_index;
        break;
      }
      
      // optional int32 invest_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_invest_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &invest_index_)));
          set_has_invest_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_get_reward;
        break;
      }
      
      // optional int32 get_reward = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_get_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &get_reward_)));
          set_has_get_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_reward_time;
        break;
      }
      
      // optional int64 reward_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reward_time_)));
          set_has_reward_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_buy_time;
        break;
      }
      
      // optional int64 buy_time = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &buy_time_)));
          set_has_buy_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_invest_rewards;
        break;
      }
      
      // repeated int32 invest_rewards = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_invest_rewards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_invest_rewards())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_invest_rewards())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_invest_rewards;
        if (input->ExpectTag(56)) goto parse_vip_rewards;
        break;
      }
      
      // repeated int32 vip_rewards = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_rewards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_vip_rewards())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_vip_rewards())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_vip_rewards;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400163::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 is_buy = 1;
  if (has_is_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->is_buy(), output);
  }
  
  // optional int32 invest_index = 2;
  if (has_invest_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->invest_index(), output);
  }
  
  // optional int32 get_reward = 3;
  if (has_get_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->get_reward(), output);
  }
  
  // optional int64 reward_time = 4;
  if (has_reward_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->reward_time(), output);
  }
  
  // optional int64 buy_time = 5;
  if (has_buy_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->buy_time(), output);
  }
  
  // repeated int32 invest_rewards = 6;
  for (int i = 0; i < this->invest_rewards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->invest_rewards(i), output);
  }
  
  // repeated int32 vip_rewards = 7;
  for (int i = 0; i < this->vip_rewards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->vip_rewards(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400163::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 is_buy = 1;
  if (has_is_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->is_buy(), target);
  }
  
  // optional int32 invest_index = 2;
  if (has_invest_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->invest_index(), target);
  }
  
  // optional int32 get_reward = 3;
  if (has_get_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->get_reward(), target);
  }
  
  // optional int64 reward_time = 4;
  if (has_reward_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->reward_time(), target);
  }
  
  // optional int64 buy_time = 5;
  if (has_buy_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->buy_time(), target);
  }
  
  // repeated int32 invest_rewards = 6;
  for (int i = 0; i < this->invest_rewards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->invest_rewards(i), target);
  }
  
  // repeated int32 vip_rewards = 7;
  for (int i = 0; i < this->vip_rewards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->vip_rewards(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400163::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 is_buy = 1;
    if (has_is_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_buy());
    }
    
    // optional int32 invest_index = 2;
    if (has_invest_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->invest_index());
    }
    
    // optional int32 get_reward = 3;
    if (has_get_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->get_reward());
    }
    
    // optional int64 reward_time = 4;
    if (has_reward_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->reward_time());
    }
    
    // optional int64 buy_time = 5;
    if (has_buy_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->buy_time());
    }
    
  }
  // repeated int32 invest_rewards = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->invest_rewards_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->invest_rewards(i));
    }
    total_size += 1 * this->invest_rewards_size() + data_size;
  }
  
  // repeated int32 vip_rewards = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->vip_rewards_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->vip_rewards(i));
    }
    total_size += 1 * this->vip_rewards_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400163::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400163* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400163*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400163::MergeFrom(const Proto31400163& from) {
  GOOGLE_CHECK_NE(&from, this);
  invest_rewards_.MergeFrom(from.invest_rewards_);
  vip_rewards_.MergeFrom(from.vip_rewards_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_buy()) {
      set_is_buy(from.is_buy());
    }
    if (from.has_invest_index()) {
      set_invest_index(from.invest_index());
    }
    if (from.has_get_reward()) {
      set_get_reward(from.get_reward());
    }
    if (from.has_reward_time()) {
      set_reward_time(from.reward_time());
    }
    if (from.has_buy_time()) {
      set_buy_time(from.buy_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400163::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400163::CopyFrom(const Proto31400163& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400163::IsInitialized() const {
  
  return true;
}

void Proto31400163::Swap(Proto31400163* other) {
  if (other != this) {
    std::swap(is_buy_, other->is_buy_);
    std::swap(invest_index_, other->invest_index_);
    std::swap(get_reward_, other->get_reward_);
    std::swap(reward_time_, other->reward_time_);
    std::swap(buy_time_, other->buy_time_);
    invest_rewards_.Swap(&other->invest_rewards_);
    vip_rewards_.Swap(&other->vip_rewards_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400163::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400163_descriptor_;
  metadata.reflection = Proto31400163_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402301::kRoleInfoFieldNumber;
const int Proto30402301::kLabelIdFieldNumber;
#endif  // !_MSC_VER

Proto30402301::Proto30402301()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402301::InitAsDefaultInstance() {
  role_info_ = const_cast< ::ProtoRoleInfo*>(&::ProtoRoleInfo::default_instance());
}

Proto30402301::Proto30402301(const Proto30402301& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402301::SharedCtor() {
  _cached_size_ = 0;
  role_info_ = NULL;
  label_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402301::~Proto30402301() {
  SharedDtor();
}

void Proto30402301::SharedDtor() {
  if (this != default_instance_) {
    delete role_info_;
  }
}

void Proto30402301::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402301::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402301_descriptor_;
}

const Proto30402301& Proto30402301::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30402301* Proto30402301::default_instance_ = NULL;

Proto30402301* Proto30402301::New() const {
  return new Proto30402301;
}

void Proto30402301::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_role_info()) {
      if (role_info_ != NULL) role_info_->::ProtoRoleInfo::Clear();
    }
    label_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402301::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoRoleInfo role_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_role_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_label_id;
        break;
      }
      
      // optional int32 label_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_label_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_id_)));
          set_has_label_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402301::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoRoleInfo role_info = 1;
  if (has_role_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->role_info(), output);
  }
  
  // optional int32 label_id = 2;
  if (has_label_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->label_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402301::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoRoleInfo role_info = 1;
  if (has_role_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->role_info(), target);
  }
  
  // optional int32 label_id = 2;
  if (has_label_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->label_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402301::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoRoleInfo role_info = 1;
    if (has_role_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->role_info());
    }
    
    // optional int32 label_id = 2;
    if (has_label_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402301::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402301* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402301*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402301::MergeFrom(const Proto30402301& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_info()) {
      mutable_role_info()->::ProtoRoleInfo::MergeFrom(from.role_info());
    }
    if (from.has_label_id()) {
      set_label_id(from.label_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402301::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402301::CopyFrom(const Proto30402301& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402301::IsInitialized() const {
  
  return true;
}

void Proto30402301::Swap(Proto30402301* other) {
  if (other != this) {
    std::swap(role_info_, other->role_info_);
    std::swap(label_id_, other->label_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402301::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402301_descriptor_;
  metadata.reflection = Proto30402301_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100242::kActivityLwarFieldNumber;
#endif  // !_MSC_VER

Proto30100242::Proto30100242()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100242::InitAsDefaultInstance() {
}

Proto30100242::Proto30100242(const Proto30100242& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100242::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100242::~Proto30100242() {
  SharedDtor();
}

void Proto30100242::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100242::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100242::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100242_descriptor_;
}

const Proto30100242& Proto30100242::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30100242* Proto30100242::default_instance_ = NULL;

Proto30100242* Proto30100242::New() const {
  return new Proto30100242;
}

void Proto30100242::Clear() {
  activity_lwar_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100242::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoActivityLWarRank activity_lwar = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_activity_lwar:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_activity_lwar()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_activity_lwar;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100242::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoActivityLWarRank activity_lwar = 1;
  for (int i = 0; i < this->activity_lwar_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->activity_lwar(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100242::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoActivityLWarRank activity_lwar = 1;
  for (int i = 0; i < this->activity_lwar_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->activity_lwar(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100242::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoActivityLWarRank activity_lwar = 1;
  total_size += 1 * this->activity_lwar_size();
  for (int i = 0; i < this->activity_lwar_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->activity_lwar(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100242::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100242* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100242*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100242::MergeFrom(const Proto30100242& from) {
  GOOGLE_CHECK_NE(&from, this);
  activity_lwar_.MergeFrom(from.activity_lwar_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100242::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100242::CopyFrom(const Proto30100242& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100242::IsInitialized() const {
  
  return true;
}

void Proto30100242::Swap(Proto30100242* other) {
  if (other != this) {
    activity_lwar_.Swap(&other->activity_lwar_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100242::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100242_descriptor_;
  metadata.reflection = Proto30100242_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30103001::kMailIdFieldNumber;
const int Proto30103001::kActTypeFieldNumber;
const int Proto30103001::kRewardListFieldNumber;
const int Proto30103001::kRoleIdFieldNumber;
const int Proto30103001::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto30103001::Proto30103001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30103001::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto30103001::Proto30103001(const Proto30103001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30103001::SharedCtor() {
  _cached_size_ = 0;
  mail_id_ = 0;
  act_type_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30103001::~Proto30103001() {
  SharedDtor();
}

void Proto30103001::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto30103001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30103001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30103001_descriptor_;
}

const Proto30103001& Proto30103001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30103001* Proto30103001::default_instance_ = NULL;

Proto30103001* Proto30103001::New() const {
  return new Proto30103001;
}

void Proto30103001::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mail_id_ = 0;
    act_type_ = 0;
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  reward_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30103001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mail_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mail_id_)));
          set_has_mail_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_act_type;
        break;
      }
      
      // optional int32 act_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_type_)));
          set_has_act_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_reward_list;
        break;
      }
      
      // repeated int32 reward_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_reward_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_reward_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_reward_list;
        if (input->ExpectTag(32)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30103001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 mail_id = 1;
  if (has_mail_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mail_id(), output);
  }
  
  // optional int32 act_type = 2;
  if (has_act_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->act_type(), output);
  }
  
  // repeated int32 reward_list = 3;
  for (int i = 0; i < this->reward_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->reward_list(i), output);
  }
  
  // optional int64 role_id = 4;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->role_id(), output);
  }
  
  // optional .ProtoThreeObj other_info = 5;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30103001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 mail_id = 1;
  if (has_mail_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mail_id(), target);
  }
  
  // optional int32 act_type = 2;
  if (has_act_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->act_type(), target);
  }
  
  // repeated int32 reward_list = 3;
  for (int i = 0; i < this->reward_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->reward_list(i), target);
  }
  
  // optional int64 role_id = 4;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->role_id(), target);
  }
  
  // optional .ProtoThreeObj other_info = 5;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30103001::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 mail_id = 1;
    if (has_mail_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mail_id());
    }
    
    // optional int32 act_type = 2;
    if (has_act_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_type());
    }
    
    // optional int64 role_id = 4;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional .ProtoThreeObj other_info = 5;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  // repeated int32 reward_list = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->reward_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->reward_list(i));
    }
    total_size += 1 * this->reward_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30103001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30103001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30103001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30103001::MergeFrom(const Proto30103001& from) {
  GOOGLE_CHECK_NE(&from, this);
  reward_list_.MergeFrom(from.reward_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mail_id()) {
      set_mail_id(from.mail_id());
    }
    if (from.has_act_type()) {
      set_act_type(from.act_type());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30103001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30103001::CopyFrom(const Proto30103001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30103001::IsInitialized() const {
  
  return true;
}

void Proto30103001::Swap(Proto30103001* other) {
  if (other != this) {
    std::swap(mail_id_, other->mail_id_);
    std::swap(act_type_, other->act_type_);
    reward_list_.Swap(&other->reward_list_);
    std::swap(role_id_, other->role_id_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30103001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30103001_descriptor_;
  metadata.reflection = Proto30103001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400912::kRoleIdFieldNumber;
const int Proto30400912::kRoleNameFieldNumber;
const int Proto30400912::kFightScoreFieldNumber;
const int Proto30400912::kFloorFieldNumber;
const int Proto30400912::kScriptTypeFieldNumber;
#endif  // !_MSC_VER

Proto30400912::Proto30400912()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400912::InitAsDefaultInstance() {
}

Proto30400912::Proto30400912(const Proto30400912& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400912::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fight_score_ = 0;
  floor_ = 0;
  script_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400912::~Proto30400912() {
  SharedDtor();
}

void Proto30400912::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto30400912::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400912::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400912_descriptor_;
}

const Proto30400912& Proto30400912::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30400912* Proto30400912::default_instance_ = NULL;

Proto30400912* Proto30400912::New() const {
  return new Proto30400912;
}

void Proto30400912::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
    fight_score_ = 0;
    floor_ = 0;
    script_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400912::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_role_name;
        break;
      }
      
      // optional string role_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_fight_score;
        break;
      }
      
      // optional int32 fight_score = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_score_)));
          set_has_fight_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_floor;
        break;
      }
      
      // optional int32 floor = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_floor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &floor_)));
          set_has_floor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_script_type;
        break;
      }
      
      // optional int32 script_type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_type_)));
          set_has_script_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400912::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional string role_name = 2;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->role_name(), output);
  }
  
  // optional int32 fight_score = 3;
  if (has_fight_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fight_score(), output);
  }
  
  // optional int32 floor = 4;
  if (has_floor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->floor(), output);
  }
  
  // optional int32 script_type = 5;
  if (has_script_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->script_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400912::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional string role_name = 2;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->role_name(), target);
  }
  
  // optional int32 fight_score = 3;
  if (has_fight_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fight_score(), target);
  }
  
  // optional int32 floor = 4;
  if (has_floor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->floor(), target);
  }
  
  // optional int32 script_type = 5;
  if (has_script_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->script_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400912::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional string role_name = 2;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
    // optional int32 fight_score = 3;
    if (has_fight_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_score());
    }
    
    // optional int32 floor = 4;
    if (has_floor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->floor());
    }
    
    // optional int32 script_type = 5;
    if (has_script_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400912::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400912* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400912*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400912::MergeFrom(const Proto30400912& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
    if (from.has_fight_score()) {
      set_fight_score(from.fight_score());
    }
    if (from.has_floor()) {
      set_floor(from.floor());
    }
    if (from.has_script_type()) {
      set_script_type(from.script_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400912::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400912::CopyFrom(const Proto30400912& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400912::IsInitialized() const {
  
  return true;
}

void Proto30400912::Swap(Proto30400912* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(role_name_, other->role_name_);
    std::swap(fight_score_, other->fight_score_);
    std::swap(floor_, other->floor_);
    std::swap(script_type_, other->script_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400912::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400912_descriptor_;
  metadata.reflection = Proto30400912_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31403101::kIsBuyFieldNumber;
const int Proto31403101::kInvestIndexFieldNumber;
const int Proto31403101::kGetRewardFieldNumber;
const int Proto31403101::kVipLevelFieldNumber;
const int Proto31403101::kRewardTimeFieldNumber;
const int Proto31403101::kBuyTimeFieldNumber;
const int Proto31403101::kInvestRewardsFieldNumber;
const int Proto31403101::kVipRewardsFieldNumber;
const int Proto31403101::kRoleIdFieldNumber;
const int Proto31403101::kTypeInfoFieldNumber;
#endif  // !_MSC_VER

Proto31403101::Proto31403101()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31403101::InitAsDefaultInstance() {
  type_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto31403101::Proto31403101(const Proto31403101& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31403101::SharedCtor() {
  _cached_size_ = 0;
  is_buy_ = 0;
  invest_index_ = 0;
  get_reward_ = 0;
  vip_level_ = 0;
  reward_time_ = GOOGLE_LONGLONG(0);
  buy_time_ = GOOGLE_LONGLONG(0);
  role_id_ = GOOGLE_LONGLONG(0);
  type_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31403101::~Proto31403101() {
  SharedDtor();
}

void Proto31403101::SharedDtor() {
  if (this != default_instance_) {
    delete type_info_;
  }
}

void Proto31403101::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31403101::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31403101_descriptor_;
}

const Proto31403101& Proto31403101::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto31403101* Proto31403101::default_instance_ = NULL;

Proto31403101* Proto31403101::New() const {
  return new Proto31403101;
}

void Proto31403101::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_buy_ = 0;
    invest_index_ = 0;
    get_reward_ = 0;
    vip_level_ = 0;
    reward_time_ = GOOGLE_LONGLONG(0);
    buy_time_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_type_info()) {
      if (type_info_ != NULL) type_info_->::ProtoThreeObj::Clear();
    }
  }
  invest_rewards_.Clear();
  vip_rewards_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31403101::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 is_buy = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_buy_)));
          set_has_is_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_invest_index;
        break;
      }
      
      // optional int32 invest_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_invest_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &invest_index_)));
          set_has_invest_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_get_reward;
        break;
      }
      
      // optional int32 get_reward = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_get_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &get_reward_)));
          set_has_get_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_vip_level;
        break;
      }
      
      // optional int32 vip_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_level_)));
          set_has_vip_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_reward_time;
        break;
      }
      
      // optional int64 reward_time = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reward_time_)));
          set_has_reward_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_buy_time;
        break;
      }
      
      // optional int64 buy_time = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &buy_time_)));
          set_has_buy_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_invest_rewards;
        break;
      }
      
      // repeated int32 invest_rewards = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_invest_rewards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_invest_rewards())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_invest_rewards())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_invest_rewards;
        if (input->ExpectTag(64)) goto parse_vip_rewards;
        break;
      }
      
      // repeated int32 vip_rewards = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_rewards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64, input, this->mutable_vip_rewards())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_vip_rewards())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_vip_rewards;
        if (input->ExpectTag(72)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_type_info;
        break;
      }
      
      // optional .ProtoThreeObj type_info = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_type_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31403101::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 is_buy = 1;
  if (has_is_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->is_buy(), output);
  }
  
  // optional int32 invest_index = 2;
  if (has_invest_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->invest_index(), output);
  }
  
  // optional int32 get_reward = 3;
  if (has_get_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->get_reward(), output);
  }
  
  // optional int32 vip_level = 4;
  if (has_vip_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->vip_level(), output);
  }
  
  // optional int64 reward_time = 5;
  if (has_reward_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->reward_time(), output);
  }
  
  // optional int64 buy_time = 6;
  if (has_buy_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->buy_time(), output);
  }
  
  // repeated int32 invest_rewards = 7;
  for (int i = 0; i < this->invest_rewards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->invest_rewards(i), output);
  }
  
  // repeated int32 vip_rewards = 8;
  for (int i = 0; i < this->vip_rewards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->vip_rewards(i), output);
  }
  
  // optional int64 role_id = 9;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->role_id(), output);
  }
  
  // optional .ProtoThreeObj type_info = 10;
  if (has_type_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->type_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31403101::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 is_buy = 1;
  if (has_is_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->is_buy(), target);
  }
  
  // optional int32 invest_index = 2;
  if (has_invest_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->invest_index(), target);
  }
  
  // optional int32 get_reward = 3;
  if (has_get_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->get_reward(), target);
  }
  
  // optional int32 vip_level = 4;
  if (has_vip_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->vip_level(), target);
  }
  
  // optional int64 reward_time = 5;
  if (has_reward_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->reward_time(), target);
  }
  
  // optional int64 buy_time = 6;
  if (has_buy_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->buy_time(), target);
  }
  
  // repeated int32 invest_rewards = 7;
  for (int i = 0; i < this->invest_rewards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->invest_rewards(i), target);
  }
  
  // repeated int32 vip_rewards = 8;
  for (int i = 0; i < this->vip_rewards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(8, this->vip_rewards(i), target);
  }
  
  // optional int64 role_id = 9;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->role_id(), target);
  }
  
  // optional .ProtoThreeObj type_info = 10;
  if (has_type_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->type_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31403101::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 is_buy = 1;
    if (has_is_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_buy());
    }
    
    // optional int32 invest_index = 2;
    if (has_invest_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->invest_index());
    }
    
    // optional int32 get_reward = 3;
    if (has_get_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->get_reward());
    }
    
    // optional int32 vip_level = 4;
    if (has_vip_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_level());
    }
    
    // optional int64 reward_time = 5;
    if (has_reward_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->reward_time());
    }
    
    // optional int64 buy_time = 6;
    if (has_buy_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->buy_time());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 role_id = 9;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional .ProtoThreeObj type_info = 10;
    if (has_type_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->type_info());
    }
    
  }
  // repeated int32 invest_rewards = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->invest_rewards_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->invest_rewards(i));
    }
    total_size += 1 * this->invest_rewards_size() + data_size;
  }
  
  // repeated int32 vip_rewards = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->vip_rewards_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->vip_rewards(i));
    }
    total_size += 1 * this->vip_rewards_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31403101::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31403101* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31403101*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31403101::MergeFrom(const Proto31403101& from) {
  GOOGLE_CHECK_NE(&from, this);
  invest_rewards_.MergeFrom(from.invest_rewards_);
  vip_rewards_.MergeFrom(from.vip_rewards_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_buy()) {
      set_is_buy(from.is_buy());
    }
    if (from.has_invest_index()) {
      set_invest_index(from.invest_index());
    }
    if (from.has_get_reward()) {
      set_get_reward(from.get_reward());
    }
    if (from.has_vip_level()) {
      set_vip_level(from.vip_level());
    }
    if (from.has_reward_time()) {
      set_reward_time(from.reward_time());
    }
    if (from.has_buy_time()) {
      set_buy_time(from.buy_time());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_type_info()) {
      mutable_type_info()->::ProtoThreeObj::MergeFrom(from.type_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31403101::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31403101::CopyFrom(const Proto31403101& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31403101::IsInitialized() const {
  
  return true;
}

void Proto31403101::Swap(Proto31403101* other) {
  if (other != this) {
    std::swap(is_buy_, other->is_buy_);
    std::swap(invest_index_, other->invest_index_);
    std::swap(get_reward_, other->get_reward_);
    std::swap(vip_level_, other->vip_level_);
    std::swap(reward_time_, other->reward_time_);
    std::swap(buy_time_, other->buy_time_);
    invest_rewards_.Swap(&other->invest_rewards_);
    vip_rewards_.Swap(&other->vip_rewards_);
    std::swap(role_id_, other->role_id_);
    std::swap(type_info_, other->type_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31403101::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31403101_descriptor_;
  metadata.reflection = Proto31403101_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400152::kItemIdFieldNumber;
const int Proto30400152::kItemAmountFieldNumber;
const int Proto30400152::kTipsIdFieldNumber;
#endif  // !_MSC_VER

Proto30400152::Proto30400152()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400152::InitAsDefaultInstance() {
}

Proto30400152::Proto30400152(const Proto30400152& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400152::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  item_amount_ = 0;
  tips_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400152::~Proto30400152() {
  SharedDtor();
}

void Proto30400152::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400152::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400152::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400152_descriptor_;
}

const Proto30400152& Proto30400152::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30400152* Proto30400152::default_instance_ = NULL;

Proto30400152* Proto30400152::New() const {
  return new Proto30400152;
}

void Proto30400152::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    item_amount_ = 0;
    tips_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400152::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_amount;
        break;
      }
      
      // optional int32 item_amount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_amount_)));
          set_has_item_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_tips_id;
        break;
      }
      
      // optional int32 tips_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tips_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tips_id_)));
          set_has_tips_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400152::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 item_amount = 2;
  if (has_item_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_amount(), output);
  }
  
  // optional int32 tips_id = 3;
  if (has_tips_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->tips_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400152::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 item_amount = 2;
  if (has_item_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_amount(), target);
  }
  
  // optional int32 tips_id = 3;
  if (has_tips_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->tips_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400152::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_amount = 2;
    if (has_item_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_amount());
    }
    
    // optional int32 tips_id = 3;
    if (has_tips_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tips_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400152::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400152* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400152*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400152::MergeFrom(const Proto30400152& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_amount()) {
      set_item_amount(from.item_amount());
    }
    if (from.has_tips_id()) {
      set_tips_id(from.tips_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400152::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400152::CopyFrom(const Proto30400152& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400152::IsInitialized() const {
  
  return true;
}

void Proto30400152::Swap(Proto30400152* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(item_amount_, other->item_amount_);
    std::swap(tips_id_, other->tips_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400152::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400152_descriptor_;
  metadata.reflection = Proto30400152_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400705::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto30400705::Proto30400705()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400705::InitAsDefaultInstance() {
}

Proto30400705::Proto30400705(const Proto30400705& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400705::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400705::~Proto30400705() {
  SharedDtor();
}

void Proto30400705::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400705::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400705::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400705_descriptor_;
}

const Proto30400705& Proto30400705::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30400705* Proto30400705::default_instance_ = NULL;

Proto30400705* Proto30400705::New() const {
  return new Proto30400705;
}

void Proto30400705::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400705::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400705::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400705::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400705::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400705::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400705* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400705*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400705::MergeFrom(const Proto30400705& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400705::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400705::CopyFrom(const Proto30400705& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400705::IsInitialized() const {
  
  return true;
}

void Proto30400705::Swap(Proto30400705* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400705::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400705_descriptor_;
  metadata.reflection = Proto30400705_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100704::kRoleIdFieldNumber;
const int Proto30100704::kLeaderListFieldNumber;
const int Proto30100704::kTeamListFieldNumber;
#endif  // !_MSC_VER

Proto30100704::Proto30100704()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100704::InitAsDefaultInstance() {
}

Proto30100704::Proto30100704(const Proto30100704& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100704::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100704::~Proto30100704() {
  SharedDtor();
}

void Proto30100704::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100704::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100704::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100704_descriptor_;
}

const Proto30100704& Proto30100704::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30100704* Proto30100704::default_instance_ = NULL;

Proto30100704* Proto30100704::New() const {
  return new Proto30100704;
}

void Proto30100704::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  leader_list_.Clear();
  team_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100704::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_leader_list;
        break;
      }
      
      // repeated int64 leader_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leader_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16, input, this->mutable_leader_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_leader_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_leader_list;
        if (input->ExpectTag(24)) goto parse_team_list;
        break;
      }
      
      // repeated int32 team_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_team_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_team_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_team_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_team_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100704::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // repeated int64 leader_list = 2;
  for (int i = 0; i < this->leader_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->leader_list(i), output);
  }
  
  // repeated int32 team_list = 3;
  for (int i = 0; i < this->team_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->team_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100704::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // repeated int64 leader_list = 2;
  for (int i = 0; i < this->leader_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->leader_list(i), target);
  }
  
  // repeated int32 team_list = 3;
  for (int i = 0; i < this->team_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->team_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100704::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  // repeated int64 leader_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->leader_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->leader_list(i));
    }
    total_size += 1 * this->leader_list_size() + data_size;
  }
  
  // repeated int32 team_list = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->team_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->team_list(i));
    }
    total_size += 1 * this->team_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100704::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100704* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100704*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100704::MergeFrom(const Proto30100704& from) {
  GOOGLE_CHECK_NE(&from, this);
  leader_list_.MergeFrom(from.leader_list_);
  team_list_.MergeFrom(from.team_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100704::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100704::CopyFrom(const Proto30100704& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100704::IsInitialized() const {
  
  return true;
}

void Proto30100704::Swap(Proto30100704* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    leader_list_.Swap(&other->leader_list_);
    team_list_.Swap(&other->team_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100704::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100704_descriptor_;
  metadata.reflection = Proto30100704_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400164::kFreeTimesFieldNumber;
const int Proto31400164::kResetTimesFieldNumber;
const int Proto31400164::kGameIndexFieldNumber;
const int Proto31400164::kGameLengthFieldNumber;
const int Proto31400164::kResetTickFieldNumber;
const int Proto31400164::kOtherInfoFieldNumber;
const int Proto31400164::kItemListFieldNumber;
#endif  // !_MSC_VER

Proto31400164::Proto31400164()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400164::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto31400164::Proto31400164(const Proto31400164& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400164::SharedCtor() {
  _cached_size_ = 0;
  free_times_ = 0;
  reset_times_ = 0;
  game_index_ = 0;
  game_length_ = 0;
  reset_tick_ = GOOGLE_LONGLONG(0);
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400164::~Proto31400164() {
  SharedDtor();
}

void Proto31400164::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto31400164::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400164::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400164_descriptor_;
}

const Proto31400164& Proto31400164::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto31400164* Proto31400164::default_instance_ = NULL;

Proto31400164* Proto31400164::New() const {
  return new Proto31400164;
}

void Proto31400164::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    free_times_ = 0;
    reset_times_ = 0;
    game_index_ = 0;
    game_length_ = 0;
    reset_tick_ = GOOGLE_LONGLONG(0);
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400164::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 free_times = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &free_times_)));
          set_has_free_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_reset_times;
        break;
      }
      
      // optional int32 reset_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reset_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reset_times_)));
          set_has_reset_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_game_index;
        break;
      }
      
      // optional int32 game_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_game_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_index_)));
          set_has_game_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_game_length;
        break;
      }
      
      // optional int32 game_length = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_game_length:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &game_length_)));
          set_has_game_length();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_reset_tick;
        break;
      }
      
      // optional int64 reset_tick = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reset_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reset_tick_)));
          set_has_reset_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoItem item_list = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400164::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 free_times = 1;
  if (has_free_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->free_times(), output);
  }
  
  // optional int32 reset_times = 2;
  if (has_reset_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reset_times(), output);
  }
  
  // optional int32 game_index = 3;
  if (has_game_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->game_index(), output);
  }
  
  // optional int32 game_length = 4;
  if (has_game_length()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->game_length(), output);
  }
  
  // optional int64 reset_tick = 5;
  if (has_reset_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->reset_tick(), output);
  }
  
  // optional .ProtoThreeObj other_info = 6;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->other_info(), output);
  }
  
  // repeated .ProtoItem item_list = 7;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->item_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400164::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 free_times = 1;
  if (has_free_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->free_times(), target);
  }
  
  // optional int32 reset_times = 2;
  if (has_reset_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reset_times(), target);
  }
  
  // optional int32 game_index = 3;
  if (has_game_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->game_index(), target);
  }
  
  // optional int32 game_length = 4;
  if (has_game_length()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->game_length(), target);
  }
  
  // optional int64 reset_tick = 5;
  if (has_reset_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->reset_tick(), target);
  }
  
  // optional .ProtoThreeObj other_info = 6;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->other_info(), target);
  }
  
  // repeated .ProtoItem item_list = 7;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->item_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400164::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 free_times = 1;
    if (has_free_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->free_times());
    }
    
    // optional int32 reset_times = 2;
    if (has_reset_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reset_times());
    }
    
    // optional int32 game_index = 3;
    if (has_game_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->game_index());
    }
    
    // optional int32 game_length = 4;
    if (has_game_length()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->game_length());
    }
    
    // optional int64 reset_tick = 5;
    if (has_reset_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->reset_tick());
    }
    
    // optional .ProtoThreeObj other_info = 6;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  // repeated .ProtoItem item_list = 7;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400164::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400164* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400164*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400164::MergeFrom(const Proto31400164& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_free_times()) {
      set_free_times(from.free_times());
    }
    if (from.has_reset_times()) {
      set_reset_times(from.reset_times());
    }
    if (from.has_game_index()) {
      set_game_index(from.game_index());
    }
    if (from.has_game_length()) {
      set_game_length(from.game_length());
    }
    if (from.has_reset_tick()) {
      set_reset_tick(from.reset_tick());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400164::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400164::CopyFrom(const Proto31400164& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400164::IsInitialized() const {
  
  return true;
}

void Proto31400164::Swap(Proto31400164* other) {
  if (other != this) {
    std::swap(free_times_, other->free_times_);
    std::swap(reset_times_, other->reset_times_);
    std::swap(game_index_, other->game_index_);
    std::swap(game_length_, other->game_length_);
    std::swap(reset_tick_, other->reset_tick_);
    std::swap(other_info_, other->other_info_);
    item_list_.Swap(&other->item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400164::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400164_descriptor_;
  metadata.reflection = Proto31400164_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400033::kFirstIndexFieldNumber;
const int Proto31400033::kSecondIndexFieldNumber;
const int Proto31400033::kCostItemFieldNumber;
const int Proto31400033::kCashCouponUseFieldNumber;
const int Proto31400033::kAmountFieldNumber;
#endif  // !_MSC_VER

Proto31400033::Proto31400033()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400033::InitAsDefaultInstance() {
}

Proto31400033::Proto31400033(const Proto31400033& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400033::SharedCtor() {
  _cached_size_ = 0;
  first_index_ = 0;
  second_index_ = 0;
  cash_coupon_use_ = 0;
  amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400033::~Proto31400033() {
  SharedDtor();
}

void Proto31400033::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400033::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400033::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400033_descriptor_;
}

const Proto31400033& Proto31400033::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto31400033* Proto31400033::default_instance_ = NULL;

Proto31400033* Proto31400033::New() const {
  return new Proto31400033;
}

void Proto31400033::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    first_index_ = 0;
    second_index_ = 0;
    cash_coupon_use_ = 0;
    amount_ = 0;
  }
  cost_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400033::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 first_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_index_)));
          set_has_first_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_second_index;
        break;
      }
      
      // optional int32 second_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_index_)));
          set_has_second_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_cost_item;
        break;
      }
      
      // repeated .ProtoItem cost_item = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cost_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cost_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_cost_item;
        if (input->ExpectTag(32)) goto parse_cash_coupon_use;
        break;
      }
      
      // optional int32 cash_coupon_use = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cash_coupon_use:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cash_coupon_use_)));
          set_has_cash_coupon_use();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400033::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 first_index = 1;
  if (has_first_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->first_index(), output);
  }
  
  // optional int32 second_index = 2;
  if (has_second_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->second_index(), output);
  }
  
  // repeated .ProtoItem cost_item = 3;
  for (int i = 0; i < this->cost_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cost_item(i), output);
  }
  
  // optional int32 cash_coupon_use = 4;
  if (has_cash_coupon_use()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cash_coupon_use(), output);
  }
  
  // optional int32 amount = 5;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400033::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 first_index = 1;
  if (has_first_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->first_index(), target);
  }
  
  // optional int32 second_index = 2;
  if (has_second_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->second_index(), target);
  }
  
  // repeated .ProtoItem cost_item = 3;
  for (int i = 0; i < this->cost_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->cost_item(i), target);
  }
  
  // optional int32 cash_coupon_use = 4;
  if (has_cash_coupon_use()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cash_coupon_use(), target);
  }
  
  // optional int32 amount = 5;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400033::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 first_index = 1;
    if (has_first_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_index());
    }
    
    // optional int32 second_index = 2;
    if (has_second_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_index());
    }
    
    // optional int32 cash_coupon_use = 4;
    if (has_cash_coupon_use()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cash_coupon_use());
    }
    
    // optional int32 amount = 5;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
  }
  // repeated .ProtoItem cost_item = 3;
  total_size += 1 * this->cost_item_size();
  for (int i = 0; i < this->cost_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cost_item(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400033::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400033* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400033*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400033::MergeFrom(const Proto31400033& from) {
  GOOGLE_CHECK_NE(&from, this);
  cost_item_.MergeFrom(from.cost_item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_first_index()) {
      set_first_index(from.first_index());
    }
    if (from.has_second_index()) {
      set_second_index(from.second_index());
    }
    if (from.has_cash_coupon_use()) {
      set_cash_coupon_use(from.cash_coupon_use());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400033::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400033::CopyFrom(const Proto31400033& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400033::IsInitialized() const {
  
  return true;
}

void Proto31400033::Swap(Proto31400033* other) {
  if (other != this) {
    std::swap(first_index_, other->first_index_);
    std::swap(second_index_, other->second_index_);
    cost_item_.Swap(&other->cost_item_);
    std::swap(cash_coupon_use_, other->cash_coupon_use_);
    std::swap(amount_, other->amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400033::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400033_descriptor_;
  metadata.reflection = Proto31400033_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100239::kMountInfoFieldNumber;
const int Proto30100239::kFlagFieldNumber;
#endif  // !_MSC_VER

Proto30100239::Proto30100239()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100239::InitAsDefaultInstance() {
}

Proto30100239::Proto30100239(const Proto30100239& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100239::SharedCtor() {
  _cached_size_ = 0;
  flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100239::~Proto30100239() {
  SharedDtor();
}

void Proto30100239::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100239::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100239::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100239_descriptor_;
}

const Proto30100239& Proto30100239::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30100239* Proto30100239::default_instance_ = NULL;

Proto30100239* Proto30100239::New() const {
  return new Proto30100239;
}

void Proto30100239::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    flag_ = 0;
  }
  mount_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100239::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoThreeObj mount_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mount_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mount_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_mount_info;
        if (input->ExpectTag(16)) goto parse_flag;
        break;
      }
      
      // optional int32 flag = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100239::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoThreeObj mount_info = 1;
  for (int i = 0; i < this->mount_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->mount_info(i), output);
  }
  
  // optional int32 flag = 2;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100239::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoThreeObj mount_info = 1;
  for (int i = 0; i < this->mount_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->mount_info(i), target);
  }
  
  // optional int32 flag = 2;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100239::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 flag = 2;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }
    
  }
  // repeated .ProtoThreeObj mount_info = 1;
  total_size += 1 * this->mount_info_size();
  for (int i = 0; i < this->mount_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mount_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100239::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100239* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100239*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100239::MergeFrom(const Proto30100239& from) {
  GOOGLE_CHECK_NE(&from, this);
  mount_info_.MergeFrom(from.mount_info_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_flag()) {
      set_flag(from.flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100239::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100239::CopyFrom(const Proto30100239& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100239::IsInitialized() const {
  
  return true;
}

void Proto30100239::Swap(Proto30100239* other) {
  if (other != this) {
    mount_info_.Swap(&other->mount_info_);
    std::swap(flag_, other->flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100239::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100239_descriptor_;
  metadata.reflection = Proto30100239_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100120::kPermissionFieldNumber;
const int Proto30100120::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto30100120::Proto30100120()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100120::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto30100120::Proto30100120(const Proto30100120& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100120::SharedCtor() {
  _cached_size_ = 0;
  permission_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100120::~Proto30100120() {
  SharedDtor();
}

void Proto30100120::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto30100120::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100120::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100120_descriptor_;
}

const Proto30100120& Proto30100120::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30100120* Proto30100120::default_instance_ = NULL;

Proto30100120* Proto30100120::New() const {
  return new Proto30100120;
}

void Proto30100120::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    permission_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100120::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 permission = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permission_)));
          set_has_permission();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100120::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 permission = 1;
  if (has_permission()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->permission(), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100120::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 permission = 1;
  if (has_permission()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->permission(), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100120::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 permission = 1;
    if (has_permission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->permission());
    }
    
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100120::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100120* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100120*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100120::MergeFrom(const Proto30100120& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_permission()) {
      set_permission(from.permission());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100120::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100120::CopyFrom(const Proto30100120& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100120::IsInitialized() const {
  
  return true;
}

void Proto30100120::Swap(Proto30100120* other) {
  if (other != this) {
    std::swap(permission_, other->permission_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100120::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100120_descriptor_;
  metadata.reflection = Proto30100120_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400055::kPermissionFieldNumber;
const int Proto30400055::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto30400055::Proto30400055()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400055::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto30400055::Proto30400055(const Proto30400055& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400055::SharedCtor() {
  _cached_size_ = 0;
  permission_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400055::~Proto30400055() {
  SharedDtor();
}

void Proto30400055::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto30400055::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400055::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400055_descriptor_;
}

const Proto30400055& Proto30400055::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto30400055* Proto30400055::default_instance_ = NULL;

Proto30400055* Proto30400055::New() const {
  return new Proto30400055;
}

void Proto30400055::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    permission_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400055::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 permission = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &permission_)));
          set_has_permission();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400055::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 permission = 1;
  if (has_permission()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->permission(), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400055::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 permission = 1;
  if (has_permission()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->permission(), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400055::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 permission = 1;
    if (has_permission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->permission());
    }
    
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400055::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400055* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400055*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400055::MergeFrom(const Proto30400055& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_permission()) {
      set_permission(from.permission());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400055::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400055::CopyFrom(const Proto30400055& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400055::IsInitialized() const {
  
  return true;
}

void Proto30400055::Swap(Proto30400055* other) {
  if (other != this) {
    std::swap(permission_, other->permission_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400055::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400055_descriptor_;
  metadata.reflection = Proto30400055_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400145::kDayFieldNumber;
const int Proto31400145::kOpenFieldNumber;
const int Proto31400145::kGetStatusFieldNumber;
const int Proto31400145::kRefreshTickFieldNumber;
const int Proto31400145::kBuyMapFieldNumber;
#endif  // !_MSC_VER

Proto31400145::Proto31400145()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400145::InitAsDefaultInstance() {
}

Proto31400145::Proto31400145(const Proto31400145& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400145::SharedCtor() {
  _cached_size_ = 0;
  day_ = 0;
  open_ = 0;
  get_status_ = 0;
  refresh_tick_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400145::~Proto31400145() {
  SharedDtor();
}

void Proto31400145::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400145::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400145::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400145_descriptor_;
}

const Proto31400145& Proto31400145::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner008_2eproto();  return *default_instance_;
}

Proto31400145* Proto31400145::default_instance_ = NULL;

Proto31400145* Proto31400145::New() const {
  return new Proto31400145;
}

void Proto31400145::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    day_ = 0;
    open_ = 0;
    get_status_ = 0;
    refresh_tick_ = GOOGLE_LONGLONG(0);
  }
  buy_map_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400145::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 day = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_)));
          set_has_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_open;
        break;
      }
      
      // optional int32 open = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_)));
          set_has_open();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_get_status;
        break;
      }
      
      // optional int32 get_status = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_get_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &get_status_)));
          set_has_get_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_refresh_tick;
        break;
      }
      
      // optional int64 refresh_tick = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &refresh_tick_)));
          set_has_refresh_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_buy_map;
        break;
      }
      
      // repeated .ProtoPairObj buy_map = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buy_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buy_map()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_buy_map;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400145::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 day = 1;
  if (has_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->day(), output);
  }
  
  // optional int32 open = 2;
  if (has_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->open(), output);
  }
  
  // optional int32 get_status = 3;
  if (has_get_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->get_status(), output);
  }
  
  // optional int64 refresh_tick = 4;
  if (has_refresh_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->refresh_tick(), output);
  }
  
  // repeated .ProtoPairObj buy_map = 5;
  for (int i = 0; i < this->buy_map_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->buy_map(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400145::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 day = 1;
  if (has_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->day(), target);
  }
  
  // optional int32 open = 2;
  if (has_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->open(), target);
  }
  
  // optional int32 get_status = 3;
  if (has_get_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->get_status(), target);
  }
  
  // optional int64 refresh_tick = 4;
  if (has_refresh_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->refresh_tick(), target);
  }
  
  // repeated .ProtoPairObj buy_map = 5;
  for (int i = 0; i < this->buy_map_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->buy_map(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400145::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 day = 1;
    if (has_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->day());
    }
    
    // optional int32 open = 2;
    if (has_open()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open());
    }
    
    // optional int32 get_status = 3;
    if (has_get_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->get_status());
    }
    
    // optional int64 refresh_tick = 4;
    if (has_refresh_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->refresh_tick());
    }
    
  }
  // repeated .ProtoPairObj buy_map = 5;
  total_size += 1 * this->buy_map_size();
  for (int i = 0; i < this->buy_map_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buy_map(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400145::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400145* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400145*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400145::MergeFrom(const Proto31400145& from) {
  GOOGLE_CHECK_NE(&from, this);
  buy_map_.MergeFrom(from.buy_map_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_day()) {
      set_day(from.day());
    }
    if (from.has_open()) {
      set_open(from.open());
    }
    if (from.has_get_status()) {
      set_get_status(from.get_status());
    }
    if (from.has_refresh_tick()) {
      set_refresh_tick(from.refresh_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400145::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400145::CopyFrom(const Proto31400145& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400145::IsInitialized() const {
  
  return true;
}

void Proto31400145::Swap(Proto31400145* other) {
  if (other != this) {
    std::swap(day_, other->day_);
    std::swap(open_, other->open_);
    std::swap(get_status_, other->get_status_);
    std::swap(refresh_tick_, other->refresh_tick_);
    buy_map_.Swap(&other->buy_map_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400145::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400145_descriptor_;
  metadata.reflection = Proto31400145_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
