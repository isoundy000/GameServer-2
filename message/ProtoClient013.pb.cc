// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient013.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto10401305_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10401305_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401305_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401305_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400153_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400153_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400153_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400153_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100157_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100157_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400232_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400232_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400009_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400009_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400009_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400009_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400010_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400010_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100804_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100804_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100805_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100805_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100806_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100806_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100807_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100807_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100801_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100801_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100802_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100802_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100807_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100807_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400923_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400923_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400325_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400325_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100802_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100802_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100645_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100645_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400320_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400320_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400010_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400010_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400010_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400010_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400905_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400905_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400909_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400909_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400910_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400910_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400622_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400622_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400622_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400622_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400623_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400623_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400623_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400623_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80101407_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80101407_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100805_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100805_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80101408_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80101408_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80101409_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80101409_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400100_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400100_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400108_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400108_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400382_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400382_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11402401_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11402401_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11402402_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11402402_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11402403_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11402403_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11402404_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11402404_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51402403_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51402403_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51402404_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51402404_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400241_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400241_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400242_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400242_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400246_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400246_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400247_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400247_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51402402_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51402402_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400243_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400243_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400233_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400233_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient013_2eproto() {
  protobuf_AddDesc_ProtoClient013_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient013.proto");
  GOOGLE_CHECK(file != NULL);
  Proto10401305_descriptor_ = file->message_type(0);
  static const int Proto10401305_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401305, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401305, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401305, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401305, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401305, pixel_y_),
  };
  Proto10401305_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10401305_descriptor_,
      Proto10401305::default_instance_,
      Proto10401305_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401305, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401305, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10401305));
  Proto50401305_descriptor_ = file->message_type(1);
  static const int Proto50401305_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401305, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401305, times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401305, left_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401305, flag_),
  };
  Proto50401305_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401305_descriptor_,
      Proto50401305::default_instance_,
      Proto50401305_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401305, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401305, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401305));
  Proto11400153_descriptor_ = file->message_type(2);
  static const int Proto11400153_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400153, index_),
  };
  Proto11400153_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400153_descriptor_,
      Proto11400153::default_instance_,
      Proto11400153_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400153, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400153, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400153));
  Proto51400153_descriptor_ = file->message_type(3);
  static const int Proto51400153_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400153, new_tag_),
  };
  Proto51400153_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400153_descriptor_,
      Proto51400153::default_instance_,
      Proto51400153_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400153, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400153, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400153));
  Proto50100157_descriptor_ = file->message_type(4);
  static const int Proto50100157_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100157, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100157, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100157, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100157, pixel_y_),
  };
  Proto50100157_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100157_descriptor_,
      Proto50100157::default_instance_,
      Proto50100157_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100157, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100157, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100157));
  Proto80400232_descriptor_ = file->message_type(5);
  static const int Proto80400232_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400232, item_list_),
  };
  Proto80400232_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400232_descriptor_,
      Proto80400232::default_instance_,
      Proto80400232_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400232, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400232, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400232));
  Proto11400009_descriptor_ = file->message_type(6);
  static const int Proto11400009_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400009, priority_),
  };
  Proto11400009_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400009_descriptor_,
      Proto11400009::default_instance_,
      Proto11400009_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400009, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400009, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400009));
  Proto51400009_descriptor_ = file->message_type(7);
  static const int Proto51400009_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400009, act_list_),
  };
  Proto51400009_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400009_descriptor_,
      Proto51400009::default_instance_,
      Proto51400009_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400009, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400009, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400009));
  Proto11400010_descriptor_ = file->message_type(8);
  static const int Proto11400010_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400010, item_num_),
  };
  Proto11400010_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400010_descriptor_,
      Proto11400010::default_instance_,
      Proto11400010_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400010, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400010, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400010));
  Proto10100804_descriptor_ = file->message_type(9);
  static const int Proto10100804_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100804, item_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100804, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100804, item_num_),
  };
  Proto10100804_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100804_descriptor_,
      Proto10100804::default_instance_,
      Proto10100804_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100804, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100804, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100804));
  Proto10100805_descriptor_ = file->message_type(10);
  static const int Proto10100805_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100805, item_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100805, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100805, item_num_),
  };
  Proto10100805_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100805_descriptor_,
      Proto10100805::default_instance_,
      Proto10100805_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100805, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100805, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100805));
  Proto10100806_descriptor_ = file->message_type(11);
  static const int Proto10100806_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100806, apply_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100806, opt_),
  };
  Proto10100806_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100806_descriptor_,
      Proto10100806::default_instance_,
      Proto10100806_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100806, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100806, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100806));
  Proto10100807_descriptor_ = file->message_type(12);
  static const int Proto10100807_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100807, page_index_),
  };
  Proto10100807_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100807_descriptor_,
      Proto10100807::default_instance_,
      Proto10100807_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100807, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100807, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100807));
  Proto50100801_descriptor_ = file->message_type(13);
  static const int Proto50100801_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100801, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100801, is_leader_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100801, left_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100801, total_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100801, pack_size_),
  };
  Proto50100801_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100801_descriptor_,
      Proto50100801::default_instance_,
      Proto50100801_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100801, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100801, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100801));
  Proto50100802_descriptor_ = file->message_type(14);
  static const int Proto50100802_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100802, apply_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100802, page_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100802, total_page_),
  };
  Proto50100802_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100802_descriptor_,
      Proto50100802::default_instance_,
      Proto50100802_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100802, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100802, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100802));
  Proto50100807_descriptor_ = file->message_type(15);
  static const int Proto50100807_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100807, apply_his_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100807, page_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100807, total_page_),
  };
  Proto50100807_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100807_descriptor_,
      Proto50100807::default_instance_,
      Proto50100807_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100807, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100807, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100807));
  Proto80400923_descriptor_ = file->message_type(16);
  static const int Proto80400923_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400923, rescue_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400923, rescue_left_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400923, rescue_id_),
  };
  Proto80400923_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400923_descriptor_,
      Proto80400923::default_instance_,
      Proto80400923_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400923, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400923, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400923));
  Proto50400325_descriptor_ = file->message_type(17);
  static const int Proto50400325_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400325, escort_info_),
  };
  Proto50400325_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400325_descriptor_,
      Proto50400325::default_instance_,
      Proto50400325_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400325, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400325, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400325));
  Proto10100802_descriptor_ = file->message_type(18);
  static const int Proto10100802_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100802, page_index_),
  };
  Proto10100802_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100802_descriptor_,
      Proto10100802::default_instance_,
      Proto10100802_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100802, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100802, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100802));
  Proto50100645_descriptor_ = file->message_type(19);
  static const int Proto50100645_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100645, car_id_),
  };
  Proto50100645_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100645_descriptor_,
      Proto50100645::default_instance_,
      Proto50100645_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100645, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100645, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100645));
  Proto80400320_descriptor_ = file->message_type(20);
  static const int Proto80400320_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400320, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400320, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400320, gather_good_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400320, other_info_),
  };
  Proto80400320_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400320_descriptor_,
      Proto80400320::default_instance_,
      Proto80400320_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400320, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400320, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400320));
  Proto10400010_descriptor_ = file->message_type(21);
  static const int Proto10400010_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400010, gather_good_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400010, other_info_),
  };
  Proto10400010_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400010_descriptor_,
      Proto10400010::default_instance_,
      Proto10400010_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400010, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400010, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400010));
  Proto50400010_descriptor_ = file->message_type(22);
  static const int Proto50400010_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400010, gather_good_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400010, other_info_),
  };
  Proto50400010_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400010_descriptor_,
      Proto50400010::default_instance_,
      Proto50400010_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400010, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400010, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400010));
  Proto51400905_descriptor_ = file->message_type(23);
  static const int Proto51400905_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400905, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400905, cur_lucky_),
  };
  Proto51400905_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400905_descriptor_,
      Proto51400905::default_instance_,
      Proto51400905_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400905, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400905, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400905));
  Proto51400909_descriptor_ = file->message_type(24);
  static const int Proto51400909_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400909, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400909, pack_size_),
  };
  Proto51400909_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400909_descriptor_,
      Proto51400909::default_instance_,
      Proto51400909_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400909, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400909, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400909));
  Proto11400910_descriptor_ = file->message_type(25);
  static const int Proto11400910_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400910, opt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400910, item_index_),
  };
  Proto11400910_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400910_descriptor_,
      Proto11400910::default_instance_,
      Proto11400910_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400910, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400910, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400910));
  Proto11400622_descriptor_ = file->message_type(26);
  static const int Proto11400622_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400622, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400622, pkg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400622, pkg_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400622, is_force_buy_),
  };
  Proto11400622_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400622_descriptor_,
      Proto11400622::default_instance_,
      Proto11400622_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400622, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400622, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400622));
  Proto51400622_descriptor_ = file->message_type(27);
  static const int Proto51400622_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400622, aim_item_id_),
  };
  Proto51400622_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400622_descriptor_,
      Proto51400622::default_instance_,
      Proto51400622_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400622, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400622, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400622));
  Proto11400623_descriptor_ = file->message_type(28);
  static const int Proto11400623_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400623, pack_item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400623, puton_item_list_),
  };
  Proto11400623_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400623_descriptor_,
      Proto11400623::default_instance_,
      Proto11400623_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400623, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400623, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400623));
  Proto51400623_descriptor_ = file->message_type(29);
  static const int Proto51400623_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400623, result_item_list_),
  };
  Proto51400623_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400623_descriptor_,
      Proto51400623::default_instance_,
      Proto51400623_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400623, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400623, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400623));
  Proto80101407_descriptor_ = file->message_type(30);
  static const int Proto80101407_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101407, is_has_wedding_),
  };
  Proto80101407_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80101407_descriptor_,
      Proto80101407::default_instance_,
      Proto80101407_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101407, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101407, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80101407));
  Proto50100805_descriptor_ = file->message_type(31);
  static const int Proto50100805_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100805, left_times_),
  };
  Proto50100805_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100805_descriptor_,
      Proto50100805::default_instance_,
      Proto50100805_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100805, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100805, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100805));
  Proto80101408_descriptor_ = file->message_type(32);
  static const int Proto80101408_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101408, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101408, item_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101408, sender_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101408, sender_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101408, receiver_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101408, receiver_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101408, other_info_),
  };
  Proto80101408_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80101408_descriptor_,
      Proto80101408::default_instance_,
      Proto80101408_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101408, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101408, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80101408));
  Proto80101409_descriptor_ = file->message_type(33);
  static const int Proto80101409_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101409, float_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101409, partner_id_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101409, partner_career_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101409, partner_id_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101409, partner_career_2_),
  };
  Proto80101409_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80101409_descriptor_,
      Proto80101409::default_instance_,
      Proto80101409_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101409, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101409, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80101409));
  Proto80400100_descriptor_ = file->message_type(34);
  static const int Proto80400100_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400100, show_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400100, hide_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400100, icon_type_),
  };
  Proto80400100_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400100_descriptor_,
      Proto80400100::default_instance_,
      Proto80400100_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400100, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400100, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400100));
  Proto80400108_descriptor_ = file->message_type(35);
  static const int Proto80400108_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400108, notify_list_),
  };
  Proto80400108_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400108_descriptor_,
      Proto80400108::default_instance_,
      Proto80400108_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400108, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400108, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400108));
  Proto80400382_descriptor_ = file->message_type(36);
  static const int Proto80400382_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400382, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400382, label_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400382, weapon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400382, clothes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400382, fashion_weapon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400382, fashion_clothes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400382, career_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400382, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400382, top_wing_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400382, top_wing_level_),
  };
  Proto80400382_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400382_descriptor_,
      Proto80400382::default_instance_,
      Proto80400382_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400382, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400382, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400382));
  Proto11402401_descriptor_ = file->message_type(37);
  static const int Proto11402401_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402401, role_id_),
  };
  Proto11402401_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11402401_descriptor_,
      Proto11402401::default_instance_,
      Proto11402401_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402401, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402401, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11402401));
  Proto11402402_descriptor_ = file->message_type(38);
  static const int Proto11402402_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402402, respone_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402402, role_id_),
  };
  Proto11402402_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11402402_descriptor_,
      Proto11402402::default_instance_,
      Proto11402402_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402402, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402402, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11402402));
  Proto11402403_descriptor_ = file->message_type(39);
  static const int Proto11402403_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402403, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402403, pack_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402403, item_amount_),
  };
  Proto11402403_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11402403_descriptor_,
      Proto11402403::default_instance_,
      Proto11402403_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402403, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402403, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11402403));
  Proto11402404_descriptor_ = file->message_type(40);
  static const int Proto11402404_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402404, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402404, pack_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402404, item_amount_),
  };
  Proto11402404_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11402404_descriptor_,
      Proto11402404::default_instance_,
      Proto11402404_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402404, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11402404, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11402404));
  Proto51402403_descriptor_ = file->message_type(41);
  static const int Proto51402403_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402403, item_list_),
  };
  Proto51402403_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51402403_descriptor_,
      Proto51402403::default_instance_,
      Proto51402403_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402403, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402403, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51402403));
  Proto51402404_descriptor_ = file->message_type(42);
  static const int Proto51402404_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402404, item_list_),
  };
  Proto51402404_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51402404_descriptor_,
      Proto51402404::default_instance_,
      Proto51402404_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402404, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402404, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51402404));
  Proto80400241_descriptor_ = file->message_type(43);
  static const int Proto80400241_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400241, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400241, role_name_),
  };
  Proto80400241_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400241_descriptor_,
      Proto80400241::default_instance_,
      Proto80400241_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400241, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400241, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400241));
  Proto80400242_descriptor_ = file->message_type(44);
  static const int Proto80400242_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400242, respone_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400242, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400242, role_name_),
  };
  Proto80400242_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400242_descriptor_,
      Proto80400242::default_instance_,
      Proto80400242_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400242, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400242, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400242));
  Proto80400246_descriptor_ = file->message_type(45);
  static const int Proto80400246_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400246, item_list_),
  };
  Proto80400246_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400246_descriptor_,
      Proto80400246::default_instance_,
      Proto80400246_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400246, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400246, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400246));
  Proto80400247_descriptor_ = file->message_type(46);
  static const int Proto80400247_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400247, item_list_),
  };
  Proto80400247_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400247_descriptor_,
      Proto80400247::default_instance_,
      Proto80400247_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400247, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400247, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400247));
  Proto51402402_descriptor_ = file->message_type(47);
  static const int Proto51402402_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402402, condition_),
  };
  Proto51402402_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51402402_descriptor_,
      Proto51402402::default_instance_,
      Proto51402402_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402402, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51402402, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51402402));
  Proto80400243_descriptor_ = file->message_type(48);
  static const int Proto80400243_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400243, role_id_),
  };
  Proto80400243_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400243_descriptor_,
      Proto80400243::default_instance_,
      Proto80400243_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400243, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400243, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400243));
  Proto80400233_descriptor_ = file->message_type(49);
  static const int Proto80400233_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400233, role_list_),
  };
  Proto80400233_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400233_descriptor_,
      Proto80400233::default_instance_,
      Proto80400233_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400233, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400233, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400233));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient013_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10401305_descriptor_, &Proto10401305::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401305_descriptor_, &Proto50401305::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400153_descriptor_, &Proto11400153::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400153_descriptor_, &Proto51400153::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100157_descriptor_, &Proto50100157::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400232_descriptor_, &Proto80400232::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400009_descriptor_, &Proto11400009::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400009_descriptor_, &Proto51400009::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400010_descriptor_, &Proto11400010::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100804_descriptor_, &Proto10100804::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100805_descriptor_, &Proto10100805::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100806_descriptor_, &Proto10100806::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100807_descriptor_, &Proto10100807::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100801_descriptor_, &Proto50100801::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100802_descriptor_, &Proto50100802::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100807_descriptor_, &Proto50100807::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400923_descriptor_, &Proto80400923::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400325_descriptor_, &Proto50400325::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100802_descriptor_, &Proto10100802::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100645_descriptor_, &Proto50100645::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400320_descriptor_, &Proto80400320::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400010_descriptor_, &Proto10400010::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400010_descriptor_, &Proto50400010::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400905_descriptor_, &Proto51400905::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400909_descriptor_, &Proto51400909::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400910_descriptor_, &Proto11400910::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400622_descriptor_, &Proto11400622::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400622_descriptor_, &Proto51400622::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400623_descriptor_, &Proto11400623::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400623_descriptor_, &Proto51400623::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80101407_descriptor_, &Proto80101407::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100805_descriptor_, &Proto50100805::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80101408_descriptor_, &Proto80101408::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80101409_descriptor_, &Proto80101409::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400100_descriptor_, &Proto80400100::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400108_descriptor_, &Proto80400108::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400382_descriptor_, &Proto80400382::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11402401_descriptor_, &Proto11402401::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11402402_descriptor_, &Proto11402402::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11402403_descriptor_, &Proto11402403::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11402404_descriptor_, &Proto11402404::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51402403_descriptor_, &Proto51402403::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51402404_descriptor_, &Proto51402404::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400241_descriptor_, &Proto80400241::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400242_descriptor_, &Proto80400242::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400246_descriptor_, &Proto80400246::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400247_descriptor_, &Proto80400247::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51402402_descriptor_, &Proto51402402::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400243_descriptor_, &Proto80400243::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400233_descriptor_, &Proto80400233::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient013_2eproto() {
  delete Proto10401305::default_instance_;
  delete Proto10401305_reflection_;
  delete Proto50401305::default_instance_;
  delete Proto50401305_reflection_;
  delete Proto11400153::default_instance_;
  delete Proto11400153_reflection_;
  delete Proto51400153::default_instance_;
  delete Proto51400153_reflection_;
  delete Proto50100157::default_instance_;
  delete Proto50100157_reflection_;
  delete Proto80400232::default_instance_;
  delete Proto80400232_reflection_;
  delete Proto11400009::default_instance_;
  delete Proto11400009_reflection_;
  delete Proto51400009::default_instance_;
  delete Proto51400009_reflection_;
  delete Proto11400010::default_instance_;
  delete Proto11400010_reflection_;
  delete Proto10100804::default_instance_;
  delete Proto10100804_reflection_;
  delete Proto10100805::default_instance_;
  delete Proto10100805_reflection_;
  delete Proto10100806::default_instance_;
  delete Proto10100806_reflection_;
  delete Proto10100807::default_instance_;
  delete Proto10100807_reflection_;
  delete Proto50100801::default_instance_;
  delete Proto50100801_reflection_;
  delete Proto50100802::default_instance_;
  delete Proto50100802_reflection_;
  delete Proto50100807::default_instance_;
  delete Proto50100807_reflection_;
  delete Proto80400923::default_instance_;
  delete Proto80400923_reflection_;
  delete Proto50400325::default_instance_;
  delete Proto50400325_reflection_;
  delete Proto10100802::default_instance_;
  delete Proto10100802_reflection_;
  delete Proto50100645::default_instance_;
  delete Proto50100645_reflection_;
  delete Proto80400320::default_instance_;
  delete Proto80400320_reflection_;
  delete Proto10400010::default_instance_;
  delete Proto10400010_reflection_;
  delete Proto50400010::default_instance_;
  delete Proto50400010_reflection_;
  delete Proto51400905::default_instance_;
  delete Proto51400905_reflection_;
  delete Proto51400909::default_instance_;
  delete Proto51400909_reflection_;
  delete Proto11400910::default_instance_;
  delete Proto11400910_reflection_;
  delete Proto11400622::default_instance_;
  delete Proto11400622_reflection_;
  delete Proto51400622::default_instance_;
  delete Proto51400622_reflection_;
  delete Proto11400623::default_instance_;
  delete Proto11400623_reflection_;
  delete Proto51400623::default_instance_;
  delete Proto51400623_reflection_;
  delete Proto80101407::default_instance_;
  delete Proto80101407_reflection_;
  delete Proto50100805::default_instance_;
  delete Proto50100805_reflection_;
  delete Proto80101408::default_instance_;
  delete Proto80101408_reflection_;
  delete Proto80101409::default_instance_;
  delete Proto80101409_reflection_;
  delete Proto80400100::default_instance_;
  delete Proto80400100_reflection_;
  delete Proto80400108::default_instance_;
  delete Proto80400108_reflection_;
  delete Proto80400382::default_instance_;
  delete Proto80400382_reflection_;
  delete Proto11402401::default_instance_;
  delete Proto11402401_reflection_;
  delete Proto11402402::default_instance_;
  delete Proto11402402_reflection_;
  delete Proto11402403::default_instance_;
  delete Proto11402403_reflection_;
  delete Proto11402404::default_instance_;
  delete Proto11402404_reflection_;
  delete Proto51402403::default_instance_;
  delete Proto51402403_reflection_;
  delete Proto51402404::default_instance_;
  delete Proto51402404_reflection_;
  delete Proto80400241::default_instance_;
  delete Proto80400241_reflection_;
  delete Proto80400242::default_instance_;
  delete Proto80400242_reflection_;
  delete Proto80400246::default_instance_;
  delete Proto80400246_reflection_;
  delete Proto80400247::default_instance_;
  delete Proto80400247_reflection_;
  delete Proto51402402::default_instance_;
  delete Proto51402402_reflection_;
  delete Proto80400243::default_instance_;
  delete Proto80400243_reflection_;
  delete Proto80400233::default_instance_;
  delete Proto80400233_reflection_;
}

void protobuf_AddDesc_ProtoClient013_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient013.proto\032\021ProtoPublic.prot"
    "o\"b\n\rProto10401305\022\017\n\007role_id\030\001 \001(\003\022\014\n\004f"
    "lag\030\002 \001(\005\022\020\n\010scene_id\030\003 \001(\005\022\017\n\007pixel_x\030\004"
    " \001(\005\022\017\n\007pixel_y\030\005 \001(\005\"N\n\rProto50401305\022\014"
    "\n\004gold\030\001 \001(\005\022\r\n\005times\030\002 \001(\005\022\022\n\nleft_time"
    "s\030\003 \001(\005\022\014\n\004flag\030\004 \001(\005\"\036\n\rProto11400153\022\r"
    "\n\005index\030\001 \001(\005\" \n\rProto51400153\022\017\n\007new_ta"
    "g\030\001 \001(\005\"T\n\rProto50100157\022\017\n\007role_id\030\001 \001("
    "\003\022\020\n\010scene_id\030\002 \001(\005\022\017\n\007pixel_x\030\003 \001(\005\022\017\n\007"
    "pixel_y\030\004 \001(\005\".\n\rProto80400232\022\035\n\titem_l"
    "ist\030\001 \003(\0132\n.ProtoItem\"!\n\rProto11400009\022\020"
    "\n\010priority\030\001 \001(\005\"1\n\rProto51400009\022 \n\010act"
    "_list\030\001 \003(\0132\016.PActPanelInfo\"!\n\rProto1140"
    "0010\022\020\n\010item_num\030\001 \001(\005\"F\n\rProto10100804\022"
    "\022\n\nitem_index\030\001 \001(\005\022\017\n\007item_id\030\002 \001(\005\022\020\n\010"
    "item_num\030\003 \001(\005\"F\n\rProto10100805\022\022\n\nitem_"
    "index\030\001 \001(\005\022\017\n\007item_id\030\002 \001(\005\022\020\n\010item_num"
    "\030\003 \001(\005\".\n\rProto10100806\022\020\n\010apply_id\030\001 \001("
    "\003\022\013\n\003opt\030\002 \001(\005\"#\n\rProto10100807\022\022\n\npage_"
    "index\030\001 \001(\005\"}\n\rProto50100801\022\035\n\titem_lis"
    "t\030\001 \003(\0132\n.ProtoItem\022\021\n\tis_leader\030\002 \001(\005\022\022"
    "\n\nleft_times\030\003 \001(\005\022\023\n\013total_times\030\004 \001(\005\022"
    "\021\n\tpack_size\030\005 \001(\005\"c\n\rProto50100802\022*\n\na"
    "pply_list\030\001 \003(\0132\026.ProtoLeagueStoreApply\022"
    "\022\n\npage_index\030\002 \001(\005\022\022\n\ntotal_page\030\003 \001(\005\""
    "e\n\rProto50100807\022,\n\tapply_his\030\001 \003(\0132\031.Pr"
    "otoLeagueStoreApplyHis\022\022\n\npage_index\030\002 \001"
    "(\005\022\022\n\ntotal_page\030\003 \001(\005\"L\n\rProto80400923\022"
    "\023\n\013rescue_sort\030\001 \001(\005\022\023\n\013rescue_left\030\002 \001("
    "\005\022\021\n\trescue_id\030\003 \001(\003\"9\n\rProto50400325\022(\n"
    "\013escort_info\030\001 \001(\0132\023.ProtoEscortMapItem\""
    "#\n\rProto10100802\022\022\n\npage_index\030\001 \001(\005\"\037\n\r"
    "Proto50100645\022\016\n\006car_id\030\001 \001(\003\"k\n\rProto80"
    "400320\022\017\n\007role_id\030\001 \001(\003\022\r\n\005state\030\002 \001(\005\022\026"
    "\n\016gather_good_id\030\003 \001(\003\022\"\n\nother_info\030\004 \001"
    "(\0132\016.ProtoThreeObj\"K\n\rProto10400010\022\026\n\016g"
    "ather_good_id\030\001 \001(\003\022\"\n\nother_info\030\002 \001(\0132"
    "\016.ProtoThreeObj\"K\n\rProto50400010\022\026\n\016gath"
    "er_good_id\030\001 \001(\003\022\"\n\nother_info\030\002 \001(\0132\016.P"
    "rotoThreeObj\"A\n\rProto51400905\022\035\n\titem_li"
    "st\030\001 \003(\0132\n.ProtoItem\022\021\n\tcur_lucky\030\002 \001(\005\""
    "A\n\rProto51400909\022\035\n\titem_list\030\001 \003(\0132\n.Pr"
    "otoItem\022\021\n\tpack_size\030\002 \001(\005\"0\n\rProto11400"
    "910\022\013\n\003opt\030\001 \001(\005\022\022\n\nitem_index\030\002 \001(\005\"[\n\r"
    "Proto11400622\022\017\n\007item_id\030\001 \001(\005\022\020\n\010pkg_ty"
    "pe\030\002 \001(\005\022\021\n\tpkg_index\030\003 \001(\005\022\024\n\014is_force_"
    "buy\030\004 \001(\005\"$\n\rProto51400622\022\023\n\013aim_item_i"
    "d\030\001 \001(\005\"X\n\rProto11400623\022\"\n\016pack_item_li"
    "st\030\001 \003(\0132\n.ProtoItem\022#\n\017puton_item_list\030"
    "\002 \003(\0132\n.ProtoItem\"5\n\rProto51400623\022$\n\020re"
    "sult_item_list\030\001 \003(\0132\n.ProtoItem\"\'\n\rProt"
    "o80101407\022\026\n\016is_has_wedding\030\001 \001(\005\"#\n\rPro"
    "to50100805\022\022\n\nleft_times\030\001 \001(\005\"\252\001\n\rProto"
    "80101408\022\017\n\007item_id\030\001 \001(\005\022\020\n\010item_num\030\002 "
    "\001(\005\022\021\n\tsender_id\030\003 \001(\003\022\023\n\013sender_name\030\004 "
    "\001(\t\022\023\n\013receiver_id\030\005 \001(\003\022\025\n\rreceiver_nam"
    "e\030\006 \001(\t\022\"\n\nother_info\030\007 \001(\0132\016.ProtoThree"
    "Obj\"\201\001\n\rProto80101409\022\020\n\010float_id\030\001 \001(\003\022"
    "\024\n\014partner_id_1\030\002 \001(\003\022\030\n\020partner_career_"
    "1\030\003 \001(\005\022\024\n\014partner_id_2\030\004 \001(\003\022\030\n\020partner"
    "_career_2\030\005 \001(\005\"W\n\rProto80400100\022\021\n\tshow"
    "_list\030\001 \003(\005\022\021\n\thide_list\030\002 \003(\005\022 \n\ticon_t"
    "ype\030\003 \003(\0132\r.ProtoPairObj\";\n\rProto8040010"
    "8\022*\n\013notify_list\030\001 \003(\0132\025.ProtoActRewardN"
    "otify\"\313\001\n\rProto80400382\022\017\n\007role_id\030\001 \001(\003"
    "\022\r\n\005label\030\002 \001(\005\022\016\n\006weapon\030\003 \001(\005\022\017\n\007cloth"
    "es\030\004 \001(\005\022\026\n\016fashion_weapon\030\005 \001(\005\022\027\n\017fash"
    "ion_clothes\030\006 \001(\005\022\016\n\006career\030\007 \001(\005\022\013\n\003sex"
    "\030\010 \001(\005\022\023\n\013top_wing_id\030\t \001(\005\022\026\n\016top_wing_"
    "level\030\n \001(\005\" \n\rProto11402401\022\017\n\007role_id\030"
    "\001 \001(\003\"6\n\rProto11402402\022\024\n\014respone_type\030\001"
    " \001(\005\022\017\n\007role_id\030\002 \001(\003\"I\n\rProto11402403\022\017"
    "\n\007item_id\030\001 \001(\005\022\022\n\npack_index\030\002 \001(\005\022\023\n\013i"
    "tem_amount\030\003 \001(\005\"I\n\rProto11402404\022\017\n\007ite"
    "m_id\030\001 \001(\005\022\022\n\npack_index\030\002 \001(\005\022\023\n\013item_a"
    "mount\030\003 \001(\005\".\n\rProto51402403\022\035\n\titem_lis"
    "t\030\001 \003(\0132\n.ProtoItem\".\n\rProto51402404\022\035\n\t"
    "item_list\030\001 \003(\0132\n.ProtoItem\"3\n\rProto8040"
    "0241\022\017\n\007role_id\030\001 \001(\003\022\021\n\trole_name\030\002 \001(\t"
    "\"I\n\rProto80400242\022\024\n\014respone_type\030\001 \001(\005\022"
    "\017\n\007role_id\030\002 \001(\003\022\021\n\trole_name\030\003 \001(\t\".\n\rP"
    "roto80400246\022\035\n\titem_list\030\001 \003(\0132\n.ProtoI"
    "tem\".\n\rProto80400247\022\035\n\titem_list\030\001 \003(\0132"
    "\n.ProtoItem\"\"\n\rProto51402402\022\021\n\tconditio"
    "n\030\001 \001(\005\" \n\rProto80400243\022\017\n\007role_id\030\001 \001("
    "\003\"2\n\rProto80400233\022!\n\trole_list\030\001 \003(\0132\016."
    "ProtoNearRole", 3453);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient013.proto", &protobuf_RegisterTypes);
  Proto10401305::default_instance_ = new Proto10401305();
  Proto50401305::default_instance_ = new Proto50401305();
  Proto11400153::default_instance_ = new Proto11400153();
  Proto51400153::default_instance_ = new Proto51400153();
  Proto50100157::default_instance_ = new Proto50100157();
  Proto80400232::default_instance_ = new Proto80400232();
  Proto11400009::default_instance_ = new Proto11400009();
  Proto51400009::default_instance_ = new Proto51400009();
  Proto11400010::default_instance_ = new Proto11400010();
  Proto10100804::default_instance_ = new Proto10100804();
  Proto10100805::default_instance_ = new Proto10100805();
  Proto10100806::default_instance_ = new Proto10100806();
  Proto10100807::default_instance_ = new Proto10100807();
  Proto50100801::default_instance_ = new Proto50100801();
  Proto50100802::default_instance_ = new Proto50100802();
  Proto50100807::default_instance_ = new Proto50100807();
  Proto80400923::default_instance_ = new Proto80400923();
  Proto50400325::default_instance_ = new Proto50400325();
  Proto10100802::default_instance_ = new Proto10100802();
  Proto50100645::default_instance_ = new Proto50100645();
  Proto80400320::default_instance_ = new Proto80400320();
  Proto10400010::default_instance_ = new Proto10400010();
  Proto50400010::default_instance_ = new Proto50400010();
  Proto51400905::default_instance_ = new Proto51400905();
  Proto51400909::default_instance_ = new Proto51400909();
  Proto11400910::default_instance_ = new Proto11400910();
  Proto11400622::default_instance_ = new Proto11400622();
  Proto51400622::default_instance_ = new Proto51400622();
  Proto11400623::default_instance_ = new Proto11400623();
  Proto51400623::default_instance_ = new Proto51400623();
  Proto80101407::default_instance_ = new Proto80101407();
  Proto50100805::default_instance_ = new Proto50100805();
  Proto80101408::default_instance_ = new Proto80101408();
  Proto80101409::default_instance_ = new Proto80101409();
  Proto80400100::default_instance_ = new Proto80400100();
  Proto80400108::default_instance_ = new Proto80400108();
  Proto80400382::default_instance_ = new Proto80400382();
  Proto11402401::default_instance_ = new Proto11402401();
  Proto11402402::default_instance_ = new Proto11402402();
  Proto11402403::default_instance_ = new Proto11402403();
  Proto11402404::default_instance_ = new Proto11402404();
  Proto51402403::default_instance_ = new Proto51402403();
  Proto51402404::default_instance_ = new Proto51402404();
  Proto80400241::default_instance_ = new Proto80400241();
  Proto80400242::default_instance_ = new Proto80400242();
  Proto80400246::default_instance_ = new Proto80400246();
  Proto80400247::default_instance_ = new Proto80400247();
  Proto51402402::default_instance_ = new Proto51402402();
  Proto80400243::default_instance_ = new Proto80400243();
  Proto80400233::default_instance_ = new Proto80400233();
  Proto10401305::default_instance_->InitAsDefaultInstance();
  Proto50401305::default_instance_->InitAsDefaultInstance();
  Proto11400153::default_instance_->InitAsDefaultInstance();
  Proto51400153::default_instance_->InitAsDefaultInstance();
  Proto50100157::default_instance_->InitAsDefaultInstance();
  Proto80400232::default_instance_->InitAsDefaultInstance();
  Proto11400009::default_instance_->InitAsDefaultInstance();
  Proto51400009::default_instance_->InitAsDefaultInstance();
  Proto11400010::default_instance_->InitAsDefaultInstance();
  Proto10100804::default_instance_->InitAsDefaultInstance();
  Proto10100805::default_instance_->InitAsDefaultInstance();
  Proto10100806::default_instance_->InitAsDefaultInstance();
  Proto10100807::default_instance_->InitAsDefaultInstance();
  Proto50100801::default_instance_->InitAsDefaultInstance();
  Proto50100802::default_instance_->InitAsDefaultInstance();
  Proto50100807::default_instance_->InitAsDefaultInstance();
  Proto80400923::default_instance_->InitAsDefaultInstance();
  Proto50400325::default_instance_->InitAsDefaultInstance();
  Proto10100802::default_instance_->InitAsDefaultInstance();
  Proto50100645::default_instance_->InitAsDefaultInstance();
  Proto80400320::default_instance_->InitAsDefaultInstance();
  Proto10400010::default_instance_->InitAsDefaultInstance();
  Proto50400010::default_instance_->InitAsDefaultInstance();
  Proto51400905::default_instance_->InitAsDefaultInstance();
  Proto51400909::default_instance_->InitAsDefaultInstance();
  Proto11400910::default_instance_->InitAsDefaultInstance();
  Proto11400622::default_instance_->InitAsDefaultInstance();
  Proto51400622::default_instance_->InitAsDefaultInstance();
  Proto11400623::default_instance_->InitAsDefaultInstance();
  Proto51400623::default_instance_->InitAsDefaultInstance();
  Proto80101407::default_instance_->InitAsDefaultInstance();
  Proto50100805::default_instance_->InitAsDefaultInstance();
  Proto80101408::default_instance_->InitAsDefaultInstance();
  Proto80101409::default_instance_->InitAsDefaultInstance();
  Proto80400100::default_instance_->InitAsDefaultInstance();
  Proto80400108::default_instance_->InitAsDefaultInstance();
  Proto80400382::default_instance_->InitAsDefaultInstance();
  Proto11402401::default_instance_->InitAsDefaultInstance();
  Proto11402402::default_instance_->InitAsDefaultInstance();
  Proto11402403::default_instance_->InitAsDefaultInstance();
  Proto11402404::default_instance_->InitAsDefaultInstance();
  Proto51402403::default_instance_->InitAsDefaultInstance();
  Proto51402404::default_instance_->InitAsDefaultInstance();
  Proto80400241::default_instance_->InitAsDefaultInstance();
  Proto80400242::default_instance_->InitAsDefaultInstance();
  Proto80400246::default_instance_->InitAsDefaultInstance();
  Proto80400247::default_instance_->InitAsDefaultInstance();
  Proto51402402::default_instance_->InitAsDefaultInstance();
  Proto80400243::default_instance_->InitAsDefaultInstance();
  Proto80400233::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient013_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient013_2eproto {
  StaticDescriptorInitializer_ProtoClient013_2eproto() {
    protobuf_AddDesc_ProtoClient013_2eproto();
  }
} static_descriptor_initializer_ProtoClient013_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto10401305::kRoleIdFieldNumber;
const int Proto10401305::kFlagFieldNumber;
const int Proto10401305::kSceneIdFieldNumber;
const int Proto10401305::kPixelXFieldNumber;
const int Proto10401305::kPixelYFieldNumber;
#endif  // !_MSC_VER

Proto10401305::Proto10401305()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10401305::InitAsDefaultInstance() {
}

Proto10401305::Proto10401305(const Proto10401305& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10401305::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  flag_ = 0;
  scene_id_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10401305::~Proto10401305() {
  SharedDtor();
}

void Proto10401305::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10401305::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10401305::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10401305_descriptor_;
}

const Proto10401305& Proto10401305::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto10401305* Proto10401305::default_instance_ = NULL;

Proto10401305* Proto10401305::New() const {
  return new Proto10401305;
}

void Proto10401305::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    flag_ = 0;
    scene_id_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10401305::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_flag;
        break;
      }
      
      // optional int32 flag = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10401305::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 flag = 2;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->flag(), output);
  }
  
  // optional int32 scene_id = 3;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->scene_id(), output);
  }
  
  // optional int32 pixel_x = 4;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 5;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pixel_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10401305::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 flag = 2;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->flag(), target);
  }
  
  // optional int32 scene_id = 3;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->scene_id(), target);
  }
  
  // optional int32 pixel_x = 4;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 5;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pixel_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10401305::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 flag = 2;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }
    
    // optional int32 scene_id = 3;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 pixel_x = 4;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 5;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10401305::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10401305* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10401305*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10401305::MergeFrom(const Proto10401305& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_flag()) {
      set_flag(from.flag());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10401305::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10401305::CopyFrom(const Proto10401305& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10401305::IsInitialized() const {
  
  return true;
}

void Proto10401305::Swap(Proto10401305* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(flag_, other->flag_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10401305::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10401305_descriptor_;
  metadata.reflection = Proto10401305_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401305::kGoldFieldNumber;
const int Proto50401305::kTimesFieldNumber;
const int Proto50401305::kLeftTimesFieldNumber;
const int Proto50401305::kFlagFieldNumber;
#endif  // !_MSC_VER

Proto50401305::Proto50401305()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401305::InitAsDefaultInstance() {
}

Proto50401305::Proto50401305(const Proto50401305& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401305::SharedCtor() {
  _cached_size_ = 0;
  gold_ = 0;
  times_ = 0;
  left_times_ = 0;
  flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401305::~Proto50401305() {
  SharedDtor();
}

void Proto50401305::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50401305::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401305::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401305_descriptor_;
}

const Proto50401305& Proto50401305::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto50401305* Proto50401305::default_instance_ = NULL;

Proto50401305* Proto50401305::New() const {
  return new Proto50401305;
}

void Proto50401305::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gold_ = 0;
    times_ = 0;
    left_times_ = 0;
    flag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401305::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 gold = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_times;
        break;
      }
      
      // optional int32 times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &times_)));
          set_has_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left_times;
        break;
      }
      
      // optional int32 left_times = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_times_)));
          set_has_left_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_flag;
        break;
      }
      
      // optional int32 flag = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401305::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 gold = 1;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gold(), output);
  }
  
  // optional int32 times = 2;
  if (has_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->times(), output);
  }
  
  // optional int32 left_times = 3;
  if (has_left_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_times(), output);
  }
  
  // optional int32 flag = 4;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401305::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 gold = 1;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gold(), target);
  }
  
  // optional int32 times = 2;
  if (has_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->times(), target);
  }
  
  // optional int32 left_times = 3;
  if (has_left_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_times(), target);
  }
  
  // optional int32 flag = 4;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401305::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 gold = 1;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }
    
    // optional int32 times = 2;
    if (has_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->times());
    }
    
    // optional int32 left_times = 3;
    if (has_left_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_times());
    }
    
    // optional int32 flag = 4;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401305::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401305* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401305*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401305::MergeFrom(const Proto50401305& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_times()) {
      set_times(from.times());
    }
    if (from.has_left_times()) {
      set_left_times(from.left_times());
    }
    if (from.has_flag()) {
      set_flag(from.flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401305::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401305::CopyFrom(const Proto50401305& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401305::IsInitialized() const {
  
  return true;
}

void Proto50401305::Swap(Proto50401305* other) {
  if (other != this) {
    std::swap(gold_, other->gold_);
    std::swap(times_, other->times_);
    std::swap(left_times_, other->left_times_);
    std::swap(flag_, other->flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401305::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401305_descriptor_;
  metadata.reflection = Proto50401305_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400153::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400153::Proto11400153()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400153::InitAsDefaultInstance() {
}

Proto11400153::Proto11400153(const Proto11400153& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400153::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400153::~Proto11400153() {
  SharedDtor();
}

void Proto11400153::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400153::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400153::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400153_descriptor_;
}

const Proto11400153& Proto11400153::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto11400153* Proto11400153::default_instance_ = NULL;

Proto11400153* Proto11400153::New() const {
  return new Proto11400153;
}

void Proto11400153::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400153::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400153::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400153::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400153::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400153::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400153* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400153*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400153::MergeFrom(const Proto11400153& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400153::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400153::CopyFrom(const Proto11400153& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400153::IsInitialized() const {
  
  return true;
}

void Proto11400153::Swap(Proto11400153* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400153::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400153_descriptor_;
  metadata.reflection = Proto11400153_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400153::kNewTagFieldNumber;
#endif  // !_MSC_VER

Proto51400153::Proto51400153()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400153::InitAsDefaultInstance() {
}

Proto51400153::Proto51400153(const Proto51400153& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400153::SharedCtor() {
  _cached_size_ = 0;
  new_tag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400153::~Proto51400153() {
  SharedDtor();
}

void Proto51400153::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400153::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400153::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400153_descriptor_;
}

const Proto51400153& Proto51400153::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto51400153* Proto51400153::default_instance_ = NULL;

Proto51400153* Proto51400153::New() const {
  return new Proto51400153;
}

void Proto51400153::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    new_tag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400153::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 new_tag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &new_tag_)));
          set_has_new_tag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400153::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 new_tag = 1;
  if (has_new_tag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->new_tag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400153::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 new_tag = 1;
  if (has_new_tag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->new_tag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400153::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 new_tag = 1;
    if (has_new_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->new_tag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400153::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400153* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400153*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400153::MergeFrom(const Proto51400153& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_new_tag()) {
      set_new_tag(from.new_tag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400153::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400153::CopyFrom(const Proto51400153& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400153::IsInitialized() const {
  
  return true;
}

void Proto51400153::Swap(Proto51400153* other) {
  if (other != this) {
    std::swap(new_tag_, other->new_tag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400153::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400153_descriptor_;
  metadata.reflection = Proto51400153_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100157::kRoleIdFieldNumber;
const int Proto50100157::kSceneIdFieldNumber;
const int Proto50100157::kPixelXFieldNumber;
const int Proto50100157::kPixelYFieldNumber;
#endif  // !_MSC_VER

Proto50100157::Proto50100157()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100157::InitAsDefaultInstance() {
}

Proto50100157::Proto50100157(const Proto50100157& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100157::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  scene_id_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100157::~Proto50100157() {
  SharedDtor();
}

void Proto50100157::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100157::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100157::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100157_descriptor_;
}

const Proto50100157& Proto50100157::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto50100157* Proto50100157::default_instance_ = NULL;

Proto50100157* Proto50100157::New() const {
  return new Proto50100157;
}

void Proto50100157::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    scene_id_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100157::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100157::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 scene_id = 2;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->scene_id(), output);
  }
  
  // optional int32 pixel_x = 3;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 4;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pixel_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100157::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 scene_id = 2;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->scene_id(), target);
  }
  
  // optional int32 pixel_x = 3;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 4;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pixel_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100157::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 scene_id = 2;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 pixel_x = 3;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 4;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100157::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100157* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100157*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100157::MergeFrom(const Proto50100157& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100157::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100157::CopyFrom(const Proto50100157& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100157::IsInitialized() const {
  
  return true;
}

void Proto50100157::Swap(Proto50100157* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100157::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100157_descriptor_;
  metadata.reflection = Proto50100157_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400232::kItemListFieldNumber;
#endif  // !_MSC_VER

Proto80400232::Proto80400232()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400232::InitAsDefaultInstance() {
}

Proto80400232::Proto80400232(const Proto80400232& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400232::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400232::~Proto80400232() {
  SharedDtor();
}

void Proto80400232::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400232::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400232::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400232_descriptor_;
}

const Proto80400232& Proto80400232::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto80400232* Proto80400232::default_instance_ = NULL;

Proto80400232* Proto80400232::New() const {
  return new Proto80400232;
}

void Proto80400232::Clear() {
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400232::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400232::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400232::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400232::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoItem item_list = 1;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400232::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400232* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400232*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400232::MergeFrom(const Proto80400232& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400232::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400232::CopyFrom(const Proto80400232& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400232::IsInitialized() const {
  
  return true;
}

void Proto80400232::Swap(Proto80400232* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400232::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400232_descriptor_;
  metadata.reflection = Proto80400232_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400009::kPriorityFieldNumber;
#endif  // !_MSC_VER

Proto11400009::Proto11400009()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400009::InitAsDefaultInstance() {
}

Proto11400009::Proto11400009(const Proto11400009& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400009::SharedCtor() {
  _cached_size_ = 0;
  priority_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400009::~Proto11400009() {
  SharedDtor();
}

void Proto11400009::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400009::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400009::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400009_descriptor_;
}

const Proto11400009& Proto11400009::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto11400009* Proto11400009::default_instance_ = NULL;

Proto11400009* Proto11400009::New() const {
  return new Proto11400009;
}

void Proto11400009::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    priority_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400009::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 priority = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &priority_)));
          set_has_priority();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400009::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 priority = 1;
  if (has_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->priority(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400009::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 priority = 1;
  if (has_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->priority(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400009::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 priority = 1;
    if (has_priority()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->priority());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400009::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400009* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400009*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400009::MergeFrom(const Proto11400009& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_priority()) {
      set_priority(from.priority());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400009::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400009::CopyFrom(const Proto11400009& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400009::IsInitialized() const {
  
  return true;
}

void Proto11400009::Swap(Proto11400009* other) {
  if (other != this) {
    std::swap(priority_, other->priority_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400009::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400009_descriptor_;
  metadata.reflection = Proto11400009_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400009::kActListFieldNumber;
#endif  // !_MSC_VER

Proto51400009::Proto51400009()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400009::InitAsDefaultInstance() {
}

Proto51400009::Proto51400009(const Proto51400009& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400009::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400009::~Proto51400009() {
  SharedDtor();
}

void Proto51400009::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400009::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400009::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400009_descriptor_;
}

const Proto51400009& Proto51400009::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto51400009* Proto51400009::default_instance_ = NULL;

Proto51400009* Proto51400009::New() const {
  return new Proto51400009;
}

void Proto51400009::Clear() {
  act_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400009::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PActPanelInfo act_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_act_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_act_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400009::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PActPanelInfo act_list = 1;
  for (int i = 0; i < this->act_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->act_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400009::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PActPanelInfo act_list = 1;
  for (int i = 0; i < this->act_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->act_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400009::ByteSize() const {
  int total_size = 0;
  
  // repeated .PActPanelInfo act_list = 1;
  total_size += 1 * this->act_list_size();
  for (int i = 0; i < this->act_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->act_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400009::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400009* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400009*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400009::MergeFrom(const Proto51400009& from) {
  GOOGLE_CHECK_NE(&from, this);
  act_list_.MergeFrom(from.act_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400009::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400009::CopyFrom(const Proto51400009& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400009::IsInitialized() const {
  
  return true;
}

void Proto51400009::Swap(Proto51400009* other) {
  if (other != this) {
    act_list_.Swap(&other->act_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400009::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400009_descriptor_;
  metadata.reflection = Proto51400009_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400010::kItemNumFieldNumber;
#endif  // !_MSC_VER

Proto11400010::Proto11400010()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400010::InitAsDefaultInstance() {
}

Proto11400010::Proto11400010(const Proto11400010& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400010::SharedCtor() {
  _cached_size_ = 0;
  item_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400010::~Proto11400010() {
  SharedDtor();
}

void Proto11400010::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400010::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400010::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400010_descriptor_;
}

const Proto11400010& Proto11400010::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto11400010* Proto11400010::default_instance_ = NULL;

Proto11400010* Proto11400010::New() const {
  return new Proto11400010;
}

void Proto11400010::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400010::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
          set_has_item_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400010::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_num = 1;
  if (has_item_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400010::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_num = 1;
  if (has_item_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400010::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_num = 1;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400010::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400010* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400010*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400010::MergeFrom(const Proto11400010& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_num()) {
      set_item_num(from.item_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400010::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400010::CopyFrom(const Proto11400010& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400010::IsInitialized() const {
  
  return true;
}

void Proto11400010::Swap(Proto11400010* other) {
  if (other != this) {
    std::swap(item_num_, other->item_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400010::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400010_descriptor_;
  metadata.reflection = Proto11400010_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100804::kItemIndexFieldNumber;
const int Proto10100804::kItemIdFieldNumber;
const int Proto10100804::kItemNumFieldNumber;
#endif  // !_MSC_VER

Proto10100804::Proto10100804()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100804::InitAsDefaultInstance() {
}

Proto10100804::Proto10100804(const Proto10100804& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100804::SharedCtor() {
  _cached_size_ = 0;
  item_index_ = 0;
  item_id_ = 0;
  item_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100804::~Proto10100804() {
  SharedDtor();
}

void Proto10100804::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100804::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100804::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100804_descriptor_;
}

const Proto10100804& Proto10100804::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto10100804* Proto10100804::default_instance_ = NULL;

Proto10100804* Proto10100804::New() const {
  return new Proto10100804;
}

void Proto10100804::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_index_ = 0;
    item_id_ = 0;
    item_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100804::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_index_)));
          set_has_item_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }
      
      // optional int32 item_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_num;
        break;
      }
      
      // optional int32 item_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
          set_has_item_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100804::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_index = 1;
  if (has_item_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_index(), output);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_id(), output);
  }
  
  // optional int32 item_num = 3;
  if (has_item_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100804::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_index = 1;
  if (has_item_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_index(), target);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_id(), target);
  }
  
  // optional int32 item_num = 3;
  if (has_item_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100804::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_index = 1;
    if (has_item_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_index());
    }
    
    // optional int32 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_num = 3;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100804::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100804* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100804*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100804::MergeFrom(const Proto10100804& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_index()) {
      set_item_index(from.item_index());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_num()) {
      set_item_num(from.item_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100804::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100804::CopyFrom(const Proto10100804& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100804::IsInitialized() const {
  
  return true;
}

void Proto10100804::Swap(Proto10100804* other) {
  if (other != this) {
    std::swap(item_index_, other->item_index_);
    std::swap(item_id_, other->item_id_);
    std::swap(item_num_, other->item_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100804::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100804_descriptor_;
  metadata.reflection = Proto10100804_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100805::kItemIndexFieldNumber;
const int Proto10100805::kItemIdFieldNumber;
const int Proto10100805::kItemNumFieldNumber;
#endif  // !_MSC_VER

Proto10100805::Proto10100805()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100805::InitAsDefaultInstance() {
}

Proto10100805::Proto10100805(const Proto10100805& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100805::SharedCtor() {
  _cached_size_ = 0;
  item_index_ = 0;
  item_id_ = 0;
  item_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100805::~Proto10100805() {
  SharedDtor();
}

void Proto10100805::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100805::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100805::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100805_descriptor_;
}

const Proto10100805& Proto10100805::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto10100805* Proto10100805::default_instance_ = NULL;

Proto10100805* Proto10100805::New() const {
  return new Proto10100805;
}

void Proto10100805::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_index_ = 0;
    item_id_ = 0;
    item_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100805::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_index_)));
          set_has_item_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }
      
      // optional int32 item_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_num;
        break;
      }
      
      // optional int32 item_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
          set_has_item_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100805::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_index = 1;
  if (has_item_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_index(), output);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_id(), output);
  }
  
  // optional int32 item_num = 3;
  if (has_item_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100805::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_index = 1;
  if (has_item_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_index(), target);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_id(), target);
  }
  
  // optional int32 item_num = 3;
  if (has_item_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100805::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_index = 1;
    if (has_item_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_index());
    }
    
    // optional int32 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_num = 3;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100805::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100805* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100805*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100805::MergeFrom(const Proto10100805& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_index()) {
      set_item_index(from.item_index());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_num()) {
      set_item_num(from.item_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100805::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100805::CopyFrom(const Proto10100805& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100805::IsInitialized() const {
  
  return true;
}

void Proto10100805::Swap(Proto10100805* other) {
  if (other != this) {
    std::swap(item_index_, other->item_index_);
    std::swap(item_id_, other->item_id_);
    std::swap(item_num_, other->item_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100805::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100805_descriptor_;
  metadata.reflection = Proto10100805_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100806::kApplyIdFieldNumber;
const int Proto10100806::kOptFieldNumber;
#endif  // !_MSC_VER

Proto10100806::Proto10100806()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100806::InitAsDefaultInstance() {
}

Proto10100806::Proto10100806(const Proto10100806& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100806::SharedCtor() {
  _cached_size_ = 0;
  apply_id_ = GOOGLE_LONGLONG(0);
  opt_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100806::~Proto10100806() {
  SharedDtor();
}

void Proto10100806::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100806::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100806::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100806_descriptor_;
}

const Proto10100806& Proto10100806::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto10100806* Proto10100806::default_instance_ = NULL;

Proto10100806* Proto10100806::New() const {
  return new Proto10100806;
}

void Proto10100806::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    apply_id_ = GOOGLE_LONGLONG(0);
    opt_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100806::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 apply_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &apply_id_)));
          set_has_apply_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_opt;
        break;
      }
      
      // optional int32 opt = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_opt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opt_)));
          set_has_opt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100806::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 apply_id = 1;
  if (has_apply_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->apply_id(), output);
  }
  
  // optional int32 opt = 2;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->opt(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100806::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 apply_id = 1;
  if (has_apply_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->apply_id(), target);
  }
  
  // optional int32 opt = 2;
  if (has_opt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->opt(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100806::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 apply_id = 1;
    if (has_apply_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->apply_id());
    }
    
    // optional int32 opt = 2;
    if (has_opt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opt());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100806::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100806* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100806*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100806::MergeFrom(const Proto10100806& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_apply_id()) {
      set_apply_id(from.apply_id());
    }
    if (from.has_opt()) {
      set_opt(from.opt());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100806::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100806::CopyFrom(const Proto10100806& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100806::IsInitialized() const {
  
  return true;
}

void Proto10100806::Swap(Proto10100806* other) {
  if (other != this) {
    std::swap(apply_id_, other->apply_id_);
    std::swap(opt_, other->opt_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100806::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100806_descriptor_;
  metadata.reflection = Proto10100806_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100807::kPageIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100807::Proto10100807()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100807::InitAsDefaultInstance() {
}

Proto10100807::Proto10100807(const Proto10100807& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100807::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100807::~Proto10100807() {
  SharedDtor();
}

void Proto10100807::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100807::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100807::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100807_descriptor_;
}

const Proto10100807& Proto10100807::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto10100807* Proto10100807::default_instance_ = NULL;

Proto10100807* Proto10100807::New() const {
  return new Proto10100807;
}

void Proto10100807::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100807::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100807::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100807::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100807::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100807::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100807* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100807*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100807::MergeFrom(const Proto10100807& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100807::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100807::CopyFrom(const Proto10100807& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100807::IsInitialized() const {
  
  return true;
}

void Proto10100807::Swap(Proto10100807* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100807::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100807_descriptor_;
  metadata.reflection = Proto10100807_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100801::kItemListFieldNumber;
const int Proto50100801::kIsLeaderFieldNumber;
const int Proto50100801::kLeftTimesFieldNumber;
const int Proto50100801::kTotalTimesFieldNumber;
const int Proto50100801::kPackSizeFieldNumber;
#endif  // !_MSC_VER

Proto50100801::Proto50100801()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100801::InitAsDefaultInstance() {
}

Proto50100801::Proto50100801(const Proto50100801& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100801::SharedCtor() {
  _cached_size_ = 0;
  is_leader_ = 0;
  left_times_ = 0;
  total_times_ = 0;
  pack_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100801::~Proto50100801() {
  SharedDtor();
}

void Proto50100801::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100801::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100801::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100801_descriptor_;
}

const Proto50100801& Proto50100801::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto50100801* Proto50100801::default_instance_ = NULL;

Proto50100801* Proto50100801::New() const {
  return new Proto50100801;
}

void Proto50100801::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    is_leader_ = 0;
    left_times_ = 0;
    total_times_ = 0;
    pack_size_ = 0;
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100801::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_list;
        if (input->ExpectTag(16)) goto parse_is_leader;
        break;
      }
      
      // optional int32 is_leader = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_leader:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_leader_)));
          set_has_is_leader();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left_times;
        break;
      }
      
      // optional int32 left_times = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_times_)));
          set_has_left_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_total_times;
        break;
      }
      
      // optional int32 total_times = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_times_)));
          set_has_total_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_pack_size;
        break;
      }
      
      // optional int32 pack_size = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pack_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pack_size_)));
          set_has_pack_size();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100801::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(i), output);
  }
  
  // optional int32 is_leader = 2;
  if (has_is_leader()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_leader(), output);
  }
  
  // optional int32 left_times = 3;
  if (has_left_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_times(), output);
  }
  
  // optional int32 total_times = 4;
  if (has_total_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->total_times(), output);
  }
  
  // optional int32 pack_size = 5;
  if (has_pack_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pack_size(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100801::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_list(i), target);
  }
  
  // optional int32 is_leader = 2;
  if (has_is_leader()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_leader(), target);
  }
  
  // optional int32 left_times = 3;
  if (has_left_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_times(), target);
  }
  
  // optional int32 total_times = 4;
  if (has_total_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->total_times(), target);
  }
  
  // optional int32 pack_size = 5;
  if (has_pack_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pack_size(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100801::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 is_leader = 2;
    if (has_is_leader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_leader());
    }
    
    // optional int32 left_times = 3;
    if (has_left_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_times());
    }
    
    // optional int32 total_times = 4;
    if (has_total_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_times());
    }
    
    // optional int32 pack_size = 5;
    if (has_pack_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pack_size());
    }
    
  }
  // repeated .ProtoItem item_list = 1;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100801::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100801* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100801*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100801::MergeFrom(const Proto50100801& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_is_leader()) {
      set_is_leader(from.is_leader());
    }
    if (from.has_left_times()) {
      set_left_times(from.left_times());
    }
    if (from.has_total_times()) {
      set_total_times(from.total_times());
    }
    if (from.has_pack_size()) {
      set_pack_size(from.pack_size());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100801::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100801::CopyFrom(const Proto50100801& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100801::IsInitialized() const {
  
  return true;
}

void Proto50100801::Swap(Proto50100801* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(is_leader_, other->is_leader_);
    std::swap(left_times_, other->left_times_);
    std::swap(total_times_, other->total_times_);
    std::swap(pack_size_, other->pack_size_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100801::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100801_descriptor_;
  metadata.reflection = Proto50100801_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100802::kApplyListFieldNumber;
const int Proto50100802::kPageIndexFieldNumber;
const int Proto50100802::kTotalPageFieldNumber;
#endif  // !_MSC_VER

Proto50100802::Proto50100802()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100802::InitAsDefaultInstance() {
}

Proto50100802::Proto50100802(const Proto50100802& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100802::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  total_page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100802::~Proto50100802() {
  SharedDtor();
}

void Proto50100802::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100802::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100802::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100802_descriptor_;
}

const Proto50100802& Proto50100802::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto50100802* Proto50100802::default_instance_ = NULL;

Proto50100802* Proto50100802::New() const {
  return new Proto50100802;
}

void Proto50100802::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    page_index_ = 0;
    total_page_ = 0;
  }
  apply_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100802::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoLeagueStoreApply apply_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_apply_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_apply_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_apply_list;
        if (input->ExpectTag(16)) goto parse_page_index;
        break;
      }
      
      // optional int32 page_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100802::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoLeagueStoreApply apply_list = 1;
  for (int i = 0; i < this->apply_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->apply_list(i), output);
  }
  
  // optional int32 page_index = 2;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_index(), output);
  }
  
  // optional int32 total_page = 3;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100802::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoLeagueStoreApply apply_list = 1;
  for (int i = 0; i < this->apply_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->apply_list(i), target);
  }
  
  // optional int32 page_index = 2;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_index(), target);
  }
  
  // optional int32 total_page = 3;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100802::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 page_index = 2;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
    // optional int32 total_page = 3;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
  }
  // repeated .ProtoLeagueStoreApply apply_list = 1;
  total_size += 1 * this->apply_list_size();
  for (int i = 0; i < this->apply_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->apply_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100802::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100802* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100802*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100802::MergeFrom(const Proto50100802& from) {
  GOOGLE_CHECK_NE(&from, this);
  apply_list_.MergeFrom(from.apply_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100802::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100802::CopyFrom(const Proto50100802& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100802::IsInitialized() const {
  
  return true;
}

void Proto50100802::Swap(Proto50100802* other) {
  if (other != this) {
    apply_list_.Swap(&other->apply_list_);
    std::swap(page_index_, other->page_index_);
    std::swap(total_page_, other->total_page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100802::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100802_descriptor_;
  metadata.reflection = Proto50100802_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100807::kApplyHisFieldNumber;
const int Proto50100807::kPageIndexFieldNumber;
const int Proto50100807::kTotalPageFieldNumber;
#endif  // !_MSC_VER

Proto50100807::Proto50100807()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100807::InitAsDefaultInstance() {
}

Proto50100807::Proto50100807(const Proto50100807& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100807::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  total_page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100807::~Proto50100807() {
  SharedDtor();
}

void Proto50100807::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100807::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100807::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100807_descriptor_;
}

const Proto50100807& Proto50100807::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto50100807* Proto50100807::default_instance_ = NULL;

Proto50100807* Proto50100807::New() const {
  return new Proto50100807;
}

void Proto50100807::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    page_index_ = 0;
    total_page_ = 0;
  }
  apply_his_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100807::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoLeagueStoreApplyHis apply_his = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_apply_his:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_apply_his()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_apply_his;
        if (input->ExpectTag(16)) goto parse_page_index;
        break;
      }
      
      // optional int32 page_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100807::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoLeagueStoreApplyHis apply_his = 1;
  for (int i = 0; i < this->apply_his_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->apply_his(i), output);
  }
  
  // optional int32 page_index = 2;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_index(), output);
  }
  
  // optional int32 total_page = 3;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100807::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoLeagueStoreApplyHis apply_his = 1;
  for (int i = 0; i < this->apply_his_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->apply_his(i), target);
  }
  
  // optional int32 page_index = 2;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_index(), target);
  }
  
  // optional int32 total_page = 3;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100807::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 page_index = 2;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
    // optional int32 total_page = 3;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
  }
  // repeated .ProtoLeagueStoreApplyHis apply_his = 1;
  total_size += 1 * this->apply_his_size();
  for (int i = 0; i < this->apply_his_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->apply_his(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100807::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100807* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100807*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100807::MergeFrom(const Proto50100807& from) {
  GOOGLE_CHECK_NE(&from, this);
  apply_his_.MergeFrom(from.apply_his_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100807::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100807::CopyFrom(const Proto50100807& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100807::IsInitialized() const {
  
  return true;
}

void Proto50100807::Swap(Proto50100807* other) {
  if (other != this) {
    apply_his_.Swap(&other->apply_his_);
    std::swap(page_index_, other->page_index_);
    std::swap(total_page_, other->total_page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100807::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100807_descriptor_;
  metadata.reflection = Proto50100807_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400923::kRescueSortFieldNumber;
const int Proto80400923::kRescueLeftFieldNumber;
const int Proto80400923::kRescueIdFieldNumber;
#endif  // !_MSC_VER

Proto80400923::Proto80400923()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400923::InitAsDefaultInstance() {
}

Proto80400923::Proto80400923(const Proto80400923& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400923::SharedCtor() {
  _cached_size_ = 0;
  rescue_sort_ = 0;
  rescue_left_ = 0;
  rescue_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400923::~Proto80400923() {
  SharedDtor();
}

void Proto80400923::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400923::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400923::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400923_descriptor_;
}

const Proto80400923& Proto80400923::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto80400923* Proto80400923::default_instance_ = NULL;

Proto80400923* Proto80400923::New() const {
  return new Proto80400923;
}

void Proto80400923::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rescue_sort_ = 0;
    rescue_left_ = 0;
    rescue_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400923::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rescue_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rescue_sort_)));
          set_has_rescue_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_rescue_left;
        break;
      }
      
      // optional int32 rescue_left = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rescue_left:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rescue_left_)));
          set_has_rescue_left();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_rescue_id;
        break;
      }
      
      // optional int64 rescue_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rescue_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &rescue_id_)));
          set_has_rescue_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400923::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 rescue_sort = 1;
  if (has_rescue_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rescue_sort(), output);
  }
  
  // optional int32 rescue_left = 2;
  if (has_rescue_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rescue_left(), output);
  }
  
  // optional int64 rescue_id = 3;
  if (has_rescue_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->rescue_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400923::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 rescue_sort = 1;
  if (has_rescue_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rescue_sort(), target);
  }
  
  // optional int32 rescue_left = 2;
  if (has_rescue_left()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rescue_left(), target);
  }
  
  // optional int64 rescue_id = 3;
  if (has_rescue_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->rescue_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400923::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 rescue_sort = 1;
    if (has_rescue_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rescue_sort());
    }
    
    // optional int32 rescue_left = 2;
    if (has_rescue_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rescue_left());
    }
    
    // optional int64 rescue_id = 3;
    if (has_rescue_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->rescue_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400923::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400923* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400923*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400923::MergeFrom(const Proto80400923& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rescue_sort()) {
      set_rescue_sort(from.rescue_sort());
    }
    if (from.has_rescue_left()) {
      set_rescue_left(from.rescue_left());
    }
    if (from.has_rescue_id()) {
      set_rescue_id(from.rescue_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400923::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400923::CopyFrom(const Proto80400923& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400923::IsInitialized() const {
  
  return true;
}

void Proto80400923::Swap(Proto80400923* other) {
  if (other != this) {
    std::swap(rescue_sort_, other->rescue_sort_);
    std::swap(rescue_left_, other->rescue_left_);
    std::swap(rescue_id_, other->rescue_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400923::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400923_descriptor_;
  metadata.reflection = Proto80400923_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400325::kEscortInfoFieldNumber;
#endif  // !_MSC_VER

Proto50400325::Proto50400325()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400325::InitAsDefaultInstance() {
  escort_info_ = const_cast< ::ProtoEscortMapItem*>(&::ProtoEscortMapItem::default_instance());
}

Proto50400325::Proto50400325(const Proto50400325& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400325::SharedCtor() {
  _cached_size_ = 0;
  escort_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400325::~Proto50400325() {
  SharedDtor();
}

void Proto50400325::SharedDtor() {
  if (this != default_instance_) {
    delete escort_info_;
  }
}

void Proto50400325::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400325::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400325_descriptor_;
}

const Proto50400325& Proto50400325::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto50400325* Proto50400325::default_instance_ = NULL;

Proto50400325* Proto50400325::New() const {
  return new Proto50400325;
}

void Proto50400325::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_escort_info()) {
      if (escort_info_ != NULL) escort_info_->::ProtoEscortMapItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400325::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoEscortMapItem escort_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_escort_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400325::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoEscortMapItem escort_info = 1;
  if (has_escort_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->escort_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400325::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoEscortMapItem escort_info = 1;
  if (has_escort_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->escort_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400325::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoEscortMapItem escort_info = 1;
    if (has_escort_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->escort_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400325::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400325* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400325*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400325::MergeFrom(const Proto50400325& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_escort_info()) {
      mutable_escort_info()->::ProtoEscortMapItem::MergeFrom(from.escort_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400325::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400325::CopyFrom(const Proto50400325& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400325::IsInitialized() const {
  
  return true;
}

void Proto50400325::Swap(Proto50400325* other) {
  if (other != this) {
    std::swap(escort_info_, other->escort_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400325::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400325_descriptor_;
  metadata.reflection = Proto50400325_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100802::kPageIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100802::Proto10100802()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100802::InitAsDefaultInstance() {
}

Proto10100802::Proto10100802(const Proto10100802& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100802::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100802::~Proto10100802() {
  SharedDtor();
}

void Proto10100802::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100802::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100802::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100802_descriptor_;
}

const Proto10100802& Proto10100802::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto10100802* Proto10100802::default_instance_ = NULL;

Proto10100802* Proto10100802::New() const {
  return new Proto10100802;
}

void Proto10100802::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100802::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100802::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100802::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100802::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100802::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100802* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100802*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100802::MergeFrom(const Proto10100802& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100802::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100802::CopyFrom(const Proto10100802& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100802::IsInitialized() const {
  
  return true;
}

void Proto10100802::Swap(Proto10100802* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100802::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100802_descriptor_;
  metadata.reflection = Proto10100802_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100645::kCarIdFieldNumber;
#endif  // !_MSC_VER

Proto50100645::Proto50100645()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100645::InitAsDefaultInstance() {
}

Proto50100645::Proto50100645(const Proto50100645& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100645::SharedCtor() {
  _cached_size_ = 0;
  car_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100645::~Proto50100645() {
  SharedDtor();
}

void Proto50100645::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100645::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100645::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100645_descriptor_;
}

const Proto50100645& Proto50100645::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto50100645* Proto50100645::default_instance_ = NULL;

Proto50100645* Proto50100645::New() const {
  return new Proto50100645;
}

void Proto50100645::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    car_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100645::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 car_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &car_id_)));
          set_has_car_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100645::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 car_id = 1;
  if (has_car_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->car_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100645::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 car_id = 1;
  if (has_car_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->car_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100645::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 car_id = 1;
    if (has_car_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->car_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100645::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100645* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100645*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100645::MergeFrom(const Proto50100645& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_car_id()) {
      set_car_id(from.car_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100645::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100645::CopyFrom(const Proto50100645& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100645::IsInitialized() const {
  
  return true;
}

void Proto50100645::Swap(Proto50100645* other) {
  if (other != this) {
    std::swap(car_id_, other->car_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100645::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100645_descriptor_;
  metadata.reflection = Proto50100645_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400320::kRoleIdFieldNumber;
const int Proto80400320::kStateFieldNumber;
const int Proto80400320::kGatherGoodIdFieldNumber;
const int Proto80400320::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto80400320::Proto80400320()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400320::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto80400320::Proto80400320(const Proto80400320& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400320::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  state_ = 0;
  gather_good_id_ = GOOGLE_LONGLONG(0);
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400320::~Proto80400320() {
  SharedDtor();
}

void Proto80400320::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto80400320::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400320::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400320_descriptor_;
}

const Proto80400320& Proto80400320::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto80400320* Proto80400320::default_instance_ = NULL;

Proto80400320* Proto80400320::New() const {
  return new Proto80400320;
}

void Proto80400320::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    state_ = 0;
    gather_good_id_ = GOOGLE_LONGLONG(0);
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400320::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }
      
      // optional int32 state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_gather_good_id;
        break;
      }
      
      // optional int64 gather_good_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gather_good_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gather_good_id_)));
          set_has_gather_good_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400320::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->state(), output);
  }
  
  // optional int64 gather_good_id = 3;
  if (has_gather_good_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->gather_good_id(), output);
  }
  
  // optional .ProtoThreeObj other_info = 4;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400320::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->state(), target);
  }
  
  // optional int64 gather_good_id = 3;
  if (has_gather_good_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->gather_good_id(), target);
  }
  
  // optional .ProtoThreeObj other_info = 4;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400320::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
    // optional int64 gather_good_id = 3;
    if (has_gather_good_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gather_good_id());
    }
    
    // optional .ProtoThreeObj other_info = 4;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400320::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400320* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400320*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400320::MergeFrom(const Proto80400320& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_gather_good_id()) {
      set_gather_good_id(from.gather_good_id());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400320::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400320::CopyFrom(const Proto80400320& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400320::IsInitialized() const {
  
  return true;
}

void Proto80400320::Swap(Proto80400320* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(state_, other->state_);
    std::swap(gather_good_id_, other->gather_good_id_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400320::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400320_descriptor_;
  metadata.reflection = Proto80400320_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400010::kGatherGoodIdFieldNumber;
const int Proto10400010::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto10400010::Proto10400010()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400010::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto10400010::Proto10400010(const Proto10400010& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400010::SharedCtor() {
  _cached_size_ = 0;
  gather_good_id_ = GOOGLE_LONGLONG(0);
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400010::~Proto10400010() {
  SharedDtor();
}

void Proto10400010::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto10400010::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400010::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400010_descriptor_;
}

const Proto10400010& Proto10400010::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto10400010* Proto10400010::default_instance_ = NULL;

Proto10400010* Proto10400010::New() const {
  return new Proto10400010;
}

void Proto10400010::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gather_good_id_ = GOOGLE_LONGLONG(0);
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400010::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 gather_good_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gather_good_id_)));
          set_has_gather_good_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400010::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 gather_good_id = 1;
  if (has_gather_good_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->gather_good_id(), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400010::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 gather_good_id = 1;
  if (has_gather_good_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->gather_good_id(), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400010::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 gather_good_id = 1;
    if (has_gather_good_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gather_good_id());
    }
    
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400010::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400010* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400010*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400010::MergeFrom(const Proto10400010& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gather_good_id()) {
      set_gather_good_id(from.gather_good_id());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400010::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400010::CopyFrom(const Proto10400010& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400010::IsInitialized() const {
  
  return true;
}

void Proto10400010::Swap(Proto10400010* other) {
  if (other != this) {
    std::swap(gather_good_id_, other->gather_good_id_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400010::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400010_descriptor_;
  metadata.reflection = Proto10400010_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400010::kGatherGoodIdFieldNumber;
const int Proto50400010::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto50400010::Proto50400010()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400010::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto50400010::Proto50400010(const Proto50400010& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400010::SharedCtor() {
  _cached_size_ = 0;
  gather_good_id_ = GOOGLE_LONGLONG(0);
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400010::~Proto50400010() {
  SharedDtor();
}

void Proto50400010::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto50400010::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400010::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400010_descriptor_;
}

const Proto50400010& Proto50400010::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto50400010* Proto50400010::default_instance_ = NULL;

Proto50400010* Proto50400010::New() const {
  return new Proto50400010;
}

void Proto50400010::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gather_good_id_ = GOOGLE_LONGLONG(0);
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400010::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 gather_good_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gather_good_id_)));
          set_has_gather_good_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400010::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 gather_good_id = 1;
  if (has_gather_good_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->gather_good_id(), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400010::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 gather_good_id = 1;
  if (has_gather_good_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->gather_good_id(), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400010::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 gather_good_id = 1;
    if (has_gather_good_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gather_good_id());
    }
    
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400010::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400010* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400010*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400010::MergeFrom(const Proto50400010& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gather_good_id()) {
      set_gather_good_id(from.gather_good_id());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400010::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400010::CopyFrom(const Proto50400010& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400010::IsInitialized() const {
  
  return true;
}

void Proto50400010::Swap(Proto50400010* other) {
  if (other != this) {
    std::swap(gather_good_id_, other->gather_good_id_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400010::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400010_descriptor_;
  metadata.reflection = Proto50400010_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400905::kItemListFieldNumber;
const int Proto51400905::kCurLuckyFieldNumber;
#endif  // !_MSC_VER

Proto51400905::Proto51400905()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400905::InitAsDefaultInstance() {
}

Proto51400905::Proto51400905(const Proto51400905& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400905::SharedCtor() {
  _cached_size_ = 0;
  cur_lucky_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400905::~Proto51400905() {
  SharedDtor();
}

void Proto51400905::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400905::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400905::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400905_descriptor_;
}

const Proto51400905& Proto51400905::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto51400905* Proto51400905::default_instance_ = NULL;

Proto51400905* Proto51400905::New() const {
  return new Proto51400905;
}

void Proto51400905::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    cur_lucky_ = 0;
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400905::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_list;
        if (input->ExpectTag(16)) goto parse_cur_lucky;
        break;
      }
      
      // optional int32 cur_lucky = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_lucky:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_lucky_)));
          set_has_cur_lucky();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400905::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(i), output);
  }
  
  // optional int32 cur_lucky = 2;
  if (has_cur_lucky()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cur_lucky(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400905::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_list(i), target);
  }
  
  // optional int32 cur_lucky = 2;
  if (has_cur_lucky()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cur_lucky(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400905::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 cur_lucky = 2;
    if (has_cur_lucky()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_lucky());
    }
    
  }
  // repeated .ProtoItem item_list = 1;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400905::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400905* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400905*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400905::MergeFrom(const Proto51400905& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_cur_lucky()) {
      set_cur_lucky(from.cur_lucky());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400905::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400905::CopyFrom(const Proto51400905& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400905::IsInitialized() const {
  
  return true;
}

void Proto51400905::Swap(Proto51400905* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(cur_lucky_, other->cur_lucky_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400905::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400905_descriptor_;
  metadata.reflection = Proto51400905_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400909::kItemListFieldNumber;
const int Proto51400909::kPackSizeFieldNumber;
#endif  // !_MSC_VER

Proto51400909::Proto51400909()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400909::InitAsDefaultInstance() {
}

Proto51400909::Proto51400909(const Proto51400909& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400909::SharedCtor() {
  _cached_size_ = 0;
  pack_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400909::~Proto51400909() {
  SharedDtor();
}

void Proto51400909::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400909::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400909::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400909_descriptor_;
}

const Proto51400909& Proto51400909::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto51400909* Proto51400909::default_instance_ = NULL;

Proto51400909* Proto51400909::New() const {
  return new Proto51400909;
}

void Proto51400909::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    pack_size_ = 0;
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400909::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_list;
        if (input->ExpectTag(16)) goto parse_pack_size;
        break;
      }
      
      // optional int32 pack_size = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pack_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pack_size_)));
          set_has_pack_size();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400909::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(i), output);
  }
  
  // optional int32 pack_size = 2;
  if (has_pack_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pack_size(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400909::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_list(i), target);
  }
  
  // optional int32 pack_size = 2;
  if (has_pack_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pack_size(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400909::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 pack_size = 2;
    if (has_pack_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pack_size());
    }
    
  }
  // repeated .ProtoItem item_list = 1;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400909::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400909* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400909*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400909::MergeFrom(const Proto51400909& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_pack_size()) {
      set_pack_size(from.pack_size());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400909::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400909::CopyFrom(const Proto51400909& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400909::IsInitialized() const {
  
  return true;
}

void Proto51400909::Swap(Proto51400909* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(pack_size_, other->pack_size_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400909::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400909_descriptor_;
  metadata.reflection = Proto51400909_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400910::kOptFieldNumber;
const int Proto11400910::kItemIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400910::Proto11400910()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400910::InitAsDefaultInstance() {
}

Proto11400910::Proto11400910(const Proto11400910& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400910::SharedCtor() {
  _cached_size_ = 0;
  opt_ = 0;
  item_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400910::~Proto11400910() {
  SharedDtor();
}

void Proto11400910::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400910::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400910::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400910_descriptor_;
}

const Proto11400910& Proto11400910::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto11400910* Proto11400910::default_instance_ = NULL;

Proto11400910* Proto11400910::New() const {
  return new Proto11400910;
}

void Proto11400910::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    opt_ = 0;
    item_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400910::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 opt = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opt_)));
          set_has_opt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_index;
        break;
      }
      
      // optional int32 item_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_index_)));
          set_has_item_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400910::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 opt = 1;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->opt(), output);
  }
  
  // optional int32 item_index = 2;
  if (has_item_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400910::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 opt = 1;
  if (has_opt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->opt(), target);
  }
  
  // optional int32 item_index = 2;
  if (has_item_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400910::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 opt = 1;
    if (has_opt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opt());
    }
    
    // optional int32 item_index = 2;
    if (has_item_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400910::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400910* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400910*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400910::MergeFrom(const Proto11400910& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_opt()) {
      set_opt(from.opt());
    }
    if (from.has_item_index()) {
      set_item_index(from.item_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400910::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400910::CopyFrom(const Proto11400910& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400910::IsInitialized() const {
  
  return true;
}

void Proto11400910::Swap(Proto11400910* other) {
  if (other != this) {
    std::swap(opt_, other->opt_);
    std::swap(item_index_, other->item_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400910::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400910_descriptor_;
  metadata.reflection = Proto11400910_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400622::kItemIdFieldNumber;
const int Proto11400622::kPkgTypeFieldNumber;
const int Proto11400622::kPkgIndexFieldNumber;
const int Proto11400622::kIsForceBuyFieldNumber;
#endif  // !_MSC_VER

Proto11400622::Proto11400622()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400622::InitAsDefaultInstance() {
}

Proto11400622::Proto11400622(const Proto11400622& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400622::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  pkg_type_ = 0;
  pkg_index_ = 0;
  is_force_buy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400622::~Proto11400622() {
  SharedDtor();
}

void Proto11400622::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400622::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400622::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400622_descriptor_;
}

const Proto11400622& Proto11400622::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto11400622* Proto11400622::default_instance_ = NULL;

Proto11400622* Proto11400622::New() const {
  return new Proto11400622;
}

void Proto11400622::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    pkg_type_ = 0;
    pkg_index_ = 0;
    is_force_buy_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400622::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pkg_type;
        break;
      }
      
      // optional int32 pkg_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_type_)));
          set_has_pkg_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pkg_index;
        break;
      }
      
      // optional int32 pkg_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_is_force_buy;
        break;
      }
      
      // optional int32 is_force_buy = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_force_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_force_buy_)));
          set_has_is_force_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400622::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 pkg_type = 2;
  if (has_pkg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pkg_type(), output);
  }
  
  // optional int32 pkg_index = 3;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pkg_index(), output);
  }
  
  // optional int32 is_force_buy = 4;
  if (has_is_force_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->is_force_buy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400622::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 pkg_type = 2;
  if (has_pkg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pkg_type(), target);
  }
  
  // optional int32 pkg_index = 3;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pkg_index(), target);
  }
  
  // optional int32 is_force_buy = 4;
  if (has_is_force_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->is_force_buy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400622::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 pkg_type = 2;
    if (has_pkg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_type());
    }
    
    // optional int32 pkg_index = 3;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
    // optional int32 is_force_buy = 4;
    if (has_is_force_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_force_buy());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400622::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400622* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400622*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400622::MergeFrom(const Proto11400622& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_pkg_type()) {
      set_pkg_type(from.pkg_type());
    }
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
    if (from.has_is_force_buy()) {
      set_is_force_buy(from.is_force_buy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400622::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400622::CopyFrom(const Proto11400622& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400622::IsInitialized() const {
  
  return true;
}

void Proto11400622::Swap(Proto11400622* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(pkg_type_, other->pkg_type_);
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(is_force_buy_, other->is_force_buy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400622::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400622_descriptor_;
  metadata.reflection = Proto11400622_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400622::kAimItemIdFieldNumber;
#endif  // !_MSC_VER

Proto51400622::Proto51400622()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400622::InitAsDefaultInstance() {
}

Proto51400622::Proto51400622(const Proto51400622& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400622::SharedCtor() {
  _cached_size_ = 0;
  aim_item_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400622::~Proto51400622() {
  SharedDtor();
}

void Proto51400622::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400622::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400622::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400622_descriptor_;
}

const Proto51400622& Proto51400622::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto51400622* Proto51400622::default_instance_ = NULL;

Proto51400622* Proto51400622::New() const {
  return new Proto51400622;
}

void Proto51400622::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    aim_item_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400622::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 aim_item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &aim_item_id_)));
          set_has_aim_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400622::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 aim_item_id = 1;
  if (has_aim_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->aim_item_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400622::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 aim_item_id = 1;
  if (has_aim_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->aim_item_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400622::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 aim_item_id = 1;
    if (has_aim_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->aim_item_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400622::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400622* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400622*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400622::MergeFrom(const Proto51400622& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_aim_item_id()) {
      set_aim_item_id(from.aim_item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400622::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400622::CopyFrom(const Proto51400622& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400622::IsInitialized() const {
  
  return true;
}

void Proto51400622::Swap(Proto51400622* other) {
  if (other != this) {
    std::swap(aim_item_id_, other->aim_item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400622::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400622_descriptor_;
  metadata.reflection = Proto51400622_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400623::kPackItemListFieldNumber;
const int Proto11400623::kPutonItemListFieldNumber;
#endif  // !_MSC_VER

Proto11400623::Proto11400623()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400623::InitAsDefaultInstance() {
}

Proto11400623::Proto11400623(const Proto11400623& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400623::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400623::~Proto11400623() {
  SharedDtor();
}

void Proto11400623::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400623::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400623::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400623_descriptor_;
}

const Proto11400623& Proto11400623::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto11400623* Proto11400623::default_instance_ = NULL;

Proto11400623* Proto11400623::New() const {
  return new Proto11400623;
}

void Proto11400623::Clear() {
  pack_item_list_.Clear();
  puton_item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400623::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem pack_item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pack_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pack_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_pack_item_list;
        if (input->ExpectTag(18)) goto parse_puton_item_list;
        break;
      }
      
      // repeated .ProtoItem puton_item_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_puton_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_puton_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_puton_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400623::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem pack_item_list = 1;
  for (int i = 0; i < this->pack_item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pack_item_list(i), output);
  }
  
  // repeated .ProtoItem puton_item_list = 2;
  for (int i = 0; i < this->puton_item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->puton_item_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400623::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem pack_item_list = 1;
  for (int i = 0; i < this->pack_item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pack_item_list(i), target);
  }
  
  // repeated .ProtoItem puton_item_list = 2;
  for (int i = 0; i < this->puton_item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->puton_item_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400623::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoItem pack_item_list = 1;
  total_size += 1 * this->pack_item_list_size();
  for (int i = 0; i < this->pack_item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pack_item_list(i));
  }
  
  // repeated .ProtoItem puton_item_list = 2;
  total_size += 1 * this->puton_item_list_size();
  for (int i = 0; i < this->puton_item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->puton_item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400623::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400623* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400623*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400623::MergeFrom(const Proto11400623& from) {
  GOOGLE_CHECK_NE(&from, this);
  pack_item_list_.MergeFrom(from.pack_item_list_);
  puton_item_list_.MergeFrom(from.puton_item_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400623::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400623::CopyFrom(const Proto11400623& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400623::IsInitialized() const {
  
  return true;
}

void Proto11400623::Swap(Proto11400623* other) {
  if (other != this) {
    pack_item_list_.Swap(&other->pack_item_list_);
    puton_item_list_.Swap(&other->puton_item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400623::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400623_descriptor_;
  metadata.reflection = Proto11400623_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400623::kResultItemListFieldNumber;
#endif  // !_MSC_VER

Proto51400623::Proto51400623()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400623::InitAsDefaultInstance() {
}

Proto51400623::Proto51400623(const Proto51400623& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400623::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400623::~Proto51400623() {
  SharedDtor();
}

void Proto51400623::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400623::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400623::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400623_descriptor_;
}

const Proto51400623& Proto51400623::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto51400623* Proto51400623::default_instance_ = NULL;

Proto51400623* Proto51400623::New() const {
  return new Proto51400623;
}

void Proto51400623::Clear() {
  result_item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400623::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem result_item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_result_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_result_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_result_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400623::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem result_item_list = 1;
  for (int i = 0; i < this->result_item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result_item_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400623::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem result_item_list = 1;
  for (int i = 0; i < this->result_item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->result_item_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400623::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoItem result_item_list = 1;
  total_size += 1 * this->result_item_list_size();
  for (int i = 0; i < this->result_item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->result_item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400623::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400623* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400623*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400623::MergeFrom(const Proto51400623& from) {
  GOOGLE_CHECK_NE(&from, this);
  result_item_list_.MergeFrom(from.result_item_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400623::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400623::CopyFrom(const Proto51400623& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400623::IsInitialized() const {
  
  return true;
}

void Proto51400623::Swap(Proto51400623* other) {
  if (other != this) {
    result_item_list_.Swap(&other->result_item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400623::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400623_descriptor_;
  metadata.reflection = Proto51400623_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80101407::kIsHasWeddingFieldNumber;
#endif  // !_MSC_VER

Proto80101407::Proto80101407()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80101407::InitAsDefaultInstance() {
}

Proto80101407::Proto80101407(const Proto80101407& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80101407::SharedCtor() {
  _cached_size_ = 0;
  is_has_wedding_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80101407::~Proto80101407() {
  SharedDtor();
}

void Proto80101407::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80101407::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80101407::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80101407_descriptor_;
}

const Proto80101407& Proto80101407::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto80101407* Proto80101407::default_instance_ = NULL;

Proto80101407* Proto80101407::New() const {
  return new Proto80101407;
}

void Proto80101407::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_has_wedding_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80101407::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 is_has_wedding = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_has_wedding_)));
          set_has_is_has_wedding();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80101407::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 is_has_wedding = 1;
  if (has_is_has_wedding()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->is_has_wedding(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80101407::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 is_has_wedding = 1;
  if (has_is_has_wedding()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->is_has_wedding(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80101407::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 is_has_wedding = 1;
    if (has_is_has_wedding()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_has_wedding());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80101407::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80101407* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80101407*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80101407::MergeFrom(const Proto80101407& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_has_wedding()) {
      set_is_has_wedding(from.is_has_wedding());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80101407::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80101407::CopyFrom(const Proto80101407& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80101407::IsInitialized() const {
  
  return true;
}

void Proto80101407::Swap(Proto80101407* other) {
  if (other != this) {
    std::swap(is_has_wedding_, other->is_has_wedding_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80101407::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80101407_descriptor_;
  metadata.reflection = Proto80101407_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100805::kLeftTimesFieldNumber;
#endif  // !_MSC_VER

Proto50100805::Proto50100805()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100805::InitAsDefaultInstance() {
}

Proto50100805::Proto50100805(const Proto50100805& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100805::SharedCtor() {
  _cached_size_ = 0;
  left_times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100805::~Proto50100805() {
  SharedDtor();
}

void Proto50100805::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100805::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100805::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100805_descriptor_;
}

const Proto50100805& Proto50100805::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto50100805* Proto50100805::default_instance_ = NULL;

Proto50100805* Proto50100805::New() const {
  return new Proto50100805;
}

void Proto50100805::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_times_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100805::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_times = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_times_)));
          set_has_left_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100805::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_times = 1;
  if (has_left_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_times(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100805::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_times = 1;
  if (has_left_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_times(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100805::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_times = 1;
    if (has_left_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_times());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100805::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100805* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100805*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100805::MergeFrom(const Proto50100805& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_times()) {
      set_left_times(from.left_times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100805::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100805::CopyFrom(const Proto50100805& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100805::IsInitialized() const {
  
  return true;
}

void Proto50100805::Swap(Proto50100805* other) {
  if (other != this) {
    std::swap(left_times_, other->left_times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100805::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100805_descriptor_;
  metadata.reflection = Proto50100805_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80101408::kItemIdFieldNumber;
const int Proto80101408::kItemNumFieldNumber;
const int Proto80101408::kSenderIdFieldNumber;
const int Proto80101408::kSenderNameFieldNumber;
const int Proto80101408::kReceiverIdFieldNumber;
const int Proto80101408::kReceiverNameFieldNumber;
const int Proto80101408::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto80101408::Proto80101408()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80101408::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto80101408::Proto80101408(const Proto80101408& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80101408::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  item_num_ = 0;
  sender_id_ = GOOGLE_LONGLONG(0);
  sender_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  receiver_id_ = GOOGLE_LONGLONG(0);
  receiver_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80101408::~Proto80101408() {
  SharedDtor();
}

void Proto80101408::SharedDtor() {
  if (sender_name_ != &::google::protobuf::internal::kEmptyString) {
    delete sender_name_;
  }
  if (receiver_name_ != &::google::protobuf::internal::kEmptyString) {
    delete receiver_name_;
  }
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto80101408::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80101408::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80101408_descriptor_;
}

const Proto80101408& Proto80101408::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto80101408* Proto80101408::default_instance_ = NULL;

Proto80101408* Proto80101408::New() const {
  return new Proto80101408;
}

void Proto80101408::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    item_num_ = 0;
    sender_id_ = GOOGLE_LONGLONG(0);
    if (has_sender_name()) {
      if (sender_name_ != &::google::protobuf::internal::kEmptyString) {
        sender_name_->clear();
      }
    }
    receiver_id_ = GOOGLE_LONGLONG(0);
    if (has_receiver_name()) {
      if (receiver_name_ != &::google::protobuf::internal::kEmptyString) {
        receiver_name_->clear();
      }
    }
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80101408::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_num;
        break;
      }
      
      // optional int32 item_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
          set_has_item_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_sender_id;
        break;
      }
      
      // optional int64 sender_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sender_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sender_id_)));
          set_has_sender_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_sender_name;
        break;
      }
      
      // optional string sender_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sender_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sender_name().data(), this->sender_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_receiver_id;
        break;
      }
      
      // optional int64 receiver_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_receiver_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &receiver_id_)));
          set_has_receiver_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_receiver_name;
        break;
      }
      
      // optional string receiver_name = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_receiver_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receiver_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->receiver_name().data(), this->receiver_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80101408::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 item_num = 2;
  if (has_item_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_num(), output);
  }
  
  // optional int64 sender_id = 3;
  if (has_sender_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->sender_id(), output);
  }
  
  // optional string sender_name = 4;
  if (has_sender_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sender_name().data(), this->sender_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->sender_name(), output);
  }
  
  // optional int64 receiver_id = 5;
  if (has_receiver_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->receiver_id(), output);
  }
  
  // optional string receiver_name = 6;
  if (has_receiver_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiver_name().data(), this->receiver_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->receiver_name(), output);
  }
  
  // optional .ProtoThreeObj other_info = 7;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80101408::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 item_num = 2;
  if (has_item_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_num(), target);
  }
  
  // optional int64 sender_id = 3;
  if (has_sender_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->sender_id(), target);
  }
  
  // optional string sender_name = 4;
  if (has_sender_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sender_name().data(), this->sender_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sender_name(), target);
  }
  
  // optional int64 receiver_id = 5;
  if (has_receiver_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->receiver_id(), target);
  }
  
  // optional string receiver_name = 6;
  if (has_receiver_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiver_name().data(), this->receiver_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->receiver_name(), target);
  }
  
  // optional .ProtoThreeObj other_info = 7;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80101408::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_num = 2;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_num());
    }
    
    // optional int64 sender_id = 3;
    if (has_sender_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->sender_id());
    }
    
    // optional string sender_name = 4;
    if (has_sender_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sender_name());
    }
    
    // optional int64 receiver_id = 5;
    if (has_receiver_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->receiver_id());
    }
    
    // optional string receiver_name = 6;
    if (has_receiver_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->receiver_name());
    }
    
    // optional .ProtoThreeObj other_info = 7;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80101408::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80101408* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80101408*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80101408::MergeFrom(const Proto80101408& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_num()) {
      set_item_num(from.item_num());
    }
    if (from.has_sender_id()) {
      set_sender_id(from.sender_id());
    }
    if (from.has_sender_name()) {
      set_sender_name(from.sender_name());
    }
    if (from.has_receiver_id()) {
      set_receiver_id(from.receiver_id());
    }
    if (from.has_receiver_name()) {
      set_receiver_name(from.receiver_name());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80101408::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80101408::CopyFrom(const Proto80101408& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80101408::IsInitialized() const {
  
  return true;
}

void Proto80101408::Swap(Proto80101408* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(item_num_, other->item_num_);
    std::swap(sender_id_, other->sender_id_);
    std::swap(sender_name_, other->sender_name_);
    std::swap(receiver_id_, other->receiver_id_);
    std::swap(receiver_name_, other->receiver_name_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80101408::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80101408_descriptor_;
  metadata.reflection = Proto80101408_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80101409::kFloatIdFieldNumber;
const int Proto80101409::kPartnerId1FieldNumber;
const int Proto80101409::kPartnerCareer1FieldNumber;
const int Proto80101409::kPartnerId2FieldNumber;
const int Proto80101409::kPartnerCareer2FieldNumber;
#endif  // !_MSC_VER

Proto80101409::Proto80101409()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80101409::InitAsDefaultInstance() {
}

Proto80101409::Proto80101409(const Proto80101409& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80101409::SharedCtor() {
  _cached_size_ = 0;
  float_id_ = GOOGLE_LONGLONG(0);
  partner_id_1_ = GOOGLE_LONGLONG(0);
  partner_career_1_ = 0;
  partner_id_2_ = GOOGLE_LONGLONG(0);
  partner_career_2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80101409::~Proto80101409() {
  SharedDtor();
}

void Proto80101409::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80101409::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80101409::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80101409_descriptor_;
}

const Proto80101409& Proto80101409::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto80101409* Proto80101409::default_instance_ = NULL;

Proto80101409* Proto80101409::New() const {
  return new Proto80101409;
}

void Proto80101409::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    float_id_ = GOOGLE_LONGLONG(0);
    partner_id_1_ = GOOGLE_LONGLONG(0);
    partner_career_1_ = 0;
    partner_id_2_ = GOOGLE_LONGLONG(0);
    partner_career_2_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80101409::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 float_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &float_id_)));
          set_has_float_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_partner_id_1;
        break;
      }
      
      // optional int64 partner_id_1 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_partner_id_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &partner_id_1_)));
          set_has_partner_id_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_partner_career_1;
        break;
      }
      
      // optional int32 partner_career_1 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_partner_career_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partner_career_1_)));
          set_has_partner_career_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_partner_id_2;
        break;
      }
      
      // optional int64 partner_id_2 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_partner_id_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &partner_id_2_)));
          set_has_partner_id_2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_partner_career_2;
        break;
      }
      
      // optional int32 partner_career_2 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_partner_career_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partner_career_2_)));
          set_has_partner_career_2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80101409::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 float_id = 1;
  if (has_float_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->float_id(), output);
  }
  
  // optional int64 partner_id_1 = 2;
  if (has_partner_id_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->partner_id_1(), output);
  }
  
  // optional int32 partner_career_1 = 3;
  if (has_partner_career_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->partner_career_1(), output);
  }
  
  // optional int64 partner_id_2 = 4;
  if (has_partner_id_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->partner_id_2(), output);
  }
  
  // optional int32 partner_career_2 = 5;
  if (has_partner_career_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->partner_career_2(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80101409::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 float_id = 1;
  if (has_float_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->float_id(), target);
  }
  
  // optional int64 partner_id_1 = 2;
  if (has_partner_id_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->partner_id_1(), target);
  }
  
  // optional int32 partner_career_1 = 3;
  if (has_partner_career_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->partner_career_1(), target);
  }
  
  // optional int64 partner_id_2 = 4;
  if (has_partner_id_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->partner_id_2(), target);
  }
  
  // optional int32 partner_career_2 = 5;
  if (has_partner_career_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->partner_career_2(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80101409::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 float_id = 1;
    if (has_float_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->float_id());
    }
    
    // optional int64 partner_id_1 = 2;
    if (has_partner_id_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->partner_id_1());
    }
    
    // optional int32 partner_career_1 = 3;
    if (has_partner_career_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->partner_career_1());
    }
    
    // optional int64 partner_id_2 = 4;
    if (has_partner_id_2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->partner_id_2());
    }
    
    // optional int32 partner_career_2 = 5;
    if (has_partner_career_2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->partner_career_2());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80101409::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80101409* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80101409*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80101409::MergeFrom(const Proto80101409& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_float_id()) {
      set_float_id(from.float_id());
    }
    if (from.has_partner_id_1()) {
      set_partner_id_1(from.partner_id_1());
    }
    if (from.has_partner_career_1()) {
      set_partner_career_1(from.partner_career_1());
    }
    if (from.has_partner_id_2()) {
      set_partner_id_2(from.partner_id_2());
    }
    if (from.has_partner_career_2()) {
      set_partner_career_2(from.partner_career_2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80101409::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80101409::CopyFrom(const Proto80101409& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80101409::IsInitialized() const {
  
  return true;
}

void Proto80101409::Swap(Proto80101409* other) {
  if (other != this) {
    std::swap(float_id_, other->float_id_);
    std::swap(partner_id_1_, other->partner_id_1_);
    std::swap(partner_career_1_, other->partner_career_1_);
    std::swap(partner_id_2_, other->partner_id_2_);
    std::swap(partner_career_2_, other->partner_career_2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80101409::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80101409_descriptor_;
  metadata.reflection = Proto80101409_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400100::kShowListFieldNumber;
const int Proto80400100::kHideListFieldNumber;
const int Proto80400100::kIconTypeFieldNumber;
#endif  // !_MSC_VER

Proto80400100::Proto80400100()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400100::InitAsDefaultInstance() {
}

Proto80400100::Proto80400100(const Proto80400100& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400100::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400100::~Proto80400100() {
  SharedDtor();
}

void Proto80400100::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400100::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400100::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400100_descriptor_;
}

const Proto80400100& Proto80400100::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto80400100* Proto80400100::default_instance_ = NULL;

Proto80400100* Proto80400100::New() const {
  return new Proto80400100;
}

void Proto80400100::Clear() {
  show_list_.Clear();
  hide_list_.Clear();
  icon_type_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400100::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 show_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_show_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_show_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_show_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_show_list;
        if (input->ExpectTag(16)) goto parse_hide_list;
        break;
      }
      
      // repeated int32 hide_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hide_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_hide_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_hide_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_hide_list;
        if (input->ExpectTag(26)) goto parse_icon_type;
        break;
      }
      
      // repeated .ProtoPairObj icon_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_icon_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_icon_type()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_icon_type;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400100::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 show_list = 1;
  for (int i = 0; i < this->show_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->show_list(i), output);
  }
  
  // repeated int32 hide_list = 2;
  for (int i = 0; i < this->hide_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->hide_list(i), output);
  }
  
  // repeated .ProtoPairObj icon_type = 3;
  for (int i = 0; i < this->icon_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->icon_type(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400100::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 show_list = 1;
  for (int i = 0; i < this->show_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->show_list(i), target);
  }
  
  // repeated int32 hide_list = 2;
  for (int i = 0; i < this->hide_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->hide_list(i), target);
  }
  
  // repeated .ProtoPairObj icon_type = 3;
  for (int i = 0; i < this->icon_type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->icon_type(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400100::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 show_list = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->show_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->show_list(i));
    }
    total_size += 1 * this->show_list_size() + data_size;
  }
  
  // repeated int32 hide_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->hide_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->hide_list(i));
    }
    total_size += 1 * this->hide_list_size() + data_size;
  }
  
  // repeated .ProtoPairObj icon_type = 3;
  total_size += 1 * this->icon_type_size();
  for (int i = 0; i < this->icon_type_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->icon_type(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400100::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400100* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400100*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400100::MergeFrom(const Proto80400100& from) {
  GOOGLE_CHECK_NE(&from, this);
  show_list_.MergeFrom(from.show_list_);
  hide_list_.MergeFrom(from.hide_list_);
  icon_type_.MergeFrom(from.icon_type_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400100::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400100::CopyFrom(const Proto80400100& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400100::IsInitialized() const {
  
  return true;
}

void Proto80400100::Swap(Proto80400100* other) {
  if (other != this) {
    show_list_.Swap(&other->show_list_);
    hide_list_.Swap(&other->hide_list_);
    icon_type_.Swap(&other->icon_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400100::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400100_descriptor_;
  metadata.reflection = Proto80400100_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400108::kNotifyListFieldNumber;
#endif  // !_MSC_VER

Proto80400108::Proto80400108()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400108::InitAsDefaultInstance() {
}

Proto80400108::Proto80400108(const Proto80400108& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400108::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400108::~Proto80400108() {
  SharedDtor();
}

void Proto80400108::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400108::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400108::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400108_descriptor_;
}

const Proto80400108& Proto80400108::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto80400108* Proto80400108::default_instance_ = NULL;

Proto80400108* Proto80400108::New() const {
  return new Proto80400108;
}

void Proto80400108::Clear() {
  notify_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400108::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoActRewardNotify notify_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_notify_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_notify_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_notify_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400108::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoActRewardNotify notify_list = 1;
  for (int i = 0; i < this->notify_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->notify_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400108::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoActRewardNotify notify_list = 1;
  for (int i = 0; i < this->notify_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->notify_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400108::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoActRewardNotify notify_list = 1;
  total_size += 1 * this->notify_list_size();
  for (int i = 0; i < this->notify_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->notify_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400108::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400108* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400108*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400108::MergeFrom(const Proto80400108& from) {
  GOOGLE_CHECK_NE(&from, this);
  notify_list_.MergeFrom(from.notify_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400108::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400108::CopyFrom(const Proto80400108& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400108::IsInitialized() const {
  
  return true;
}

void Proto80400108::Swap(Proto80400108* other) {
  if (other != this) {
    notify_list_.Swap(&other->notify_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400108::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400108_descriptor_;
  metadata.reflection = Proto80400108_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400382::kRoleIdFieldNumber;
const int Proto80400382::kLabelFieldNumber;
const int Proto80400382::kWeaponFieldNumber;
const int Proto80400382::kClothesFieldNumber;
const int Proto80400382::kFashionWeaponFieldNumber;
const int Proto80400382::kFashionClothesFieldNumber;
const int Proto80400382::kCareerFieldNumber;
const int Proto80400382::kSexFieldNumber;
const int Proto80400382::kTopWingIdFieldNumber;
const int Proto80400382::kTopWingLevelFieldNumber;
#endif  // !_MSC_VER

Proto80400382::Proto80400382()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400382::InitAsDefaultInstance() {
}

Proto80400382::Proto80400382(const Proto80400382& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400382::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  label_ = 0;
  weapon_ = 0;
  clothes_ = 0;
  fashion_weapon_ = 0;
  fashion_clothes_ = 0;
  career_ = 0;
  sex_ = 0;
  top_wing_id_ = 0;
  top_wing_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400382::~Proto80400382() {
  SharedDtor();
}

void Proto80400382::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400382::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400382::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400382_descriptor_;
}

const Proto80400382& Proto80400382::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto80400382* Proto80400382::default_instance_ = NULL;

Proto80400382* Proto80400382::New() const {
  return new Proto80400382;
}

void Proto80400382::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    label_ = 0;
    weapon_ = 0;
    clothes_ = 0;
    fashion_weapon_ = 0;
    fashion_clothes_ = 0;
    career_ = 0;
    sex_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    top_wing_id_ = 0;
    top_wing_level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400382::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_label;
        break;
      }
      
      // optional int32 label = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_label:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_)));
          set_has_label();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_weapon;
        break;
      }
      
      // optional int32 weapon = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_weapon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weapon_)));
          set_has_weapon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_clothes;
        break;
      }
      
      // optional int32 clothes = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_clothes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clothes_)));
          set_has_clothes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_fashion_weapon;
        break;
      }
      
      // optional int32 fashion_weapon = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_weapon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_weapon_)));
          set_has_fashion_weapon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_fashion_clothes;
        break;
      }
      
      // optional int32 fashion_clothes = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_clothes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_clothes_)));
          set_has_fashion_clothes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_career;
        break;
      }
      
      // optional int32 career = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_career:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &career_)));
          set_has_career();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_sex;
        break;
      }
      
      // optional int32 sex = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_top_wing_id;
        break;
      }
      
      // optional int32 top_wing_id = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_top_wing_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_wing_id_)));
          set_has_top_wing_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_top_wing_level;
        break;
      }
      
      // optional int32 top_wing_level = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_top_wing_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_wing_level_)));
          set_has_top_wing_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400382::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 label = 2;
  if (has_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->label(), output);
  }
  
  // optional int32 weapon = 3;
  if (has_weapon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->weapon(), output);
  }
  
  // optional int32 clothes = 4;
  if (has_clothes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->clothes(), output);
  }
  
  // optional int32 fashion_weapon = 5;
  if (has_fashion_weapon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->fashion_weapon(), output);
  }
  
  // optional int32 fashion_clothes = 6;
  if (has_fashion_clothes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->fashion_clothes(), output);
  }
  
  // optional int32 career = 7;
  if (has_career()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->career(), output);
  }
  
  // optional int32 sex = 8;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->sex(), output);
  }
  
  // optional int32 top_wing_id = 9;
  if (has_top_wing_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->top_wing_id(), output);
  }
  
  // optional int32 top_wing_level = 10;
  if (has_top_wing_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->top_wing_level(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400382::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 label = 2;
  if (has_label()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->label(), target);
  }
  
  // optional int32 weapon = 3;
  if (has_weapon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->weapon(), target);
  }
  
  // optional int32 clothes = 4;
  if (has_clothes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->clothes(), target);
  }
  
  // optional int32 fashion_weapon = 5;
  if (has_fashion_weapon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->fashion_weapon(), target);
  }
  
  // optional int32 fashion_clothes = 6;
  if (has_fashion_clothes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->fashion_clothes(), target);
  }
  
  // optional int32 career = 7;
  if (has_career()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->career(), target);
  }
  
  // optional int32 sex = 8;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->sex(), target);
  }
  
  // optional int32 top_wing_id = 9;
  if (has_top_wing_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->top_wing_id(), target);
  }
  
  // optional int32 top_wing_level = 10;
  if (has_top_wing_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->top_wing_level(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400382::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 label = 2;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label());
    }
    
    // optional int32 weapon = 3;
    if (has_weapon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weapon());
    }
    
    // optional int32 clothes = 4;
    if (has_clothes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->clothes());
    }
    
    // optional int32 fashion_weapon = 5;
    if (has_fashion_weapon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_weapon());
    }
    
    // optional int32 fashion_clothes = 6;
    if (has_fashion_clothes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_clothes());
    }
    
    // optional int32 career = 7;
    if (has_career()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->career());
    }
    
    // optional int32 sex = 8;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 top_wing_id = 9;
    if (has_top_wing_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top_wing_id());
    }
    
    // optional int32 top_wing_level = 10;
    if (has_top_wing_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top_wing_level());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400382::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400382* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400382*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400382::MergeFrom(const Proto80400382& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_label()) {
      set_label(from.label());
    }
    if (from.has_weapon()) {
      set_weapon(from.weapon());
    }
    if (from.has_clothes()) {
      set_clothes(from.clothes());
    }
    if (from.has_fashion_weapon()) {
      set_fashion_weapon(from.fashion_weapon());
    }
    if (from.has_fashion_clothes()) {
      set_fashion_clothes(from.fashion_clothes());
    }
    if (from.has_career()) {
      set_career(from.career());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_top_wing_id()) {
      set_top_wing_id(from.top_wing_id());
    }
    if (from.has_top_wing_level()) {
      set_top_wing_level(from.top_wing_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400382::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400382::CopyFrom(const Proto80400382& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400382::IsInitialized() const {
  
  return true;
}

void Proto80400382::Swap(Proto80400382* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(label_, other->label_);
    std::swap(weapon_, other->weapon_);
    std::swap(clothes_, other->clothes_);
    std::swap(fashion_weapon_, other->fashion_weapon_);
    std::swap(fashion_clothes_, other->fashion_clothes_);
    std::swap(career_, other->career_);
    std::swap(sex_, other->sex_);
    std::swap(top_wing_id_, other->top_wing_id_);
    std::swap(top_wing_level_, other->top_wing_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400382::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400382_descriptor_;
  metadata.reflection = Proto80400382_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11402401::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto11402401::Proto11402401()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11402401::InitAsDefaultInstance() {
}

Proto11402401::Proto11402401(const Proto11402401& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11402401::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11402401::~Proto11402401() {
  SharedDtor();
}

void Proto11402401::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11402401::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11402401::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11402401_descriptor_;
}

const Proto11402401& Proto11402401::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto11402401* Proto11402401::default_instance_ = NULL;

Proto11402401* Proto11402401::New() const {
  return new Proto11402401;
}

void Proto11402401::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11402401::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11402401::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11402401::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11402401::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11402401::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11402401* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11402401*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11402401::MergeFrom(const Proto11402401& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11402401::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11402401::CopyFrom(const Proto11402401& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11402401::IsInitialized() const {
  
  return true;
}

void Proto11402401::Swap(Proto11402401* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11402401::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11402401_descriptor_;
  metadata.reflection = Proto11402401_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11402402::kResponeTypeFieldNumber;
const int Proto11402402::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto11402402::Proto11402402()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11402402::InitAsDefaultInstance() {
}

Proto11402402::Proto11402402(const Proto11402402& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11402402::SharedCtor() {
  _cached_size_ = 0;
  respone_type_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11402402::~Proto11402402() {
  SharedDtor();
}

void Proto11402402::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11402402::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11402402::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11402402_descriptor_;
}

const Proto11402402& Proto11402402::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto11402402* Proto11402402::default_instance_ = NULL;

Proto11402402* Proto11402402::New() const {
  return new Proto11402402;
}

void Proto11402402::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    respone_type_ = 0;
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11402402::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 respone_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &respone_type_)));
          set_has_respone_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11402402::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 respone_type = 1;
  if (has_respone_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->respone_type(), output);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11402402::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 respone_type = 1;
  if (has_respone_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->respone_type(), target);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11402402::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 respone_type = 1;
    if (has_respone_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->respone_type());
    }
    
    // optional int64 role_id = 2;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11402402::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11402402* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11402402*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11402402::MergeFrom(const Proto11402402& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_respone_type()) {
      set_respone_type(from.respone_type());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11402402::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11402402::CopyFrom(const Proto11402402& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11402402::IsInitialized() const {
  
  return true;
}

void Proto11402402::Swap(Proto11402402* other) {
  if (other != this) {
    std::swap(respone_type_, other->respone_type_);
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11402402::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11402402_descriptor_;
  metadata.reflection = Proto11402402_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11402403::kItemIdFieldNumber;
const int Proto11402403::kPackIndexFieldNumber;
const int Proto11402403::kItemAmountFieldNumber;
#endif  // !_MSC_VER

Proto11402403::Proto11402403()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11402403::InitAsDefaultInstance() {
}

Proto11402403::Proto11402403(const Proto11402403& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11402403::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  pack_index_ = 0;
  item_amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11402403::~Proto11402403() {
  SharedDtor();
}

void Proto11402403::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11402403::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11402403::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11402403_descriptor_;
}

const Proto11402403& Proto11402403::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto11402403* Proto11402403::default_instance_ = NULL;

Proto11402403* Proto11402403::New() const {
  return new Proto11402403;
}

void Proto11402403::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    pack_index_ = 0;
    item_amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11402403::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pack_index;
        break;
      }
      
      // optional int32 pack_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pack_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pack_index_)));
          set_has_pack_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_amount;
        break;
      }
      
      // optional int32 item_amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_amount_)));
          set_has_item_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11402403::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 pack_index = 2;
  if (has_pack_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pack_index(), output);
  }
  
  // optional int32 item_amount = 3;
  if (has_item_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11402403::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 pack_index = 2;
  if (has_pack_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pack_index(), target);
  }
  
  // optional int32 item_amount = 3;
  if (has_item_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11402403::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 pack_index = 2;
    if (has_pack_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pack_index());
    }
    
    // optional int32 item_amount = 3;
    if (has_item_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11402403::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11402403* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11402403*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11402403::MergeFrom(const Proto11402403& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_pack_index()) {
      set_pack_index(from.pack_index());
    }
    if (from.has_item_amount()) {
      set_item_amount(from.item_amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11402403::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11402403::CopyFrom(const Proto11402403& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11402403::IsInitialized() const {
  
  return true;
}

void Proto11402403::Swap(Proto11402403* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(pack_index_, other->pack_index_);
    std::swap(item_amount_, other->item_amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11402403::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11402403_descriptor_;
  metadata.reflection = Proto11402403_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11402404::kItemIdFieldNumber;
const int Proto11402404::kPackIndexFieldNumber;
const int Proto11402404::kItemAmountFieldNumber;
#endif  // !_MSC_VER

Proto11402404::Proto11402404()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11402404::InitAsDefaultInstance() {
}

Proto11402404::Proto11402404(const Proto11402404& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11402404::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  pack_index_ = 0;
  item_amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11402404::~Proto11402404() {
  SharedDtor();
}

void Proto11402404::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11402404::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11402404::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11402404_descriptor_;
}

const Proto11402404& Proto11402404::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto11402404* Proto11402404::default_instance_ = NULL;

Proto11402404* Proto11402404::New() const {
  return new Proto11402404;
}

void Proto11402404::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    pack_index_ = 0;
    item_amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11402404::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pack_index;
        break;
      }
      
      // optional int32 pack_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pack_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pack_index_)));
          set_has_pack_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_amount;
        break;
      }
      
      // optional int32 item_amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_amount_)));
          set_has_item_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11402404::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 pack_index = 2;
  if (has_pack_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pack_index(), output);
  }
  
  // optional int32 item_amount = 3;
  if (has_item_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11402404::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 pack_index = 2;
  if (has_pack_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pack_index(), target);
  }
  
  // optional int32 item_amount = 3;
  if (has_item_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11402404::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 pack_index = 2;
    if (has_pack_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pack_index());
    }
    
    // optional int32 item_amount = 3;
    if (has_item_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11402404::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11402404* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11402404*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11402404::MergeFrom(const Proto11402404& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_pack_index()) {
      set_pack_index(from.pack_index());
    }
    if (from.has_item_amount()) {
      set_item_amount(from.item_amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11402404::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11402404::CopyFrom(const Proto11402404& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11402404::IsInitialized() const {
  
  return true;
}

void Proto11402404::Swap(Proto11402404* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(pack_index_, other->pack_index_);
    std::swap(item_amount_, other->item_amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11402404::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11402404_descriptor_;
  metadata.reflection = Proto11402404_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51402403::kItemListFieldNumber;
#endif  // !_MSC_VER

Proto51402403::Proto51402403()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51402403::InitAsDefaultInstance() {
}

Proto51402403::Proto51402403(const Proto51402403& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51402403::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51402403::~Proto51402403() {
  SharedDtor();
}

void Proto51402403::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51402403::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51402403::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51402403_descriptor_;
}

const Proto51402403& Proto51402403::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto51402403* Proto51402403::default_instance_ = NULL;

Proto51402403* Proto51402403::New() const {
  return new Proto51402403;
}

void Proto51402403::Clear() {
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51402403::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51402403::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51402403::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51402403::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoItem item_list = 1;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51402403::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51402403* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51402403*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51402403::MergeFrom(const Proto51402403& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51402403::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51402403::CopyFrom(const Proto51402403& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51402403::IsInitialized() const {
  
  return true;
}

void Proto51402403::Swap(Proto51402403* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51402403::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51402403_descriptor_;
  metadata.reflection = Proto51402403_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51402404::kItemListFieldNumber;
#endif  // !_MSC_VER

Proto51402404::Proto51402404()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51402404::InitAsDefaultInstance() {
}

Proto51402404::Proto51402404(const Proto51402404& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51402404::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51402404::~Proto51402404() {
  SharedDtor();
}

void Proto51402404::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51402404::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51402404::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51402404_descriptor_;
}

const Proto51402404& Proto51402404::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto51402404* Proto51402404::default_instance_ = NULL;

Proto51402404* Proto51402404::New() const {
  return new Proto51402404;
}

void Proto51402404::Clear() {
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51402404::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51402404::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51402404::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51402404::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoItem item_list = 1;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51402404::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51402404* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51402404*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51402404::MergeFrom(const Proto51402404& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51402404::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51402404::CopyFrom(const Proto51402404& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51402404::IsInitialized() const {
  
  return true;
}

void Proto51402404::Swap(Proto51402404* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51402404::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51402404_descriptor_;
  metadata.reflection = Proto51402404_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400241::kRoleIdFieldNumber;
const int Proto80400241::kRoleNameFieldNumber;
#endif  // !_MSC_VER

Proto80400241::Proto80400241()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400241::InitAsDefaultInstance() {
}

Proto80400241::Proto80400241(const Proto80400241& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400241::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400241::~Proto80400241() {
  SharedDtor();
}

void Proto80400241::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400241::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400241::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400241_descriptor_;
}

const Proto80400241& Proto80400241::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto80400241* Proto80400241::default_instance_ = NULL;

Proto80400241* Proto80400241::New() const {
  return new Proto80400241;
}

void Proto80400241::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400241::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_role_name;
        break;
      }
      
      // optional string role_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400241::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional string role_name = 2;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->role_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400241::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional string role_name = 2;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->role_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400241::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional string role_name = 2;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400241::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400241* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400241*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400241::MergeFrom(const Proto80400241& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400241::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400241::CopyFrom(const Proto80400241& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400241::IsInitialized() const {
  
  return true;
}

void Proto80400241::Swap(Proto80400241* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(role_name_, other->role_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400241::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400241_descriptor_;
  metadata.reflection = Proto80400241_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400242::kResponeTypeFieldNumber;
const int Proto80400242::kRoleIdFieldNumber;
const int Proto80400242::kRoleNameFieldNumber;
#endif  // !_MSC_VER

Proto80400242::Proto80400242()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400242::InitAsDefaultInstance() {
}

Proto80400242::Proto80400242(const Proto80400242& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400242::SharedCtor() {
  _cached_size_ = 0;
  respone_type_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400242::~Proto80400242() {
  SharedDtor();
}

void Proto80400242::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400242::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400242::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400242_descriptor_;
}

const Proto80400242& Proto80400242::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto80400242* Proto80400242::default_instance_ = NULL;

Proto80400242* Proto80400242::New() const {
  return new Proto80400242;
}

void Proto80400242::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    respone_type_ = 0;
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400242::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 respone_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &respone_type_)));
          set_has_respone_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_role_name;
        break;
      }
      
      // optional string role_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400242::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 respone_type = 1;
  if (has_respone_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->respone_type(), output);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->role_id(), output);
  }
  
  // optional string role_name = 3;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->role_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400242::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 respone_type = 1;
  if (has_respone_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->respone_type(), target);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->role_id(), target);
  }
  
  // optional string role_name = 3;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->role_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400242::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 respone_type = 1;
    if (has_respone_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->respone_type());
    }
    
    // optional int64 role_id = 2;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional string role_name = 3;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400242::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400242* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400242*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400242::MergeFrom(const Proto80400242& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_respone_type()) {
      set_respone_type(from.respone_type());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400242::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400242::CopyFrom(const Proto80400242& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400242::IsInitialized() const {
  
  return true;
}

void Proto80400242::Swap(Proto80400242* other) {
  if (other != this) {
    std::swap(respone_type_, other->respone_type_);
    std::swap(role_id_, other->role_id_);
    std::swap(role_name_, other->role_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400242::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400242_descriptor_;
  metadata.reflection = Proto80400242_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400246::kItemListFieldNumber;
#endif  // !_MSC_VER

Proto80400246::Proto80400246()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400246::InitAsDefaultInstance() {
}

Proto80400246::Proto80400246(const Proto80400246& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400246::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400246::~Proto80400246() {
  SharedDtor();
}

void Proto80400246::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400246::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400246::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400246_descriptor_;
}

const Proto80400246& Proto80400246::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto80400246* Proto80400246::default_instance_ = NULL;

Proto80400246* Proto80400246::New() const {
  return new Proto80400246;
}

void Proto80400246::Clear() {
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400246::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400246::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400246::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400246::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoItem item_list = 1;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400246::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400246* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400246*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400246::MergeFrom(const Proto80400246& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400246::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400246::CopyFrom(const Proto80400246& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400246::IsInitialized() const {
  
  return true;
}

void Proto80400246::Swap(Proto80400246* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400246::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400246_descriptor_;
  metadata.reflection = Proto80400246_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400247::kItemListFieldNumber;
#endif  // !_MSC_VER

Proto80400247::Proto80400247()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400247::InitAsDefaultInstance() {
}

Proto80400247::Proto80400247(const Proto80400247& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400247::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400247::~Proto80400247() {
  SharedDtor();
}

void Proto80400247::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400247::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400247::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400247_descriptor_;
}

const Proto80400247& Proto80400247::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto80400247* Proto80400247::default_instance_ = NULL;

Proto80400247* Proto80400247::New() const {
  return new Proto80400247;
}

void Proto80400247::Clear() {
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400247::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400247::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400247::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400247::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoItem item_list = 1;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400247::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400247* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400247*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400247::MergeFrom(const Proto80400247& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400247::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400247::CopyFrom(const Proto80400247& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400247::IsInitialized() const {
  
  return true;
}

void Proto80400247::Swap(Proto80400247* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400247::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400247_descriptor_;
  metadata.reflection = Proto80400247_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51402402::kConditionFieldNumber;
#endif  // !_MSC_VER

Proto51402402::Proto51402402()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51402402::InitAsDefaultInstance() {
}

Proto51402402::Proto51402402(const Proto51402402& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51402402::SharedCtor() {
  _cached_size_ = 0;
  condition_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51402402::~Proto51402402() {
  SharedDtor();
}

void Proto51402402::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51402402::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51402402::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51402402_descriptor_;
}

const Proto51402402& Proto51402402::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto51402402* Proto51402402::default_instance_ = NULL;

Proto51402402* Proto51402402::New() const {
  return new Proto51402402;
}

void Proto51402402::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    condition_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51402402::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 condition = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &condition_)));
          set_has_condition();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51402402::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 condition = 1;
  if (has_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->condition(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51402402::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 condition = 1;
  if (has_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->condition(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51402402::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 condition = 1;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->condition());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51402402::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51402402* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51402402*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51402402::MergeFrom(const Proto51402402& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_condition()) {
      set_condition(from.condition());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51402402::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51402402::CopyFrom(const Proto51402402& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51402402::IsInitialized() const {
  
  return true;
}

void Proto51402402::Swap(Proto51402402* other) {
  if (other != this) {
    std::swap(condition_, other->condition_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51402402::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51402402_descriptor_;
  metadata.reflection = Proto51402402_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400243::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto80400243::Proto80400243()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400243::InitAsDefaultInstance() {
}

Proto80400243::Proto80400243(const Proto80400243& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400243::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400243::~Proto80400243() {
  SharedDtor();
}

void Proto80400243::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400243::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400243::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400243_descriptor_;
}

const Proto80400243& Proto80400243::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto80400243* Proto80400243::default_instance_ = NULL;

Proto80400243* Proto80400243::New() const {
  return new Proto80400243;
}

void Proto80400243::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400243::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400243::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400243::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400243::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400243::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400243* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400243*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400243::MergeFrom(const Proto80400243& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400243::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400243::CopyFrom(const Proto80400243& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400243::IsInitialized() const {
  
  return true;
}

void Proto80400243::Swap(Proto80400243* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400243::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400243_descriptor_;
  metadata.reflection = Proto80400243_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400233::kRoleListFieldNumber;
#endif  // !_MSC_VER

Proto80400233::Proto80400233()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400233::InitAsDefaultInstance() {
}

Proto80400233::Proto80400233(const Proto80400233& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400233::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400233::~Proto80400233() {
  SharedDtor();
}

void Proto80400233::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400233::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400233::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400233_descriptor_;
}

const Proto80400233& Proto80400233::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient013_2eproto();  return *default_instance_;
}

Proto80400233* Proto80400233::default_instance_ = NULL;

Proto80400233* Proto80400233::New() const {
  return new Proto80400233;
}

void Proto80400233::Clear() {
  role_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400233::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoNearRole role_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_role_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_role_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400233::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoNearRole role_list = 1;
  for (int i = 0; i < this->role_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->role_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400233::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoNearRole role_list = 1;
  for (int i = 0; i < this->role_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->role_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400233::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoNearRole role_list = 1;
  total_size += 1 * this->role_list_size();
  for (int i = 0; i < this->role_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400233::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400233* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400233*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400233::MergeFrom(const Proto80400233& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_list_.MergeFrom(from.role_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400233::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400233::CopyFrom(const Proto80400233& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400233::IsInitialized() const {
  
  return true;
}

void Proto80400233::Swap(Proto80400233* other) {
  if (other != this) {
    role_list_.Swap(&other->role_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400233::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400233_descriptor_;
  metadata.reflection = Proto80400233_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
