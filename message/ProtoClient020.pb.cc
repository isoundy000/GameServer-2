// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient020.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto50102016_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102016_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102017_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102017_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102017_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102017_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102018_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102018_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102018_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102018_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102031_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102031_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102031_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102031_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102033_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102033_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102033_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102033_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102032_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102032_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102034_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102034_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102041_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102041_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102041_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102041_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100112_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100112_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100509_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100509_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100510_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100510_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102101_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102101_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102102_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102102_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102102_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102102_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102103_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102103_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102103_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102103_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102104_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102104_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400389_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400389_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400124_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400124_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400123_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400123_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400124_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400124_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102105_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102105_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102051_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102051_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102051_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102051_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400942_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400942_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400942_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400942_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400929_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400929_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401209_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401209_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400136_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400136_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400136_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400136_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400943_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400943_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400943_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400943_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100216_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100216_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102201_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102201_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102202_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102202_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102019_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102019_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11408001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11408001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11408002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11408002_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51408001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51408001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11408003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11408003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51408002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51408002_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51408003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51408003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400390_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400390_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50404001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50404001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50404002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50404002_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient020_2eproto() {
  protobuf_AddDesc_ProtoClient020_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient020.proto");
  GOOGLE_CHECK(file != NULL);
  Proto50102016_descriptor_ = file->message_type(0);
  static const int Proto50102016_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102016, column_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102016, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102016, is_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102016, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102016, slot_info_),
  };
  Proto50102016_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102016_descriptor_,
      Proto50102016::default_instance_,
      Proto50102016_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102016, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102016, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102016));
  Proto10102017_descriptor_ = file->message_type(1);
  static const int Proto10102017_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102017, reward_type_),
  };
  Proto10102017_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102017_descriptor_,
      Proto10102017::default_instance_,
      Proto10102017_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102017, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102017, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102017));
  Proto50102017_descriptor_ = file->message_type(2);
  static const int Proto50102017_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102017, reward_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102017, nine_word_reward_),
  };
  Proto50102017_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102017_descriptor_,
      Proto50102017::default_instance_,
      Proto50102017_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102017, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102017, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102017));
  Proto10102018_descriptor_ = file->message_type(3);
  static const int Proto10102018_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102018, rank_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102018, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102018, page_),
  };
  Proto10102018_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102018_descriptor_,
      Proto10102018::default_instance_,
      Proto10102018_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102018, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102018, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102018));
  Proto50102018_descriptor_ = file->message_type(4);
  static const int Proto50102018_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102018, rank_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102018, rank_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102018, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102018, cur_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102018, total_page_),
  };
  Proto50102018_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102018_descriptor_,
      Proto50102018::default_instance_,
      Proto50102018_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102018, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102018, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102018));
  Proto10102031_descriptor_ = file->message_type(5);
  static const int Proto10102031_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102031, activity_id_),
  };
  Proto10102031_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102031_descriptor_,
      Proto10102031::default_instance_,
      Proto10102031_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102031, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102031, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102031));
  Proto50102031_descriptor_ = file->message_type(6);
  static const int Proto50102031_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102031, person_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102031, server_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102031, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102031, left_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102031, slot_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102031, fina_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102031, other_info_),
  };
  Proto50102031_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102031_descriptor_,
      Proto50102031::default_instance_,
      Proto50102031_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102031, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102031, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102031));
  Proto50102033_descriptor_ = file->message_type(7);
  static const int Proto50102033_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102033, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102033, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102033, slot_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102033, other_info_),
  };
  Proto50102033_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102033_descriptor_,
      Proto50102033::default_instance_,
      Proto50102033_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102033, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102033, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102033));
  Proto10102033_descriptor_ = file->message_type(8);
  static const int Proto10102033_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102033, id_),
  };
  Proto10102033_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102033_descriptor_,
      Proto10102033::default_instance_,
      Proto10102033_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102033, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102033, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102033));
  Proto50102032_descriptor_ = file->message_type(9);
  static const int Proto50102032_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102032, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102032, slot_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102032, other_info_),
  };
  Proto50102032_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102032_descriptor_,
      Proto50102032::default_instance_,
      Proto50102032_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102032, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102032, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102032));
  Proto50102034_descriptor_ = file->message_type(10);
  static const int Proto50102034_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102034, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102034, other_info_),
  };
  Proto50102034_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102034_descriptor_,
      Proto50102034::default_instance_,
      Proto50102034_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102034, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102034, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102034));
  Proto10102041_descriptor_ = file->message_type(11);
  static const int Proto10102041_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102041, slot_id_),
  };
  Proto10102041_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102041_descriptor_,
      Proto10102041::default_instance_,
      Proto10102041_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102041, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102041, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102041));
  Proto50102041_descriptor_ = file->message_type(12);
  static const int Proto50102041_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102041, slot_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102041, slot_info_),
  };
  Proto50102041_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102041_descriptor_,
      Proto50102041::default_instance_,
      Proto50102041_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102041, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102041, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102041));
  Proto80100112_descriptor_ = file->message_type(13);
  static const int Proto80100112_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100112, fighter_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100112, fighter_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100112, mover_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100112, force_),
  };
  Proto80100112_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100112_descriptor_,
      Proto80100112::default_instance_,
      Proto80100112_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100112, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100112, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100112));
  Proto50100509_descriptor_ = file->message_type(14);
  static const int Proto50100509_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100509, sell_log_),
  };
  Proto50100509_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100509_descriptor_,
      Proto50100509::default_instance_,
      Proto50100509_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100509, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100509, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100509));
  Proto10100510_descriptor_ = file->message_type(15);
  static const int Proto10100510_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100510, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100510, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100510, total_),
  };
  Proto10100510_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100510_descriptor_,
      Proto10100510::default_instance_,
      Proto10100510_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100510, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100510, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100510));
  Proto50102101_descriptor_ = file->message_type(16);
  static const int Proto50102101_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102101, wave_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102101, wave_player_),
  };
  Proto50102101_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102101_descriptor_,
      Proto50102101::default_instance_,
      Proto50102101_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102101, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102101, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102101));
  Proto10102102_descriptor_ = file->message_type(17);
  static const int Proto10102102_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102102, wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102102, is_total_),
  };
  Proto10102102_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102102_descriptor_,
      Proto10102102::default_instance_,
      Proto10102102_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102102, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102102, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102102));
  Proto50102102_descriptor_ = file->message_type(18);
  static const int Proto50102102_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102102, wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102102, wave_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102102, is_total_),
  };
  Proto50102102_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102102_descriptor_,
      Proto50102102::default_instance_,
      Proto50102102_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102102, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102102, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102102));
  Proto10102103_descriptor_ = file->message_type(19);
  static const int Proto10102103_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102103, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102103, type_),
  };
  Proto10102103_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102103_descriptor_,
      Proto10102103::default_instance_,
      Proto10102103_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102103, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102103, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102103));
  Proto50102103_descriptor_ = file->message_type(20);
  static const int Proto50102103_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102103, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102103, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102103, cheer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102103, encourage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102103, cheer_record_),
  };
  Proto50102103_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102103_descriptor_,
      Proto50102103::default_instance_,
      Proto50102103_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102103, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102103, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102103));
  Proto50102104_descriptor_ = file->message_type(21);
  static const int Proto50102104_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102104, cheer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102104, encourage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102104, be_cheer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102104, be_encourage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102104, my_cheer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102104, player_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102104, cheer_record_),
  };
  Proto50102104_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102104_descriptor_,
      Proto50102104::default_instance_,
      Proto50102104_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102104, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102104, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102104));
  Proto80400389_descriptor_ = file->message_type(22);
  static const int Proto80400389_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400389, main_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400389, open_days_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400389, absolute_days_),
  };
  Proto80400389_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400389_descriptor_,
      Proto80400389::default_instance_,
      Proto80400389_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400389, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400389, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400389));
  Proto11400124_descriptor_ = file->message_type(23);
  static const int Proto11400124_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400124, location_id_),
  };
  Proto11400124_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400124_descriptor_,
      Proto11400124::default_instance_,
      Proto11400124_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400124, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400124, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400124));
  Proto51400123_descriptor_ = file->message_type(24);
  static const int Proto51400123_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400123, recharge_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400123, draw_location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400123, left_tick_),
  };
  Proto51400123_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400123_descriptor_,
      Proto51400123::default_instance_,
      Proto51400123_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400123, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400123, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400123));
  Proto51400124_descriptor_ = file->message_type(25);
  static const int Proto51400124_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400124, location_id_),
  };
  Proto51400124_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400124_descriptor_,
      Proto51400124::default_instance_,
      Proto51400124_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400124, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400124, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400124));
  Proto10102105_descriptor_ = file->message_type(26);
  static const int Proto10102105_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102105, script_sort_),
  };
  Proto10102105_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102105_descriptor_,
      Proto10102105::default_instance_,
      Proto10102105_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102105, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102105, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102105));
  Proto10102051_descriptor_ = file->message_type(27);
  static const int Proto10102051_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102051, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102051, page_),
  };
  Proto10102051_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102051_descriptor_,
      Proto10102051::default_instance_,
      Proto10102051_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102051, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102051, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102051));
  Proto50102051_descriptor_ = file->message_type(28);
  static const int Proto50102051_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102051, left_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102051, rank_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102051, my_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102051, cur_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102051, total_page_),
  };
  Proto50102051_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102051_descriptor_,
      Proto50102051::default_instance_,
      Proto50102051_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102051, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102051, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102051));
  Proto10400942_descriptor_ = file->message_type(29);
  static const int Proto10400942_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400942, page_),
  };
  Proto10400942_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400942_descriptor_,
      Proto10400942::default_instance_,
      Proto10400942_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400942, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400942, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400942));
  Proto50400942_descriptor_ = file->message_type(30);
  static const int Proto50400942_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400942, cur_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400942, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400942, sword_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400942, my_rank_),
  };
  Proto50400942_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400942_descriptor_,
      Proto50400942::default_instance_,
      Proto50400942_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400942, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400942, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400942));
  Proto80400929_descriptor_ = file->message_type(31);
  static const int Proto80400929_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, scipt_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, used_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, copper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, star_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, is_first_pass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, ai_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, rescue_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, present_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, next_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, no_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, begin_wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, end_wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, cur_floor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, mult_),
  };
  Proto80400929_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400929_descriptor_,
      Proto80400929::default_instance_,
      Proto80400929_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400929, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400929));
  Proto51401209_descriptor_ = file->message_type(32);
  static const int Proto51401209_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401209, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401209, script_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401209, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401209, drop_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401209, is_show_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401209, card_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401209, card_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401209, is_vip_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401209, savvy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401209, reset_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401209, top_floor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401209, pass_wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401209, pass_chapter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401209, clean_item_),
  };
  Proto51401209_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401209_descriptor_,
      Proto51401209::default_instance_,
      Proto51401209_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401209, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401209, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401209));
  Proto51400136_descriptor_ = file->message_type(33);
  static const int Proto51400136_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400136, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400136, exchange_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400136, amount_),
  };
  Proto51400136_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400136_descriptor_,
      Proto51400136::default_instance_,
      Proto51400136_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400136, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400136, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400136));
  Proto11400136_descriptor_ = file->message_type(34);
  static const int Proto11400136_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400136, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400136, exchange_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400136, amount_),
  };
  Proto11400136_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400136_descriptor_,
      Proto11400136::default_instance_,
      Proto11400136_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400136, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400136, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400136));
  Proto10400943_descriptor_ = file->message_type(35);
  static const int Proto10400943_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400943, index_),
  };
  Proto10400943_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400943_descriptor_,
      Proto10400943::default_instance_,
      Proto10400943_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400943, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400943, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400943));
  Proto50400943_descriptor_ = file->message_type(36);
  static const int Proto50400943_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400943, index_),
  };
  Proto50400943_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400943_descriptor_,
      Proto50400943::default_instance_,
      Proto50400943_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400943, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400943, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400943));
  Proto10100216_descriptor_ = file->message_type(37);
  static const int Proto10100216_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100216, act_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100216, act_index_),
  };
  Proto10100216_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100216_descriptor_,
      Proto10100216::default_instance_,
      Proto10100216_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100216, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100216, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100216));
  Proto50102201_descriptor_ = file->message_type(38);
  static const int Proto50102201_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102201, activity_set_),
  };
  Proto50102201_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102201_descriptor_,
      Proto50102201::default_instance_,
      Proto50102201_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102201, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102201, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102201));
  Proto50102202_descriptor_ = file->message_type(39);
  static const int Proto50102202_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102202, value1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102202, value2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102202, left_tick_),
  };
  Proto50102202_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102202_descriptor_,
      Proto50102202::default_instance_,
      Proto50102202_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102202, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102202, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102202));
  Proto50102019_descriptor_ = file->message_type(40);
  static const int Proto50102019_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102019, begin_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102019, end_tick_),
  };
  Proto50102019_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102019_descriptor_,
      Proto50102019::default_instance_,
      Proto50102019_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102019, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102019, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102019));
  Proto11408001_descriptor_ = file->message_type(41);
  static const int Proto11408001_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11408001, player_id_),
  };
  Proto11408001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11408001_descriptor_,
      Proto11408001::default_instance_,
      Proto11408001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11408001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11408001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11408001));
  Proto11408002_descriptor_ = file->message_type(42);
  static const int Proto11408002_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11408002, offlinehook_drug_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11408002, offlinehook_drug_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11408002, surplus_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11408002, package_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11408002, index_),
  };
  Proto11408002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11408002_descriptor_,
      Proto11408002::default_instance_,
      Proto11408002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11408002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11408002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11408002));
  Proto51408001_descriptor_ = file->message_type(43);
  static const int Proto51408001_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408001, surplus_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408001, offlinehook_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408001, offlinehook_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408001, offlinehook_time_),
  };
  Proto51408001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51408001_descriptor_,
      Proto51408001::default_instance_,
      Proto51408001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51408001));
  Proto11408003_descriptor_ = file->message_type(44);
  static const int Proto11408003_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11408003, player_id_),
  };
  Proto11408003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11408003_descriptor_,
      Proto11408003::default_instance_,
      Proto11408003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11408003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11408003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11408003));
  Proto51408002_descriptor_ = file->message_type(45);
  static const int Proto51408002_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408002, reply_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408002, error_tips_),
  };
  Proto51408002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51408002_descriptor_,
      Proto51408002::default_instance_,
      Proto51408002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51408002));
  Proto51408003_descriptor_ = file->message_type(46);
  static const int Proto51408003_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408003, reply_),
  };
  Proto51408003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51408003_descriptor_,
      Proto51408003::default_instance_,
      Proto51408003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51408003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51408003));
  Proto80400390_descriptor_ = file->message_type(47);
  static const int Proto80400390_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400390, cur_contri_),
  };
  Proto80400390_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400390_descriptor_,
      Proto80400390::default_instance_,
      Proto80400390_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400390, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400390, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400390));
  Proto50404001_descriptor_ = file->message_type(48);
  static const int Proto50404001_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404001, next_league_fight_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404001, enemy_league_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404001, league_list_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404001, next_region_land_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404001, self_league_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404001, is_activity_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404001, cur_league_list_),
  };
  Proto50404001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50404001_descriptor_,
      Proto50404001::default_instance_,
      Proto50404001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50404001));
  Proto50404002_descriptor_ = file->message_type(49);
  static const int Proto50404002_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404002, bet_league_list_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404002, league_iswin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404002, support_league_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404002, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404002, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404002, win_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404002, attend_reward_),
  };
  Proto50404002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50404002_descriptor_,
      Proto50404002::default_instance_,
      Proto50404002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50404002));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient020_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102016_descriptor_, &Proto50102016::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102017_descriptor_, &Proto10102017::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102017_descriptor_, &Proto50102017::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102018_descriptor_, &Proto10102018::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102018_descriptor_, &Proto50102018::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102031_descriptor_, &Proto10102031::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102031_descriptor_, &Proto50102031::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102033_descriptor_, &Proto50102033::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102033_descriptor_, &Proto10102033::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102032_descriptor_, &Proto50102032::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102034_descriptor_, &Proto50102034::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102041_descriptor_, &Proto10102041::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102041_descriptor_, &Proto50102041::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100112_descriptor_, &Proto80100112::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100509_descriptor_, &Proto50100509::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100510_descriptor_, &Proto10100510::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102101_descriptor_, &Proto50102101::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102102_descriptor_, &Proto10102102::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102102_descriptor_, &Proto50102102::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102103_descriptor_, &Proto10102103::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102103_descriptor_, &Proto50102103::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102104_descriptor_, &Proto50102104::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400389_descriptor_, &Proto80400389::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400124_descriptor_, &Proto11400124::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400123_descriptor_, &Proto51400123::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400124_descriptor_, &Proto51400124::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102105_descriptor_, &Proto10102105::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102051_descriptor_, &Proto10102051::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102051_descriptor_, &Proto50102051::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400942_descriptor_, &Proto10400942::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400942_descriptor_, &Proto50400942::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400929_descriptor_, &Proto80400929::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401209_descriptor_, &Proto51401209::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400136_descriptor_, &Proto51400136::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400136_descriptor_, &Proto11400136::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400943_descriptor_, &Proto10400943::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400943_descriptor_, &Proto50400943::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100216_descriptor_, &Proto10100216::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102201_descriptor_, &Proto50102201::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102202_descriptor_, &Proto50102202::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102019_descriptor_, &Proto50102019::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11408001_descriptor_, &Proto11408001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11408002_descriptor_, &Proto11408002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51408001_descriptor_, &Proto51408001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11408003_descriptor_, &Proto11408003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51408002_descriptor_, &Proto51408002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51408003_descriptor_, &Proto51408003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400390_descriptor_, &Proto80400390::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50404001_descriptor_, &Proto50404001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50404002_descriptor_, &Proto50404002::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient020_2eproto() {
  delete Proto50102016::default_instance_;
  delete Proto50102016_reflection_;
  delete Proto10102017::default_instance_;
  delete Proto10102017_reflection_;
  delete Proto50102017::default_instance_;
  delete Proto50102017_reflection_;
  delete Proto10102018::default_instance_;
  delete Proto10102018_reflection_;
  delete Proto50102018::default_instance_;
  delete Proto50102018_reflection_;
  delete Proto10102031::default_instance_;
  delete Proto10102031_reflection_;
  delete Proto50102031::default_instance_;
  delete Proto50102031_reflection_;
  delete Proto50102033::default_instance_;
  delete Proto50102033_reflection_;
  delete Proto10102033::default_instance_;
  delete Proto10102033_reflection_;
  delete Proto50102032::default_instance_;
  delete Proto50102032_reflection_;
  delete Proto50102034::default_instance_;
  delete Proto50102034_reflection_;
  delete Proto10102041::default_instance_;
  delete Proto10102041_reflection_;
  delete Proto50102041::default_instance_;
  delete Proto50102041_reflection_;
  delete Proto80100112::default_instance_;
  delete Proto80100112_reflection_;
  delete Proto50100509::default_instance_;
  delete Proto50100509_reflection_;
  delete Proto10100510::default_instance_;
  delete Proto10100510_reflection_;
  delete Proto50102101::default_instance_;
  delete Proto50102101_reflection_;
  delete Proto10102102::default_instance_;
  delete Proto10102102_reflection_;
  delete Proto50102102::default_instance_;
  delete Proto50102102_reflection_;
  delete Proto10102103::default_instance_;
  delete Proto10102103_reflection_;
  delete Proto50102103::default_instance_;
  delete Proto50102103_reflection_;
  delete Proto50102104::default_instance_;
  delete Proto50102104_reflection_;
  delete Proto80400389::default_instance_;
  delete Proto80400389_reflection_;
  delete Proto11400124::default_instance_;
  delete Proto11400124_reflection_;
  delete Proto51400123::default_instance_;
  delete Proto51400123_reflection_;
  delete Proto51400124::default_instance_;
  delete Proto51400124_reflection_;
  delete Proto10102105::default_instance_;
  delete Proto10102105_reflection_;
  delete Proto10102051::default_instance_;
  delete Proto10102051_reflection_;
  delete Proto50102051::default_instance_;
  delete Proto50102051_reflection_;
  delete Proto10400942::default_instance_;
  delete Proto10400942_reflection_;
  delete Proto50400942::default_instance_;
  delete Proto50400942_reflection_;
  delete Proto80400929::default_instance_;
  delete Proto80400929_reflection_;
  delete Proto51401209::default_instance_;
  delete Proto51401209_reflection_;
  delete Proto51400136::default_instance_;
  delete Proto51400136_reflection_;
  delete Proto11400136::default_instance_;
  delete Proto11400136_reflection_;
  delete Proto10400943::default_instance_;
  delete Proto10400943_reflection_;
  delete Proto50400943::default_instance_;
  delete Proto50400943_reflection_;
  delete Proto10100216::default_instance_;
  delete Proto10100216_reflection_;
  delete Proto50102201::default_instance_;
  delete Proto50102201_reflection_;
  delete Proto50102202::default_instance_;
  delete Proto50102202_reflection_;
  delete Proto50102019::default_instance_;
  delete Proto50102019_reflection_;
  delete Proto11408001::default_instance_;
  delete Proto11408001_reflection_;
  delete Proto11408002::default_instance_;
  delete Proto11408002_reflection_;
  delete Proto51408001::default_instance_;
  delete Proto51408001_reflection_;
  delete Proto11408003::default_instance_;
  delete Proto11408003_reflection_;
  delete Proto51408002::default_instance_;
  delete Proto51408002_reflection_;
  delete Proto51408003::default_instance_;
  delete Proto51408003_reflection_;
  delete Proto80400390::default_instance_;
  delete Proto80400390_reflection_;
  delete Proto50404001::default_instance_;
  delete Proto50404001_reflection_;
  delete Proto50404002::default_instance_;
  delete Proto50404002_reflection_;
}

void protobuf_AddDesc_ProtoClient020_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient020.proto\032\021ProtoPublic.prot"
    "o\"m\n\rProto50102016\022\016\n\006column\030\001 \001(\005\022\013\n\003nu"
    "m\030\002 \001(\005\022\016\n\006is_num\030\003 \001(\005\022\014\n\004type\030\004 \001(\005\022!\n"
    "\tslot_info\030\005 \003(\0132\016.ProtoSlotInfo\"$\n\rProt"
    "o10102017\022\023\n\013reward_type\030\001 \001(\005\">\n\rProto5"
    "0102017\022\023\n\013reward_type\030\001 \001(\005\022\030\n\020nine_wor"
    "d_reward\030\002 \001(\005\"E\n\rProto10102018\022\021\n\trank_"
    "type\030\001 \001(\005\022\023\n\013activity_id\030\002 \001(\005\022\014\n\004page\030"
    "\003 \001(\005\"\203\001\n\rProto50102018\022$\n\trank_info\030\001 \003"
    "(\0132\021.ProtoActRankInfo\022\021\n\trank_type\030\002 \001(\005"
    "\022\023\n\013activity_id\030\003 \001(\005\022\020\n\010cur_page\030\004 \001(\005\022"
    "\022\n\ntotal_page\030\005 \001(\005\"$\n\rProto10102031\022\023\n\013"
    "activity_id\030\001 \001(\005\"\363\001\n\rProto50102031\022)\n\rp"
    "erson_record\030\001 \003(\0132\022.ProtoPersonRecord\022)"
    "\n\rserver_record\030\002 \003(\0132\022.ProtoServerRecor"
    "d\022\023\n\013activity_id\030\003 \001(\005\022\021\n\tleft_tick\030\004 \001("
    "\005\022!\n\tslot_info\030\005 \003(\0132\016.ProtoSlotInfo\022\035\n\t"
    "fina_item\030\006 \003(\0132\n.ProtoItem\022\"\n\nother_inf"
    "o\030\007 \001(\0132\016.ProtoThreeObj\"w\n\rProto50102033"
    "\022\023\n\013activity_id\030\001 \001(\005\022\n\n\002id\030\002 \001(\005\022!\n\tslo"
    "t_info\030\003 \003(\0132\016.ProtoSlotInfo\022\"\n\nother_in"
    "fo\030\004 \001(\0132\016.ProtoThreeObj\"\033\n\rProto1010203"
    "3\022\n\n\002id\030\001 \001(\005\"k\n\rProto50102032\022\023\n\013activi"
    "ty_id\030\001 \001(\005\022!\n\tslot_info\030\002 \003(\0132\016.ProtoSl"
    "otInfo\022\"\n\nother_info\030\003 \001(\0132\016.ProtoThreeO"
    "bj\"R\n\rProto50102034\022\035\n\titem_list\030\001 \003(\0132\n"
    ".ProtoItem\022\"\n\nother_info\030\002 \001(\0132\016.ProtoTh"
    "reeObj\" \n\rProto10102041\022\017\n\007slot_id\030\001 \001(\005"
    "\"C\n\rProto50102041\022\017\n\007slot_id\030\001 \001(\005\022!\n\tsl"
    "ot_info\030\002 \003(\0132\016.ProtoSlotInfo\"\\\n\rProto80"
    "100112\022\022\n\nfighter_id\030\001 \001(\003\022\024\n\014fighter_na"
    "me\030\002 \001(\t\022\022\n\nmover_type\030\003 \001(\005\022\r\n\005force\030\004 "
    "\001(\005\"1\n\rProto50100509\022 \n\010sell_log\030\001 \003(\0132\016"
    ".ProtoThreeObj\"<\n\rProto10100510\022\014\n\004item\030"
    "\001 \001(\t\022\016\n\006amount\030\002 \001(\005\022\r\n\005total\030\003 \001(\005\"]\n\r"
    "Proto50102101\022%\n\013wave_reward\030\001 \003(\0132\020.Pro"
    "toWaveReward\022%\n\013wave_player\030\002 \001(\0132\020.Prot"
    "oWavePlayer\"/\n\rProto10102102\022\014\n\004wave\030\001 \001"
    "(\005\022\020\n\010is_total\030\002 \001(\005\"T\n\rProto50102102\022\014\n"
    "\004wave\030\001 \001(\005\022#\n\twave_info\030\002 \003(\0132\020.ProtoWa"
    "veReward\022\020\n\010is_total\030\003 \001(\005\".\n\rProto10102"
    "103\022\017\n\007role_id\030\001 \001(\003\022\014\n\004type\030\002 \001(\005\"y\n\rPr"
    "oto50102103\022\017\n\007role_id\030\001 \001(\003\022\014\n\004type\030\002 \001"
    "(\005\022\r\n\005cheer\030\003 \001(\005\022\021\n\tencourage\030\004 \001(\005\022\'\n\014"
    "cheer_record\030\005 \001(\0132\021.ProtoCheerRecord\"\317\001"
    "\n\rProto50102104\022\r\n\005cheer\030\001 \001(\005\022\021\n\tencour"
    "age\030\002 \001(\005\022\020\n\010be_cheer\030\003 \001(\005\022\024\n\014be_encour"
    "age\030\004 \001(\005\022#\n\010my_cheer\030\005 \001(\0132\021.ProtoPlaye"
    "rCheer\022&\n\013player_info\030\006 \003(\0132\021.ProtoPlaye"
    "rCheer\022\'\n\014cheer_record\030\007 \003(\0132\021.ProtoChee"
    "rRecord\"L\n\rProto80400389\022\021\n\tmain_type\030\001 "
    "\001(\005\022\021\n\topen_days\030\002 \001(\005\022\025\n\rabsolute_days\030"
    "\003 \001(\005\"$\n\rProto11400124\022\023\n\013location_id\030\001 "
    "\001(\005\"R\n\rProto51400123\022\027\n\017recharge_amount\030"
    "\001 \001(\005\022\025\n\rdraw_location\030\002 \003(\005\022\021\n\tleft_tic"
    "k\030\003 \001(\005\"$\n\rProto51400124\022\023\n\013location_id\030"
    "\001 \001(\005\"$\n\rProto10102105\022\023\n\013script_sort\030\001 "
    "\001(\005\"2\n\rProto10102051\022\023\n\013activity_id\030\001 \001("
    "\005\022\014\n\004page\030\002 \001(\005\"\224\001\n\rProto50102051\022\021\n\tlef"
    "t_tick\030\001 \001(\005\022%\n\trank_info\030\002 \003(\0132\022.ProtoR"
    "echargeRank\022#\n\007my_rank\030\003 \001(\0132\022.ProtoRech"
    "argeRank\022\020\n\010cur_page\030\004 \001(\005\022\022\n\ntotal_page"
    "\030\005 \001(\005\"\035\n\rProto10400942\022\014\n\004page\030\001 \001(\005\"\204\001"
    "\n\rProto50400942\022\020\n\010cur_page\030\001 \001(\005\022\022\n\ntot"
    "al_page\030\002 \001(\005\022\'\n\nsword_rank\030\003 \003(\0132\023.Prot"
    "oLegendTopRank\022$\n\007my_rank\030\004 \001(\0132\023.ProtoL"
    "egendTopRank\"\320\002\n\rProto80400929\022\014\n\004flag\030\001"
    " \001(\005\022\022\n\nscipt_sort\030\002 \001(\005\022\021\n\tused_tick\030\003 "
    "\001(\005\022\013\n\003exp\030\004 \001(\005\022\016\n\006copper\030\005 \001(\005\022\030\n\004item"
    "\030\006 \003(\0132\n.ProtoItem\022\022\n\nstar_level\030\007 \003(\005\022\025"
    "\n\ris_first_pass\030\010 \001(\005\022\020\n\010ai_score\030\t \001(\005\022"
    "\025\n\rrescue_amount\030\n \001(\005\022\024\n\014present_sort\030\013"
    " \001(\005\022\021\n\tnext_sort\030\014 \001(\005\022\017\n\007no_card\030\r \001(\005"
    "\022\022\n\nbegin_wave\030\016 \001(\005\022\020\n\010end_wave\030\017 \001(\005\022\021"
    "\n\tcur_floor\030\020 \001(\005\022\014\n\004mult\030\021 \001(\005\"\332\002\n\rProt"
    "o51401209\022\023\n\013script_sort\030\001 \001(\005\022\023\n\013script"
    "_type\030\002 \001(\005\022\035\n\titem_list\030\003 \003(\0132\n.ProtoIt"
    "em\022\035\n\tdrop_list\030\004 \003(\0132\n.ProtoItem\022\024\n\014is_"
    "show_card\030\005 \001(\005\022\022\n\ncard_index\030\006 \001(\005\022\035\n\tc"
    "ard_list\030\007 \003(\0132\n.ProtoItem\022\023\n\013is_vip_rat"
    "e\030\010 \001(\005\022\r\n\005savvy\030\t \001(\005\022\023\n\013reset_times\030\n "
    "\001(\005\022\021\n\ttop_floor\030\013 \001(\005\022\021\n\tpass_wave\030\014 \001("
    "\005\022\024\n\014pass_chapter\030\r \001(\005\022#\n\nclean_item\030\016 "
    "\003(\0132\017.ProtoCleanInfo\"B\n\rProto51400136\022\014\n"
    "\004type\030\001 \001(\005\022\023\n\013exchange_id\030\002 \001(\005\022\016\n\006amou"
    "nt\030\003 \001(\005\"B\n\rProto11400136\022\014\n\004type\030\001 \001(\005\022"
    "\023\n\013exchange_id\030\002 \001(\005\022\016\n\006amount\030\003 \001(\005\"\036\n\r"
    "Proto10400943\022\r\n\005index\030\001 \001(\005\"\036\n\rProto504"
    "00943\022\r\n\005index\030\001 \001(\005\"4\n\rProto10100216\022\020\n"
    "\010act_info\030\001 \001(\005\022\021\n\tact_index\030\002 \001(\005\"%\n\rPr"
    "oto50102201\022\024\n\014activity_set\030\001 \003(\005\"B\n\rPro"
    "to50102202\022\016\n\006value1\030\001 \001(\005\022\016\n\006value2\030\002 \001"
    "(\005\022\021\n\tleft_tick\030\003 \001(\005\"5\n\rProto50102019\022\022"
    "\n\nbegin_tick\030\001 \001(\003\022\020\n\010end_tick\030\002 \001(\003\"\"\n\r"
    "Proto11408001\022\021\n\tplayer_id\030\001 \001(\003\"\207\001\n\rPro"
    "to11408002\022\033\n\023offlinehook_drug_id\030\001 \001(\005\022"
    "\036\n\026offlinehook_drug_count\030\002 \001(\005\022\024\n\014surpl"
    "us_time\030\003 \001(\003\022\024\n\014package_type\030\004 \001(\005\022\r\n\005i"
    "ndex\030\005 \001(\005\"\202\001\n\rProto51408001\022\024\n\014surplus_"
    "time\030\001 \001(\003\022\027\n\017offlinehook_exp\030\002 \001(\003\022(\n\022o"
    "fflinehook_reward\030\003 \003(\0132\014.ProtoItemId\022\030\n"
    "\020offlinehook_time\030\004 \001(\003\"\"\n\rProto11408003"
    "\022\021\n\tplayer_id\030\001 \001(\003\"2\n\rProto51408002\022\r\n\005"
    "reply\030\001 \001(\005\022\022\n\nerror_tips\030\002 \001(\t\"\036\n\rProto"
    "51408003\022\r\n\005reply\030\001 \001(\005\"#\n\rProto80400390"
    "\022\022\n\ncur_contri\030\001 \001(\005\"\362\001\n\rProto50404001\022\036"
    "\n\026next_league_fight_time\030\001 \001(\003\022\031\n\021enemy_"
    "league_name\030\002 \001(\t\022*\n\020league_list_info\030\003 "
    "\003(\0132\020.ProtoLeagueItem\022\033\n\023next_region_lan"
    "d_id\030\004 \001(\005\022\030\n\020self_league_rank\030\005 \001(\005\022\030\n\020"
    "is_activity_time\030\006 \001(\005\022)\n\017cur_league_lis"
    "t\030\007 \003(\0132\020.ProtoLeagueItem\"\275\001\n\rProto50404"
    "002\022.\n\024bet_league_list_info\030\001 \003(\0132\020.Prot"
    "oLeagueItem\022\024\n\014league_isWin\030\002 \001(\005\022\031\n\021sup"
    "port_league_id\030\003 \001(\003\022\021\n\tleft_time\030\004 \001(\005\022"
    "\r\n\005state\030\005 \001(\005\022\022\n\nwin_reward\030\006 \001(\005\022\025\n\rat"
    "tend_reward\030\007 \001(\005", 4657);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient020.proto", &protobuf_RegisterTypes);
  Proto50102016::default_instance_ = new Proto50102016();
  Proto10102017::default_instance_ = new Proto10102017();
  Proto50102017::default_instance_ = new Proto50102017();
  Proto10102018::default_instance_ = new Proto10102018();
  Proto50102018::default_instance_ = new Proto50102018();
  Proto10102031::default_instance_ = new Proto10102031();
  Proto50102031::default_instance_ = new Proto50102031();
  Proto50102033::default_instance_ = new Proto50102033();
  Proto10102033::default_instance_ = new Proto10102033();
  Proto50102032::default_instance_ = new Proto50102032();
  Proto50102034::default_instance_ = new Proto50102034();
  Proto10102041::default_instance_ = new Proto10102041();
  Proto50102041::default_instance_ = new Proto50102041();
  Proto80100112::default_instance_ = new Proto80100112();
  Proto50100509::default_instance_ = new Proto50100509();
  Proto10100510::default_instance_ = new Proto10100510();
  Proto50102101::default_instance_ = new Proto50102101();
  Proto10102102::default_instance_ = new Proto10102102();
  Proto50102102::default_instance_ = new Proto50102102();
  Proto10102103::default_instance_ = new Proto10102103();
  Proto50102103::default_instance_ = new Proto50102103();
  Proto50102104::default_instance_ = new Proto50102104();
  Proto80400389::default_instance_ = new Proto80400389();
  Proto11400124::default_instance_ = new Proto11400124();
  Proto51400123::default_instance_ = new Proto51400123();
  Proto51400124::default_instance_ = new Proto51400124();
  Proto10102105::default_instance_ = new Proto10102105();
  Proto10102051::default_instance_ = new Proto10102051();
  Proto50102051::default_instance_ = new Proto50102051();
  Proto10400942::default_instance_ = new Proto10400942();
  Proto50400942::default_instance_ = new Proto50400942();
  Proto80400929::default_instance_ = new Proto80400929();
  Proto51401209::default_instance_ = new Proto51401209();
  Proto51400136::default_instance_ = new Proto51400136();
  Proto11400136::default_instance_ = new Proto11400136();
  Proto10400943::default_instance_ = new Proto10400943();
  Proto50400943::default_instance_ = new Proto50400943();
  Proto10100216::default_instance_ = new Proto10100216();
  Proto50102201::default_instance_ = new Proto50102201();
  Proto50102202::default_instance_ = new Proto50102202();
  Proto50102019::default_instance_ = new Proto50102019();
  Proto11408001::default_instance_ = new Proto11408001();
  Proto11408002::default_instance_ = new Proto11408002();
  Proto51408001::default_instance_ = new Proto51408001();
  Proto11408003::default_instance_ = new Proto11408003();
  Proto51408002::default_instance_ = new Proto51408002();
  Proto51408003::default_instance_ = new Proto51408003();
  Proto80400390::default_instance_ = new Proto80400390();
  Proto50404001::default_instance_ = new Proto50404001();
  Proto50404002::default_instance_ = new Proto50404002();
  Proto50102016::default_instance_->InitAsDefaultInstance();
  Proto10102017::default_instance_->InitAsDefaultInstance();
  Proto50102017::default_instance_->InitAsDefaultInstance();
  Proto10102018::default_instance_->InitAsDefaultInstance();
  Proto50102018::default_instance_->InitAsDefaultInstance();
  Proto10102031::default_instance_->InitAsDefaultInstance();
  Proto50102031::default_instance_->InitAsDefaultInstance();
  Proto50102033::default_instance_->InitAsDefaultInstance();
  Proto10102033::default_instance_->InitAsDefaultInstance();
  Proto50102032::default_instance_->InitAsDefaultInstance();
  Proto50102034::default_instance_->InitAsDefaultInstance();
  Proto10102041::default_instance_->InitAsDefaultInstance();
  Proto50102041::default_instance_->InitAsDefaultInstance();
  Proto80100112::default_instance_->InitAsDefaultInstance();
  Proto50100509::default_instance_->InitAsDefaultInstance();
  Proto10100510::default_instance_->InitAsDefaultInstance();
  Proto50102101::default_instance_->InitAsDefaultInstance();
  Proto10102102::default_instance_->InitAsDefaultInstance();
  Proto50102102::default_instance_->InitAsDefaultInstance();
  Proto10102103::default_instance_->InitAsDefaultInstance();
  Proto50102103::default_instance_->InitAsDefaultInstance();
  Proto50102104::default_instance_->InitAsDefaultInstance();
  Proto80400389::default_instance_->InitAsDefaultInstance();
  Proto11400124::default_instance_->InitAsDefaultInstance();
  Proto51400123::default_instance_->InitAsDefaultInstance();
  Proto51400124::default_instance_->InitAsDefaultInstance();
  Proto10102105::default_instance_->InitAsDefaultInstance();
  Proto10102051::default_instance_->InitAsDefaultInstance();
  Proto50102051::default_instance_->InitAsDefaultInstance();
  Proto10400942::default_instance_->InitAsDefaultInstance();
  Proto50400942::default_instance_->InitAsDefaultInstance();
  Proto80400929::default_instance_->InitAsDefaultInstance();
  Proto51401209::default_instance_->InitAsDefaultInstance();
  Proto51400136::default_instance_->InitAsDefaultInstance();
  Proto11400136::default_instance_->InitAsDefaultInstance();
  Proto10400943::default_instance_->InitAsDefaultInstance();
  Proto50400943::default_instance_->InitAsDefaultInstance();
  Proto10100216::default_instance_->InitAsDefaultInstance();
  Proto50102201::default_instance_->InitAsDefaultInstance();
  Proto50102202::default_instance_->InitAsDefaultInstance();
  Proto50102019::default_instance_->InitAsDefaultInstance();
  Proto11408001::default_instance_->InitAsDefaultInstance();
  Proto11408002::default_instance_->InitAsDefaultInstance();
  Proto51408001::default_instance_->InitAsDefaultInstance();
  Proto11408003::default_instance_->InitAsDefaultInstance();
  Proto51408002::default_instance_->InitAsDefaultInstance();
  Proto51408003::default_instance_->InitAsDefaultInstance();
  Proto80400390::default_instance_->InitAsDefaultInstance();
  Proto50404001::default_instance_->InitAsDefaultInstance();
  Proto50404002::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient020_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient020_2eproto {
  StaticDescriptorInitializer_ProtoClient020_2eproto() {
    protobuf_AddDesc_ProtoClient020_2eproto();
  }
} static_descriptor_initializer_ProtoClient020_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto50102016::kColumnFieldNumber;
const int Proto50102016::kNumFieldNumber;
const int Proto50102016::kIsNumFieldNumber;
const int Proto50102016::kTypeFieldNumber;
const int Proto50102016::kSlotInfoFieldNumber;
#endif  // !_MSC_VER

Proto50102016::Proto50102016()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102016::InitAsDefaultInstance() {
}

Proto50102016::Proto50102016(const Proto50102016& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102016::SharedCtor() {
  _cached_size_ = 0;
  column_ = 0;
  num_ = 0;
  is_num_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102016::~Proto50102016() {
  SharedDtor();
}

void Proto50102016::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102016::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102016::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102016_descriptor_;
}

const Proto50102016& Proto50102016::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50102016* Proto50102016::default_instance_ = NULL;

Proto50102016* Proto50102016::New() const {
  return new Proto50102016;
}

void Proto50102016::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    column_ = 0;
    num_ = 0;
    is_num_ = 0;
    type_ = 0;
  }
  slot_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102016::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 column = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &column_)));
          set_has_column();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }
      
      // optional int32 num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_num;
        break;
      }
      
      // optional int32 is_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_num_)));
          set_has_is_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }
      
      // optional int32 type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_slot_info;
        break;
      }
      
      // repeated .ProtoSlotInfo slot_info = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_slot_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_slot_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_slot_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102016::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 column = 1;
  if (has_column()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->column(), output);
  }
  
  // optional int32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }
  
  // optional int32 is_num = 3;
  if (has_is_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_num(), output);
  }
  
  // optional int32 type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }
  
  // repeated .ProtoSlotInfo slot_info = 5;
  for (int i = 0; i < this->slot_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->slot_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102016::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 column = 1;
  if (has_column()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->column(), target);
  }
  
  // optional int32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }
  
  // optional int32 is_num = 3;
  if (has_is_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_num(), target);
  }
  
  // optional int32 type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }
  
  // repeated .ProtoSlotInfo slot_info = 5;
  for (int i = 0; i < this->slot_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->slot_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102016::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 column = 1;
    if (has_column()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->column());
    }
    
    // optional int32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }
    
    // optional int32 is_num = 3;
    if (has_is_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_num());
    }
    
    // optional int32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  // repeated .ProtoSlotInfo slot_info = 5;
  total_size += 1 * this->slot_info_size();
  for (int i = 0; i < this->slot_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->slot_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102016::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102016* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102016*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102016::MergeFrom(const Proto50102016& from) {
  GOOGLE_CHECK_NE(&from, this);
  slot_info_.MergeFrom(from.slot_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_column()) {
      set_column(from.column());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_is_num()) {
      set_is_num(from.is_num());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102016::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102016::CopyFrom(const Proto50102016& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102016::IsInitialized() const {
  
  return true;
}

void Proto50102016::Swap(Proto50102016* other) {
  if (other != this) {
    std::swap(column_, other->column_);
    std::swap(num_, other->num_);
    std::swap(is_num_, other->is_num_);
    std::swap(type_, other->type_);
    slot_info_.Swap(&other->slot_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102016::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102016_descriptor_;
  metadata.reflection = Proto50102016_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102017::kRewardTypeFieldNumber;
#endif  // !_MSC_VER

Proto10102017::Proto10102017()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102017::InitAsDefaultInstance() {
}

Proto10102017::Proto10102017(const Proto10102017& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102017::SharedCtor() {
  _cached_size_ = 0;
  reward_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102017::~Proto10102017() {
  SharedDtor();
}

void Proto10102017::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102017::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102017::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102017_descriptor_;
}

const Proto10102017& Proto10102017::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto10102017* Proto10102017::default_instance_ = NULL;

Proto10102017* Proto10102017::New() const {
  return new Proto10102017;
}

void Proto10102017::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    reward_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102017::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 reward_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_type_)));
          set_has_reward_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102017::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 reward_type = 1;
  if (has_reward_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reward_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102017::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 reward_type = 1;
  if (has_reward_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reward_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102017::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 reward_type = 1;
    if (has_reward_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102017::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102017* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102017*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102017::MergeFrom(const Proto10102017& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward_type()) {
      set_reward_type(from.reward_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102017::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102017::CopyFrom(const Proto10102017& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102017::IsInitialized() const {
  
  return true;
}

void Proto10102017::Swap(Proto10102017* other) {
  if (other != this) {
    std::swap(reward_type_, other->reward_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102017::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102017_descriptor_;
  metadata.reflection = Proto10102017_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102017::kRewardTypeFieldNumber;
const int Proto50102017::kNineWordRewardFieldNumber;
#endif  // !_MSC_VER

Proto50102017::Proto50102017()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102017::InitAsDefaultInstance() {
}

Proto50102017::Proto50102017(const Proto50102017& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102017::SharedCtor() {
  _cached_size_ = 0;
  reward_type_ = 0;
  nine_word_reward_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102017::~Proto50102017() {
  SharedDtor();
}

void Proto50102017::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102017::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102017::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102017_descriptor_;
}

const Proto50102017& Proto50102017::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50102017* Proto50102017::default_instance_ = NULL;

Proto50102017* Proto50102017::New() const {
  return new Proto50102017;
}

void Proto50102017::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    reward_type_ = 0;
    nine_word_reward_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102017::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 reward_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_type_)));
          set_has_reward_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nine_word_reward;
        break;
      }
      
      // optional int32 nine_word_reward = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nine_word_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nine_word_reward_)));
          set_has_nine_word_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102017::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 reward_type = 1;
  if (has_reward_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reward_type(), output);
  }
  
  // optional int32 nine_word_reward = 2;
  if (has_nine_word_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nine_word_reward(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102017::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 reward_type = 1;
  if (has_reward_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reward_type(), target);
  }
  
  // optional int32 nine_word_reward = 2;
  if (has_nine_word_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nine_word_reward(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102017::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 reward_type = 1;
    if (has_reward_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_type());
    }
    
    // optional int32 nine_word_reward = 2;
    if (has_nine_word_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nine_word_reward());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102017::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102017* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102017*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102017::MergeFrom(const Proto50102017& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward_type()) {
      set_reward_type(from.reward_type());
    }
    if (from.has_nine_word_reward()) {
      set_nine_word_reward(from.nine_word_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102017::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102017::CopyFrom(const Proto50102017& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102017::IsInitialized() const {
  
  return true;
}

void Proto50102017::Swap(Proto50102017* other) {
  if (other != this) {
    std::swap(reward_type_, other->reward_type_);
    std::swap(nine_word_reward_, other->nine_word_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102017::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102017_descriptor_;
  metadata.reflection = Proto50102017_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102018::kRankTypeFieldNumber;
const int Proto10102018::kActivityIdFieldNumber;
const int Proto10102018::kPageFieldNumber;
#endif  // !_MSC_VER

Proto10102018::Proto10102018()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102018::InitAsDefaultInstance() {
}

Proto10102018::Proto10102018(const Proto10102018& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102018::SharedCtor() {
  _cached_size_ = 0;
  rank_type_ = 0;
  activity_id_ = 0;
  page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102018::~Proto10102018() {
  SharedDtor();
}

void Proto10102018::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102018::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102018::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102018_descriptor_;
}

const Proto10102018& Proto10102018::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto10102018* Proto10102018::default_instance_ = NULL;

Proto10102018* Proto10102018::New() const {
  return new Proto10102018;
}

void Proto10102018::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rank_type_ = 0;
    activity_id_ = 0;
    page_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102018::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rank_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_type_)));
          set_has_rank_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_activity_id;
        break;
      }
      
      // optional int32 activity_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_page;
        break;
      }
      
      // optional int32 page = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
          set_has_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102018::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 rank_type = 1;
  if (has_rank_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank_type(), output);
  }
  
  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activity_id(), output);
  }
  
  // optional int32 page = 3;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102018::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 rank_type = 1;
  if (has_rank_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank_type(), target);
  }
  
  // optional int32 activity_id = 2;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activity_id(), target);
  }
  
  // optional int32 page = 3;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102018::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 rank_type = 1;
    if (has_rank_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_type());
    }
    
    // optional int32 activity_id = 2;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 page = 3;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102018::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102018* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102018*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102018::MergeFrom(const Proto10102018& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rank_type()) {
      set_rank_type(from.rank_type());
    }
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_page()) {
      set_page(from.page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102018::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102018::CopyFrom(const Proto10102018& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102018::IsInitialized() const {
  
  return true;
}

void Proto10102018::Swap(Proto10102018* other) {
  if (other != this) {
    std::swap(rank_type_, other->rank_type_);
    std::swap(activity_id_, other->activity_id_);
    std::swap(page_, other->page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102018::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102018_descriptor_;
  metadata.reflection = Proto10102018_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102018::kRankInfoFieldNumber;
const int Proto50102018::kRankTypeFieldNumber;
const int Proto50102018::kActivityIdFieldNumber;
const int Proto50102018::kCurPageFieldNumber;
const int Proto50102018::kTotalPageFieldNumber;
#endif  // !_MSC_VER

Proto50102018::Proto50102018()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102018::InitAsDefaultInstance() {
}

Proto50102018::Proto50102018(const Proto50102018& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102018::SharedCtor() {
  _cached_size_ = 0;
  rank_type_ = 0;
  activity_id_ = 0;
  cur_page_ = 0;
  total_page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102018::~Proto50102018() {
  SharedDtor();
}

void Proto50102018::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102018::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102018::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102018_descriptor_;
}

const Proto50102018& Proto50102018::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50102018* Proto50102018::default_instance_ = NULL;

Proto50102018* Proto50102018::New() const {
  return new Proto50102018;
}

void Proto50102018::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    rank_type_ = 0;
    activity_id_ = 0;
    cur_page_ = 0;
    total_page_ = 0;
  }
  rank_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102018::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoActRankInfo rank_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rank_info;
        if (input->ExpectTag(16)) goto parse_rank_type;
        break;
      }
      
      // optional int32 rank_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_type_)));
          set_has_rank_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_activity_id;
        break;
      }
      
      // optional int32 activity_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_cur_page;
        break;
      }
      
      // optional int32 cur_page = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_page_)));
          set_has_cur_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102018::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoActRankInfo rank_info = 1;
  for (int i = 0; i < this->rank_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rank_info(i), output);
  }
  
  // optional int32 rank_type = 2;
  if (has_rank_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rank_type(), output);
  }
  
  // optional int32 activity_id = 3;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->activity_id(), output);
  }
  
  // optional int32 cur_page = 4;
  if (has_cur_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cur_page(), output);
  }
  
  // optional int32 total_page = 5;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->total_page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102018::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoActRankInfo rank_info = 1;
  for (int i = 0; i < this->rank_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rank_info(i), target);
  }
  
  // optional int32 rank_type = 2;
  if (has_rank_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rank_type(), target);
  }
  
  // optional int32 activity_id = 3;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->activity_id(), target);
  }
  
  // optional int32 cur_page = 4;
  if (has_cur_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cur_page(), target);
  }
  
  // optional int32 total_page = 5;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->total_page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102018::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 rank_type = 2;
    if (has_rank_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_type());
    }
    
    // optional int32 activity_id = 3;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 cur_page = 4;
    if (has_cur_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_page());
    }
    
    // optional int32 total_page = 5;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
  }
  // repeated .ProtoActRankInfo rank_info = 1;
  total_size += 1 * this->rank_info_size();
  for (int i = 0; i < this->rank_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102018::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102018* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102018*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102018::MergeFrom(const Proto50102018& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_info_.MergeFrom(from.rank_info_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_rank_type()) {
      set_rank_type(from.rank_type());
    }
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_cur_page()) {
      set_cur_page(from.cur_page());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102018::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102018::CopyFrom(const Proto50102018& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102018::IsInitialized() const {
  
  return true;
}

void Proto50102018::Swap(Proto50102018* other) {
  if (other != this) {
    rank_info_.Swap(&other->rank_info_);
    std::swap(rank_type_, other->rank_type_);
    std::swap(activity_id_, other->activity_id_);
    std::swap(cur_page_, other->cur_page_);
    std::swap(total_page_, other->total_page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102018::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102018_descriptor_;
  metadata.reflection = Proto50102018_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102031::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto10102031::Proto10102031()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102031::InitAsDefaultInstance() {
}

Proto10102031::Proto10102031(const Proto10102031& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102031::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102031::~Proto10102031() {
  SharedDtor();
}

void Proto10102031::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102031::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102031::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102031_descriptor_;
}

const Proto10102031& Proto10102031::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto10102031* Proto10102031::default_instance_ = NULL;

Proto10102031* Proto10102031::New() const {
  return new Proto10102031;
}

void Proto10102031::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102031::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102031::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102031::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102031::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102031::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102031* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102031*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102031::MergeFrom(const Proto10102031& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102031::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102031::CopyFrom(const Proto10102031& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102031::IsInitialized() const {
  
  return true;
}

void Proto10102031::Swap(Proto10102031* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102031::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102031_descriptor_;
  metadata.reflection = Proto10102031_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102031::kPersonRecordFieldNumber;
const int Proto50102031::kServerRecordFieldNumber;
const int Proto50102031::kActivityIdFieldNumber;
const int Proto50102031::kLeftTickFieldNumber;
const int Proto50102031::kSlotInfoFieldNumber;
const int Proto50102031::kFinaItemFieldNumber;
const int Proto50102031::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto50102031::Proto50102031()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102031::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto50102031::Proto50102031(const Proto50102031& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102031::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  left_tick_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102031::~Proto50102031() {
  SharedDtor();
}

void Proto50102031::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto50102031::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102031::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102031_descriptor_;
}

const Proto50102031& Proto50102031::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50102031* Proto50102031::default_instance_ = NULL;

Proto50102031* Proto50102031::New() const {
  return new Proto50102031;
}

void Proto50102031::Clear() {
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    activity_id_ = 0;
    left_tick_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  person_record_.Clear();
  server_record_.Clear();
  slot_info_.Clear();
  fina_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102031::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoPersonRecord person_record = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_person_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_person_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_person_record;
        if (input->ExpectTag(18)) goto parse_server_record;
        break;
      }
      
      // repeated .ProtoServerRecord server_record = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_server_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_server_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_server_record;
        if (input->ExpectTag(24)) goto parse_activity_id;
        break;
      }
      
      // optional int32 activity_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_left_tick;
        break;
      }
      
      // optional int32 left_tick = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_tick_)));
          set_has_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_slot_info;
        break;
      }
      
      // repeated .ProtoSlotInfo slot_info = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_slot_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_slot_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_slot_info;
        if (input->ExpectTag(50)) goto parse_fina_item;
        break;
      }
      
      // repeated .ProtoItem fina_item = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fina_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fina_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_fina_item;
        if (input->ExpectTag(58)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102031::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoPersonRecord person_record = 1;
  for (int i = 0; i < this->person_record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->person_record(i), output);
  }
  
  // repeated .ProtoServerRecord server_record = 2;
  for (int i = 0; i < this->server_record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->server_record(i), output);
  }
  
  // optional int32 activity_id = 3;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->activity_id(), output);
  }
  
  // optional int32 left_tick = 4;
  if (has_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->left_tick(), output);
  }
  
  // repeated .ProtoSlotInfo slot_info = 5;
  for (int i = 0; i < this->slot_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->slot_info(i), output);
  }
  
  // repeated .ProtoItem fina_item = 6;
  for (int i = 0; i < this->fina_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->fina_item(i), output);
  }
  
  // optional .ProtoThreeObj other_info = 7;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102031::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoPersonRecord person_record = 1;
  for (int i = 0; i < this->person_record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->person_record(i), target);
  }
  
  // repeated .ProtoServerRecord server_record = 2;
  for (int i = 0; i < this->server_record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->server_record(i), target);
  }
  
  // optional int32 activity_id = 3;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->activity_id(), target);
  }
  
  // optional int32 left_tick = 4;
  if (has_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->left_tick(), target);
  }
  
  // repeated .ProtoSlotInfo slot_info = 5;
  for (int i = 0; i < this->slot_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->slot_info(i), target);
  }
  
  // repeated .ProtoItem fina_item = 6;
  for (int i = 0; i < this->fina_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->fina_item(i), target);
  }
  
  // optional .ProtoThreeObj other_info = 7;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102031::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional int32 activity_id = 3;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 left_tick = 4;
    if (has_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_tick());
    }
    
    // optional .ProtoThreeObj other_info = 7;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  // repeated .ProtoPersonRecord person_record = 1;
  total_size += 1 * this->person_record_size();
  for (int i = 0; i < this->person_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->person_record(i));
  }
  
  // repeated .ProtoServerRecord server_record = 2;
  total_size += 1 * this->server_record_size();
  for (int i = 0; i < this->server_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->server_record(i));
  }
  
  // repeated .ProtoSlotInfo slot_info = 5;
  total_size += 1 * this->slot_info_size();
  for (int i = 0; i < this->slot_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->slot_info(i));
  }
  
  // repeated .ProtoItem fina_item = 6;
  total_size += 1 * this->fina_item_size();
  for (int i = 0; i < this->fina_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fina_item(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102031::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102031* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102031*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102031::MergeFrom(const Proto50102031& from) {
  GOOGLE_CHECK_NE(&from, this);
  person_record_.MergeFrom(from.person_record_);
  server_record_.MergeFrom(from.server_record_);
  slot_info_.MergeFrom(from.slot_info_);
  fina_item_.MergeFrom(from.fina_item_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_left_tick()) {
      set_left_tick(from.left_tick());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102031::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102031::CopyFrom(const Proto50102031& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102031::IsInitialized() const {
  
  return true;
}

void Proto50102031::Swap(Proto50102031* other) {
  if (other != this) {
    person_record_.Swap(&other->person_record_);
    server_record_.Swap(&other->server_record_);
    std::swap(activity_id_, other->activity_id_);
    std::swap(left_tick_, other->left_tick_);
    slot_info_.Swap(&other->slot_info_);
    fina_item_.Swap(&other->fina_item_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102031::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102031_descriptor_;
  metadata.reflection = Proto50102031_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102033::kActivityIdFieldNumber;
const int Proto50102033::kIdFieldNumber;
const int Proto50102033::kSlotInfoFieldNumber;
const int Proto50102033::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto50102033::Proto50102033()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102033::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto50102033::Proto50102033(const Proto50102033& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102033::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  id_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102033::~Proto50102033() {
  SharedDtor();
}

void Proto50102033::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto50102033::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102033::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102033_descriptor_;
}

const Proto50102033& Proto50102033::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50102033* Proto50102033::default_instance_ = NULL;

Proto50102033* Proto50102033::New() const {
  return new Proto50102033;
}

void Proto50102033::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    id_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  slot_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102033::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }
      
      // optional int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_slot_info;
        break;
      }
      
      // repeated .ProtoSlotInfo slot_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_slot_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_slot_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_slot_info;
        if (input->ExpectTag(34)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102033::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }
  
  // repeated .ProtoSlotInfo slot_info = 3;
  for (int i = 0; i < this->slot_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->slot_info(i), output);
  }
  
  // optional .ProtoThreeObj other_info = 4;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102033::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }
  
  // repeated .ProtoSlotInfo slot_info = 3;
  for (int i = 0; i < this->slot_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->slot_info(i), target);
  }
  
  // optional .ProtoThreeObj other_info = 4;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102033::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional .ProtoThreeObj other_info = 4;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  // repeated .ProtoSlotInfo slot_info = 3;
  total_size += 1 * this->slot_info_size();
  for (int i = 0; i < this->slot_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->slot_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102033::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102033* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102033*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102033::MergeFrom(const Proto50102033& from) {
  GOOGLE_CHECK_NE(&from, this);
  slot_info_.MergeFrom(from.slot_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102033::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102033::CopyFrom(const Proto50102033& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102033::IsInitialized() const {
  
  return true;
}

void Proto50102033::Swap(Proto50102033* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(id_, other->id_);
    slot_info_.Swap(&other->slot_info_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102033::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102033_descriptor_;
  metadata.reflection = Proto50102033_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102033::kIdFieldNumber;
#endif  // !_MSC_VER

Proto10102033::Proto10102033()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102033::InitAsDefaultInstance() {
}

Proto10102033::Proto10102033(const Proto10102033& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102033::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102033::~Proto10102033() {
  SharedDtor();
}

void Proto10102033::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102033::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102033::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102033_descriptor_;
}

const Proto10102033& Proto10102033::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto10102033* Proto10102033::default_instance_ = NULL;

Proto10102033* Proto10102033::New() const {
  return new Proto10102033;
}

void Proto10102033::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102033::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102033::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102033::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102033::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102033::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102033* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102033*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102033::MergeFrom(const Proto10102033& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102033::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102033::CopyFrom(const Proto10102033& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102033::IsInitialized() const {
  
  return true;
}

void Proto10102033::Swap(Proto10102033* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102033::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102033_descriptor_;
  metadata.reflection = Proto10102033_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102032::kActivityIdFieldNumber;
const int Proto50102032::kSlotInfoFieldNumber;
const int Proto50102032::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto50102032::Proto50102032()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102032::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto50102032::Proto50102032(const Proto50102032& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102032::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102032::~Proto50102032() {
  SharedDtor();
}

void Proto50102032::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto50102032::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102032::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102032_descriptor_;
}

const Proto50102032& Proto50102032::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50102032* Proto50102032::default_instance_ = NULL;

Proto50102032* Proto50102032::New() const {
  return new Proto50102032;
}

void Proto50102032::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  slot_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102032::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_slot_info;
        break;
      }
      
      // repeated .ProtoSlotInfo slot_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_slot_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_slot_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_slot_info;
        if (input->ExpectTag(26)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102032::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // repeated .ProtoSlotInfo slot_info = 2;
  for (int i = 0; i < this->slot_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->slot_info(i), output);
  }
  
  // optional .ProtoThreeObj other_info = 3;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102032::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // repeated .ProtoSlotInfo slot_info = 2;
  for (int i = 0; i < this->slot_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->slot_info(i), target);
  }
  
  // optional .ProtoThreeObj other_info = 3;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102032::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional .ProtoThreeObj other_info = 3;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  // repeated .ProtoSlotInfo slot_info = 2;
  total_size += 1 * this->slot_info_size();
  for (int i = 0; i < this->slot_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->slot_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102032::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102032* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102032*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102032::MergeFrom(const Proto50102032& from) {
  GOOGLE_CHECK_NE(&from, this);
  slot_info_.MergeFrom(from.slot_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102032::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102032::CopyFrom(const Proto50102032& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102032::IsInitialized() const {
  
  return true;
}

void Proto50102032::Swap(Proto50102032* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    slot_info_.Swap(&other->slot_info_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102032::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102032_descriptor_;
  metadata.reflection = Proto50102032_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102034::kItemListFieldNumber;
const int Proto50102034::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto50102034::Proto50102034()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102034::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto50102034::Proto50102034(const Proto50102034& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102034::SharedCtor() {
  _cached_size_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102034::~Proto50102034() {
  SharedDtor();
}

void Proto50102034::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto50102034::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102034::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102034_descriptor_;
}

const Proto50102034& Proto50102034::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50102034* Proto50102034::default_instance_ = NULL;

Proto50102034* Proto50102034::New() const {
  return new Proto50102034;
}

void Proto50102034::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102034::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_list;
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102034::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(i), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102034::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_list(i), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102034::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  // repeated .ProtoItem item_list = 1;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102034::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102034* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102034*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102034::MergeFrom(const Proto50102034& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102034::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102034::CopyFrom(const Proto50102034& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102034::IsInitialized() const {
  
  return true;
}

void Proto50102034::Swap(Proto50102034* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102034::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102034_descriptor_;
  metadata.reflection = Proto50102034_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102041::kSlotIdFieldNumber;
#endif  // !_MSC_VER

Proto10102041::Proto10102041()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102041::InitAsDefaultInstance() {
}

Proto10102041::Proto10102041(const Proto10102041& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102041::SharedCtor() {
  _cached_size_ = 0;
  slot_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102041::~Proto10102041() {
  SharedDtor();
}

void Proto10102041::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102041::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102041::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102041_descriptor_;
}

const Proto10102041& Proto10102041::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto10102041* Proto10102041::default_instance_ = NULL;

Proto10102041* Proto10102041::New() const {
  return new Proto10102041;
}

void Proto10102041::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    slot_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102041::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 slot_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_id_)));
          set_has_slot_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102041::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 slot_id = 1;
  if (has_slot_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->slot_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102041::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 slot_id = 1;
  if (has_slot_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->slot_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102041::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 slot_id = 1;
    if (has_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102041::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102041* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102041*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102041::MergeFrom(const Proto10102041& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slot_id()) {
      set_slot_id(from.slot_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102041::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102041::CopyFrom(const Proto10102041& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102041::IsInitialized() const {
  
  return true;
}

void Proto10102041::Swap(Proto10102041* other) {
  if (other != this) {
    std::swap(slot_id_, other->slot_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102041::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102041_descriptor_;
  metadata.reflection = Proto10102041_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102041::kSlotIdFieldNumber;
const int Proto50102041::kSlotInfoFieldNumber;
#endif  // !_MSC_VER

Proto50102041::Proto50102041()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102041::InitAsDefaultInstance() {
}

Proto50102041::Proto50102041(const Proto50102041& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102041::SharedCtor() {
  _cached_size_ = 0;
  slot_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102041::~Proto50102041() {
  SharedDtor();
}

void Proto50102041::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102041::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102041::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102041_descriptor_;
}

const Proto50102041& Proto50102041::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50102041* Proto50102041::default_instance_ = NULL;

Proto50102041* Proto50102041::New() const {
  return new Proto50102041;
}

void Proto50102041::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    slot_id_ = 0;
  }
  slot_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102041::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 slot_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_id_)));
          set_has_slot_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_slot_info;
        break;
      }
      
      // repeated .ProtoSlotInfo slot_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_slot_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_slot_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_slot_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102041::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 slot_id = 1;
  if (has_slot_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->slot_id(), output);
  }
  
  // repeated .ProtoSlotInfo slot_info = 2;
  for (int i = 0; i < this->slot_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->slot_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102041::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 slot_id = 1;
  if (has_slot_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->slot_id(), target);
  }
  
  // repeated .ProtoSlotInfo slot_info = 2;
  for (int i = 0; i < this->slot_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->slot_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102041::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 slot_id = 1;
    if (has_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot_id());
    }
    
  }
  // repeated .ProtoSlotInfo slot_info = 2;
  total_size += 1 * this->slot_info_size();
  for (int i = 0; i < this->slot_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->slot_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102041::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102041* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102041*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102041::MergeFrom(const Proto50102041& from) {
  GOOGLE_CHECK_NE(&from, this);
  slot_info_.MergeFrom(from.slot_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_slot_id()) {
      set_slot_id(from.slot_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102041::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102041::CopyFrom(const Proto50102041& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102041::IsInitialized() const {
  
  return true;
}

void Proto50102041::Swap(Proto50102041* other) {
  if (other != this) {
    std::swap(slot_id_, other->slot_id_);
    slot_info_.Swap(&other->slot_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102041::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102041_descriptor_;
  metadata.reflection = Proto50102041_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100112::kFighterIdFieldNumber;
const int Proto80100112::kFighterNameFieldNumber;
const int Proto80100112::kMoverTypeFieldNumber;
const int Proto80100112::kForceFieldNumber;
#endif  // !_MSC_VER

Proto80100112::Proto80100112()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100112::InitAsDefaultInstance() {
}

Proto80100112::Proto80100112(const Proto80100112& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100112::SharedCtor() {
  _cached_size_ = 0;
  fighter_id_ = GOOGLE_LONGLONG(0);
  fighter_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  mover_type_ = 0;
  force_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100112::~Proto80100112() {
  SharedDtor();
}

void Proto80100112::SharedDtor() {
  if (fighter_name_ != &::google::protobuf::internal::kEmptyString) {
    delete fighter_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80100112::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100112::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100112_descriptor_;
}

const Proto80100112& Proto80100112::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto80100112* Proto80100112::default_instance_ = NULL;

Proto80100112* Proto80100112::New() const {
  return new Proto80100112;
}

void Proto80100112::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fighter_id_ = GOOGLE_LONGLONG(0);
    if (has_fighter_name()) {
      if (fighter_name_ != &::google::protobuf::internal::kEmptyString) {
        fighter_name_->clear();
      }
    }
    mover_type_ = 0;
    force_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100112::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 fighter_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fighter_id_)));
          set_has_fighter_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_fighter_name;
        break;
      }
      
      // optional string fighter_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fighter_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fighter_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->fighter_name().data(), this->fighter_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_mover_type;
        break;
      }
      
      // optional int32 mover_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mover_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mover_type_)));
          set_has_mover_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_force;
        break;
      }
      
      // optional int32 force = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100112::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->fighter_id(), output);
  }
  
  // optional string fighter_name = 2;
  if (has_fighter_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fighter_name().data(), this->fighter_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->fighter_name(), output);
  }
  
  // optional int32 mover_type = 3;
  if (has_mover_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mover_type(), output);
  }
  
  // optional int32 force = 4;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->force(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100112::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->fighter_id(), target);
  }
  
  // optional string fighter_name = 2;
  if (has_fighter_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->fighter_name().data(), this->fighter_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->fighter_name(), target);
  }
  
  // optional int32 mover_type = 3;
  if (has_mover_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mover_type(), target);
  }
  
  // optional int32 force = 4;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->force(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100112::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 fighter_id = 1;
    if (has_fighter_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fighter_id());
    }
    
    // optional string fighter_name = 2;
    if (has_fighter_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fighter_name());
    }
    
    // optional int32 mover_type = 3;
    if (has_mover_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mover_type());
    }
    
    // optional int32 force = 4;
    if (has_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->force());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100112::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100112* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100112*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100112::MergeFrom(const Proto80100112& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fighter_id()) {
      set_fighter_id(from.fighter_id());
    }
    if (from.has_fighter_name()) {
      set_fighter_name(from.fighter_name());
    }
    if (from.has_mover_type()) {
      set_mover_type(from.mover_type());
    }
    if (from.has_force()) {
      set_force(from.force());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100112::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100112::CopyFrom(const Proto80100112& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100112::IsInitialized() const {
  
  return true;
}

void Proto80100112::Swap(Proto80100112* other) {
  if (other != this) {
    std::swap(fighter_id_, other->fighter_id_);
    std::swap(fighter_name_, other->fighter_name_);
    std::swap(mover_type_, other->mover_type_);
    std::swap(force_, other->force_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100112::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100112_descriptor_;
  metadata.reflection = Proto80100112_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100509::kSellLogFieldNumber;
#endif  // !_MSC_VER

Proto50100509::Proto50100509()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100509::InitAsDefaultInstance() {
}

Proto50100509::Proto50100509(const Proto50100509& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100509::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100509::~Proto50100509() {
  SharedDtor();
}

void Proto50100509::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100509::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100509::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100509_descriptor_;
}

const Proto50100509& Proto50100509::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50100509* Proto50100509::default_instance_ = NULL;

Proto50100509* Proto50100509::New() const {
  return new Proto50100509;
}

void Proto50100509::Clear() {
  sell_log_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100509::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoThreeObj sell_log = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sell_log:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sell_log()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_sell_log;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100509::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoThreeObj sell_log = 1;
  for (int i = 0; i < this->sell_log_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sell_log(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100509::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoThreeObj sell_log = 1;
  for (int i = 0; i < this->sell_log_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->sell_log(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100509::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoThreeObj sell_log = 1;
  total_size += 1 * this->sell_log_size();
  for (int i = 0; i < this->sell_log_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sell_log(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100509::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100509* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100509*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100509::MergeFrom(const Proto50100509& from) {
  GOOGLE_CHECK_NE(&from, this);
  sell_log_.MergeFrom(from.sell_log_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100509::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100509::CopyFrom(const Proto50100509& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100509::IsInitialized() const {
  
  return true;
}

void Proto50100509::Swap(Proto50100509* other) {
  if (other != this) {
    sell_log_.Swap(&other->sell_log_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100509::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100509_descriptor_;
  metadata.reflection = Proto50100509_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100510::kItemFieldNumber;
const int Proto10100510::kAmountFieldNumber;
const int Proto10100510::kTotalFieldNumber;
#endif  // !_MSC_VER

Proto10100510::Proto10100510()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100510::InitAsDefaultInstance() {
}

Proto10100510::Proto10100510(const Proto10100510& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100510::SharedCtor() {
  _cached_size_ = 0;
  item_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  amount_ = 0;
  total_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100510::~Proto10100510() {
  SharedDtor();
}

void Proto10100510::SharedDtor() {
  if (item_ != &::google::protobuf::internal::kEmptyString) {
    delete item_;
  }
  if (this != default_instance_) {
  }
}

void Proto10100510::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100510::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100510_descriptor_;
}

const Proto10100510& Proto10100510::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto10100510* Proto10100510::default_instance_ = NULL;

Proto10100510* Proto10100510::New() const {
  return new Proto10100510;
}

void Proto10100510::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_item()) {
      if (item_ != &::google::protobuf::internal::kEmptyString) {
        item_->clear();
      }
    }
    amount_ = 0;
    total_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100510::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->item().data(), this->item().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_total;
        break;
      }
      
      // optional int32 total = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_)));
          set_has_total();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100510::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string item = 1;
  if (has_item()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->item().data(), this->item().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->item(), output);
  }
  
  // optional int32 amount = 2;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->amount(), output);
  }
  
  // optional int32 total = 3;
  if (has_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100510::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string item = 1;
  if (has_item()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->item().data(), this->item().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->item(), target);
  }
  
  // optional int32 amount = 2;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->amount(), target);
  }
  
  // optional int32 total = 3;
  if (has_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100510::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string item = 1;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item());
    }
    
    // optional int32 amount = 2;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
    // optional int32 total = 3;
    if (has_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100510::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100510* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100510*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100510::MergeFrom(const Proto10100510& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item()) {
      set_item(from.item());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_total()) {
      set_total(from.total());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100510::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100510::CopyFrom(const Proto10100510& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100510::IsInitialized() const {
  
  return true;
}

void Proto10100510::Swap(Proto10100510* other) {
  if (other != this) {
    std::swap(item_, other->item_);
    std::swap(amount_, other->amount_);
    std::swap(total_, other->total_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100510::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100510_descriptor_;
  metadata.reflection = Proto10100510_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102101::kWaveRewardFieldNumber;
const int Proto50102101::kWavePlayerFieldNumber;
#endif  // !_MSC_VER

Proto50102101::Proto50102101()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102101::InitAsDefaultInstance() {
  wave_player_ = const_cast< ::ProtoWavePlayer*>(&::ProtoWavePlayer::default_instance());
}

Proto50102101::Proto50102101(const Proto50102101& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102101::SharedCtor() {
  _cached_size_ = 0;
  wave_player_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102101::~Proto50102101() {
  SharedDtor();
}

void Proto50102101::SharedDtor() {
  if (this != default_instance_) {
    delete wave_player_;
  }
}

void Proto50102101::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102101::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102101_descriptor_;
}

const Proto50102101& Proto50102101::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50102101* Proto50102101::default_instance_ = NULL;

Proto50102101* Proto50102101::New() const {
  return new Proto50102101;
}

void Proto50102101::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_wave_player()) {
      if (wave_player_ != NULL) wave_player_->::ProtoWavePlayer::Clear();
    }
  }
  wave_reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102101::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoWaveReward wave_reward = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_wave_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_wave_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_wave_reward;
        if (input->ExpectTag(18)) goto parse_wave_player;
        break;
      }
      
      // optional .ProtoWavePlayer wave_player = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_wave_player:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_wave_player()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102101::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoWaveReward wave_reward = 1;
  for (int i = 0; i < this->wave_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->wave_reward(i), output);
  }
  
  // optional .ProtoWavePlayer wave_player = 2;
  if (has_wave_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->wave_player(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102101::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoWaveReward wave_reward = 1;
  for (int i = 0; i < this->wave_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->wave_reward(i), target);
  }
  
  // optional .ProtoWavePlayer wave_player = 2;
  if (has_wave_player()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->wave_player(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102101::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .ProtoWavePlayer wave_player = 2;
    if (has_wave_player()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->wave_player());
    }
    
  }
  // repeated .ProtoWaveReward wave_reward = 1;
  total_size += 1 * this->wave_reward_size();
  for (int i = 0; i < this->wave_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->wave_reward(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102101::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102101* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102101*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102101::MergeFrom(const Proto50102101& from) {
  GOOGLE_CHECK_NE(&from, this);
  wave_reward_.MergeFrom(from.wave_reward_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_wave_player()) {
      mutable_wave_player()->::ProtoWavePlayer::MergeFrom(from.wave_player());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102101::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102101::CopyFrom(const Proto50102101& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102101::IsInitialized() const {
  
  return true;
}

void Proto50102101::Swap(Proto50102101* other) {
  if (other != this) {
    wave_reward_.Swap(&other->wave_reward_);
    std::swap(wave_player_, other->wave_player_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102101::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102101_descriptor_;
  metadata.reflection = Proto50102101_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102102::kWaveFieldNumber;
const int Proto10102102::kIsTotalFieldNumber;
#endif  // !_MSC_VER

Proto10102102::Proto10102102()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102102::InitAsDefaultInstance() {
}

Proto10102102::Proto10102102(const Proto10102102& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102102::SharedCtor() {
  _cached_size_ = 0;
  wave_ = 0;
  is_total_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102102::~Proto10102102() {
  SharedDtor();
}

void Proto10102102::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102102::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102102::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102102_descriptor_;
}

const Proto10102102& Proto10102102::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto10102102* Proto10102102::default_instance_ = NULL;

Proto10102102* Proto10102102::New() const {
  return new Proto10102102;
}

void Proto10102102::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    wave_ = 0;
    is_total_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102102::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 wave = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wave_)));
          set_has_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_total;
        break;
      }
      
      // optional int32 is_total = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_total_)));
          set_has_is_total();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102102::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 wave = 1;
  if (has_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wave(), output);
  }
  
  // optional int32 is_total = 2;
  if (has_is_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_total(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102102::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 wave = 1;
  if (has_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wave(), target);
  }
  
  // optional int32 is_total = 2;
  if (has_is_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_total(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102102::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 wave = 1;
    if (has_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wave());
    }
    
    // optional int32 is_total = 2;
    if (has_is_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_total());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102102::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102102* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102102*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102102::MergeFrom(const Proto10102102& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wave()) {
      set_wave(from.wave());
    }
    if (from.has_is_total()) {
      set_is_total(from.is_total());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102102::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102102::CopyFrom(const Proto10102102& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102102::IsInitialized() const {
  
  return true;
}

void Proto10102102::Swap(Proto10102102* other) {
  if (other != this) {
    std::swap(wave_, other->wave_);
    std::swap(is_total_, other->is_total_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102102::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102102_descriptor_;
  metadata.reflection = Proto10102102_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102102::kWaveFieldNumber;
const int Proto50102102::kWaveInfoFieldNumber;
const int Proto50102102::kIsTotalFieldNumber;
#endif  // !_MSC_VER

Proto50102102::Proto50102102()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102102::InitAsDefaultInstance() {
}

Proto50102102::Proto50102102(const Proto50102102& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102102::SharedCtor() {
  _cached_size_ = 0;
  wave_ = 0;
  is_total_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102102::~Proto50102102() {
  SharedDtor();
}

void Proto50102102::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102102::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102102::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102102_descriptor_;
}

const Proto50102102& Proto50102102::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50102102* Proto50102102::default_instance_ = NULL;

Proto50102102* Proto50102102::New() const {
  return new Proto50102102;
}

void Proto50102102::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    wave_ = 0;
    is_total_ = 0;
  }
  wave_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102102::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 wave = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wave_)));
          set_has_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_wave_info;
        break;
      }
      
      // repeated .ProtoWaveReward wave_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_wave_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_wave_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_wave_info;
        if (input->ExpectTag(24)) goto parse_is_total;
        break;
      }
      
      // optional int32 is_total = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_total_)));
          set_has_is_total();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102102::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 wave = 1;
  if (has_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wave(), output);
  }
  
  // repeated .ProtoWaveReward wave_info = 2;
  for (int i = 0; i < this->wave_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->wave_info(i), output);
  }
  
  // optional int32 is_total = 3;
  if (has_is_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_total(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102102::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 wave = 1;
  if (has_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wave(), target);
  }
  
  // repeated .ProtoWaveReward wave_info = 2;
  for (int i = 0; i < this->wave_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->wave_info(i), target);
  }
  
  // optional int32 is_total = 3;
  if (has_is_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_total(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102102::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 wave = 1;
    if (has_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wave());
    }
    
    // optional int32 is_total = 3;
    if (has_is_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_total());
    }
    
  }
  // repeated .ProtoWaveReward wave_info = 2;
  total_size += 1 * this->wave_info_size();
  for (int i = 0; i < this->wave_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->wave_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102102::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102102* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102102*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102102::MergeFrom(const Proto50102102& from) {
  GOOGLE_CHECK_NE(&from, this);
  wave_info_.MergeFrom(from.wave_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wave()) {
      set_wave(from.wave());
    }
    if (from.has_is_total()) {
      set_is_total(from.is_total());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102102::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102102::CopyFrom(const Proto50102102& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102102::IsInitialized() const {
  
  return true;
}

void Proto50102102::Swap(Proto50102102* other) {
  if (other != this) {
    std::swap(wave_, other->wave_);
    wave_info_.Swap(&other->wave_info_);
    std::swap(is_total_, other->is_total_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102102::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102102_descriptor_;
  metadata.reflection = Proto50102102_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102103::kRoleIdFieldNumber;
const int Proto10102103::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto10102103::Proto10102103()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102103::InitAsDefaultInstance() {
}

Proto10102103::Proto10102103(const Proto10102103& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102103::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102103::~Proto10102103() {
  SharedDtor();
}

void Proto10102103::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102103::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102103::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102103_descriptor_;
}

const Proto10102103& Proto10102103::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto10102103* Proto10102103::default_instance_ = NULL;

Proto10102103* Proto10102103::New() const {
  return new Proto10102103;
}

void Proto10102103::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102103::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102103::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102103::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102103::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102103::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102103* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102103*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102103::MergeFrom(const Proto10102103& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102103::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102103::CopyFrom(const Proto10102103& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102103::IsInitialized() const {
  
  return true;
}

void Proto10102103::Swap(Proto10102103* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102103::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102103_descriptor_;
  metadata.reflection = Proto10102103_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102103::kRoleIdFieldNumber;
const int Proto50102103::kTypeFieldNumber;
const int Proto50102103::kCheerFieldNumber;
const int Proto50102103::kEncourageFieldNumber;
const int Proto50102103::kCheerRecordFieldNumber;
#endif  // !_MSC_VER

Proto50102103::Proto50102103()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102103::InitAsDefaultInstance() {
  cheer_record_ = const_cast< ::ProtoCheerRecord*>(&::ProtoCheerRecord::default_instance());
}

Proto50102103::Proto50102103(const Proto50102103& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102103::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  cheer_ = 0;
  encourage_ = 0;
  cheer_record_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102103::~Proto50102103() {
  SharedDtor();
}

void Proto50102103::SharedDtor() {
  if (this != default_instance_) {
    delete cheer_record_;
  }
}

void Proto50102103::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102103::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102103_descriptor_;
}

const Proto50102103& Proto50102103::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50102103* Proto50102103::default_instance_ = NULL;

Proto50102103* Proto50102103::New() const {
  return new Proto50102103;
}

void Proto50102103::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    type_ = 0;
    cheer_ = 0;
    encourage_ = 0;
    if (has_cheer_record()) {
      if (cheer_record_ != NULL) cheer_record_->::ProtoCheerRecord::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102103::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cheer;
        break;
      }
      
      // optional int32 cheer = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cheer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cheer_)));
          set_has_cheer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_encourage;
        break;
      }
      
      // optional int32 encourage = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_encourage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &encourage_)));
          set_has_encourage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_cheer_record;
        break;
      }
      
      // optional .ProtoCheerRecord cheer_record = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cheer_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cheer_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102103::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  // optional int32 cheer = 3;
  if (has_cheer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cheer(), output);
  }
  
  // optional int32 encourage = 4;
  if (has_encourage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->encourage(), output);
  }
  
  // optional .ProtoCheerRecord cheer_record = 5;
  if (has_cheer_record()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->cheer_record(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102103::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  // optional int32 cheer = 3;
  if (has_cheer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cheer(), target);
  }
  
  // optional int32 encourage = 4;
  if (has_encourage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->encourage(), target);
  }
  
  // optional .ProtoCheerRecord cheer_record = 5;
  if (has_cheer_record()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->cheer_record(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102103::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 cheer = 3;
    if (has_cheer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cheer());
    }
    
    // optional int32 encourage = 4;
    if (has_encourage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->encourage());
    }
    
    // optional .ProtoCheerRecord cheer_record = 5;
    if (has_cheer_record()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cheer_record());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102103::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102103* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102103*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102103::MergeFrom(const Proto50102103& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_cheer()) {
      set_cheer(from.cheer());
    }
    if (from.has_encourage()) {
      set_encourage(from.encourage());
    }
    if (from.has_cheer_record()) {
      mutable_cheer_record()->::ProtoCheerRecord::MergeFrom(from.cheer_record());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102103::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102103::CopyFrom(const Proto50102103& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102103::IsInitialized() const {
  
  return true;
}

void Proto50102103::Swap(Proto50102103* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(type_, other->type_);
    std::swap(cheer_, other->cheer_);
    std::swap(encourage_, other->encourage_);
    std::swap(cheer_record_, other->cheer_record_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102103::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102103_descriptor_;
  metadata.reflection = Proto50102103_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102104::kCheerFieldNumber;
const int Proto50102104::kEncourageFieldNumber;
const int Proto50102104::kBeCheerFieldNumber;
const int Proto50102104::kBeEncourageFieldNumber;
const int Proto50102104::kMyCheerFieldNumber;
const int Proto50102104::kPlayerInfoFieldNumber;
const int Proto50102104::kCheerRecordFieldNumber;
#endif  // !_MSC_VER

Proto50102104::Proto50102104()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102104::InitAsDefaultInstance() {
  my_cheer_ = const_cast< ::ProtoPlayerCheer*>(&::ProtoPlayerCheer::default_instance());
}

Proto50102104::Proto50102104(const Proto50102104& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102104::SharedCtor() {
  _cached_size_ = 0;
  cheer_ = 0;
  encourage_ = 0;
  be_cheer_ = 0;
  be_encourage_ = 0;
  my_cheer_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102104::~Proto50102104() {
  SharedDtor();
}

void Proto50102104::SharedDtor() {
  if (this != default_instance_) {
    delete my_cheer_;
  }
}

void Proto50102104::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102104::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102104_descriptor_;
}

const Proto50102104& Proto50102104::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50102104* Proto50102104::default_instance_ = NULL;

Proto50102104* Proto50102104::New() const {
  return new Proto50102104;
}

void Proto50102104::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cheer_ = 0;
    encourage_ = 0;
    be_cheer_ = 0;
    be_encourage_ = 0;
    if (has_my_cheer()) {
      if (my_cheer_ != NULL) my_cheer_->::ProtoPlayerCheer::Clear();
    }
  }
  player_info_.Clear();
  cheer_record_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102104::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cheer = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cheer_)));
          set_has_cheer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_encourage;
        break;
      }
      
      // optional int32 encourage = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_encourage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &encourage_)));
          set_has_encourage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_be_cheer;
        break;
      }
      
      // optional int32 be_cheer = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_be_cheer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &be_cheer_)));
          set_has_be_cheer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_be_encourage;
        break;
      }
      
      // optional int32 be_encourage = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_be_encourage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &be_encourage_)));
          set_has_be_encourage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_my_cheer;
        break;
      }
      
      // optional .ProtoPlayerCheer my_cheer = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_my_cheer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_my_cheer()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_player_info;
        break;
      }
      
      // repeated .ProtoPlayerCheer player_info = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_player_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_player_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_player_info;
        if (input->ExpectTag(58)) goto parse_cheer_record;
        break;
      }
      
      // repeated .ProtoCheerRecord cheer_record = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cheer_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cheer_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_cheer_record;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102104::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cheer = 1;
  if (has_cheer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cheer(), output);
  }
  
  // optional int32 encourage = 2;
  if (has_encourage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->encourage(), output);
  }
  
  // optional int32 be_cheer = 3;
  if (has_be_cheer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->be_cheer(), output);
  }
  
  // optional int32 be_encourage = 4;
  if (has_be_encourage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->be_encourage(), output);
  }
  
  // optional .ProtoPlayerCheer my_cheer = 5;
  if (has_my_cheer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->my_cheer(), output);
  }
  
  // repeated .ProtoPlayerCheer player_info = 6;
  for (int i = 0; i < this->player_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->player_info(i), output);
  }
  
  // repeated .ProtoCheerRecord cheer_record = 7;
  for (int i = 0; i < this->cheer_record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->cheer_record(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102104::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cheer = 1;
  if (has_cheer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cheer(), target);
  }
  
  // optional int32 encourage = 2;
  if (has_encourage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->encourage(), target);
  }
  
  // optional int32 be_cheer = 3;
  if (has_be_cheer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->be_cheer(), target);
  }
  
  // optional int32 be_encourage = 4;
  if (has_be_encourage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->be_encourage(), target);
  }
  
  // optional .ProtoPlayerCheer my_cheer = 5;
  if (has_my_cheer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->my_cheer(), target);
  }
  
  // repeated .ProtoPlayerCheer player_info = 6;
  for (int i = 0; i < this->player_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->player_info(i), target);
  }
  
  // repeated .ProtoCheerRecord cheer_record = 7;
  for (int i = 0; i < this->cheer_record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->cheer_record(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102104::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cheer = 1;
    if (has_cheer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cheer());
    }
    
    // optional int32 encourage = 2;
    if (has_encourage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->encourage());
    }
    
    // optional int32 be_cheer = 3;
    if (has_be_cheer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->be_cheer());
    }
    
    // optional int32 be_encourage = 4;
    if (has_be_encourage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->be_encourage());
    }
    
    // optional .ProtoPlayerCheer my_cheer = 5;
    if (has_my_cheer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->my_cheer());
    }
    
  }
  // repeated .ProtoPlayerCheer player_info = 6;
  total_size += 1 * this->player_info_size();
  for (int i = 0; i < this->player_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->player_info(i));
  }
  
  // repeated .ProtoCheerRecord cheer_record = 7;
  total_size += 1 * this->cheer_record_size();
  for (int i = 0; i < this->cheer_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cheer_record(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102104::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102104* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102104*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102104::MergeFrom(const Proto50102104& from) {
  GOOGLE_CHECK_NE(&from, this);
  player_info_.MergeFrom(from.player_info_);
  cheer_record_.MergeFrom(from.cheer_record_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cheer()) {
      set_cheer(from.cheer());
    }
    if (from.has_encourage()) {
      set_encourage(from.encourage());
    }
    if (from.has_be_cheer()) {
      set_be_cheer(from.be_cheer());
    }
    if (from.has_be_encourage()) {
      set_be_encourage(from.be_encourage());
    }
    if (from.has_my_cheer()) {
      mutable_my_cheer()->::ProtoPlayerCheer::MergeFrom(from.my_cheer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102104::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102104::CopyFrom(const Proto50102104& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102104::IsInitialized() const {
  
  return true;
}

void Proto50102104::Swap(Proto50102104* other) {
  if (other != this) {
    std::swap(cheer_, other->cheer_);
    std::swap(encourage_, other->encourage_);
    std::swap(be_cheer_, other->be_cheer_);
    std::swap(be_encourage_, other->be_encourage_);
    std::swap(my_cheer_, other->my_cheer_);
    player_info_.Swap(&other->player_info_);
    cheer_record_.Swap(&other->cheer_record_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102104::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102104_descriptor_;
  metadata.reflection = Proto50102104_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400389::kMainTypeFieldNumber;
const int Proto80400389::kOpenDaysFieldNumber;
const int Proto80400389::kAbsoluteDaysFieldNumber;
#endif  // !_MSC_VER

Proto80400389::Proto80400389()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400389::InitAsDefaultInstance() {
}

Proto80400389::Proto80400389(const Proto80400389& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400389::SharedCtor() {
  _cached_size_ = 0;
  main_type_ = 0;
  open_days_ = 0;
  absolute_days_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400389::~Proto80400389() {
  SharedDtor();
}

void Proto80400389::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400389::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400389::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400389_descriptor_;
}

const Proto80400389& Proto80400389::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto80400389* Proto80400389::default_instance_ = NULL;

Proto80400389* Proto80400389::New() const {
  return new Proto80400389;
}

void Proto80400389::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    main_type_ = 0;
    open_days_ = 0;
    absolute_days_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400389::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 main_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &main_type_)));
          set_has_main_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_open_days;
        break;
      }
      
      // optional int32 open_days = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_open_days:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_days_)));
          set_has_open_days();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_absolute_days;
        break;
      }
      
      // optional int32 absolute_days = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_absolute_days:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &absolute_days_)));
          set_has_absolute_days();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400389::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 main_type = 1;
  if (has_main_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->main_type(), output);
  }
  
  // optional int32 open_days = 2;
  if (has_open_days()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->open_days(), output);
  }
  
  // optional int32 absolute_days = 3;
  if (has_absolute_days()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->absolute_days(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400389::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 main_type = 1;
  if (has_main_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->main_type(), target);
  }
  
  // optional int32 open_days = 2;
  if (has_open_days()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->open_days(), target);
  }
  
  // optional int32 absolute_days = 3;
  if (has_absolute_days()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->absolute_days(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400389::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 main_type = 1;
    if (has_main_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->main_type());
    }
    
    // optional int32 open_days = 2;
    if (has_open_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open_days());
    }
    
    // optional int32 absolute_days = 3;
    if (has_absolute_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->absolute_days());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400389::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400389* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400389*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400389::MergeFrom(const Proto80400389& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_main_type()) {
      set_main_type(from.main_type());
    }
    if (from.has_open_days()) {
      set_open_days(from.open_days());
    }
    if (from.has_absolute_days()) {
      set_absolute_days(from.absolute_days());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400389::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400389::CopyFrom(const Proto80400389& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400389::IsInitialized() const {
  
  return true;
}

void Proto80400389::Swap(Proto80400389* other) {
  if (other != this) {
    std::swap(main_type_, other->main_type_);
    std::swap(open_days_, other->open_days_);
    std::swap(absolute_days_, other->absolute_days_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400389::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400389_descriptor_;
  metadata.reflection = Proto80400389_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400124::kLocationIdFieldNumber;
#endif  // !_MSC_VER

Proto11400124::Proto11400124()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400124::InitAsDefaultInstance() {
}

Proto11400124::Proto11400124(const Proto11400124& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400124::SharedCtor() {
  _cached_size_ = 0;
  location_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400124::~Proto11400124() {
  SharedDtor();
}

void Proto11400124::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400124::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400124::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400124_descriptor_;
}

const Proto11400124& Proto11400124::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto11400124* Proto11400124::default_instance_ = NULL;

Proto11400124* Proto11400124::New() const {
  return new Proto11400124;
}

void Proto11400124::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    location_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400124::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 location_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &location_id_)));
          set_has_location_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400124::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 location_id = 1;
  if (has_location_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->location_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400124::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 location_id = 1;
  if (has_location_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->location_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400124::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 location_id = 1;
    if (has_location_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->location_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400124::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400124* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400124*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400124::MergeFrom(const Proto11400124& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_location_id()) {
      set_location_id(from.location_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400124::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400124::CopyFrom(const Proto11400124& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400124::IsInitialized() const {
  
  return true;
}

void Proto11400124::Swap(Proto11400124* other) {
  if (other != this) {
    std::swap(location_id_, other->location_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400124::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400124_descriptor_;
  metadata.reflection = Proto11400124_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400123::kRechargeAmountFieldNumber;
const int Proto51400123::kDrawLocationFieldNumber;
const int Proto51400123::kLeftTickFieldNumber;
#endif  // !_MSC_VER

Proto51400123::Proto51400123()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400123::InitAsDefaultInstance() {
}

Proto51400123::Proto51400123(const Proto51400123& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400123::SharedCtor() {
  _cached_size_ = 0;
  recharge_amount_ = 0;
  left_tick_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400123::~Proto51400123() {
  SharedDtor();
}

void Proto51400123::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400123::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400123::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400123_descriptor_;
}

const Proto51400123& Proto51400123::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto51400123* Proto51400123::default_instance_ = NULL;

Proto51400123* Proto51400123::New() const {
  return new Proto51400123;
}

void Proto51400123::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    recharge_amount_ = 0;
    left_tick_ = 0;
  }
  draw_location_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400123::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 recharge_amount = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recharge_amount_)));
          set_has_recharge_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_draw_location;
        break;
      }
      
      // repeated int32 draw_location = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_draw_location:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_draw_location())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_draw_location())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_draw_location;
        if (input->ExpectTag(24)) goto parse_left_tick;
        break;
      }
      
      // optional int32 left_tick = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_tick_)));
          set_has_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400123::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 recharge_amount = 1;
  if (has_recharge_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->recharge_amount(), output);
  }
  
  // repeated int32 draw_location = 2;
  for (int i = 0; i < this->draw_location_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->draw_location(i), output);
  }
  
  // optional int32 left_tick = 3;
  if (has_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400123::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 recharge_amount = 1;
  if (has_recharge_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->recharge_amount(), target);
  }
  
  // repeated int32 draw_location = 2;
  for (int i = 0; i < this->draw_location_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->draw_location(i), target);
  }
  
  // optional int32 left_tick = 3;
  if (has_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400123::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 recharge_amount = 1;
    if (has_recharge_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recharge_amount());
    }
    
    // optional int32 left_tick = 3;
    if (has_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_tick());
    }
    
  }
  // repeated int32 draw_location = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->draw_location_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->draw_location(i));
    }
    total_size += 1 * this->draw_location_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400123::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400123* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400123*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400123::MergeFrom(const Proto51400123& from) {
  GOOGLE_CHECK_NE(&from, this);
  draw_location_.MergeFrom(from.draw_location_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recharge_amount()) {
      set_recharge_amount(from.recharge_amount());
    }
    if (from.has_left_tick()) {
      set_left_tick(from.left_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400123::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400123::CopyFrom(const Proto51400123& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400123::IsInitialized() const {
  
  return true;
}

void Proto51400123::Swap(Proto51400123* other) {
  if (other != this) {
    std::swap(recharge_amount_, other->recharge_amount_);
    draw_location_.Swap(&other->draw_location_);
    std::swap(left_tick_, other->left_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400123::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400123_descriptor_;
  metadata.reflection = Proto51400123_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400124::kLocationIdFieldNumber;
#endif  // !_MSC_VER

Proto51400124::Proto51400124()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400124::InitAsDefaultInstance() {
}

Proto51400124::Proto51400124(const Proto51400124& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400124::SharedCtor() {
  _cached_size_ = 0;
  location_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400124::~Proto51400124() {
  SharedDtor();
}

void Proto51400124::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400124::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400124::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400124_descriptor_;
}

const Proto51400124& Proto51400124::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto51400124* Proto51400124::default_instance_ = NULL;

Proto51400124* Proto51400124::New() const {
  return new Proto51400124;
}

void Proto51400124::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    location_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400124::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 location_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &location_id_)));
          set_has_location_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400124::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 location_id = 1;
  if (has_location_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->location_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400124::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 location_id = 1;
  if (has_location_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->location_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400124::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 location_id = 1;
    if (has_location_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->location_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400124::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400124* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400124*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400124::MergeFrom(const Proto51400124& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_location_id()) {
      set_location_id(from.location_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400124::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400124::CopyFrom(const Proto51400124& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400124::IsInitialized() const {
  
  return true;
}

void Proto51400124::Swap(Proto51400124* other) {
  if (other != this) {
    std::swap(location_id_, other->location_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400124::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400124_descriptor_;
  metadata.reflection = Proto51400124_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102105::kScriptSortFieldNumber;
#endif  // !_MSC_VER

Proto10102105::Proto10102105()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102105::InitAsDefaultInstance() {
}

Proto10102105::Proto10102105(const Proto10102105& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102105::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102105::~Proto10102105() {
  SharedDtor();
}

void Proto10102105::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102105::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102105::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102105_descriptor_;
}

const Proto10102105& Proto10102105::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto10102105* Proto10102105::default_instance_ = NULL;

Proto10102105* Proto10102105::New() const {
  return new Proto10102105;
}

void Proto10102105::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102105::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102105::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102105::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102105::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102105::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102105* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102105*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102105::MergeFrom(const Proto10102105& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102105::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102105::CopyFrom(const Proto10102105& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102105::IsInitialized() const {
  
  return true;
}

void Proto10102105::Swap(Proto10102105* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102105::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102105_descriptor_;
  metadata.reflection = Proto10102105_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102051::kActivityIdFieldNumber;
const int Proto10102051::kPageFieldNumber;
#endif  // !_MSC_VER

Proto10102051::Proto10102051()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102051::InitAsDefaultInstance() {
}

Proto10102051::Proto10102051(const Proto10102051& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102051::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102051::~Proto10102051() {
  SharedDtor();
}

void Proto10102051::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102051::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102051::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102051_descriptor_;
}

const Proto10102051& Proto10102051::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto10102051* Proto10102051::default_instance_ = NULL;

Proto10102051* Proto10102051::New() const {
  return new Proto10102051;
}

void Proto10102051::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    page_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102051::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_page;
        break;
      }
      
      // optional int32 page = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
          set_has_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102051::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 page = 2;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102051::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 page = 2;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102051::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 page = 2;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102051::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102051* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102051*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102051::MergeFrom(const Proto10102051& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_page()) {
      set_page(from.page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102051::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102051::CopyFrom(const Proto10102051& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102051::IsInitialized() const {
  
  return true;
}

void Proto10102051::Swap(Proto10102051* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(page_, other->page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102051::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102051_descriptor_;
  metadata.reflection = Proto10102051_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102051::kLeftTickFieldNumber;
const int Proto50102051::kRankInfoFieldNumber;
const int Proto50102051::kMyRankFieldNumber;
const int Proto50102051::kCurPageFieldNumber;
const int Proto50102051::kTotalPageFieldNumber;
#endif  // !_MSC_VER

Proto50102051::Proto50102051()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102051::InitAsDefaultInstance() {
  my_rank_ = const_cast< ::ProtoRechargeRank*>(&::ProtoRechargeRank::default_instance());
}

Proto50102051::Proto50102051(const Proto50102051& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102051::SharedCtor() {
  _cached_size_ = 0;
  left_tick_ = 0;
  my_rank_ = NULL;
  cur_page_ = 0;
  total_page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102051::~Proto50102051() {
  SharedDtor();
}

void Proto50102051::SharedDtor() {
  if (this != default_instance_) {
    delete my_rank_;
  }
}

void Proto50102051::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102051::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102051_descriptor_;
}

const Proto50102051& Proto50102051::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50102051* Proto50102051::default_instance_ = NULL;

Proto50102051* Proto50102051::New() const {
  return new Proto50102051;
}

void Proto50102051::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_tick_ = 0;
    if (has_my_rank()) {
      if (my_rank_ != NULL) my_rank_->::ProtoRechargeRank::Clear();
    }
    cur_page_ = 0;
    total_page_ = 0;
  }
  rank_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102051::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_tick = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_tick_)));
          set_has_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_rank_info;
        break;
      }
      
      // repeated .ProtoRechargeRank rank_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_rank_info;
        if (input->ExpectTag(26)) goto parse_my_rank;
        break;
      }
      
      // optional .ProtoRechargeRank my_rank = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_my_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_my_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_cur_page;
        break;
      }
      
      // optional int32 cur_page = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_page_)));
          set_has_cur_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102051::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_tick = 1;
  if (has_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_tick(), output);
  }
  
  // repeated .ProtoRechargeRank rank_info = 2;
  for (int i = 0; i < this->rank_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rank_info(i), output);
  }
  
  // optional .ProtoRechargeRank my_rank = 3;
  if (has_my_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->my_rank(), output);
  }
  
  // optional int32 cur_page = 4;
  if (has_cur_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cur_page(), output);
  }
  
  // optional int32 total_page = 5;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->total_page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102051::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_tick = 1;
  if (has_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_tick(), target);
  }
  
  // repeated .ProtoRechargeRank rank_info = 2;
  for (int i = 0; i < this->rank_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->rank_info(i), target);
  }
  
  // optional .ProtoRechargeRank my_rank = 3;
  if (has_my_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->my_rank(), target);
  }
  
  // optional int32 cur_page = 4;
  if (has_cur_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cur_page(), target);
  }
  
  // optional int32 total_page = 5;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->total_page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102051::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_tick = 1;
    if (has_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_tick());
    }
    
    // optional .ProtoRechargeRank my_rank = 3;
    if (has_my_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->my_rank());
    }
    
    // optional int32 cur_page = 4;
    if (has_cur_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_page());
    }
    
    // optional int32 total_page = 5;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
  }
  // repeated .ProtoRechargeRank rank_info = 2;
  total_size += 1 * this->rank_info_size();
  for (int i = 0; i < this->rank_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102051::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102051* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102051*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102051::MergeFrom(const Proto50102051& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_info_.MergeFrom(from.rank_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_tick()) {
      set_left_tick(from.left_tick());
    }
    if (from.has_my_rank()) {
      mutable_my_rank()->::ProtoRechargeRank::MergeFrom(from.my_rank());
    }
    if (from.has_cur_page()) {
      set_cur_page(from.cur_page());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102051::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102051::CopyFrom(const Proto50102051& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102051::IsInitialized() const {
  
  return true;
}

void Proto50102051::Swap(Proto50102051* other) {
  if (other != this) {
    std::swap(left_tick_, other->left_tick_);
    rank_info_.Swap(&other->rank_info_);
    std::swap(my_rank_, other->my_rank_);
    std::swap(cur_page_, other->cur_page_);
    std::swap(total_page_, other->total_page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102051::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102051_descriptor_;
  metadata.reflection = Proto50102051_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400942::kPageFieldNumber;
#endif  // !_MSC_VER

Proto10400942::Proto10400942()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400942::InitAsDefaultInstance() {
}

Proto10400942::Proto10400942(const Proto10400942& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400942::SharedCtor() {
  _cached_size_ = 0;
  page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400942::~Proto10400942() {
  SharedDtor();
}

void Proto10400942::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400942::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400942::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400942_descriptor_;
}

const Proto10400942& Proto10400942::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto10400942* Proto10400942::default_instance_ = NULL;

Proto10400942* Proto10400942::New() const {
  return new Proto10400942;
}

void Proto10400942::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400942::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
          set_has_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400942::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page = 1;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400942::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page = 1;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400942::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page = 1;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400942::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400942* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400942*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400942::MergeFrom(const Proto10400942& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page()) {
      set_page(from.page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400942::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400942::CopyFrom(const Proto10400942& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400942::IsInitialized() const {
  
  return true;
}

void Proto10400942::Swap(Proto10400942* other) {
  if (other != this) {
    std::swap(page_, other->page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400942::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400942_descriptor_;
  metadata.reflection = Proto10400942_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400942::kCurPageFieldNumber;
const int Proto50400942::kTotalPageFieldNumber;
const int Proto50400942::kSwordRankFieldNumber;
const int Proto50400942::kMyRankFieldNumber;
#endif  // !_MSC_VER

Proto50400942::Proto50400942()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400942::InitAsDefaultInstance() {
  my_rank_ = const_cast< ::ProtoLegendTopRank*>(&::ProtoLegendTopRank::default_instance());
}

Proto50400942::Proto50400942(const Proto50400942& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400942::SharedCtor() {
  _cached_size_ = 0;
  cur_page_ = 0;
  total_page_ = 0;
  my_rank_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400942::~Proto50400942() {
  SharedDtor();
}

void Proto50400942::SharedDtor() {
  if (this != default_instance_) {
    delete my_rank_;
  }
}

void Proto50400942::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400942::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400942_descriptor_;
}

const Proto50400942& Proto50400942::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50400942* Proto50400942::default_instance_ = NULL;

Proto50400942* Proto50400942::New() const {
  return new Proto50400942;
}

void Proto50400942::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_page_ = 0;
    total_page_ = 0;
    if (has_my_rank()) {
      if (my_rank_ != NULL) my_rank_->::ProtoLegendTopRank::Clear();
    }
  }
  sword_rank_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400942::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_page = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_page_)));
          set_has_cur_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_sword_rank;
        break;
      }
      
      // repeated .ProtoLegendTopRank sword_rank = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sword_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sword_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_sword_rank;
        if (input->ExpectTag(34)) goto parse_my_rank;
        break;
      }
      
      // optional .ProtoLegendTopRank my_rank = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_my_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_my_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400942::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_page = 1;
  if (has_cur_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_page(), output);
  }
  
  // optional int32 total_page = 2;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_page(), output);
  }
  
  // repeated .ProtoLegendTopRank sword_rank = 3;
  for (int i = 0; i < this->sword_rank_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->sword_rank(i), output);
  }
  
  // optional .ProtoLegendTopRank my_rank = 4;
  if (has_my_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->my_rank(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400942::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_page = 1;
  if (has_cur_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_page(), target);
  }
  
  // optional int32 total_page = 2;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_page(), target);
  }
  
  // repeated .ProtoLegendTopRank sword_rank = 3;
  for (int i = 0; i < this->sword_rank_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->sword_rank(i), target);
  }
  
  // optional .ProtoLegendTopRank my_rank = 4;
  if (has_my_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->my_rank(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400942::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_page = 1;
    if (has_cur_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_page());
    }
    
    // optional int32 total_page = 2;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
    // optional .ProtoLegendTopRank my_rank = 4;
    if (has_my_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->my_rank());
    }
    
  }
  // repeated .ProtoLegendTopRank sword_rank = 3;
  total_size += 1 * this->sword_rank_size();
  for (int i = 0; i < this->sword_rank_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sword_rank(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400942::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400942* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400942*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400942::MergeFrom(const Proto50400942& from) {
  GOOGLE_CHECK_NE(&from, this);
  sword_rank_.MergeFrom(from.sword_rank_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_page()) {
      set_cur_page(from.cur_page());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
    if (from.has_my_rank()) {
      mutable_my_rank()->::ProtoLegendTopRank::MergeFrom(from.my_rank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400942::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400942::CopyFrom(const Proto50400942& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400942::IsInitialized() const {
  
  return true;
}

void Proto50400942::Swap(Proto50400942* other) {
  if (other != this) {
    std::swap(cur_page_, other->cur_page_);
    std::swap(total_page_, other->total_page_);
    sword_rank_.Swap(&other->sword_rank_);
    std::swap(my_rank_, other->my_rank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400942::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400942_descriptor_;
  metadata.reflection = Proto50400942_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400929::kFlagFieldNumber;
const int Proto80400929::kSciptSortFieldNumber;
const int Proto80400929::kUsedTickFieldNumber;
const int Proto80400929::kExpFieldNumber;
const int Proto80400929::kCopperFieldNumber;
const int Proto80400929::kItemFieldNumber;
const int Proto80400929::kStarLevelFieldNumber;
const int Proto80400929::kIsFirstPassFieldNumber;
const int Proto80400929::kAiScoreFieldNumber;
const int Proto80400929::kRescueAmountFieldNumber;
const int Proto80400929::kPresentSortFieldNumber;
const int Proto80400929::kNextSortFieldNumber;
const int Proto80400929::kNoCardFieldNumber;
const int Proto80400929::kBeginWaveFieldNumber;
const int Proto80400929::kEndWaveFieldNumber;
const int Proto80400929::kCurFloorFieldNumber;
const int Proto80400929::kMultFieldNumber;
#endif  // !_MSC_VER

Proto80400929::Proto80400929()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400929::InitAsDefaultInstance() {
}

Proto80400929::Proto80400929(const Proto80400929& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400929::SharedCtor() {
  _cached_size_ = 0;
  flag_ = 0;
  scipt_sort_ = 0;
  used_tick_ = 0;
  exp_ = 0;
  copper_ = 0;
  is_first_pass_ = 0;
  ai_score_ = 0;
  rescue_amount_ = 0;
  present_sort_ = 0;
  next_sort_ = 0;
  no_card_ = 0;
  begin_wave_ = 0;
  end_wave_ = 0;
  cur_floor_ = 0;
  mult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400929::~Proto80400929() {
  SharedDtor();
}

void Proto80400929::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400929::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400929::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400929_descriptor_;
}

const Proto80400929& Proto80400929::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto80400929* Proto80400929::default_instance_ = NULL;

Proto80400929* Proto80400929::New() const {
  return new Proto80400929;
}

void Proto80400929::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    flag_ = 0;
    scipt_sort_ = 0;
    used_tick_ = 0;
    exp_ = 0;
    copper_ = 0;
    is_first_pass_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    ai_score_ = 0;
    rescue_amount_ = 0;
    present_sort_ = 0;
    next_sort_ = 0;
    no_card_ = 0;
    begin_wave_ = 0;
    end_wave_ = 0;
    cur_floor_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    mult_ = 0;
  }
  item_.Clear();
  star_level_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400929::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_scipt_sort;
        break;
      }
      
      // optional int32 scipt_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scipt_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scipt_sort_)));
          set_has_scipt_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_used_tick;
        break;
      }
      
      // optional int32 used_tick = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_used_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &used_tick_)));
          set_has_used_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_exp;
        break;
      }
      
      // optional int32 exp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_copper;
        break;
      }
      
      // optional int32 copper = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_copper:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copper_)));
          set_has_copper();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_item;
        break;
      }
      
      // repeated .ProtoItem item = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_item;
        if (input->ExpectTag(56)) goto parse_star_level;
        break;
      }
      
      // repeated int32 star_level = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_star_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_star_level())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_star_level())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_star_level;
        if (input->ExpectTag(64)) goto parse_is_first_pass;
        break;
      }
      
      // optional int32 is_first_pass = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_first_pass:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_first_pass_)));
          set_has_is_first_pass();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_ai_score;
        break;
      }
      
      // optional int32 ai_score = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ai_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ai_score_)));
          set_has_ai_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_rescue_amount;
        break;
      }
      
      // optional int32 rescue_amount = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rescue_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rescue_amount_)));
          set_has_rescue_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_present_sort;
        break;
      }
      
      // optional int32 present_sort = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_present_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &present_sort_)));
          set_has_present_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_next_sort;
        break;
      }
      
      // optional int32 next_sort = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_next_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &next_sort_)));
          set_has_next_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_no_card;
        break;
      }
      
      // optional int32 no_card = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_no_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &no_card_)));
          set_has_no_card();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_begin_wave;
        break;
      }
      
      // optional int32 begin_wave = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_begin_wave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &begin_wave_)));
          set_has_begin_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_end_wave;
        break;
      }
      
      // optional int32 end_wave = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_wave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_wave_)));
          set_has_end_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_cur_floor;
        break;
      }
      
      // optional int32 cur_floor = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_floor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_floor_)));
          set_has_cur_floor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_mult;
        break;
      }
      
      // optional int32 mult = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mult_)));
          set_has_mult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400929::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 flag = 1;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag(), output);
  }
  
  // optional int32 scipt_sort = 2;
  if (has_scipt_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->scipt_sort(), output);
  }
  
  // optional int32 used_tick = 3;
  if (has_used_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->used_tick(), output);
  }
  
  // optional int32 exp = 4;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->exp(), output);
  }
  
  // optional int32 copper = 5;
  if (has_copper()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->copper(), output);
  }
  
  // repeated .ProtoItem item = 6;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->item(i), output);
  }
  
  // repeated int32 star_level = 7;
  for (int i = 0; i < this->star_level_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->star_level(i), output);
  }
  
  // optional int32 is_first_pass = 8;
  if (has_is_first_pass()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->is_first_pass(), output);
  }
  
  // optional int32 ai_score = 9;
  if (has_ai_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->ai_score(), output);
  }
  
  // optional int32 rescue_amount = 10;
  if (has_rescue_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->rescue_amount(), output);
  }
  
  // optional int32 present_sort = 11;
  if (has_present_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->present_sort(), output);
  }
  
  // optional int32 next_sort = 12;
  if (has_next_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->next_sort(), output);
  }
  
  // optional int32 no_card = 13;
  if (has_no_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->no_card(), output);
  }
  
  // optional int32 begin_wave = 14;
  if (has_begin_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->begin_wave(), output);
  }
  
  // optional int32 end_wave = 15;
  if (has_end_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->end_wave(), output);
  }
  
  // optional int32 cur_floor = 16;
  if (has_cur_floor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->cur_floor(), output);
  }
  
  // optional int32 mult = 17;
  if (has_mult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->mult(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400929::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 flag = 1;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag(), target);
  }
  
  // optional int32 scipt_sort = 2;
  if (has_scipt_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->scipt_sort(), target);
  }
  
  // optional int32 used_tick = 3;
  if (has_used_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->used_tick(), target);
  }
  
  // optional int32 exp = 4;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->exp(), target);
  }
  
  // optional int32 copper = 5;
  if (has_copper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->copper(), target);
  }
  
  // repeated .ProtoItem item = 6;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->item(i), target);
  }
  
  // repeated int32 star_level = 7;
  for (int i = 0; i < this->star_level_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->star_level(i), target);
  }
  
  // optional int32 is_first_pass = 8;
  if (has_is_first_pass()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->is_first_pass(), target);
  }
  
  // optional int32 ai_score = 9;
  if (has_ai_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->ai_score(), target);
  }
  
  // optional int32 rescue_amount = 10;
  if (has_rescue_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->rescue_amount(), target);
  }
  
  // optional int32 present_sort = 11;
  if (has_present_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->present_sort(), target);
  }
  
  // optional int32 next_sort = 12;
  if (has_next_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->next_sort(), target);
  }
  
  // optional int32 no_card = 13;
  if (has_no_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->no_card(), target);
  }
  
  // optional int32 begin_wave = 14;
  if (has_begin_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->begin_wave(), target);
  }
  
  // optional int32 end_wave = 15;
  if (has_end_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->end_wave(), target);
  }
  
  // optional int32 cur_floor = 16;
  if (has_cur_floor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->cur_floor(), target);
  }
  
  // optional int32 mult = 17;
  if (has_mult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->mult(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400929::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 flag = 1;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }
    
    // optional int32 scipt_sort = 2;
    if (has_scipt_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scipt_sort());
    }
    
    // optional int32 used_tick = 3;
    if (has_used_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->used_tick());
    }
    
    // optional int32 exp = 4;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }
    
    // optional int32 copper = 5;
    if (has_copper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->copper());
    }
    
    // optional int32 is_first_pass = 8;
    if (has_is_first_pass()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_first_pass());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 ai_score = 9;
    if (has_ai_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ai_score());
    }
    
    // optional int32 rescue_amount = 10;
    if (has_rescue_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rescue_amount());
    }
    
    // optional int32 present_sort = 11;
    if (has_present_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->present_sort());
    }
    
    // optional int32 next_sort = 12;
    if (has_next_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->next_sort());
    }
    
    // optional int32 no_card = 13;
    if (has_no_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->no_card());
    }
    
    // optional int32 begin_wave = 14;
    if (has_begin_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->begin_wave());
    }
    
    // optional int32 end_wave = 15;
    if (has_end_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->end_wave());
    }
    
    // optional int32 cur_floor = 16;
    if (has_cur_floor()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_floor());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 mult = 17;
    if (has_mult()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mult());
    }
    
  }
  // repeated .ProtoItem item = 6;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }
  
  // repeated int32 star_level = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->star_level_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->star_level(i));
    }
    total_size += 1 * this->star_level_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400929::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400929* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400929*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400929::MergeFrom(const Proto80400929& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  star_level_.MergeFrom(from.star_level_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flag()) {
      set_flag(from.flag());
    }
    if (from.has_scipt_sort()) {
      set_scipt_sort(from.scipt_sort());
    }
    if (from.has_used_tick()) {
      set_used_tick(from.used_tick());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_copper()) {
      set_copper(from.copper());
    }
    if (from.has_is_first_pass()) {
      set_is_first_pass(from.is_first_pass());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_ai_score()) {
      set_ai_score(from.ai_score());
    }
    if (from.has_rescue_amount()) {
      set_rescue_amount(from.rescue_amount());
    }
    if (from.has_present_sort()) {
      set_present_sort(from.present_sort());
    }
    if (from.has_next_sort()) {
      set_next_sort(from.next_sort());
    }
    if (from.has_no_card()) {
      set_no_card(from.no_card());
    }
    if (from.has_begin_wave()) {
      set_begin_wave(from.begin_wave());
    }
    if (from.has_end_wave()) {
      set_end_wave(from.end_wave());
    }
    if (from.has_cur_floor()) {
      set_cur_floor(from.cur_floor());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_mult()) {
      set_mult(from.mult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400929::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400929::CopyFrom(const Proto80400929& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400929::IsInitialized() const {
  
  return true;
}

void Proto80400929::Swap(Proto80400929* other) {
  if (other != this) {
    std::swap(flag_, other->flag_);
    std::swap(scipt_sort_, other->scipt_sort_);
    std::swap(used_tick_, other->used_tick_);
    std::swap(exp_, other->exp_);
    std::swap(copper_, other->copper_);
    item_.Swap(&other->item_);
    star_level_.Swap(&other->star_level_);
    std::swap(is_first_pass_, other->is_first_pass_);
    std::swap(ai_score_, other->ai_score_);
    std::swap(rescue_amount_, other->rescue_amount_);
    std::swap(present_sort_, other->present_sort_);
    std::swap(next_sort_, other->next_sort_);
    std::swap(no_card_, other->no_card_);
    std::swap(begin_wave_, other->begin_wave_);
    std::swap(end_wave_, other->end_wave_);
    std::swap(cur_floor_, other->cur_floor_);
    std::swap(mult_, other->mult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400929::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400929_descriptor_;
  metadata.reflection = Proto80400929_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401209::kScriptSortFieldNumber;
const int Proto51401209::kScriptTypeFieldNumber;
const int Proto51401209::kItemListFieldNumber;
const int Proto51401209::kDropListFieldNumber;
const int Proto51401209::kIsShowCardFieldNumber;
const int Proto51401209::kCardIndexFieldNumber;
const int Proto51401209::kCardListFieldNumber;
const int Proto51401209::kIsVipRateFieldNumber;
const int Proto51401209::kSavvyFieldNumber;
const int Proto51401209::kResetTimesFieldNumber;
const int Proto51401209::kTopFloorFieldNumber;
const int Proto51401209::kPassWaveFieldNumber;
const int Proto51401209::kPassChapterFieldNumber;
const int Proto51401209::kCleanItemFieldNumber;
#endif  // !_MSC_VER

Proto51401209::Proto51401209()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401209::InitAsDefaultInstance() {
}

Proto51401209::Proto51401209(const Proto51401209& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401209::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  script_type_ = 0;
  is_show_card_ = 0;
  card_index_ = 0;
  is_vip_rate_ = 0;
  savvy_ = 0;
  reset_times_ = 0;
  top_floor_ = 0;
  pass_wave_ = 0;
  pass_chapter_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401209::~Proto51401209() {
  SharedDtor();
}

void Proto51401209::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401209::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401209::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401209_descriptor_;
}

const Proto51401209& Proto51401209::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto51401209* Proto51401209::default_instance_ = NULL;

Proto51401209* Proto51401209::New() const {
  return new Proto51401209;
}

void Proto51401209::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
    script_type_ = 0;
    is_show_card_ = 0;
    card_index_ = 0;
    is_vip_rate_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    savvy_ = 0;
    reset_times_ = 0;
    top_floor_ = 0;
    pass_wave_ = 0;
    pass_chapter_ = 0;
  }
  item_list_.Clear();
  drop_list_.Clear();
  card_list_.Clear();
  clean_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401209::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_script_type;
        break;
      }
      
      // optional int32 script_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_type_)));
          set_has_script_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoItem item_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_item_list;
        if (input->ExpectTag(34)) goto parse_drop_list;
        break;
      }
      
      // repeated .ProtoItem drop_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_drop_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_drop_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_drop_list;
        if (input->ExpectTag(40)) goto parse_is_show_card;
        break;
      }
      
      // optional int32 is_show_card = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_show_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_show_card_)));
          set_has_is_show_card();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_card_index;
        break;
      }
      
      // optional int32 card_index = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_card_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &card_index_)));
          set_has_card_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_card_list;
        break;
      }
      
      // repeated .ProtoItem card_list = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_card_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_card_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_card_list;
        if (input->ExpectTag(64)) goto parse_is_vip_rate;
        break;
      }
      
      // optional int32 is_vip_rate = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_vip_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_vip_rate_)));
          set_has_is_vip_rate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_savvy;
        break;
      }
      
      // optional int32 savvy = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_savvy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &savvy_)));
          set_has_savvy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_reset_times;
        break;
      }
      
      // optional int32 reset_times = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reset_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reset_times_)));
          set_has_reset_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_top_floor;
        break;
      }
      
      // optional int32 top_floor = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_top_floor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_floor_)));
          set_has_top_floor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_pass_wave;
        break;
      }
      
      // optional int32 pass_wave = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pass_wave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pass_wave_)));
          set_has_pass_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_pass_chapter;
        break;
      }
      
      // optional int32 pass_chapter = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pass_chapter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pass_chapter_)));
          set_has_pass_chapter();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_clean_item;
        break;
      }
      
      // repeated .ProtoCleanInfo clean_item = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clean_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_clean_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_clean_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401209::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  // optional int32 script_type = 2;
  if (has_script_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->script_type(), output);
  }
  
  // repeated .ProtoItem item_list = 3;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->item_list(i), output);
  }
  
  // repeated .ProtoItem drop_list = 4;
  for (int i = 0; i < this->drop_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->drop_list(i), output);
  }
  
  // optional int32 is_show_card = 5;
  if (has_is_show_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->is_show_card(), output);
  }
  
  // optional int32 card_index = 6;
  if (has_card_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->card_index(), output);
  }
  
  // repeated .ProtoItem card_list = 7;
  for (int i = 0; i < this->card_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->card_list(i), output);
  }
  
  // optional int32 is_vip_rate = 8;
  if (has_is_vip_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->is_vip_rate(), output);
  }
  
  // optional int32 savvy = 9;
  if (has_savvy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->savvy(), output);
  }
  
  // optional int32 reset_times = 10;
  if (has_reset_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->reset_times(), output);
  }
  
  // optional int32 top_floor = 11;
  if (has_top_floor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->top_floor(), output);
  }
  
  // optional int32 pass_wave = 12;
  if (has_pass_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->pass_wave(), output);
  }
  
  // optional int32 pass_chapter = 13;
  if (has_pass_chapter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->pass_chapter(), output);
  }
  
  // repeated .ProtoCleanInfo clean_item = 14;
  for (int i = 0; i < this->clean_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->clean_item(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401209::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  // optional int32 script_type = 2;
  if (has_script_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->script_type(), target);
  }
  
  // repeated .ProtoItem item_list = 3;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->item_list(i), target);
  }
  
  // repeated .ProtoItem drop_list = 4;
  for (int i = 0; i < this->drop_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->drop_list(i), target);
  }
  
  // optional int32 is_show_card = 5;
  if (has_is_show_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->is_show_card(), target);
  }
  
  // optional int32 card_index = 6;
  if (has_card_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->card_index(), target);
  }
  
  // repeated .ProtoItem card_list = 7;
  for (int i = 0; i < this->card_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->card_list(i), target);
  }
  
  // optional int32 is_vip_rate = 8;
  if (has_is_vip_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->is_vip_rate(), target);
  }
  
  // optional int32 savvy = 9;
  if (has_savvy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->savvy(), target);
  }
  
  // optional int32 reset_times = 10;
  if (has_reset_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->reset_times(), target);
  }
  
  // optional int32 top_floor = 11;
  if (has_top_floor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->top_floor(), target);
  }
  
  // optional int32 pass_wave = 12;
  if (has_pass_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->pass_wave(), target);
  }
  
  // optional int32 pass_chapter = 13;
  if (has_pass_chapter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->pass_chapter(), target);
  }
  
  // repeated .ProtoCleanInfo clean_item = 14;
  for (int i = 0; i < this->clean_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->clean_item(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401209::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 script_type = 2;
    if (has_script_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_type());
    }
    
    // optional int32 is_show_card = 5;
    if (has_is_show_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_show_card());
    }
    
    // optional int32 card_index = 6;
    if (has_card_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->card_index());
    }
    
    // optional int32 is_vip_rate = 8;
    if (has_is_vip_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_vip_rate());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 savvy = 9;
    if (has_savvy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->savvy());
    }
    
    // optional int32 reset_times = 10;
    if (has_reset_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reset_times());
    }
    
    // optional int32 top_floor = 11;
    if (has_top_floor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top_floor());
    }
    
    // optional int32 pass_wave = 12;
    if (has_pass_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pass_wave());
    }
    
    // optional int32 pass_chapter = 13;
    if (has_pass_chapter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pass_chapter());
    }
    
  }
  // repeated .ProtoItem item_list = 3;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  // repeated .ProtoItem drop_list = 4;
  total_size += 1 * this->drop_list_size();
  for (int i = 0; i < this->drop_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->drop_list(i));
  }
  
  // repeated .ProtoItem card_list = 7;
  total_size += 1 * this->card_list_size();
  for (int i = 0; i < this->card_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->card_list(i));
  }
  
  // repeated .ProtoCleanInfo clean_item = 14;
  total_size += 1 * this->clean_item_size();
  for (int i = 0; i < this->clean_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->clean_item(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401209::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401209* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401209*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401209::MergeFrom(const Proto51401209& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  drop_list_.MergeFrom(from.drop_list_);
  card_list_.MergeFrom(from.card_list_);
  clean_item_.MergeFrom(from.clean_item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_script_type()) {
      set_script_type(from.script_type());
    }
    if (from.has_is_show_card()) {
      set_is_show_card(from.is_show_card());
    }
    if (from.has_card_index()) {
      set_card_index(from.card_index());
    }
    if (from.has_is_vip_rate()) {
      set_is_vip_rate(from.is_vip_rate());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_savvy()) {
      set_savvy(from.savvy());
    }
    if (from.has_reset_times()) {
      set_reset_times(from.reset_times());
    }
    if (from.has_top_floor()) {
      set_top_floor(from.top_floor());
    }
    if (from.has_pass_wave()) {
      set_pass_wave(from.pass_wave());
    }
    if (from.has_pass_chapter()) {
      set_pass_chapter(from.pass_chapter());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401209::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401209::CopyFrom(const Proto51401209& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401209::IsInitialized() const {
  
  return true;
}

void Proto51401209::Swap(Proto51401209* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(script_type_, other->script_type_);
    item_list_.Swap(&other->item_list_);
    drop_list_.Swap(&other->drop_list_);
    std::swap(is_show_card_, other->is_show_card_);
    std::swap(card_index_, other->card_index_);
    card_list_.Swap(&other->card_list_);
    std::swap(is_vip_rate_, other->is_vip_rate_);
    std::swap(savvy_, other->savvy_);
    std::swap(reset_times_, other->reset_times_);
    std::swap(top_floor_, other->top_floor_);
    std::swap(pass_wave_, other->pass_wave_);
    std::swap(pass_chapter_, other->pass_chapter_);
    clean_item_.Swap(&other->clean_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401209::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401209_descriptor_;
  metadata.reflection = Proto51401209_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400136::kTypeFieldNumber;
const int Proto51400136::kExchangeIdFieldNumber;
const int Proto51400136::kAmountFieldNumber;
#endif  // !_MSC_VER

Proto51400136::Proto51400136()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400136::InitAsDefaultInstance() {
}

Proto51400136::Proto51400136(const Proto51400136& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400136::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  exchange_id_ = 0;
  amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400136::~Proto51400136() {
  SharedDtor();
}

void Proto51400136::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400136::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400136::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400136_descriptor_;
}

const Proto51400136& Proto51400136::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto51400136* Proto51400136::default_instance_ = NULL;

Proto51400136* Proto51400136::New() const {
  return new Proto51400136;
}

void Proto51400136::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    exchange_id_ = 0;
    amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400136::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exchange_id;
        break;
      }
      
      // optional int32 exchange_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exchange_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchange_id_)));
          set_has_exchange_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400136::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 exchange_id = 2;
  if (has_exchange_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exchange_id(), output);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400136::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 exchange_id = 2;
  if (has_exchange_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exchange_id(), target);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400136::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 exchange_id = 2;
    if (has_exchange_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exchange_id());
    }
    
    // optional int32 amount = 3;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400136::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400136* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400136*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400136::MergeFrom(const Proto51400136& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_exchange_id()) {
      set_exchange_id(from.exchange_id());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400136::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400136::CopyFrom(const Proto51400136& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400136::IsInitialized() const {
  
  return true;
}

void Proto51400136::Swap(Proto51400136* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(exchange_id_, other->exchange_id_);
    std::swap(amount_, other->amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400136::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400136_descriptor_;
  metadata.reflection = Proto51400136_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400136::kTypeFieldNumber;
const int Proto11400136::kExchangeIdFieldNumber;
const int Proto11400136::kAmountFieldNumber;
#endif  // !_MSC_VER

Proto11400136::Proto11400136()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400136::InitAsDefaultInstance() {
}

Proto11400136::Proto11400136(const Proto11400136& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400136::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  exchange_id_ = 0;
  amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400136::~Proto11400136() {
  SharedDtor();
}

void Proto11400136::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400136::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400136::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400136_descriptor_;
}

const Proto11400136& Proto11400136::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto11400136* Proto11400136::default_instance_ = NULL;

Proto11400136* Proto11400136::New() const {
  return new Proto11400136;
}

void Proto11400136::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    exchange_id_ = 0;
    amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400136::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exchange_id;
        break;
      }
      
      // optional int32 exchange_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exchange_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchange_id_)));
          set_has_exchange_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400136::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 exchange_id = 2;
  if (has_exchange_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exchange_id(), output);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400136::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 exchange_id = 2;
  if (has_exchange_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exchange_id(), target);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400136::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 exchange_id = 2;
    if (has_exchange_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exchange_id());
    }
    
    // optional int32 amount = 3;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400136::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400136* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400136*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400136::MergeFrom(const Proto11400136& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_exchange_id()) {
      set_exchange_id(from.exchange_id());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400136::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400136::CopyFrom(const Proto11400136& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400136::IsInitialized() const {
  
  return true;
}

void Proto11400136::Swap(Proto11400136* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(exchange_id_, other->exchange_id_);
    std::swap(amount_, other->amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400136::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400136_descriptor_;
  metadata.reflection = Proto11400136_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400943::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto10400943::Proto10400943()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400943::InitAsDefaultInstance() {
}

Proto10400943::Proto10400943(const Proto10400943& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400943::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400943::~Proto10400943() {
  SharedDtor();
}

void Proto10400943::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400943::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400943::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400943_descriptor_;
}

const Proto10400943& Proto10400943::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto10400943* Proto10400943::default_instance_ = NULL;

Proto10400943* Proto10400943::New() const {
  return new Proto10400943;
}

void Proto10400943::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400943::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400943::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400943::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400943::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400943::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400943* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400943*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400943::MergeFrom(const Proto10400943& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400943::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400943::CopyFrom(const Proto10400943& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400943::IsInitialized() const {
  
  return true;
}

void Proto10400943::Swap(Proto10400943* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400943::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400943_descriptor_;
  metadata.reflection = Proto10400943_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400943::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto50400943::Proto50400943()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400943::InitAsDefaultInstance() {
}

Proto50400943::Proto50400943(const Proto50400943& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400943::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400943::~Proto50400943() {
  SharedDtor();
}

void Proto50400943::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400943::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400943::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400943_descriptor_;
}

const Proto50400943& Proto50400943::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50400943* Proto50400943::default_instance_ = NULL;

Proto50400943* Proto50400943::New() const {
  return new Proto50400943;
}

void Proto50400943::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400943::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400943::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400943::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400943::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400943::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400943* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400943*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400943::MergeFrom(const Proto50400943& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400943::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400943::CopyFrom(const Proto50400943& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400943::IsInitialized() const {
  
  return true;
}

void Proto50400943::Swap(Proto50400943* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400943::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400943_descriptor_;
  metadata.reflection = Proto50400943_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100216::kActInfoFieldNumber;
const int Proto10100216::kActIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100216::Proto10100216()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100216::InitAsDefaultInstance() {
}

Proto10100216::Proto10100216(const Proto10100216& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100216::SharedCtor() {
  _cached_size_ = 0;
  act_info_ = 0;
  act_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100216::~Proto10100216() {
  SharedDtor();
}

void Proto10100216::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100216::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100216::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100216_descriptor_;
}

const Proto10100216& Proto10100216::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto10100216* Proto10100216::default_instance_ = NULL;

Proto10100216* Proto10100216::New() const {
  return new Proto10100216;
}

void Proto10100216::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    act_info_ = 0;
    act_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100216::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 act_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_info_)));
          set_has_act_info();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_act_index;
        break;
      }
      
      // optional int32 act_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_index_)));
          set_has_act_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100216::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 act_info = 1;
  if (has_act_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->act_info(), output);
  }
  
  // optional int32 act_index = 2;
  if (has_act_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->act_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100216::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 act_info = 1;
  if (has_act_info()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->act_info(), target);
  }
  
  // optional int32 act_index = 2;
  if (has_act_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->act_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100216::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 act_info = 1;
    if (has_act_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_info());
    }
    
    // optional int32 act_index = 2;
    if (has_act_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100216::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100216* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100216*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100216::MergeFrom(const Proto10100216& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_act_info()) {
      set_act_info(from.act_info());
    }
    if (from.has_act_index()) {
      set_act_index(from.act_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100216::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100216::CopyFrom(const Proto10100216& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100216::IsInitialized() const {
  
  return true;
}

void Proto10100216::Swap(Proto10100216* other) {
  if (other != this) {
    std::swap(act_info_, other->act_info_);
    std::swap(act_index_, other->act_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100216::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100216_descriptor_;
  metadata.reflection = Proto10100216_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102201::kActivitySetFieldNumber;
#endif  // !_MSC_VER

Proto50102201::Proto50102201()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102201::InitAsDefaultInstance() {
}

Proto50102201::Proto50102201(const Proto50102201& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102201::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102201::~Proto50102201() {
  SharedDtor();
}

void Proto50102201::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102201::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102201::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102201_descriptor_;
}

const Proto50102201& Proto50102201::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50102201* Proto50102201::default_instance_ = NULL;

Proto50102201* Proto50102201::New() const {
  return new Proto50102201;
}

void Proto50102201::Clear() {
  activity_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102201::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 activity_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_activity_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_activity_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_activity_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102201::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 activity_set = 1;
  for (int i = 0; i < this->activity_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->activity_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102201::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 activity_set = 1;
  for (int i = 0; i < this->activity_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->activity_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102201::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 activity_set = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->activity_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->activity_set(i));
    }
    total_size += 1 * this->activity_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102201::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102201* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102201*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102201::MergeFrom(const Proto50102201& from) {
  GOOGLE_CHECK_NE(&from, this);
  activity_set_.MergeFrom(from.activity_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102201::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102201::CopyFrom(const Proto50102201& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102201::IsInitialized() const {
  
  return true;
}

void Proto50102201::Swap(Proto50102201* other) {
  if (other != this) {
    activity_set_.Swap(&other->activity_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102201::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102201_descriptor_;
  metadata.reflection = Proto50102201_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102202::kValue1FieldNumber;
const int Proto50102202::kValue2FieldNumber;
const int Proto50102202::kLeftTickFieldNumber;
#endif  // !_MSC_VER

Proto50102202::Proto50102202()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102202::InitAsDefaultInstance() {
}

Proto50102202::Proto50102202(const Proto50102202& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102202::SharedCtor() {
  _cached_size_ = 0;
  value1_ = 0;
  value2_ = 0;
  left_tick_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102202::~Proto50102202() {
  SharedDtor();
}

void Proto50102202::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102202::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102202::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102202_descriptor_;
}

const Proto50102202& Proto50102202::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50102202* Proto50102202::default_instance_ = NULL;

Proto50102202* Proto50102202::New() const {
  return new Proto50102202;
}

void Proto50102202::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    value1_ = 0;
    value2_ = 0;
    left_tick_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102202::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 value1 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value1_)));
          set_has_value1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_value2;
        break;
      }
      
      // optional int32 value2 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value2_)));
          set_has_value2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left_tick;
        break;
      }
      
      // optional int32 left_tick = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_tick_)));
          set_has_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102202::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 value1 = 1;
  if (has_value1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->value1(), output);
  }
  
  // optional int32 value2 = 2;
  if (has_value2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value2(), output);
  }
  
  // optional int32 left_tick = 3;
  if (has_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102202::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 value1 = 1;
  if (has_value1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->value1(), target);
  }
  
  // optional int32 value2 = 2;
  if (has_value2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value2(), target);
  }
  
  // optional int32 left_tick = 3;
  if (has_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102202::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 value1 = 1;
    if (has_value1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value1());
    }
    
    // optional int32 value2 = 2;
    if (has_value2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value2());
    }
    
    // optional int32 left_tick = 3;
    if (has_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_tick());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102202::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102202* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102202*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102202::MergeFrom(const Proto50102202& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value1()) {
      set_value1(from.value1());
    }
    if (from.has_value2()) {
      set_value2(from.value2());
    }
    if (from.has_left_tick()) {
      set_left_tick(from.left_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102202::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102202::CopyFrom(const Proto50102202& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102202::IsInitialized() const {
  
  return true;
}

void Proto50102202::Swap(Proto50102202* other) {
  if (other != this) {
    std::swap(value1_, other->value1_);
    std::swap(value2_, other->value2_);
    std::swap(left_tick_, other->left_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102202::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102202_descriptor_;
  metadata.reflection = Proto50102202_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102019::kBeginTickFieldNumber;
const int Proto50102019::kEndTickFieldNumber;
#endif  // !_MSC_VER

Proto50102019::Proto50102019()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102019::InitAsDefaultInstance() {
}

Proto50102019::Proto50102019(const Proto50102019& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102019::SharedCtor() {
  _cached_size_ = 0;
  begin_tick_ = GOOGLE_LONGLONG(0);
  end_tick_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102019::~Proto50102019() {
  SharedDtor();
}

void Proto50102019::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102019::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102019::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102019_descriptor_;
}

const Proto50102019& Proto50102019::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50102019* Proto50102019::default_instance_ = NULL;

Proto50102019* Proto50102019::New() const {
  return new Proto50102019;
}

void Proto50102019::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    begin_tick_ = GOOGLE_LONGLONG(0);
    end_tick_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102019::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 begin_tick = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &begin_tick_)));
          set_has_begin_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_tick;
        break;
      }
      
      // optional int64 end_tick = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_tick_)));
          set_has_end_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102019::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 begin_tick = 1;
  if (has_begin_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->begin_tick(), output);
  }
  
  // optional int64 end_tick = 2;
  if (has_end_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102019::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 begin_tick = 1;
  if (has_begin_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->begin_tick(), target);
  }
  
  // optional int64 end_tick = 2;
  if (has_end_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102019::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 begin_tick = 1;
    if (has_begin_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->begin_tick());
    }
    
    // optional int64 end_tick = 2;
    if (has_end_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_tick());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102019::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102019* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102019*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102019::MergeFrom(const Proto50102019& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_begin_tick()) {
      set_begin_tick(from.begin_tick());
    }
    if (from.has_end_tick()) {
      set_end_tick(from.end_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102019::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102019::CopyFrom(const Proto50102019& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102019::IsInitialized() const {
  
  return true;
}

void Proto50102019::Swap(Proto50102019* other) {
  if (other != this) {
    std::swap(begin_tick_, other->begin_tick_);
    std::swap(end_tick_, other->end_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102019::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102019_descriptor_;
  metadata.reflection = Proto50102019_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11408001::kPlayerIdFieldNumber;
#endif  // !_MSC_VER

Proto11408001::Proto11408001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11408001::InitAsDefaultInstance() {
}

Proto11408001::Proto11408001(const Proto11408001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11408001::SharedCtor() {
  _cached_size_ = 0;
  player_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11408001::~Proto11408001() {
  SharedDtor();
}

void Proto11408001::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11408001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11408001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11408001_descriptor_;
}

const Proto11408001& Proto11408001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto11408001* Proto11408001::default_instance_ = NULL;

Proto11408001* Proto11408001::New() const {
  return new Proto11408001;
}

void Proto11408001::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    player_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11408001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 player_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
          set_has_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11408001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->player_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11408001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->player_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11408001::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11408001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11408001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11408001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11408001::MergeFrom(const Proto11408001& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11408001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11408001::CopyFrom(const Proto11408001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11408001::IsInitialized() const {
  
  return true;
}

void Proto11408001::Swap(Proto11408001* other) {
  if (other != this) {
    std::swap(player_id_, other->player_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11408001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11408001_descriptor_;
  metadata.reflection = Proto11408001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11408002::kOfflinehookDrugIdFieldNumber;
const int Proto11408002::kOfflinehookDrugCountFieldNumber;
const int Proto11408002::kSurplusTimeFieldNumber;
const int Proto11408002::kPackageTypeFieldNumber;
const int Proto11408002::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto11408002::Proto11408002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11408002::InitAsDefaultInstance() {
}

Proto11408002::Proto11408002(const Proto11408002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11408002::SharedCtor() {
  _cached_size_ = 0;
  offlinehook_drug_id_ = 0;
  offlinehook_drug_count_ = 0;
  surplus_time_ = GOOGLE_LONGLONG(0);
  package_type_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11408002::~Proto11408002() {
  SharedDtor();
}

void Proto11408002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11408002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11408002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11408002_descriptor_;
}

const Proto11408002& Proto11408002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto11408002* Proto11408002::default_instance_ = NULL;

Proto11408002* Proto11408002::New() const {
  return new Proto11408002;
}

void Proto11408002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    offlinehook_drug_id_ = 0;
    offlinehook_drug_count_ = 0;
    surplus_time_ = GOOGLE_LONGLONG(0);
    package_type_ = 0;
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11408002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 offlinehook_drug_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offlinehook_drug_id_)));
          set_has_offlinehook_drug_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_offlinehook_drug_count;
        break;
      }
      
      // optional int32 offlinehook_drug_count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_offlinehook_drug_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offlinehook_drug_count_)));
          set_has_offlinehook_drug_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_surplus_time;
        break;
      }
      
      // optional int64 surplus_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_surplus_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &surplus_time_)));
          set_has_surplus_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_package_type;
        break;
      }
      
      // optional int32 package_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_package_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &package_type_)));
          set_has_package_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_index;
        break;
      }
      
      // optional int32 index = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11408002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 offlinehook_drug_id = 1;
  if (has_offlinehook_drug_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->offlinehook_drug_id(), output);
  }
  
  // optional int32 offlinehook_drug_count = 2;
  if (has_offlinehook_drug_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->offlinehook_drug_count(), output);
  }
  
  // optional int64 surplus_time = 3;
  if (has_surplus_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->surplus_time(), output);
  }
  
  // optional int32 package_type = 4;
  if (has_package_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->package_type(), output);
  }
  
  // optional int32 index = 5;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11408002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 offlinehook_drug_id = 1;
  if (has_offlinehook_drug_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->offlinehook_drug_id(), target);
  }
  
  // optional int32 offlinehook_drug_count = 2;
  if (has_offlinehook_drug_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->offlinehook_drug_count(), target);
  }
  
  // optional int64 surplus_time = 3;
  if (has_surplus_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->surplus_time(), target);
  }
  
  // optional int32 package_type = 4;
  if (has_package_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->package_type(), target);
  }
  
  // optional int32 index = 5;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11408002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 offlinehook_drug_id = 1;
    if (has_offlinehook_drug_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->offlinehook_drug_id());
    }
    
    // optional int32 offlinehook_drug_count = 2;
    if (has_offlinehook_drug_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->offlinehook_drug_count());
    }
    
    // optional int64 surplus_time = 3;
    if (has_surplus_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->surplus_time());
    }
    
    // optional int32 package_type = 4;
    if (has_package_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->package_type());
    }
    
    // optional int32 index = 5;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11408002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11408002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11408002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11408002::MergeFrom(const Proto11408002& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_offlinehook_drug_id()) {
      set_offlinehook_drug_id(from.offlinehook_drug_id());
    }
    if (from.has_offlinehook_drug_count()) {
      set_offlinehook_drug_count(from.offlinehook_drug_count());
    }
    if (from.has_surplus_time()) {
      set_surplus_time(from.surplus_time());
    }
    if (from.has_package_type()) {
      set_package_type(from.package_type());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11408002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11408002::CopyFrom(const Proto11408002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11408002::IsInitialized() const {
  
  return true;
}

void Proto11408002::Swap(Proto11408002* other) {
  if (other != this) {
    std::swap(offlinehook_drug_id_, other->offlinehook_drug_id_);
    std::swap(offlinehook_drug_count_, other->offlinehook_drug_count_);
    std::swap(surplus_time_, other->surplus_time_);
    std::swap(package_type_, other->package_type_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11408002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11408002_descriptor_;
  metadata.reflection = Proto11408002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51408001::kSurplusTimeFieldNumber;
const int Proto51408001::kOfflinehookExpFieldNumber;
const int Proto51408001::kOfflinehookRewardFieldNumber;
const int Proto51408001::kOfflinehookTimeFieldNumber;
#endif  // !_MSC_VER

Proto51408001::Proto51408001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51408001::InitAsDefaultInstance() {
}

Proto51408001::Proto51408001(const Proto51408001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51408001::SharedCtor() {
  _cached_size_ = 0;
  surplus_time_ = GOOGLE_LONGLONG(0);
  offlinehook_exp_ = GOOGLE_LONGLONG(0);
  offlinehook_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51408001::~Proto51408001() {
  SharedDtor();
}

void Proto51408001::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51408001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51408001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51408001_descriptor_;
}

const Proto51408001& Proto51408001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto51408001* Proto51408001::default_instance_ = NULL;

Proto51408001* Proto51408001::New() const {
  return new Proto51408001;
}

void Proto51408001::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    surplus_time_ = GOOGLE_LONGLONG(0);
    offlinehook_exp_ = GOOGLE_LONGLONG(0);
    offlinehook_time_ = GOOGLE_LONGLONG(0);
  }
  offlinehook_reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51408001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 surplus_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &surplus_time_)));
          set_has_surplus_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_offlinehook_exp;
        break;
      }
      
      // optional int64 offlinehook_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_offlinehook_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &offlinehook_exp_)));
          set_has_offlinehook_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_offlinehook_reward;
        break;
      }
      
      // repeated .ProtoItemId offlinehook_reward = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_offlinehook_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_offlinehook_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_offlinehook_reward;
        if (input->ExpectTag(32)) goto parse_offlinehook_time;
        break;
      }
      
      // optional int64 offlinehook_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_offlinehook_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &offlinehook_time_)));
          set_has_offlinehook_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51408001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 surplus_time = 1;
  if (has_surplus_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->surplus_time(), output);
  }
  
  // optional int64 offlinehook_exp = 2;
  if (has_offlinehook_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->offlinehook_exp(), output);
  }
  
  // repeated .ProtoItemId offlinehook_reward = 3;
  for (int i = 0; i < this->offlinehook_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->offlinehook_reward(i), output);
  }
  
  // optional int64 offlinehook_time = 4;
  if (has_offlinehook_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->offlinehook_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51408001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 surplus_time = 1;
  if (has_surplus_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->surplus_time(), target);
  }
  
  // optional int64 offlinehook_exp = 2;
  if (has_offlinehook_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->offlinehook_exp(), target);
  }
  
  // repeated .ProtoItemId offlinehook_reward = 3;
  for (int i = 0; i < this->offlinehook_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->offlinehook_reward(i), target);
  }
  
  // optional int64 offlinehook_time = 4;
  if (has_offlinehook_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->offlinehook_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51408001::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 surplus_time = 1;
    if (has_surplus_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->surplus_time());
    }
    
    // optional int64 offlinehook_exp = 2;
    if (has_offlinehook_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->offlinehook_exp());
    }
    
    // optional int64 offlinehook_time = 4;
    if (has_offlinehook_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->offlinehook_time());
    }
    
  }
  // repeated .ProtoItemId offlinehook_reward = 3;
  total_size += 1 * this->offlinehook_reward_size();
  for (int i = 0; i < this->offlinehook_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->offlinehook_reward(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51408001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51408001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51408001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51408001::MergeFrom(const Proto51408001& from) {
  GOOGLE_CHECK_NE(&from, this);
  offlinehook_reward_.MergeFrom(from.offlinehook_reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_surplus_time()) {
      set_surplus_time(from.surplus_time());
    }
    if (from.has_offlinehook_exp()) {
      set_offlinehook_exp(from.offlinehook_exp());
    }
    if (from.has_offlinehook_time()) {
      set_offlinehook_time(from.offlinehook_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51408001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51408001::CopyFrom(const Proto51408001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51408001::IsInitialized() const {
  
  return true;
}

void Proto51408001::Swap(Proto51408001* other) {
  if (other != this) {
    std::swap(surplus_time_, other->surplus_time_);
    std::swap(offlinehook_exp_, other->offlinehook_exp_);
    offlinehook_reward_.Swap(&other->offlinehook_reward_);
    std::swap(offlinehook_time_, other->offlinehook_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51408001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51408001_descriptor_;
  metadata.reflection = Proto51408001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11408003::kPlayerIdFieldNumber;
#endif  // !_MSC_VER

Proto11408003::Proto11408003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11408003::InitAsDefaultInstance() {
}

Proto11408003::Proto11408003(const Proto11408003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11408003::SharedCtor() {
  _cached_size_ = 0;
  player_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11408003::~Proto11408003() {
  SharedDtor();
}

void Proto11408003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11408003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11408003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11408003_descriptor_;
}

const Proto11408003& Proto11408003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto11408003* Proto11408003::default_instance_ = NULL;

Proto11408003* Proto11408003::New() const {
  return new Proto11408003;
}

void Proto11408003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    player_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11408003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 player_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
          set_has_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11408003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->player_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11408003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->player_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11408003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 player_id = 1;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11408003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11408003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11408003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11408003::MergeFrom(const Proto11408003& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11408003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11408003::CopyFrom(const Proto11408003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11408003::IsInitialized() const {
  
  return true;
}

void Proto11408003::Swap(Proto11408003* other) {
  if (other != this) {
    std::swap(player_id_, other->player_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11408003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11408003_descriptor_;
  metadata.reflection = Proto11408003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51408002::kReplyFieldNumber;
const int Proto51408002::kErrorTipsFieldNumber;
#endif  // !_MSC_VER

Proto51408002::Proto51408002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51408002::InitAsDefaultInstance() {
}

Proto51408002::Proto51408002(const Proto51408002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51408002::SharedCtor() {
  _cached_size_ = 0;
  reply_ = 0;
  error_tips_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51408002::~Proto51408002() {
  SharedDtor();
}

void Proto51408002::SharedDtor() {
  if (error_tips_ != &::google::protobuf::internal::kEmptyString) {
    delete error_tips_;
  }
  if (this != default_instance_) {
  }
}

void Proto51408002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51408002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51408002_descriptor_;
}

const Proto51408002& Proto51408002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto51408002* Proto51408002::default_instance_ = NULL;

Proto51408002* Proto51408002::New() const {
  return new Proto51408002;
}

void Proto51408002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    reply_ = 0;
    if (has_error_tips()) {
      if (error_tips_ != &::google::protobuf::internal::kEmptyString) {
        error_tips_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51408002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 reply = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reply_)));
          set_has_reply();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_error_tips;
        break;
      }
      
      // optional string error_tips = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_error_tips:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_tips()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->error_tips().data(), this->error_tips().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51408002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 reply = 1;
  if (has_reply()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reply(), output);
  }
  
  // optional string error_tips = 2;
  if (has_error_tips()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->error_tips().data(), this->error_tips().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->error_tips(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51408002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 reply = 1;
  if (has_reply()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reply(), target);
  }
  
  // optional string error_tips = 2;
  if (has_error_tips()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->error_tips().data(), this->error_tips().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_tips(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51408002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 reply = 1;
    if (has_reply()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reply());
    }
    
    // optional string error_tips = 2;
    if (has_error_tips()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error_tips());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51408002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51408002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51408002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51408002::MergeFrom(const Proto51408002& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reply()) {
      set_reply(from.reply());
    }
    if (from.has_error_tips()) {
      set_error_tips(from.error_tips());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51408002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51408002::CopyFrom(const Proto51408002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51408002::IsInitialized() const {
  
  return true;
}

void Proto51408002::Swap(Proto51408002* other) {
  if (other != this) {
    std::swap(reply_, other->reply_);
    std::swap(error_tips_, other->error_tips_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51408002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51408002_descriptor_;
  metadata.reflection = Proto51408002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51408003::kReplyFieldNumber;
#endif  // !_MSC_VER

Proto51408003::Proto51408003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51408003::InitAsDefaultInstance() {
}

Proto51408003::Proto51408003(const Proto51408003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51408003::SharedCtor() {
  _cached_size_ = 0;
  reply_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51408003::~Proto51408003() {
  SharedDtor();
}

void Proto51408003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51408003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51408003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51408003_descriptor_;
}

const Proto51408003& Proto51408003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto51408003* Proto51408003::default_instance_ = NULL;

Proto51408003* Proto51408003::New() const {
  return new Proto51408003;
}

void Proto51408003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    reply_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51408003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 reply = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reply_)));
          set_has_reply();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51408003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 reply = 1;
  if (has_reply()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reply(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51408003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 reply = 1;
  if (has_reply()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reply(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51408003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 reply = 1;
    if (has_reply()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reply());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51408003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51408003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51408003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51408003::MergeFrom(const Proto51408003& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reply()) {
      set_reply(from.reply());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51408003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51408003::CopyFrom(const Proto51408003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51408003::IsInitialized() const {
  
  return true;
}

void Proto51408003::Swap(Proto51408003* other) {
  if (other != this) {
    std::swap(reply_, other->reply_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51408003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51408003_descriptor_;
  metadata.reflection = Proto51408003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400390::kCurContriFieldNumber;
#endif  // !_MSC_VER

Proto80400390::Proto80400390()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400390::InitAsDefaultInstance() {
}

Proto80400390::Proto80400390(const Proto80400390& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400390::SharedCtor() {
  _cached_size_ = 0;
  cur_contri_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400390::~Proto80400390() {
  SharedDtor();
}

void Proto80400390::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400390::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400390::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400390_descriptor_;
}

const Proto80400390& Proto80400390::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto80400390* Proto80400390::default_instance_ = NULL;

Proto80400390* Proto80400390::New() const {
  return new Proto80400390;
}

void Proto80400390::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_contri_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400390::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_contri = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_contri_)));
          set_has_cur_contri();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400390::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_contri = 1;
  if (has_cur_contri()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_contri(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400390::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_contri = 1;
  if (has_cur_contri()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_contri(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400390::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_contri = 1;
    if (has_cur_contri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_contri());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400390::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400390* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400390*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400390::MergeFrom(const Proto80400390& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_contri()) {
      set_cur_contri(from.cur_contri());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400390::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400390::CopyFrom(const Proto80400390& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400390::IsInitialized() const {
  
  return true;
}

void Proto80400390::Swap(Proto80400390* other) {
  if (other != this) {
    std::swap(cur_contri_, other->cur_contri_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400390::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400390_descriptor_;
  metadata.reflection = Proto80400390_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50404001::kNextLeagueFightTimeFieldNumber;
const int Proto50404001::kEnemyLeagueNameFieldNumber;
const int Proto50404001::kLeagueListInfoFieldNumber;
const int Proto50404001::kNextRegionLandIdFieldNumber;
const int Proto50404001::kSelfLeagueRankFieldNumber;
const int Proto50404001::kIsActivityTimeFieldNumber;
const int Proto50404001::kCurLeagueListFieldNumber;
#endif  // !_MSC_VER

Proto50404001::Proto50404001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50404001::InitAsDefaultInstance() {
}

Proto50404001::Proto50404001(const Proto50404001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50404001::SharedCtor() {
  _cached_size_ = 0;
  next_league_fight_time_ = GOOGLE_LONGLONG(0);
  enemy_league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  next_region_land_id_ = 0;
  self_league_rank_ = 0;
  is_activity_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50404001::~Proto50404001() {
  SharedDtor();
}

void Proto50404001::SharedDtor() {
  if (enemy_league_name_ != &::google::protobuf::internal::kEmptyString) {
    delete enemy_league_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto50404001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50404001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50404001_descriptor_;
}

const Proto50404001& Proto50404001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50404001* Proto50404001::default_instance_ = NULL;

Proto50404001* Proto50404001::New() const {
  return new Proto50404001;
}

void Proto50404001::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    next_league_fight_time_ = GOOGLE_LONGLONG(0);
    if (has_enemy_league_name()) {
      if (enemy_league_name_ != &::google::protobuf::internal::kEmptyString) {
        enemy_league_name_->clear();
      }
    }
    next_region_land_id_ = 0;
    self_league_rank_ = 0;
    is_activity_time_ = 0;
  }
  league_list_info_.Clear();
  cur_league_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50404001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 next_league_fight_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &next_league_fight_time_)));
          set_has_next_league_fight_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_enemy_league_name;
        break;
      }
      
      // optional string enemy_league_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_enemy_league_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_enemy_league_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->enemy_league_name().data(), this->enemy_league_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_league_list_info;
        break;
      }
      
      // repeated .ProtoLeagueItem league_list_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_list_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_league_list_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_league_list_info;
        if (input->ExpectTag(32)) goto parse_next_region_land_id;
        break;
      }
      
      // optional int32 next_region_land_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_next_region_land_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &next_region_land_id_)));
          set_has_next_region_land_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_self_league_rank;
        break;
      }
      
      // optional int32 self_league_rank = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_self_league_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &self_league_rank_)));
          set_has_self_league_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_is_activity_time;
        break;
      }
      
      // optional int32 is_activity_time = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_activity_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_activity_time_)));
          set_has_is_activity_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_cur_league_list;
        break;
      }
      
      // repeated .ProtoLeagueItem cur_league_list = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cur_league_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cur_league_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_cur_league_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50404001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 next_league_fight_time = 1;
  if (has_next_league_fight_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->next_league_fight_time(), output);
  }
  
  // optional string enemy_league_name = 2;
  if (has_enemy_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->enemy_league_name().data(), this->enemy_league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->enemy_league_name(), output);
  }
  
  // repeated .ProtoLeagueItem league_list_info = 3;
  for (int i = 0; i < this->league_list_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->league_list_info(i), output);
  }
  
  // optional int32 next_region_land_id = 4;
  if (has_next_region_land_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->next_region_land_id(), output);
  }
  
  // optional int32 self_league_rank = 5;
  if (has_self_league_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->self_league_rank(), output);
  }
  
  // optional int32 is_activity_time = 6;
  if (has_is_activity_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->is_activity_time(), output);
  }
  
  // repeated .ProtoLeagueItem cur_league_list = 7;
  for (int i = 0; i < this->cur_league_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->cur_league_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50404001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 next_league_fight_time = 1;
  if (has_next_league_fight_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->next_league_fight_time(), target);
  }
  
  // optional string enemy_league_name = 2;
  if (has_enemy_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->enemy_league_name().data(), this->enemy_league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->enemy_league_name(), target);
  }
  
  // repeated .ProtoLeagueItem league_list_info = 3;
  for (int i = 0; i < this->league_list_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->league_list_info(i), target);
  }
  
  // optional int32 next_region_land_id = 4;
  if (has_next_region_land_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->next_region_land_id(), target);
  }
  
  // optional int32 self_league_rank = 5;
  if (has_self_league_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->self_league_rank(), target);
  }
  
  // optional int32 is_activity_time = 6;
  if (has_is_activity_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->is_activity_time(), target);
  }
  
  // repeated .ProtoLeagueItem cur_league_list = 7;
  for (int i = 0; i < this->cur_league_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->cur_league_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50404001::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 next_league_fight_time = 1;
    if (has_next_league_fight_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->next_league_fight_time());
    }
    
    // optional string enemy_league_name = 2;
    if (has_enemy_league_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->enemy_league_name());
    }
    
    // optional int32 next_region_land_id = 4;
    if (has_next_region_land_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->next_region_land_id());
    }
    
    // optional int32 self_league_rank = 5;
    if (has_self_league_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->self_league_rank());
    }
    
    // optional int32 is_activity_time = 6;
    if (has_is_activity_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_activity_time());
    }
    
  }
  // repeated .ProtoLeagueItem league_list_info = 3;
  total_size += 1 * this->league_list_info_size();
  for (int i = 0; i < this->league_list_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->league_list_info(i));
  }
  
  // repeated .ProtoLeagueItem cur_league_list = 7;
  total_size += 1 * this->cur_league_list_size();
  for (int i = 0; i < this->cur_league_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cur_league_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50404001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50404001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50404001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50404001::MergeFrom(const Proto50404001& from) {
  GOOGLE_CHECK_NE(&from, this);
  league_list_info_.MergeFrom(from.league_list_info_);
  cur_league_list_.MergeFrom(from.cur_league_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_next_league_fight_time()) {
      set_next_league_fight_time(from.next_league_fight_time());
    }
    if (from.has_enemy_league_name()) {
      set_enemy_league_name(from.enemy_league_name());
    }
    if (from.has_next_region_land_id()) {
      set_next_region_land_id(from.next_region_land_id());
    }
    if (from.has_self_league_rank()) {
      set_self_league_rank(from.self_league_rank());
    }
    if (from.has_is_activity_time()) {
      set_is_activity_time(from.is_activity_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50404001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50404001::CopyFrom(const Proto50404001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50404001::IsInitialized() const {
  
  return true;
}

void Proto50404001::Swap(Proto50404001* other) {
  if (other != this) {
    std::swap(next_league_fight_time_, other->next_league_fight_time_);
    std::swap(enemy_league_name_, other->enemy_league_name_);
    league_list_info_.Swap(&other->league_list_info_);
    std::swap(next_region_land_id_, other->next_region_land_id_);
    std::swap(self_league_rank_, other->self_league_rank_);
    std::swap(is_activity_time_, other->is_activity_time_);
    cur_league_list_.Swap(&other->cur_league_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50404001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50404001_descriptor_;
  metadata.reflection = Proto50404001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50404002::kBetLeagueListInfoFieldNumber;
const int Proto50404002::kLeagueIsWinFieldNumber;
const int Proto50404002::kSupportLeagueIdFieldNumber;
const int Proto50404002::kLeftTimeFieldNumber;
const int Proto50404002::kStateFieldNumber;
const int Proto50404002::kWinRewardFieldNumber;
const int Proto50404002::kAttendRewardFieldNumber;
#endif  // !_MSC_VER

Proto50404002::Proto50404002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50404002::InitAsDefaultInstance() {
}

Proto50404002::Proto50404002(const Proto50404002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50404002::SharedCtor() {
  _cached_size_ = 0;
  league_iswin_ = 0;
  support_league_id_ = GOOGLE_LONGLONG(0);
  left_time_ = 0;
  state_ = 0;
  win_reward_ = 0;
  attend_reward_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50404002::~Proto50404002() {
  SharedDtor();
}

void Proto50404002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50404002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50404002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50404002_descriptor_;
}

const Proto50404002& Proto50404002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient020_2eproto();  return *default_instance_;
}

Proto50404002* Proto50404002::default_instance_ = NULL;

Proto50404002* Proto50404002::New() const {
  return new Proto50404002;
}

void Proto50404002::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    league_iswin_ = 0;
    support_league_id_ = GOOGLE_LONGLONG(0);
    left_time_ = 0;
    state_ = 0;
    win_reward_ = 0;
    attend_reward_ = 0;
  }
  bet_league_list_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50404002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoLeagueItem bet_league_list_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bet_league_list_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bet_league_list_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_bet_league_list_info;
        if (input->ExpectTag(16)) goto parse_league_isWin;
        break;
      }
      
      // optional int32 league_isWin = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_isWin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &league_iswin_)));
          set_has_league_iswin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_support_league_id;
        break;
      }
      
      // optional int64 support_league_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_support_league_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &support_league_id_)));
          set_has_support_league_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_state;
        break;
      }
      
      // optional int32 state = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_win_reward;
        break;
      }
      
      // optional int32 win_reward = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_win_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &win_reward_)));
          set_has_win_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_attend_reward;
        break;
      }
      
      // optional int32 attend_reward = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attend_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attend_reward_)));
          set_has_attend_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50404002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoLeagueItem bet_league_list_info = 1;
  for (int i = 0; i < this->bet_league_list_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bet_league_list_info(i), output);
  }
  
  // optional int32 league_isWin = 2;
  if (has_league_iswin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->league_iswin(), output);
  }
  
  // optional int64 support_league_id = 3;
  if (has_support_league_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->support_league_id(), output);
  }
  
  // optional int32 left_time = 4;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->left_time(), output);
  }
  
  // optional int32 state = 5;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->state(), output);
  }
  
  // optional int32 win_reward = 6;
  if (has_win_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->win_reward(), output);
  }
  
  // optional int32 attend_reward = 7;
  if (has_attend_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->attend_reward(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50404002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoLeagueItem bet_league_list_info = 1;
  for (int i = 0; i < this->bet_league_list_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->bet_league_list_info(i), target);
  }
  
  // optional int32 league_isWin = 2;
  if (has_league_iswin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->league_iswin(), target);
  }
  
  // optional int64 support_league_id = 3;
  if (has_support_league_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->support_league_id(), target);
  }
  
  // optional int32 left_time = 4;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->left_time(), target);
  }
  
  // optional int32 state = 5;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->state(), target);
  }
  
  // optional int32 win_reward = 6;
  if (has_win_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->win_reward(), target);
  }
  
  // optional int32 attend_reward = 7;
  if (has_attend_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->attend_reward(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50404002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 league_isWin = 2;
    if (has_league_iswin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->league_iswin());
    }
    
    // optional int64 support_league_id = 3;
    if (has_support_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->support_league_id());
    }
    
    // optional int32 left_time = 4;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 state = 5;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
    // optional int32 win_reward = 6;
    if (has_win_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->win_reward());
    }
    
    // optional int32 attend_reward = 7;
    if (has_attend_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attend_reward());
    }
    
  }
  // repeated .ProtoLeagueItem bet_league_list_info = 1;
  total_size += 1 * this->bet_league_list_info_size();
  for (int i = 0; i < this->bet_league_list_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bet_league_list_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50404002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50404002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50404002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50404002::MergeFrom(const Proto50404002& from) {
  GOOGLE_CHECK_NE(&from, this);
  bet_league_list_info_.MergeFrom(from.bet_league_list_info_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_league_iswin()) {
      set_league_iswin(from.league_iswin());
    }
    if (from.has_support_league_id()) {
      set_support_league_id(from.support_league_id());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_win_reward()) {
      set_win_reward(from.win_reward());
    }
    if (from.has_attend_reward()) {
      set_attend_reward(from.attend_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50404002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50404002::CopyFrom(const Proto50404002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50404002::IsInitialized() const {
  
  return true;
}

void Proto50404002::Swap(Proto50404002* other) {
  if (other != this) {
    bet_league_list_info_.Swap(&other->bet_league_list_info_);
    std::swap(league_iswin_, other->league_iswin_);
    std::swap(support_league_id_, other->support_league_id_);
    std::swap(left_time_, other->left_time_);
    std::swap(state_, other->state_);
    std::swap(win_reward_, other->win_reward_);
    std::swap(attend_reward_, other->attend_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50404002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50404002_descriptor_;
  metadata.reflection = Proto50404002_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
