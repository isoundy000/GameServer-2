// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient016.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto50405021_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50405021_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400927_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400927_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400939_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400939_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400939_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400939_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400811_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400811_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400812_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400812_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400812_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400812_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400813_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400813_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400814_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400814_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400815_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400815_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400815_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400815_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400817_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400817_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101008_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101008_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400818_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400818_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100654_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100654_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100655_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100655_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101009_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101009_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50405030_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50405030_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10405031_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10405031_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50405031_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50405031_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10405032_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10405032_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50405032_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50405032_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80405017_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80405017_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10405034_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10405034_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50405034_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50405034_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400109_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400109_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100705_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100705_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100705_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100705_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400351_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400351_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400385_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400385_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400821_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400821_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400823_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400823_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400823_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400823_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10401021_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10401021_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401022_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401022_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80401021_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80401021_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10401023_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10401023_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401023_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401023_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80401022_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80401022_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400110_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400110_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80401031_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80401031_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80401023_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80401023_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80401024_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80401024_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10401024_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10401024_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401024_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401024_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80401025_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80401025_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400352_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400352_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101010_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101010_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10401025_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10401025_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50401025_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50401025_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient016_2eproto() {
  protobuf_AddDesc_ProtoClient016_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient016.proto");
  GOOGLE_CHECK(file != NULL);
  Proto50405021_descriptor_ = file->message_type(0);
  static const int Proto50405021_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405021, wait_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405021, player_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405021, player_score_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405021, rank_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405021, right_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405021, score_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405021, next_num_),
  };
  Proto50405021_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50405021_descriptor_,
      Proto50405021::default_instance_,
      Proto50405021_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405021, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405021, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50405021));
  Proto80400927_descriptor_ = file->message_type(1);
  static const int Proto80400927_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400927, target_scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400927, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400927, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400927, posx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400927, posy_),
  };
  Proto80400927_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400927_descriptor_,
      Proto80400927::default_instance_,
      Proto80400927_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400927, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400927, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400927));
  Proto10400939_descriptor_ = file->message_type(2);
  static const int Proto10400939_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400939, script_wave_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400939, script_sort_),
  };
  Proto10400939_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400939_descriptor_,
      Proto10400939::default_instance_,
      Proto10400939_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400939, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400939, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400939));
  Proto50400939_descriptor_ = file->message_type(3);
  static const int Proto50400939_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400939, script_wave_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400939, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400939, is_get_),
  };
  Proto50400939_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400939_descriptor_,
      Proto50400939::default_instance_,
      Proto50400939_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400939, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400939, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400939));
  Proto10400811_descriptor_ = file->message_type(4);
  static const int Proto10400811_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400811, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400811, limit_force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400811, sceret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400811, auto_start_),
  };
  Proto10400811_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400811_descriptor_,
      Proto10400811::default_instance_,
      Proto10400811_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400811, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400811, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400811));
  Proto10400812_descriptor_ = file->message_type(5);
  static const int Proto10400812_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400812, scene_id_),
  };
  Proto10400812_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400812_descriptor_,
      Proto10400812::default_instance_,
      Proto10400812_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400812, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400812, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400812));
  Proto50400812_descriptor_ = file->message_type(6);
  static const int Proto50400812_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400812, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400812, team_list_),
  };
  Proto50400812_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400812_descriptor_,
      Proto50400812::default_instance_,
      Proto50400812_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400812, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400812, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400812));
  Proto10400813_descriptor_ = file->message_type(7);
  static const int Proto10400813_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400813, scene_id_),
  };
  Proto10400813_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400813_descriptor_,
      Proto10400813::default_instance_,
      Proto10400813_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400813, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400813, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400813));
  Proto10400814_descriptor_ = file->message_type(8);
  static const int Proto10400814_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400814, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400814, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400814, screte_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400814, auto_start_),
  };
  Proto10400814_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400814_descriptor_,
      Proto10400814::default_instance_,
      Proto10400814_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400814, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400814, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400814));
  Proto10400815_descriptor_ = file->message_type(9);
  static const int Proto10400815_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400815, scene_id_),
  };
  Proto10400815_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400815_descriptor_,
      Proto10400815::default_instance_,
      Proto10400815_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400815, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400815, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400815));
  Proto50400815_descriptor_ = file->message_type(10);
  static const int Proto50400815_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400815, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400815, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400815, teamer_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400815, limit_force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400815, auto_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400815, secret_),
  };
  Proto50400815_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400815_descriptor_,
      Proto50400815::default_instance_,
      Proto50400815_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400815, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400815, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400815));
  Proto10400817_descriptor_ = file->message_type(11);
  static const int Proto10400817_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400817, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400817, operate_),
  };
  Proto10400817_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400817_descriptor_,
      Proto10400817::default_instance_,
      Proto10400817_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400817, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400817, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400817));
  Proto50101008_descriptor_ = file->message_type(12);
  static const int Proto50101008_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101008, role_list_),
  };
  Proto50101008_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101008_descriptor_,
      Proto50101008::default_instance_,
      Proto50101008_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101008, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101008, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101008));
  Proto10400818_descriptor_ = file->message_type(13);
  static const int Proto10400818_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400818, role_),
  };
  Proto10400818_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400818_descriptor_,
      Proto10400818::default_instance_,
      Proto10400818_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400818, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400818, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400818));
  Proto50100654_descriptor_ = file->message_type(14);
  static const int Proto50100654_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100654, flag_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100654, flag_exp_),
  };
  Proto50100654_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100654_descriptor_,
      Proto50100654::default_instance_,
      Proto50100654_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100654, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100654, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100654));
  Proto50100655_descriptor_ = file->message_type(15);
  static const int Proto50100655_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100655, flag_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100655, flag_exp_),
  };
  Proto50100655_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100655_descriptor_,
      Proto50100655::default_instance_,
      Proto50100655_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100655, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100655, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100655));
  Proto50101009_descriptor_ = file->message_type(16);
  static const int Proto50101009_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101009, player_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101009, player_force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101009, rank_list_),
  };
  Proto50101009_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101009_descriptor_,
      Proto50101009::default_instance_,
      Proto50101009_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101009, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101009, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101009));
  Proto50405030_descriptor_ = file->message_type(17);
  static const int Proto50405030_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405030, cur_stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405030, total_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405030, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405030, first_npc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405030, second_npc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405030, third_npc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405030, player_npc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405030, vip_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405030, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405030, is_right_),
  };
  Proto50405030_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50405030_descriptor_,
      Proto50405030::default_instance_,
      Proto50405030_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405030, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405030, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50405030));
  Proto10405031_descriptor_ = file->message_type(18);
  static const int Proto10405031_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405031, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405031, first_player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405031, second_player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405031, choose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405031, type_),
  };
  Proto10405031_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10405031_descriptor_,
      Proto10405031::default_instance_,
      Proto10405031_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405031, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405031, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10405031));
  Proto50405031_descriptor_ = file->message_type(19);
  static const int Proto50405031_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405031, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405031, first_player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405031, second_player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405031, choose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405031, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405031, first_player_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405031, second_player_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405031, first_player_coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405031, second_player_coord_),
  };
  Proto50405031_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50405031_descriptor_,
      Proto50405031::default_instance_,
      Proto50405031_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405031, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405031, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50405031));
  Proto10405032_descriptor_ = file->message_type(20);
  static const int Proto10405032_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405032, npc_num_),
  };
  Proto10405032_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10405032_descriptor_,
      Proto10405032::default_instance_,
      Proto10405032_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405032, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405032, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10405032));
  Proto50405032_descriptor_ = file->message_type(21);
  static const int Proto50405032_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405032, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405032, choose_),
  };
  Proto50405032_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50405032_descriptor_,
      Proto50405032::default_instance_,
      Proto50405032_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405032, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405032, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50405032));
  Proto80405017_descriptor_ = file->message_type(22);
  static const int Proto80405017_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405017, first_npc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405017, second_npc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405017, third_npc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405017, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405017, award_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405017, is_right_),
  };
  Proto80405017_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80405017_descriptor_,
      Proto80405017::default_instance_,
      Proto80405017_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405017, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80405017, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80405017));
  Proto10405034_descriptor_ = file->message_type(23);
  static const int Proto10405034_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405034, status_),
  };
  Proto10405034_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10405034_descriptor_,
      Proto10405034::default_instance_,
      Proto10405034_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405034, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10405034, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10405034));
  Proto50405034_descriptor_ = file->message_type(24);
  static const int Proto50405034_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405034, status_),
  };
  Proto50405034_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50405034_descriptor_,
      Proto50405034::default_instance_,
      Proto50405034_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405034, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50405034, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50405034));
  Proto80400109_descriptor_ = file->message_type(25);
  static const int Proto80400109_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400109, skill_),
  };
  Proto80400109_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400109_descriptor_,
      Proto80400109::default_instance_,
      Proto80400109_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400109, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400109, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400109));
  Proto10100705_descriptor_ = file->message_type(26);
  static const int Proto10100705_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100705, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100705, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100705, rank_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100705, rank_num_),
  };
  Proto10100705_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100705_descriptor_,
      Proto10100705::default_instance_,
      Proto10100705_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100705, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100705, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100705));
  Proto50100705_descriptor_ = file->message_type(27);
  static const int Proto50100705_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100705, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100705, worship_num_),
  };
  Proto50100705_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100705_descriptor_,
      Proto50100705::default_instance_,
      Proto50100705_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100705, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100705, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100705));
  Proto50400351_descriptor_ = file->message_type(28);
  static const int Proto50400351_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400351, lwar_detail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400351, total_league_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400351, total_my_league_),
  };
  Proto50400351_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400351_descriptor_,
      Proto50400351::default_instance_,
      Proto50400351_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400351, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400351, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400351));
  Proto80400385_descriptor_ = file->message_type(29);
  static const int Proto80400385_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400385, space_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400385, total_space_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400385, boss_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400385, boss_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400385, total_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400385, boss_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400385, my_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400385, league_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400385, league_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400385, left_time_),
  };
  Proto80400385_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400385_descriptor_,
      Proto80400385::default_instance_,
      Proto80400385_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400385, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400385, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400385));
  Proto50400821_descriptor_ = file->message_type(30);
  static const int Proto50400821_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400821, part_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400821, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400821, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400821, attend_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400821, get_expolit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400821, draw_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400821, win_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400821, draw_win_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400821, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400821, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400821, left_day_),
  };
  Proto50400821_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400821_descriptor_,
      Proto50400821::default_instance_,
      Proto50400821_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400821, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400821, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400821));
  Proto10400823_descriptor_ = file->message_type(31);
  static const int Proto10400823_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400823, page_),
  };
  Proto10400823_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400823_descriptor_,
      Proto10400823::default_instance_,
      Proto10400823_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400823, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400823, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400823));
  Proto50400823_descriptor_ = file->message_type(32);
  static const int Proto50400823_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400823, page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400823, total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400823, rank_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400823, self_),
  };
  Proto50400823_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400823_descriptor_,
      Proto50400823::default_instance_,
      Proto50400823_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400823, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400823, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400823));
  Proto10401021_descriptor_ = file->message_type(33);
  static const int Proto10401021_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401021, boss_scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401021, pos_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401021, pos_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401021, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401021, use_fly_),
  };
  Proto10401021_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10401021_descriptor_,
      Proto10401021::default_instance_,
      Proto10401021_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401021, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401021, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10401021));
  Proto50401022_descriptor_ = file->message_type(34);
  static const int Proto50401022_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401022, wb_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401022, refresh_tick_),
  };
  Proto50401022_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401022_descriptor_,
      Proto50401022::default_instance_,
      Proto50401022_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401022, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401022, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401022));
  Proto80401021_descriptor_ = file->message_type(35);
  static const int Proto80401021_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401021, rank_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401021, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401021, boss_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401021, left_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401021, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401021, refresh_tick_),
  };
  Proto80401021_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80401021_descriptor_,
      Proto80401021::default_instance_,
      Proto80401021_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401021, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401021, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80401021));
  Proto10401023_descriptor_ = file->message_type(36);
  static const int Proto10401023_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401023, scene_id_),
  };
  Proto10401023_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10401023_descriptor_,
      Proto10401023::default_instance_,
      Proto10401023_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401023, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401023, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10401023));
  Proto50401023_descriptor_ = file->message_type(37);
  static const int Proto50401023_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401023, get_money_),
  };
  Proto50401023_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401023_descriptor_,
      Proto50401023::default_instance_,
      Proto50401023_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401023, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401023, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401023));
  Proto80401022_descriptor_ = file->message_type(38);
  static const int Proto80401022_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401022, role_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401022, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401022, total_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401022, total_player_),
  };
  Proto80401022_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80401022_descriptor_,
      Proto80401022::default_instance_,
      Proto80401022_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401022, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401022, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80401022));
  Proto81400110_descriptor_ = file->message_type(39);
  static const int Proto81400110_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400110, items_),
  };
  Proto81400110_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400110_descriptor_,
      Proto81400110::default_instance_,
      Proto81400110_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400110, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400110, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400110));
  Proto80401031_descriptor_ = file->message_type(40);
  static const int Proto80401031_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401031, cur_wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401031, total_wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401031, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401031, next_attack_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401031, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401031, is_boss_),
  };
  Proto80401031_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80401031_descriptor_,
      Proto80401031::default_instance_,
      Proto80401031_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401031, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401031, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80401031));
  Proto80401023_descriptor_ = file->message_type(41);
  static const int Proto80401023_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401023, scene_id_),
  };
  Proto80401023_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80401023_descriptor_,
      Proto80401023::default_instance_,
      Proto80401023_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401023, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401023, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80401023));
  Proto80401024_descriptor_ = file->message_type(42);
  static const int Proto80401024_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401024, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401024, total_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401024, cur_blood_),
  };
  Proto80401024_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80401024_descriptor_,
      Proto80401024::default_instance_,
      Proto80401024_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401024, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401024, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80401024));
  Proto10401024_descriptor_ = file->message_type(43);
  static const int Proto10401024_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401024, scene_id_),
  };
  Proto10401024_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10401024_descriptor_,
      Proto10401024::default_instance_,
      Proto10401024_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401024, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401024, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10401024));
  Proto50401024_descriptor_ = file->message_type(44);
  static const int Proto50401024_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401024, my_num_),
  };
  Proto50401024_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401024_descriptor_,
      Proto50401024::default_instance_,
      Proto50401024_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401024, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401024, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401024));
  Proto80401025_descriptor_ = file->message_type(45);
  static const int Proto80401025_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401025, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401025, max_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401025, max_num_role_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401025, max_num_name_),
  };
  Proto80401025_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80401025_descriptor_,
      Proto80401025::default_instance_,
      Proto80401025_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401025, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80401025, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80401025));
  Proto10400352_descriptor_ = file->message_type(46);
  static const int Proto10400352_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400352, space_id_),
  };
  Proto10400352_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400352_descriptor_,
      Proto10400352::default_instance_,
      Proto10400352_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400352, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400352, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400352));
  Proto10101010_descriptor_ = file->message_type(47);
  static const int Proto10101010_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101010, status_),
  };
  Proto10101010_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101010_descriptor_,
      Proto10101010::default_instance_,
      Proto10101010_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101010, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101010, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101010));
  Proto10401025_descriptor_ = file->message_type(48);
  static const int Proto10401025_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401025, scene_id_),
  };
  Proto10401025_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10401025_descriptor_,
      Proto10401025::default_instance_,
      Proto10401025_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401025, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10401025, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10401025));
  Proto50401025_descriptor_ = file->message_type(49);
  static const int Proto50401025_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401025, self_rank_),
  };
  Proto50401025_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50401025_descriptor_,
      Proto50401025::default_instance_,
      Proto50401025_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401025, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50401025, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50401025));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient016_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50405021_descriptor_, &Proto50405021::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400927_descriptor_, &Proto80400927::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400939_descriptor_, &Proto10400939::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400939_descriptor_, &Proto50400939::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400811_descriptor_, &Proto10400811::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400812_descriptor_, &Proto10400812::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400812_descriptor_, &Proto50400812::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400813_descriptor_, &Proto10400813::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400814_descriptor_, &Proto10400814::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400815_descriptor_, &Proto10400815::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400815_descriptor_, &Proto50400815::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400817_descriptor_, &Proto10400817::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101008_descriptor_, &Proto50101008::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400818_descriptor_, &Proto10400818::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100654_descriptor_, &Proto50100654::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100655_descriptor_, &Proto50100655::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101009_descriptor_, &Proto50101009::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50405030_descriptor_, &Proto50405030::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10405031_descriptor_, &Proto10405031::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50405031_descriptor_, &Proto50405031::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10405032_descriptor_, &Proto10405032::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50405032_descriptor_, &Proto50405032::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80405017_descriptor_, &Proto80405017::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10405034_descriptor_, &Proto10405034::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50405034_descriptor_, &Proto50405034::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400109_descriptor_, &Proto80400109::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100705_descriptor_, &Proto10100705::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100705_descriptor_, &Proto50100705::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400351_descriptor_, &Proto50400351::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400385_descriptor_, &Proto80400385::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400821_descriptor_, &Proto50400821::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400823_descriptor_, &Proto10400823::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400823_descriptor_, &Proto50400823::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10401021_descriptor_, &Proto10401021::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401022_descriptor_, &Proto50401022::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80401021_descriptor_, &Proto80401021::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10401023_descriptor_, &Proto10401023::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401023_descriptor_, &Proto50401023::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80401022_descriptor_, &Proto80401022::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400110_descriptor_, &Proto81400110::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80401031_descriptor_, &Proto80401031::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80401023_descriptor_, &Proto80401023::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80401024_descriptor_, &Proto80401024::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10401024_descriptor_, &Proto10401024::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401024_descriptor_, &Proto50401024::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80401025_descriptor_, &Proto80401025::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400352_descriptor_, &Proto10400352::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101010_descriptor_, &Proto10101010::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10401025_descriptor_, &Proto10401025::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50401025_descriptor_, &Proto50401025::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient016_2eproto() {
  delete Proto50405021::default_instance_;
  delete Proto50405021_reflection_;
  delete Proto80400927::default_instance_;
  delete Proto80400927_reflection_;
  delete Proto10400939::default_instance_;
  delete Proto10400939_reflection_;
  delete Proto50400939::default_instance_;
  delete Proto50400939_reflection_;
  delete Proto10400811::default_instance_;
  delete Proto10400811_reflection_;
  delete Proto10400812::default_instance_;
  delete Proto10400812_reflection_;
  delete Proto50400812::default_instance_;
  delete Proto50400812_reflection_;
  delete Proto10400813::default_instance_;
  delete Proto10400813_reflection_;
  delete Proto10400814::default_instance_;
  delete Proto10400814_reflection_;
  delete Proto10400815::default_instance_;
  delete Proto10400815_reflection_;
  delete Proto50400815::default_instance_;
  delete Proto50400815_reflection_;
  delete Proto10400817::default_instance_;
  delete Proto10400817_reflection_;
  delete Proto50101008::default_instance_;
  delete Proto50101008_reflection_;
  delete Proto10400818::default_instance_;
  delete Proto10400818_reflection_;
  delete Proto50100654::default_instance_;
  delete Proto50100654_reflection_;
  delete Proto50100655::default_instance_;
  delete Proto50100655_reflection_;
  delete Proto50101009::default_instance_;
  delete Proto50101009_reflection_;
  delete Proto50405030::default_instance_;
  delete Proto50405030_reflection_;
  delete Proto10405031::default_instance_;
  delete Proto10405031_reflection_;
  delete Proto50405031::default_instance_;
  delete Proto50405031_reflection_;
  delete Proto10405032::default_instance_;
  delete Proto10405032_reflection_;
  delete Proto50405032::default_instance_;
  delete Proto50405032_reflection_;
  delete Proto80405017::default_instance_;
  delete Proto80405017_reflection_;
  delete Proto10405034::default_instance_;
  delete Proto10405034_reflection_;
  delete Proto50405034::default_instance_;
  delete Proto50405034_reflection_;
  delete Proto80400109::default_instance_;
  delete Proto80400109_reflection_;
  delete Proto10100705::default_instance_;
  delete Proto10100705_reflection_;
  delete Proto50100705::default_instance_;
  delete Proto50100705_reflection_;
  delete Proto50400351::default_instance_;
  delete Proto50400351_reflection_;
  delete Proto80400385::default_instance_;
  delete Proto80400385_reflection_;
  delete Proto50400821::default_instance_;
  delete Proto50400821_reflection_;
  delete Proto10400823::default_instance_;
  delete Proto10400823_reflection_;
  delete Proto50400823::default_instance_;
  delete Proto50400823_reflection_;
  delete Proto10401021::default_instance_;
  delete Proto10401021_reflection_;
  delete Proto50401022::default_instance_;
  delete Proto50401022_reflection_;
  delete Proto80401021::default_instance_;
  delete Proto80401021_reflection_;
  delete Proto10401023::default_instance_;
  delete Proto10401023_reflection_;
  delete Proto50401023::default_instance_;
  delete Proto50401023_reflection_;
  delete Proto80401022::default_instance_;
  delete Proto80401022_reflection_;
  delete Proto81400110::default_instance_;
  delete Proto81400110_reflection_;
  delete Proto80401031::default_instance_;
  delete Proto80401031_reflection_;
  delete Proto80401023::default_instance_;
  delete Proto80401023_reflection_;
  delete Proto80401024::default_instance_;
  delete Proto80401024_reflection_;
  delete Proto10401024::default_instance_;
  delete Proto10401024_reflection_;
  delete Proto50401024::default_instance_;
  delete Proto50401024_reflection_;
  delete Proto80401025::default_instance_;
  delete Proto80401025_reflection_;
  delete Proto10400352::default_instance_;
  delete Proto10400352_reflection_;
  delete Proto10101010::default_instance_;
  delete Proto10101010_reflection_;
  delete Proto10401025::default_instance_;
  delete Proto10401025_reflection_;
  delete Proto50401025::default_instance_;
  delete Proto50401025_reflection_;
}

void protobuf_AddDesc_ProtoClient016_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient016.proto\032\021ProtoPublic.prot"
    "o\"\234\001\n\rProto50405021\022\021\n\twait_time\030\001 \001(\005\022\023"
    "\n\013player_list\030\002 \003(\t\022\031\n\021player_score_list"
    "\030\003 \003(\005\022\020\n\010rank_num\030\004 \001(\005\022\021\n\tright_num\030\005 "
    "\001(\005\022\021\n\tscore_num\030\006 \001(\005\022\020\n\010next_num\030\007 \001(\005"
    "\"d\n\rProto80400927\022\027\n\017target_scene_id\030\001 \001"
    "(\005\022\020\n\010scene_id\030\002 \001(\005\022\014\n\004type\030\003 \001(\005\022\014\n\004po"
    "sX\030\004 \001(\005\022\014\n\004posY\030\005 \001(\005\"<\n\rProto10400939\022"
    "\026\n\016script_wave_id\030\001 \001(\005\022\023\n\013script_sort\030\002"
    " \001(\005\"L\n\rProto50400939\022\026\n\016script_wave_id\030"
    "\001 \001(\005\022\023\n\013script_sort\030\002 \001(\005\022\016\n\006is_get\030\003 \001"
    "(\005\"Z\n\rProto10400811\022\020\n\010scene_id\030\001 \001(\005\022\023\n"
    "\013limit_force\030\002 \001(\005\022\016\n\006sceret\030\003 \001(\t\022\022\n\nau"
    "to_start\030\004 \001(\005\"!\n\rProto10400812\022\020\n\010scene"
    "_id\030\001 \001(\005\"F\n\rProto50400812\022\020\n\010scene_id\030\001"
    " \001(\005\022#\n\tteam_list\030\002 \003(\0132\020.ProtoTravelTea"
    "m\"!\n\rProto10400813\022\020\n\010scene_id\030\001 \001(\005\"T\n\r"
    "Proto10400814\022\020\n\010scene_id\030\001 \001(\005\022\r\n\005index"
    "\030\002 \001(\005\022\016\n\006screte\030\003 \001(\t\022\022\n\nauto_start\030\004 \001"
    "(\005\"!\n\rProto10400815\022\020\n\010scene_id\030\001 \001(\005\"\214\001"
    "\n\rProto50400815\022\020\n\010scene_id\030\001 \001(\005\022\r\n\005ind"
    "ex\030\002 \001(\005\022!\n\013teamer_list\030\003 \003(\0132\014.ProtoTea"
    "mer\022\023\n\013limit_force\030\004 \001(\005\022\022\n\nauto_start\030\005"
    " \001(\005\022\016\n\006secret\030\006 \001(\005\"2\n\rProto10400817\022\020\n"
    "\010scene_id\030\001 \001(\005\022\017\n\007operate\030\002 \001(\005\"2\n\rProt"
    "o50101008\022!\n\trole_list\030\001 \003(\0132\016.ProtoArea"
    "Role\"\035\n\rProto10400818\022\014\n\004role\030\001 \001(\003\"3\n\rP"
    "roto50100654\022\020\n\010flag_lvl\030\001 \001(\005\022\020\n\010flag_e"
    "xp\030\002 \001(\005\"3\n\rProto50100655\022\020\n\010flag_lvl\030\001 "
    "\001(\005\022\020\n\010flag_exp\030\002 \001(\005\"]\n\rProto50101009\022\023"
    "\n\013player_rank\030\001 \001(\005\022\024\n\014player_force\030\002 \001("
    "\005\022!\n\trank_list\030\003 \003(\0132\016.ProtoAreaRole\"\313\001\n"
    "\rProto50405030\022\021\n\tcur_stage\030\001 \001(\005\022\021\n\ttot"
    "al_exp\030\002 \001(\005\022\021\n\tleft_time\030\003 \001(\005\022\021\n\tfirst"
    "_npc\030\004 \001(\005\022\022\n\nsecond_npc\030\005 \001(\005\022\021\n\tthird_"
    "npc\030\006 \001(\005\022\022\n\nplayer_npc\030\007 \001(\005\022\021\n\tvip_lev"
    "el\030\010 \001(\005\022\016\n\006status\030\t \001(\005\022\020\n\010is_right\030\n \001"
    "(\005\"p\n\rProto10405031\022\016\n\006status\030\001 \001(\005\022\027\n\017f"
    "irst_player_id\030\002 \001(\003\022\030\n\020second_player_id"
    "\030\003 \001(\003\022\016\n\006choose\030\004 \001(\005\022\014\n\004type\030\005 \001(\005\"\372\001\n"
    "\rProto50405031\022\016\n\006status\030\001 \001(\005\022\027\n\017first_"
    "player_id\030\002 \001(\003\022\030\n\020second_player_id\030\003 \001("
    "\003\022\016\n\006choose\030\004 \001(\005\022\014\n\004type\030\005 \001(\005\022\031\n\021first"
    "_player_name\030\006 \001(\t\022\032\n\022second_player_name"
    "\030\007 \001(\t\022\'\n\022first_player_coord\030\010 \001(\0132\013.Pro"
    "toCoord\022(\n\023second_player_coord\030\t \001(\0132\013.P"
    "rotoCoord\" \n\rProto10405032\022\017\n\007npc_num\030\001 "
    "\001(\005\"/\n\rProto50405032\022\016\n\006status\030\001 \001(\005\022\016\n\006"
    "choose\030\002 \001(\005\"}\n\rProto80405017\022\021\n\tfirst_n"
    "pc\030\001 \001(\005\022\022\n\nsecond_npc\030\002 \001(\005\022\021\n\tthird_np"
    "c\030\003 \001(\005\022\016\n\006status\030\004 \001(\005\022\020\n\010award_id\030\005 \001("
    "\005\022\020\n\010is_right\030\006 \001(\005\"\037\n\rProto10405034\022\016\n\006"
    "status\030\001 \001(\005\"\037\n\rProto50405034\022\016\n\006status\030"
    "\001 \001(\005\"+\n\rProto80400109\022\032\n\005skill\030\001 \001(\0132\013."
    "ProtoSkill\"X\n\rProto10100705\022\017\n\007role_id\030\001"
    " \001(\003\022\021\n\tplayer_id\030\002 \001(\003\022\021\n\trank_type\030\003 \001"
    "(\005\022\020\n\010rank_num\030\004 \001(\005\"4\n\rProto50100705\022\016\n"
    "\006status\030\001 \001(\005\022\023\n\013worship_num\030\002 \001(\003\"\224\001\n\rP"
    "roto50400351\022#\n\013lwar_detail\030\001 \003(\0132\016.Prot"
    "oLWarInfo\022/\n\021total_league_rank\030\002 \003(\0132\024.P"
    "rotoLeagueRankInfo\022-\n\017total_my_league\030\003 "
    "\001(\0132\024.ProtoLeagueRankInfo\"\323\001\n\rProto80400"
    "385\022\020\n\010space_id\030\001 \001(\005\022\023\n\013total_space\030\002 \003"
    "(\005\022\017\n\007boss_id\030\003 \001(\003\022\021\n\tboss_name\030\004 \001(\t\022\023"
    "\n\013total_blood\030\005 \001(\001\022\022\n\nboss_blood\030\006 \001(\001\022"
    "\020\n\010my_score\030\007 \001(\005\022\024\n\014league_score\030\010 \001(\005\022"
    "\023\n\013league_rank\030\t \001(\005\022\021\n\tleft_time\030\n \001(\005\""
    "\322\001\n\rProto50400821\022\014\n\004part\030\001 \001(\005\022\r\n\005stage"
    "\030\002 \001(\005\022\r\n\005score\030\003 \001(\005\022\024\n\014attend_times\030\004 "
    "\001(\005\022\023\n\013get_expolit\030\005 \001(\005\022\021\n\tdraw_flag\030\006 "
    "\001(\005\022\021\n\twin_times\030\007 \001(\005\022\020\n\010draw_win\030\010 \003(\005"
    "\022\r\n\005state\030\t \001(\005\022\021\n\tleft_time\030\n \001(\005\022\020\n\010le"
    "ft_day\030\013 \001(\005\"\035\n\rProto10400823\022\014\n\004page\030\001 "
    "\001(\005\"i\n\rProto50400823\022\014\n\004page\030\001 \001(\005\022\r\n\005to"
    "tal\030\002 \001(\005\022\037\n\trank_list\030\003 \003(\0132\014.ProtoLMRo"
    "le\022\032\n\004self\030\004 \001(\0132\014.ProtoLMRole\"g\n\rProto1"
    "0401021\022\025\n\rboss_scene_id\030\001 \001(\005\022\r\n\005pos_x\030"
    "\002 \001(\005\022\r\n\005pos_y\030\003 \001(\005\022\020\n\010scene_id\030\004 \001(\005\022\017"
    "\n\007use_fly\030\005 \001(\005\"K\n\rProto50401022\022$\n\007wb_i"
    "nfo\030\001 \003(\0132\023.ProtoWorldBossInfo\022\024\n\014refres"
    "h_tick\030\002 \001(\005\"\224\001\n\rProto80401021\022&\n\trank_l"
    "ist\030\001 \003(\0132\023.ProtoWorldBossRank\022\020\n\010scene_"
    "id\030\002 \001(\005\022\017\n\007boss_id\030\003 \001(\003\022\022\n\nleft_blood\030"
    "\004 \001(\001\022\016\n\006status\030\005 \001(\005\022\024\n\014refresh_tick\030\006 "
    "\001(\005\"!\n\rProto10401023\022\020\n\010scene_id\030\001 \001(\005\"\""
    "\n\rProto50401023\022\021\n\tget_money\030\001 \001(\005\"_\n\rPr"
    "oto80401022\022\021\n\trole_name\030\001 \001(\t\022\020\n\010scene_"
    "id\030\002 \001(\005\022\023\n\013total_money\030\003 \001(\005\022\024\n\014total_p"
    "layer\030\004 \001(\005\"*\n\rProto81400110\022\031\n\005items\030\001 "
    "\003(\0132\n.ProtoItem\"\217\001\n\rProto80401031\022\020\n\010cur"
    "_wave\030\001 \001(\005\022\022\n\ntotal_wave\030\002 \001(\005\022\021\n\tleft_"
    "time\030\003 \001(\005\022\030\n\020next_attack_time\030\004 \001(\005\022\032\n\004"
    "item\030\005 \003(\0132\014.ProtoItemId\022\017\n\007is_boss\030\006 \001("
    "\005\"!\n\rProto80401023\022\020\n\010scene_id\030\001 \001(\005\"I\n\r"
    "Proto80401024\022\020\n\010scene_id\030\001 \001(\005\022\023\n\013total"
    "_blood\030\002 \001(\005\022\021\n\tcur_blood\030\003 \001(\005\"!\n\rProto"
    "10401024\022\020\n\010scene_id\030\001 \001(\005\"\037\n\rProto50401"
    "024\022\016\n\006my_num\030\001 \001(\005\"^\n\rProto80401025\022\020\n\010"
    "scene_id\030\001 \001(\005\022\017\n\007max_num\030\002 \001(\005\022\024\n\014max_n"
    "um_role\030\003 \001(\003\022\024\n\014max_num_name\030\004 \001(\t\"!\n\rP"
    "roto10400352\022\020\n\010space_id\030\001 \001(\005\"\037\n\rProto1"
    "0101010\022\016\n\006status\030\001 \001(\005\"!\n\rProto10401025"
    "\022\020\n\010scene_id\030\001 \001(\005\"7\n\rProto50401025\022&\n\ts"
    "elf_rank\030\001 \001(\0132\023.ProtoWorldBossRank", 4155);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient016.proto", &protobuf_RegisterTypes);
  Proto50405021::default_instance_ = new Proto50405021();
  Proto80400927::default_instance_ = new Proto80400927();
  Proto10400939::default_instance_ = new Proto10400939();
  Proto50400939::default_instance_ = new Proto50400939();
  Proto10400811::default_instance_ = new Proto10400811();
  Proto10400812::default_instance_ = new Proto10400812();
  Proto50400812::default_instance_ = new Proto50400812();
  Proto10400813::default_instance_ = new Proto10400813();
  Proto10400814::default_instance_ = new Proto10400814();
  Proto10400815::default_instance_ = new Proto10400815();
  Proto50400815::default_instance_ = new Proto50400815();
  Proto10400817::default_instance_ = new Proto10400817();
  Proto50101008::default_instance_ = new Proto50101008();
  Proto10400818::default_instance_ = new Proto10400818();
  Proto50100654::default_instance_ = new Proto50100654();
  Proto50100655::default_instance_ = new Proto50100655();
  Proto50101009::default_instance_ = new Proto50101009();
  Proto50405030::default_instance_ = new Proto50405030();
  Proto10405031::default_instance_ = new Proto10405031();
  Proto50405031::default_instance_ = new Proto50405031();
  Proto10405032::default_instance_ = new Proto10405032();
  Proto50405032::default_instance_ = new Proto50405032();
  Proto80405017::default_instance_ = new Proto80405017();
  Proto10405034::default_instance_ = new Proto10405034();
  Proto50405034::default_instance_ = new Proto50405034();
  Proto80400109::default_instance_ = new Proto80400109();
  Proto10100705::default_instance_ = new Proto10100705();
  Proto50100705::default_instance_ = new Proto50100705();
  Proto50400351::default_instance_ = new Proto50400351();
  Proto80400385::default_instance_ = new Proto80400385();
  Proto50400821::default_instance_ = new Proto50400821();
  Proto10400823::default_instance_ = new Proto10400823();
  Proto50400823::default_instance_ = new Proto50400823();
  Proto10401021::default_instance_ = new Proto10401021();
  Proto50401022::default_instance_ = new Proto50401022();
  Proto80401021::default_instance_ = new Proto80401021();
  Proto10401023::default_instance_ = new Proto10401023();
  Proto50401023::default_instance_ = new Proto50401023();
  Proto80401022::default_instance_ = new Proto80401022();
  Proto81400110::default_instance_ = new Proto81400110();
  Proto80401031::default_instance_ = new Proto80401031();
  Proto80401023::default_instance_ = new Proto80401023();
  Proto80401024::default_instance_ = new Proto80401024();
  Proto10401024::default_instance_ = new Proto10401024();
  Proto50401024::default_instance_ = new Proto50401024();
  Proto80401025::default_instance_ = new Proto80401025();
  Proto10400352::default_instance_ = new Proto10400352();
  Proto10101010::default_instance_ = new Proto10101010();
  Proto10401025::default_instance_ = new Proto10401025();
  Proto50401025::default_instance_ = new Proto50401025();
  Proto50405021::default_instance_->InitAsDefaultInstance();
  Proto80400927::default_instance_->InitAsDefaultInstance();
  Proto10400939::default_instance_->InitAsDefaultInstance();
  Proto50400939::default_instance_->InitAsDefaultInstance();
  Proto10400811::default_instance_->InitAsDefaultInstance();
  Proto10400812::default_instance_->InitAsDefaultInstance();
  Proto50400812::default_instance_->InitAsDefaultInstance();
  Proto10400813::default_instance_->InitAsDefaultInstance();
  Proto10400814::default_instance_->InitAsDefaultInstance();
  Proto10400815::default_instance_->InitAsDefaultInstance();
  Proto50400815::default_instance_->InitAsDefaultInstance();
  Proto10400817::default_instance_->InitAsDefaultInstance();
  Proto50101008::default_instance_->InitAsDefaultInstance();
  Proto10400818::default_instance_->InitAsDefaultInstance();
  Proto50100654::default_instance_->InitAsDefaultInstance();
  Proto50100655::default_instance_->InitAsDefaultInstance();
  Proto50101009::default_instance_->InitAsDefaultInstance();
  Proto50405030::default_instance_->InitAsDefaultInstance();
  Proto10405031::default_instance_->InitAsDefaultInstance();
  Proto50405031::default_instance_->InitAsDefaultInstance();
  Proto10405032::default_instance_->InitAsDefaultInstance();
  Proto50405032::default_instance_->InitAsDefaultInstance();
  Proto80405017::default_instance_->InitAsDefaultInstance();
  Proto10405034::default_instance_->InitAsDefaultInstance();
  Proto50405034::default_instance_->InitAsDefaultInstance();
  Proto80400109::default_instance_->InitAsDefaultInstance();
  Proto10100705::default_instance_->InitAsDefaultInstance();
  Proto50100705::default_instance_->InitAsDefaultInstance();
  Proto50400351::default_instance_->InitAsDefaultInstance();
  Proto80400385::default_instance_->InitAsDefaultInstance();
  Proto50400821::default_instance_->InitAsDefaultInstance();
  Proto10400823::default_instance_->InitAsDefaultInstance();
  Proto50400823::default_instance_->InitAsDefaultInstance();
  Proto10401021::default_instance_->InitAsDefaultInstance();
  Proto50401022::default_instance_->InitAsDefaultInstance();
  Proto80401021::default_instance_->InitAsDefaultInstance();
  Proto10401023::default_instance_->InitAsDefaultInstance();
  Proto50401023::default_instance_->InitAsDefaultInstance();
  Proto80401022::default_instance_->InitAsDefaultInstance();
  Proto81400110::default_instance_->InitAsDefaultInstance();
  Proto80401031::default_instance_->InitAsDefaultInstance();
  Proto80401023::default_instance_->InitAsDefaultInstance();
  Proto80401024::default_instance_->InitAsDefaultInstance();
  Proto10401024::default_instance_->InitAsDefaultInstance();
  Proto50401024::default_instance_->InitAsDefaultInstance();
  Proto80401025::default_instance_->InitAsDefaultInstance();
  Proto10400352::default_instance_->InitAsDefaultInstance();
  Proto10101010::default_instance_->InitAsDefaultInstance();
  Proto10401025::default_instance_->InitAsDefaultInstance();
  Proto50401025::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient016_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient016_2eproto {
  StaticDescriptorInitializer_ProtoClient016_2eproto() {
    protobuf_AddDesc_ProtoClient016_2eproto();
  }
} static_descriptor_initializer_ProtoClient016_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto50405021::kWaitTimeFieldNumber;
const int Proto50405021::kPlayerListFieldNumber;
const int Proto50405021::kPlayerScoreListFieldNumber;
const int Proto50405021::kRankNumFieldNumber;
const int Proto50405021::kRightNumFieldNumber;
const int Proto50405021::kScoreNumFieldNumber;
const int Proto50405021::kNextNumFieldNumber;
#endif  // !_MSC_VER

Proto50405021::Proto50405021()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50405021::InitAsDefaultInstance() {
}

Proto50405021::Proto50405021(const Proto50405021& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50405021::SharedCtor() {
  _cached_size_ = 0;
  wait_time_ = 0;
  rank_num_ = 0;
  right_num_ = 0;
  score_num_ = 0;
  next_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50405021::~Proto50405021() {
  SharedDtor();
}

void Proto50405021::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50405021::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50405021::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50405021_descriptor_;
}

const Proto50405021& Proto50405021::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50405021* Proto50405021::default_instance_ = NULL;

Proto50405021* Proto50405021::New() const {
  return new Proto50405021;
}

void Proto50405021::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    wait_time_ = 0;
    rank_num_ = 0;
    right_num_ = 0;
    score_num_ = 0;
    next_num_ = 0;
  }
  player_list_.Clear();
  player_score_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50405021::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 wait_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wait_time_)));
          set_has_wait_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_player_list;
        break;
      }
      
      // repeated string player_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_player_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_player_list()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->player_list(0).data(), this->player_list(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_player_list;
        if (input->ExpectTag(24)) goto parse_player_score_list;
        break;
      }
      
      // repeated int32 player_score_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_score_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_player_score_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_player_score_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_player_score_list;
        if (input->ExpectTag(32)) goto parse_rank_num;
        break;
      }
      
      // optional int32 rank_num = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_num_)));
          set_has_rank_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_right_num;
        break;
      }
      
      // optional int32 right_num = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_right_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &right_num_)));
          set_has_right_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_score_num;
        break;
      }
      
      // optional int32 score_num = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_score_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_num_)));
          set_has_score_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_next_num;
        break;
      }
      
      // optional int32 next_num = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_next_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &next_num_)));
          set_has_next_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50405021::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 wait_time = 1;
  if (has_wait_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wait_time(), output);
  }
  
  // repeated string player_list = 2;
  for (int i = 0; i < this->player_list_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->player_list(i).data(), this->player_list(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->player_list(i), output);
  }
  
  // repeated int32 player_score_list = 3;
  for (int i = 0; i < this->player_score_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->player_score_list(i), output);
  }
  
  // optional int32 rank_num = 4;
  if (has_rank_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->rank_num(), output);
  }
  
  // optional int32 right_num = 5;
  if (has_right_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->right_num(), output);
  }
  
  // optional int32 score_num = 6;
  if (has_score_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->score_num(), output);
  }
  
  // optional int32 next_num = 7;
  if (has_next_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->next_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50405021::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 wait_time = 1;
  if (has_wait_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wait_time(), target);
  }
  
  // repeated string player_list = 2;
  for (int i = 0; i < this->player_list_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->player_list(i).data(), this->player_list(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->player_list(i), target);
  }
  
  // repeated int32 player_score_list = 3;
  for (int i = 0; i < this->player_score_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->player_score_list(i), target);
  }
  
  // optional int32 rank_num = 4;
  if (has_rank_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->rank_num(), target);
  }
  
  // optional int32 right_num = 5;
  if (has_right_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->right_num(), target);
  }
  
  // optional int32 score_num = 6;
  if (has_score_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->score_num(), target);
  }
  
  // optional int32 next_num = 7;
  if (has_next_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->next_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50405021::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 wait_time = 1;
    if (has_wait_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wait_time());
    }
    
    // optional int32 rank_num = 4;
    if (has_rank_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_num());
    }
    
    // optional int32 right_num = 5;
    if (has_right_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->right_num());
    }
    
    // optional int32 score_num = 6;
    if (has_score_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score_num());
    }
    
    // optional int32 next_num = 7;
    if (has_next_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->next_num());
    }
    
  }
  // repeated string player_list = 2;
  total_size += 1 * this->player_list_size();
  for (int i = 0; i < this->player_list_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->player_list(i));
  }
  
  // repeated int32 player_score_list = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->player_score_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->player_score_list(i));
    }
    total_size += 1 * this->player_score_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50405021::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50405021* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50405021*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50405021::MergeFrom(const Proto50405021& from) {
  GOOGLE_CHECK_NE(&from, this);
  player_list_.MergeFrom(from.player_list_);
  player_score_list_.MergeFrom(from.player_score_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wait_time()) {
      set_wait_time(from.wait_time());
    }
    if (from.has_rank_num()) {
      set_rank_num(from.rank_num());
    }
    if (from.has_right_num()) {
      set_right_num(from.right_num());
    }
    if (from.has_score_num()) {
      set_score_num(from.score_num());
    }
    if (from.has_next_num()) {
      set_next_num(from.next_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50405021::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50405021::CopyFrom(const Proto50405021& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50405021::IsInitialized() const {
  
  return true;
}

void Proto50405021::Swap(Proto50405021* other) {
  if (other != this) {
    std::swap(wait_time_, other->wait_time_);
    player_list_.Swap(&other->player_list_);
    player_score_list_.Swap(&other->player_score_list_);
    std::swap(rank_num_, other->rank_num_);
    std::swap(right_num_, other->right_num_);
    std::swap(score_num_, other->score_num_);
    std::swap(next_num_, other->next_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50405021::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50405021_descriptor_;
  metadata.reflection = Proto50405021_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400927::kTargetSceneIdFieldNumber;
const int Proto80400927::kSceneIdFieldNumber;
const int Proto80400927::kTypeFieldNumber;
const int Proto80400927::kPosXFieldNumber;
const int Proto80400927::kPosYFieldNumber;
#endif  // !_MSC_VER

Proto80400927::Proto80400927()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400927::InitAsDefaultInstance() {
}

Proto80400927::Proto80400927(const Proto80400927& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400927::SharedCtor() {
  _cached_size_ = 0;
  target_scene_id_ = 0;
  scene_id_ = 0;
  type_ = 0;
  posx_ = 0;
  posy_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400927::~Proto80400927() {
  SharedDtor();
}

void Proto80400927::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400927::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400927::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400927_descriptor_;
}

const Proto80400927& Proto80400927::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto80400927* Proto80400927::default_instance_ = NULL;

Proto80400927* Proto80400927::New() const {
  return new Proto80400927;
}

void Proto80400927::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    target_scene_id_ = 0;
    scene_id_ = 0;
    type_ = 0;
    posx_ = 0;
    posy_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400927::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 target_scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_scene_id_)));
          set_has_target_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }
      
      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_posX;
        break;
      }
      
      // optional int32 posX = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_posX:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posx_)));
          set_has_posx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_posY;
        break;
      }
      
      // optional int32 posY = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_posY:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posy_)));
          set_has_posy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400927::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 target_scene_id = 1;
  if (has_target_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->target_scene_id(), output);
  }
  
  // optional int32 scene_id = 2;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->scene_id(), output);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }
  
  // optional int32 posX = 4;
  if (has_posx()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->posx(), output);
  }
  
  // optional int32 posY = 5;
  if (has_posy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->posy(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400927::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 target_scene_id = 1;
  if (has_target_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->target_scene_id(), target);
  }
  
  // optional int32 scene_id = 2;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->scene_id(), target);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }
  
  // optional int32 posX = 4;
  if (has_posx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->posx(), target);
  }
  
  // optional int32 posY = 5;
  if (has_posy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->posy(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400927::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 target_scene_id = 1;
    if (has_target_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_scene_id());
    }
    
    // optional int32 scene_id = 2;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 posX = 4;
    if (has_posx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posx());
    }
    
    // optional int32 posY = 5;
    if (has_posy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->posy());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400927::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400927* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400927*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400927::MergeFrom(const Proto80400927& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_target_scene_id()) {
      set_target_scene_id(from.target_scene_id());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_posx()) {
      set_posx(from.posx());
    }
    if (from.has_posy()) {
      set_posy(from.posy());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400927::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400927::CopyFrom(const Proto80400927& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400927::IsInitialized() const {
  
  return true;
}

void Proto80400927::Swap(Proto80400927* other) {
  if (other != this) {
    std::swap(target_scene_id_, other->target_scene_id_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(type_, other->type_);
    std::swap(posx_, other->posx_);
    std::swap(posy_, other->posy_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400927::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400927_descriptor_;
  metadata.reflection = Proto80400927_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400939::kScriptWaveIdFieldNumber;
const int Proto10400939::kScriptSortFieldNumber;
#endif  // !_MSC_VER

Proto10400939::Proto10400939()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400939::InitAsDefaultInstance() {
}

Proto10400939::Proto10400939(const Proto10400939& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400939::SharedCtor() {
  _cached_size_ = 0;
  script_wave_id_ = 0;
  script_sort_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400939::~Proto10400939() {
  SharedDtor();
}

void Proto10400939::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400939::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400939::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400939_descriptor_;
}

const Proto10400939& Proto10400939::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10400939* Proto10400939::default_instance_ = NULL;

Proto10400939* Proto10400939::New() const {
  return new Proto10400939;
}

void Proto10400939::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_wave_id_ = 0;
    script_sort_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400939::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_wave_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_wave_id_)));
          set_has_script_wave_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_script_sort;
        break;
      }
      
      // optional int32 script_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400939::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_wave_id = 1;
  if (has_script_wave_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_wave_id(), output);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->script_sort(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400939::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_wave_id = 1;
  if (has_script_wave_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_wave_id(), target);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->script_sort(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400939::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_wave_id = 1;
    if (has_script_wave_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_wave_id());
    }
    
    // optional int32 script_sort = 2;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400939::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400939* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400939*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400939::MergeFrom(const Proto10400939& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_wave_id()) {
      set_script_wave_id(from.script_wave_id());
    }
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400939::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400939::CopyFrom(const Proto10400939& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400939::IsInitialized() const {
  
  return true;
}

void Proto10400939::Swap(Proto10400939* other) {
  if (other != this) {
    std::swap(script_wave_id_, other->script_wave_id_);
    std::swap(script_sort_, other->script_sort_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400939::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400939_descriptor_;
  metadata.reflection = Proto10400939_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400939::kScriptWaveIdFieldNumber;
const int Proto50400939::kScriptSortFieldNumber;
const int Proto50400939::kIsGetFieldNumber;
#endif  // !_MSC_VER

Proto50400939::Proto50400939()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400939::InitAsDefaultInstance() {
}

Proto50400939::Proto50400939(const Proto50400939& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400939::SharedCtor() {
  _cached_size_ = 0;
  script_wave_id_ = 0;
  script_sort_ = 0;
  is_get_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400939::~Proto50400939() {
  SharedDtor();
}

void Proto50400939::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400939::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400939::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400939_descriptor_;
}

const Proto50400939& Proto50400939::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50400939* Proto50400939::default_instance_ = NULL;

Proto50400939* Proto50400939::New() const {
  return new Proto50400939;
}

void Proto50400939::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_wave_id_ = 0;
    script_sort_ = 0;
    is_get_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400939::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_wave_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_wave_id_)));
          set_has_script_wave_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_script_sort;
        break;
      }
      
      // optional int32 script_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_get;
        break;
      }
      
      // optional int32 is_get = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_get:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_get_)));
          set_has_is_get();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400939::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_wave_id = 1;
  if (has_script_wave_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_wave_id(), output);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->script_sort(), output);
  }
  
  // optional int32 is_get = 3;
  if (has_is_get()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_get(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400939::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_wave_id = 1;
  if (has_script_wave_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_wave_id(), target);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->script_sort(), target);
  }
  
  // optional int32 is_get = 3;
  if (has_is_get()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_get(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400939::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_wave_id = 1;
    if (has_script_wave_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_wave_id());
    }
    
    // optional int32 script_sort = 2;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 is_get = 3;
    if (has_is_get()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_get());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400939::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400939* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400939*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400939::MergeFrom(const Proto50400939& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_wave_id()) {
      set_script_wave_id(from.script_wave_id());
    }
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_is_get()) {
      set_is_get(from.is_get());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400939::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400939::CopyFrom(const Proto50400939& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400939::IsInitialized() const {
  
  return true;
}

void Proto50400939::Swap(Proto50400939* other) {
  if (other != this) {
    std::swap(script_wave_id_, other->script_wave_id_);
    std::swap(script_sort_, other->script_sort_);
    std::swap(is_get_, other->is_get_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400939::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400939_descriptor_;
  metadata.reflection = Proto50400939_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400811::kSceneIdFieldNumber;
const int Proto10400811::kLimitForceFieldNumber;
const int Proto10400811::kSceretFieldNumber;
const int Proto10400811::kAutoStartFieldNumber;
#endif  // !_MSC_VER

Proto10400811::Proto10400811()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400811::InitAsDefaultInstance() {
}

Proto10400811::Proto10400811(const Proto10400811& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400811::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  limit_force_ = 0;
  sceret_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  auto_start_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400811::~Proto10400811() {
  SharedDtor();
}

void Proto10400811::SharedDtor() {
  if (sceret_ != &::google::protobuf::internal::kEmptyString) {
    delete sceret_;
  }
  if (this != default_instance_) {
  }
}

void Proto10400811::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400811::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400811_descriptor_;
}

const Proto10400811& Proto10400811::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10400811* Proto10400811::default_instance_ = NULL;

Proto10400811* Proto10400811::New() const {
  return new Proto10400811;
}

void Proto10400811::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    limit_force_ = 0;
    if (has_sceret()) {
      if (sceret_ != &::google::protobuf::internal::kEmptyString) {
        sceret_->clear();
      }
    }
    auto_start_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400811::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_limit_force;
        break;
      }
      
      // optional int32 limit_force = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_limit_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_force_)));
          set_has_limit_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_sceret;
        break;
      }
      
      // optional string sceret = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sceret:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sceret()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->sceret().data(), this->sceret().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_auto_start;
        break;
      }
      
      // optional int32 auto_start = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_start:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_start_)));
          set_has_auto_start();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400811::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 limit_force = 2;
  if (has_limit_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->limit_force(), output);
  }
  
  // optional string sceret = 3;
  if (has_sceret()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sceret().data(), this->sceret().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->sceret(), output);
  }
  
  // optional int32 auto_start = 4;
  if (has_auto_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->auto_start(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400811::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 limit_force = 2;
  if (has_limit_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->limit_force(), target);
  }
  
  // optional string sceret = 3;
  if (has_sceret()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->sceret().data(), this->sceret().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sceret(), target);
  }
  
  // optional int32 auto_start = 4;
  if (has_auto_start()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->auto_start(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400811::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 limit_force = 2;
    if (has_limit_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->limit_force());
    }
    
    // optional string sceret = 3;
    if (has_sceret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sceret());
    }
    
    // optional int32 auto_start = 4;
    if (has_auto_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_start());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400811::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400811* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400811*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400811::MergeFrom(const Proto10400811& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_limit_force()) {
      set_limit_force(from.limit_force());
    }
    if (from.has_sceret()) {
      set_sceret(from.sceret());
    }
    if (from.has_auto_start()) {
      set_auto_start(from.auto_start());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400811::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400811::CopyFrom(const Proto10400811& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400811::IsInitialized() const {
  
  return true;
}

void Proto10400811::Swap(Proto10400811* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(limit_force_, other->limit_force_);
    std::swap(sceret_, other->sceret_);
    std::swap(auto_start_, other->auto_start_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400811::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400811_descriptor_;
  metadata.reflection = Proto10400811_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400812::kSceneIdFieldNumber;
#endif  // !_MSC_VER

Proto10400812::Proto10400812()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400812::InitAsDefaultInstance() {
}

Proto10400812::Proto10400812(const Proto10400812& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400812::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400812::~Proto10400812() {
  SharedDtor();
}

void Proto10400812::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400812::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400812::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400812_descriptor_;
}

const Proto10400812& Proto10400812::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10400812* Proto10400812::default_instance_ = NULL;

Proto10400812* Proto10400812::New() const {
  return new Proto10400812;
}

void Proto10400812::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400812::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400812::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400812::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400812::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400812::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400812* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400812*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400812::MergeFrom(const Proto10400812& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400812::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400812::CopyFrom(const Proto10400812& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400812::IsInitialized() const {
  
  return true;
}

void Proto10400812::Swap(Proto10400812* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400812::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400812_descriptor_;
  metadata.reflection = Proto10400812_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400812::kSceneIdFieldNumber;
const int Proto50400812::kTeamListFieldNumber;
#endif  // !_MSC_VER

Proto50400812::Proto50400812()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400812::InitAsDefaultInstance() {
}

Proto50400812::Proto50400812(const Proto50400812& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400812::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400812::~Proto50400812() {
  SharedDtor();
}

void Proto50400812::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400812::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400812::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400812_descriptor_;
}

const Proto50400812& Proto50400812::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50400812* Proto50400812::default_instance_ = NULL;

Proto50400812* Proto50400812::New() const {
  return new Proto50400812;
}

void Proto50400812::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
  }
  team_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400812::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_team_list;
        break;
      }
      
      // repeated .ProtoTravelTeam team_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_team_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_team_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_team_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400812::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // repeated .ProtoTravelTeam team_list = 2;
  for (int i = 0; i < this->team_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->team_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400812::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // repeated .ProtoTravelTeam team_list = 2;
  for (int i = 0; i < this->team_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->team_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400812::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
  }
  // repeated .ProtoTravelTeam team_list = 2;
  total_size += 1 * this->team_list_size();
  for (int i = 0; i < this->team_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->team_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400812::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400812* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400812*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400812::MergeFrom(const Proto50400812& from) {
  GOOGLE_CHECK_NE(&from, this);
  team_list_.MergeFrom(from.team_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400812::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400812::CopyFrom(const Proto50400812& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400812::IsInitialized() const {
  
  return true;
}

void Proto50400812::Swap(Proto50400812* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    team_list_.Swap(&other->team_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400812::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400812_descriptor_;
  metadata.reflection = Proto50400812_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400813::kSceneIdFieldNumber;
#endif  // !_MSC_VER

Proto10400813::Proto10400813()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400813::InitAsDefaultInstance() {
}

Proto10400813::Proto10400813(const Proto10400813& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400813::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400813::~Proto10400813() {
  SharedDtor();
}

void Proto10400813::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400813::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400813::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400813_descriptor_;
}

const Proto10400813& Proto10400813::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10400813* Proto10400813::default_instance_ = NULL;

Proto10400813* Proto10400813::New() const {
  return new Proto10400813;
}

void Proto10400813::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400813::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400813::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400813::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400813::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400813::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400813* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400813*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400813::MergeFrom(const Proto10400813& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400813::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400813::CopyFrom(const Proto10400813& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400813::IsInitialized() const {
  
  return true;
}

void Proto10400813::Swap(Proto10400813* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400813::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400813_descriptor_;
  metadata.reflection = Proto10400813_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400814::kSceneIdFieldNumber;
const int Proto10400814::kIndexFieldNumber;
const int Proto10400814::kScreteFieldNumber;
const int Proto10400814::kAutoStartFieldNumber;
#endif  // !_MSC_VER

Proto10400814::Proto10400814()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400814::InitAsDefaultInstance() {
}

Proto10400814::Proto10400814(const Proto10400814& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400814::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  index_ = 0;
  screte_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  auto_start_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400814::~Proto10400814() {
  SharedDtor();
}

void Proto10400814::SharedDtor() {
  if (screte_ != &::google::protobuf::internal::kEmptyString) {
    delete screte_;
  }
  if (this != default_instance_) {
  }
}

void Proto10400814::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400814::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400814_descriptor_;
}

const Proto10400814& Proto10400814::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10400814* Proto10400814::default_instance_ = NULL;

Proto10400814* Proto10400814::New() const {
  return new Proto10400814;
}

void Proto10400814::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    index_ = 0;
    if (has_screte()) {
      if (screte_ != &::google::protobuf::internal::kEmptyString) {
        screte_->clear();
      }
    }
    auto_start_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400814::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }
      
      // optional int32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_screte;
        break;
      }
      
      // optional string screte = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_screte:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_screte()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->screte().data(), this->screte().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_auto_start;
        break;
      }
      
      // optional int32 auto_start = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_start:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_start_)));
          set_has_auto_start();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400814::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }
  
  // optional string screte = 3;
  if (has_screte()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->screte().data(), this->screte().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->screte(), output);
  }
  
  // optional int32 auto_start = 4;
  if (has_auto_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->auto_start(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400814::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }
  
  // optional string screte = 3;
  if (has_screte()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->screte().data(), this->screte().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->screte(), target);
  }
  
  // optional int32 auto_start = 4;
  if (has_auto_start()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->auto_start(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400814::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional string screte = 3;
    if (has_screte()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->screte());
    }
    
    // optional int32 auto_start = 4;
    if (has_auto_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_start());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400814::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400814* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400814*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400814::MergeFrom(const Proto10400814& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_screte()) {
      set_screte(from.screte());
    }
    if (from.has_auto_start()) {
      set_auto_start(from.auto_start());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400814::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400814::CopyFrom(const Proto10400814& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400814::IsInitialized() const {
  
  return true;
}

void Proto10400814::Swap(Proto10400814* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(index_, other->index_);
    std::swap(screte_, other->screte_);
    std::swap(auto_start_, other->auto_start_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400814::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400814_descriptor_;
  metadata.reflection = Proto10400814_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400815::kSceneIdFieldNumber;
#endif  // !_MSC_VER

Proto10400815::Proto10400815()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400815::InitAsDefaultInstance() {
}

Proto10400815::Proto10400815(const Proto10400815& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400815::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400815::~Proto10400815() {
  SharedDtor();
}

void Proto10400815::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400815::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400815::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400815_descriptor_;
}

const Proto10400815& Proto10400815::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10400815* Proto10400815::default_instance_ = NULL;

Proto10400815* Proto10400815::New() const {
  return new Proto10400815;
}

void Proto10400815::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400815::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400815::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400815::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400815::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400815::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400815* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400815*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400815::MergeFrom(const Proto10400815& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400815::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400815::CopyFrom(const Proto10400815& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400815::IsInitialized() const {
  
  return true;
}

void Proto10400815::Swap(Proto10400815* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400815::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400815_descriptor_;
  metadata.reflection = Proto10400815_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400815::kSceneIdFieldNumber;
const int Proto50400815::kIndexFieldNumber;
const int Proto50400815::kTeamerListFieldNumber;
const int Proto50400815::kLimitForceFieldNumber;
const int Proto50400815::kAutoStartFieldNumber;
const int Proto50400815::kSecretFieldNumber;
#endif  // !_MSC_VER

Proto50400815::Proto50400815()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400815::InitAsDefaultInstance() {
}

Proto50400815::Proto50400815(const Proto50400815& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400815::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  index_ = 0;
  limit_force_ = 0;
  auto_start_ = 0;
  secret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400815::~Proto50400815() {
  SharedDtor();
}

void Proto50400815::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400815::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400815::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400815_descriptor_;
}

const Proto50400815& Proto50400815::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50400815* Proto50400815::default_instance_ = NULL;

Proto50400815* Proto50400815::New() const {
  return new Proto50400815;
}

void Proto50400815::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    index_ = 0;
    limit_force_ = 0;
    auto_start_ = 0;
    secret_ = 0;
  }
  teamer_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400815::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }
      
      // optional int32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_teamer_list;
        break;
      }
      
      // repeated .ProtoTeamer teamer_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_teamer_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_teamer_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_teamer_list;
        if (input->ExpectTag(32)) goto parse_limit_force;
        break;
      }
      
      // optional int32 limit_force = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_limit_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_force_)));
          set_has_limit_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_auto_start;
        break;
      }
      
      // optional int32 auto_start = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_start:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_start_)));
          set_has_auto_start();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_secret;
        break;
      }
      
      // optional int32 secret = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_secret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &secret_)));
          set_has_secret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400815::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }
  
  // repeated .ProtoTeamer teamer_list = 3;
  for (int i = 0; i < this->teamer_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->teamer_list(i), output);
  }
  
  // optional int32 limit_force = 4;
  if (has_limit_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->limit_force(), output);
  }
  
  // optional int32 auto_start = 5;
  if (has_auto_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->auto_start(), output);
  }
  
  // optional int32 secret = 6;
  if (has_secret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->secret(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400815::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }
  
  // repeated .ProtoTeamer teamer_list = 3;
  for (int i = 0; i < this->teamer_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->teamer_list(i), target);
  }
  
  // optional int32 limit_force = 4;
  if (has_limit_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->limit_force(), target);
  }
  
  // optional int32 auto_start = 5;
  if (has_auto_start()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->auto_start(), target);
  }
  
  // optional int32 secret = 6;
  if (has_secret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->secret(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400815::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 limit_force = 4;
    if (has_limit_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->limit_force());
    }
    
    // optional int32 auto_start = 5;
    if (has_auto_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_start());
    }
    
    // optional int32 secret = 6;
    if (has_secret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->secret());
    }
    
  }
  // repeated .ProtoTeamer teamer_list = 3;
  total_size += 1 * this->teamer_list_size();
  for (int i = 0; i < this->teamer_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->teamer_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400815::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400815* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400815*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400815::MergeFrom(const Proto50400815& from) {
  GOOGLE_CHECK_NE(&from, this);
  teamer_list_.MergeFrom(from.teamer_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_limit_force()) {
      set_limit_force(from.limit_force());
    }
    if (from.has_auto_start()) {
      set_auto_start(from.auto_start());
    }
    if (from.has_secret()) {
      set_secret(from.secret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400815::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400815::CopyFrom(const Proto50400815& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400815::IsInitialized() const {
  
  return true;
}

void Proto50400815::Swap(Proto50400815* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(index_, other->index_);
    teamer_list_.Swap(&other->teamer_list_);
    std::swap(limit_force_, other->limit_force_);
    std::swap(auto_start_, other->auto_start_);
    std::swap(secret_, other->secret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400815::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400815_descriptor_;
  metadata.reflection = Proto50400815_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400817::kSceneIdFieldNumber;
const int Proto10400817::kOperateFieldNumber;
#endif  // !_MSC_VER

Proto10400817::Proto10400817()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400817::InitAsDefaultInstance() {
}

Proto10400817::Proto10400817(const Proto10400817& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400817::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  operate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400817::~Proto10400817() {
  SharedDtor();
}

void Proto10400817::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400817::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400817::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400817_descriptor_;
}

const Proto10400817& Proto10400817::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10400817* Proto10400817::default_instance_ = NULL;

Proto10400817* Proto10400817::New() const {
  return new Proto10400817;
}

void Proto10400817::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    operate_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400817::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_operate;
        break;
      }
      
      // optional int32 operate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_operate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operate_)));
          set_has_operate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400817::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 operate = 2;
  if (has_operate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->operate(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400817::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 operate = 2;
  if (has_operate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->operate(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400817::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 operate = 2;
    if (has_operate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->operate());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400817::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400817* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400817*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400817::MergeFrom(const Proto10400817& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_operate()) {
      set_operate(from.operate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400817::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400817::CopyFrom(const Proto10400817& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400817::IsInitialized() const {
  
  return true;
}

void Proto10400817::Swap(Proto10400817* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(operate_, other->operate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400817::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400817_descriptor_;
  metadata.reflection = Proto10400817_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101008::kRoleListFieldNumber;
#endif  // !_MSC_VER

Proto50101008::Proto50101008()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101008::InitAsDefaultInstance() {
}

Proto50101008::Proto50101008(const Proto50101008& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101008::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101008::~Proto50101008() {
  SharedDtor();
}

void Proto50101008::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50101008::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101008::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101008_descriptor_;
}

const Proto50101008& Proto50101008::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50101008* Proto50101008::default_instance_ = NULL;

Proto50101008* Proto50101008::New() const {
  return new Proto50101008;
}

void Proto50101008::Clear() {
  role_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101008::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoAreaRole role_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_role_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_role_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101008::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoAreaRole role_list = 1;
  for (int i = 0; i < this->role_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->role_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101008::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoAreaRole role_list = 1;
  for (int i = 0; i < this->role_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->role_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101008::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoAreaRole role_list = 1;
  total_size += 1 * this->role_list_size();
  for (int i = 0; i < this->role_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101008::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101008* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101008*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101008::MergeFrom(const Proto50101008& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_list_.MergeFrom(from.role_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101008::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101008::CopyFrom(const Proto50101008& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101008::IsInitialized() const {
  
  return true;
}

void Proto50101008::Swap(Proto50101008* other) {
  if (other != this) {
    role_list_.Swap(&other->role_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101008::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101008_descriptor_;
  metadata.reflection = Proto50101008_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400818::kRoleFieldNumber;
#endif  // !_MSC_VER

Proto10400818::Proto10400818()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400818::InitAsDefaultInstance() {
}

Proto10400818::Proto10400818(const Proto10400818& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400818::SharedCtor() {
  _cached_size_ = 0;
  role_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400818::~Proto10400818() {
  SharedDtor();
}

void Proto10400818::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400818::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400818::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400818_descriptor_;
}

const Proto10400818& Proto10400818::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10400818* Proto10400818::default_instance_ = NULL;

Proto10400818* Proto10400818::New() const {
  return new Proto10400818;
}

void Proto10400818::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400818::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_)));
          set_has_role();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400818::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role = 1;
  if (has_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400818::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role = 1;
  if (has_role()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400818::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role = 1;
    if (has_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400818::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400818* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400818*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400818::MergeFrom(const Proto10400818& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role()) {
      set_role(from.role());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400818::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400818::CopyFrom(const Proto10400818& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400818::IsInitialized() const {
  
  return true;
}

void Proto10400818::Swap(Proto10400818* other) {
  if (other != this) {
    std::swap(role_, other->role_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400818::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400818_descriptor_;
  metadata.reflection = Proto10400818_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100654::kFlagLvlFieldNumber;
const int Proto50100654::kFlagExpFieldNumber;
#endif  // !_MSC_VER

Proto50100654::Proto50100654()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100654::InitAsDefaultInstance() {
}

Proto50100654::Proto50100654(const Proto50100654& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100654::SharedCtor() {
  _cached_size_ = 0;
  flag_lvl_ = 0;
  flag_exp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100654::~Proto50100654() {
  SharedDtor();
}

void Proto50100654::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100654::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100654::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100654_descriptor_;
}

const Proto50100654& Proto50100654::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50100654* Proto50100654::default_instance_ = NULL;

Proto50100654* Proto50100654::New() const {
  return new Proto50100654;
}

void Proto50100654::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    flag_lvl_ = 0;
    flag_exp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100654::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flag_lvl = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_lvl_)));
          set_has_flag_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_flag_exp;
        break;
      }
      
      // optional int32 flag_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flag_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_exp_)));
          set_has_flag_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100654::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 flag_lvl = 1;
  if (has_flag_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag_lvl(), output);
  }
  
  // optional int32 flag_exp = 2;
  if (has_flag_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->flag_exp(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100654::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 flag_lvl = 1;
  if (has_flag_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag_lvl(), target);
  }
  
  // optional int32 flag_exp = 2;
  if (has_flag_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->flag_exp(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100654::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 flag_lvl = 1;
    if (has_flag_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag_lvl());
    }
    
    // optional int32 flag_exp = 2;
    if (has_flag_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag_exp());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100654::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100654* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100654*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100654::MergeFrom(const Proto50100654& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flag_lvl()) {
      set_flag_lvl(from.flag_lvl());
    }
    if (from.has_flag_exp()) {
      set_flag_exp(from.flag_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100654::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100654::CopyFrom(const Proto50100654& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100654::IsInitialized() const {
  
  return true;
}

void Proto50100654::Swap(Proto50100654* other) {
  if (other != this) {
    std::swap(flag_lvl_, other->flag_lvl_);
    std::swap(flag_exp_, other->flag_exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100654::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100654_descriptor_;
  metadata.reflection = Proto50100654_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100655::kFlagLvlFieldNumber;
const int Proto50100655::kFlagExpFieldNumber;
#endif  // !_MSC_VER

Proto50100655::Proto50100655()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100655::InitAsDefaultInstance() {
}

Proto50100655::Proto50100655(const Proto50100655& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100655::SharedCtor() {
  _cached_size_ = 0;
  flag_lvl_ = 0;
  flag_exp_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100655::~Proto50100655() {
  SharedDtor();
}

void Proto50100655::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100655::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100655::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100655_descriptor_;
}

const Proto50100655& Proto50100655::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50100655* Proto50100655::default_instance_ = NULL;

Proto50100655* Proto50100655::New() const {
  return new Proto50100655;
}

void Proto50100655::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    flag_lvl_ = 0;
    flag_exp_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100655::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flag_lvl = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_lvl_)));
          set_has_flag_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_flag_exp;
        break;
      }
      
      // optional int32 flag_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flag_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_exp_)));
          set_has_flag_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100655::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 flag_lvl = 1;
  if (has_flag_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag_lvl(), output);
  }
  
  // optional int32 flag_exp = 2;
  if (has_flag_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->flag_exp(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100655::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 flag_lvl = 1;
  if (has_flag_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag_lvl(), target);
  }
  
  // optional int32 flag_exp = 2;
  if (has_flag_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->flag_exp(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100655::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 flag_lvl = 1;
    if (has_flag_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag_lvl());
    }
    
    // optional int32 flag_exp = 2;
    if (has_flag_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag_exp());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100655::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100655* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100655*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100655::MergeFrom(const Proto50100655& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flag_lvl()) {
      set_flag_lvl(from.flag_lvl());
    }
    if (from.has_flag_exp()) {
      set_flag_exp(from.flag_exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100655::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100655::CopyFrom(const Proto50100655& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100655::IsInitialized() const {
  
  return true;
}

void Proto50100655::Swap(Proto50100655* other) {
  if (other != this) {
    std::swap(flag_lvl_, other->flag_lvl_);
    std::swap(flag_exp_, other->flag_exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100655::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100655_descriptor_;
  metadata.reflection = Proto50100655_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101009::kPlayerRankFieldNumber;
const int Proto50101009::kPlayerForceFieldNumber;
const int Proto50101009::kRankListFieldNumber;
#endif  // !_MSC_VER

Proto50101009::Proto50101009()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101009::InitAsDefaultInstance() {
}

Proto50101009::Proto50101009(const Proto50101009& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101009::SharedCtor() {
  _cached_size_ = 0;
  player_rank_ = 0;
  player_force_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101009::~Proto50101009() {
  SharedDtor();
}

void Proto50101009::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50101009::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101009::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101009_descriptor_;
}

const Proto50101009& Proto50101009::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50101009* Proto50101009::default_instance_ = NULL;

Proto50101009* Proto50101009::New() const {
  return new Proto50101009;
}

void Proto50101009::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    player_rank_ = 0;
    player_force_ = 0;
  }
  rank_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101009::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 player_rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_rank_)));
          set_has_player_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_player_force;
        break;
      }
      
      // optional int32 player_force = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_force_)));
          set_has_player_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rank_list;
        break;
      }
      
      // repeated .ProtoAreaRole rank_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rank_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101009::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 player_rank = 1;
  if (has_player_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->player_rank(), output);
  }
  
  // optional int32 player_force = 2;
  if (has_player_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->player_force(), output);
  }
  
  // repeated .ProtoAreaRole rank_list = 3;
  for (int i = 0; i < this->rank_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rank_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101009::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 player_rank = 1;
  if (has_player_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->player_rank(), target);
  }
  
  // optional int32 player_force = 2;
  if (has_player_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->player_force(), target);
  }
  
  // repeated .ProtoAreaRole rank_list = 3;
  for (int i = 0; i < this->rank_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rank_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101009::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 player_rank = 1;
    if (has_player_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_rank());
    }
    
    // optional int32 player_force = 2;
    if (has_player_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_force());
    }
    
  }
  // repeated .ProtoAreaRole rank_list = 3;
  total_size += 1 * this->rank_list_size();
  for (int i = 0; i < this->rank_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101009::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101009* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101009*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101009::MergeFrom(const Proto50101009& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_list_.MergeFrom(from.rank_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_rank()) {
      set_player_rank(from.player_rank());
    }
    if (from.has_player_force()) {
      set_player_force(from.player_force());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101009::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101009::CopyFrom(const Proto50101009& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101009::IsInitialized() const {
  
  return true;
}

void Proto50101009::Swap(Proto50101009* other) {
  if (other != this) {
    std::swap(player_rank_, other->player_rank_);
    std::swap(player_force_, other->player_force_);
    rank_list_.Swap(&other->rank_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101009::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101009_descriptor_;
  metadata.reflection = Proto50101009_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50405030::kCurStageFieldNumber;
const int Proto50405030::kTotalExpFieldNumber;
const int Proto50405030::kLeftTimeFieldNumber;
const int Proto50405030::kFirstNpcFieldNumber;
const int Proto50405030::kSecondNpcFieldNumber;
const int Proto50405030::kThirdNpcFieldNumber;
const int Proto50405030::kPlayerNpcFieldNumber;
const int Proto50405030::kVipLevelFieldNumber;
const int Proto50405030::kStatusFieldNumber;
const int Proto50405030::kIsRightFieldNumber;
#endif  // !_MSC_VER

Proto50405030::Proto50405030()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50405030::InitAsDefaultInstance() {
}

Proto50405030::Proto50405030(const Proto50405030& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50405030::SharedCtor() {
  _cached_size_ = 0;
  cur_stage_ = 0;
  total_exp_ = 0;
  left_time_ = 0;
  first_npc_ = 0;
  second_npc_ = 0;
  third_npc_ = 0;
  player_npc_ = 0;
  vip_level_ = 0;
  status_ = 0;
  is_right_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50405030::~Proto50405030() {
  SharedDtor();
}

void Proto50405030::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50405030::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50405030::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50405030_descriptor_;
}

const Proto50405030& Proto50405030::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50405030* Proto50405030::default_instance_ = NULL;

Proto50405030* Proto50405030::New() const {
  return new Proto50405030;
}

void Proto50405030::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_stage_ = 0;
    total_exp_ = 0;
    left_time_ = 0;
    first_npc_ = 0;
    second_npc_ = 0;
    third_npc_ = 0;
    player_npc_ = 0;
    vip_level_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    status_ = 0;
    is_right_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50405030::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_stage = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_stage_)));
          set_has_cur_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_exp;
        break;
      }
      
      // optional int32 total_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_exp_)));
          set_has_total_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_first_npc;
        break;
      }
      
      // optional int32 first_npc = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_npc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_npc_)));
          set_has_first_npc();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_second_npc;
        break;
      }
      
      // optional int32 second_npc = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_npc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_npc_)));
          set_has_second_npc();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_third_npc;
        break;
      }
      
      // optional int32 third_npc = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_third_npc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &third_npc_)));
          set_has_third_npc();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_player_npc;
        break;
      }
      
      // optional int32 player_npc = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_npc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_npc_)));
          set_has_player_npc();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_vip_level;
        break;
      }
      
      // optional int32 vip_level = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_level_)));
          set_has_vip_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_status;
        break;
      }
      
      // optional int32 status = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_is_right;
        break;
      }
      
      // optional int32 is_right = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_right:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_right_)));
          set_has_is_right();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50405030::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_stage = 1;
  if (has_cur_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_stage(), output);
  }
  
  // optional int32 total_exp = 2;
  if (has_total_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_exp(), output);
  }
  
  // optional int32 left_time = 3;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_time(), output);
  }
  
  // optional int32 first_npc = 4;
  if (has_first_npc()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->first_npc(), output);
  }
  
  // optional int32 second_npc = 5;
  if (has_second_npc()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->second_npc(), output);
  }
  
  // optional int32 third_npc = 6;
  if (has_third_npc()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->third_npc(), output);
  }
  
  // optional int32 player_npc = 7;
  if (has_player_npc()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->player_npc(), output);
  }
  
  // optional int32 vip_level = 8;
  if (has_vip_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->vip_level(), output);
  }
  
  // optional int32 status = 9;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->status(), output);
  }
  
  // optional int32 is_right = 10;
  if (has_is_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->is_right(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50405030::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_stage = 1;
  if (has_cur_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_stage(), target);
  }
  
  // optional int32 total_exp = 2;
  if (has_total_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_exp(), target);
  }
  
  // optional int32 left_time = 3;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_time(), target);
  }
  
  // optional int32 first_npc = 4;
  if (has_first_npc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->first_npc(), target);
  }
  
  // optional int32 second_npc = 5;
  if (has_second_npc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->second_npc(), target);
  }
  
  // optional int32 third_npc = 6;
  if (has_third_npc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->third_npc(), target);
  }
  
  // optional int32 player_npc = 7;
  if (has_player_npc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->player_npc(), target);
  }
  
  // optional int32 vip_level = 8;
  if (has_vip_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->vip_level(), target);
  }
  
  // optional int32 status = 9;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->status(), target);
  }
  
  // optional int32 is_right = 10;
  if (has_is_right()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->is_right(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50405030::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_stage = 1;
    if (has_cur_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_stage());
    }
    
    // optional int32 total_exp = 2;
    if (has_total_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_exp());
    }
    
    // optional int32 left_time = 3;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 first_npc = 4;
    if (has_first_npc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_npc());
    }
    
    // optional int32 second_npc = 5;
    if (has_second_npc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_npc());
    }
    
    // optional int32 third_npc = 6;
    if (has_third_npc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->third_npc());
    }
    
    // optional int32 player_npc = 7;
    if (has_player_npc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_npc());
    }
    
    // optional int32 vip_level = 8;
    if (has_vip_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_level());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 status = 9;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int32 is_right = 10;
    if (has_is_right()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_right());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50405030::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50405030* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50405030*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50405030::MergeFrom(const Proto50405030& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_stage()) {
      set_cur_stage(from.cur_stage());
    }
    if (from.has_total_exp()) {
      set_total_exp(from.total_exp());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_first_npc()) {
      set_first_npc(from.first_npc());
    }
    if (from.has_second_npc()) {
      set_second_npc(from.second_npc());
    }
    if (from.has_third_npc()) {
      set_third_npc(from.third_npc());
    }
    if (from.has_player_npc()) {
      set_player_npc(from.player_npc());
    }
    if (from.has_vip_level()) {
      set_vip_level(from.vip_level());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_is_right()) {
      set_is_right(from.is_right());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50405030::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50405030::CopyFrom(const Proto50405030& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50405030::IsInitialized() const {
  
  return true;
}

void Proto50405030::Swap(Proto50405030* other) {
  if (other != this) {
    std::swap(cur_stage_, other->cur_stage_);
    std::swap(total_exp_, other->total_exp_);
    std::swap(left_time_, other->left_time_);
    std::swap(first_npc_, other->first_npc_);
    std::swap(second_npc_, other->second_npc_);
    std::swap(third_npc_, other->third_npc_);
    std::swap(player_npc_, other->player_npc_);
    std::swap(vip_level_, other->vip_level_);
    std::swap(status_, other->status_);
    std::swap(is_right_, other->is_right_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50405030::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50405030_descriptor_;
  metadata.reflection = Proto50405030_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10405031::kStatusFieldNumber;
const int Proto10405031::kFirstPlayerIdFieldNumber;
const int Proto10405031::kSecondPlayerIdFieldNumber;
const int Proto10405031::kChooseFieldNumber;
const int Proto10405031::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto10405031::Proto10405031()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10405031::InitAsDefaultInstance() {
}

Proto10405031::Proto10405031(const Proto10405031& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10405031::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  first_player_id_ = GOOGLE_LONGLONG(0);
  second_player_id_ = GOOGLE_LONGLONG(0);
  choose_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10405031::~Proto10405031() {
  SharedDtor();
}

void Proto10405031::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10405031::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10405031::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10405031_descriptor_;
}

const Proto10405031& Proto10405031::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10405031* Proto10405031::default_instance_ = NULL;

Proto10405031* Proto10405031::New() const {
  return new Proto10405031;
}

void Proto10405031::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
    first_player_id_ = GOOGLE_LONGLONG(0);
    second_player_id_ = GOOGLE_LONGLONG(0);
    choose_ = 0;
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10405031::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_first_player_id;
        break;
      }
      
      // optional int64 first_player_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_player_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &first_player_id_)));
          set_has_first_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_second_player_id;
        break;
      }
      
      // optional int64 second_player_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_player_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &second_player_id_)));
          set_has_second_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_choose;
        break;
      }
      
      // optional int32 choose = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_choose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &choose_)));
          set_has_choose();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }
      
      // optional int32 type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10405031::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  // optional int64 first_player_id = 2;
  if (has_first_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->first_player_id(), output);
  }
  
  // optional int64 second_player_id = 3;
  if (has_second_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->second_player_id(), output);
  }
  
  // optional int32 choose = 4;
  if (has_choose()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->choose(), output);
  }
  
  // optional int32 type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10405031::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  // optional int64 first_player_id = 2;
  if (has_first_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->first_player_id(), target);
  }
  
  // optional int64 second_player_id = 3;
  if (has_second_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->second_player_id(), target);
  }
  
  // optional int32 choose = 4;
  if (has_choose()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->choose(), target);
  }
  
  // optional int32 type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10405031::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int64 first_player_id = 2;
    if (has_first_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->first_player_id());
    }
    
    // optional int64 second_player_id = 3;
    if (has_second_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->second_player_id());
    }
    
    // optional int32 choose = 4;
    if (has_choose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->choose());
    }
    
    // optional int32 type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10405031::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10405031* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10405031*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10405031::MergeFrom(const Proto10405031& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_first_player_id()) {
      set_first_player_id(from.first_player_id());
    }
    if (from.has_second_player_id()) {
      set_second_player_id(from.second_player_id());
    }
    if (from.has_choose()) {
      set_choose(from.choose());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10405031::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10405031::CopyFrom(const Proto10405031& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10405031::IsInitialized() const {
  
  return true;
}

void Proto10405031::Swap(Proto10405031* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(first_player_id_, other->first_player_id_);
    std::swap(second_player_id_, other->second_player_id_);
    std::swap(choose_, other->choose_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10405031::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10405031_descriptor_;
  metadata.reflection = Proto10405031_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50405031::kStatusFieldNumber;
const int Proto50405031::kFirstPlayerIdFieldNumber;
const int Proto50405031::kSecondPlayerIdFieldNumber;
const int Proto50405031::kChooseFieldNumber;
const int Proto50405031::kTypeFieldNumber;
const int Proto50405031::kFirstPlayerNameFieldNumber;
const int Proto50405031::kSecondPlayerNameFieldNumber;
const int Proto50405031::kFirstPlayerCoordFieldNumber;
const int Proto50405031::kSecondPlayerCoordFieldNumber;
#endif  // !_MSC_VER

Proto50405031::Proto50405031()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50405031::InitAsDefaultInstance() {
  first_player_coord_ = const_cast< ::ProtoCoord*>(&::ProtoCoord::default_instance());
  second_player_coord_ = const_cast< ::ProtoCoord*>(&::ProtoCoord::default_instance());
}

Proto50405031::Proto50405031(const Proto50405031& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50405031::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  first_player_id_ = GOOGLE_LONGLONG(0);
  second_player_id_ = GOOGLE_LONGLONG(0);
  choose_ = 0;
  type_ = 0;
  first_player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  second_player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  first_player_coord_ = NULL;
  second_player_coord_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50405031::~Proto50405031() {
  SharedDtor();
}

void Proto50405031::SharedDtor() {
  if (first_player_name_ != &::google::protobuf::internal::kEmptyString) {
    delete first_player_name_;
  }
  if (second_player_name_ != &::google::protobuf::internal::kEmptyString) {
    delete second_player_name_;
  }
  if (this != default_instance_) {
    delete first_player_coord_;
    delete second_player_coord_;
  }
}

void Proto50405031::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50405031::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50405031_descriptor_;
}

const Proto50405031& Proto50405031::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50405031* Proto50405031::default_instance_ = NULL;

Proto50405031* Proto50405031::New() const {
  return new Proto50405031;
}

void Proto50405031::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
    first_player_id_ = GOOGLE_LONGLONG(0);
    second_player_id_ = GOOGLE_LONGLONG(0);
    choose_ = 0;
    type_ = 0;
    if (has_first_player_name()) {
      if (first_player_name_ != &::google::protobuf::internal::kEmptyString) {
        first_player_name_->clear();
      }
    }
    if (has_second_player_name()) {
      if (second_player_name_ != &::google::protobuf::internal::kEmptyString) {
        second_player_name_->clear();
      }
    }
    if (has_first_player_coord()) {
      if (first_player_coord_ != NULL) first_player_coord_->::ProtoCoord::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_second_player_coord()) {
      if (second_player_coord_ != NULL) second_player_coord_->::ProtoCoord::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50405031::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_first_player_id;
        break;
      }
      
      // optional int64 first_player_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_player_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &first_player_id_)));
          set_has_first_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_second_player_id;
        break;
      }
      
      // optional int64 second_player_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_player_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &second_player_id_)));
          set_has_second_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_choose;
        break;
      }
      
      // optional int32 choose = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_choose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &choose_)));
          set_has_choose();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }
      
      // optional int32 type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_first_player_name;
        break;
      }
      
      // optional string first_player_name = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_first_player_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_first_player_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->first_player_name().data(), this->first_player_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_second_player_name;
        break;
      }
      
      // optional string second_player_name = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_second_player_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_second_player_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->second_player_name().data(), this->second_player_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_first_player_coord;
        break;
      }
      
      // optional .ProtoCoord first_player_coord = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_first_player_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_first_player_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_second_player_coord;
        break;
      }
      
      // optional .ProtoCoord second_player_coord = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_second_player_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_second_player_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50405031::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  // optional int64 first_player_id = 2;
  if (has_first_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->first_player_id(), output);
  }
  
  // optional int64 second_player_id = 3;
  if (has_second_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->second_player_id(), output);
  }
  
  // optional int32 choose = 4;
  if (has_choose()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->choose(), output);
  }
  
  // optional int32 type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }
  
  // optional string first_player_name = 6;
  if (has_first_player_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->first_player_name().data(), this->first_player_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->first_player_name(), output);
  }
  
  // optional string second_player_name = 7;
  if (has_second_player_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->second_player_name().data(), this->second_player_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->second_player_name(), output);
  }
  
  // optional .ProtoCoord first_player_coord = 8;
  if (has_first_player_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->first_player_coord(), output);
  }
  
  // optional .ProtoCoord second_player_coord = 9;
  if (has_second_player_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->second_player_coord(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50405031::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  // optional int64 first_player_id = 2;
  if (has_first_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->first_player_id(), target);
  }
  
  // optional int64 second_player_id = 3;
  if (has_second_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->second_player_id(), target);
  }
  
  // optional int32 choose = 4;
  if (has_choose()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->choose(), target);
  }
  
  // optional int32 type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }
  
  // optional string first_player_name = 6;
  if (has_first_player_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->first_player_name().data(), this->first_player_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->first_player_name(), target);
  }
  
  // optional string second_player_name = 7;
  if (has_second_player_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->second_player_name().data(), this->second_player_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->second_player_name(), target);
  }
  
  // optional .ProtoCoord first_player_coord = 8;
  if (has_first_player_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->first_player_coord(), target);
  }
  
  // optional .ProtoCoord second_player_coord = 9;
  if (has_second_player_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->second_player_coord(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50405031::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int64 first_player_id = 2;
    if (has_first_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->first_player_id());
    }
    
    // optional int64 second_player_id = 3;
    if (has_second_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->second_player_id());
    }
    
    // optional int32 choose = 4;
    if (has_choose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->choose());
    }
    
    // optional int32 type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional string first_player_name = 6;
    if (has_first_player_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->first_player_name());
    }
    
    // optional string second_player_name = 7;
    if (has_second_player_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->second_player_name());
    }
    
    // optional .ProtoCoord first_player_coord = 8;
    if (has_first_player_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->first_player_coord());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .ProtoCoord second_player_coord = 9;
    if (has_second_player_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->second_player_coord());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50405031::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50405031* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50405031*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50405031::MergeFrom(const Proto50405031& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_first_player_id()) {
      set_first_player_id(from.first_player_id());
    }
    if (from.has_second_player_id()) {
      set_second_player_id(from.second_player_id());
    }
    if (from.has_choose()) {
      set_choose(from.choose());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_first_player_name()) {
      set_first_player_name(from.first_player_name());
    }
    if (from.has_second_player_name()) {
      set_second_player_name(from.second_player_name());
    }
    if (from.has_first_player_coord()) {
      mutable_first_player_coord()->::ProtoCoord::MergeFrom(from.first_player_coord());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_second_player_coord()) {
      mutable_second_player_coord()->::ProtoCoord::MergeFrom(from.second_player_coord());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50405031::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50405031::CopyFrom(const Proto50405031& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50405031::IsInitialized() const {
  
  return true;
}

void Proto50405031::Swap(Proto50405031* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(first_player_id_, other->first_player_id_);
    std::swap(second_player_id_, other->second_player_id_);
    std::swap(choose_, other->choose_);
    std::swap(type_, other->type_);
    std::swap(first_player_name_, other->first_player_name_);
    std::swap(second_player_name_, other->second_player_name_);
    std::swap(first_player_coord_, other->first_player_coord_);
    std::swap(second_player_coord_, other->second_player_coord_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50405031::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50405031_descriptor_;
  metadata.reflection = Proto50405031_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10405032::kNpcNumFieldNumber;
#endif  // !_MSC_VER

Proto10405032::Proto10405032()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10405032::InitAsDefaultInstance() {
}

Proto10405032::Proto10405032(const Proto10405032& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10405032::SharedCtor() {
  _cached_size_ = 0;
  npc_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10405032::~Proto10405032() {
  SharedDtor();
}

void Proto10405032::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10405032::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10405032::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10405032_descriptor_;
}

const Proto10405032& Proto10405032::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10405032* Proto10405032::default_instance_ = NULL;

Proto10405032* Proto10405032::New() const {
  return new Proto10405032;
}

void Proto10405032::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    npc_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10405032::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 npc_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &npc_num_)));
          set_has_npc_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10405032::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 npc_num = 1;
  if (has_npc_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->npc_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10405032::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 npc_num = 1;
  if (has_npc_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->npc_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10405032::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 npc_num = 1;
    if (has_npc_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->npc_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10405032::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10405032* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10405032*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10405032::MergeFrom(const Proto10405032& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_npc_num()) {
      set_npc_num(from.npc_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10405032::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10405032::CopyFrom(const Proto10405032& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10405032::IsInitialized() const {
  
  return true;
}

void Proto10405032::Swap(Proto10405032* other) {
  if (other != this) {
    std::swap(npc_num_, other->npc_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10405032::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10405032_descriptor_;
  metadata.reflection = Proto10405032_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50405032::kStatusFieldNumber;
const int Proto50405032::kChooseFieldNumber;
#endif  // !_MSC_VER

Proto50405032::Proto50405032()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50405032::InitAsDefaultInstance() {
}

Proto50405032::Proto50405032(const Proto50405032& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50405032::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  choose_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50405032::~Proto50405032() {
  SharedDtor();
}

void Proto50405032::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50405032::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50405032::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50405032_descriptor_;
}

const Proto50405032& Proto50405032::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50405032* Proto50405032::default_instance_ = NULL;

Proto50405032* Proto50405032::New() const {
  return new Proto50405032;
}

void Proto50405032::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
    choose_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50405032::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_choose;
        break;
      }
      
      // optional int32 choose = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_choose:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &choose_)));
          set_has_choose();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50405032::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  // optional int32 choose = 2;
  if (has_choose()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->choose(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50405032::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  // optional int32 choose = 2;
  if (has_choose()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->choose(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50405032::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int32 choose = 2;
    if (has_choose()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->choose());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50405032::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50405032* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50405032*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50405032::MergeFrom(const Proto50405032& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_choose()) {
      set_choose(from.choose());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50405032::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50405032::CopyFrom(const Proto50405032& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50405032::IsInitialized() const {
  
  return true;
}

void Proto50405032::Swap(Proto50405032* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(choose_, other->choose_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50405032::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50405032_descriptor_;
  metadata.reflection = Proto50405032_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80405017::kFirstNpcFieldNumber;
const int Proto80405017::kSecondNpcFieldNumber;
const int Proto80405017::kThirdNpcFieldNumber;
const int Proto80405017::kStatusFieldNumber;
const int Proto80405017::kAwardIdFieldNumber;
const int Proto80405017::kIsRightFieldNumber;
#endif  // !_MSC_VER

Proto80405017::Proto80405017()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80405017::InitAsDefaultInstance() {
}

Proto80405017::Proto80405017(const Proto80405017& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80405017::SharedCtor() {
  _cached_size_ = 0;
  first_npc_ = 0;
  second_npc_ = 0;
  third_npc_ = 0;
  status_ = 0;
  award_id_ = 0;
  is_right_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80405017::~Proto80405017() {
  SharedDtor();
}

void Proto80405017::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80405017::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80405017::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80405017_descriptor_;
}

const Proto80405017& Proto80405017::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto80405017* Proto80405017::default_instance_ = NULL;

Proto80405017* Proto80405017::New() const {
  return new Proto80405017;
}

void Proto80405017::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    first_npc_ = 0;
    second_npc_ = 0;
    third_npc_ = 0;
    status_ = 0;
    award_id_ = 0;
    is_right_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80405017::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 first_npc = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_npc_)));
          set_has_first_npc();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_second_npc;
        break;
      }
      
      // optional int32 second_npc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_npc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_npc_)));
          set_has_second_npc();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_third_npc;
        break;
      }
      
      // optional int32 third_npc = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_third_npc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &third_npc_)));
          set_has_third_npc();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_status;
        break;
      }
      
      // optional int32 status = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_award_id;
        break;
      }
      
      // optional int32 award_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_award_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &award_id_)));
          set_has_award_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_is_right;
        break;
      }
      
      // optional int32 is_right = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_right:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_right_)));
          set_has_is_right();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80405017::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 first_npc = 1;
  if (has_first_npc()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->first_npc(), output);
  }
  
  // optional int32 second_npc = 2;
  if (has_second_npc()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->second_npc(), output);
  }
  
  // optional int32 third_npc = 3;
  if (has_third_npc()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->third_npc(), output);
  }
  
  // optional int32 status = 4;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->status(), output);
  }
  
  // optional int32 award_id = 5;
  if (has_award_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->award_id(), output);
  }
  
  // optional int32 is_right = 6;
  if (has_is_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->is_right(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80405017::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 first_npc = 1;
  if (has_first_npc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->first_npc(), target);
  }
  
  // optional int32 second_npc = 2;
  if (has_second_npc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->second_npc(), target);
  }
  
  // optional int32 third_npc = 3;
  if (has_third_npc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->third_npc(), target);
  }
  
  // optional int32 status = 4;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->status(), target);
  }
  
  // optional int32 award_id = 5;
  if (has_award_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->award_id(), target);
  }
  
  // optional int32 is_right = 6;
  if (has_is_right()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->is_right(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80405017::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 first_npc = 1;
    if (has_first_npc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_npc());
    }
    
    // optional int32 second_npc = 2;
    if (has_second_npc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_npc());
    }
    
    // optional int32 third_npc = 3;
    if (has_third_npc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->third_npc());
    }
    
    // optional int32 status = 4;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int32 award_id = 5;
    if (has_award_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->award_id());
    }
    
    // optional int32 is_right = 6;
    if (has_is_right()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_right());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80405017::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80405017* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80405017*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80405017::MergeFrom(const Proto80405017& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_first_npc()) {
      set_first_npc(from.first_npc());
    }
    if (from.has_second_npc()) {
      set_second_npc(from.second_npc());
    }
    if (from.has_third_npc()) {
      set_third_npc(from.third_npc());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_award_id()) {
      set_award_id(from.award_id());
    }
    if (from.has_is_right()) {
      set_is_right(from.is_right());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80405017::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80405017::CopyFrom(const Proto80405017& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80405017::IsInitialized() const {
  
  return true;
}

void Proto80405017::Swap(Proto80405017* other) {
  if (other != this) {
    std::swap(first_npc_, other->first_npc_);
    std::swap(second_npc_, other->second_npc_);
    std::swap(third_npc_, other->third_npc_);
    std::swap(status_, other->status_);
    std::swap(award_id_, other->award_id_);
    std::swap(is_right_, other->is_right_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80405017::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80405017_descriptor_;
  metadata.reflection = Proto80405017_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10405034::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto10405034::Proto10405034()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10405034::InitAsDefaultInstance() {
}

Proto10405034::Proto10405034(const Proto10405034& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10405034::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10405034::~Proto10405034() {
  SharedDtor();
}

void Proto10405034::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10405034::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10405034::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10405034_descriptor_;
}

const Proto10405034& Proto10405034::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10405034* Proto10405034::default_instance_ = NULL;

Proto10405034* Proto10405034::New() const {
  return new Proto10405034;
}

void Proto10405034::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10405034::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10405034::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10405034::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10405034::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10405034::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10405034* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10405034*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10405034::MergeFrom(const Proto10405034& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10405034::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10405034::CopyFrom(const Proto10405034& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10405034::IsInitialized() const {
  
  return true;
}

void Proto10405034::Swap(Proto10405034* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10405034::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10405034_descriptor_;
  metadata.reflection = Proto10405034_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50405034::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto50405034::Proto50405034()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50405034::InitAsDefaultInstance() {
}

Proto50405034::Proto50405034(const Proto50405034& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50405034::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50405034::~Proto50405034() {
  SharedDtor();
}

void Proto50405034::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50405034::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50405034::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50405034_descriptor_;
}

const Proto50405034& Proto50405034::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50405034* Proto50405034::default_instance_ = NULL;

Proto50405034* Proto50405034::New() const {
  return new Proto50405034;
}

void Proto50405034::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50405034::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50405034::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50405034::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50405034::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50405034::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50405034* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50405034*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50405034::MergeFrom(const Proto50405034& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50405034::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50405034::CopyFrom(const Proto50405034& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50405034::IsInitialized() const {
  
  return true;
}

void Proto50405034::Swap(Proto50405034* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50405034::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50405034_descriptor_;
  metadata.reflection = Proto50405034_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400109::kSkillFieldNumber;
#endif  // !_MSC_VER

Proto80400109::Proto80400109()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400109::InitAsDefaultInstance() {
  skill_ = const_cast< ::ProtoSkill*>(&::ProtoSkill::default_instance());
}

Proto80400109::Proto80400109(const Proto80400109& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400109::SharedCtor() {
  _cached_size_ = 0;
  skill_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400109::~Proto80400109() {
  SharedDtor();
}

void Proto80400109::SharedDtor() {
  if (this != default_instance_) {
    delete skill_;
  }
}

void Proto80400109::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400109::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400109_descriptor_;
}

const Proto80400109& Proto80400109::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto80400109* Proto80400109::default_instance_ = NULL;

Proto80400109* Proto80400109::New() const {
  return new Proto80400109;
}

void Proto80400109::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_skill()) {
      if (skill_ != NULL) skill_->::ProtoSkill::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400109::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoSkill skill = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_skill()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400109::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoSkill skill = 1;
  if (has_skill()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->skill(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400109::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoSkill skill = 1;
  if (has_skill()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->skill(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400109::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoSkill skill = 1;
    if (has_skill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skill());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400109::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400109* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400109*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400109::MergeFrom(const Proto80400109& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill()) {
      mutable_skill()->::ProtoSkill::MergeFrom(from.skill());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400109::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400109::CopyFrom(const Proto80400109& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400109::IsInitialized() const {
  
  return true;
}

void Proto80400109::Swap(Proto80400109* other) {
  if (other != this) {
    std::swap(skill_, other->skill_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400109::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400109_descriptor_;
  metadata.reflection = Proto80400109_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100705::kRoleIdFieldNumber;
const int Proto10100705::kPlayerIdFieldNumber;
const int Proto10100705::kRankTypeFieldNumber;
const int Proto10100705::kRankNumFieldNumber;
#endif  // !_MSC_VER

Proto10100705::Proto10100705()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100705::InitAsDefaultInstance() {
}

Proto10100705::Proto10100705(const Proto10100705& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100705::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  player_id_ = GOOGLE_LONGLONG(0);
  rank_type_ = 0;
  rank_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100705::~Proto10100705() {
  SharedDtor();
}

void Proto10100705::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100705::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100705::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100705_descriptor_;
}

const Proto10100705& Proto10100705::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10100705* Proto10100705::default_instance_ = NULL;

Proto10100705* Proto10100705::New() const {
  return new Proto10100705;
}

void Proto10100705::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    player_id_ = GOOGLE_LONGLONG(0);
    rank_type_ = 0;
    rank_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100705::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_player_id;
        break;
      }
      
      // optional int64 player_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_id_)));
          set_has_player_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_rank_type;
        break;
      }
      
      // optional int32 rank_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_type_)));
          set_has_rank_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_rank_num;
        break;
      }
      
      // optional int32 rank_num = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_num_)));
          set_has_rank_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100705::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int64 player_id = 2;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->player_id(), output);
  }
  
  // optional int32 rank_type = 3;
  if (has_rank_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rank_type(), output);
  }
  
  // optional int32 rank_num = 4;
  if (has_rank_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->rank_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100705::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int64 player_id = 2;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->player_id(), target);
  }
  
  // optional int32 rank_type = 3;
  if (has_rank_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rank_type(), target);
  }
  
  // optional int32 rank_num = 4;
  if (has_rank_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->rank_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100705::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int64 player_id = 2;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_id());
    }
    
    // optional int32 rank_type = 3;
    if (has_rank_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_type());
    }
    
    // optional int32 rank_num = 4;
    if (has_rank_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100705::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100705* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100705*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100705::MergeFrom(const Proto10100705& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
    if (from.has_rank_type()) {
      set_rank_type(from.rank_type());
    }
    if (from.has_rank_num()) {
      set_rank_num(from.rank_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100705::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100705::CopyFrom(const Proto10100705& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100705::IsInitialized() const {
  
  return true;
}

void Proto10100705::Swap(Proto10100705* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(player_id_, other->player_id_);
    std::swap(rank_type_, other->rank_type_);
    std::swap(rank_num_, other->rank_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100705::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100705_descriptor_;
  metadata.reflection = Proto10100705_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100705::kStatusFieldNumber;
const int Proto50100705::kWorshipNumFieldNumber;
#endif  // !_MSC_VER

Proto50100705::Proto50100705()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100705::InitAsDefaultInstance() {
}

Proto50100705::Proto50100705(const Proto50100705& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100705::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  worship_num_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100705::~Proto50100705() {
  SharedDtor();
}

void Proto50100705::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100705::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100705::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100705_descriptor_;
}

const Proto50100705& Proto50100705::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50100705* Proto50100705::default_instance_ = NULL;

Proto50100705* Proto50100705::New() const {
  return new Proto50100705;
}

void Proto50100705::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
    worship_num_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100705::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_worship_num;
        break;
      }
      
      // optional int64 worship_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_worship_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &worship_num_)));
          set_has_worship_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100705::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  // optional int64 worship_num = 2;
  if (has_worship_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->worship_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100705::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  // optional int64 worship_num = 2;
  if (has_worship_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->worship_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100705::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int64 worship_num = 2;
    if (has_worship_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->worship_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100705::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100705* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100705*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100705::MergeFrom(const Proto50100705& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_worship_num()) {
      set_worship_num(from.worship_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100705::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100705::CopyFrom(const Proto50100705& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100705::IsInitialized() const {
  
  return true;
}

void Proto50100705::Swap(Proto50100705* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(worship_num_, other->worship_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100705::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100705_descriptor_;
  metadata.reflection = Proto50100705_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400351::kLwarDetailFieldNumber;
const int Proto50400351::kTotalLeagueRankFieldNumber;
const int Proto50400351::kTotalMyLeagueFieldNumber;
#endif  // !_MSC_VER

Proto50400351::Proto50400351()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400351::InitAsDefaultInstance() {
  total_my_league_ = const_cast< ::ProtoLeagueRankInfo*>(&::ProtoLeagueRankInfo::default_instance());
}

Proto50400351::Proto50400351(const Proto50400351& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400351::SharedCtor() {
  _cached_size_ = 0;
  total_my_league_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400351::~Proto50400351() {
  SharedDtor();
}

void Proto50400351::SharedDtor() {
  if (this != default_instance_) {
    delete total_my_league_;
  }
}

void Proto50400351::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400351::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400351_descriptor_;
}

const Proto50400351& Proto50400351::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50400351* Proto50400351::default_instance_ = NULL;

Proto50400351* Proto50400351::New() const {
  return new Proto50400351;
}

void Proto50400351::Clear() {
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (has_total_my_league()) {
      if (total_my_league_ != NULL) total_my_league_->::ProtoLeagueRankInfo::Clear();
    }
  }
  lwar_detail_.Clear();
  total_league_rank_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400351::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoLWarInfo lwar_detail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lwar_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lwar_detail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_lwar_detail;
        if (input->ExpectTag(18)) goto parse_total_league_rank;
        break;
      }
      
      // repeated .ProtoLeagueRankInfo total_league_rank = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_total_league_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_total_league_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_total_league_rank;
        if (input->ExpectTag(26)) goto parse_total_my_league;
        break;
      }
      
      // optional .ProtoLeagueRankInfo total_my_league = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_total_my_league:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_total_my_league()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400351::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoLWarInfo lwar_detail = 1;
  for (int i = 0; i < this->lwar_detail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->lwar_detail(i), output);
  }
  
  // repeated .ProtoLeagueRankInfo total_league_rank = 2;
  for (int i = 0; i < this->total_league_rank_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->total_league_rank(i), output);
  }
  
  // optional .ProtoLeagueRankInfo total_my_league = 3;
  if (has_total_my_league()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->total_my_league(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400351::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoLWarInfo lwar_detail = 1;
  for (int i = 0; i < this->lwar_detail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->lwar_detail(i), target);
  }
  
  // repeated .ProtoLeagueRankInfo total_league_rank = 2;
  for (int i = 0; i < this->total_league_rank_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->total_league_rank(i), target);
  }
  
  // optional .ProtoLeagueRankInfo total_my_league = 3;
  if (has_total_my_league()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->total_my_league(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400351::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional .ProtoLeagueRankInfo total_my_league = 3;
    if (has_total_my_league()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->total_my_league());
    }
    
  }
  // repeated .ProtoLWarInfo lwar_detail = 1;
  total_size += 1 * this->lwar_detail_size();
  for (int i = 0; i < this->lwar_detail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lwar_detail(i));
  }
  
  // repeated .ProtoLeagueRankInfo total_league_rank = 2;
  total_size += 1 * this->total_league_rank_size();
  for (int i = 0; i < this->total_league_rank_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->total_league_rank(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400351::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400351* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400351*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400351::MergeFrom(const Proto50400351& from) {
  GOOGLE_CHECK_NE(&from, this);
  lwar_detail_.MergeFrom(from.lwar_detail_);
  total_league_rank_.MergeFrom(from.total_league_rank_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_total_my_league()) {
      mutable_total_my_league()->::ProtoLeagueRankInfo::MergeFrom(from.total_my_league());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400351::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400351::CopyFrom(const Proto50400351& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400351::IsInitialized() const {
  
  return true;
}

void Proto50400351::Swap(Proto50400351* other) {
  if (other != this) {
    lwar_detail_.Swap(&other->lwar_detail_);
    total_league_rank_.Swap(&other->total_league_rank_);
    std::swap(total_my_league_, other->total_my_league_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400351::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400351_descriptor_;
  metadata.reflection = Proto50400351_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400385::kSpaceIdFieldNumber;
const int Proto80400385::kTotalSpaceFieldNumber;
const int Proto80400385::kBossIdFieldNumber;
const int Proto80400385::kBossNameFieldNumber;
const int Proto80400385::kTotalBloodFieldNumber;
const int Proto80400385::kBossBloodFieldNumber;
const int Proto80400385::kMyScoreFieldNumber;
const int Proto80400385::kLeagueScoreFieldNumber;
const int Proto80400385::kLeagueRankFieldNumber;
const int Proto80400385::kLeftTimeFieldNumber;
#endif  // !_MSC_VER

Proto80400385::Proto80400385()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400385::InitAsDefaultInstance() {
}

Proto80400385::Proto80400385(const Proto80400385& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400385::SharedCtor() {
  _cached_size_ = 0;
  space_id_ = 0;
  boss_id_ = GOOGLE_LONGLONG(0);
  boss_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  total_blood_ = 0;
  boss_blood_ = 0;
  my_score_ = 0;
  league_score_ = 0;
  league_rank_ = 0;
  left_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400385::~Proto80400385() {
  SharedDtor();
}

void Proto80400385::SharedDtor() {
  if (boss_name_ != &::google::protobuf::internal::kEmptyString) {
    delete boss_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400385::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400385::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400385_descriptor_;
}

const Proto80400385& Proto80400385::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto80400385* Proto80400385::default_instance_ = NULL;

Proto80400385* Proto80400385::New() const {
  return new Proto80400385;
}

void Proto80400385::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    space_id_ = 0;
    boss_id_ = GOOGLE_LONGLONG(0);
    if (has_boss_name()) {
      if (boss_name_ != &::google::protobuf::internal::kEmptyString) {
        boss_name_->clear();
      }
    }
    total_blood_ = 0;
    boss_blood_ = 0;
    my_score_ = 0;
    league_score_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    league_rank_ = 0;
    left_time_ = 0;
  }
  total_space_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400385::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 space_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &space_id_)));
          set_has_space_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_space;
        break;
      }
      
      // repeated int32 total_space = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_space:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_total_space())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_total_space())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_space;
        if (input->ExpectTag(24)) goto parse_boss_id;
        break;
      }
      
      // optional int64 boss_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_boss_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &boss_id_)));
          set_has_boss_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_boss_name;
        break;
      }
      
      // optional string boss_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_boss_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_boss_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->boss_name().data(), this->boss_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(41)) goto parse_total_blood;
        break;
      }
      
      // optional double total_blood = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_total_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &total_blood_)));
          set_has_total_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(49)) goto parse_boss_blood;
        break;
      }
      
      // optional double boss_blood = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_boss_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &boss_blood_)));
          set_has_boss_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_my_score;
        break;
      }
      
      // optional int32 my_score = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_my_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &my_score_)));
          set_has_my_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_league_score;
        break;
      }
      
      // optional int32 league_score = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &league_score_)));
          set_has_league_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_league_rank;
        break;
      }
      
      // optional int32 league_rank = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &league_rank_)));
          set_has_league_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400385::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 space_id = 1;
  if (has_space_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->space_id(), output);
  }
  
  // repeated int32 total_space = 2;
  for (int i = 0; i < this->total_space_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->total_space(i), output);
  }
  
  // optional int64 boss_id = 3;
  if (has_boss_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->boss_id(), output);
  }
  
  // optional string boss_name = 4;
  if (has_boss_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->boss_name().data(), this->boss_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->boss_name(), output);
  }
  
  // optional double total_blood = 5;
  if (has_total_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->total_blood(), output);
  }
  
  // optional double boss_blood = 6;
  if (has_boss_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->boss_blood(), output);
  }
  
  // optional int32 my_score = 7;
  if (has_my_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->my_score(), output);
  }
  
  // optional int32 league_score = 8;
  if (has_league_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->league_score(), output);
  }
  
  // optional int32 league_rank = 9;
  if (has_league_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->league_rank(), output);
  }
  
  // optional int32 left_time = 10;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->left_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400385::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 space_id = 1;
  if (has_space_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->space_id(), target);
  }
  
  // repeated int32 total_space = 2;
  for (int i = 0; i < this->total_space_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->total_space(i), target);
  }
  
  // optional int64 boss_id = 3;
  if (has_boss_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->boss_id(), target);
  }
  
  // optional string boss_name = 4;
  if (has_boss_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->boss_name().data(), this->boss_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->boss_name(), target);
  }
  
  // optional double total_blood = 5;
  if (has_total_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->total_blood(), target);
  }
  
  // optional double boss_blood = 6;
  if (has_boss_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->boss_blood(), target);
  }
  
  // optional int32 my_score = 7;
  if (has_my_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->my_score(), target);
  }
  
  // optional int32 league_score = 8;
  if (has_league_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->league_score(), target);
  }
  
  // optional int32 league_rank = 9;
  if (has_league_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->league_rank(), target);
  }
  
  // optional int32 left_time = 10;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->left_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400385::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 space_id = 1;
    if (has_space_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->space_id());
    }
    
    // optional int64 boss_id = 3;
    if (has_boss_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->boss_id());
    }
    
    // optional string boss_name = 4;
    if (has_boss_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->boss_name());
    }
    
    // optional double total_blood = 5;
    if (has_total_blood()) {
      total_size += 1 + 8;
    }
    
    // optional double boss_blood = 6;
    if (has_boss_blood()) {
      total_size += 1 + 8;
    }
    
    // optional int32 my_score = 7;
    if (has_my_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->my_score());
    }
    
    // optional int32 league_score = 8;
    if (has_league_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->league_score());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 league_rank = 9;
    if (has_league_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->league_rank());
    }
    
    // optional int32 left_time = 10;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
  }
  // repeated int32 total_space = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->total_space_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->total_space(i));
    }
    total_size += 1 * this->total_space_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400385::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400385* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400385*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400385::MergeFrom(const Proto80400385& from) {
  GOOGLE_CHECK_NE(&from, this);
  total_space_.MergeFrom(from.total_space_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_space_id()) {
      set_space_id(from.space_id());
    }
    if (from.has_boss_id()) {
      set_boss_id(from.boss_id());
    }
    if (from.has_boss_name()) {
      set_boss_name(from.boss_name());
    }
    if (from.has_total_blood()) {
      set_total_blood(from.total_blood());
    }
    if (from.has_boss_blood()) {
      set_boss_blood(from.boss_blood());
    }
    if (from.has_my_score()) {
      set_my_score(from.my_score());
    }
    if (from.has_league_score()) {
      set_league_score(from.league_score());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_league_rank()) {
      set_league_rank(from.league_rank());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400385::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400385::CopyFrom(const Proto80400385& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400385::IsInitialized() const {
  
  return true;
}

void Proto80400385::Swap(Proto80400385* other) {
  if (other != this) {
    std::swap(space_id_, other->space_id_);
    total_space_.Swap(&other->total_space_);
    std::swap(boss_id_, other->boss_id_);
    std::swap(boss_name_, other->boss_name_);
    std::swap(total_blood_, other->total_blood_);
    std::swap(boss_blood_, other->boss_blood_);
    std::swap(my_score_, other->my_score_);
    std::swap(league_score_, other->league_score_);
    std::swap(league_rank_, other->league_rank_);
    std::swap(left_time_, other->left_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400385::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400385_descriptor_;
  metadata.reflection = Proto80400385_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400821::kPartFieldNumber;
const int Proto50400821::kStageFieldNumber;
const int Proto50400821::kScoreFieldNumber;
const int Proto50400821::kAttendTimesFieldNumber;
const int Proto50400821::kGetExpolitFieldNumber;
const int Proto50400821::kDrawFlagFieldNumber;
const int Proto50400821::kWinTimesFieldNumber;
const int Proto50400821::kDrawWinFieldNumber;
const int Proto50400821::kStateFieldNumber;
const int Proto50400821::kLeftTimeFieldNumber;
const int Proto50400821::kLeftDayFieldNumber;
#endif  // !_MSC_VER

Proto50400821::Proto50400821()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400821::InitAsDefaultInstance() {
}

Proto50400821::Proto50400821(const Proto50400821& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400821::SharedCtor() {
  _cached_size_ = 0;
  part_ = 0;
  stage_ = 0;
  score_ = 0;
  attend_times_ = 0;
  get_expolit_ = 0;
  draw_flag_ = 0;
  win_times_ = 0;
  state_ = 0;
  left_time_ = 0;
  left_day_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400821::~Proto50400821() {
  SharedDtor();
}

void Proto50400821::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400821::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400821::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400821_descriptor_;
}

const Proto50400821& Proto50400821::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50400821* Proto50400821::default_instance_ = NULL;

Proto50400821* Proto50400821::New() const {
  return new Proto50400821;
}

void Proto50400821::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    part_ = 0;
    stage_ = 0;
    score_ = 0;
    attend_times_ = 0;
    get_expolit_ = 0;
    draw_flag_ = 0;
    win_times_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    state_ = 0;
    left_time_ = 0;
    left_day_ = 0;
  }
  draw_win_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400821::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 part = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &part_)));
          set_has_part();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_stage;
        break;
      }
      
      // optional int32 stage = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_)));
          set_has_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_score;
        break;
      }
      
      // optional int32 score = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_attend_times;
        break;
      }
      
      // optional int32 attend_times = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attend_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attend_times_)));
          set_has_attend_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_get_expolit;
        break;
      }
      
      // optional int32 get_expolit = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_get_expolit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &get_expolit_)));
          set_has_get_expolit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_draw_flag;
        break;
      }
      
      // optional int32 draw_flag = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_draw_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &draw_flag_)));
          set_has_draw_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_win_times;
        break;
      }
      
      // optional int32 win_times = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_win_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &win_times_)));
          set_has_win_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_draw_win;
        break;
      }
      
      // repeated int32 draw_win = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_draw_win:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64, input, this->mutable_draw_win())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_draw_win())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_draw_win;
        if (input->ExpectTag(72)) goto parse_state;
        break;
      }
      
      // optional int32 state = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_left_day;
        break;
      }
      
      // optional int32 left_day = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_day:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_day_)));
          set_has_left_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400821::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 part = 1;
  if (has_part()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->part(), output);
  }
  
  // optional int32 stage = 2;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stage(), output);
  }
  
  // optional int32 score = 3;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->score(), output);
  }
  
  // optional int32 attend_times = 4;
  if (has_attend_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->attend_times(), output);
  }
  
  // optional int32 get_expolit = 5;
  if (has_get_expolit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->get_expolit(), output);
  }
  
  // optional int32 draw_flag = 6;
  if (has_draw_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->draw_flag(), output);
  }
  
  // optional int32 win_times = 7;
  if (has_win_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->win_times(), output);
  }
  
  // repeated int32 draw_win = 8;
  for (int i = 0; i < this->draw_win_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->draw_win(i), output);
  }
  
  // optional int32 state = 9;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->state(), output);
  }
  
  // optional int32 left_time = 10;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->left_time(), output);
  }
  
  // optional int32 left_day = 11;
  if (has_left_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->left_day(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400821::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 part = 1;
  if (has_part()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->part(), target);
  }
  
  // optional int32 stage = 2;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stage(), target);
  }
  
  // optional int32 score = 3;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->score(), target);
  }
  
  // optional int32 attend_times = 4;
  if (has_attend_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->attend_times(), target);
  }
  
  // optional int32 get_expolit = 5;
  if (has_get_expolit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->get_expolit(), target);
  }
  
  // optional int32 draw_flag = 6;
  if (has_draw_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->draw_flag(), target);
  }
  
  // optional int32 win_times = 7;
  if (has_win_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->win_times(), target);
  }
  
  // repeated int32 draw_win = 8;
  for (int i = 0; i < this->draw_win_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(8, this->draw_win(i), target);
  }
  
  // optional int32 state = 9;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->state(), target);
  }
  
  // optional int32 left_time = 10;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->left_time(), target);
  }
  
  // optional int32 left_day = 11;
  if (has_left_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->left_day(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400821::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 part = 1;
    if (has_part()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->part());
    }
    
    // optional int32 stage = 2;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stage());
    }
    
    // optional int32 score = 3;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }
    
    // optional int32 attend_times = 4;
    if (has_attend_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attend_times());
    }
    
    // optional int32 get_expolit = 5;
    if (has_get_expolit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->get_expolit());
    }
    
    // optional int32 draw_flag = 6;
    if (has_draw_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->draw_flag());
    }
    
    // optional int32 win_times = 7;
    if (has_win_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->win_times());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 state = 9;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
    // optional int32 left_time = 10;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 left_day = 11;
    if (has_left_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_day());
    }
    
  }
  // repeated int32 draw_win = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->draw_win_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->draw_win(i));
    }
    total_size += 1 * this->draw_win_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400821::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400821* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400821*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400821::MergeFrom(const Proto50400821& from) {
  GOOGLE_CHECK_NE(&from, this);
  draw_win_.MergeFrom(from.draw_win_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_part()) {
      set_part(from.part());
    }
    if (from.has_stage()) {
      set_stage(from.stage());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_attend_times()) {
      set_attend_times(from.attend_times());
    }
    if (from.has_get_expolit()) {
      set_get_expolit(from.get_expolit());
    }
    if (from.has_draw_flag()) {
      set_draw_flag(from.draw_flag());
    }
    if (from.has_win_times()) {
      set_win_times(from.win_times());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_left_day()) {
      set_left_day(from.left_day());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400821::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400821::CopyFrom(const Proto50400821& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400821::IsInitialized() const {
  
  return true;
}

void Proto50400821::Swap(Proto50400821* other) {
  if (other != this) {
    std::swap(part_, other->part_);
    std::swap(stage_, other->stage_);
    std::swap(score_, other->score_);
    std::swap(attend_times_, other->attend_times_);
    std::swap(get_expolit_, other->get_expolit_);
    std::swap(draw_flag_, other->draw_flag_);
    std::swap(win_times_, other->win_times_);
    draw_win_.Swap(&other->draw_win_);
    std::swap(state_, other->state_);
    std::swap(left_time_, other->left_time_);
    std::swap(left_day_, other->left_day_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400821::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400821_descriptor_;
  metadata.reflection = Proto50400821_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400823::kPageFieldNumber;
#endif  // !_MSC_VER

Proto10400823::Proto10400823()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400823::InitAsDefaultInstance() {
}

Proto10400823::Proto10400823(const Proto10400823& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400823::SharedCtor() {
  _cached_size_ = 0;
  page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400823::~Proto10400823() {
  SharedDtor();
}

void Proto10400823::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400823::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400823::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400823_descriptor_;
}

const Proto10400823& Proto10400823::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10400823* Proto10400823::default_instance_ = NULL;

Proto10400823* Proto10400823::New() const {
  return new Proto10400823;
}

void Proto10400823::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400823::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
          set_has_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400823::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page = 1;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400823::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page = 1;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400823::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page = 1;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400823::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400823* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400823*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400823::MergeFrom(const Proto10400823& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page()) {
      set_page(from.page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400823::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400823::CopyFrom(const Proto10400823& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400823::IsInitialized() const {
  
  return true;
}

void Proto10400823::Swap(Proto10400823* other) {
  if (other != this) {
    std::swap(page_, other->page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400823::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400823_descriptor_;
  metadata.reflection = Proto10400823_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400823::kPageFieldNumber;
const int Proto50400823::kTotalFieldNumber;
const int Proto50400823::kRankListFieldNumber;
const int Proto50400823::kSelfFieldNumber;
#endif  // !_MSC_VER

Proto50400823::Proto50400823()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400823::InitAsDefaultInstance() {
  self_ = const_cast< ::ProtoLMRole*>(&::ProtoLMRole::default_instance());
}

Proto50400823::Proto50400823(const Proto50400823& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400823::SharedCtor() {
  _cached_size_ = 0;
  page_ = 0;
  total_ = 0;
  self_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400823::~Proto50400823() {
  SharedDtor();
}

void Proto50400823::SharedDtor() {
  if (this != default_instance_) {
    delete self_;
  }
}

void Proto50400823::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400823::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400823_descriptor_;
}

const Proto50400823& Proto50400823::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50400823* Proto50400823::default_instance_ = NULL;

Proto50400823* Proto50400823::New() const {
  return new Proto50400823;
}

void Proto50400823::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_ = 0;
    total_ = 0;
    if (has_self()) {
      if (self_ != NULL) self_->::ProtoLMRole::Clear();
    }
  }
  rank_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400823::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
          set_has_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total;
        break;
      }
      
      // optional int32 total = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_)));
          set_has_total();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rank_list;
        break;
      }
      
      // repeated .ProtoLMRole rank_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rank_list;
        if (input->ExpectTag(34)) goto parse_self;
        break;
      }
      
      // optional .ProtoLMRole self = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_self:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400823::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page = 1;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page(), output);
  }
  
  // optional int32 total = 2;
  if (has_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total(), output);
  }
  
  // repeated .ProtoLMRole rank_list = 3;
  for (int i = 0; i < this->rank_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rank_list(i), output);
  }
  
  // optional .ProtoLMRole self = 4;
  if (has_self()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->self(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400823::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page = 1;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page(), target);
  }
  
  // optional int32 total = 2;
  if (has_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total(), target);
  }
  
  // repeated .ProtoLMRole rank_list = 3;
  for (int i = 0; i < this->rank_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rank_list(i), target);
  }
  
  // optional .ProtoLMRole self = 4;
  if (has_self()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->self(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400823::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page = 1;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page());
    }
    
    // optional int32 total = 2;
    if (has_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total());
    }
    
    // optional .ProtoLMRole self = 4;
    if (has_self()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->self());
    }
    
  }
  // repeated .ProtoLMRole rank_list = 3;
  total_size += 1 * this->rank_list_size();
  for (int i = 0; i < this->rank_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400823::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400823* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400823*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400823::MergeFrom(const Proto50400823& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_list_.MergeFrom(from.rank_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page()) {
      set_page(from.page());
    }
    if (from.has_total()) {
      set_total(from.total());
    }
    if (from.has_self()) {
      mutable_self()->::ProtoLMRole::MergeFrom(from.self());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400823::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400823::CopyFrom(const Proto50400823& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400823::IsInitialized() const {
  
  return true;
}

void Proto50400823::Swap(Proto50400823* other) {
  if (other != this) {
    std::swap(page_, other->page_);
    std::swap(total_, other->total_);
    rank_list_.Swap(&other->rank_list_);
    std::swap(self_, other->self_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400823::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400823_descriptor_;
  metadata.reflection = Proto50400823_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10401021::kBossSceneIdFieldNumber;
const int Proto10401021::kPosXFieldNumber;
const int Proto10401021::kPosYFieldNumber;
const int Proto10401021::kSceneIdFieldNumber;
const int Proto10401021::kUseFlyFieldNumber;
#endif  // !_MSC_VER

Proto10401021::Proto10401021()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10401021::InitAsDefaultInstance() {
}

Proto10401021::Proto10401021(const Proto10401021& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10401021::SharedCtor() {
  _cached_size_ = 0;
  boss_scene_id_ = 0;
  pos_x_ = 0;
  pos_y_ = 0;
  scene_id_ = 0;
  use_fly_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10401021::~Proto10401021() {
  SharedDtor();
}

void Proto10401021::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10401021::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10401021::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10401021_descriptor_;
}

const Proto10401021& Proto10401021::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10401021* Proto10401021::default_instance_ = NULL;

Proto10401021* Proto10401021::New() const {
  return new Proto10401021;
}

void Proto10401021::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    boss_scene_id_ = 0;
    pos_x_ = 0;
    pos_y_ = 0;
    scene_id_ = 0;
    use_fly_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10401021::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 boss_scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boss_scene_id_)));
          set_has_boss_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pos_x;
        break;
      }
      
      // optional int32 pos_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_x_)));
          set_has_pos_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pos_y;
        break;
      }
      
      // optional int32 pos_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pos_y_)));
          set_has_pos_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_use_fly;
        break;
      }
      
      // optional int32 use_fly = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_use_fly:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &use_fly_)));
          set_has_use_fly();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10401021::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 boss_scene_id = 1;
  if (has_boss_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->boss_scene_id(), output);
  }
  
  // optional int32 pos_x = 2;
  if (has_pos_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pos_x(), output);
  }
  
  // optional int32 pos_y = 3;
  if (has_pos_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pos_y(), output);
  }
  
  // optional int32 scene_id = 4;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->scene_id(), output);
  }
  
  // optional int32 use_fly = 5;
  if (has_use_fly()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->use_fly(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10401021::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 boss_scene_id = 1;
  if (has_boss_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->boss_scene_id(), target);
  }
  
  // optional int32 pos_x = 2;
  if (has_pos_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pos_x(), target);
  }
  
  // optional int32 pos_y = 3;
  if (has_pos_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pos_y(), target);
  }
  
  // optional int32 scene_id = 4;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->scene_id(), target);
  }
  
  // optional int32 use_fly = 5;
  if (has_use_fly()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->use_fly(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10401021::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 boss_scene_id = 1;
    if (has_boss_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boss_scene_id());
    }
    
    // optional int32 pos_x = 2;
    if (has_pos_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_x());
    }
    
    // optional int32 pos_y = 3;
    if (has_pos_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pos_y());
    }
    
    // optional int32 scene_id = 4;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 use_fly = 5;
    if (has_use_fly()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->use_fly());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10401021::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10401021* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10401021*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10401021::MergeFrom(const Proto10401021& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_boss_scene_id()) {
      set_boss_scene_id(from.boss_scene_id());
    }
    if (from.has_pos_x()) {
      set_pos_x(from.pos_x());
    }
    if (from.has_pos_y()) {
      set_pos_y(from.pos_y());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_use_fly()) {
      set_use_fly(from.use_fly());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10401021::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10401021::CopyFrom(const Proto10401021& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10401021::IsInitialized() const {
  
  return true;
}

void Proto10401021::Swap(Proto10401021* other) {
  if (other != this) {
    std::swap(boss_scene_id_, other->boss_scene_id_);
    std::swap(pos_x_, other->pos_x_);
    std::swap(pos_y_, other->pos_y_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(use_fly_, other->use_fly_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10401021::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10401021_descriptor_;
  metadata.reflection = Proto10401021_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401022::kWbInfoFieldNumber;
const int Proto50401022::kRefreshTickFieldNumber;
#endif  // !_MSC_VER

Proto50401022::Proto50401022()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401022::InitAsDefaultInstance() {
}

Proto50401022::Proto50401022(const Proto50401022& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401022::SharedCtor() {
  _cached_size_ = 0;
  refresh_tick_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401022::~Proto50401022() {
  SharedDtor();
}

void Proto50401022::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50401022::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401022::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401022_descriptor_;
}

const Proto50401022& Proto50401022::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50401022* Proto50401022::default_instance_ = NULL;

Proto50401022* Proto50401022::New() const {
  return new Proto50401022;
}

void Proto50401022::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    refresh_tick_ = 0;
  }
  wb_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401022::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoWorldBossInfo wb_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_wb_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_wb_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_wb_info;
        if (input->ExpectTag(16)) goto parse_refresh_tick;
        break;
      }
      
      // optional int32 refresh_tick = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refresh_tick_)));
          set_has_refresh_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401022::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoWorldBossInfo wb_info = 1;
  for (int i = 0; i < this->wb_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->wb_info(i), output);
  }
  
  // optional int32 refresh_tick = 2;
  if (has_refresh_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->refresh_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401022::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoWorldBossInfo wb_info = 1;
  for (int i = 0; i < this->wb_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->wb_info(i), target);
  }
  
  // optional int32 refresh_tick = 2;
  if (has_refresh_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->refresh_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401022::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 refresh_tick = 2;
    if (has_refresh_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refresh_tick());
    }
    
  }
  // repeated .ProtoWorldBossInfo wb_info = 1;
  total_size += 1 * this->wb_info_size();
  for (int i = 0; i < this->wb_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->wb_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401022::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401022* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401022*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401022::MergeFrom(const Proto50401022& from) {
  GOOGLE_CHECK_NE(&from, this);
  wb_info_.MergeFrom(from.wb_info_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_refresh_tick()) {
      set_refresh_tick(from.refresh_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401022::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401022::CopyFrom(const Proto50401022& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401022::IsInitialized() const {
  
  return true;
}

void Proto50401022::Swap(Proto50401022* other) {
  if (other != this) {
    wb_info_.Swap(&other->wb_info_);
    std::swap(refresh_tick_, other->refresh_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401022::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401022_descriptor_;
  metadata.reflection = Proto50401022_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80401021::kRankListFieldNumber;
const int Proto80401021::kSceneIdFieldNumber;
const int Proto80401021::kBossIdFieldNumber;
const int Proto80401021::kLeftBloodFieldNumber;
const int Proto80401021::kStatusFieldNumber;
const int Proto80401021::kRefreshTickFieldNumber;
#endif  // !_MSC_VER

Proto80401021::Proto80401021()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80401021::InitAsDefaultInstance() {
}

Proto80401021::Proto80401021(const Proto80401021& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80401021::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  boss_id_ = GOOGLE_LONGLONG(0);
  left_blood_ = 0;
  status_ = 0;
  refresh_tick_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80401021::~Proto80401021() {
  SharedDtor();
}

void Proto80401021::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80401021::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80401021::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80401021_descriptor_;
}

const Proto80401021& Proto80401021::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto80401021* Proto80401021::default_instance_ = NULL;

Proto80401021* Proto80401021::New() const {
  return new Proto80401021;
}

void Proto80401021::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    scene_id_ = 0;
    boss_id_ = GOOGLE_LONGLONG(0);
    left_blood_ = 0;
    status_ = 0;
    refresh_tick_ = 0;
  }
  rank_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80401021::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoWorldBossRank rank_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rank_list;
        if (input->ExpectTag(16)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_boss_id;
        break;
      }
      
      // optional int64 boss_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_boss_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &boss_id_)));
          set_has_boss_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(33)) goto parse_left_blood;
        break;
      }
      
      // optional double left_blood = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_left_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &left_blood_)));
          set_has_left_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_status;
        break;
      }
      
      // optional int32 status = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_refresh_tick;
        break;
      }
      
      // optional int32 refresh_tick = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refresh_tick_)));
          set_has_refresh_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80401021::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoWorldBossRank rank_list = 1;
  for (int i = 0; i < this->rank_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rank_list(i), output);
  }
  
  // optional int32 scene_id = 2;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->scene_id(), output);
  }
  
  // optional int64 boss_id = 3;
  if (has_boss_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->boss_id(), output);
  }
  
  // optional double left_blood = 4;
  if (has_left_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->left_blood(), output);
  }
  
  // optional int32 status = 5;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->status(), output);
  }
  
  // optional int32 refresh_tick = 6;
  if (has_refresh_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->refresh_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80401021::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoWorldBossRank rank_list = 1;
  for (int i = 0; i < this->rank_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rank_list(i), target);
  }
  
  // optional int32 scene_id = 2;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->scene_id(), target);
  }
  
  // optional int64 boss_id = 3;
  if (has_boss_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->boss_id(), target);
  }
  
  // optional double left_blood = 4;
  if (has_left_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->left_blood(), target);
  }
  
  // optional int32 status = 5;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->status(), target);
  }
  
  // optional int32 refresh_tick = 6;
  if (has_refresh_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->refresh_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80401021::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 scene_id = 2;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int64 boss_id = 3;
    if (has_boss_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->boss_id());
    }
    
    // optional double left_blood = 4;
    if (has_left_blood()) {
      total_size += 1 + 8;
    }
    
    // optional int32 status = 5;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int32 refresh_tick = 6;
    if (has_refresh_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refresh_tick());
    }
    
  }
  // repeated .ProtoWorldBossRank rank_list = 1;
  total_size += 1 * this->rank_list_size();
  for (int i = 0; i < this->rank_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80401021::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80401021* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80401021*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80401021::MergeFrom(const Proto80401021& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_list_.MergeFrom(from.rank_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_boss_id()) {
      set_boss_id(from.boss_id());
    }
    if (from.has_left_blood()) {
      set_left_blood(from.left_blood());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_refresh_tick()) {
      set_refresh_tick(from.refresh_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80401021::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80401021::CopyFrom(const Proto80401021& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80401021::IsInitialized() const {
  
  return true;
}

void Proto80401021::Swap(Proto80401021* other) {
  if (other != this) {
    rank_list_.Swap(&other->rank_list_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(boss_id_, other->boss_id_);
    std::swap(left_blood_, other->left_blood_);
    std::swap(status_, other->status_);
    std::swap(refresh_tick_, other->refresh_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80401021::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80401021_descriptor_;
  metadata.reflection = Proto80401021_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10401023::kSceneIdFieldNumber;
#endif  // !_MSC_VER

Proto10401023::Proto10401023()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10401023::InitAsDefaultInstance() {
}

Proto10401023::Proto10401023(const Proto10401023& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10401023::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10401023::~Proto10401023() {
  SharedDtor();
}

void Proto10401023::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10401023::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10401023::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10401023_descriptor_;
}

const Proto10401023& Proto10401023::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10401023* Proto10401023::default_instance_ = NULL;

Proto10401023* Proto10401023::New() const {
  return new Proto10401023;
}

void Proto10401023::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10401023::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10401023::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10401023::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10401023::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10401023::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10401023* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10401023*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10401023::MergeFrom(const Proto10401023& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10401023::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10401023::CopyFrom(const Proto10401023& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10401023::IsInitialized() const {
  
  return true;
}

void Proto10401023::Swap(Proto10401023* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10401023::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10401023_descriptor_;
  metadata.reflection = Proto10401023_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401023::kGetMoneyFieldNumber;
#endif  // !_MSC_VER

Proto50401023::Proto50401023()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401023::InitAsDefaultInstance() {
}

Proto50401023::Proto50401023(const Proto50401023& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401023::SharedCtor() {
  _cached_size_ = 0;
  get_money_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401023::~Proto50401023() {
  SharedDtor();
}

void Proto50401023::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50401023::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401023::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401023_descriptor_;
}

const Proto50401023& Proto50401023::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50401023* Proto50401023::default_instance_ = NULL;

Proto50401023* Proto50401023::New() const {
  return new Proto50401023;
}

void Proto50401023::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    get_money_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401023::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 get_money = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &get_money_)));
          set_has_get_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401023::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 get_money = 1;
  if (has_get_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->get_money(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401023::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 get_money = 1;
  if (has_get_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->get_money(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401023::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 get_money = 1;
    if (has_get_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->get_money());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401023::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401023* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401023*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401023::MergeFrom(const Proto50401023& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_get_money()) {
      set_get_money(from.get_money());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401023::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401023::CopyFrom(const Proto50401023& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401023::IsInitialized() const {
  
  return true;
}

void Proto50401023::Swap(Proto50401023* other) {
  if (other != this) {
    std::swap(get_money_, other->get_money_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401023::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401023_descriptor_;
  metadata.reflection = Proto50401023_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80401022::kRoleNameFieldNumber;
const int Proto80401022::kSceneIdFieldNumber;
const int Proto80401022::kTotalMoneyFieldNumber;
const int Proto80401022::kTotalPlayerFieldNumber;
#endif  // !_MSC_VER

Proto80401022::Proto80401022()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80401022::InitAsDefaultInstance() {
}

Proto80401022::Proto80401022(const Proto80401022& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80401022::SharedCtor() {
  _cached_size_ = 0;
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  scene_id_ = 0;
  total_money_ = 0;
  total_player_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80401022::~Proto80401022() {
  SharedDtor();
}

void Proto80401022::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80401022::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80401022::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80401022_descriptor_;
}

const Proto80401022& Proto80401022::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto80401022* Proto80401022::default_instance_ = NULL;

Proto80401022* Proto80401022::New() const {
  return new Proto80401022;
}

void Proto80401022::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
    scene_id_ = 0;
    total_money_ = 0;
    total_player_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80401022::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string role_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_total_money;
        break;
      }
      
      // optional int32 total_money = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_money_)));
          set_has_total_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_total_player;
        break;
      }
      
      // optional int32 total_player = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_player:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_player_)));
          set_has_total_player();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80401022::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string role_name = 1;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->role_name(), output);
  }
  
  // optional int32 scene_id = 2;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->scene_id(), output);
  }
  
  // optional int32 total_money = 3;
  if (has_total_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_money(), output);
  }
  
  // optional int32 total_player = 4;
  if (has_total_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->total_player(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80401022::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string role_name = 1;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->role_name(), target);
  }
  
  // optional int32 scene_id = 2;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->scene_id(), target);
  }
  
  // optional int32 total_money = 3;
  if (has_total_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_money(), target);
  }
  
  // optional int32 total_player = 4;
  if (has_total_player()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->total_player(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80401022::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string role_name = 1;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
    // optional int32 scene_id = 2;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 total_money = 3;
    if (has_total_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_money());
    }
    
    // optional int32 total_player = 4;
    if (has_total_player()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_player());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80401022::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80401022* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80401022*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80401022::MergeFrom(const Proto80401022& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_total_money()) {
      set_total_money(from.total_money());
    }
    if (from.has_total_player()) {
      set_total_player(from.total_player());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80401022::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80401022::CopyFrom(const Proto80401022& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80401022::IsInitialized() const {
  
  return true;
}

void Proto80401022::Swap(Proto80401022* other) {
  if (other != this) {
    std::swap(role_name_, other->role_name_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(total_money_, other->total_money_);
    std::swap(total_player_, other->total_player_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80401022::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80401022_descriptor_;
  metadata.reflection = Proto80401022_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400110::kItemsFieldNumber;
#endif  // !_MSC_VER

Proto81400110::Proto81400110()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400110::InitAsDefaultInstance() {
}

Proto81400110::Proto81400110(const Proto81400110& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400110::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400110::~Proto81400110() {
  SharedDtor();
}

void Proto81400110::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400110::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400110::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400110_descriptor_;
}

const Proto81400110& Proto81400110::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto81400110* Proto81400110::default_instance_ = NULL;

Proto81400110* Proto81400110::New() const {
  return new Proto81400110;
}

void Proto81400110::Clear() {
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400110::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem items = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_items;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400110::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400110::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400110::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoItem items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400110::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400110* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400110*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400110::MergeFrom(const Proto81400110& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400110::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400110::CopyFrom(const Proto81400110& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400110::IsInitialized() const {
  
  return true;
}

void Proto81400110::Swap(Proto81400110* other) {
  if (other != this) {
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400110::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400110_descriptor_;
  metadata.reflection = Proto81400110_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80401031::kCurWaveFieldNumber;
const int Proto80401031::kTotalWaveFieldNumber;
const int Proto80401031::kLeftTimeFieldNumber;
const int Proto80401031::kNextAttackTimeFieldNumber;
const int Proto80401031::kItemFieldNumber;
const int Proto80401031::kIsBossFieldNumber;
#endif  // !_MSC_VER

Proto80401031::Proto80401031()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80401031::InitAsDefaultInstance() {
}

Proto80401031::Proto80401031(const Proto80401031& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80401031::SharedCtor() {
  _cached_size_ = 0;
  cur_wave_ = 0;
  total_wave_ = 0;
  left_time_ = 0;
  next_attack_time_ = 0;
  is_boss_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80401031::~Proto80401031() {
  SharedDtor();
}

void Proto80401031::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80401031::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80401031::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80401031_descriptor_;
}

const Proto80401031& Proto80401031::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto80401031* Proto80401031::default_instance_ = NULL;

Proto80401031* Proto80401031::New() const {
  return new Proto80401031;
}

void Proto80401031::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_wave_ = 0;
    total_wave_ = 0;
    left_time_ = 0;
    next_attack_time_ = 0;
    is_boss_ = 0;
  }
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80401031::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_wave = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_wave_)));
          set_has_cur_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_wave;
        break;
      }
      
      // optional int32 total_wave = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_wave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_wave_)));
          set_has_total_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_next_attack_time;
        break;
      }
      
      // optional int32 next_attack_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_next_attack_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &next_attack_time_)));
          set_has_next_attack_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_item;
        break;
      }
      
      // repeated .ProtoItemId item = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_item;
        if (input->ExpectTag(48)) goto parse_is_boss;
        break;
      }
      
      // optional int32 is_boss = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_boss:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_boss_)));
          set_has_is_boss();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80401031::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_wave = 1;
  if (has_cur_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_wave(), output);
  }
  
  // optional int32 total_wave = 2;
  if (has_total_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_wave(), output);
  }
  
  // optional int32 left_time = 3;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_time(), output);
  }
  
  // optional int32 next_attack_time = 4;
  if (has_next_attack_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->next_attack_time(), output);
  }
  
  // repeated .ProtoItemId item = 5;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->item(i), output);
  }
  
  // optional int32 is_boss = 6;
  if (has_is_boss()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->is_boss(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80401031::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_wave = 1;
  if (has_cur_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_wave(), target);
  }
  
  // optional int32 total_wave = 2;
  if (has_total_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_wave(), target);
  }
  
  // optional int32 left_time = 3;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_time(), target);
  }
  
  // optional int32 next_attack_time = 4;
  if (has_next_attack_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->next_attack_time(), target);
  }
  
  // repeated .ProtoItemId item = 5;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->item(i), target);
  }
  
  // optional int32 is_boss = 6;
  if (has_is_boss()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->is_boss(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80401031::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_wave = 1;
    if (has_cur_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_wave());
    }
    
    // optional int32 total_wave = 2;
    if (has_total_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_wave());
    }
    
    // optional int32 left_time = 3;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 next_attack_time = 4;
    if (has_next_attack_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->next_attack_time());
    }
    
    // optional int32 is_boss = 6;
    if (has_is_boss()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_boss());
    }
    
  }
  // repeated .ProtoItemId item = 5;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80401031::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80401031* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80401031*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80401031::MergeFrom(const Proto80401031& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_wave()) {
      set_cur_wave(from.cur_wave());
    }
    if (from.has_total_wave()) {
      set_total_wave(from.total_wave());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_next_attack_time()) {
      set_next_attack_time(from.next_attack_time());
    }
    if (from.has_is_boss()) {
      set_is_boss(from.is_boss());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80401031::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80401031::CopyFrom(const Proto80401031& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80401031::IsInitialized() const {
  
  return true;
}

void Proto80401031::Swap(Proto80401031* other) {
  if (other != this) {
    std::swap(cur_wave_, other->cur_wave_);
    std::swap(total_wave_, other->total_wave_);
    std::swap(left_time_, other->left_time_);
    std::swap(next_attack_time_, other->next_attack_time_);
    item_.Swap(&other->item_);
    std::swap(is_boss_, other->is_boss_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80401031::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80401031_descriptor_;
  metadata.reflection = Proto80401031_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80401023::kSceneIdFieldNumber;
#endif  // !_MSC_VER

Proto80401023::Proto80401023()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80401023::InitAsDefaultInstance() {
}

Proto80401023::Proto80401023(const Proto80401023& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80401023::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80401023::~Proto80401023() {
  SharedDtor();
}

void Proto80401023::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80401023::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80401023::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80401023_descriptor_;
}

const Proto80401023& Proto80401023::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto80401023* Proto80401023::default_instance_ = NULL;

Proto80401023* Proto80401023::New() const {
  return new Proto80401023;
}

void Proto80401023::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80401023::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80401023::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80401023::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80401023::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80401023::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80401023* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80401023*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80401023::MergeFrom(const Proto80401023& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80401023::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80401023::CopyFrom(const Proto80401023& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80401023::IsInitialized() const {
  
  return true;
}

void Proto80401023::Swap(Proto80401023* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80401023::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80401023_descriptor_;
  metadata.reflection = Proto80401023_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80401024::kSceneIdFieldNumber;
const int Proto80401024::kTotalBloodFieldNumber;
const int Proto80401024::kCurBloodFieldNumber;
#endif  // !_MSC_VER

Proto80401024::Proto80401024()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80401024::InitAsDefaultInstance() {
}

Proto80401024::Proto80401024(const Proto80401024& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80401024::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  total_blood_ = 0;
  cur_blood_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80401024::~Proto80401024() {
  SharedDtor();
}

void Proto80401024::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80401024::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80401024::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80401024_descriptor_;
}

const Proto80401024& Proto80401024::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto80401024* Proto80401024::default_instance_ = NULL;

Proto80401024* Proto80401024::New() const {
  return new Proto80401024;
}

void Proto80401024::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    total_blood_ = 0;
    cur_blood_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80401024::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_blood;
        break;
      }
      
      // optional int32 total_blood = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_blood_)));
          set_has_total_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cur_blood;
        break;
      }
      
      // optional int32 cur_blood = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_blood_)));
          set_has_cur_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80401024::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 total_blood = 2;
  if (has_total_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_blood(), output);
  }
  
  // optional int32 cur_blood = 3;
  if (has_cur_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cur_blood(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80401024::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 total_blood = 2;
  if (has_total_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_blood(), target);
  }
  
  // optional int32 cur_blood = 3;
  if (has_cur_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cur_blood(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80401024::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 total_blood = 2;
    if (has_total_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_blood());
    }
    
    // optional int32 cur_blood = 3;
    if (has_cur_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_blood());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80401024::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80401024* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80401024*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80401024::MergeFrom(const Proto80401024& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_total_blood()) {
      set_total_blood(from.total_blood());
    }
    if (from.has_cur_blood()) {
      set_cur_blood(from.cur_blood());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80401024::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80401024::CopyFrom(const Proto80401024& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80401024::IsInitialized() const {
  
  return true;
}

void Proto80401024::Swap(Proto80401024* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(total_blood_, other->total_blood_);
    std::swap(cur_blood_, other->cur_blood_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80401024::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80401024_descriptor_;
  metadata.reflection = Proto80401024_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10401024::kSceneIdFieldNumber;
#endif  // !_MSC_VER

Proto10401024::Proto10401024()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10401024::InitAsDefaultInstance() {
}

Proto10401024::Proto10401024(const Proto10401024& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10401024::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10401024::~Proto10401024() {
  SharedDtor();
}

void Proto10401024::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10401024::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10401024::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10401024_descriptor_;
}

const Proto10401024& Proto10401024::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10401024* Proto10401024::default_instance_ = NULL;

Proto10401024* Proto10401024::New() const {
  return new Proto10401024;
}

void Proto10401024::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10401024::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10401024::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10401024::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10401024::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10401024::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10401024* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10401024*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10401024::MergeFrom(const Proto10401024& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10401024::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10401024::CopyFrom(const Proto10401024& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10401024::IsInitialized() const {
  
  return true;
}

void Proto10401024::Swap(Proto10401024* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10401024::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10401024_descriptor_;
  metadata.reflection = Proto10401024_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401024::kMyNumFieldNumber;
#endif  // !_MSC_VER

Proto50401024::Proto50401024()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401024::InitAsDefaultInstance() {
}

Proto50401024::Proto50401024(const Proto50401024& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401024::SharedCtor() {
  _cached_size_ = 0;
  my_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401024::~Proto50401024() {
  SharedDtor();
}

void Proto50401024::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50401024::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401024::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401024_descriptor_;
}

const Proto50401024& Proto50401024::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50401024* Proto50401024::default_instance_ = NULL;

Proto50401024* Proto50401024::New() const {
  return new Proto50401024;
}

void Proto50401024::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    my_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401024::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 my_num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &my_num_)));
          set_has_my_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401024::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 my_num = 1;
  if (has_my_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->my_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401024::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 my_num = 1;
  if (has_my_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->my_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401024::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 my_num = 1;
    if (has_my_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->my_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401024::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401024* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401024*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401024::MergeFrom(const Proto50401024& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_my_num()) {
      set_my_num(from.my_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401024::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401024::CopyFrom(const Proto50401024& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401024::IsInitialized() const {
  
  return true;
}

void Proto50401024::Swap(Proto50401024* other) {
  if (other != this) {
    std::swap(my_num_, other->my_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401024::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401024_descriptor_;
  metadata.reflection = Proto50401024_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80401025::kSceneIdFieldNumber;
const int Proto80401025::kMaxNumFieldNumber;
const int Proto80401025::kMaxNumRoleFieldNumber;
const int Proto80401025::kMaxNumNameFieldNumber;
#endif  // !_MSC_VER

Proto80401025::Proto80401025()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80401025::InitAsDefaultInstance() {
}

Proto80401025::Proto80401025(const Proto80401025& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80401025::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  max_num_ = 0;
  max_num_role_ = GOOGLE_LONGLONG(0);
  max_num_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80401025::~Proto80401025() {
  SharedDtor();
}

void Proto80401025::SharedDtor() {
  if (max_num_name_ != &::google::protobuf::internal::kEmptyString) {
    delete max_num_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80401025::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80401025::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80401025_descriptor_;
}

const Proto80401025& Proto80401025::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto80401025* Proto80401025::default_instance_ = NULL;

Proto80401025* Proto80401025::New() const {
  return new Proto80401025;
}

void Proto80401025::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    max_num_ = 0;
    max_num_role_ = GOOGLE_LONGLONG(0);
    if (has_max_num_name()) {
      if (max_num_name_ != &::google::protobuf::internal::kEmptyString) {
        max_num_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80401025::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_max_num;
        break;
      }
      
      // optional int32 max_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_num_)));
          set_has_max_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_max_num_role;
        break;
      }
      
      // optional int64 max_num_role = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_num_role:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &max_num_role_)));
          set_has_max_num_role();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_max_num_name;
        break;
      }
      
      // optional string max_num_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_max_num_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_max_num_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->max_num_name().data(), this->max_num_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80401025::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 max_num = 2;
  if (has_max_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->max_num(), output);
  }
  
  // optional int64 max_num_role = 3;
  if (has_max_num_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->max_num_role(), output);
  }
  
  // optional string max_num_name = 4;
  if (has_max_num_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->max_num_name().data(), this->max_num_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->max_num_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80401025::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 max_num = 2;
  if (has_max_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->max_num(), target);
  }
  
  // optional int64 max_num_role = 3;
  if (has_max_num_role()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->max_num_role(), target);
  }
  
  // optional string max_num_name = 4;
  if (has_max_num_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->max_num_name().data(), this->max_num_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->max_num_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80401025::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 max_num = 2;
    if (has_max_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_num());
    }
    
    // optional int64 max_num_role = 3;
    if (has_max_num_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->max_num_role());
    }
    
    // optional string max_num_name = 4;
    if (has_max_num_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->max_num_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80401025::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80401025* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80401025*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80401025::MergeFrom(const Proto80401025& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_max_num()) {
      set_max_num(from.max_num());
    }
    if (from.has_max_num_role()) {
      set_max_num_role(from.max_num_role());
    }
    if (from.has_max_num_name()) {
      set_max_num_name(from.max_num_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80401025::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80401025::CopyFrom(const Proto80401025& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80401025::IsInitialized() const {
  
  return true;
}

void Proto80401025::Swap(Proto80401025* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(max_num_, other->max_num_);
    std::swap(max_num_role_, other->max_num_role_);
    std::swap(max_num_name_, other->max_num_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80401025::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80401025_descriptor_;
  metadata.reflection = Proto80401025_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400352::kSpaceIdFieldNumber;
#endif  // !_MSC_VER

Proto10400352::Proto10400352()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400352::InitAsDefaultInstance() {
}

Proto10400352::Proto10400352(const Proto10400352& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400352::SharedCtor() {
  _cached_size_ = 0;
  space_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400352::~Proto10400352() {
  SharedDtor();
}

void Proto10400352::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400352::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400352::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400352_descriptor_;
}

const Proto10400352& Proto10400352::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10400352* Proto10400352::default_instance_ = NULL;

Proto10400352* Proto10400352::New() const {
  return new Proto10400352;
}

void Proto10400352::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    space_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400352::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 space_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &space_id_)));
          set_has_space_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400352::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 space_id = 1;
  if (has_space_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->space_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400352::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 space_id = 1;
  if (has_space_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->space_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400352::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 space_id = 1;
    if (has_space_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->space_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400352::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400352* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400352*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400352::MergeFrom(const Proto10400352& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_space_id()) {
      set_space_id(from.space_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400352::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400352::CopyFrom(const Proto10400352& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400352::IsInitialized() const {
  
  return true;
}

void Proto10400352::Swap(Proto10400352* other) {
  if (other != this) {
    std::swap(space_id_, other->space_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400352::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400352_descriptor_;
  metadata.reflection = Proto10400352_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101010::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto10101010::Proto10101010()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101010::InitAsDefaultInstance() {
}

Proto10101010::Proto10101010(const Proto10101010& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101010::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101010::~Proto10101010() {
  SharedDtor();
}

void Proto10101010::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101010::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101010::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101010_descriptor_;
}

const Proto10101010& Proto10101010::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10101010* Proto10101010::default_instance_ = NULL;

Proto10101010* Proto10101010::New() const {
  return new Proto10101010;
}

void Proto10101010::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101010::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101010::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101010::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101010::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101010::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101010* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101010*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101010::MergeFrom(const Proto10101010& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101010::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101010::CopyFrom(const Proto10101010& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101010::IsInitialized() const {
  
  return true;
}

void Proto10101010::Swap(Proto10101010* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101010::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101010_descriptor_;
  metadata.reflection = Proto10101010_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10401025::kSceneIdFieldNumber;
#endif  // !_MSC_VER

Proto10401025::Proto10401025()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10401025::InitAsDefaultInstance() {
}

Proto10401025::Proto10401025(const Proto10401025& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10401025::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10401025::~Proto10401025() {
  SharedDtor();
}

void Proto10401025::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10401025::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10401025::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10401025_descriptor_;
}

const Proto10401025& Proto10401025::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto10401025* Proto10401025::default_instance_ = NULL;

Proto10401025* Proto10401025::New() const {
  return new Proto10401025;
}

void Proto10401025::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10401025::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10401025::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10401025::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10401025::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10401025::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10401025* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10401025*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10401025::MergeFrom(const Proto10401025& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10401025::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10401025::CopyFrom(const Proto10401025& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10401025::IsInitialized() const {
  
  return true;
}

void Proto10401025::Swap(Proto10401025* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10401025::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10401025_descriptor_;
  metadata.reflection = Proto10401025_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50401025::kSelfRankFieldNumber;
#endif  // !_MSC_VER

Proto50401025::Proto50401025()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50401025::InitAsDefaultInstance() {
  self_rank_ = const_cast< ::ProtoWorldBossRank*>(&::ProtoWorldBossRank::default_instance());
}

Proto50401025::Proto50401025(const Proto50401025& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50401025::SharedCtor() {
  _cached_size_ = 0;
  self_rank_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50401025::~Proto50401025() {
  SharedDtor();
}

void Proto50401025::SharedDtor() {
  if (this != default_instance_) {
    delete self_rank_;
  }
}

void Proto50401025::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50401025::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50401025_descriptor_;
}

const Proto50401025& Proto50401025::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient016_2eproto();  return *default_instance_;
}

Proto50401025* Proto50401025::default_instance_ = NULL;

Proto50401025* Proto50401025::New() const {
  return new Proto50401025;
}

void Proto50401025::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_self_rank()) {
      if (self_rank_ != NULL) self_rank_->::ProtoWorldBossRank::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50401025::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoWorldBossRank self_rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50401025::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoWorldBossRank self_rank = 1;
  if (has_self_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->self_rank(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50401025::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoWorldBossRank self_rank = 1;
  if (has_self_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->self_rank(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50401025::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoWorldBossRank self_rank = 1;
    if (has_self_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->self_rank());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50401025::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50401025* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50401025*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50401025::MergeFrom(const Proto50401025& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_self_rank()) {
      mutable_self_rank()->::ProtoWorldBossRank::MergeFrom(from.self_rank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50401025::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50401025::CopyFrom(const Proto50401025& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50401025::IsInitialized() const {
  
  return true;
}

void Proto50401025::Swap(Proto50401025* other) {
  if (other != this) {
    std::swap(self_rank_, other->self_rank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50401025::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50401025_descriptor_;
  metadata.reflection = Proto50401025_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
