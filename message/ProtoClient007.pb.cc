// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient007.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto10100414_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100414_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100403_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100403_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100404_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100404_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100702_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100702_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100702_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100702_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100401_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100401_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100402_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100402_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100403_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100403_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400339_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400339_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400340_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400340_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400311_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400311_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401414_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401414_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401414_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401414_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100404_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100404_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100410_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100410_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400906_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400906_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100156_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100156_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100156_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100156_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400316_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400316_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400316_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400316_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100501_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100501_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400341_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400341_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400318_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400318_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400318_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400318_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400907_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400907_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400342_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400342_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400112_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400112_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400112_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400112_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400209_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400209_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400343_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400343_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400909_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400909_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400210_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400210_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400113_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400113_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80200006_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80200006_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400910_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400910_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400908_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400908_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400211_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400211_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400331_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400331_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400344_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400344_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100202_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100202_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100203_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100203_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100203_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100203_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100202_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100202_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100201_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100201_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400134_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400134_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100102_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100102_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400204_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400204_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400204_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400204_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient007_2eproto() {
  protobuf_AddDesc_ProtoClient007_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient007.proto");
  GOOGLE_CHECK(file != NULL);
  Proto10100414_descriptor_ = file->message_type(0);
  static const int Proto10100414_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100414, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100414, chapter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100414, piece_),
  };
  Proto10100414_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100414_descriptor_,
      Proto10100414::default_instance_,
      Proto10100414_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100414, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100414, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100414));
  Proto50100403_descriptor_ = file->message_type(1);
  static const int Proto50100403_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100403, role_list_),
  };
  Proto50100403_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100403_descriptor_,
      Proto50100403::default_instance_,
      Proto50100403_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100403, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100403, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100403));
  Proto50100404_descriptor_ = file->message_type(2);
  static const int Proto50100404_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100404, role_list_),
  };
  Proto50100404_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100404_descriptor_,
      Proto50100404::default_instance_,
      Proto50100404_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100404, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100404, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100404));
  Proto10100702_descriptor_ = file->message_type(3);
  static const int Proto10100702_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100702, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100702, rank_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100702, rank_index_),
  };
  Proto10100702_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100702_descriptor_,
      Proto10100702::default_instance_,
      Proto10100702_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100702, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100702, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100702));
  Proto50100702_descriptor_ = file->message_type(4);
  static const int Proto50100702_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, rank_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, mounter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, pet_cur_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, pet_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, pet_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, label_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, weapon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, clothes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, fashion_weapon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, fashion_clothes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, career_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, top_wing_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, top_wing_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, req_role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, weapon_refine_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, equip_refine_view_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, fairy_act_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, is_worship_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, mount_info_),
  };
  Proto50100702_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100702_descriptor_,
      Proto50100702::default_instance_,
      Proto50100702_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100702, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100702));
  Proto80100401_descriptor_ = file->message_type(5);
  static const int Proto80100401_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100401, invitor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100401, fb_id_),
  };
  Proto80100401_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100401_descriptor_,
      Proto80100401::default_instance_,
      Proto80100401_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100401, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100401, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100401));
  Proto80100402_descriptor_ = file->message_type(6);
  static const int Proto80100402_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100402, applicant_),
  };
  Proto80100402_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100402_descriptor_,
      Proto80100402::default_instance_,
      Proto80100402_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100402, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100402, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100402));
  Proto80100403_descriptor_ = file->message_type(7);
  static const int Proto80100403_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100403, fb_id_),
  };
  Proto80100403_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100403_descriptor_,
      Proto80100403::default_instance_,
      Proto80100403_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100403, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100403, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100403));
  Proto10400003_descriptor_ = file->message_type(8);
  static const int Proto10400003_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400003, goods_id_),
  };
  Proto10400003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400003_descriptor_,
      Proto10400003::default_instance_,
      Proto10400003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400003));
  Proto50400003_descriptor_ = file->message_type(9);
  static const int Proto50400003_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400003, gather_flag_),
  };
  Proto50400003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400003_descriptor_,
      Proto50400003::default_instance_,
      Proto50400003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400003));
  Proto80400339_descriptor_ = file->message_type(10);
  static const int Proto80400339_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400339, left_time_),
  };
  Proto80400339_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400339_descriptor_,
      Proto80400339::default_instance_,
      Proto80400339_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400339, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400339, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400339));
  Proto80400340_descriptor_ = file->message_type(11);
  static const int Proto80400340_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400340, first_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400340, first_cur_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400340, first_total_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400340, first_cur_magic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400340, first_total_magic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400340, second_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400340, second_cur_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400340, second_total_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400340, second_cur_magic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400340, second_total_magic_),
  };
  Proto80400340_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400340_descriptor_,
      Proto80400340::default_instance_,
      Proto80400340_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400340, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400340, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400340));
  Proto50400311_descriptor_ = file->message_type(12);
  static const int Proto50400311_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400311, open_flag_),
  };
  Proto50400311_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400311_descriptor_,
      Proto50400311::default_instance_,
      Proto50400311_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400311, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400311, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400311));
  Proto51401414_descriptor_ = file->message_type(13);
  static const int Proto51401414_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401414, left_count_info_),
  };
  Proto51401414_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401414_descriptor_,
      Proto51401414::default_instance_,
      Proto51401414_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401414, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401414, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401414));
  Proto11401414_descriptor_ = file->message_type(14);
  static const int Proto11401414_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401414, event_id_),
  };
  Proto11401414_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401414_descriptor_,
      Proto11401414::default_instance_,
      Proto11401414_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401414, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401414, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401414));
  Proto80100404_descriptor_ = file->message_type(15);
  static const int Proto80100404_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100404, ready_info_),
  };
  Proto80100404_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100404_descriptor_,
      Proto80100404::default_instance_,
      Proto80100404_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100404, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100404, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100404));
  Proto10100410_descriptor_ = file->message_type(16);
  static const int Proto10100410_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100410, oper_type_),
  };
  Proto10100410_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100410_descriptor_,
      Proto10100410::default_instance_,
      Proto10100410_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100410, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100410, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100410));
  Proto10400906_descriptor_ = file->message_type(17);
  static const int Proto10400906_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400906, novice_step_),
  };
  Proto10400906_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400906_descriptor_,
      Proto10400906::default_instance_,
      Proto10400906_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400906, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400906, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400906));
  Proto10100156_descriptor_ = file->message_type(18);
  static const int Proto10100156_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100156, role_id_),
  };
  Proto10100156_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100156_descriptor_,
      Proto10100156::default_instance_,
      Proto10100156_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100156, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100156, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100156));
  Proto50100156_descriptor_ = file->message_type(19);
  static const int Proto50100156_offsets_[26] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, league_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, role_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, league_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, career_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, vip_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, fight_force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, max_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, attack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, defence_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, crit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, toughness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, hit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, avoid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, crit_hurt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, damage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, reduction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, pk_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, glamour_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, fashion_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, fashion_color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, equip_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, mount_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, checker_id_),
  };
  Proto50100156_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100156_descriptor_,
      Proto50100156::default_instance_,
      Proto50100156_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100156, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100156));
  Proto50400316_descriptor_ = file->message_type(20);
  static const int Proto50400316_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400316, war_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400316, win_league_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400316, second_war_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400316, war_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400316, button_state_),
  };
  Proto50400316_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400316_descriptor_,
      Proto50400316::default_instance_,
      Proto50400316_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400316, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400316, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400316));
  Proto10400316_descriptor_ = file->message_type(21);
  static const int Proto10400316_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400316, war_index_),
  };
  Proto10400316_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400316_descriptor_,
      Proto10400316::default_instance_,
      Proto10400316_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400316, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400316, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400316));
  Proto80100501_descriptor_ = file->message_type(22);
  static const int Proto80100501_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100501, rank_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100501, self_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100501, self_kill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100501, self_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100501, camp_scores_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100501, self_camp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100501, zone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100501, left_time_),
  };
  Proto80100501_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100501_descriptor_,
      Proto80100501::default_instance_,
      Proto80100501_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100501, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100501, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100501));
  Proto80400341_descriptor_ = file->message_type(23);
  static const int Proto80400341_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400341, person_resource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400341, person_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400341, war_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400341, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400341, stage_state_),
  };
  Proto80400341_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400341_descriptor_,
      Proto80400341::default_instance_,
      Proto80400341_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400341, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400341, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400341));
  Proto10400318_descriptor_ = file->message_type(24);
  static const int Proto10400318_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400318, page_index_),
  };
  Proto10400318_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400318_descriptor_,
      Proto10400318::default_instance_,
      Proto10400318_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400318, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400318, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400318));
  Proto50400318_descriptor_ = file->message_type(25);
  static const int Proto50400318_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400318, item_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400318, page_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400318, total_page_),
  };
  Proto50400318_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400318_descriptor_,
      Proto50400318::default_instance_,
      Proto50400318_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400318, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400318, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400318));
  Proto80400907_descriptor_ = file->message_type(26);
  static const int Proto80400907_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400907, wait_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400907, safe_radius_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400907, safe_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400907, effect_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400907, effect_id_),
  };
  Proto80400907_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400907_descriptor_,
      Proto80400907::default_instance_,
      Proto80400907_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400907, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400907, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400907));
  Proto80400342_descriptor_ = file->message_type(27);
  static const int Proto80400342_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400342, war_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400342, fight_result_),
  };
  Proto80400342_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400342_descriptor_,
      Proto80400342::default_instance_,
      Proto80400342_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400342, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400342, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400342));
  Proto10400112_descriptor_ = file->message_type(28);
  static const int Proto10400112_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400112, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400112, pixel_y_),
  };
  Proto10400112_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400112_descriptor_,
      Proto10400112::default_instance_,
      Proto10400112_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400112, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400112, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400112));
  Proto50400112_descriptor_ = file->message_type(29);
  static const int Proto50400112_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400112, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400112, pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400112, base_speed_),
  };
  Proto50400112_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400112_descriptor_,
      Proto50400112::default_instance_,
      Proto50400112_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400112, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400112, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400112));
  Proto80400209_descriptor_ = file->message_type(30);
  static const int Proto80400209_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400209, mover_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400209, attackor_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400209, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400209, locate_),
  };
  Proto80400209_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400209_descriptor_,
      Proto80400209::default_instance_,
      Proto80400209_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400209, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400209, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400209));
  Proto80400343_descriptor_ = file->message_type(31);
  static const int Proto80400343_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400343, jump_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400343, is_first_),
  };
  Proto80400343_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400343_descriptor_,
      Proto80400343::default_instance_,
      Proto80400343_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400343, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400343, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400343));
  Proto80400909_descriptor_ = file->message_type(32);
  static const int Proto80400909_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400909, blood_),
  };
  Proto80400909_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400909_descriptor_,
      Proto80400909::default_instance_,
      Proto80400909_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400909, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400909, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400909));
  Proto80400210_descriptor_ = file->message_type(33);
  static const int Proto80400210_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400210, mover_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400210, location_),
  };
  Proto80400210_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400210_descriptor_,
      Proto80400210::default_instance_,
      Proto80400210_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400210, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400210, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400210));
  Proto80400113_descriptor_ = file->message_type(34);
  static const int Proto80400113_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400113, mover_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400113, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400113, stop_by_buff_),
  };
  Proto80400113_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400113_descriptor_,
      Proto80400113::default_instance_,
      Proto80400113_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400113, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400113, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400113));
  Proto80200006_descriptor_ = file->message_type(35);
  static const int Proto80200006_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80200006, shout_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80200006, channel_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80200006, shout_detail_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80200006, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80200006, role_id_),
  };
  Proto80200006_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80200006_descriptor_,
      Proto80200006::default_instance_,
      Proto80200006_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80200006, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80200006, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80200006));
  Proto80400910_descriptor_ = file->message_type(36);
  static const int Proto80400910_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400910, spirit_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400910, matrix_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400910, puppet_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400910, is_novice_script_),
  };
  Proto80400910_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400910_descriptor_,
      Proto80400910::default_instance_,
      Proto80400910_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400910, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400910, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400910));
  Proto10400908_descriptor_ = file->message_type(37);
  static const int Proto10400908_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400908, matrix_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400908, puppet_),
  };
  Proto10400908_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400908_descriptor_,
      Proto10400908::default_instance_,
      Proto10400908_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400908, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400908, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400908));
  Proto80400211_descriptor_ = file->message_type(38);
  static const int Proto80400211_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400211, hit_type_),
  };
  Proto80400211_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400211_descriptor_,
      Proto80400211::default_instance_,
      Proto80400211_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400211, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400211, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400211));
  Proto11400331_descriptor_ = file->message_type(39);
  static const int Proto11400331_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400331, task_id_),
  };
  Proto11400331_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400331_descriptor_,
      Proto11400331::default_instance_,
      Proto11400331_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400331, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400331, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400331));
  Proto80400344_descriptor_ = file->message_type(40);
  static const int Proto80400344_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400344, league_state_),
  };
  Proto80400344_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400344_descriptor_,
      Proto80400344::default_instance_,
      Proto80400344_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400344, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400344, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400344));
  Proto10100202_descriptor_ = file->message_type(41);
  static const int Proto10100202_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100202, activity_id_),
  };
  Proto10100202_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100202_descriptor_,
      Proto10100202::default_instance_,
      Proto10100202_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100202, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100202, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100202));
  Proto10100203_descriptor_ = file->message_type(42);
  static const int Proto10100203_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100203, activity_id_),
  };
  Proto10100203_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100203_descriptor_,
      Proto10100203::default_instance_,
      Proto10100203_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100203, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100203, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100203));
  Proto50100203_descriptor_ = file->message_type(43);
  static const int Proto50100203_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100203, activity_id_),
  };
  Proto50100203_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100203_descriptor_,
      Proto50100203::default_instance_,
      Proto50100203_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100203, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100203, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100203));
  Proto50100202_descriptor_ = file->message_type(44);
  static const int Proto50100202_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100202, activity_info_),
  };
  Proto50100202_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100202_descriptor_,
      Proto50100202::default_instance_,
      Proto50100202_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100202, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100202, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100202));
  Proto50100201_descriptor_ = file->message_type(45);
  static const int Proto50100201_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100201, activity_info_list_),
  };
  Proto50100201_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100201_descriptor_,
      Proto50100201::default_instance_,
      Proto50100201_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100201, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100201, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100201));
  Proto11400134_descriptor_ = file->message_type(46);
  static const int Proto11400134_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400134, goods_list_),
  };
  Proto11400134_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400134_descriptor_,
      Proto11400134::default_instance_,
      Proto11400134_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400134, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400134, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400134));
  Proto80100102_descriptor_ = file->message_type(47);
  static const int Proto80100102_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100102, src_role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100102, role_id_),
  };
  Proto80100102_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100102_descriptor_,
      Proto80100102::default_instance_,
      Proto80100102_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100102, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100102, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100102));
  Proto10400204_descriptor_ = file->message_type(48);
  static const int Proto10400204_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400204, pk_state_),
  };
  Proto10400204_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400204_descriptor_,
      Proto10400204::default_instance_,
      Proto10400204_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400204, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400204, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400204));
  Proto50400204_descriptor_ = file->message_type(49);
  static const int Proto50400204_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400204, pk_state_),
  };
  Proto50400204_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400204_descriptor_,
      Proto50400204::default_instance_,
      Proto50400204_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400204, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400204, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400204));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient007_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100414_descriptor_, &Proto10100414::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100403_descriptor_, &Proto50100403::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100404_descriptor_, &Proto50100404::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100702_descriptor_, &Proto10100702::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100702_descriptor_, &Proto50100702::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100401_descriptor_, &Proto80100401::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100402_descriptor_, &Proto80100402::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100403_descriptor_, &Proto80100403::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400003_descriptor_, &Proto10400003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400003_descriptor_, &Proto50400003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400339_descriptor_, &Proto80400339::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400340_descriptor_, &Proto80400340::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400311_descriptor_, &Proto50400311::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401414_descriptor_, &Proto51401414::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401414_descriptor_, &Proto11401414::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100404_descriptor_, &Proto80100404::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100410_descriptor_, &Proto10100410::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400906_descriptor_, &Proto10400906::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100156_descriptor_, &Proto10100156::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100156_descriptor_, &Proto50100156::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400316_descriptor_, &Proto50400316::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400316_descriptor_, &Proto10400316::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100501_descriptor_, &Proto80100501::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400341_descriptor_, &Proto80400341::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400318_descriptor_, &Proto10400318::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400318_descriptor_, &Proto50400318::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400907_descriptor_, &Proto80400907::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400342_descriptor_, &Proto80400342::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400112_descriptor_, &Proto10400112::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400112_descriptor_, &Proto50400112::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400209_descriptor_, &Proto80400209::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400343_descriptor_, &Proto80400343::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400909_descriptor_, &Proto80400909::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400210_descriptor_, &Proto80400210::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400113_descriptor_, &Proto80400113::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80200006_descriptor_, &Proto80200006::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400910_descriptor_, &Proto80400910::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400908_descriptor_, &Proto10400908::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400211_descriptor_, &Proto80400211::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400331_descriptor_, &Proto11400331::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400344_descriptor_, &Proto80400344::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100202_descriptor_, &Proto10100202::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100203_descriptor_, &Proto10100203::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100203_descriptor_, &Proto50100203::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100202_descriptor_, &Proto50100202::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100201_descriptor_, &Proto50100201::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400134_descriptor_, &Proto11400134::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100102_descriptor_, &Proto80100102::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400204_descriptor_, &Proto10400204::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400204_descriptor_, &Proto50400204::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient007_2eproto() {
  delete Proto10100414::default_instance_;
  delete Proto10100414_reflection_;
  delete Proto50100403::default_instance_;
  delete Proto50100403_reflection_;
  delete Proto50100404::default_instance_;
  delete Proto50100404_reflection_;
  delete Proto10100702::default_instance_;
  delete Proto10100702_reflection_;
  delete Proto50100702::default_instance_;
  delete Proto50100702_reflection_;
  delete Proto80100401::default_instance_;
  delete Proto80100401_reflection_;
  delete Proto80100402::default_instance_;
  delete Proto80100402_reflection_;
  delete Proto80100403::default_instance_;
  delete Proto80100403_reflection_;
  delete Proto10400003::default_instance_;
  delete Proto10400003_reflection_;
  delete Proto50400003::default_instance_;
  delete Proto50400003_reflection_;
  delete Proto80400339::default_instance_;
  delete Proto80400339_reflection_;
  delete Proto80400340::default_instance_;
  delete Proto80400340_reflection_;
  delete Proto50400311::default_instance_;
  delete Proto50400311_reflection_;
  delete Proto51401414::default_instance_;
  delete Proto51401414_reflection_;
  delete Proto11401414::default_instance_;
  delete Proto11401414_reflection_;
  delete Proto80100404::default_instance_;
  delete Proto80100404_reflection_;
  delete Proto10100410::default_instance_;
  delete Proto10100410_reflection_;
  delete Proto10400906::default_instance_;
  delete Proto10400906_reflection_;
  delete Proto10100156::default_instance_;
  delete Proto10100156_reflection_;
  delete Proto50100156::default_instance_;
  delete Proto50100156_reflection_;
  delete Proto50400316::default_instance_;
  delete Proto50400316_reflection_;
  delete Proto10400316::default_instance_;
  delete Proto10400316_reflection_;
  delete Proto80100501::default_instance_;
  delete Proto80100501_reflection_;
  delete Proto80400341::default_instance_;
  delete Proto80400341_reflection_;
  delete Proto10400318::default_instance_;
  delete Proto10400318_reflection_;
  delete Proto50400318::default_instance_;
  delete Proto50400318_reflection_;
  delete Proto80400907::default_instance_;
  delete Proto80400907_reflection_;
  delete Proto80400342::default_instance_;
  delete Proto80400342_reflection_;
  delete Proto10400112::default_instance_;
  delete Proto10400112_reflection_;
  delete Proto50400112::default_instance_;
  delete Proto50400112_reflection_;
  delete Proto80400209::default_instance_;
  delete Proto80400209_reflection_;
  delete Proto80400343::default_instance_;
  delete Proto80400343_reflection_;
  delete Proto80400909::default_instance_;
  delete Proto80400909_reflection_;
  delete Proto80400210::default_instance_;
  delete Proto80400210_reflection_;
  delete Proto80400113::default_instance_;
  delete Proto80400113_reflection_;
  delete Proto80200006::default_instance_;
  delete Proto80200006_reflection_;
  delete Proto80400910::default_instance_;
  delete Proto80400910_reflection_;
  delete Proto10400908::default_instance_;
  delete Proto10400908_reflection_;
  delete Proto80400211::default_instance_;
  delete Proto80400211_reflection_;
  delete Proto11400331::default_instance_;
  delete Proto11400331_reflection_;
  delete Proto80400344::default_instance_;
  delete Proto80400344_reflection_;
  delete Proto10100202::default_instance_;
  delete Proto10100202_reflection_;
  delete Proto10100203::default_instance_;
  delete Proto10100203_reflection_;
  delete Proto50100203::default_instance_;
  delete Proto50100203_reflection_;
  delete Proto50100202::default_instance_;
  delete Proto50100202_reflection_;
  delete Proto50100201::default_instance_;
  delete Proto50100201_reflection_;
  delete Proto11400134::default_instance_;
  delete Proto11400134_reflection_;
  delete Proto80100102::default_instance_;
  delete Proto80100102_reflection_;
  delete Proto10400204::default_instance_;
  delete Proto10400204_reflection_;
  delete Proto50400204::default_instance_;
  delete Proto50400204_reflection_;
}

void protobuf_AddDesc_ProtoClient007_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient007.proto\032\021ProtoPublic.prot"
    "o\"D\n\rProto10100414\022\023\n\013script_sort\030\001 \001(\005\022"
    "\017\n\007chapter\030\002 \001(\005\022\r\n\005piece\030\003 \001(\005\"0\n\rProto"
    "50100403\022\037\n\trole_list\030\001 \003(\0132\014.ProtoTeame"
    "r\"0\n\rProto50100404\022\037\n\trole_list\030\001 \003(\0132\014."
    "ProtoTeamer\"G\n\rProto10100702\022\017\n\007role_id\030"
    "\001 \001(\003\022\021\n\trank_type\030\002 \001(\005\022\022\n\nrank_index\030\003"
    " \001(\005\"\340\003\n\rProto50100702\022\017\n\007role_id\030\001 \001(\003\022"
    "\021\n\trank_type\030\002 \001(\005\022\017\n\007mounter\030\003 \001(\005\022\024\n\014p"
    "et_cur_sort\030\004 \001(\005\022\020\n\010pet_sort\030\005 \001(\005\022\016\n\006p"
    "et_id\030\006 \001(\003\022\r\n\005force\030\007 \001(\003\022\r\n\005label\030\010 \001("
    "\005\022\016\n\006weapon\030\t \001(\005\022\017\n\007clothes\030\n \001(\005\022\026\n\016fa"
    "shion_weapon\030\013 \001(\005\022\027\n\017fashion_clothes\030\014 "
    "\001(\005\022\016\n\006career\030\r \001(\005\022\013\n\003sex\030\016 \001(\005\022\023\n\013top_"
    "wing_id\030\017 \001(\005\022\026\n\016top_wing_level\030\020 \001(\005\022\023\n"
    "\013req_role_id\030\021 \001(\003\022\031\n\021weapon_refine_lvl\030"
    "\022 \001(\005\022\037\n\027equip_refine_view_index\030\023 \001(\005\022 "
    "\n\tfairy_act\030\024 \001(\0132\r.ProtoPairObj\022\022\n\nis_w"
    "orship\030\025 \001(\005\022!\n\nmount_info\030\026 \003(\0132\r.Proto"
    "PairObj\"=\n\rProto80100401\022\035\n\007invitor\030\001 \001("
    "\0132\014.ProtoTeamer\022\r\n\005fb_id\030\002 \001(\005\"0\n\rProto8"
    "0100402\022\037\n\tapplicant\030\001 \001(\0132\014.ProtoTeamer"
    "\"\036\n\rProto80100403\022\r\n\005fb_id\030\001 \001(\005\"!\n\rProt"
    "o10400003\022\020\n\010goods_id\030\001 \001(\003\"$\n\rProto5040"
    "0003\022\023\n\013gather_flag\030\001 \001(\005\"\"\n\rProto804003"
    "39\022\021\n\tleft_time\030\001 \001(\005\"\210\002\n\rProto80400340\022"
    "\020\n\010first_id\030\001 \001(\003\022\027\n\017first_cur_blood\030\002 \001"
    "(\005\022\031\n\021first_total_blood\030\003 \001(\005\022\027\n\017first_c"
    "ur_magic\030\004 \001(\005\022\031\n\021first_total_magic\030\005 \001("
    "\005\022\021\n\tsecond_id\030\006 \001(\003\022\030\n\020second_cur_blood"
    "\030\007 \001(\005\022\032\n\022second_total_blood\030\010 \001(\005\022\030\n\020se"
    "cond_cur_magic\030\t \001(\005\022\032\n\022second_total_mag"
    "ic\030\n \001(\005\"\"\n\rProto50400311\022\021\n\topen_flag\030\001"
    " \001(\005\"7\n\rProto51401414\022&\n\017left_count_info"
    "\030\001 \003(\0132\r.ProtoPairObj\"!\n\rProto11401414\022\020"
    "\n\010event_id\030\001 \003(\005\"6\n\rProto80100404\022%\n\nrea"
    "dy_info\030\001 \003(\0132\021.ProtoFBReadyInfo\"\"\n\rProt"
    "o10100410\022\021\n\toper_type\030\001 \001(\005\"$\n\rProto104"
    "00906\022\023\n\013novice_step\030\001 \001(\005\" \n\rProto10100"
    "156\022\017\n\007role_id\030\001 \001(\003\"\375\003\n\rProto50100156\022\017"
    "\n\007role_id\030\001 \001(\003\022\021\n\tleague_id\030\002 \001(\003\022\021\n\tro"
    "le_name\030\003 \001(\t\022\023\n\013league_name\030\004 \001(\t\022\r\n\005le"
    "vel\030\005 \001(\005\022\016\n\006career\030\006 \001(\005\022\022\n\nvip_status\030"
    "\007 \001(\005\022\023\n\013fight_force\030\010 \001(\005\022\021\n\tmax_blood\030"
    "\t \001(\005\022\016\n\006attack\030\n \001(\005\022\017\n\007defence\030\013 \001(\005\022\014"
    "\n\004crit\030\014 \001(\005\022\021\n\ttoughness\030\r \001(\005\022\013\n\003hit\030\016"
    " \001(\005\022\r\n\005avoid\030\017 \001(\005\022\021\n\tcrit_hurt\030\020 \001(\005\022\016"
    "\n\006damage\030\021 \001(\005\022\021\n\treduction\030\022 \001(\005\022\n\n\002pk\030"
    "\023 \001(\005\022\017\n\007glamour\030\024 \001(\005\022\022\n\nfashion_id\030\025 \001"
    "(\005\022\025\n\rfashion_color\030\026 \001(\005\022#\n\nequip_list\030"
    "\027 \003(\0132\017.ProtoEquipList\022#\n\nmount_info\030\030 \003"
    "(\0132\017.ProtoMountInfo\022\013\n\003sex\030\031 \001(\005\022\022\n\nchec"
    "ker_id\030\032 \001(\003\"\200\001\n\rProto50400316\022\036\n\007war_se"
    "t\030\001 \003(\0132\r.ProtoWarItem\022\022\n\nwin_league\030\002 \001"
    "(\003\022\022\n\nsecond_war\030\003 \003(\003\022\021\n\twar_index\030\004 \001("
    "\005\022\024\n\014button_state\030\005 \001(\005\"\"\n\rProto10400316"
    "\022\021\n\twar_index\030\001 \001(\005\"\323\001\n\rProto80100501\022(\n"
    "\trank_list\030\001 \003(\0132\025.ProtoSMBattleRankRec\022"
    "(\n\tself_rank\030\002 \001(\0132\025.ProtoSMBattleRankRe"
    "c\022\021\n\tself_kill\030\003 \001(\005\022\022\n\nself_score\030\004 \001(\005"
    "\022\023\n\013camp_scores\030\005 \003(\005\022\021\n\tself_camp\030\006 \001(\005"
    "\022\014\n\004zone\030\007 \001(\005\022\021\n\tleft_time\030\010 \001(\005\"\206\001\n\rPr"
    "oto80400341\022\027\n\017person_resource\030\001 \001(\005\022\023\n\013"
    "person_rank\030\002 \001(\005\022\037\n\007war_set\030\003 \003(\0132\016.Pro"
    "toLWarItem\022\021\n\tleft_time\030\004 \001(\005\022\023\n\013stage_s"
    "tate\030\005 \001(\005\"#\n\rProto10400318\022\022\n\npage_inde"
    "x\030\001 \001(\005\"Y\n\rProto50400318\022 \n\010item_set\030\001 \003"
    "(\0132\016.ProtoLWarItem\022\022\n\npage_index\030\002 \001(\005\022\022"
    "\n\ntotal_page\030\003 \001(\005\"\200\001\n\rProto80400907\022\021\n\t"
    "wait_tick\030\001 \001(\005\022\023\n\013safe_radius\030\002 \001(\005\022\037\n\n"
    "safe_point\030\003 \001(\0132\013.ProtoCoord\022\023\n\013effect_"
    "sort\030\004 \001(\005\022\021\n\teffect_id\030\005 \001(\005\"7\n\rProto80"
    "400342\022\020\n\010war_type\030\001 \001(\005\022\024\n\014fight_result"
    "\030\002 \001(\005\"1\n\rProto10400112\022\017\n\007pixel_x\030\001 \001(\005"
    "\022\017\n\007pixel_y\030\002 \001(\005\"E\n\rProto50400112\022\017\n\007pi"
    "xel_x\030\001 \001(\005\022\017\n\007pixel_y\030\002 \001(\005\022\022\n\nbase_spe"
    "ed\030\003 \001(\005\"e\n\rProto80400209\022\020\n\010mover_id\030\001 "
    "\001(\003\022\023\n\013attackor_id\030\002 \001(\003\022\020\n\010skill_id\030\003 \001"
    "(\005\022\033\n\006locate\030\004 \001(\0132\013.ProtoCoord\"4\n\rProto"
    "80400343\022\021\n\tjump_flag\030\001 \001(\005\022\020\n\010is_first\030"
    "\002 \001(\005\"\036\n\rProto80400909\022\r\n\005blood\030\001 \001(\005\"@\n"
    "\rProto80400210\022\020\n\010mover_id\030\001 \001(\003\022\035\n\010loca"
    "tion\030\002 \001(\0132\013.ProtoCoord\"I\n\rProto80400113"
    "\022\020\n\010mover_id\030\001 \001(\003\022\020\n\010skill_id\030\002 \001(\005\022\024\n\014"
    "stop_by_buff\030\003 \001(\005\"\210\001\n\rProto80200006\022\020\n\010"
    "shout_id\030\001 \001(\005\022\024\n\014channel_type\030\002 \001(\005\022,\n\021"
    "shout_detail_list\030\003 \003(\0132\021.ProtoShoutDeta"
    "il\022\020\n\010scene_id\030\004 \001(\005\022\017\n\007role_id\030\005 \001(\003\"v\n"
    "\rProto80400910\022\024\n\014spirit_value\030\001 \001(\005\022 \n\013"
    "matrix_list\030\002 \003(\0132\013.ProtoSkill\022\023\n\013puppet"
    "_list\030\003 \003(\005\022\030\n\020is_novice_script\030\004 \001(\005\"2\n"
    "\rProto10400908\022\021\n\tmatrix_id\030\001 \001(\005\022\016\n\006pup"
    "pet\030\002 \001(\005\"!\n\rProto80400211\022\020\n\010hit_type\030\001"
    " \001(\005\" \n\rProto11400331\022\017\n\007task_id\030\001 \001(\005\"%"
    "\n\rProto80400344\022\024\n\014league_state\030\001 \001(\005\"$\n"
    "\rProto10100202\022\023\n\013activity_id\030\001 \001(\005\"$\n\rP"
    "roto10100203\022\023\n\013activity_id\030\001 \001(\005\"$\n\rPro"
    "to50100203\022\023\n\013activity_id\030\001 \001(\005\":\n\rProto"
    "50100202\022)\n\ractivity_info\030\001 \001(\0132\022.ProtoA"
    "ctivityInfo\"\?\n\rProto50100201\022.\n\022activity"
    "_info_list\030\001 \003(\0132\022.ProtoActivityInfo\"2\n\r"
    "Proto11400134\022!\n\ngoods_list\030\001 \003(\0132\r.Prot"
    "oPairObj\"5\n\rProto80100102\022\023\n\013src_role_id"
    "\030\001 \001(\003\022\017\n\007role_id\030\002 \001(\003\"!\n\rProto10400204"
    "\022\020\n\010pk_state\030\001 \001(\005\"!\n\rProto50400204\022\020\n\010p"
    "k_state\030\001 \001(\005", 4213);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient007.proto", &protobuf_RegisterTypes);
  Proto10100414::default_instance_ = new Proto10100414();
  Proto50100403::default_instance_ = new Proto50100403();
  Proto50100404::default_instance_ = new Proto50100404();
  Proto10100702::default_instance_ = new Proto10100702();
  Proto50100702::default_instance_ = new Proto50100702();
  Proto80100401::default_instance_ = new Proto80100401();
  Proto80100402::default_instance_ = new Proto80100402();
  Proto80100403::default_instance_ = new Proto80100403();
  Proto10400003::default_instance_ = new Proto10400003();
  Proto50400003::default_instance_ = new Proto50400003();
  Proto80400339::default_instance_ = new Proto80400339();
  Proto80400340::default_instance_ = new Proto80400340();
  Proto50400311::default_instance_ = new Proto50400311();
  Proto51401414::default_instance_ = new Proto51401414();
  Proto11401414::default_instance_ = new Proto11401414();
  Proto80100404::default_instance_ = new Proto80100404();
  Proto10100410::default_instance_ = new Proto10100410();
  Proto10400906::default_instance_ = new Proto10400906();
  Proto10100156::default_instance_ = new Proto10100156();
  Proto50100156::default_instance_ = new Proto50100156();
  Proto50400316::default_instance_ = new Proto50400316();
  Proto10400316::default_instance_ = new Proto10400316();
  Proto80100501::default_instance_ = new Proto80100501();
  Proto80400341::default_instance_ = new Proto80400341();
  Proto10400318::default_instance_ = new Proto10400318();
  Proto50400318::default_instance_ = new Proto50400318();
  Proto80400907::default_instance_ = new Proto80400907();
  Proto80400342::default_instance_ = new Proto80400342();
  Proto10400112::default_instance_ = new Proto10400112();
  Proto50400112::default_instance_ = new Proto50400112();
  Proto80400209::default_instance_ = new Proto80400209();
  Proto80400343::default_instance_ = new Proto80400343();
  Proto80400909::default_instance_ = new Proto80400909();
  Proto80400210::default_instance_ = new Proto80400210();
  Proto80400113::default_instance_ = new Proto80400113();
  Proto80200006::default_instance_ = new Proto80200006();
  Proto80400910::default_instance_ = new Proto80400910();
  Proto10400908::default_instance_ = new Proto10400908();
  Proto80400211::default_instance_ = new Proto80400211();
  Proto11400331::default_instance_ = new Proto11400331();
  Proto80400344::default_instance_ = new Proto80400344();
  Proto10100202::default_instance_ = new Proto10100202();
  Proto10100203::default_instance_ = new Proto10100203();
  Proto50100203::default_instance_ = new Proto50100203();
  Proto50100202::default_instance_ = new Proto50100202();
  Proto50100201::default_instance_ = new Proto50100201();
  Proto11400134::default_instance_ = new Proto11400134();
  Proto80100102::default_instance_ = new Proto80100102();
  Proto10400204::default_instance_ = new Proto10400204();
  Proto50400204::default_instance_ = new Proto50400204();
  Proto10100414::default_instance_->InitAsDefaultInstance();
  Proto50100403::default_instance_->InitAsDefaultInstance();
  Proto50100404::default_instance_->InitAsDefaultInstance();
  Proto10100702::default_instance_->InitAsDefaultInstance();
  Proto50100702::default_instance_->InitAsDefaultInstance();
  Proto80100401::default_instance_->InitAsDefaultInstance();
  Proto80100402::default_instance_->InitAsDefaultInstance();
  Proto80100403::default_instance_->InitAsDefaultInstance();
  Proto10400003::default_instance_->InitAsDefaultInstance();
  Proto50400003::default_instance_->InitAsDefaultInstance();
  Proto80400339::default_instance_->InitAsDefaultInstance();
  Proto80400340::default_instance_->InitAsDefaultInstance();
  Proto50400311::default_instance_->InitAsDefaultInstance();
  Proto51401414::default_instance_->InitAsDefaultInstance();
  Proto11401414::default_instance_->InitAsDefaultInstance();
  Proto80100404::default_instance_->InitAsDefaultInstance();
  Proto10100410::default_instance_->InitAsDefaultInstance();
  Proto10400906::default_instance_->InitAsDefaultInstance();
  Proto10100156::default_instance_->InitAsDefaultInstance();
  Proto50100156::default_instance_->InitAsDefaultInstance();
  Proto50400316::default_instance_->InitAsDefaultInstance();
  Proto10400316::default_instance_->InitAsDefaultInstance();
  Proto80100501::default_instance_->InitAsDefaultInstance();
  Proto80400341::default_instance_->InitAsDefaultInstance();
  Proto10400318::default_instance_->InitAsDefaultInstance();
  Proto50400318::default_instance_->InitAsDefaultInstance();
  Proto80400907::default_instance_->InitAsDefaultInstance();
  Proto80400342::default_instance_->InitAsDefaultInstance();
  Proto10400112::default_instance_->InitAsDefaultInstance();
  Proto50400112::default_instance_->InitAsDefaultInstance();
  Proto80400209::default_instance_->InitAsDefaultInstance();
  Proto80400343::default_instance_->InitAsDefaultInstance();
  Proto80400909::default_instance_->InitAsDefaultInstance();
  Proto80400210::default_instance_->InitAsDefaultInstance();
  Proto80400113::default_instance_->InitAsDefaultInstance();
  Proto80200006::default_instance_->InitAsDefaultInstance();
  Proto80400910::default_instance_->InitAsDefaultInstance();
  Proto10400908::default_instance_->InitAsDefaultInstance();
  Proto80400211::default_instance_->InitAsDefaultInstance();
  Proto11400331::default_instance_->InitAsDefaultInstance();
  Proto80400344::default_instance_->InitAsDefaultInstance();
  Proto10100202::default_instance_->InitAsDefaultInstance();
  Proto10100203::default_instance_->InitAsDefaultInstance();
  Proto50100203::default_instance_->InitAsDefaultInstance();
  Proto50100202::default_instance_->InitAsDefaultInstance();
  Proto50100201::default_instance_->InitAsDefaultInstance();
  Proto11400134::default_instance_->InitAsDefaultInstance();
  Proto80100102::default_instance_->InitAsDefaultInstance();
  Proto10400204::default_instance_->InitAsDefaultInstance();
  Proto50400204::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient007_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient007_2eproto {
  StaticDescriptorInitializer_ProtoClient007_2eproto() {
    protobuf_AddDesc_ProtoClient007_2eproto();
  }
} static_descriptor_initializer_ProtoClient007_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto10100414::kScriptSortFieldNumber;
const int Proto10100414::kChapterFieldNumber;
const int Proto10100414::kPieceFieldNumber;
#endif  // !_MSC_VER

Proto10100414::Proto10100414()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100414::InitAsDefaultInstance() {
}

Proto10100414::Proto10100414(const Proto10100414& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100414::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  chapter_ = 0;
  piece_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100414::~Proto10100414() {
  SharedDtor();
}

void Proto10100414::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100414::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100414::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100414_descriptor_;
}

const Proto10100414& Proto10100414::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto10100414* Proto10100414::default_instance_ = NULL;

Proto10100414* Proto10100414::New() const {
  return new Proto10100414;
}

void Proto10100414::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
    chapter_ = 0;
    piece_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100414::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_chapter;
        break;
      }
      
      // optional int32 chapter = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_chapter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chapter_)));
          set_has_chapter();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_piece;
        break;
      }
      
      // optional int32 piece = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_piece:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &piece_)));
          set_has_piece();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100414::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  // optional int32 chapter = 2;
  if (has_chapter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chapter(), output);
  }
  
  // optional int32 piece = 3;
  if (has_piece()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->piece(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100414::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  // optional int32 chapter = 2;
  if (has_chapter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chapter(), target);
  }
  
  // optional int32 piece = 3;
  if (has_piece()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->piece(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100414::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 chapter = 2;
    if (has_chapter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chapter());
    }
    
    // optional int32 piece = 3;
    if (has_piece()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->piece());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100414::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100414* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100414*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100414::MergeFrom(const Proto10100414& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_chapter()) {
      set_chapter(from.chapter());
    }
    if (from.has_piece()) {
      set_piece(from.piece());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100414::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100414::CopyFrom(const Proto10100414& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100414::IsInitialized() const {
  
  return true;
}

void Proto10100414::Swap(Proto10100414* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(chapter_, other->chapter_);
    std::swap(piece_, other->piece_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100414::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100414_descriptor_;
  metadata.reflection = Proto10100414_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100403::kRoleListFieldNumber;
#endif  // !_MSC_VER

Proto50100403::Proto50100403()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100403::InitAsDefaultInstance() {
}

Proto50100403::Proto50100403(const Proto50100403& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100403::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100403::~Proto50100403() {
  SharedDtor();
}

void Proto50100403::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100403::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100403::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100403_descriptor_;
}

const Proto50100403& Proto50100403::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto50100403* Proto50100403::default_instance_ = NULL;

Proto50100403* Proto50100403::New() const {
  return new Proto50100403;
}

void Proto50100403::Clear() {
  role_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100403::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoTeamer role_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_role_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_role_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100403::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoTeamer role_list = 1;
  for (int i = 0; i < this->role_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->role_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100403::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoTeamer role_list = 1;
  for (int i = 0; i < this->role_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->role_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100403::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoTeamer role_list = 1;
  total_size += 1 * this->role_list_size();
  for (int i = 0; i < this->role_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100403::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100403* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100403*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100403::MergeFrom(const Proto50100403& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_list_.MergeFrom(from.role_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100403::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100403::CopyFrom(const Proto50100403& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100403::IsInitialized() const {
  
  return true;
}

void Proto50100403::Swap(Proto50100403* other) {
  if (other != this) {
    role_list_.Swap(&other->role_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100403::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100403_descriptor_;
  metadata.reflection = Proto50100403_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100404::kRoleListFieldNumber;
#endif  // !_MSC_VER

Proto50100404::Proto50100404()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100404::InitAsDefaultInstance() {
}

Proto50100404::Proto50100404(const Proto50100404& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100404::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100404::~Proto50100404() {
  SharedDtor();
}

void Proto50100404::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100404::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100404::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100404_descriptor_;
}

const Proto50100404& Proto50100404::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto50100404* Proto50100404::default_instance_ = NULL;

Proto50100404* Proto50100404::New() const {
  return new Proto50100404;
}

void Proto50100404::Clear() {
  role_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100404::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoTeamer role_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_role_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_role_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100404::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoTeamer role_list = 1;
  for (int i = 0; i < this->role_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->role_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100404::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoTeamer role_list = 1;
  for (int i = 0; i < this->role_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->role_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100404::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoTeamer role_list = 1;
  total_size += 1 * this->role_list_size();
  for (int i = 0; i < this->role_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100404::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100404* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100404*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100404::MergeFrom(const Proto50100404& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_list_.MergeFrom(from.role_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100404::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100404::CopyFrom(const Proto50100404& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100404::IsInitialized() const {
  
  return true;
}

void Proto50100404::Swap(Proto50100404* other) {
  if (other != this) {
    role_list_.Swap(&other->role_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100404::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100404_descriptor_;
  metadata.reflection = Proto50100404_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100702::kRoleIdFieldNumber;
const int Proto10100702::kRankTypeFieldNumber;
const int Proto10100702::kRankIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100702::Proto10100702()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100702::InitAsDefaultInstance() {
}

Proto10100702::Proto10100702(const Proto10100702& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100702::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  rank_type_ = 0;
  rank_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100702::~Proto10100702() {
  SharedDtor();
}

void Proto10100702::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100702::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100702::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100702_descriptor_;
}

const Proto10100702& Proto10100702::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto10100702* Proto10100702::default_instance_ = NULL;

Proto10100702* Proto10100702::New() const {
  return new Proto10100702;
}

void Proto10100702::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    rank_type_ = 0;
    rank_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100702::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_rank_type;
        break;
      }
      
      // optional int32 rank_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_type_)));
          set_has_rank_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_rank_index;
        break;
      }
      
      // optional int32 rank_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_index_)));
          set_has_rank_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100702::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 rank_type = 2;
  if (has_rank_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rank_type(), output);
  }
  
  // optional int32 rank_index = 3;
  if (has_rank_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rank_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100702::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 rank_type = 2;
  if (has_rank_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rank_type(), target);
  }
  
  // optional int32 rank_index = 3;
  if (has_rank_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rank_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100702::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 rank_type = 2;
    if (has_rank_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_type());
    }
    
    // optional int32 rank_index = 3;
    if (has_rank_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100702::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100702* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100702*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100702::MergeFrom(const Proto10100702& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_rank_type()) {
      set_rank_type(from.rank_type());
    }
    if (from.has_rank_index()) {
      set_rank_index(from.rank_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100702::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100702::CopyFrom(const Proto10100702& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100702::IsInitialized() const {
  
  return true;
}

void Proto10100702::Swap(Proto10100702* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(rank_type_, other->rank_type_);
    std::swap(rank_index_, other->rank_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100702::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100702_descriptor_;
  metadata.reflection = Proto10100702_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100702::kRoleIdFieldNumber;
const int Proto50100702::kRankTypeFieldNumber;
const int Proto50100702::kMounterFieldNumber;
const int Proto50100702::kPetCurSortFieldNumber;
const int Proto50100702::kPetSortFieldNumber;
const int Proto50100702::kPetIdFieldNumber;
const int Proto50100702::kForceFieldNumber;
const int Proto50100702::kLabelFieldNumber;
const int Proto50100702::kWeaponFieldNumber;
const int Proto50100702::kClothesFieldNumber;
const int Proto50100702::kFashionWeaponFieldNumber;
const int Proto50100702::kFashionClothesFieldNumber;
const int Proto50100702::kCareerFieldNumber;
const int Proto50100702::kSexFieldNumber;
const int Proto50100702::kTopWingIdFieldNumber;
const int Proto50100702::kTopWingLevelFieldNumber;
const int Proto50100702::kReqRoleIdFieldNumber;
const int Proto50100702::kWeaponRefineLvlFieldNumber;
const int Proto50100702::kEquipRefineViewIndexFieldNumber;
const int Proto50100702::kFairyActFieldNumber;
const int Proto50100702::kIsWorshipFieldNumber;
const int Proto50100702::kMountInfoFieldNumber;
#endif  // !_MSC_VER

Proto50100702::Proto50100702()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100702::InitAsDefaultInstance() {
  fairy_act_ = const_cast< ::ProtoPairObj*>(&::ProtoPairObj::default_instance());
}

Proto50100702::Proto50100702(const Proto50100702& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100702::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  rank_type_ = 0;
  mounter_ = 0;
  pet_cur_sort_ = 0;
  pet_sort_ = 0;
  pet_id_ = GOOGLE_LONGLONG(0);
  force_ = GOOGLE_LONGLONG(0);
  label_ = 0;
  weapon_ = 0;
  clothes_ = 0;
  fashion_weapon_ = 0;
  fashion_clothes_ = 0;
  career_ = 0;
  sex_ = 0;
  top_wing_id_ = 0;
  top_wing_level_ = 0;
  req_role_id_ = GOOGLE_LONGLONG(0);
  weapon_refine_lvl_ = 0;
  equip_refine_view_index_ = 0;
  fairy_act_ = NULL;
  is_worship_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100702::~Proto50100702() {
  SharedDtor();
}

void Proto50100702::SharedDtor() {
  if (this != default_instance_) {
    delete fairy_act_;
  }
}

void Proto50100702::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100702::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100702_descriptor_;
}

const Proto50100702& Proto50100702::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto50100702* Proto50100702::default_instance_ = NULL;

Proto50100702* Proto50100702::New() const {
  return new Proto50100702;
}

void Proto50100702::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    rank_type_ = 0;
    mounter_ = 0;
    pet_cur_sort_ = 0;
    pet_sort_ = 0;
    pet_id_ = GOOGLE_LONGLONG(0);
    force_ = GOOGLE_LONGLONG(0);
    label_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    weapon_ = 0;
    clothes_ = 0;
    fashion_weapon_ = 0;
    fashion_clothes_ = 0;
    career_ = 0;
    sex_ = 0;
    top_wing_id_ = 0;
    top_wing_level_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    req_role_id_ = GOOGLE_LONGLONG(0);
    weapon_refine_lvl_ = 0;
    equip_refine_view_index_ = 0;
    if (has_fairy_act()) {
      if (fairy_act_ != NULL) fairy_act_->::ProtoPairObj::Clear();
    }
    is_worship_ = 0;
  }
  mount_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100702::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_rank_type;
        break;
      }
      
      // optional int32 rank_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_type_)));
          set_has_rank_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_mounter;
        break;
      }
      
      // optional int32 mounter = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mounter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mounter_)));
          set_has_mounter();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pet_cur_sort;
        break;
      }
      
      // optional int32 pet_cur_sort = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pet_cur_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pet_cur_sort_)));
          set_has_pet_cur_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_pet_sort;
        break;
      }
      
      // optional int32 pet_sort = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pet_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pet_sort_)));
          set_has_pet_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_pet_id;
        break;
      }
      
      // optional int64 pet_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pet_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pet_id_)));
          set_has_pet_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_force;
        break;
      }
      
      // optional int64 force = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_label;
        break;
      }
      
      // optional int32 label = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_label:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_)));
          set_has_label();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_weapon;
        break;
      }
      
      // optional int32 weapon = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_weapon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weapon_)));
          set_has_weapon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_clothes;
        break;
      }
      
      // optional int32 clothes = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_clothes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clothes_)));
          set_has_clothes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_fashion_weapon;
        break;
      }
      
      // optional int32 fashion_weapon = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_weapon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_weapon_)));
          set_has_fashion_weapon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_fashion_clothes;
        break;
      }
      
      // optional int32 fashion_clothes = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_clothes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_clothes_)));
          set_has_fashion_clothes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_career;
        break;
      }
      
      // optional int32 career = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_career:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &career_)));
          set_has_career();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_sex;
        break;
      }
      
      // optional int32 sex = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_top_wing_id;
        break;
      }
      
      // optional int32 top_wing_id = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_top_wing_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_wing_id_)));
          set_has_top_wing_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_top_wing_level;
        break;
      }
      
      // optional int32 top_wing_level = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_top_wing_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_wing_level_)));
          set_has_top_wing_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_req_role_id;
        break;
      }
      
      // optional int64 req_role_id = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_req_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &req_role_id_)));
          set_has_req_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_weapon_refine_lvl;
        break;
      }
      
      // optional int32 weapon_refine_lvl = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_weapon_refine_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weapon_refine_lvl_)));
          set_has_weapon_refine_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_equip_refine_view_index;
        break;
      }
      
      // optional int32 equip_refine_view_index = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equip_refine_view_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equip_refine_view_index_)));
          set_has_equip_refine_view_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_fairy_act;
        break;
      }
      
      // optional .ProtoPairObj fairy_act = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fairy_act:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fairy_act()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_is_worship;
        break;
      }
      
      // optional int32 is_worship = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_worship:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_worship_)));
          set_has_is_worship();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_mount_info;
        break;
      }
      
      // repeated .ProtoPairObj mount_info = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mount_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mount_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_mount_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100702::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 rank_type = 2;
  if (has_rank_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rank_type(), output);
  }
  
  // optional int32 mounter = 3;
  if (has_mounter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mounter(), output);
  }
  
  // optional int32 pet_cur_sort = 4;
  if (has_pet_cur_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pet_cur_sort(), output);
  }
  
  // optional int32 pet_sort = 5;
  if (has_pet_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pet_sort(), output);
  }
  
  // optional int64 pet_id = 6;
  if (has_pet_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->pet_id(), output);
  }
  
  // optional int64 force = 7;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->force(), output);
  }
  
  // optional int32 label = 8;
  if (has_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->label(), output);
  }
  
  // optional int32 weapon = 9;
  if (has_weapon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->weapon(), output);
  }
  
  // optional int32 clothes = 10;
  if (has_clothes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->clothes(), output);
  }
  
  // optional int32 fashion_weapon = 11;
  if (has_fashion_weapon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->fashion_weapon(), output);
  }
  
  // optional int32 fashion_clothes = 12;
  if (has_fashion_clothes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->fashion_clothes(), output);
  }
  
  // optional int32 career = 13;
  if (has_career()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->career(), output);
  }
  
  // optional int32 sex = 14;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->sex(), output);
  }
  
  // optional int32 top_wing_id = 15;
  if (has_top_wing_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->top_wing_id(), output);
  }
  
  // optional int32 top_wing_level = 16;
  if (has_top_wing_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->top_wing_level(), output);
  }
  
  // optional int64 req_role_id = 17;
  if (has_req_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(17, this->req_role_id(), output);
  }
  
  // optional int32 weapon_refine_lvl = 18;
  if (has_weapon_refine_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->weapon_refine_lvl(), output);
  }
  
  // optional int32 equip_refine_view_index = 19;
  if (has_equip_refine_view_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->equip_refine_view_index(), output);
  }
  
  // optional .ProtoPairObj fairy_act = 20;
  if (has_fairy_act()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->fairy_act(), output);
  }
  
  // optional int32 is_worship = 21;
  if (has_is_worship()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->is_worship(), output);
  }
  
  // repeated .ProtoPairObj mount_info = 22;
  for (int i = 0; i < this->mount_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->mount_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100702::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 rank_type = 2;
  if (has_rank_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rank_type(), target);
  }
  
  // optional int32 mounter = 3;
  if (has_mounter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mounter(), target);
  }
  
  // optional int32 pet_cur_sort = 4;
  if (has_pet_cur_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pet_cur_sort(), target);
  }
  
  // optional int32 pet_sort = 5;
  if (has_pet_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pet_sort(), target);
  }
  
  // optional int64 pet_id = 6;
  if (has_pet_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->pet_id(), target);
  }
  
  // optional int64 force = 7;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->force(), target);
  }
  
  // optional int32 label = 8;
  if (has_label()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->label(), target);
  }
  
  // optional int32 weapon = 9;
  if (has_weapon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->weapon(), target);
  }
  
  // optional int32 clothes = 10;
  if (has_clothes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->clothes(), target);
  }
  
  // optional int32 fashion_weapon = 11;
  if (has_fashion_weapon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->fashion_weapon(), target);
  }
  
  // optional int32 fashion_clothes = 12;
  if (has_fashion_clothes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->fashion_clothes(), target);
  }
  
  // optional int32 career = 13;
  if (has_career()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->career(), target);
  }
  
  // optional int32 sex = 14;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->sex(), target);
  }
  
  // optional int32 top_wing_id = 15;
  if (has_top_wing_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->top_wing_id(), target);
  }
  
  // optional int32 top_wing_level = 16;
  if (has_top_wing_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->top_wing_level(), target);
  }
  
  // optional int64 req_role_id = 17;
  if (has_req_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(17, this->req_role_id(), target);
  }
  
  // optional int32 weapon_refine_lvl = 18;
  if (has_weapon_refine_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->weapon_refine_lvl(), target);
  }
  
  // optional int32 equip_refine_view_index = 19;
  if (has_equip_refine_view_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->equip_refine_view_index(), target);
  }
  
  // optional .ProtoPairObj fairy_act = 20;
  if (has_fairy_act()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->fairy_act(), target);
  }
  
  // optional int32 is_worship = 21;
  if (has_is_worship()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->is_worship(), target);
  }
  
  // repeated .ProtoPairObj mount_info = 22;
  for (int i = 0; i < this->mount_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->mount_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100702::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 rank_type = 2;
    if (has_rank_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_type());
    }
    
    // optional int32 mounter = 3;
    if (has_mounter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mounter());
    }
    
    // optional int32 pet_cur_sort = 4;
    if (has_pet_cur_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pet_cur_sort());
    }
    
    // optional int32 pet_sort = 5;
    if (has_pet_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pet_sort());
    }
    
    // optional int64 pet_id = 6;
    if (has_pet_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pet_id());
    }
    
    // optional int64 force = 7;
    if (has_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->force());
    }
    
    // optional int32 label = 8;
    if (has_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 weapon = 9;
    if (has_weapon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weapon());
    }
    
    // optional int32 clothes = 10;
    if (has_clothes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->clothes());
    }
    
    // optional int32 fashion_weapon = 11;
    if (has_fashion_weapon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_weapon());
    }
    
    // optional int32 fashion_clothes = 12;
    if (has_fashion_clothes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_clothes());
    }
    
    // optional int32 career = 13;
    if (has_career()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->career());
    }
    
    // optional int32 sex = 14;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }
    
    // optional int32 top_wing_id = 15;
    if (has_top_wing_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top_wing_id());
    }
    
    // optional int32 top_wing_level = 16;
    if (has_top_wing_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top_wing_level());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int64 req_role_id = 17;
    if (has_req_role_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->req_role_id());
    }
    
    // optional int32 weapon_refine_lvl = 18;
    if (has_weapon_refine_lvl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weapon_refine_lvl());
    }
    
    // optional int32 equip_refine_view_index = 19;
    if (has_equip_refine_view_index()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equip_refine_view_index());
    }
    
    // optional .ProtoPairObj fairy_act = 20;
    if (has_fairy_act()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fairy_act());
    }
    
    // optional int32 is_worship = 21;
    if (has_is_worship()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_worship());
    }
    
  }
  // repeated .ProtoPairObj mount_info = 22;
  total_size += 2 * this->mount_info_size();
  for (int i = 0; i < this->mount_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mount_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100702::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100702* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100702*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100702::MergeFrom(const Proto50100702& from) {
  GOOGLE_CHECK_NE(&from, this);
  mount_info_.MergeFrom(from.mount_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_rank_type()) {
      set_rank_type(from.rank_type());
    }
    if (from.has_mounter()) {
      set_mounter(from.mounter());
    }
    if (from.has_pet_cur_sort()) {
      set_pet_cur_sort(from.pet_cur_sort());
    }
    if (from.has_pet_sort()) {
      set_pet_sort(from.pet_sort());
    }
    if (from.has_pet_id()) {
      set_pet_id(from.pet_id());
    }
    if (from.has_force()) {
      set_force(from.force());
    }
    if (from.has_label()) {
      set_label(from.label());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_weapon()) {
      set_weapon(from.weapon());
    }
    if (from.has_clothes()) {
      set_clothes(from.clothes());
    }
    if (from.has_fashion_weapon()) {
      set_fashion_weapon(from.fashion_weapon());
    }
    if (from.has_fashion_clothes()) {
      set_fashion_clothes(from.fashion_clothes());
    }
    if (from.has_career()) {
      set_career(from.career());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_top_wing_id()) {
      set_top_wing_id(from.top_wing_id());
    }
    if (from.has_top_wing_level()) {
      set_top_wing_level(from.top_wing_level());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_req_role_id()) {
      set_req_role_id(from.req_role_id());
    }
    if (from.has_weapon_refine_lvl()) {
      set_weapon_refine_lvl(from.weapon_refine_lvl());
    }
    if (from.has_equip_refine_view_index()) {
      set_equip_refine_view_index(from.equip_refine_view_index());
    }
    if (from.has_fairy_act()) {
      mutable_fairy_act()->::ProtoPairObj::MergeFrom(from.fairy_act());
    }
    if (from.has_is_worship()) {
      set_is_worship(from.is_worship());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100702::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100702::CopyFrom(const Proto50100702& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100702::IsInitialized() const {
  
  return true;
}

void Proto50100702::Swap(Proto50100702* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(rank_type_, other->rank_type_);
    std::swap(mounter_, other->mounter_);
    std::swap(pet_cur_sort_, other->pet_cur_sort_);
    std::swap(pet_sort_, other->pet_sort_);
    std::swap(pet_id_, other->pet_id_);
    std::swap(force_, other->force_);
    std::swap(label_, other->label_);
    std::swap(weapon_, other->weapon_);
    std::swap(clothes_, other->clothes_);
    std::swap(fashion_weapon_, other->fashion_weapon_);
    std::swap(fashion_clothes_, other->fashion_clothes_);
    std::swap(career_, other->career_);
    std::swap(sex_, other->sex_);
    std::swap(top_wing_id_, other->top_wing_id_);
    std::swap(top_wing_level_, other->top_wing_level_);
    std::swap(req_role_id_, other->req_role_id_);
    std::swap(weapon_refine_lvl_, other->weapon_refine_lvl_);
    std::swap(equip_refine_view_index_, other->equip_refine_view_index_);
    std::swap(fairy_act_, other->fairy_act_);
    std::swap(is_worship_, other->is_worship_);
    mount_info_.Swap(&other->mount_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100702::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100702_descriptor_;
  metadata.reflection = Proto50100702_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100401::kInvitorFieldNumber;
const int Proto80100401::kFbIdFieldNumber;
#endif  // !_MSC_VER

Proto80100401::Proto80100401()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100401::InitAsDefaultInstance() {
  invitor_ = const_cast< ::ProtoTeamer*>(&::ProtoTeamer::default_instance());
}

Proto80100401::Proto80100401(const Proto80100401& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100401::SharedCtor() {
  _cached_size_ = 0;
  invitor_ = NULL;
  fb_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100401::~Proto80100401() {
  SharedDtor();
}

void Proto80100401::SharedDtor() {
  if (this != default_instance_) {
    delete invitor_;
  }
}

void Proto80100401::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100401::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100401_descriptor_;
}

const Proto80100401& Proto80100401::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80100401* Proto80100401::default_instance_ = NULL;

Proto80100401* Proto80100401::New() const {
  return new Proto80100401;
}

void Proto80100401::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_invitor()) {
      if (invitor_ != NULL) invitor_->::ProtoTeamer::Clear();
    }
    fb_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100401::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoTeamer invitor = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_invitor()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_fb_id;
        break;
      }
      
      // optional int32 fb_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fb_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fb_id_)));
          set_has_fb_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100401::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoTeamer invitor = 1;
  if (has_invitor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->invitor(), output);
  }
  
  // optional int32 fb_id = 2;
  if (has_fb_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fb_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100401::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoTeamer invitor = 1;
  if (has_invitor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->invitor(), target);
  }
  
  // optional int32 fb_id = 2;
  if (has_fb_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fb_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100401::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoTeamer invitor = 1;
    if (has_invitor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->invitor());
    }
    
    // optional int32 fb_id = 2;
    if (has_fb_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fb_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100401::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100401* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100401*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100401::MergeFrom(const Proto80100401& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_invitor()) {
      mutable_invitor()->::ProtoTeamer::MergeFrom(from.invitor());
    }
    if (from.has_fb_id()) {
      set_fb_id(from.fb_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100401::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100401::CopyFrom(const Proto80100401& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100401::IsInitialized() const {
  
  return true;
}

void Proto80100401::Swap(Proto80100401* other) {
  if (other != this) {
    std::swap(invitor_, other->invitor_);
    std::swap(fb_id_, other->fb_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100401::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100401_descriptor_;
  metadata.reflection = Proto80100401_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100402::kApplicantFieldNumber;
#endif  // !_MSC_VER

Proto80100402::Proto80100402()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100402::InitAsDefaultInstance() {
  applicant_ = const_cast< ::ProtoTeamer*>(&::ProtoTeamer::default_instance());
}

Proto80100402::Proto80100402(const Proto80100402& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100402::SharedCtor() {
  _cached_size_ = 0;
  applicant_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100402::~Proto80100402() {
  SharedDtor();
}

void Proto80100402::SharedDtor() {
  if (this != default_instance_) {
    delete applicant_;
  }
}

void Proto80100402::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100402::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100402_descriptor_;
}

const Proto80100402& Proto80100402::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80100402* Proto80100402::default_instance_ = NULL;

Proto80100402* Proto80100402::New() const {
  return new Proto80100402;
}

void Proto80100402::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_applicant()) {
      if (applicant_ != NULL) applicant_->::ProtoTeamer::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100402::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoTeamer applicant = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_applicant()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100402::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoTeamer applicant = 1;
  if (has_applicant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->applicant(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100402::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoTeamer applicant = 1;
  if (has_applicant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->applicant(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100402::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoTeamer applicant = 1;
    if (has_applicant()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->applicant());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100402::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100402* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100402*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100402::MergeFrom(const Proto80100402& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_applicant()) {
      mutable_applicant()->::ProtoTeamer::MergeFrom(from.applicant());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100402::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100402::CopyFrom(const Proto80100402& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100402::IsInitialized() const {
  
  return true;
}

void Proto80100402::Swap(Proto80100402* other) {
  if (other != this) {
    std::swap(applicant_, other->applicant_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100402::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100402_descriptor_;
  metadata.reflection = Proto80100402_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100403::kFbIdFieldNumber;
#endif  // !_MSC_VER

Proto80100403::Proto80100403()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100403::InitAsDefaultInstance() {
}

Proto80100403::Proto80100403(const Proto80100403& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100403::SharedCtor() {
  _cached_size_ = 0;
  fb_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100403::~Proto80100403() {
  SharedDtor();
}

void Proto80100403::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80100403::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100403::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100403_descriptor_;
}

const Proto80100403& Proto80100403::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80100403* Proto80100403::default_instance_ = NULL;

Proto80100403* Proto80100403::New() const {
  return new Proto80100403;
}

void Proto80100403::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fb_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100403::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fb_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fb_id_)));
          set_has_fb_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100403::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fb_id = 1;
  if (has_fb_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fb_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100403::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fb_id = 1;
  if (has_fb_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fb_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100403::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fb_id = 1;
    if (has_fb_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fb_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100403::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100403* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100403*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100403::MergeFrom(const Proto80100403& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fb_id()) {
      set_fb_id(from.fb_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100403::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100403::CopyFrom(const Proto80100403& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100403::IsInitialized() const {
  
  return true;
}

void Proto80100403::Swap(Proto80100403* other) {
  if (other != this) {
    std::swap(fb_id_, other->fb_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100403::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100403_descriptor_;
  metadata.reflection = Proto80100403_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400003::kGoodsIdFieldNumber;
#endif  // !_MSC_VER

Proto10400003::Proto10400003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400003::InitAsDefaultInstance() {
}

Proto10400003::Proto10400003(const Proto10400003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400003::SharedCtor() {
  _cached_size_ = 0;
  goods_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400003::~Proto10400003() {
  SharedDtor();
}

void Proto10400003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400003_descriptor_;
}

const Proto10400003& Proto10400003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto10400003* Proto10400003::default_instance_ = NULL;

Proto10400003* Proto10400003::New() const {
  return new Proto10400003;
}

void Proto10400003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    goods_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 goods_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &goods_id_)));
          set_has_goods_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 goods_id = 1;
  if (has_goods_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->goods_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 goods_id = 1;
  if (has_goods_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->goods_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 goods_id = 1;
    if (has_goods_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->goods_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400003::MergeFrom(const Proto10400003& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goods_id()) {
      set_goods_id(from.goods_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400003::CopyFrom(const Proto10400003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400003::IsInitialized() const {
  
  return true;
}

void Proto10400003::Swap(Proto10400003* other) {
  if (other != this) {
    std::swap(goods_id_, other->goods_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400003_descriptor_;
  metadata.reflection = Proto10400003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400003::kGatherFlagFieldNumber;
#endif  // !_MSC_VER

Proto50400003::Proto50400003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400003::InitAsDefaultInstance() {
}

Proto50400003::Proto50400003(const Proto50400003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400003::SharedCtor() {
  _cached_size_ = 0;
  gather_flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400003::~Proto50400003() {
  SharedDtor();
}

void Proto50400003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400003_descriptor_;
}

const Proto50400003& Proto50400003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto50400003* Proto50400003::default_instance_ = NULL;

Proto50400003* Proto50400003::New() const {
  return new Proto50400003;
}

void Proto50400003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gather_flag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 gather_flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gather_flag_)));
          set_has_gather_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 gather_flag = 1;
  if (has_gather_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gather_flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 gather_flag = 1;
  if (has_gather_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gather_flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 gather_flag = 1;
    if (has_gather_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gather_flag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400003::MergeFrom(const Proto50400003& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gather_flag()) {
      set_gather_flag(from.gather_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400003::CopyFrom(const Proto50400003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400003::IsInitialized() const {
  
  return true;
}

void Proto50400003::Swap(Proto50400003* other) {
  if (other != this) {
    std::swap(gather_flag_, other->gather_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400003_descriptor_;
  metadata.reflection = Proto50400003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400339::kLeftTimeFieldNumber;
#endif  // !_MSC_VER

Proto80400339::Proto80400339()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400339::InitAsDefaultInstance() {
}

Proto80400339::Proto80400339(const Proto80400339& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400339::SharedCtor() {
  _cached_size_ = 0;
  left_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400339::~Proto80400339() {
  SharedDtor();
}

void Proto80400339::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400339::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400339::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400339_descriptor_;
}

const Proto80400339& Proto80400339::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80400339* Proto80400339::default_instance_ = NULL;

Proto80400339* Proto80400339::New() const {
  return new Proto80400339;
}

void Proto80400339::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400339::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400339::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_time = 1;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400339::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_time = 1;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400339::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_time = 1;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400339::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400339* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400339*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400339::MergeFrom(const Proto80400339& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400339::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400339::CopyFrom(const Proto80400339& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400339::IsInitialized() const {
  
  return true;
}

void Proto80400339::Swap(Proto80400339* other) {
  if (other != this) {
    std::swap(left_time_, other->left_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400339::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400339_descriptor_;
  metadata.reflection = Proto80400339_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400340::kFirstIdFieldNumber;
const int Proto80400340::kFirstCurBloodFieldNumber;
const int Proto80400340::kFirstTotalBloodFieldNumber;
const int Proto80400340::kFirstCurMagicFieldNumber;
const int Proto80400340::kFirstTotalMagicFieldNumber;
const int Proto80400340::kSecondIdFieldNumber;
const int Proto80400340::kSecondCurBloodFieldNumber;
const int Proto80400340::kSecondTotalBloodFieldNumber;
const int Proto80400340::kSecondCurMagicFieldNumber;
const int Proto80400340::kSecondTotalMagicFieldNumber;
#endif  // !_MSC_VER

Proto80400340::Proto80400340()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400340::InitAsDefaultInstance() {
}

Proto80400340::Proto80400340(const Proto80400340& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400340::SharedCtor() {
  _cached_size_ = 0;
  first_id_ = GOOGLE_LONGLONG(0);
  first_cur_blood_ = 0;
  first_total_blood_ = 0;
  first_cur_magic_ = 0;
  first_total_magic_ = 0;
  second_id_ = GOOGLE_LONGLONG(0);
  second_cur_blood_ = 0;
  second_total_blood_ = 0;
  second_cur_magic_ = 0;
  second_total_magic_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400340::~Proto80400340() {
  SharedDtor();
}

void Proto80400340::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400340::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400340::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400340_descriptor_;
}

const Proto80400340& Proto80400340::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80400340* Proto80400340::default_instance_ = NULL;

Proto80400340* Proto80400340::New() const {
  return new Proto80400340;
}

void Proto80400340::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    first_id_ = GOOGLE_LONGLONG(0);
    first_cur_blood_ = 0;
    first_total_blood_ = 0;
    first_cur_magic_ = 0;
    first_total_magic_ = 0;
    second_id_ = GOOGLE_LONGLONG(0);
    second_cur_blood_ = 0;
    second_total_blood_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    second_cur_magic_ = 0;
    second_total_magic_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400340::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 first_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &first_id_)));
          set_has_first_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_first_cur_blood;
        break;
      }
      
      // optional int32 first_cur_blood = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_cur_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_cur_blood_)));
          set_has_first_cur_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_first_total_blood;
        break;
      }
      
      // optional int32 first_total_blood = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_total_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_total_blood_)));
          set_has_first_total_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_first_cur_magic;
        break;
      }
      
      // optional int32 first_cur_magic = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_cur_magic:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_cur_magic_)));
          set_has_first_cur_magic();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_first_total_magic;
        break;
      }
      
      // optional int32 first_total_magic = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_total_magic:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_total_magic_)));
          set_has_first_total_magic();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_second_id;
        break;
      }
      
      // optional int64 second_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &second_id_)));
          set_has_second_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_second_cur_blood;
        break;
      }
      
      // optional int32 second_cur_blood = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_cur_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_cur_blood_)));
          set_has_second_cur_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_second_total_blood;
        break;
      }
      
      // optional int32 second_total_blood = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_total_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_total_blood_)));
          set_has_second_total_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_second_cur_magic;
        break;
      }
      
      // optional int32 second_cur_magic = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_cur_magic:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_cur_magic_)));
          set_has_second_cur_magic();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_second_total_magic;
        break;
      }
      
      // optional int32 second_total_magic = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_total_magic:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_total_magic_)));
          set_has_second_total_magic();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400340::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 first_id = 1;
  if (has_first_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->first_id(), output);
  }
  
  // optional int32 first_cur_blood = 2;
  if (has_first_cur_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->first_cur_blood(), output);
  }
  
  // optional int32 first_total_blood = 3;
  if (has_first_total_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->first_total_blood(), output);
  }
  
  // optional int32 first_cur_magic = 4;
  if (has_first_cur_magic()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->first_cur_magic(), output);
  }
  
  // optional int32 first_total_magic = 5;
  if (has_first_total_magic()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->first_total_magic(), output);
  }
  
  // optional int64 second_id = 6;
  if (has_second_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->second_id(), output);
  }
  
  // optional int32 second_cur_blood = 7;
  if (has_second_cur_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->second_cur_blood(), output);
  }
  
  // optional int32 second_total_blood = 8;
  if (has_second_total_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->second_total_blood(), output);
  }
  
  // optional int32 second_cur_magic = 9;
  if (has_second_cur_magic()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->second_cur_magic(), output);
  }
  
  // optional int32 second_total_magic = 10;
  if (has_second_total_magic()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->second_total_magic(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400340::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 first_id = 1;
  if (has_first_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->first_id(), target);
  }
  
  // optional int32 first_cur_blood = 2;
  if (has_first_cur_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->first_cur_blood(), target);
  }
  
  // optional int32 first_total_blood = 3;
  if (has_first_total_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->first_total_blood(), target);
  }
  
  // optional int32 first_cur_magic = 4;
  if (has_first_cur_magic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->first_cur_magic(), target);
  }
  
  // optional int32 first_total_magic = 5;
  if (has_first_total_magic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->first_total_magic(), target);
  }
  
  // optional int64 second_id = 6;
  if (has_second_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->second_id(), target);
  }
  
  // optional int32 second_cur_blood = 7;
  if (has_second_cur_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->second_cur_blood(), target);
  }
  
  // optional int32 second_total_blood = 8;
  if (has_second_total_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->second_total_blood(), target);
  }
  
  // optional int32 second_cur_magic = 9;
  if (has_second_cur_magic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->second_cur_magic(), target);
  }
  
  // optional int32 second_total_magic = 10;
  if (has_second_total_magic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->second_total_magic(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400340::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 first_id = 1;
    if (has_first_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->first_id());
    }
    
    // optional int32 first_cur_blood = 2;
    if (has_first_cur_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_cur_blood());
    }
    
    // optional int32 first_total_blood = 3;
    if (has_first_total_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_total_blood());
    }
    
    // optional int32 first_cur_magic = 4;
    if (has_first_cur_magic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_cur_magic());
    }
    
    // optional int32 first_total_magic = 5;
    if (has_first_total_magic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_total_magic());
    }
    
    // optional int64 second_id = 6;
    if (has_second_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->second_id());
    }
    
    // optional int32 second_cur_blood = 7;
    if (has_second_cur_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_cur_blood());
    }
    
    // optional int32 second_total_blood = 8;
    if (has_second_total_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_total_blood());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 second_cur_magic = 9;
    if (has_second_cur_magic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_cur_magic());
    }
    
    // optional int32 second_total_magic = 10;
    if (has_second_total_magic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_total_magic());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400340::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400340* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400340*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400340::MergeFrom(const Proto80400340& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_first_id()) {
      set_first_id(from.first_id());
    }
    if (from.has_first_cur_blood()) {
      set_first_cur_blood(from.first_cur_blood());
    }
    if (from.has_first_total_blood()) {
      set_first_total_blood(from.first_total_blood());
    }
    if (from.has_first_cur_magic()) {
      set_first_cur_magic(from.first_cur_magic());
    }
    if (from.has_first_total_magic()) {
      set_first_total_magic(from.first_total_magic());
    }
    if (from.has_second_id()) {
      set_second_id(from.second_id());
    }
    if (from.has_second_cur_blood()) {
      set_second_cur_blood(from.second_cur_blood());
    }
    if (from.has_second_total_blood()) {
      set_second_total_blood(from.second_total_blood());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_second_cur_magic()) {
      set_second_cur_magic(from.second_cur_magic());
    }
    if (from.has_second_total_magic()) {
      set_second_total_magic(from.second_total_magic());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400340::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400340::CopyFrom(const Proto80400340& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400340::IsInitialized() const {
  
  return true;
}

void Proto80400340::Swap(Proto80400340* other) {
  if (other != this) {
    std::swap(first_id_, other->first_id_);
    std::swap(first_cur_blood_, other->first_cur_blood_);
    std::swap(first_total_blood_, other->first_total_blood_);
    std::swap(first_cur_magic_, other->first_cur_magic_);
    std::swap(first_total_magic_, other->first_total_magic_);
    std::swap(second_id_, other->second_id_);
    std::swap(second_cur_blood_, other->second_cur_blood_);
    std::swap(second_total_blood_, other->second_total_blood_);
    std::swap(second_cur_magic_, other->second_cur_magic_);
    std::swap(second_total_magic_, other->second_total_magic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400340::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400340_descriptor_;
  metadata.reflection = Proto80400340_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400311::kOpenFlagFieldNumber;
#endif  // !_MSC_VER

Proto50400311::Proto50400311()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400311::InitAsDefaultInstance() {
}

Proto50400311::Proto50400311(const Proto50400311& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400311::SharedCtor() {
  _cached_size_ = 0;
  open_flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400311::~Proto50400311() {
  SharedDtor();
}

void Proto50400311::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400311::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400311::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400311_descriptor_;
}

const Proto50400311& Proto50400311::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto50400311* Proto50400311::default_instance_ = NULL;

Proto50400311* Proto50400311::New() const {
  return new Proto50400311;
}

void Proto50400311::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    open_flag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400311::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 open_flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_flag_)));
          set_has_open_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400311::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 open_flag = 1;
  if (has_open_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->open_flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400311::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 open_flag = 1;
  if (has_open_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->open_flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400311::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 open_flag = 1;
    if (has_open_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open_flag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400311::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400311* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400311*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400311::MergeFrom(const Proto50400311& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_open_flag()) {
      set_open_flag(from.open_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400311::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400311::CopyFrom(const Proto50400311& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400311::IsInitialized() const {
  
  return true;
}

void Proto50400311::Swap(Proto50400311* other) {
  if (other != this) {
    std::swap(open_flag_, other->open_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400311::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400311_descriptor_;
  metadata.reflection = Proto50400311_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401414::kLeftCountInfoFieldNumber;
#endif  // !_MSC_VER

Proto51401414::Proto51401414()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401414::InitAsDefaultInstance() {
}

Proto51401414::Proto51401414(const Proto51401414& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401414::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401414::~Proto51401414() {
  SharedDtor();
}

void Proto51401414::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401414::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401414::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401414_descriptor_;
}

const Proto51401414& Proto51401414::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto51401414* Proto51401414::default_instance_ = NULL;

Proto51401414* Proto51401414::New() const {
  return new Proto51401414;
}

void Proto51401414::Clear() {
  left_count_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401414::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoPairObj left_count_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_left_count_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_left_count_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_left_count_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401414::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoPairObj left_count_info = 1;
  for (int i = 0; i < this->left_count_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->left_count_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401414::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoPairObj left_count_info = 1;
  for (int i = 0; i < this->left_count_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->left_count_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401414::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoPairObj left_count_info = 1;
  total_size += 1 * this->left_count_info_size();
  for (int i = 0; i < this->left_count_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->left_count_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401414::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401414* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401414*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401414::MergeFrom(const Proto51401414& from) {
  GOOGLE_CHECK_NE(&from, this);
  left_count_info_.MergeFrom(from.left_count_info_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401414::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401414::CopyFrom(const Proto51401414& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401414::IsInitialized() const {
  
  return true;
}

void Proto51401414::Swap(Proto51401414* other) {
  if (other != this) {
    left_count_info_.Swap(&other->left_count_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401414::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401414_descriptor_;
  metadata.reflection = Proto51401414_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401414::kEventIdFieldNumber;
#endif  // !_MSC_VER

Proto11401414::Proto11401414()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401414::InitAsDefaultInstance() {
}

Proto11401414::Proto11401414(const Proto11401414& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401414::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401414::~Proto11401414() {
  SharedDtor();
}

void Proto11401414::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401414::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401414::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401414_descriptor_;
}

const Proto11401414& Proto11401414::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto11401414* Proto11401414::default_instance_ = NULL;

Proto11401414* Proto11401414::New() const {
  return new Proto11401414;
}

void Proto11401414::Clear() {
  event_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401414::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 event_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_event_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_event_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_event_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_event_id;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401414::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 event_id = 1;
  for (int i = 0; i < this->event_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->event_id(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401414::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 event_id = 1;
  for (int i = 0; i < this->event_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->event_id(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401414::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 event_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->event_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->event_id(i));
    }
    total_size += 1 * this->event_id_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401414::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401414* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401414*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401414::MergeFrom(const Proto11401414& from) {
  GOOGLE_CHECK_NE(&from, this);
  event_id_.MergeFrom(from.event_id_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401414::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401414::CopyFrom(const Proto11401414& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401414::IsInitialized() const {
  
  return true;
}

void Proto11401414::Swap(Proto11401414* other) {
  if (other != this) {
    event_id_.Swap(&other->event_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401414::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401414_descriptor_;
  metadata.reflection = Proto11401414_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100404::kReadyInfoFieldNumber;
#endif  // !_MSC_VER

Proto80100404::Proto80100404()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100404::InitAsDefaultInstance() {
}

Proto80100404::Proto80100404(const Proto80100404& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100404::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100404::~Proto80100404() {
  SharedDtor();
}

void Proto80100404::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80100404::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100404::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100404_descriptor_;
}

const Proto80100404& Proto80100404::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80100404* Proto80100404::default_instance_ = NULL;

Proto80100404* Proto80100404::New() const {
  return new Proto80100404;
}

void Proto80100404::Clear() {
  ready_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100404::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoFBReadyInfo ready_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ready_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ready_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_ready_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100404::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoFBReadyInfo ready_info = 1;
  for (int i = 0; i < this->ready_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ready_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100404::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoFBReadyInfo ready_info = 1;
  for (int i = 0; i < this->ready_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->ready_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100404::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoFBReadyInfo ready_info = 1;
  total_size += 1 * this->ready_info_size();
  for (int i = 0; i < this->ready_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ready_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100404::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100404* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100404*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100404::MergeFrom(const Proto80100404& from) {
  GOOGLE_CHECK_NE(&from, this);
  ready_info_.MergeFrom(from.ready_info_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100404::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100404::CopyFrom(const Proto80100404& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100404::IsInitialized() const {
  
  return true;
}

void Proto80100404::Swap(Proto80100404* other) {
  if (other != this) {
    ready_info_.Swap(&other->ready_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100404::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100404_descriptor_;
  metadata.reflection = Proto80100404_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100410::kOperTypeFieldNumber;
#endif  // !_MSC_VER

Proto10100410::Proto10100410()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100410::InitAsDefaultInstance() {
}

Proto10100410::Proto10100410(const Proto10100410& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100410::SharedCtor() {
  _cached_size_ = 0;
  oper_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100410::~Proto10100410() {
  SharedDtor();
}

void Proto10100410::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100410::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100410::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100410_descriptor_;
}

const Proto10100410& Proto10100410::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto10100410* Proto10100410::default_instance_ = NULL;

Proto10100410* Proto10100410::New() const {
  return new Proto10100410;
}

void Proto10100410::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oper_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100410::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 oper_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oper_type_)));
          set_has_oper_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100410::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 oper_type = 1;
  if (has_oper_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oper_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100410::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 oper_type = 1;
  if (has_oper_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oper_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100410::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 oper_type = 1;
    if (has_oper_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oper_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100410::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100410* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100410*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100410::MergeFrom(const Proto10100410& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_oper_type()) {
      set_oper_type(from.oper_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100410::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100410::CopyFrom(const Proto10100410& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100410::IsInitialized() const {
  
  return true;
}

void Proto10100410::Swap(Proto10100410* other) {
  if (other != this) {
    std::swap(oper_type_, other->oper_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100410::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100410_descriptor_;
  metadata.reflection = Proto10100410_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400906::kNoviceStepFieldNumber;
#endif  // !_MSC_VER

Proto10400906::Proto10400906()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400906::InitAsDefaultInstance() {
}

Proto10400906::Proto10400906(const Proto10400906& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400906::SharedCtor() {
  _cached_size_ = 0;
  novice_step_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400906::~Proto10400906() {
  SharedDtor();
}

void Proto10400906::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400906::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400906::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400906_descriptor_;
}

const Proto10400906& Proto10400906::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto10400906* Proto10400906::default_instance_ = NULL;

Proto10400906* Proto10400906::New() const {
  return new Proto10400906;
}

void Proto10400906::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    novice_step_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400906::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 novice_step = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &novice_step_)));
          set_has_novice_step();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400906::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 novice_step = 1;
  if (has_novice_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->novice_step(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400906::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 novice_step = 1;
  if (has_novice_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->novice_step(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400906::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 novice_step = 1;
    if (has_novice_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->novice_step());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400906::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400906* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400906*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400906::MergeFrom(const Proto10400906& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_novice_step()) {
      set_novice_step(from.novice_step());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400906::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400906::CopyFrom(const Proto10400906& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400906::IsInitialized() const {
  
  return true;
}

void Proto10400906::Swap(Proto10400906* other) {
  if (other != this) {
    std::swap(novice_step_, other->novice_step_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400906::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400906_descriptor_;
  metadata.reflection = Proto10400906_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100156::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto10100156::Proto10100156()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100156::InitAsDefaultInstance() {
}

Proto10100156::Proto10100156(const Proto10100156& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100156::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100156::~Proto10100156() {
  SharedDtor();
}

void Proto10100156::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100156::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100156::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100156_descriptor_;
}

const Proto10100156& Proto10100156::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto10100156* Proto10100156::default_instance_ = NULL;

Proto10100156* Proto10100156::New() const {
  return new Proto10100156;
}

void Proto10100156::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100156::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100156::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100156::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100156::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100156::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100156* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100156*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100156::MergeFrom(const Proto10100156& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100156::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100156::CopyFrom(const Proto10100156& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100156::IsInitialized() const {
  
  return true;
}

void Proto10100156::Swap(Proto10100156* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100156::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100156_descriptor_;
  metadata.reflection = Proto10100156_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100156::kRoleIdFieldNumber;
const int Proto50100156::kLeagueIdFieldNumber;
const int Proto50100156::kRoleNameFieldNumber;
const int Proto50100156::kLeagueNameFieldNumber;
const int Proto50100156::kLevelFieldNumber;
const int Proto50100156::kCareerFieldNumber;
const int Proto50100156::kVipStatusFieldNumber;
const int Proto50100156::kFightForceFieldNumber;
const int Proto50100156::kMaxBloodFieldNumber;
const int Proto50100156::kAttackFieldNumber;
const int Proto50100156::kDefenceFieldNumber;
const int Proto50100156::kCritFieldNumber;
const int Proto50100156::kToughnessFieldNumber;
const int Proto50100156::kHitFieldNumber;
const int Proto50100156::kAvoidFieldNumber;
const int Proto50100156::kCritHurtFieldNumber;
const int Proto50100156::kDamageFieldNumber;
const int Proto50100156::kReductionFieldNumber;
const int Proto50100156::kPkFieldNumber;
const int Proto50100156::kGlamourFieldNumber;
const int Proto50100156::kFashionIdFieldNumber;
const int Proto50100156::kFashionColorFieldNumber;
const int Proto50100156::kEquipListFieldNumber;
const int Proto50100156::kMountInfoFieldNumber;
const int Proto50100156::kSexFieldNumber;
const int Proto50100156::kCheckerIdFieldNumber;
#endif  // !_MSC_VER

Proto50100156::Proto50100156()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100156::InitAsDefaultInstance() {
}

Proto50100156::Proto50100156(const Proto50100156& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100156::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  league_id_ = GOOGLE_LONGLONG(0);
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  level_ = 0;
  career_ = 0;
  vip_status_ = 0;
  fight_force_ = 0;
  max_blood_ = 0;
  attack_ = 0;
  defence_ = 0;
  crit_ = 0;
  toughness_ = 0;
  hit_ = 0;
  avoid_ = 0;
  crit_hurt_ = 0;
  damage_ = 0;
  reduction_ = 0;
  pk_ = 0;
  glamour_ = 0;
  fashion_id_ = 0;
  fashion_color_ = 0;
  sex_ = 0;
  checker_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100156::~Proto50100156() {
  SharedDtor();
}

void Proto50100156::SharedDtor() {
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (league_name_ != &::google::protobuf::internal::kEmptyString) {
    delete league_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto50100156::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100156::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100156_descriptor_;
}

const Proto50100156& Proto50100156::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto50100156* Proto50100156::default_instance_ = NULL;

Proto50100156* Proto50100156::New() const {
  return new Proto50100156;
}

void Proto50100156::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    league_id_ = GOOGLE_LONGLONG(0);
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
    if (has_league_name()) {
      if (league_name_ != &::google::protobuf::internal::kEmptyString) {
        league_name_->clear();
      }
    }
    level_ = 0;
    career_ = 0;
    vip_status_ = 0;
    fight_force_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    max_blood_ = 0;
    attack_ = 0;
    defence_ = 0;
    crit_ = 0;
    toughness_ = 0;
    hit_ = 0;
    avoid_ = 0;
    crit_hurt_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    damage_ = 0;
    reduction_ = 0;
    pk_ = 0;
    glamour_ = 0;
    fashion_id_ = 0;
    fashion_color_ = 0;
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    sex_ = 0;
    checker_id_ = GOOGLE_LONGLONG(0);
  }
  equip_list_.Clear();
  mount_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100156::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_league_id;
        break;
      }
      
      // optional int64 league_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_id_)));
          set_has_league_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_role_name;
        break;
      }
      
      // optional string role_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_league_name;
        break;
      }
      
      // optional string league_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_league_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->league_name().data(), this->league_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_level;
        break;
      }
      
      // optional int32 level = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_career;
        break;
      }
      
      // optional int32 career = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_career:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &career_)));
          set_has_career();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_vip_status;
        break;
      }
      
      // optional int32 vip_status = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_status_)));
          set_has_vip_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_fight_force;
        break;
      }
      
      // optional int32 fight_force = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_force_)));
          set_has_fight_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_max_blood;
        break;
      }
      
      // optional int32 max_blood = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_blood_)));
          set_has_max_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_attack;
        break;
      }
      
      // optional int32 attack = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attack_)));
          set_has_attack();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_defence;
        break;
      }
      
      // optional int32 defence = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_defence:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &defence_)));
          set_has_defence();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_crit;
        break;
      }
      
      // optional int32 crit = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_crit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crit_)));
          set_has_crit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_toughness;
        break;
      }
      
      // optional int32 toughness = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_toughness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &toughness_)));
          set_has_toughness();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_hit;
        break;
      }
      
      // optional int32 hit = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hit_)));
          set_has_hit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_avoid;
        break;
      }
      
      // optional int32 avoid = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_avoid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &avoid_)));
          set_has_avoid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_crit_hurt;
        break;
      }
      
      // optional int32 crit_hurt = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_crit_hurt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crit_hurt_)));
          set_has_crit_hurt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_damage;
        break;
      }
      
      // optional int32 damage = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_damage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_)));
          set_has_damage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_reduction;
        break;
      }
      
      // optional int32 reduction = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reduction:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reduction_)));
          set_has_reduction();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_pk;
        break;
      }
      
      // optional int32 pk = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pk:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pk_)));
          set_has_pk();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_glamour;
        break;
      }
      
      // optional int32 glamour = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_glamour:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &glamour_)));
          set_has_glamour();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_fashion_id;
        break;
      }
      
      // optional int32 fashion_id = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_fashion_color;
        break;
      }
      
      // optional int32 fashion_color = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_color_)));
          set_has_fashion_color();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_equip_list;
        break;
      }
      
      // repeated .ProtoEquipList equip_list = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equip_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equip_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_equip_list;
        if (input->ExpectTag(194)) goto parse_mount_info;
        break;
      }
      
      // repeated .ProtoMountInfo mount_info = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mount_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mount_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_mount_info;
        if (input->ExpectTag(200)) goto parse_sex;
        break;
      }
      
      // optional int32 sex = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(208)) goto parse_checker_id;
        break;
      }
      
      // optional int64 checker_id = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_checker_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &checker_id_)));
          set_has_checker_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100156::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int64 league_id = 2;
  if (has_league_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->league_id(), output);
  }
  
  // optional string role_name = 3;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->role_name(), output);
  }
  
  // optional string league_name = 4;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->league_name(), output);
  }
  
  // optional int32 level = 5;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }
  
  // optional int32 career = 6;
  if (has_career()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->career(), output);
  }
  
  // optional int32 vip_status = 7;
  if (has_vip_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->vip_status(), output);
  }
  
  // optional int32 fight_force = 8;
  if (has_fight_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->fight_force(), output);
  }
  
  // optional int32 max_blood = 9;
  if (has_max_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->max_blood(), output);
  }
  
  // optional int32 attack = 10;
  if (has_attack()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->attack(), output);
  }
  
  // optional int32 defence = 11;
  if (has_defence()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->defence(), output);
  }
  
  // optional int32 crit = 12;
  if (has_crit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->crit(), output);
  }
  
  // optional int32 toughness = 13;
  if (has_toughness()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->toughness(), output);
  }
  
  // optional int32 hit = 14;
  if (has_hit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->hit(), output);
  }
  
  // optional int32 avoid = 15;
  if (has_avoid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->avoid(), output);
  }
  
  // optional int32 crit_hurt = 16;
  if (has_crit_hurt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->crit_hurt(), output);
  }
  
  // optional int32 damage = 17;
  if (has_damage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->damage(), output);
  }
  
  // optional int32 reduction = 18;
  if (has_reduction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->reduction(), output);
  }
  
  // optional int32 pk = 19;
  if (has_pk()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->pk(), output);
  }
  
  // optional int32 glamour = 20;
  if (has_glamour()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->glamour(), output);
  }
  
  // optional int32 fashion_id = 21;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->fashion_id(), output);
  }
  
  // optional int32 fashion_color = 22;
  if (has_fashion_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->fashion_color(), output);
  }
  
  // repeated .ProtoEquipList equip_list = 23;
  for (int i = 0; i < this->equip_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->equip_list(i), output);
  }
  
  // repeated .ProtoMountInfo mount_info = 24;
  for (int i = 0; i < this->mount_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->mount_info(i), output);
  }
  
  // optional int32 sex = 25;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->sex(), output);
  }
  
  // optional int64 checker_id = 26;
  if (has_checker_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(26, this->checker_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100156::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int64 league_id = 2;
  if (has_league_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->league_id(), target);
  }
  
  // optional string role_name = 3;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->role_name(), target);
  }
  
  // optional string league_name = 4;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->league_name(), target);
  }
  
  // optional int32 level = 5;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }
  
  // optional int32 career = 6;
  if (has_career()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->career(), target);
  }
  
  // optional int32 vip_status = 7;
  if (has_vip_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->vip_status(), target);
  }
  
  // optional int32 fight_force = 8;
  if (has_fight_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->fight_force(), target);
  }
  
  // optional int32 max_blood = 9;
  if (has_max_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->max_blood(), target);
  }
  
  // optional int32 attack = 10;
  if (has_attack()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->attack(), target);
  }
  
  // optional int32 defence = 11;
  if (has_defence()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->defence(), target);
  }
  
  // optional int32 crit = 12;
  if (has_crit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->crit(), target);
  }
  
  // optional int32 toughness = 13;
  if (has_toughness()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->toughness(), target);
  }
  
  // optional int32 hit = 14;
  if (has_hit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->hit(), target);
  }
  
  // optional int32 avoid = 15;
  if (has_avoid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->avoid(), target);
  }
  
  // optional int32 crit_hurt = 16;
  if (has_crit_hurt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->crit_hurt(), target);
  }
  
  // optional int32 damage = 17;
  if (has_damage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->damage(), target);
  }
  
  // optional int32 reduction = 18;
  if (has_reduction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->reduction(), target);
  }
  
  // optional int32 pk = 19;
  if (has_pk()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->pk(), target);
  }
  
  // optional int32 glamour = 20;
  if (has_glamour()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->glamour(), target);
  }
  
  // optional int32 fashion_id = 21;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->fashion_id(), target);
  }
  
  // optional int32 fashion_color = 22;
  if (has_fashion_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->fashion_color(), target);
  }
  
  // repeated .ProtoEquipList equip_list = 23;
  for (int i = 0; i < this->equip_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->equip_list(i), target);
  }
  
  // repeated .ProtoMountInfo mount_info = 24;
  for (int i = 0; i < this->mount_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        24, this->mount_info(i), target);
  }
  
  // optional int32 sex = 25;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->sex(), target);
  }
  
  // optional int64 checker_id = 26;
  if (has_checker_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(26, this->checker_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100156::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int64 league_id = 2;
    if (has_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_id());
    }
    
    // optional string role_name = 3;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
    // optional string league_name = 4;
    if (has_league_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->league_name());
    }
    
    // optional int32 level = 5;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 career = 6;
    if (has_career()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->career());
    }
    
    // optional int32 vip_status = 7;
    if (has_vip_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_status());
    }
    
    // optional int32 fight_force = 8;
    if (has_fight_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_force());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 max_blood = 9;
    if (has_max_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_blood());
    }
    
    // optional int32 attack = 10;
    if (has_attack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attack());
    }
    
    // optional int32 defence = 11;
    if (has_defence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->defence());
    }
    
    // optional int32 crit = 12;
    if (has_crit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crit());
    }
    
    // optional int32 toughness = 13;
    if (has_toughness()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->toughness());
    }
    
    // optional int32 hit = 14;
    if (has_hit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hit());
    }
    
    // optional int32 avoid = 15;
    if (has_avoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->avoid());
    }
    
    // optional int32 crit_hurt = 16;
    if (has_crit_hurt()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crit_hurt());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 damage = 17;
    if (has_damage()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->damage());
    }
    
    // optional int32 reduction = 18;
    if (has_reduction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reduction());
    }
    
    // optional int32 pk = 19;
    if (has_pk()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pk());
    }
    
    // optional int32 glamour = 20;
    if (has_glamour()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->glamour());
    }
    
    // optional int32 fashion_id = 21;
    if (has_fashion_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
    // optional int32 fashion_color = 22;
    if (has_fashion_color()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_color());
    }
    
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional int32 sex = 25;
    if (has_sex()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }
    
    // optional int64 checker_id = 26;
    if (has_checker_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->checker_id());
    }
    
  }
  // repeated .ProtoEquipList equip_list = 23;
  total_size += 2 * this->equip_list_size();
  for (int i = 0; i < this->equip_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equip_list(i));
  }
  
  // repeated .ProtoMountInfo mount_info = 24;
  total_size += 2 * this->mount_info_size();
  for (int i = 0; i < this->mount_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mount_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100156::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100156* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100156*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100156::MergeFrom(const Proto50100156& from) {
  GOOGLE_CHECK_NE(&from, this);
  equip_list_.MergeFrom(from.equip_list_);
  mount_info_.MergeFrom(from.mount_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_league_id()) {
      set_league_id(from.league_id());
    }
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
    if (from.has_league_name()) {
      set_league_name(from.league_name());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_career()) {
      set_career(from.career());
    }
    if (from.has_vip_status()) {
      set_vip_status(from.vip_status());
    }
    if (from.has_fight_force()) {
      set_fight_force(from.fight_force());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_max_blood()) {
      set_max_blood(from.max_blood());
    }
    if (from.has_attack()) {
      set_attack(from.attack());
    }
    if (from.has_defence()) {
      set_defence(from.defence());
    }
    if (from.has_crit()) {
      set_crit(from.crit());
    }
    if (from.has_toughness()) {
      set_toughness(from.toughness());
    }
    if (from.has_hit()) {
      set_hit(from.hit());
    }
    if (from.has_avoid()) {
      set_avoid(from.avoid());
    }
    if (from.has_crit_hurt()) {
      set_crit_hurt(from.crit_hurt());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_damage()) {
      set_damage(from.damage());
    }
    if (from.has_reduction()) {
      set_reduction(from.reduction());
    }
    if (from.has_pk()) {
      set_pk(from.pk());
    }
    if (from.has_glamour()) {
      set_glamour(from.glamour());
    }
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
    if (from.has_fashion_color()) {
      set_fashion_color(from.fashion_color());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_checker_id()) {
      set_checker_id(from.checker_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100156::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100156::CopyFrom(const Proto50100156& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100156::IsInitialized() const {
  
  return true;
}

void Proto50100156::Swap(Proto50100156* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(league_id_, other->league_id_);
    std::swap(role_name_, other->role_name_);
    std::swap(league_name_, other->league_name_);
    std::swap(level_, other->level_);
    std::swap(career_, other->career_);
    std::swap(vip_status_, other->vip_status_);
    std::swap(fight_force_, other->fight_force_);
    std::swap(max_blood_, other->max_blood_);
    std::swap(attack_, other->attack_);
    std::swap(defence_, other->defence_);
    std::swap(crit_, other->crit_);
    std::swap(toughness_, other->toughness_);
    std::swap(hit_, other->hit_);
    std::swap(avoid_, other->avoid_);
    std::swap(crit_hurt_, other->crit_hurt_);
    std::swap(damage_, other->damage_);
    std::swap(reduction_, other->reduction_);
    std::swap(pk_, other->pk_);
    std::swap(glamour_, other->glamour_);
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(fashion_color_, other->fashion_color_);
    equip_list_.Swap(&other->equip_list_);
    mount_info_.Swap(&other->mount_info_);
    std::swap(sex_, other->sex_);
    std::swap(checker_id_, other->checker_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100156::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100156_descriptor_;
  metadata.reflection = Proto50100156_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400316::kWarSetFieldNumber;
const int Proto50400316::kWinLeagueFieldNumber;
const int Proto50400316::kSecondWarFieldNumber;
const int Proto50400316::kWarIndexFieldNumber;
const int Proto50400316::kButtonStateFieldNumber;
#endif  // !_MSC_VER

Proto50400316::Proto50400316()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400316::InitAsDefaultInstance() {
}

Proto50400316::Proto50400316(const Proto50400316& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400316::SharedCtor() {
  _cached_size_ = 0;
  win_league_ = GOOGLE_LONGLONG(0);
  war_index_ = 0;
  button_state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400316::~Proto50400316() {
  SharedDtor();
}

void Proto50400316::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400316::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400316::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400316_descriptor_;
}

const Proto50400316& Proto50400316::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto50400316* Proto50400316::default_instance_ = NULL;

Proto50400316* Proto50400316::New() const {
  return new Proto50400316;
}

void Proto50400316::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    win_league_ = GOOGLE_LONGLONG(0);
    war_index_ = 0;
    button_state_ = 0;
  }
  war_set_.Clear();
  second_war_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400316::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoWarItem war_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_war_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_war_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_war_set;
        if (input->ExpectTag(16)) goto parse_win_league;
        break;
      }
      
      // optional int64 win_league = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_win_league:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &win_league_)));
          set_has_win_league();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_second_war;
        break;
      }
      
      // repeated int64 second_war = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_war:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 24, input, this->mutable_second_war())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_second_war())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_second_war;
        if (input->ExpectTag(32)) goto parse_war_index;
        break;
      }
      
      // optional int32 war_index = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_war_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &war_index_)));
          set_has_war_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_button_state;
        break;
      }
      
      // optional int32 button_state = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_button_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &button_state_)));
          set_has_button_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400316::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoWarItem war_set = 1;
  for (int i = 0; i < this->war_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->war_set(i), output);
  }
  
  // optional int64 win_league = 2;
  if (has_win_league()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->win_league(), output);
  }
  
  // repeated int64 second_war = 3;
  for (int i = 0; i < this->second_war_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      3, this->second_war(i), output);
  }
  
  // optional int32 war_index = 4;
  if (has_war_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->war_index(), output);
  }
  
  // optional int32 button_state = 5;
  if (has_button_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->button_state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400316::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoWarItem war_set = 1;
  for (int i = 0; i < this->war_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->war_set(i), target);
  }
  
  // optional int64 win_league = 2;
  if (has_win_league()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->win_league(), target);
  }
  
  // repeated int64 second_war = 3;
  for (int i = 0; i < this->second_war_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(3, this->second_war(i), target);
  }
  
  // optional int32 war_index = 4;
  if (has_war_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->war_index(), target);
  }
  
  // optional int32 button_state = 5;
  if (has_button_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->button_state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400316::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int64 win_league = 2;
    if (has_win_league()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->win_league());
    }
    
    // optional int32 war_index = 4;
    if (has_war_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->war_index());
    }
    
    // optional int32 button_state = 5;
    if (has_button_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->button_state());
    }
    
  }
  // repeated .ProtoWarItem war_set = 1;
  total_size += 1 * this->war_set_size();
  for (int i = 0; i < this->war_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->war_set(i));
  }
  
  // repeated int64 second_war = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->second_war_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->second_war(i));
    }
    total_size += 1 * this->second_war_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400316::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400316* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400316*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400316::MergeFrom(const Proto50400316& from) {
  GOOGLE_CHECK_NE(&from, this);
  war_set_.MergeFrom(from.war_set_);
  second_war_.MergeFrom(from.second_war_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_win_league()) {
      set_win_league(from.win_league());
    }
    if (from.has_war_index()) {
      set_war_index(from.war_index());
    }
    if (from.has_button_state()) {
      set_button_state(from.button_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400316::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400316::CopyFrom(const Proto50400316& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400316::IsInitialized() const {
  
  return true;
}

void Proto50400316::Swap(Proto50400316* other) {
  if (other != this) {
    war_set_.Swap(&other->war_set_);
    std::swap(win_league_, other->win_league_);
    second_war_.Swap(&other->second_war_);
    std::swap(war_index_, other->war_index_);
    std::swap(button_state_, other->button_state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400316::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400316_descriptor_;
  metadata.reflection = Proto50400316_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400316::kWarIndexFieldNumber;
#endif  // !_MSC_VER

Proto10400316::Proto10400316()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400316::InitAsDefaultInstance() {
}

Proto10400316::Proto10400316(const Proto10400316& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400316::SharedCtor() {
  _cached_size_ = 0;
  war_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400316::~Proto10400316() {
  SharedDtor();
}

void Proto10400316::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400316::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400316::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400316_descriptor_;
}

const Proto10400316& Proto10400316::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto10400316* Proto10400316::default_instance_ = NULL;

Proto10400316* Proto10400316::New() const {
  return new Proto10400316;
}

void Proto10400316::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    war_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400316::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 war_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &war_index_)));
          set_has_war_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400316::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 war_index = 1;
  if (has_war_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->war_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400316::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 war_index = 1;
  if (has_war_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->war_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400316::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 war_index = 1;
    if (has_war_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->war_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400316::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400316* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400316*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400316::MergeFrom(const Proto10400316& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_war_index()) {
      set_war_index(from.war_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400316::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400316::CopyFrom(const Proto10400316& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400316::IsInitialized() const {
  
  return true;
}

void Proto10400316::Swap(Proto10400316* other) {
  if (other != this) {
    std::swap(war_index_, other->war_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400316::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400316_descriptor_;
  metadata.reflection = Proto10400316_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100501::kRankListFieldNumber;
const int Proto80100501::kSelfRankFieldNumber;
const int Proto80100501::kSelfKillFieldNumber;
const int Proto80100501::kSelfScoreFieldNumber;
const int Proto80100501::kCampScoresFieldNumber;
const int Proto80100501::kSelfCampFieldNumber;
const int Proto80100501::kZoneFieldNumber;
const int Proto80100501::kLeftTimeFieldNumber;
#endif  // !_MSC_VER

Proto80100501::Proto80100501()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100501::InitAsDefaultInstance() {
  self_rank_ = const_cast< ::ProtoSMBattleRankRec*>(&::ProtoSMBattleRankRec::default_instance());
}

Proto80100501::Proto80100501(const Proto80100501& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100501::SharedCtor() {
  _cached_size_ = 0;
  self_rank_ = NULL;
  self_kill_ = 0;
  self_score_ = 0;
  self_camp_ = 0;
  zone_ = 0;
  left_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100501::~Proto80100501() {
  SharedDtor();
}

void Proto80100501::SharedDtor() {
  if (this != default_instance_) {
    delete self_rank_;
  }
}

void Proto80100501::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100501::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100501_descriptor_;
}

const Proto80100501& Proto80100501::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80100501* Proto80100501::default_instance_ = NULL;

Proto80100501* Proto80100501::New() const {
  return new Proto80100501;
}

void Proto80100501::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_self_rank()) {
      if (self_rank_ != NULL) self_rank_->::ProtoSMBattleRankRec::Clear();
    }
    self_kill_ = 0;
    self_score_ = 0;
    self_camp_ = 0;
    zone_ = 0;
    left_time_ = 0;
  }
  rank_list_.Clear();
  camp_scores_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100501::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoSMBattleRankRec rank_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rank_list;
        if (input->ExpectTag(18)) goto parse_self_rank;
        break;
      }
      
      // optional .ProtoSMBattleRankRec self_rank = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_self_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_self_kill;
        break;
      }
      
      // optional int32 self_kill = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_self_kill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &self_kill_)));
          set_has_self_kill();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_self_score;
        break;
      }
      
      // optional int32 self_score = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_self_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &self_score_)));
          set_has_self_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_camp_scores;
        break;
      }
      
      // repeated int32 camp_scores = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_camp_scores:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_camp_scores())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_camp_scores())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_camp_scores;
        if (input->ExpectTag(48)) goto parse_self_camp;
        break;
      }
      
      // optional int32 self_camp = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_self_camp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &self_camp_)));
          set_has_self_camp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_zone;
        break;
      }
      
      // optional int32 zone = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_zone:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zone_)));
          set_has_zone();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100501::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoSMBattleRankRec rank_list = 1;
  for (int i = 0; i < this->rank_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rank_list(i), output);
  }
  
  // optional .ProtoSMBattleRankRec self_rank = 2;
  if (has_self_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->self_rank(), output);
  }
  
  // optional int32 self_kill = 3;
  if (has_self_kill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->self_kill(), output);
  }
  
  // optional int32 self_score = 4;
  if (has_self_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->self_score(), output);
  }
  
  // repeated int32 camp_scores = 5;
  for (int i = 0; i < this->camp_scores_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->camp_scores(i), output);
  }
  
  // optional int32 self_camp = 6;
  if (has_self_camp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->self_camp(), output);
  }
  
  // optional int32 zone = 7;
  if (has_zone()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->zone(), output);
  }
  
  // optional int32 left_time = 8;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->left_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100501::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoSMBattleRankRec rank_list = 1;
  for (int i = 0; i < this->rank_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rank_list(i), target);
  }
  
  // optional .ProtoSMBattleRankRec self_rank = 2;
  if (has_self_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->self_rank(), target);
  }
  
  // optional int32 self_kill = 3;
  if (has_self_kill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->self_kill(), target);
  }
  
  // optional int32 self_score = 4;
  if (has_self_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->self_score(), target);
  }
  
  // repeated int32 camp_scores = 5;
  for (int i = 0; i < this->camp_scores_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->camp_scores(i), target);
  }
  
  // optional int32 self_camp = 6;
  if (has_self_camp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->self_camp(), target);
  }
  
  // optional int32 zone = 7;
  if (has_zone()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->zone(), target);
  }
  
  // optional int32 left_time = 8;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->left_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100501::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .ProtoSMBattleRankRec self_rank = 2;
    if (has_self_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->self_rank());
    }
    
    // optional int32 self_kill = 3;
    if (has_self_kill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->self_kill());
    }
    
    // optional int32 self_score = 4;
    if (has_self_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->self_score());
    }
    
    // optional int32 self_camp = 6;
    if (has_self_camp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->self_camp());
    }
    
    // optional int32 zone = 7;
    if (has_zone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->zone());
    }
    
    // optional int32 left_time = 8;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
  }
  // repeated .ProtoSMBattleRankRec rank_list = 1;
  total_size += 1 * this->rank_list_size();
  for (int i = 0; i < this->rank_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_list(i));
  }
  
  // repeated int32 camp_scores = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->camp_scores_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->camp_scores(i));
    }
    total_size += 1 * this->camp_scores_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100501::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100501* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100501*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100501::MergeFrom(const Proto80100501& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_list_.MergeFrom(from.rank_list_);
  camp_scores_.MergeFrom(from.camp_scores_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_self_rank()) {
      mutable_self_rank()->::ProtoSMBattleRankRec::MergeFrom(from.self_rank());
    }
    if (from.has_self_kill()) {
      set_self_kill(from.self_kill());
    }
    if (from.has_self_score()) {
      set_self_score(from.self_score());
    }
    if (from.has_self_camp()) {
      set_self_camp(from.self_camp());
    }
    if (from.has_zone()) {
      set_zone(from.zone());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100501::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100501::CopyFrom(const Proto80100501& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100501::IsInitialized() const {
  
  return true;
}

void Proto80100501::Swap(Proto80100501* other) {
  if (other != this) {
    rank_list_.Swap(&other->rank_list_);
    std::swap(self_rank_, other->self_rank_);
    std::swap(self_kill_, other->self_kill_);
    std::swap(self_score_, other->self_score_);
    camp_scores_.Swap(&other->camp_scores_);
    std::swap(self_camp_, other->self_camp_);
    std::swap(zone_, other->zone_);
    std::swap(left_time_, other->left_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100501::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100501_descriptor_;
  metadata.reflection = Proto80100501_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400341::kPersonResourceFieldNumber;
const int Proto80400341::kPersonRankFieldNumber;
const int Proto80400341::kWarSetFieldNumber;
const int Proto80400341::kLeftTimeFieldNumber;
const int Proto80400341::kStageStateFieldNumber;
#endif  // !_MSC_VER

Proto80400341::Proto80400341()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400341::InitAsDefaultInstance() {
}

Proto80400341::Proto80400341(const Proto80400341& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400341::SharedCtor() {
  _cached_size_ = 0;
  person_resource_ = 0;
  person_rank_ = 0;
  left_time_ = 0;
  stage_state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400341::~Proto80400341() {
  SharedDtor();
}

void Proto80400341::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400341::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400341::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400341_descriptor_;
}

const Proto80400341& Proto80400341::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80400341* Proto80400341::default_instance_ = NULL;

Proto80400341* Proto80400341::New() const {
  return new Proto80400341;
}

void Proto80400341::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    person_resource_ = 0;
    person_rank_ = 0;
    left_time_ = 0;
    stage_state_ = 0;
  }
  war_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400341::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 person_resource = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &person_resource_)));
          set_has_person_resource();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_person_rank;
        break;
      }
      
      // optional int32 person_rank = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_person_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &person_rank_)));
          set_has_person_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_war_set;
        break;
      }
      
      // repeated .ProtoLWarItem war_set = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_war_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_war_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_war_set;
        if (input->ExpectTag(32)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_stage_state;
        break;
      }
      
      // optional int32 stage_state = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stage_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_state_)));
          set_has_stage_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400341::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 person_resource = 1;
  if (has_person_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->person_resource(), output);
  }
  
  // optional int32 person_rank = 2;
  if (has_person_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->person_rank(), output);
  }
  
  // repeated .ProtoLWarItem war_set = 3;
  for (int i = 0; i < this->war_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->war_set(i), output);
  }
  
  // optional int32 left_time = 4;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->left_time(), output);
  }
  
  // optional int32 stage_state = 5;
  if (has_stage_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->stage_state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400341::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 person_resource = 1;
  if (has_person_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->person_resource(), target);
  }
  
  // optional int32 person_rank = 2;
  if (has_person_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->person_rank(), target);
  }
  
  // repeated .ProtoLWarItem war_set = 3;
  for (int i = 0; i < this->war_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->war_set(i), target);
  }
  
  // optional int32 left_time = 4;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->left_time(), target);
  }
  
  // optional int32 stage_state = 5;
  if (has_stage_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->stage_state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400341::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 person_resource = 1;
    if (has_person_resource()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->person_resource());
    }
    
    // optional int32 person_rank = 2;
    if (has_person_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->person_rank());
    }
    
    // optional int32 left_time = 4;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 stage_state = 5;
    if (has_stage_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stage_state());
    }
    
  }
  // repeated .ProtoLWarItem war_set = 3;
  total_size += 1 * this->war_set_size();
  for (int i = 0; i < this->war_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->war_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400341::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400341* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400341*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400341::MergeFrom(const Proto80400341& from) {
  GOOGLE_CHECK_NE(&from, this);
  war_set_.MergeFrom(from.war_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_person_resource()) {
      set_person_resource(from.person_resource());
    }
    if (from.has_person_rank()) {
      set_person_rank(from.person_rank());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_stage_state()) {
      set_stage_state(from.stage_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400341::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400341::CopyFrom(const Proto80400341& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400341::IsInitialized() const {
  
  return true;
}

void Proto80400341::Swap(Proto80400341* other) {
  if (other != this) {
    std::swap(person_resource_, other->person_resource_);
    std::swap(person_rank_, other->person_rank_);
    war_set_.Swap(&other->war_set_);
    std::swap(left_time_, other->left_time_);
    std::swap(stage_state_, other->stage_state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400341::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400341_descriptor_;
  metadata.reflection = Proto80400341_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400318::kPageIndexFieldNumber;
#endif  // !_MSC_VER

Proto10400318::Proto10400318()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400318::InitAsDefaultInstance() {
}

Proto10400318::Proto10400318(const Proto10400318& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400318::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400318::~Proto10400318() {
  SharedDtor();
}

void Proto10400318::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400318::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400318::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400318_descriptor_;
}

const Proto10400318& Proto10400318::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto10400318* Proto10400318::default_instance_ = NULL;

Proto10400318* Proto10400318::New() const {
  return new Proto10400318;
}

void Proto10400318::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400318::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400318::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400318::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400318::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400318::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400318* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400318*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400318::MergeFrom(const Proto10400318& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400318::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400318::CopyFrom(const Proto10400318& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400318::IsInitialized() const {
  
  return true;
}

void Proto10400318::Swap(Proto10400318* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400318::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400318_descriptor_;
  metadata.reflection = Proto10400318_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400318::kItemSetFieldNumber;
const int Proto50400318::kPageIndexFieldNumber;
const int Proto50400318::kTotalPageFieldNumber;
#endif  // !_MSC_VER

Proto50400318::Proto50400318()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400318::InitAsDefaultInstance() {
}

Proto50400318::Proto50400318(const Proto50400318& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400318::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  total_page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400318::~Proto50400318() {
  SharedDtor();
}

void Proto50400318::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400318::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400318::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400318_descriptor_;
}

const Proto50400318& Proto50400318::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto50400318* Proto50400318::default_instance_ = NULL;

Proto50400318* Proto50400318::New() const {
  return new Proto50400318;
}

void Proto50400318::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    page_index_ = 0;
    total_page_ = 0;
  }
  item_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400318::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoLWarItem item_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_set;
        if (input->ExpectTag(16)) goto parse_page_index;
        break;
      }
      
      // optional int32 page_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400318::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoLWarItem item_set = 1;
  for (int i = 0; i < this->item_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_set(i), output);
  }
  
  // optional int32 page_index = 2;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_index(), output);
  }
  
  // optional int32 total_page = 3;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400318::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoLWarItem item_set = 1;
  for (int i = 0; i < this->item_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_set(i), target);
  }
  
  // optional int32 page_index = 2;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_index(), target);
  }
  
  // optional int32 total_page = 3;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400318::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 page_index = 2;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
    // optional int32 total_page = 3;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
  }
  // repeated .ProtoLWarItem item_set = 1;
  total_size += 1 * this->item_set_size();
  for (int i = 0; i < this->item_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400318::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400318* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400318*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400318::MergeFrom(const Proto50400318& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_set_.MergeFrom(from.item_set_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400318::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400318::CopyFrom(const Proto50400318& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400318::IsInitialized() const {
  
  return true;
}

void Proto50400318::Swap(Proto50400318* other) {
  if (other != this) {
    item_set_.Swap(&other->item_set_);
    std::swap(page_index_, other->page_index_);
    std::swap(total_page_, other->total_page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400318::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400318_descriptor_;
  metadata.reflection = Proto50400318_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400907::kWaitTickFieldNumber;
const int Proto80400907::kSafeRadiusFieldNumber;
const int Proto80400907::kSafePointFieldNumber;
const int Proto80400907::kEffectSortFieldNumber;
const int Proto80400907::kEffectIdFieldNumber;
#endif  // !_MSC_VER

Proto80400907::Proto80400907()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400907::InitAsDefaultInstance() {
  safe_point_ = const_cast< ::ProtoCoord*>(&::ProtoCoord::default_instance());
}

Proto80400907::Proto80400907(const Proto80400907& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400907::SharedCtor() {
  _cached_size_ = 0;
  wait_tick_ = 0;
  safe_radius_ = 0;
  safe_point_ = NULL;
  effect_sort_ = 0;
  effect_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400907::~Proto80400907() {
  SharedDtor();
}

void Proto80400907::SharedDtor() {
  if (this != default_instance_) {
    delete safe_point_;
  }
}

void Proto80400907::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400907::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400907_descriptor_;
}

const Proto80400907& Proto80400907::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80400907* Proto80400907::default_instance_ = NULL;

Proto80400907* Proto80400907::New() const {
  return new Proto80400907;
}

void Proto80400907::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    wait_tick_ = 0;
    safe_radius_ = 0;
    if (has_safe_point()) {
      if (safe_point_ != NULL) safe_point_->::ProtoCoord::Clear();
    }
    effect_sort_ = 0;
    effect_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400907::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 wait_tick = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wait_tick_)));
          set_has_wait_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_safe_radius;
        break;
      }
      
      // optional int32 safe_radius = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_safe_radius:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &safe_radius_)));
          set_has_safe_radius();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_safe_point;
        break;
      }
      
      // optional .ProtoCoord safe_point = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_safe_point:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_safe_point()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_effect_sort;
        break;
      }
      
      // optional int32 effect_sort = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_effect_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effect_sort_)));
          set_has_effect_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_effect_id;
        break;
      }
      
      // optional int32 effect_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_effect_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effect_id_)));
          set_has_effect_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400907::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 wait_tick = 1;
  if (has_wait_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wait_tick(), output);
  }
  
  // optional int32 safe_radius = 2;
  if (has_safe_radius()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->safe_radius(), output);
  }
  
  // optional .ProtoCoord safe_point = 3;
  if (has_safe_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->safe_point(), output);
  }
  
  // optional int32 effect_sort = 4;
  if (has_effect_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->effect_sort(), output);
  }
  
  // optional int32 effect_id = 5;
  if (has_effect_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->effect_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400907::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 wait_tick = 1;
  if (has_wait_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wait_tick(), target);
  }
  
  // optional int32 safe_radius = 2;
  if (has_safe_radius()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->safe_radius(), target);
  }
  
  // optional .ProtoCoord safe_point = 3;
  if (has_safe_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->safe_point(), target);
  }
  
  // optional int32 effect_sort = 4;
  if (has_effect_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->effect_sort(), target);
  }
  
  // optional int32 effect_id = 5;
  if (has_effect_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->effect_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400907::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 wait_tick = 1;
    if (has_wait_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wait_tick());
    }
    
    // optional int32 safe_radius = 2;
    if (has_safe_radius()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->safe_radius());
    }
    
    // optional .ProtoCoord safe_point = 3;
    if (has_safe_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->safe_point());
    }
    
    // optional int32 effect_sort = 4;
    if (has_effect_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->effect_sort());
    }
    
    // optional int32 effect_id = 5;
    if (has_effect_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->effect_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400907::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400907* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400907*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400907::MergeFrom(const Proto80400907& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wait_tick()) {
      set_wait_tick(from.wait_tick());
    }
    if (from.has_safe_radius()) {
      set_safe_radius(from.safe_radius());
    }
    if (from.has_safe_point()) {
      mutable_safe_point()->::ProtoCoord::MergeFrom(from.safe_point());
    }
    if (from.has_effect_sort()) {
      set_effect_sort(from.effect_sort());
    }
    if (from.has_effect_id()) {
      set_effect_id(from.effect_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400907::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400907::CopyFrom(const Proto80400907& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400907::IsInitialized() const {
  
  return true;
}

void Proto80400907::Swap(Proto80400907* other) {
  if (other != this) {
    std::swap(wait_tick_, other->wait_tick_);
    std::swap(safe_radius_, other->safe_radius_);
    std::swap(safe_point_, other->safe_point_);
    std::swap(effect_sort_, other->effect_sort_);
    std::swap(effect_id_, other->effect_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400907::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400907_descriptor_;
  metadata.reflection = Proto80400907_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400342::kWarTypeFieldNumber;
const int Proto80400342::kFightResultFieldNumber;
#endif  // !_MSC_VER

Proto80400342::Proto80400342()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400342::InitAsDefaultInstance() {
}

Proto80400342::Proto80400342(const Proto80400342& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400342::SharedCtor() {
  _cached_size_ = 0;
  war_type_ = 0;
  fight_result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400342::~Proto80400342() {
  SharedDtor();
}

void Proto80400342::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400342::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400342::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400342_descriptor_;
}

const Proto80400342& Proto80400342::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80400342* Proto80400342::default_instance_ = NULL;

Proto80400342* Proto80400342::New() const {
  return new Proto80400342;
}

void Proto80400342::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    war_type_ = 0;
    fight_result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400342::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 war_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &war_type_)));
          set_has_war_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_fight_result;
        break;
      }
      
      // optional int32 fight_result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_result_)));
          set_has_fight_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400342::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 war_type = 1;
  if (has_war_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->war_type(), output);
  }
  
  // optional int32 fight_result = 2;
  if (has_fight_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fight_result(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400342::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 war_type = 1;
  if (has_war_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->war_type(), target);
  }
  
  // optional int32 fight_result = 2;
  if (has_fight_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fight_result(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400342::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 war_type = 1;
    if (has_war_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->war_type());
    }
    
    // optional int32 fight_result = 2;
    if (has_fight_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_result());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400342::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400342* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400342*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400342::MergeFrom(const Proto80400342& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_war_type()) {
      set_war_type(from.war_type());
    }
    if (from.has_fight_result()) {
      set_fight_result(from.fight_result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400342::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400342::CopyFrom(const Proto80400342& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400342::IsInitialized() const {
  
  return true;
}

void Proto80400342::Swap(Proto80400342* other) {
  if (other != this) {
    std::swap(war_type_, other->war_type_);
    std::swap(fight_result_, other->fight_result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400342::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400342_descriptor_;
  metadata.reflection = Proto80400342_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400112::kPixelXFieldNumber;
const int Proto10400112::kPixelYFieldNumber;
#endif  // !_MSC_VER

Proto10400112::Proto10400112()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400112::InitAsDefaultInstance() {
}

Proto10400112::Proto10400112(const Proto10400112& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400112::SharedCtor() {
  _cached_size_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400112::~Proto10400112() {
  SharedDtor();
}

void Proto10400112::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400112::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400112::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400112_descriptor_;
}

const Proto10400112& Proto10400112::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto10400112* Proto10400112::default_instance_ = NULL;

Proto10400112* Proto10400112::New() const {
  return new Proto10400112;
}

void Proto10400112::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pixel_x_ = 0;
    pixel_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400112::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pixel_x = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400112::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pixel_x = 1;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 2;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pixel_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400112::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pixel_x = 1;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 2;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pixel_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400112::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pixel_x = 1;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 2;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400112::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400112* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400112*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400112::MergeFrom(const Proto10400112& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400112::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400112::CopyFrom(const Proto10400112& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400112::IsInitialized() const {
  
  return true;
}

void Proto10400112::Swap(Proto10400112* other) {
  if (other != this) {
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400112::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400112_descriptor_;
  metadata.reflection = Proto10400112_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400112::kPixelXFieldNumber;
const int Proto50400112::kPixelYFieldNumber;
const int Proto50400112::kBaseSpeedFieldNumber;
#endif  // !_MSC_VER

Proto50400112::Proto50400112()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400112::InitAsDefaultInstance() {
}

Proto50400112::Proto50400112(const Proto50400112& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400112::SharedCtor() {
  _cached_size_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  base_speed_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400112::~Proto50400112() {
  SharedDtor();
}

void Proto50400112::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400112::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400112::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400112_descriptor_;
}

const Proto50400112& Proto50400112::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto50400112* Proto50400112::default_instance_ = NULL;

Proto50400112* Proto50400112::New() const {
  return new Proto50400112;
}

void Proto50400112::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pixel_x_ = 0;
    pixel_y_ = 0;
    base_speed_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400112::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pixel_x = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_base_speed;
        break;
      }
      
      // optional int32 base_speed = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_base_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &base_speed_)));
          set_has_base_speed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400112::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pixel_x = 1;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 2;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pixel_y(), output);
  }
  
  // optional int32 base_speed = 3;
  if (has_base_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->base_speed(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400112::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pixel_x = 1;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 2;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pixel_y(), target);
  }
  
  // optional int32 base_speed = 3;
  if (has_base_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->base_speed(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400112::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pixel_x = 1;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 2;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
    // optional int32 base_speed = 3;
    if (has_base_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->base_speed());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400112::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400112* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400112*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400112::MergeFrom(const Proto50400112& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
    if (from.has_base_speed()) {
      set_base_speed(from.base_speed());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400112::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400112::CopyFrom(const Proto50400112& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400112::IsInitialized() const {
  
  return true;
}

void Proto50400112::Swap(Proto50400112* other) {
  if (other != this) {
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(base_speed_, other->base_speed_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400112::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400112_descriptor_;
  metadata.reflection = Proto50400112_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400209::kMoverIdFieldNumber;
const int Proto80400209::kAttackorIdFieldNumber;
const int Proto80400209::kSkillIdFieldNumber;
const int Proto80400209::kLocateFieldNumber;
#endif  // !_MSC_VER

Proto80400209::Proto80400209()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400209::InitAsDefaultInstance() {
  locate_ = const_cast< ::ProtoCoord*>(&::ProtoCoord::default_instance());
}

Proto80400209::Proto80400209(const Proto80400209& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400209::SharedCtor() {
  _cached_size_ = 0;
  mover_id_ = GOOGLE_LONGLONG(0);
  attackor_id_ = GOOGLE_LONGLONG(0);
  skill_id_ = 0;
  locate_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400209::~Proto80400209() {
  SharedDtor();
}

void Proto80400209::SharedDtor() {
  if (this != default_instance_) {
    delete locate_;
  }
}

void Proto80400209::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400209::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400209_descriptor_;
}

const Proto80400209& Proto80400209::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80400209* Proto80400209::default_instance_ = NULL;

Proto80400209* Proto80400209::New() const {
  return new Proto80400209;
}

void Proto80400209::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mover_id_ = GOOGLE_LONGLONG(0);
    attackor_id_ = GOOGLE_LONGLONG(0);
    skill_id_ = 0;
    if (has_locate()) {
      if (locate_ != NULL) locate_->::ProtoCoord::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400209::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 mover_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mover_id_)));
          set_has_mover_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_attackor_id;
        break;
      }
      
      // optional int64 attackor_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attackor_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &attackor_id_)));
          set_has_attackor_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_skill_id;
        break;
      }
      
      // optional int32 skill_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_locate;
        break;
      }
      
      // optional .ProtoCoord locate = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_locate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_locate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400209::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->mover_id(), output);
  }
  
  // optional int64 attackor_id = 2;
  if (has_attackor_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->attackor_id(), output);
  }
  
  // optional int32 skill_id = 3;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skill_id(), output);
  }
  
  // optional .ProtoCoord locate = 4;
  if (has_locate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->locate(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400209::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->mover_id(), target);
  }
  
  // optional int64 attackor_id = 2;
  if (has_attackor_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->attackor_id(), target);
  }
  
  // optional int32 skill_id = 3;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skill_id(), target);
  }
  
  // optional .ProtoCoord locate = 4;
  if (has_locate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->locate(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400209::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 mover_id = 1;
    if (has_mover_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mover_id());
    }
    
    // optional int64 attackor_id = 2;
    if (has_attackor_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->attackor_id());
    }
    
    // optional int32 skill_id = 3;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
    // optional .ProtoCoord locate = 4;
    if (has_locate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->locate());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400209::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400209* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400209*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400209::MergeFrom(const Proto80400209& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mover_id()) {
      set_mover_id(from.mover_id());
    }
    if (from.has_attackor_id()) {
      set_attackor_id(from.attackor_id());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_locate()) {
      mutable_locate()->::ProtoCoord::MergeFrom(from.locate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400209::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400209::CopyFrom(const Proto80400209& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400209::IsInitialized() const {
  
  return true;
}

void Proto80400209::Swap(Proto80400209* other) {
  if (other != this) {
    std::swap(mover_id_, other->mover_id_);
    std::swap(attackor_id_, other->attackor_id_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(locate_, other->locate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400209::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400209_descriptor_;
  metadata.reflection = Proto80400209_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400343::kJumpFlagFieldNumber;
const int Proto80400343::kIsFirstFieldNumber;
#endif  // !_MSC_VER

Proto80400343::Proto80400343()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400343::InitAsDefaultInstance() {
}

Proto80400343::Proto80400343(const Proto80400343& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400343::SharedCtor() {
  _cached_size_ = 0;
  jump_flag_ = 0;
  is_first_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400343::~Proto80400343() {
  SharedDtor();
}

void Proto80400343::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400343::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400343::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400343_descriptor_;
}

const Proto80400343& Proto80400343::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80400343* Proto80400343::default_instance_ = NULL;

Proto80400343* Proto80400343::New() const {
  return new Proto80400343;
}

void Proto80400343::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    jump_flag_ = 0;
    is_first_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400343::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 jump_flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jump_flag_)));
          set_has_jump_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_first;
        break;
      }
      
      // optional int32 is_first = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_first:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_first_)));
          set_has_is_first();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400343::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 jump_flag = 1;
  if (has_jump_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->jump_flag(), output);
  }
  
  // optional int32 is_first = 2;
  if (has_is_first()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_first(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400343::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 jump_flag = 1;
  if (has_jump_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->jump_flag(), target);
  }
  
  // optional int32 is_first = 2;
  if (has_is_first()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_first(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400343::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 jump_flag = 1;
    if (has_jump_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jump_flag());
    }
    
    // optional int32 is_first = 2;
    if (has_is_first()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_first());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400343::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400343* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400343*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400343::MergeFrom(const Proto80400343& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_jump_flag()) {
      set_jump_flag(from.jump_flag());
    }
    if (from.has_is_first()) {
      set_is_first(from.is_first());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400343::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400343::CopyFrom(const Proto80400343& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400343::IsInitialized() const {
  
  return true;
}

void Proto80400343::Swap(Proto80400343* other) {
  if (other != this) {
    std::swap(jump_flag_, other->jump_flag_);
    std::swap(is_first_, other->is_first_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400343::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400343_descriptor_;
  metadata.reflection = Proto80400343_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400909::kBloodFieldNumber;
#endif  // !_MSC_VER

Proto80400909::Proto80400909()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400909::InitAsDefaultInstance() {
}

Proto80400909::Proto80400909(const Proto80400909& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400909::SharedCtor() {
  _cached_size_ = 0;
  blood_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400909::~Proto80400909() {
  SharedDtor();
}

void Proto80400909::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400909::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400909::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400909_descriptor_;
}

const Proto80400909& Proto80400909::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80400909* Proto80400909::default_instance_ = NULL;

Proto80400909* Proto80400909::New() const {
  return new Proto80400909;
}

void Proto80400909::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    blood_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400909::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 blood = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blood_)));
          set_has_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400909::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 blood = 1;
  if (has_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->blood(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400909::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 blood = 1;
  if (has_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->blood(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400909::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 blood = 1;
    if (has_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->blood());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400909::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400909* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400909*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400909::MergeFrom(const Proto80400909& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_blood()) {
      set_blood(from.blood());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400909::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400909::CopyFrom(const Proto80400909& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400909::IsInitialized() const {
  
  return true;
}

void Proto80400909::Swap(Proto80400909* other) {
  if (other != this) {
    std::swap(blood_, other->blood_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400909::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400909_descriptor_;
  metadata.reflection = Proto80400909_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400210::kMoverIdFieldNumber;
const int Proto80400210::kLocationFieldNumber;
#endif  // !_MSC_VER

Proto80400210::Proto80400210()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400210::InitAsDefaultInstance() {
  location_ = const_cast< ::ProtoCoord*>(&::ProtoCoord::default_instance());
}

Proto80400210::Proto80400210(const Proto80400210& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400210::SharedCtor() {
  _cached_size_ = 0;
  mover_id_ = GOOGLE_LONGLONG(0);
  location_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400210::~Proto80400210() {
  SharedDtor();
}

void Proto80400210::SharedDtor() {
  if (this != default_instance_) {
    delete location_;
  }
}

void Proto80400210::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400210::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400210_descriptor_;
}

const Proto80400210& Proto80400210::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80400210* Proto80400210::default_instance_ = NULL;

Proto80400210* Proto80400210::New() const {
  return new Proto80400210;
}

void Proto80400210::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mover_id_ = GOOGLE_LONGLONG(0);
    if (has_location()) {
      if (location_ != NULL) location_->::ProtoCoord::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400210::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 mover_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mover_id_)));
          set_has_mover_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_location;
        break;
      }
      
      // optional .ProtoCoord location = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400210::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->mover_id(), output);
  }
  
  // optional .ProtoCoord location = 2;
  if (has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->location(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400210::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->mover_id(), target);
  }
  
  // optional .ProtoCoord location = 2;
  if (has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->location(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400210::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 mover_id = 1;
    if (has_mover_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mover_id());
    }
    
    // optional .ProtoCoord location = 2;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400210::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400210* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400210*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400210::MergeFrom(const Proto80400210& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mover_id()) {
      set_mover_id(from.mover_id());
    }
    if (from.has_location()) {
      mutable_location()->::ProtoCoord::MergeFrom(from.location());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400210::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400210::CopyFrom(const Proto80400210& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400210::IsInitialized() const {
  
  return true;
}

void Proto80400210::Swap(Proto80400210* other) {
  if (other != this) {
    std::swap(mover_id_, other->mover_id_);
    std::swap(location_, other->location_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400210::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400210_descriptor_;
  metadata.reflection = Proto80400210_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400113::kMoverIdFieldNumber;
const int Proto80400113::kSkillIdFieldNumber;
const int Proto80400113::kStopByBuffFieldNumber;
#endif  // !_MSC_VER

Proto80400113::Proto80400113()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400113::InitAsDefaultInstance() {
}

Proto80400113::Proto80400113(const Proto80400113& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400113::SharedCtor() {
  _cached_size_ = 0;
  mover_id_ = GOOGLE_LONGLONG(0);
  skill_id_ = 0;
  stop_by_buff_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400113::~Proto80400113() {
  SharedDtor();
}

void Proto80400113::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400113::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400113::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400113_descriptor_;
}

const Proto80400113& Proto80400113::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80400113* Proto80400113::default_instance_ = NULL;

Proto80400113* Proto80400113::New() const {
  return new Proto80400113;
}

void Proto80400113::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mover_id_ = GOOGLE_LONGLONG(0);
    skill_id_ = 0;
    stop_by_buff_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400113::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 mover_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &mover_id_)));
          set_has_mover_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_skill_id;
        break;
      }
      
      // optional int32 skill_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_stop_by_buff;
        break;
      }
      
      // optional int32 stop_by_buff = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stop_by_buff:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stop_by_buff_)));
          set_has_stop_by_buff();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400113::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->mover_id(), output);
  }
  
  // optional int32 skill_id = 2;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skill_id(), output);
  }
  
  // optional int32 stop_by_buff = 3;
  if (has_stop_by_buff()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->stop_by_buff(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400113::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 mover_id = 1;
  if (has_mover_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->mover_id(), target);
  }
  
  // optional int32 skill_id = 2;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skill_id(), target);
  }
  
  // optional int32 stop_by_buff = 3;
  if (has_stop_by_buff()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->stop_by_buff(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400113::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 mover_id = 1;
    if (has_mover_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->mover_id());
    }
    
    // optional int32 skill_id = 2;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
    // optional int32 stop_by_buff = 3;
    if (has_stop_by_buff()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stop_by_buff());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400113::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400113* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400113*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400113::MergeFrom(const Proto80400113& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mover_id()) {
      set_mover_id(from.mover_id());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_stop_by_buff()) {
      set_stop_by_buff(from.stop_by_buff());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400113::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400113::CopyFrom(const Proto80400113& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400113::IsInitialized() const {
  
  return true;
}

void Proto80400113::Swap(Proto80400113* other) {
  if (other != this) {
    std::swap(mover_id_, other->mover_id_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(stop_by_buff_, other->stop_by_buff_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400113::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400113_descriptor_;
  metadata.reflection = Proto80400113_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80200006::kShoutIdFieldNumber;
const int Proto80200006::kChannelTypeFieldNumber;
const int Proto80200006::kShoutDetailListFieldNumber;
const int Proto80200006::kSceneIdFieldNumber;
const int Proto80200006::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto80200006::Proto80200006()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80200006::InitAsDefaultInstance() {
}

Proto80200006::Proto80200006(const Proto80200006& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80200006::SharedCtor() {
  _cached_size_ = 0;
  shout_id_ = 0;
  channel_type_ = 0;
  scene_id_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80200006::~Proto80200006() {
  SharedDtor();
}

void Proto80200006::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80200006::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80200006::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80200006_descriptor_;
}

const Proto80200006& Proto80200006::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80200006* Proto80200006::default_instance_ = NULL;

Proto80200006* Proto80200006::New() const {
  return new Proto80200006;
}

void Proto80200006::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    shout_id_ = 0;
    channel_type_ = 0;
    scene_id_ = 0;
    role_id_ = GOOGLE_LONGLONG(0);
  }
  shout_detail_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80200006::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 shout_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shout_id_)));
          set_has_shout_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_channel_type;
        break;
      }
      
      // optional int32 channel_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_channel_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channel_type_)));
          set_has_channel_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_shout_detail_list;
        break;
      }
      
      // repeated .ProtoShoutDetail shout_detail_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shout_detail_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shout_detail_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_shout_detail_list;
        if (input->ExpectTag(32)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80200006::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 shout_id = 1;
  if (has_shout_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->shout_id(), output);
  }
  
  // optional int32 channel_type = 2;
  if (has_channel_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->channel_type(), output);
  }
  
  // repeated .ProtoShoutDetail shout_detail_list = 3;
  for (int i = 0; i < this->shout_detail_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->shout_detail_list(i), output);
  }
  
  // optional int32 scene_id = 4;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->scene_id(), output);
  }
  
  // optional int64 role_id = 5;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80200006::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 shout_id = 1;
  if (has_shout_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->shout_id(), target);
  }
  
  // optional int32 channel_type = 2;
  if (has_channel_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->channel_type(), target);
  }
  
  // repeated .ProtoShoutDetail shout_detail_list = 3;
  for (int i = 0; i < this->shout_detail_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->shout_detail_list(i), target);
  }
  
  // optional int32 scene_id = 4;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->scene_id(), target);
  }
  
  // optional int64 role_id = 5;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80200006::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 shout_id = 1;
    if (has_shout_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shout_id());
    }
    
    // optional int32 channel_type = 2;
    if (has_channel_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->channel_type());
    }
    
    // optional int32 scene_id = 4;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int64 role_id = 5;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  // repeated .ProtoShoutDetail shout_detail_list = 3;
  total_size += 1 * this->shout_detail_list_size();
  for (int i = 0; i < this->shout_detail_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->shout_detail_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80200006::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80200006* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80200006*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80200006::MergeFrom(const Proto80200006& from) {
  GOOGLE_CHECK_NE(&from, this);
  shout_detail_list_.MergeFrom(from.shout_detail_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shout_id()) {
      set_shout_id(from.shout_id());
    }
    if (from.has_channel_type()) {
      set_channel_type(from.channel_type());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80200006::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80200006::CopyFrom(const Proto80200006& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80200006::IsInitialized() const {
  
  return true;
}

void Proto80200006::Swap(Proto80200006* other) {
  if (other != this) {
    std::swap(shout_id_, other->shout_id_);
    std::swap(channel_type_, other->channel_type_);
    shout_detail_list_.Swap(&other->shout_detail_list_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80200006::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80200006_descriptor_;
  metadata.reflection = Proto80200006_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400910::kSpiritValueFieldNumber;
const int Proto80400910::kMatrixListFieldNumber;
const int Proto80400910::kPuppetListFieldNumber;
const int Proto80400910::kIsNoviceScriptFieldNumber;
#endif  // !_MSC_VER

Proto80400910::Proto80400910()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400910::InitAsDefaultInstance() {
}

Proto80400910::Proto80400910(const Proto80400910& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400910::SharedCtor() {
  _cached_size_ = 0;
  spirit_value_ = 0;
  is_novice_script_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400910::~Proto80400910() {
  SharedDtor();
}

void Proto80400910::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400910::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400910::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400910_descriptor_;
}

const Proto80400910& Proto80400910::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80400910* Proto80400910::default_instance_ = NULL;

Proto80400910* Proto80400910::New() const {
  return new Proto80400910;
}

void Proto80400910::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    spirit_value_ = 0;
    is_novice_script_ = 0;
  }
  matrix_list_.Clear();
  puppet_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400910::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 spirit_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &spirit_value_)));
          set_has_spirit_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_matrix_list;
        break;
      }
      
      // repeated .ProtoSkill matrix_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_matrix_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_matrix_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_matrix_list;
        if (input->ExpectTag(24)) goto parse_puppet_list;
        break;
      }
      
      // repeated int32 puppet_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_puppet_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_puppet_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_puppet_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_puppet_list;
        if (input->ExpectTag(32)) goto parse_is_novice_script;
        break;
      }
      
      // optional int32 is_novice_script = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_novice_script:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_novice_script_)));
          set_has_is_novice_script();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400910::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 spirit_value = 1;
  if (has_spirit_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->spirit_value(), output);
  }
  
  // repeated .ProtoSkill matrix_list = 2;
  for (int i = 0; i < this->matrix_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->matrix_list(i), output);
  }
  
  // repeated int32 puppet_list = 3;
  for (int i = 0; i < this->puppet_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->puppet_list(i), output);
  }
  
  // optional int32 is_novice_script = 4;
  if (has_is_novice_script()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->is_novice_script(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400910::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 spirit_value = 1;
  if (has_spirit_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->spirit_value(), target);
  }
  
  // repeated .ProtoSkill matrix_list = 2;
  for (int i = 0; i < this->matrix_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->matrix_list(i), target);
  }
  
  // repeated int32 puppet_list = 3;
  for (int i = 0; i < this->puppet_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->puppet_list(i), target);
  }
  
  // optional int32 is_novice_script = 4;
  if (has_is_novice_script()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->is_novice_script(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400910::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 spirit_value = 1;
    if (has_spirit_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->spirit_value());
    }
    
    // optional int32 is_novice_script = 4;
    if (has_is_novice_script()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_novice_script());
    }
    
  }
  // repeated .ProtoSkill matrix_list = 2;
  total_size += 1 * this->matrix_list_size();
  for (int i = 0; i < this->matrix_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->matrix_list(i));
  }
  
  // repeated int32 puppet_list = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->puppet_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->puppet_list(i));
    }
    total_size += 1 * this->puppet_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400910::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400910* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400910*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400910::MergeFrom(const Proto80400910& from) {
  GOOGLE_CHECK_NE(&from, this);
  matrix_list_.MergeFrom(from.matrix_list_);
  puppet_list_.MergeFrom(from.puppet_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_spirit_value()) {
      set_spirit_value(from.spirit_value());
    }
    if (from.has_is_novice_script()) {
      set_is_novice_script(from.is_novice_script());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400910::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400910::CopyFrom(const Proto80400910& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400910::IsInitialized() const {
  
  return true;
}

void Proto80400910::Swap(Proto80400910* other) {
  if (other != this) {
    std::swap(spirit_value_, other->spirit_value_);
    matrix_list_.Swap(&other->matrix_list_);
    puppet_list_.Swap(&other->puppet_list_);
    std::swap(is_novice_script_, other->is_novice_script_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400910::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400910_descriptor_;
  metadata.reflection = Proto80400910_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400908::kMatrixIdFieldNumber;
const int Proto10400908::kPuppetFieldNumber;
#endif  // !_MSC_VER

Proto10400908::Proto10400908()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400908::InitAsDefaultInstance() {
}

Proto10400908::Proto10400908(const Proto10400908& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400908::SharedCtor() {
  _cached_size_ = 0;
  matrix_id_ = 0;
  puppet_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400908::~Proto10400908() {
  SharedDtor();
}

void Proto10400908::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400908::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400908::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400908_descriptor_;
}

const Proto10400908& Proto10400908::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto10400908* Proto10400908::default_instance_ = NULL;

Proto10400908* Proto10400908::New() const {
  return new Proto10400908;
}

void Proto10400908::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    matrix_id_ = 0;
    puppet_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400908::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 matrix_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &matrix_id_)));
          set_has_matrix_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_puppet;
        break;
      }
      
      // optional int32 puppet = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_puppet:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &puppet_)));
          set_has_puppet();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400908::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 matrix_id = 1;
  if (has_matrix_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->matrix_id(), output);
  }
  
  // optional int32 puppet = 2;
  if (has_puppet()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->puppet(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400908::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 matrix_id = 1;
  if (has_matrix_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->matrix_id(), target);
  }
  
  // optional int32 puppet = 2;
  if (has_puppet()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->puppet(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400908::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 matrix_id = 1;
    if (has_matrix_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->matrix_id());
    }
    
    // optional int32 puppet = 2;
    if (has_puppet()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->puppet());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400908::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400908* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400908*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400908::MergeFrom(const Proto10400908& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_matrix_id()) {
      set_matrix_id(from.matrix_id());
    }
    if (from.has_puppet()) {
      set_puppet(from.puppet());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400908::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400908::CopyFrom(const Proto10400908& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400908::IsInitialized() const {
  
  return true;
}

void Proto10400908::Swap(Proto10400908* other) {
  if (other != this) {
    std::swap(matrix_id_, other->matrix_id_);
    std::swap(puppet_, other->puppet_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400908::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400908_descriptor_;
  metadata.reflection = Proto10400908_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400211::kHitTypeFieldNumber;
#endif  // !_MSC_VER

Proto80400211::Proto80400211()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400211::InitAsDefaultInstance() {
}

Proto80400211::Proto80400211(const Proto80400211& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400211::SharedCtor() {
  _cached_size_ = 0;
  hit_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400211::~Proto80400211() {
  SharedDtor();
}

void Proto80400211::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400211::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400211::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400211_descriptor_;
}

const Proto80400211& Proto80400211::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80400211* Proto80400211::default_instance_ = NULL;

Proto80400211* Proto80400211::New() const {
  return new Proto80400211;
}

void Proto80400211::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    hit_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400211::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 hit_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hit_type_)));
          set_has_hit_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400211::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 hit_type = 1;
  if (has_hit_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->hit_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400211::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 hit_type = 1;
  if (has_hit_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->hit_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400211::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 hit_type = 1;
    if (has_hit_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hit_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400211::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400211* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400211*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400211::MergeFrom(const Proto80400211& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hit_type()) {
      set_hit_type(from.hit_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400211::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400211::CopyFrom(const Proto80400211& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400211::IsInitialized() const {
  
  return true;
}

void Proto80400211::Swap(Proto80400211* other) {
  if (other != this) {
    std::swap(hit_type_, other->hit_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400211::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400211_descriptor_;
  metadata.reflection = Proto80400211_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400331::kTaskIdFieldNumber;
#endif  // !_MSC_VER

Proto11400331::Proto11400331()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400331::InitAsDefaultInstance() {
}

Proto11400331::Proto11400331(const Proto11400331& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400331::SharedCtor() {
  _cached_size_ = 0;
  task_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400331::~Proto11400331() {
  SharedDtor();
}

void Proto11400331::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400331::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400331::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400331_descriptor_;
}

const Proto11400331& Proto11400331::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto11400331* Proto11400331::default_instance_ = NULL;

Proto11400331* Proto11400331::New() const {
  return new Proto11400331;
}

void Proto11400331::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    task_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400331::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 task_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
          set_has_task_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400331::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->task_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400331::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->task_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400331::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 task_id = 1;
    if (has_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400331::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400331* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400331*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400331::MergeFrom(const Proto11400331& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_task_id()) {
      set_task_id(from.task_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400331::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400331::CopyFrom(const Proto11400331& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400331::IsInitialized() const {
  
  return true;
}

void Proto11400331::Swap(Proto11400331* other) {
  if (other != this) {
    std::swap(task_id_, other->task_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400331::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400331_descriptor_;
  metadata.reflection = Proto11400331_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400344::kLeagueStateFieldNumber;
#endif  // !_MSC_VER

Proto80400344::Proto80400344()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400344::InitAsDefaultInstance() {
}

Proto80400344::Proto80400344(const Proto80400344& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400344::SharedCtor() {
  _cached_size_ = 0;
  league_state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400344::~Proto80400344() {
  SharedDtor();
}

void Proto80400344::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400344::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400344::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400344_descriptor_;
}

const Proto80400344& Proto80400344::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80400344* Proto80400344::default_instance_ = NULL;

Proto80400344* Proto80400344::New() const {
  return new Proto80400344;
}

void Proto80400344::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400344::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 league_state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &league_state_)));
          set_has_league_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400344::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 league_state = 1;
  if (has_league_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->league_state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400344::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 league_state = 1;
  if (has_league_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->league_state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400344::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 league_state = 1;
    if (has_league_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->league_state());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400344::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400344* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400344*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400344::MergeFrom(const Proto80400344& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_state()) {
      set_league_state(from.league_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400344::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400344::CopyFrom(const Proto80400344& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400344::IsInitialized() const {
  
  return true;
}

void Proto80400344::Swap(Proto80400344* other) {
  if (other != this) {
    std::swap(league_state_, other->league_state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400344::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400344_descriptor_;
  metadata.reflection = Proto80400344_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100202::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto10100202::Proto10100202()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100202::InitAsDefaultInstance() {
}

Proto10100202::Proto10100202(const Proto10100202& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100202::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100202::~Proto10100202() {
  SharedDtor();
}

void Proto10100202::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100202::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100202::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100202_descriptor_;
}

const Proto10100202& Proto10100202::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto10100202* Proto10100202::default_instance_ = NULL;

Proto10100202* Proto10100202::New() const {
  return new Proto10100202;
}

void Proto10100202::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100202::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100202::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100202::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100202::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100202::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100202* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100202*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100202::MergeFrom(const Proto10100202& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100202::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100202::CopyFrom(const Proto10100202& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100202::IsInitialized() const {
  
  return true;
}

void Proto10100202::Swap(Proto10100202* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100202::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100202_descriptor_;
  metadata.reflection = Proto10100202_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100203::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto10100203::Proto10100203()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100203::InitAsDefaultInstance() {
}

Proto10100203::Proto10100203(const Proto10100203& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100203::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100203::~Proto10100203() {
  SharedDtor();
}

void Proto10100203::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100203::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100203::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100203_descriptor_;
}

const Proto10100203& Proto10100203::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto10100203* Proto10100203::default_instance_ = NULL;

Proto10100203* Proto10100203::New() const {
  return new Proto10100203;
}

void Proto10100203::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100203::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100203::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100203::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100203::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100203::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100203* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100203*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100203::MergeFrom(const Proto10100203& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100203::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100203::CopyFrom(const Proto10100203& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100203::IsInitialized() const {
  
  return true;
}

void Proto10100203::Swap(Proto10100203* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100203::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100203_descriptor_;
  metadata.reflection = Proto10100203_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100203::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto50100203::Proto50100203()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100203::InitAsDefaultInstance() {
}

Proto50100203::Proto50100203(const Proto50100203& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100203::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100203::~Proto50100203() {
  SharedDtor();
}

void Proto50100203::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100203::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100203::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100203_descriptor_;
}

const Proto50100203& Proto50100203::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto50100203* Proto50100203::default_instance_ = NULL;

Proto50100203* Proto50100203::New() const {
  return new Proto50100203;
}

void Proto50100203::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100203::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100203::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100203::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100203::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100203::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100203* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100203*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100203::MergeFrom(const Proto50100203& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100203::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100203::CopyFrom(const Proto50100203& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100203::IsInitialized() const {
  
  return true;
}

void Proto50100203::Swap(Proto50100203* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100203::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100203_descriptor_;
  metadata.reflection = Proto50100203_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100202::kActivityInfoFieldNumber;
#endif  // !_MSC_VER

Proto50100202::Proto50100202()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100202::InitAsDefaultInstance() {
  activity_info_ = const_cast< ::ProtoActivityInfo*>(&::ProtoActivityInfo::default_instance());
}

Proto50100202::Proto50100202(const Proto50100202& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100202::SharedCtor() {
  _cached_size_ = 0;
  activity_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100202::~Proto50100202() {
  SharedDtor();
}

void Proto50100202::SharedDtor() {
  if (this != default_instance_) {
    delete activity_info_;
  }
}

void Proto50100202::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100202::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100202_descriptor_;
}

const Proto50100202& Proto50100202::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto50100202* Proto50100202::default_instance_ = NULL;

Proto50100202* Proto50100202::New() const {
  return new Proto50100202;
}

void Proto50100202::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_activity_info()) {
      if (activity_info_ != NULL) activity_info_->::ProtoActivityInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100202::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoActivityInfo activity_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activity_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100202::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoActivityInfo activity_info = 1;
  if (has_activity_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->activity_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100202::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoActivityInfo activity_info = 1;
  if (has_activity_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->activity_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100202::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoActivityInfo activity_info = 1;
    if (has_activity_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->activity_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100202::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100202* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100202*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100202::MergeFrom(const Proto50100202& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_info()) {
      mutable_activity_info()->::ProtoActivityInfo::MergeFrom(from.activity_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100202::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100202::CopyFrom(const Proto50100202& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100202::IsInitialized() const {
  
  return true;
}

void Proto50100202::Swap(Proto50100202* other) {
  if (other != this) {
    std::swap(activity_info_, other->activity_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100202::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100202_descriptor_;
  metadata.reflection = Proto50100202_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100201::kActivityInfoListFieldNumber;
#endif  // !_MSC_VER

Proto50100201::Proto50100201()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100201::InitAsDefaultInstance() {
}

Proto50100201::Proto50100201(const Proto50100201& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100201::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100201::~Proto50100201() {
  SharedDtor();
}

void Proto50100201::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100201::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100201::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100201_descriptor_;
}

const Proto50100201& Proto50100201::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto50100201* Proto50100201::default_instance_ = NULL;

Proto50100201* Proto50100201::New() const {
  return new Proto50100201;
}

void Proto50100201::Clear() {
  activity_info_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100201::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoActivityInfo activity_info_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_activity_info_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_activity_info_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_activity_info_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100201::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoActivityInfo activity_info_list = 1;
  for (int i = 0; i < this->activity_info_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->activity_info_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100201::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoActivityInfo activity_info_list = 1;
  for (int i = 0; i < this->activity_info_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->activity_info_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100201::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoActivityInfo activity_info_list = 1;
  total_size += 1 * this->activity_info_list_size();
  for (int i = 0; i < this->activity_info_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->activity_info_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100201::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100201* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100201*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100201::MergeFrom(const Proto50100201& from) {
  GOOGLE_CHECK_NE(&from, this);
  activity_info_list_.MergeFrom(from.activity_info_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100201::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100201::CopyFrom(const Proto50100201& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100201::IsInitialized() const {
  
  return true;
}

void Proto50100201::Swap(Proto50100201* other) {
  if (other != this) {
    activity_info_list_.Swap(&other->activity_info_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100201::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100201_descriptor_;
  metadata.reflection = Proto50100201_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400134::kGoodsListFieldNumber;
#endif  // !_MSC_VER

Proto11400134::Proto11400134()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400134::InitAsDefaultInstance() {
}

Proto11400134::Proto11400134(const Proto11400134& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400134::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400134::~Proto11400134() {
  SharedDtor();
}

void Proto11400134::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400134::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400134::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400134_descriptor_;
}

const Proto11400134& Proto11400134::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto11400134* Proto11400134::default_instance_ = NULL;

Proto11400134* Proto11400134::New() const {
  return new Proto11400134;
}

void Proto11400134::Clear() {
  goods_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400134::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoPairObj goods_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_goods_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400134::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoPairObj goods_list = 1;
  for (int i = 0; i < this->goods_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goods_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400134::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoPairObj goods_list = 1;
  for (int i = 0; i < this->goods_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goods_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400134::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoPairObj goods_list = 1;
  total_size += 1 * this->goods_list_size();
  for (int i = 0; i < this->goods_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400134::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400134* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400134*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400134::MergeFrom(const Proto11400134& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_list_.MergeFrom(from.goods_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400134::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400134::CopyFrom(const Proto11400134& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400134::IsInitialized() const {
  
  return true;
}

void Proto11400134::Swap(Proto11400134* other) {
  if (other != this) {
    goods_list_.Swap(&other->goods_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400134::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400134_descriptor_;
  metadata.reflection = Proto11400134_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100102::kSrcRoleIdFieldNumber;
const int Proto80100102::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto80100102::Proto80100102()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100102::InitAsDefaultInstance() {
}

Proto80100102::Proto80100102(const Proto80100102& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100102::SharedCtor() {
  _cached_size_ = 0;
  src_role_id_ = GOOGLE_LONGLONG(0);
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100102::~Proto80100102() {
  SharedDtor();
}

void Proto80100102::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80100102::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100102::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100102_descriptor_;
}

const Proto80100102& Proto80100102::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto80100102* Proto80100102::default_instance_ = NULL;

Proto80100102* Proto80100102::New() const {
  return new Proto80100102;
}

void Proto80100102::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    src_role_id_ = GOOGLE_LONGLONG(0);
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100102::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 src_role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &src_role_id_)));
          set_has_src_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100102::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 src_role_id = 1;
  if (has_src_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->src_role_id(), output);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100102::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 src_role_id = 1;
  if (has_src_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->src_role_id(), target);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100102::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 src_role_id = 1;
    if (has_src_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->src_role_id());
    }
    
    // optional int64 role_id = 2;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100102::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100102* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100102*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100102::MergeFrom(const Proto80100102& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_src_role_id()) {
      set_src_role_id(from.src_role_id());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100102::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100102::CopyFrom(const Proto80100102& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100102::IsInitialized() const {
  
  return true;
}

void Proto80100102::Swap(Proto80100102* other) {
  if (other != this) {
    std::swap(src_role_id_, other->src_role_id_);
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100102::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100102_descriptor_;
  metadata.reflection = Proto80100102_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400204::kPkStateFieldNumber;
#endif  // !_MSC_VER

Proto10400204::Proto10400204()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400204::InitAsDefaultInstance() {
}

Proto10400204::Proto10400204(const Proto10400204& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400204::SharedCtor() {
  _cached_size_ = 0;
  pk_state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400204::~Proto10400204() {
  SharedDtor();
}

void Proto10400204::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400204::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400204::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400204_descriptor_;
}

const Proto10400204& Proto10400204::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto10400204* Proto10400204::default_instance_ = NULL;

Proto10400204* Proto10400204::New() const {
  return new Proto10400204;
}

void Proto10400204::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pk_state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400204::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pk_state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pk_state_)));
          set_has_pk_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400204::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pk_state = 1;
  if (has_pk_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pk_state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400204::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pk_state = 1;
  if (has_pk_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pk_state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400204::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pk_state = 1;
    if (has_pk_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pk_state());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400204::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400204* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400204*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400204::MergeFrom(const Proto10400204& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pk_state()) {
      set_pk_state(from.pk_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400204::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400204::CopyFrom(const Proto10400204& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400204::IsInitialized() const {
  
  return true;
}

void Proto10400204::Swap(Proto10400204* other) {
  if (other != this) {
    std::swap(pk_state_, other->pk_state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400204::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400204_descriptor_;
  metadata.reflection = Proto10400204_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400204::kPkStateFieldNumber;
#endif  // !_MSC_VER

Proto50400204::Proto50400204()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400204::InitAsDefaultInstance() {
}

Proto50400204::Proto50400204(const Proto50400204& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400204::SharedCtor() {
  _cached_size_ = 0;
  pk_state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400204::~Proto50400204() {
  SharedDtor();
}

void Proto50400204::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400204::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400204::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400204_descriptor_;
}

const Proto50400204& Proto50400204::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient007_2eproto();  return *default_instance_;
}

Proto50400204* Proto50400204::default_instance_ = NULL;

Proto50400204* Proto50400204::New() const {
  return new Proto50400204;
}

void Proto50400204::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pk_state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400204::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pk_state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pk_state_)));
          set_has_pk_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400204::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pk_state = 1;
  if (has_pk_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pk_state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400204::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pk_state = 1;
  if (has_pk_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pk_state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400204::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pk_state = 1;
    if (has_pk_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pk_state());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400204::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400204* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400204*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400204::MergeFrom(const Proto50400204& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pk_state()) {
      set_pk_state(from.pk_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400204::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400204::CopyFrom(const Proto50400204& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400204::IsInitialized() const {
  
  return true;
}

void Proto50400204::Swap(Proto50400204* other) {
  if (other != this) {
    std::swap(pk_state_, other->pk_state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400204::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400204_descriptor_;
  metadata.reflection = Proto50400204_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
