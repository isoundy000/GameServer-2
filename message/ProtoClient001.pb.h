// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoClient001.proto

#ifndef PROTOBUF_ProtoClient001_2eproto__INCLUDED
#define PROTOBUF_ProtoClient001_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "ProtoPublic.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProtoClient001_2eproto();
void protobuf_AssignDesc_ProtoClient001_2eproto();
void protobuf_ShutdownFile_ProtoClient001_2eproto();

class Proto10700101;
class Proto50700101;
class Proto10600101;
class Proto50600101;
class Proto10600102;
class Proto80400101;
class Proto10400001;
class Proto80400102;
class Proto80400104;
class Proto10400109;
class Proto80400105;
class Proto50600102;
class Proto10400110;
class Proto11499999;
class Proto10200001;
class Proto10200002;
class Proto10200003;
class Proto10200004;
class Proto11400002;
class Proto11400001;
class Proto50200004;
class Proto80200001;
class Proto80200002;
class Proto80200003;
class Proto10200005;
class Proto50200005;
class Proto10200006;
class Proto50200006;
class Proto11400101;
class Proto11400102;
class Proto11400103;
class Proto11400104;
class Proto11400105;
class Proto11400106;
class Proto11400107;
class Proto11400110;
class Proto51400101;
class Proto51400102;
class Proto51400103;
class Proto51400106;
class Proto81400102;
class Proto81400101;
class Proto81400103;
class Proto11400326;
class Proto11400327;
class Proto11400328;
class Proto11400329;
class Proto11400330;
class Proto51400325;
class Proto51400329;

// ===================================================================

class Proto10700101 : public ::google::protobuf::Message {
 public:
  Proto10700101();
  virtual ~Proto10700101();
  
  Proto10700101(const Proto10700101& from);
  
  inline Proto10700101& operator=(const Proto10700101& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto10700101& default_instance();
  
  void Swap(Proto10700101* other);
  
  // implements Message ----------------------------------------------
  
  Proto10700101* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto10700101& from);
  void MergeFrom(const Proto10700101& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  
  // optional string session = 2;
  inline bool has_session() const;
  inline void clear_session();
  static const int kSessionFieldNumber = 2;
  inline const ::std::string& session() const;
  inline void set_session(const ::std::string& value);
  inline void set_session(const char* value);
  inline void set_session(const char* value, size_t size);
  inline ::std::string* mutable_session();
  inline ::std::string* release_session();
  
  // optional string tick = 3;
  inline bool has_tick() const;
  inline void clear_tick();
  static const int kTickFieldNumber = 3;
  inline const ::std::string& tick() const;
  inline void set_tick(const ::std::string& value);
  inline void set_tick(const char* value);
  inline void set_tick(const char* value, size_t size);
  inline ::std::string* mutable_tick();
  inline ::std::string* release_tick();
  
  // @@protoc_insertion_point(class_scope:Proto10700101)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_session();
  inline void clear_has_session();
  inline void set_has_tick();
  inline void clear_has_tick();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* account_;
  ::std::string* session_;
  ::std::string* tick_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto10700101* default_instance_;
};
// -------------------------------------------------------------------

class Proto50700101 : public ::google::protobuf::Message {
 public:
  Proto50700101();
  virtual ~Proto50700101();
  
  Proto50700101(const Proto50700101& from);
  
  inline Proto50700101& operator=(const Proto50700101& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto50700101& default_instance();
  
  void Swap(Proto50700101* other);
  
  // implements Message ----------------------------------------------
  
  Proto50700101* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto50700101& from);
  void MergeFrom(const Proto50700101& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string gate_ip = 1;
  inline bool has_gate_ip() const;
  inline void clear_gate_ip();
  static const int kGateIpFieldNumber = 1;
  inline const ::std::string& gate_ip() const;
  inline void set_gate_ip(const ::std::string& value);
  inline void set_gate_ip(const char* value);
  inline void set_gate_ip(const char* value, size_t size);
  inline ::std::string* mutable_gate_ip();
  inline ::std::string* release_gate_ip();
  
  // optional int32 gate_port = 2;
  inline bool has_gate_port() const;
  inline void clear_gate_port();
  static const int kGatePortFieldNumber = 2;
  inline ::google::protobuf::int32 gate_port() const;
  inline void set_gate_port(::google::protobuf::int32 value);
  
  // optional string domain = 3;
  inline bool has_domain() const;
  inline void clear_domain();
  static const int kDomainFieldNumber = 3;
  inline const ::std::string& domain() const;
  inline void set_domain(const ::std::string& value);
  inline void set_domain(const char* value);
  inline void set_domain(const char* value, size_t size);
  inline ::std::string* mutable_domain();
  inline ::std::string* release_domain();
  
  // @@protoc_insertion_point(class_scope:Proto50700101)
 private:
  inline void set_has_gate_ip();
  inline void clear_has_gate_ip();
  inline void set_has_gate_port();
  inline void clear_has_gate_port();
  inline void set_has_domain();
  inline void clear_has_domain();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* gate_ip_;
  ::std::string* domain_;
  ::google::protobuf::int32 gate_port_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto50700101* default_instance_;
};
// -------------------------------------------------------------------

class Proto10600101 : public ::google::protobuf::Message {
 public:
  Proto10600101();
  virtual ~Proto10600101();
  
  Proto10600101(const Proto10600101& from);
  
  inline Proto10600101& operator=(const Proto10600101& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto10600101& default_instance();
  
  void Swap(Proto10600101* other);
  
  // implements Message ----------------------------------------------
  
  Proto10600101* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto10600101& from);
  void MergeFrom(const Proto10600101& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  
  // optional string session = 2;
  inline bool has_session() const;
  inline void clear_session();
  static const int kSessionFieldNumber = 2;
  inline const ::std::string& session() const;
  inline void set_session(const ::std::string& value);
  inline void set_session(const char* value);
  inline void set_session(const char* value, size_t size);
  inline ::std::string* mutable_session();
  inline ::std::string* release_session();
  
  // optional string tick = 3;
  inline bool has_tick() const;
  inline void clear_tick();
  static const int kTickFieldNumber = 3;
  inline const ::std::string& tick() const;
  inline void set_tick(const ::std::string& value);
  inline void set_tick(const char* value);
  inline void set_tick(const char* value, size_t size);
  inline ::std::string* mutable_tick();
  inline ::std::string* release_tick();
  
  // optional string agent = 4;
  inline bool has_agent() const;
  inline void clear_agent();
  static const int kAgentFieldNumber = 4;
  inline const ::std::string& agent() const;
  inline void set_agent(const ::std::string& value);
  inline void set_agent(const char* value);
  inline void set_agent(const char* value, size_t size);
  inline ::std::string* mutable_agent();
  inline ::std::string* release_agent();
  
  // optional string platform = 5;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 5;
  inline const ::std::string& platform() const;
  inline void set_platform(const ::std::string& value);
  inline void set_platform(const char* value);
  inline void set_platform(const char* value, size_t size);
  inline ::std::string* mutable_platform();
  inline ::std::string* release_platform();
  
  // optional string net_type = 6;
  inline bool has_net_type() const;
  inline void clear_net_type();
  static const int kNetTypeFieldNumber = 6;
  inline const ::std::string& net_type() const;
  inline void set_net_type(const ::std::string& value);
  inline void set_net_type(const char* value);
  inline void set_net_type(const char* value, size_t size);
  inline ::std::string* mutable_net_type();
  inline ::std::string* release_net_type();
  
  // optional string sys_version = 7;
  inline bool has_sys_version() const;
  inline void clear_sys_version();
  static const int kSysVersionFieldNumber = 7;
  inline const ::std::string& sys_version() const;
  inline void set_sys_version(const ::std::string& value);
  inline void set_sys_version(const char* value);
  inline void set_sys_version(const char* value, size_t size);
  inline ::std::string* mutable_sys_version();
  inline ::std::string* release_sys_version();
  
  // optional string sys_model = 8;
  inline bool has_sys_model() const;
  inline void clear_sys_model();
  static const int kSysModelFieldNumber = 8;
  inline const ::std::string& sys_model() const;
  inline void set_sys_model(const ::std::string& value);
  inline void set_sys_model(const char* value);
  inline void set_sys_model(const char* value, size_t size);
  inline ::std::string* mutable_sys_model();
  inline ::std::string* release_sys_model();
  
  // optional string mac = 9;
  inline bool has_mac() const;
  inline void clear_mac();
  static const int kMacFieldNumber = 9;
  inline const ::std::string& mac() const;
  inline void set_mac(const ::std::string& value);
  inline void set_mac(const char* value);
  inline void set_mac(const char* value, size_t size);
  inline ::std::string* mutable_mac();
  inline ::std::string* release_mac();
  
  // optional string c_sid = 10;
  inline bool has_c_sid() const;
  inline void clear_c_sid();
  static const int kCSidFieldNumber = 10;
  inline const ::std::string& c_sid() const;
  inline void set_c_sid(const ::std::string& value);
  inline void set_c_sid(const char* value);
  inline void set_c_sid(const char* value, size_t size);
  inline ::std::string* mutable_c_sid();
  inline ::std::string* release_c_sid();
  
  // optional string server_flag = 11;
  inline bool has_server_flag() const;
  inline void clear_server_flag();
  static const int kServerFlagFieldNumber = 11;
  inline const ::std::string& server_flag() const;
  inline void set_server_flag(const ::std::string& value);
  inline void set_server_flag(const char* value);
  inline void set_server_flag(const char* value, size_t size);
  inline ::std::string* mutable_server_flag();
  inline ::std::string* release_server_flag();
  
  // optional int32 market = 12;
  inline bool has_market() const;
  inline void clear_market();
  static const int kMarketFieldNumber = 12;
  inline ::google::protobuf::int32 market() const;
  inline void set_market(::google::protobuf::int32 value);
  
  // optional string imei = 13;
  inline bool has_imei() const;
  inline void clear_imei();
  static const int kImeiFieldNumber = 13;
  inline const ::std::string& imei() const;
  inline void set_imei(const ::std::string& value);
  inline void set_imei(const char* value);
  inline void set_imei(const char* value, size_t size);
  inline ::std::string* mutable_imei();
  inline ::std::string* release_imei();
  
  // @@protoc_insertion_point(class_scope:Proto10600101)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_session();
  inline void clear_has_session();
  inline void set_has_tick();
  inline void clear_has_tick();
  inline void set_has_agent();
  inline void clear_has_agent();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_net_type();
  inline void clear_has_net_type();
  inline void set_has_sys_version();
  inline void clear_has_sys_version();
  inline void set_has_sys_model();
  inline void clear_has_sys_model();
  inline void set_has_mac();
  inline void clear_has_mac();
  inline void set_has_c_sid();
  inline void clear_has_c_sid();
  inline void set_has_server_flag();
  inline void clear_has_server_flag();
  inline void set_has_market();
  inline void clear_has_market();
  inline void set_has_imei();
  inline void clear_has_imei();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* account_;
  ::std::string* session_;
  ::std::string* tick_;
  ::std::string* agent_;
  ::std::string* platform_;
  ::std::string* net_type_;
  ::std::string* sys_version_;
  ::std::string* sys_model_;
  ::std::string* mac_;
  ::std::string* c_sid_;
  ::std::string* server_flag_;
  ::std::string* imei_;
  ::google::protobuf::int32 market_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto10600101* default_instance_;
};
// -------------------------------------------------------------------

class Proto50600101 : public ::google::protobuf::Message {
 public:
  Proto50600101();
  virtual ~Proto50600101();
  
  Proto50600101(const Proto50600101& from);
  
  inline Proto50600101& operator=(const Proto50600101& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto50600101& default_instance();
  
  void Swap(Proto50600101* other);
  
  // implements Message ----------------------------------------------
  
  Proto50600101* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto50600101& from);
  void MergeFrom(const Proto50600101& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int64 role_id() const;
  inline void set_role_id(::google::protobuf::int64 value);
  
  // repeated .ProtoSceneAddress scene_addrs = 2;
  inline int scene_addrs_size() const;
  inline void clear_scene_addrs();
  static const int kSceneAddrsFieldNumber = 2;
  inline const ::ProtoSceneAddress& scene_addrs(int index) const;
  inline ::ProtoSceneAddress* mutable_scene_addrs(int index);
  inline ::ProtoSceneAddress* add_scene_addrs();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoSceneAddress >&
      scene_addrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoSceneAddress >*
      mutable_scene_addrs();
  
  // optional int32 ban_type = 3;
  inline bool has_ban_type() const;
  inline void clear_ban_type();
  static const int kBanTypeFieldNumber = 3;
  inline ::google::protobuf::int32 ban_type() const;
  inline void set_ban_type(::google::protobuf::int32 value);
  
  // optional int32 expired_time = 4;
  inline bool has_expired_time() const;
  inline void clear_expired_time();
  static const int kExpiredTimeFieldNumber = 4;
  inline ::google::protobuf::int32 expired_time() const;
  inline void set_expired_time(::google::protobuf::int32 value);
  
  // optional int32 left_ban_sec = 5;
  inline bool has_left_ban_sec() const;
  inline void clear_left_ban_sec();
  static const int kLeftBanSecFieldNumber = 5;
  inline ::google::protobuf::int32 left_ban_sec() const;
  inline void set_left_ban_sec(::google::protobuf::int32 value);
  
  // repeated .ProtoGateRole role_list = 6;
  inline int role_list_size() const;
  inline void clear_role_list();
  static const int kRoleListFieldNumber = 6;
  inline const ::ProtoGateRole& role_list(int index) const;
  inline ::ProtoGateRole* mutable_role_list(int index);
  inline ::ProtoGateRole* add_role_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoGateRole >&
      role_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoGateRole >*
      mutable_role_list();
  
  // @@protoc_insertion_point(class_scope:Proto50600101)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_ban_type();
  inline void clear_has_ban_type();
  inline void set_has_expired_time();
  inline void clear_has_expired_time();
  inline void set_has_left_ban_sec();
  inline void clear_has_left_ban_sec();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 role_id_;
  ::google::protobuf::RepeatedPtrField< ::ProtoSceneAddress > scene_addrs_;
  ::google::protobuf::int32 ban_type_;
  ::google::protobuf::int32 expired_time_;
  ::google::protobuf::RepeatedPtrField< ::ProtoGateRole > role_list_;
  ::google::protobuf::int32 left_ban_sec_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto50600101* default_instance_;
};
// -------------------------------------------------------------------

class Proto10600102 : public ::google::protobuf::Message {
 public:
  Proto10600102();
  virtual ~Proto10600102();
  
  Proto10600102(const Proto10600102& from);
  
  inline Proto10600102& operator=(const Proto10600102& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto10600102& default_instance();
  
  void Swap(Proto10600102* other);
  
  // implements Message ----------------------------------------------
  
  Proto10600102* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto10600102& from);
  void MergeFrom(const Proto10600102& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional int32 sex = 2;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 2;
  inline ::google::protobuf::int32 sex() const;
  inline void set_sex(::google::protobuf::int32 value);
  
  // optional string account = 3;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 3;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  
  // optional string session = 4;
  inline bool has_session() const;
  inline void clear_session();
  static const int kSessionFieldNumber = 4;
  inline const ::std::string& session() const;
  inline void set_session(const ::std::string& value);
  inline void set_session(const char* value);
  inline void set_session(const char* value, size_t size);
  inline ::std::string* mutable_session();
  inline ::std::string* release_session();
  
  // optional string agent = 5;
  inline bool has_agent() const;
  inline void clear_agent();
  static const int kAgentFieldNumber = 5;
  inline const ::std::string& agent() const;
  inline void set_agent(const ::std::string& value);
  inline void set_agent(const char* value);
  inline void set_agent(const char* value, size_t size);
  inline ::std::string* mutable_agent();
  inline ::std::string* release_agent();
  
  // optional string platform = 6;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 6;
  inline const ::std::string& platform() const;
  inline void set_platform(const ::std::string& value);
  inline void set_platform(const char* value);
  inline void set_platform(const char* value, size_t size);
  inline ::std::string* mutable_platform();
  inline ::std::string* release_platform();
  
  // optional int32 market = 7;
  inline bool has_market() const;
  inline void clear_market();
  static const int kMarketFieldNumber = 7;
  inline ::google::protobuf::int32 market() const;
  inline void set_market(::google::protobuf::int32 value);
  
  // optional int32 career = 8;
  inline bool has_career() const;
  inline void clear_career();
  static const int kCareerFieldNumber = 8;
  inline ::google::protobuf::int32 career() const;
  inline void set_career(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto10600102)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_session();
  inline void clear_has_session();
  inline void set_has_agent();
  inline void clear_has_agent();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_market();
  inline void clear_has_market();
  inline void set_has_career();
  inline void clear_has_career();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* account_;
  ::std::string* session_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 market_;
  ::std::string* agent_;
  ::std::string* platform_;
  ::google::protobuf::int32 career_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto10600102* default_instance_;
};
// -------------------------------------------------------------------

class Proto80400101 : public ::google::protobuf::Message {
 public:
  Proto80400101();
  virtual ~Proto80400101();
  
  Proto80400101(const Proto80400101& from);
  
  inline Proto80400101& operator=(const Proto80400101& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto80400101& default_instance();
  
  void Swap(Proto80400101* other);
  
  // implements Message ----------------------------------------------
  
  Proto80400101* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto80400101& from);
  void MergeFrom(const Proto80400101& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 chat_scene = 1;
  inline bool has_chat_scene() const;
  inline void clear_chat_scene();
  static const int kChatSceneFieldNumber = 1;
  inline ::google::protobuf::int32 chat_scene() const;
  inline void set_chat_scene(::google::protobuf::int32 value);
  
  // optional int64 role_id = 2;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::int64 role_id() const;
  inline void set_role_id(::google::protobuf::int64 value);
  
  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional int32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 sex = 5;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 5;
  inline ::google::protobuf::int32 sex() const;
  inline void set_sex(::google::protobuf::int32 value);
  
  // optional int64 league_id = 6;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 6;
  inline ::google::protobuf::int64 league_id() const;
  inline void set_league_id(::google::protobuf::int64 value);
  
  // optional string league_name = 7;
  inline bool has_league_name() const;
  inline void clear_league_name();
  static const int kLeagueNameFieldNumber = 7;
  inline const ::std::string& league_name() const;
  inline void set_league_name(const ::std::string& value);
  inline void set_league_name(const char* value);
  inline void set_league_name(const char* value, size_t size);
  inline ::std::string* mutable_league_name();
  inline ::std::string* release_league_name();
  
  // optional int32 scene_id = 8;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 8;
  inline ::google::protobuf::int32 scene_id() const;
  inline void set_scene_id(::google::protobuf::int32 value);
  
  // optional int32 pixel_x = 9;
  inline bool has_pixel_x() const;
  inline void clear_pixel_x();
  static const int kPixelXFieldNumber = 9;
  inline ::google::protobuf::int32 pixel_x() const;
  inline void set_pixel_x(::google::protobuf::int32 value);
  
  // optional int32 pixel_y = 10;
  inline bool has_pixel_y() const;
  inline void clear_pixel_y();
  static const int kPixelYFieldNumber = 10;
  inline ::google::protobuf::int32 pixel_y() const;
  inline void set_pixel_y(::google::protobuf::int32 value);
  
  // optional int32 toward = 11;
  inline bool has_toward() const;
  inline void clear_toward();
  static const int kTowardFieldNumber = 11;
  inline ::google::protobuf::int32 toward() const;
  inline void set_toward(::google::protobuf::int32 value);
  
  // optional int32 blood = 12;
  inline bool has_blood() const;
  inline void clear_blood();
  static const int kBloodFieldNumber = 12;
  inline ::google::protobuf::int32 blood() const;
  inline void set_blood(::google::protobuf::int32 value);
  
  // optional int32 max_blood = 13;
  inline bool has_max_blood() const;
  inline void clear_max_blood();
  static const int kMaxBloodFieldNumber = 13;
  inline ::google::protobuf::int32 max_blood() const;
  inline void set_max_blood(::google::protobuf::int32 value);
  
  // optional int32 magic = 14;
  inline bool has_magic() const;
  inline void clear_magic();
  static const int kMagicFieldNumber = 14;
  inline ::google::protobuf::int32 magic() const;
  inline void set_magic(::google::protobuf::int32 value);
  
  // optional int32 max_magic = 15;
  inline bool has_max_magic() const;
  inline void clear_max_magic();
  static const int kMaxMagicFieldNumber = 15;
  inline ::google::protobuf::int32 max_magic() const;
  inline void set_max_magic(::google::protobuf::int32 value);
  
  // optional int32 pk_state = 16;
  inline bool has_pk_state() const;
  inline void clear_pk_state();
  static const int kPkStateFieldNumber = 16;
  inline ::google::protobuf::int32 pk_state() const;
  inline void set_pk_state(::google::protobuf::int32 value);
  
  // optional int64 experience = 17;
  inline bool has_experience() const;
  inline void clear_experience();
  static const int kExperienceFieldNumber = 17;
  inline ::google::protobuf::int64 experience() const;
  inline void set_experience(::google::protobuf::int64 value);
  
  // optional int32 speed = 18;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 18;
  inline ::google::protobuf::int32 speed() const;
  inline void set_speed(::google::protobuf::int32 value);
  
  // optional int32 vip_type = 19;
  inline bool has_vip_type() const;
  inline void clear_vip_type();
  static const int kVipTypeFieldNumber = 19;
  inline ::google::protobuf::int32 vip_type() const;
  inline void set_vip_type(::google::protobuf::int32 value);
  
  // optional int32 force = 20;
  inline bool has_force() const;
  inline void clear_force();
  static const int kForceFieldNumber = 20;
  inline ::google::protobuf::int32 force() const;
  inline void set_force(::google::protobuf::int32 value);
  
  // optional int32 team_id = 21;
  inline bool has_team_id() const;
  inline void clear_team_id();
  static const int kTeamIdFieldNumber = 21;
  inline ::google::protobuf::int32 team_id() const;
  inline void set_team_id(::google::protobuf::int32 value);
  
  // optional int32 camp_id = 22;
  inline bool has_camp_id() const;
  inline void clear_camp_id();
  static const int kCampIdFieldNumber = 22;
  inline ::google::protobuf::int32 camp_id() const;
  inline void set_camp_id(::google::protobuf::int32 value);
  
  // optional int32 permission = 23;
  inline bool has_permission() const;
  inline void clear_permission();
  static const int kPermissionFieldNumber = 23;
  inline ::google::protobuf::int32 permission() const;
  inline void set_permission(::google::protobuf::int32 value);
  
  // optional int32 space_id = 24;
  inline bool has_space_id() const;
  inline void clear_space_id();
  static const int kSpaceIdFieldNumber = 24;
  inline ::google::protobuf::int32 space_id() const;
  inline void set_space_id(::google::protobuf::int32 value);
  
  // optional string server_flag = 25;
  inline bool has_server_flag() const;
  inline void clear_server_flag();
  static const int kServerFlagFieldNumber = 25;
  inline const ::std::string& server_flag() const;
  inline void set_server_flag(const ::std::string& value);
  inline void set_server_flag(const char* value);
  inline void set_server_flag(const char* value, size_t size);
  inline ::std::string* mutable_server_flag();
  inline ::std::string* release_server_flag();
  
  // optional int32 name_color = 26;
  inline bool has_name_color() const;
  inline void clear_name_color();
  static const int kNameColorFieldNumber = 26;
  inline ::google::protobuf::int32 name_color() const;
  inline void set_name_color(::google::protobuf::int32 value);
  
  // optional int32 league_pos = 27;
  inline bool has_league_pos() const;
  inline void clear_league_pos();
  static const int kLeaguePosFieldNumber = 27;
  inline ::google::protobuf::int32 league_pos() const;
  inline void set_league_pos(::google::protobuf::int32 value);
  
  // optional int32 mw_id = 28;
  inline bool has_mw_id() const;
  inline void clear_mw_id();
  static const int kMwIdFieldNumber = 28;
  inline ::google::protobuf::int32 mw_id() const;
  inline void set_mw_id(::google::protobuf::int32 value);
  
  // optional int32 mw_rank_level = 29;
  inline bool has_mw_rank_level() const;
  inline void clear_mw_rank_level();
  static const int kMwRankLevelFieldNumber = 29;
  inline ::google::protobuf::int32 mw_rank_level() const;
  inline void set_mw_rank_level(::google::protobuf::int32 value);
  
  // optional string server_prev = 30;
  inline bool has_server_prev() const;
  inline void clear_server_prev();
  static const int kServerPrevFieldNumber = 30;
  inline const ::std::string& server_prev() const;
  inline void set_server_prev(const ::std::string& value);
  inline void set_server_prev(const char* value);
  inline void set_server_prev(const char* value, size_t size);
  inline ::std::string* mutable_server_prev();
  inline ::std::string* release_server_prev();
  
  // optional int32 server_id = 31;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 31;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);
  
  // optional int32 angry = 32;
  inline bool has_angry() const;
  inline void clear_angry();
  static const int kAngryFieldNumber = 32;
  inline ::google::protobuf::int32 angry() const;
  inline void set_angry(::google::protobuf::int32 value);
  
  // optional string full_name = 33;
  inline bool has_full_name() const;
  inline void clear_full_name();
  static const int kFullNameFieldNumber = 33;
  inline const ::std::string& full_name() const;
  inline void set_full_name(const ::std::string& value);
  inline void set_full_name(const char* value);
  inline void set_full_name(const char* value, size_t size);
  inline ::std::string* mutable_full_name();
  inline ::std::string* release_full_name();
  
  // optional int32 jump_value = 34;
  inline bool has_jump_value() const;
  inline void clear_jump_value();
  static const int kJumpValueFieldNumber = 34;
  inline ::google::protobuf::int32 jump_value() const;
  inline void set_jump_value(::google::protobuf::int32 value);
  
  // optional .ProtoRoleShape shape_info = 35;
  inline bool has_shape_info() const;
  inline void clear_shape_info();
  static const int kShapeInfoFieldNumber = 35;
  inline const ::ProtoRoleShape& shape_info() const;
  inline ::ProtoRoleShape* mutable_shape_info();
  inline ::ProtoRoleShape* release_shape_info();
  
  // optional int32 main_act = 36;
  inline bool has_main_act() const;
  inline void clear_main_act();
  static const int kMainActFieldNumber = 36;
  inline ::google::protobuf::int32 main_act() const;
  inline void set_main_act(::google::protobuf::int32 value);
  
  // optional int64 partner_id = 37;
  inline bool has_partner_id() const;
  inline void clear_partner_id();
  static const int kPartnerIdFieldNumber = 37;
  inline ::google::protobuf::int64 partner_id() const;
  inline void set_partner_id(::google::protobuf::int64 value);
  
  // optional string partner_name = 38;
  inline bool has_partner_name() const;
  inline void clear_partner_name();
  static const int kPartnerNameFieldNumber = 38;
  inline const ::std::string& partner_name() const;
  inline void set_partner_name(const ::std::string& value);
  inline void set_partner_name(const char* value);
  inline void set_partner_name(const char* value, size_t size);
  inline ::std::string* mutable_partner_name();
  inline ::std::string* release_partner_name();
  
  // optional int64 wedding_id = 39;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 39;
  inline ::google::protobuf::int64 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int64 value);
  
  // optional int32 wedding_type = 40;
  inline bool has_wedding_type() const;
  inline void clear_wedding_type();
  static const int kWeddingTypeFieldNumber = 40;
  inline ::google::protobuf::int32 wedding_type() const;
  inline void set_wedding_type(::google::protobuf::int32 value);
  
  // optional int32 open_days = 41;
  inline bool has_open_days() const;
  inline void clear_open_days();
  static const int kOpenDaysFieldNumber = 41;
  inline ::google::protobuf::int32 open_days() const;
  inline void set_open_days(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto80400101)
 private:
  inline void set_has_chat_scene();
  inline void clear_has_chat_scene();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_league_name();
  inline void clear_has_league_name();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_pixel_x();
  inline void clear_has_pixel_x();
  inline void set_has_pixel_y();
  inline void clear_has_pixel_y();
  inline void set_has_toward();
  inline void clear_has_toward();
  inline void set_has_blood();
  inline void clear_has_blood();
  inline void set_has_max_blood();
  inline void clear_has_max_blood();
  inline void set_has_magic();
  inline void clear_has_magic();
  inline void set_has_max_magic();
  inline void clear_has_max_magic();
  inline void set_has_pk_state();
  inline void clear_has_pk_state();
  inline void set_has_experience();
  inline void clear_has_experience();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_vip_type();
  inline void clear_has_vip_type();
  inline void set_has_force();
  inline void clear_has_force();
  inline void set_has_team_id();
  inline void clear_has_team_id();
  inline void set_has_camp_id();
  inline void clear_has_camp_id();
  inline void set_has_permission();
  inline void clear_has_permission();
  inline void set_has_space_id();
  inline void clear_has_space_id();
  inline void set_has_server_flag();
  inline void clear_has_server_flag();
  inline void set_has_name_color();
  inline void clear_has_name_color();
  inline void set_has_league_pos();
  inline void clear_has_league_pos();
  inline void set_has_mw_id();
  inline void clear_has_mw_id();
  inline void set_has_mw_rank_level();
  inline void clear_has_mw_rank_level();
  inline void set_has_server_prev();
  inline void clear_has_server_prev();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_angry();
  inline void clear_has_angry();
  inline void set_has_full_name();
  inline void clear_has_full_name();
  inline void set_has_jump_value();
  inline void clear_has_jump_value();
  inline void set_has_shape_info();
  inline void clear_has_shape_info();
  inline void set_has_main_act();
  inline void clear_has_main_act();
  inline void set_has_partner_id();
  inline void clear_has_partner_id();
  inline void set_has_partner_name();
  inline void clear_has_partner_name();
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();
  inline void set_has_wedding_type();
  inline void clear_has_wedding_type();
  inline void set_has_open_days();
  inline void clear_has_open_days();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 role_id_;
  ::google::protobuf::int32 chat_scene_;
  ::google::protobuf::int32 level_;
  ::std::string* name_;
  ::google::protobuf::int64 league_id_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 scene_id_;
  ::std::string* league_name_;
  ::google::protobuf::int32 pixel_x_;
  ::google::protobuf::int32 pixel_y_;
  ::google::protobuf::int32 toward_;
  ::google::protobuf::int32 blood_;
  ::google::protobuf::int32 max_blood_;
  ::google::protobuf::int32 magic_;
  ::google::protobuf::int32 max_magic_;
  ::google::protobuf::int32 pk_state_;
  ::google::protobuf::int64 experience_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 vip_type_;
  ::google::protobuf::int32 force_;
  ::google::protobuf::int32 team_id_;
  ::google::protobuf::int32 camp_id_;
  ::google::protobuf::int32 permission_;
  ::google::protobuf::int32 space_id_;
  ::google::protobuf::int32 name_color_;
  ::std::string* server_flag_;
  ::google::protobuf::int32 league_pos_;
  ::google::protobuf::int32 mw_id_;
  ::std::string* server_prev_;
  ::google::protobuf::int32 mw_rank_level_;
  ::google::protobuf::int32 server_id_;
  ::std::string* full_name_;
  ::google::protobuf::int32 angry_;
  ::google::protobuf::int32 jump_value_;
  ::ProtoRoleShape* shape_info_;
  ::google::protobuf::int64 partner_id_;
  ::std::string* partner_name_;
  ::google::protobuf::int32 main_act_;
  ::google::protobuf::int32 wedding_type_;
  ::google::protobuf::int64 wedding_id_;
  ::google::protobuf::int32 open_days_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(41 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto80400101* default_instance_;
};
// -------------------------------------------------------------------

class Proto10400001 : public ::google::protobuf::Message {
 public:
  Proto10400001();
  virtual ~Proto10400001();
  
  Proto10400001(const Proto10400001& from);
  
  inline Proto10400001& operator=(const Proto10400001& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto10400001& default_instance();
  
  void Swap(Proto10400001* other);
  
  // implements Message ----------------------------------------------
  
  Proto10400001* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto10400001& from);
  void MergeFrom(const Proto10400001& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int64 role_id() const;
  inline void set_role_id(::google::protobuf::int64 value);
  
  // optional string account = 2;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 2;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  
  // optional string session = 3;
  inline bool has_session() const;
  inline void clear_session();
  static const int kSessionFieldNumber = 3;
  inline const ::std::string& session() const;
  inline void set_session(const ::std::string& value);
  inline void set_session(const char* value);
  inline void set_session(const char* value, size_t size);
  inline ::std::string* mutable_session();
  inline ::std::string* release_session();
  
  // @@protoc_insertion_point(class_scope:Proto10400001)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_session();
  inline void clear_has_session();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 role_id_;
  ::std::string* account_;
  ::std::string* session_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto10400001* default_instance_;
};
// -------------------------------------------------------------------

class Proto80400102 : public ::google::protobuf::Message {
 public:
  Proto80400102();
  virtual ~Proto80400102();
  
  Proto80400102(const Proto80400102& from);
  
  inline Proto80400102& operator=(const Proto80400102& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto80400102& default_instance();
  
  void Swap(Proto80400102* other);
  
  // implements Message ----------------------------------------------
  
  Proto80400102* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto80400102& from);
  void MergeFrom(const Proto80400102& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int64 role_id() const;
  inline void set_role_id(::google::protobuf::int64 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 sex = 4;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 4;
  inline ::google::protobuf::int32 sex() const;
  inline void set_sex(::google::protobuf::int32 value);
  
  // optional int32 scene_id = 5;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 5;
  inline ::google::protobuf::int32 scene_id() const;
  inline void set_scene_id(::google::protobuf::int32 value);
  
  // optional int32 pixel_x = 6;
  inline bool has_pixel_x() const;
  inline void clear_pixel_x();
  static const int kPixelXFieldNumber = 6;
  inline ::google::protobuf::int32 pixel_x() const;
  inline void set_pixel_x(::google::protobuf::int32 value);
  
  // optional int32 pixel_y = 7;
  inline bool has_pixel_y() const;
  inline void clear_pixel_y();
  static const int kPixelYFieldNumber = 7;
  inline ::google::protobuf::int32 pixel_y() const;
  inline void set_pixel_y(::google::protobuf::int32 value);
  
  // optional int32 toward = 8;
  inline bool has_toward() const;
  inline void clear_toward();
  static const int kTowardFieldNumber = 8;
  inline ::google::protobuf::int32 toward() const;
  inline void set_toward(::google::protobuf::int32 value);
  
  // optional int32 blood = 9;
  inline bool has_blood() const;
  inline void clear_blood();
  static const int kBloodFieldNumber = 9;
  inline ::google::protobuf::int32 blood() const;
  inline void set_blood(::google::protobuf::int32 value);
  
  // optional int32 max_blood = 10;
  inline bool has_max_blood() const;
  inline void clear_max_blood();
  static const int kMaxBloodFieldNumber = 10;
  inline ::google::protobuf::int32 max_blood() const;
  inline void set_max_blood(::google::protobuf::int32 value);
  
  // optional int32 magic = 11;
  inline bool has_magic() const;
  inline void clear_magic();
  static const int kMagicFieldNumber = 11;
  inline ::google::protobuf::int32 magic() const;
  inline void set_magic(::google::protobuf::int32 value);
  
  // optional int32 max_magic = 12;
  inline bool has_max_magic() const;
  inline void clear_max_magic();
  static const int kMaxMagicFieldNumber = 12;
  inline ::google::protobuf::int32 max_magic() const;
  inline void set_max_magic(::google::protobuf::int32 value);
  
  // optional int32 pk_state = 13;
  inline bool has_pk_state() const;
  inline void clear_pk_state();
  static const int kPkStateFieldNumber = 13;
  inline ::google::protobuf::int32 pk_state() const;
  inline void set_pk_state(::google::protobuf::int32 value);
  
  // optional int32 speed = 14;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 14;
  inline ::google::protobuf::int32 speed() const;
  inline void set_speed(::google::protobuf::int32 value);
  
  // optional int32 fight_state = 15;
  inline bool has_fight_state() const;
  inline void clear_fight_state();
  static const int kFightStateFieldNumber = 15;
  inline ::google::protobuf::int32 fight_state() const;
  inline void set_fight_state(::google::protobuf::int32 value);
  
  // optional int32 mount_sort = 16;
  inline bool has_mount_sort() const;
  inline void clear_mount_sort();
  static const int kMountSortFieldNumber = 16;
  inline ::google::protobuf::int32 mount_sort() const;
  inline void set_mount_sort(::google::protobuf::int32 value);
  
  // optional int32 vip_type = 17;
  inline bool has_vip_type() const;
  inline void clear_vip_type();
  static const int kVipTypeFieldNumber = 17;
  inline ::google::protobuf::int32 vip_type() const;
  inline void set_vip_type(::google::protobuf::int32 value);
  
  // optional int32 force = 18;
  inline bool has_force() const;
  inline void clear_force();
  static const int kForceFieldNumber = 18;
  inline ::google::protobuf::int32 force() const;
  inline void set_force(::google::protobuf::int32 value);
  
  // optional int32 camp_id = 19;
  inline bool has_camp_id() const;
  inline void clear_camp_id();
  static const int kCampIdFieldNumber = 19;
  inline ::google::protobuf::int32 camp_id() const;
  inline void set_camp_id(::google::protobuf::int32 value);
  
  // optional int64 league_id = 20;
  inline bool has_league_id() const;
  inline void clear_league_id();
  static const int kLeagueIdFieldNumber = 20;
  inline ::google::protobuf::int64 league_id() const;
  inline void set_league_id(::google::protobuf::int64 value);
  
  // optional int32 is_copy = 21;
  inline bool has_is_copy() const;
  inline void clear_is_copy();
  static const int kIsCopyFieldNumber = 21;
  inline ::google::protobuf::int32 is_copy() const;
  inline void set_is_copy(::google::protobuf::int32 value);
  
  // optional int64 beast_id = 22;
  inline bool has_beast_id() const;
  inline void clear_beast_id();
  static const int kBeastIdFieldNumber = 22;
  inline ::google::protobuf::int64 beast_id() const;
  inline void set_beast_id(::google::protobuf::int64 value);
  
  // optional string league_name = 23;
  inline bool has_league_name() const;
  inline void clear_league_name();
  static const int kLeagueNameFieldNumber = 23;
  inline const ::std::string& league_name() const;
  inline void set_league_name(const ::std::string& value);
  inline void set_league_name(const char* value);
  inline void set_league_name(const char* value, size_t size);
  inline ::std::string* mutable_league_name();
  inline ::std::string* release_league_name();
  
  // optional int32 space_id = 24;
  inline bool has_space_id() const;
  inline void clear_space_id();
  static const int kSpaceIdFieldNumber = 24;
  inline ::google::protobuf::int32 space_id() const;
  inline void set_space_id(::google::protobuf::int32 value);
  
  // optional int32 name_color = 25;
  inline bool has_name_color() const;
  inline void clear_name_color();
  static const int kNameColorFieldNumber = 25;
  inline ::google::protobuf::int32 name_color() const;
  inline void set_name_color(::google::protobuf::int32 value);
  
  // optional int32 gather_state = 26;
  inline bool has_gather_state() const;
  inline void clear_gather_state();
  static const int kGatherStateFieldNumber = 26;
  inline ::google::protobuf::int32 gather_state() const;
  inline void set_gather_state(::google::protobuf::int32 value);
  
  // optional int32 mount_lvl = 27;
  inline bool has_mount_lvl() const;
  inline void clear_mount_lvl();
  static const int kMountLvlFieldNumber = 27;
  inline ::google::protobuf::int32 mount_lvl() const;
  inline void set_mount_lvl(::google::protobuf::int32 value);
  
  // optional int32 mw_id = 28;
  inline bool has_mw_id() const;
  inline void clear_mw_id();
  static const int kMwIdFieldNumber = 28;
  inline ::google::protobuf::int32 mw_id() const;
  inline void set_mw_id(::google::protobuf::int32 value);
  
  // optional int32 mw_rank_level = 29;
  inline bool has_mw_rank_level() const;
  inline void clear_mw_rank_level();
  static const int kMwRankLevelFieldNumber = 29;
  inline ::google::protobuf::int32 mw_rank_level() const;
  inline void set_mw_rank_level(::google::protobuf::int32 value);
  
  // optional int32 server_id = 30;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 30;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);
  
  // optional string server_prev = 31;
  inline bool has_server_prev() const;
  inline void clear_server_prev();
  static const int kServerPrevFieldNumber = 31;
  inline const ::std::string& server_prev() const;
  inline void set_server_prev(const ::std::string& value);
  inline void set_server_prev(const char* value);
  inline void set_server_prev(const char* value, size_t size);
  inline ::std::string* mutable_server_prev();
  inline ::std::string* release_server_prev();
  
  // optional int32 league_pos = 32;
  inline bool has_league_pos() const;
  inline void clear_league_pos();
  static const int kLeaguePosFieldNumber = 32;
  inline ::google::protobuf::int32 league_pos() const;
  inline void set_league_pos(::google::protobuf::int32 value);
  
  // optional string full_name = 33;
  inline bool has_full_name() const;
  inline void clear_full_name();
  static const int kFullNameFieldNumber = 33;
  inline const ::std::string& full_name() const;
  inline void set_full_name(const ::std::string& value);
  inline void set_full_name(const char* value);
  inline void set_full_name(const char* value, size_t size);
  inline ::std::string* mutable_full_name();
  inline ::std::string* release_full_name();
  
  // optional .ProtoRoleShape shape_info = 34;
  inline bool has_shape_info() const;
  inline void clear_shape_info();
  static const int kShapeInfoFieldNumber = 34;
  inline const ::ProtoRoleShape& shape_info() const;
  inline ::ProtoRoleShape* mutable_shape_info();
  inline ::ProtoRoleShape* release_shape_info();
  
  // optional int32 hotspring_status = 35;
  inline bool has_hotspring_status() const;
  inline void clear_hotspring_status();
  static const int kHotspringStatusFieldNumber = 35;
  inline ::google::protobuf::int32 hotspring_status() const;
  inline void set_hotspring_status(::google::protobuf::int32 value);
  
  // optional int64 partner_id = 36;
  inline bool has_partner_id() const;
  inline void clear_partner_id();
  static const int kPartnerIdFieldNumber = 36;
  inline ::google::protobuf::int64 partner_id() const;
  inline void set_partner_id(::google::protobuf::int64 value);
  
  // optional string partner_name = 37;
  inline bool has_partner_name() const;
  inline void clear_partner_name();
  static const int kPartnerNameFieldNumber = 37;
  inline const ::std::string& partner_name() const;
  inline void set_partner_name(const ::std::string& value);
  inline void set_partner_name(const char* value);
  inline void set_partner_name(const char* value, size_t size);
  inline ::std::string* mutable_partner_name();
  inline ::std::string* release_partner_name();
  
  // optional int64 wedding_id = 38;
  inline bool has_wedding_id() const;
  inline void clear_wedding_id();
  static const int kWeddingIdFieldNumber = 38;
  inline ::google::protobuf::int64 wedding_id() const;
  inline void set_wedding_id(::google::protobuf::int64 value);
  
  // optional int32 wedding_type = 39;
  inline bool has_wedding_type() const;
  inline void clear_wedding_type();
  static const int kWeddingTypeFieldNumber = 39;
  inline ::google::protobuf::int32 wedding_type() const;
  inline void set_wedding_type(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto80400102)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_pixel_x();
  inline void clear_has_pixel_x();
  inline void set_has_pixel_y();
  inline void clear_has_pixel_y();
  inline void set_has_toward();
  inline void clear_has_toward();
  inline void set_has_blood();
  inline void clear_has_blood();
  inline void set_has_max_blood();
  inline void clear_has_max_blood();
  inline void set_has_magic();
  inline void clear_has_magic();
  inline void set_has_max_magic();
  inline void clear_has_max_magic();
  inline void set_has_pk_state();
  inline void clear_has_pk_state();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_fight_state();
  inline void clear_has_fight_state();
  inline void set_has_mount_sort();
  inline void clear_has_mount_sort();
  inline void set_has_vip_type();
  inline void clear_has_vip_type();
  inline void set_has_force();
  inline void clear_has_force();
  inline void set_has_camp_id();
  inline void clear_has_camp_id();
  inline void set_has_league_id();
  inline void clear_has_league_id();
  inline void set_has_is_copy();
  inline void clear_has_is_copy();
  inline void set_has_beast_id();
  inline void clear_has_beast_id();
  inline void set_has_league_name();
  inline void clear_has_league_name();
  inline void set_has_space_id();
  inline void clear_has_space_id();
  inline void set_has_name_color();
  inline void clear_has_name_color();
  inline void set_has_gather_state();
  inline void clear_has_gather_state();
  inline void set_has_mount_lvl();
  inline void clear_has_mount_lvl();
  inline void set_has_mw_id();
  inline void clear_has_mw_id();
  inline void set_has_mw_rank_level();
  inline void clear_has_mw_rank_level();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_server_prev();
  inline void clear_has_server_prev();
  inline void set_has_league_pos();
  inline void clear_has_league_pos();
  inline void set_has_full_name();
  inline void clear_has_full_name();
  inline void set_has_shape_info();
  inline void clear_has_shape_info();
  inline void set_has_hotspring_status();
  inline void clear_has_hotspring_status();
  inline void set_has_partner_id();
  inline void clear_has_partner_id();
  inline void set_has_partner_name();
  inline void clear_has_partner_name();
  inline void set_has_wedding_id();
  inline void clear_has_wedding_id();
  inline void set_has_wedding_type();
  inline void clear_has_wedding_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 role_id_;
  ::std::string* name_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 scene_id_;
  ::google::protobuf::int32 pixel_x_;
  ::google::protobuf::int32 pixel_y_;
  ::google::protobuf::int32 toward_;
  ::google::protobuf::int32 blood_;
  ::google::protobuf::int32 max_blood_;
  ::google::protobuf::int32 magic_;
  ::google::protobuf::int32 max_magic_;
  ::google::protobuf::int32 pk_state_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 fight_state_;
  ::google::protobuf::int32 mount_sort_;
  ::google::protobuf::int32 vip_type_;
  ::google::protobuf::int32 force_;
  ::google::protobuf::int32 camp_id_;
  ::google::protobuf::int32 is_copy_;
  ::google::protobuf::int64 league_id_;
  ::google::protobuf::int64 beast_id_;
  ::std::string* league_name_;
  ::google::protobuf::int32 space_id_;
  ::google::protobuf::int32 name_color_;
  ::google::protobuf::int32 gather_state_;
  ::google::protobuf::int32 mount_lvl_;
  ::google::protobuf::int32 mw_id_;
  ::google::protobuf::int32 mw_rank_level_;
  ::std::string* server_prev_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 league_pos_;
  ::std::string* full_name_;
  ::ProtoRoleShape* shape_info_;
  ::google::protobuf::int64 partner_id_;
  ::std::string* partner_name_;
  ::google::protobuf::int32 hotspring_status_;
  ::google::protobuf::int32 wedding_type_;
  ::google::protobuf::int64 wedding_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(39 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto80400102* default_instance_;
};
// -------------------------------------------------------------------

class Proto80400104 : public ::google::protobuf::Message {
 public:
  Proto80400104();
  virtual ~Proto80400104();
  
  Proto80400104(const Proto80400104& from);
  
  inline Proto80400104& operator=(const Proto80400104& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto80400104& default_instance();
  
  void Swap(Proto80400104* other);
  
  // implements Message ----------------------------------------------
  
  Proto80400104* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto80400104& from);
  void MergeFrom(const Proto80400104& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 mover_id = 1;
  inline bool has_mover_id() const;
  inline void clear_mover_id();
  static const int kMoverIdFieldNumber = 1;
  inline ::google::protobuf::int64 mover_id() const;
  inline void set_mover_id(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:Proto80400104)
 private:
  inline void set_has_mover_id();
  inline void clear_has_mover_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 mover_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto80400104* default_instance_;
};
// -------------------------------------------------------------------

class Proto10400109 : public ::google::protobuf::Message {
 public:
  Proto10400109();
  virtual ~Proto10400109();
  
  Proto10400109(const Proto10400109& from);
  
  inline Proto10400109& operator=(const Proto10400109& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto10400109& default_instance();
  
  void Swap(Proto10400109* other);
  
  // implements Message ----------------------------------------------
  
  Proto10400109* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto10400109& from);
  void MergeFrom(const Proto10400109& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoCoord step_list = 1;
  inline int step_list_size() const;
  inline void clear_step_list();
  static const int kStepListFieldNumber = 1;
  inline const ::ProtoCoord& step_list(int index) const;
  inline ::ProtoCoord* mutable_step_list(int index);
  inline ::ProtoCoord* add_step_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoCoord >&
      step_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoCoord >*
      mutable_step_list();
  
  // optional int32 toward = 2;
  inline bool has_toward() const;
  inline void clear_toward();
  static const int kTowardFieldNumber = 2;
  inline ::google::protobuf::int32 toward() const;
  inline void set_toward(::google::protobuf::int32 value);
  
  // optional int32 arrive_tick = 3;
  inline bool has_arrive_tick() const;
  inline void clear_arrive_tick();
  static const int kArriveTickFieldNumber = 3;
  inline ::google::protobuf::int32 arrive_tick() const;
  inline void set_arrive_tick(::google::protobuf::int32 value);
  
  // optional int32 scene_id = 4;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 4;
  inline ::google::protobuf::int32 scene_id() const;
  inline void set_scene_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto10400109)
 private:
  inline void set_has_toward();
  inline void clear_has_toward();
  inline void set_has_arrive_tick();
  inline void clear_has_arrive_tick();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoCoord > step_list_;
  ::google::protobuf::int32 toward_;
  ::google::protobuf::int32 arrive_tick_;
  ::google::protobuf::int32 scene_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto10400109* default_instance_;
};
// -------------------------------------------------------------------

class Proto80400105 : public ::google::protobuf::Message {
 public:
  Proto80400105();
  virtual ~Proto80400105();
  
  Proto80400105(const Proto80400105& from);
  
  inline Proto80400105& operator=(const Proto80400105& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto80400105& default_instance();
  
  void Swap(Proto80400105* other);
  
  // implements Message ----------------------------------------------
  
  Proto80400105* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto80400105& from);
  void MergeFrom(const Proto80400105& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 mover_id = 1;
  inline bool has_mover_id() const;
  inline void clear_mover_id();
  static const int kMoverIdFieldNumber = 1;
  inline ::google::protobuf::int64 mover_id() const;
  inline void set_mover_id(::google::protobuf::int64 value);
  
  // repeated .ProtoCoord step_list = 2;
  inline int step_list_size() const;
  inline void clear_step_list();
  static const int kStepListFieldNumber = 2;
  inline const ::ProtoCoord& step_list(int index) const;
  inline ::ProtoCoord* mutable_step_list(int index);
  inline ::ProtoCoord* add_step_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoCoord >&
      step_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoCoord >*
      mutable_step_list();
  
  // optional int32 toward = 3;
  inline bool has_toward() const;
  inline void clear_toward();
  static const int kTowardFieldNumber = 3;
  inline ::google::protobuf::int32 toward() const;
  inline void set_toward(::google::protobuf::int32 value);
  
  // optional int64 arrive_tick = 4;
  inline bool has_arrive_tick() const;
  inline void clear_arrive_tick();
  static const int kArriveTickFieldNumber = 4;
  inline ::google::protobuf::int64 arrive_tick() const;
  inline void set_arrive_tick(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:Proto80400105)
 private:
  inline void set_has_mover_id();
  inline void clear_has_mover_id();
  inline void set_has_toward();
  inline void clear_has_toward();
  inline void set_has_arrive_tick();
  inline void clear_has_arrive_tick();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 mover_id_;
  ::google::protobuf::RepeatedPtrField< ::ProtoCoord > step_list_;
  ::google::protobuf::int64 arrive_tick_;
  ::google::protobuf::int32 toward_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto80400105* default_instance_;
};
// -------------------------------------------------------------------

class Proto50600102 : public ::google::protobuf::Message {
 public:
  Proto50600102();
  virtual ~Proto50600102();
  
  Proto50600102(const Proto50600102& from);
  
  inline Proto50600102& operator=(const Proto50600102& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto50600102& default_instance();
  
  void Swap(Proto50600102* other);
  
  // implements Message ----------------------------------------------
  
  Proto50600102* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto50600102& from);
  void MergeFrom(const Proto50600102& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 test = 1;
  inline bool has_test() const;
  inline void clear_test();
  static const int kTestFieldNumber = 1;
  inline ::google::protobuf::int32 test() const;
  inline void set_test(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto50600102)
 private:
  inline void set_has_test();
  inline void clear_has_test();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 test_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto50600102* default_instance_;
};
// -------------------------------------------------------------------

class Proto10400110 : public ::google::protobuf::Message {
 public:
  Proto10400110();
  virtual ~Proto10400110();
  
  Proto10400110(const Proto10400110& from);
  
  inline Proto10400110& operator=(const Proto10400110& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto10400110& default_instance();
  
  void Swap(Proto10400110* other);
  
  // implements Message ----------------------------------------------
  
  Proto10400110* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto10400110& from);
  void MergeFrom(const Proto10400110& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 scene_id = 1;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::int32 scene_id() const;
  inline void set_scene_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto10400110)
 private:
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 scene_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto10400110* default_instance_;
};
// -------------------------------------------------------------------

class Proto11499999 : public ::google::protobuf::Message {
 public:
  Proto11499999();
  virtual ~Proto11499999();
  
  Proto11499999(const Proto11499999& from);
  
  inline Proto11499999& operator=(const Proto11499999& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto11499999& default_instance();
  
  void Swap(Proto11499999* other);
  
  // implements Message ----------------------------------------------
  
  Proto11499999* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto11499999& from);
  void MergeFrom(const Proto11499999& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string cmd_name = 1;
  inline bool has_cmd_name() const;
  inline void clear_cmd_name();
  static const int kCmdNameFieldNumber = 1;
  inline const ::std::string& cmd_name() const;
  inline void set_cmd_name(const ::std::string& value);
  inline void set_cmd_name(const char* value);
  inline void set_cmd_name(const char* value, size_t size);
  inline ::std::string* mutable_cmd_name();
  inline ::std::string* release_cmd_name();
  
  // optional int32 param1 = 2;
  inline bool has_param1() const;
  inline void clear_param1();
  static const int kParam1FieldNumber = 2;
  inline ::google::protobuf::int32 param1() const;
  inline void set_param1(::google::protobuf::int32 value);
  
  // optional int32 param2 = 3;
  inline bool has_param2() const;
  inline void clear_param2();
  static const int kParam2FieldNumber = 3;
  inline ::google::protobuf::int32 param2() const;
  inline void set_param2(::google::protobuf::int32 value);
  
  // optional int32 param3 = 4;
  inline bool has_param3() const;
  inline void clear_param3();
  static const int kParam3FieldNumber = 4;
  inline ::google::protobuf::int32 param3() const;
  inline void set_param3(::google::protobuf::int32 value);
  
  // optional int32 param4 = 5;
  inline bool has_param4() const;
  inline void clear_param4();
  static const int kParam4FieldNumber = 5;
  inline ::google::protobuf::int32 param4() const;
  inline void set_param4(::google::protobuf::int32 value);
  
  // optional int32 param5 = 6;
  inline bool has_param5() const;
  inline void clear_param5();
  static const int kParam5FieldNumber = 6;
  inline ::google::protobuf::int32 param5() const;
  inline void set_param5(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto11499999)
 private:
  inline void set_has_cmd_name();
  inline void clear_has_cmd_name();
  inline void set_has_param1();
  inline void clear_has_param1();
  inline void set_has_param2();
  inline void clear_has_param2();
  inline void set_has_param3();
  inline void clear_has_param3();
  inline void set_has_param4();
  inline void clear_has_param4();
  inline void set_has_param5();
  inline void clear_has_param5();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* cmd_name_;
  ::google::protobuf::int32 param1_;
  ::google::protobuf::int32 param2_;
  ::google::protobuf::int32 param3_;
  ::google::protobuf::int32 param4_;
  ::google::protobuf::int32 param5_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto11499999* default_instance_;
};
// -------------------------------------------------------------------

class Proto10200001 : public ::google::protobuf::Message {
 public:
  Proto10200001();
  virtual ~Proto10200001();
  
  Proto10200001(const Proto10200001& from);
  
  inline Proto10200001& operator=(const Proto10200001& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto10200001& default_instance();
  
  void Swap(Proto10200001* other);
  
  // implements Message ----------------------------------------------
  
  Proto10200001* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto10200001& from);
  void MergeFrom(const Proto10200001& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int64 role_id() const;
  inline void set_role_id(::google::protobuf::int64 value);
  
  // optional string account = 2;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 2;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  
  // optional string session = 3;
  inline bool has_session() const;
  inline void clear_session();
  static const int kSessionFieldNumber = 3;
  inline const ::std::string& session() const;
  inline void set_session(const ::std::string& value);
  inline void set_session(const char* value);
  inline void set_session(const char* value, size_t size);
  inline ::std::string* mutable_session();
  inline ::std::string* release_session();
  
  // @@protoc_insertion_point(class_scope:Proto10200001)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_session();
  inline void clear_has_session();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 role_id_;
  ::std::string* account_;
  ::std::string* session_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto10200001* default_instance_;
};
// -------------------------------------------------------------------

class Proto10200002 : public ::google::protobuf::Message {
 public:
  Proto10200002();
  virtual ~Proto10200002();
  
  Proto10200002(const Proto10200002& from);
  
  inline Proto10200002& operator=(const Proto10200002& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto10200002& default_instance();
  
  void Swap(Proto10200002* other);
  
  // implements Message ----------------------------------------------
  
  Proto10200002* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto10200002& from);
  void MergeFrom(const Proto10200002& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 channel = 1;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 1;
  inline ::google::protobuf::int32 channel() const;
  inline void set_channel(::google::protobuf::int32 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 voice_len = 3;
  inline bool has_voice_len() const;
  inline void clear_voice_len();
  static const int kVoiceLenFieldNumber = 3;
  inline ::google::protobuf::int32 voice_len() const;
  inline void set_voice_len(::google::protobuf::int32 value);
  
  // optional string wcontent = 4;
  inline bool has_wcontent() const;
  inline void clear_wcontent();
  static const int kWcontentFieldNumber = 4;
  inline const ::std::string& wcontent() const;
  inline void set_wcontent(const ::std::string& value);
  inline void set_wcontent(const char* value);
  inline void set_wcontent(const char* value, size_t size);
  inline ::std::string* mutable_wcontent();
  inline ::std::string* release_wcontent();
  
  // optional bytes vcontent = 5;
  inline bool has_vcontent() const;
  inline void clear_vcontent();
  static const int kVcontentFieldNumber = 5;
  inline const ::std::string& vcontent() const;
  inline void set_vcontent(const ::std::string& value);
  inline void set_vcontent(const char* value);
  inline void set_vcontent(const void* value, size_t size);
  inline ::std::string* mutable_vcontent();
  inline ::std::string* release_vcontent();
  
  // @@protoc_insertion_point(class_scope:Proto10200002)
 private:
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_voice_len();
  inline void clear_has_voice_len();
  inline void set_has_wcontent();
  inline void clear_has_wcontent();
  inline void set_has_vcontent();
  inline void clear_has_vcontent();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int32 type_;
  ::std::string* wcontent_;
  ::std::string* vcontent_;
  ::google::protobuf::int32 voice_len_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto10200002* default_instance_;
};
// -------------------------------------------------------------------

class Proto10200003 : public ::google::protobuf::Message {
 public:
  Proto10200003();
  virtual ~Proto10200003();
  
  Proto10200003(const Proto10200003& from);
  
  inline Proto10200003& operator=(const Proto10200003& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto10200003& default_instance();
  
  void Swap(Proto10200003* other);
  
  // implements Message ----------------------------------------------
  
  Proto10200003* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto10200003& from);
  void MergeFrom(const Proto10200003& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 dst_role_id = 1;
  inline bool has_dst_role_id() const;
  inline void clear_dst_role_id();
  static const int kDstRoleIdFieldNumber = 1;
  inline ::google::protobuf::int64 dst_role_id() const;
  inline void set_dst_role_id(::google::protobuf::int64 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 voice_len = 3;
  inline bool has_voice_len() const;
  inline void clear_voice_len();
  static const int kVoiceLenFieldNumber = 3;
  inline ::google::protobuf::int32 voice_len() const;
  inline void set_voice_len(::google::protobuf::int32 value);
  
  // optional string wcontent = 4;
  inline bool has_wcontent() const;
  inline void clear_wcontent();
  static const int kWcontentFieldNumber = 4;
  inline const ::std::string& wcontent() const;
  inline void set_wcontent(const ::std::string& value);
  inline void set_wcontent(const char* value);
  inline void set_wcontent(const char* value, size_t size);
  inline ::std::string* mutable_wcontent();
  inline ::std::string* release_wcontent();
  
  // optional bytes vcontent = 5;
  inline bool has_vcontent() const;
  inline void clear_vcontent();
  static const int kVcontentFieldNumber = 5;
  inline const ::std::string& vcontent() const;
  inline void set_vcontent(const ::std::string& value);
  inline void set_vcontent(const char* value);
  inline void set_vcontent(const void* value, size_t size);
  inline ::std::string* mutable_vcontent();
  inline ::std::string* release_vcontent();
  
  // @@protoc_insertion_point(class_scope:Proto10200003)
 private:
  inline void set_has_dst_role_id();
  inline void clear_has_dst_role_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_voice_len();
  inline void clear_has_voice_len();
  inline void set_has_wcontent();
  inline void clear_has_wcontent();
  inline void set_has_vcontent();
  inline void clear_has_vcontent();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 dst_role_id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 voice_len_;
  ::std::string* wcontent_;
  ::std::string* vcontent_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto10200003* default_instance_;
};
// -------------------------------------------------------------------

class Proto10200004 : public ::google::protobuf::Message {
 public:
  Proto10200004();
  virtual ~Proto10200004();
  
  Proto10200004(const Proto10200004& from);
  
  inline Proto10200004& operator=(const Proto10200004& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto10200004& default_instance();
  
  void Swap(Proto10200004* other);
  
  // implements Message ----------------------------------------------
  
  Proto10200004* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto10200004& from);
  void MergeFrom(const Proto10200004& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 time_offset = 1;
  inline bool has_time_offset() const;
  inline void clear_time_offset();
  static const int kTimeOffsetFieldNumber = 1;
  inline ::google::protobuf::int32 time_offset() const;
  inline void set_time_offset(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto10200004)
 private:
  inline void set_has_time_offset();
  inline void clear_has_time_offset();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 time_offset_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto10200004* default_instance_;
};
// -------------------------------------------------------------------

class Proto11400002 : public ::google::protobuf::Message {
 public:
  Proto11400002();
  virtual ~Proto11400002();
  
  Proto11400002(const Proto11400002& from);
  
  inline Proto11400002& operator=(const Proto11400002& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto11400002& default_instance();
  
  void Swap(Proto11400002* other);
  
  // implements Message ----------------------------------------------
  
  Proto11400002* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto11400002& from);
  void MergeFrom(const Proto11400002& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 pack_type = 1;
  inline bool has_pack_type() const;
  inline void clear_pack_type();
  static const int kPackTypeFieldNumber = 1;
  inline ::google::protobuf::int32 pack_type() const;
  inline void set_pack_type(::google::protobuf::int32 value);
  
  // optional int32 goods_id = 2;
  inline bool has_goods_id() const;
  inline void clear_goods_id();
  static const int kGoodsIdFieldNumber = 2;
  inline ::google::protobuf::int32 goods_id() const;
  inline void set_goods_id(::google::protobuf::int32 value);
  
  // optional int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // optional int32 channel = 4;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 4;
  inline ::google::protobuf::int32 channel() const;
  inline void set_channel(::google::protobuf::int32 value);
  
  // optional int32 type = 5;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 5;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int64 roleID = 6;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 6;
  inline ::google::protobuf::int64 roleid() const;
  inline void set_roleid(::google::protobuf::int64 value);
  
  // optional int64 pet_id = 7;
  inline bool has_pet_id() const;
  inline void clear_pet_id();
  static const int kPetIdFieldNumber = 7;
  inline ::google::protobuf::int64 pet_id() const;
  inline void set_pet_id(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:Proto11400002)
 private:
  inline void set_has_pack_type();
  inline void clear_has_pack_type();
  inline void set_has_goods_id();
  inline void clear_has_goods_id();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_pet_id();
  inline void clear_has_pet_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 pack_type_;
  ::google::protobuf::int32 goods_id_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 channel_;
  ::google::protobuf::int64 roleid_;
  ::google::protobuf::int64 pet_id_;
  ::google::protobuf::int32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto11400002* default_instance_;
};
// -------------------------------------------------------------------

class Proto11400001 : public ::google::protobuf::Message {
 public:
  Proto11400001();
  virtual ~Proto11400001();
  
  Proto11400001(const Proto11400001& from);
  
  inline Proto11400001& operator=(const Proto11400001& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto11400001& default_instance();
  
  void Swap(Proto11400001* other);
  
  // implements Message ----------------------------------------------
  
  Proto11400001* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto11400001& from);
  void MergeFrom(const Proto11400001& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string content = 1;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // @@protoc_insertion_point(class_scope:Proto11400001)
 private:
  inline void set_has_content();
  inline void clear_has_content();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto11400001* default_instance_;
};
// -------------------------------------------------------------------

class Proto50200004 : public ::google::protobuf::Message {
 public:
  Proto50200004();
  virtual ~Proto50200004();
  
  Proto50200004(const Proto50200004& from);
  
  inline Proto50200004& operator=(const Proto50200004& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto50200004& default_instance();
  
  void Swap(Proto50200004* other);
  
  // implements Message ----------------------------------------------
  
  Proto50200004* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto50200004& from);
  void MergeFrom(const Proto50200004& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoChatInfo content = 1;
  inline int content_size() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::ProtoChatInfo& content(int index) const;
  inline ::ProtoChatInfo* mutable_content(int index);
  inline ::ProtoChatInfo* add_content();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >&
      content() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >*
      mutable_content();
  
  // @@protoc_insertion_point(class_scope:Proto50200004)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo > content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto50200004* default_instance_;
};
// -------------------------------------------------------------------

class Proto80200001 : public ::google::protobuf::Message {
 public:
  Proto80200001();
  virtual ~Proto80200001();
  
  Proto80200001(const Proto80200001& from);
  
  inline Proto80200001& operator=(const Proto80200001& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto80200001& default_instance();
  
  void Swap(Proto80200001* other);
  
  // implements Message ----------------------------------------------
  
  Proto80200001* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto80200001& from);
  void MergeFrom(const Proto80200001& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoChatInfo content = 1;
  inline int content_size() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::ProtoChatInfo& content(int index) const;
  inline ::ProtoChatInfo* mutable_content(int index);
  inline ::ProtoChatInfo* add_content();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >&
      content() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >*
      mutable_content();
  
  // @@protoc_insertion_point(class_scope:Proto80200001)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo > content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto80200001* default_instance_;
};
// -------------------------------------------------------------------

class Proto80200002 : public ::google::protobuf::Message {
 public:
  Proto80200002();
  virtual ~Proto80200002();
  
  Proto80200002(const Proto80200002& from);
  
  inline Proto80200002& operator=(const Proto80200002& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto80200002& default_instance();
  
  void Swap(Proto80200002* other);
  
  // implements Message ----------------------------------------------
  
  Proto80200002* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto80200002& from);
  void MergeFrom(const Proto80200002& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoChatInfo content = 1;
  inline int content_size() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::ProtoChatInfo& content(int index) const;
  inline ::ProtoChatInfo* mutable_content(int index);
  inline ::ProtoChatInfo* add_content();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >&
      content() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >*
      mutable_content();
  
  // @@protoc_insertion_point(class_scope:Proto80200002)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo > content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto80200002* default_instance_;
};
// -------------------------------------------------------------------

class Proto80200003 : public ::google::protobuf::Message {
 public:
  Proto80200003();
  virtual ~Proto80200003();
  
  Proto80200003(const Proto80200003& from);
  
  inline Proto80200003& operator=(const Proto80200003& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto80200003& default_instance();
  
  void Swap(Proto80200003* other);
  
  // implements Message ----------------------------------------------
  
  Proto80200003* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto80200003& from);
  void MergeFrom(const Proto80200003& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoChatInfo content = 1;
  inline int content_size() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::ProtoChatInfo& content(int index) const;
  inline ::ProtoChatInfo* mutable_content(int index);
  inline ::ProtoChatInfo* add_content();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >&
      content() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >*
      mutable_content();
  
  // @@protoc_insertion_point(class_scope:Proto80200003)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo > content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto80200003* default_instance_;
};
// -------------------------------------------------------------------

class Proto10200005 : public ::google::protobuf::Message {
 public:
  Proto10200005();
  virtual ~Proto10200005();
  
  Proto10200005(const Proto10200005& from);
  
  inline Proto10200005& operator=(const Proto10200005& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto10200005& default_instance();
  
  void Swap(Proto10200005* other);
  
  // implements Message ----------------------------------------------
  
  Proto10200005* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto10200005& from);
  void MergeFrom(const Proto10200005& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 peer_role_id = 1;
  inline bool has_peer_role_id() const;
  inline void clear_peer_role_id();
  static const int kPeerRoleIdFieldNumber = 1;
  inline ::google::protobuf::int64 peer_role_id() const;
  inline void set_peer_role_id(::google::protobuf::int64 value);
  
  // optional int32 time_offset = 2;
  inline bool has_time_offset() const;
  inline void clear_time_offset();
  static const int kTimeOffsetFieldNumber = 2;
  inline ::google::protobuf::int32 time_offset() const;
  inline void set_time_offset(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto10200005)
 private:
  inline void set_has_peer_role_id();
  inline void clear_has_peer_role_id();
  inline void set_has_time_offset();
  inline void clear_has_time_offset();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 peer_role_id_;
  ::google::protobuf::int32 time_offset_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto10200005* default_instance_;
};
// -------------------------------------------------------------------

class Proto50200005 : public ::google::protobuf::Message {
 public:
  Proto50200005();
  virtual ~Proto50200005();
  
  Proto50200005(const Proto50200005& from);
  
  inline Proto50200005& operator=(const Proto50200005& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto50200005& default_instance();
  
  void Swap(Proto50200005* other);
  
  // implements Message ----------------------------------------------
  
  Proto50200005* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto50200005& from);
  void MergeFrom(const Proto50200005& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoChatInfo content = 1;
  inline int content_size() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::ProtoChatInfo& content(int index) const;
  inline ::ProtoChatInfo* mutable_content(int index);
  inline ::ProtoChatInfo* add_content();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >&
      content() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >*
      mutable_content();
  
  // @@protoc_insertion_point(class_scope:Proto50200005)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo > content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto50200005* default_instance_;
};
// -------------------------------------------------------------------

class Proto10200006 : public ::google::protobuf::Message {
 public:
  Proto10200006();
  virtual ~Proto10200006();
  
  Proto10200006(const Proto10200006& from);
  
  inline Proto10200006& operator=(const Proto10200006& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto10200006& default_instance();
  
  void Swap(Proto10200006* other);
  
  // implements Message ----------------------------------------------
  
  Proto10200006* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto10200006& from);
  void MergeFrom(const Proto10200006& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 channel = 1;
  inline bool has_channel() const;
  inline void clear_channel();
  static const int kChannelFieldNumber = 1;
  inline ::google::protobuf::int32 channel() const;
  inline void set_channel(::google::protobuf::int32 value);
  
  // optional int64 voice_id = 2;
  inline bool has_voice_id() const;
  inline void clear_voice_id();
  static const int kVoiceIdFieldNumber = 2;
  inline ::google::protobuf::int64 voice_id() const;
  inline void set_voice_id(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:Proto10200006)
 private:
  inline void set_has_channel();
  inline void clear_has_channel();
  inline void set_has_voice_id();
  inline void clear_has_voice_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 voice_id_;
  ::google::protobuf::int32 channel_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto10200006* default_instance_;
};
// -------------------------------------------------------------------

class Proto50200006 : public ::google::protobuf::Message {
 public:
  Proto50200006();
  virtual ~Proto50200006();
  
  Proto50200006(const Proto50200006& from);
  
  inline Proto50200006& operator=(const Proto50200006& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto50200006& default_instance();
  
  void Swap(Proto50200006* other);
  
  // implements Message ----------------------------------------------
  
  Proto50200006* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto50200006& from);
  void MergeFrom(const Proto50200006& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 voice_id = 1;
  inline bool has_voice_id() const;
  inline void clear_voice_id();
  static const int kVoiceIdFieldNumber = 1;
  inline ::google::protobuf::int64 voice_id() const;
  inline void set_voice_id(::google::protobuf::int64 value);
  
  // optional bytes content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const void* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // optional int32 voice_length = 3;
  inline bool has_voice_length() const;
  inline void clear_voice_length();
  static const int kVoiceLengthFieldNumber = 3;
  inline ::google::protobuf::int32 voice_length() const;
  inline void set_voice_length(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto50200006)
 private:
  inline void set_has_voice_id();
  inline void clear_has_voice_id();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_voice_length();
  inline void clear_has_voice_length();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 voice_id_;
  ::std::string* content_;
  ::google::protobuf::int32 voice_length_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto50200006* default_instance_;
};
// -------------------------------------------------------------------

class Proto11400101 : public ::google::protobuf::Message {
 public:
  Proto11400101();
  virtual ~Proto11400101();
  
  Proto11400101(const Proto11400101& from);
  
  inline Proto11400101& operator=(const Proto11400101& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto11400101& default_instance();
  
  void Swap(Proto11400101* other);
  
  // implements Message ----------------------------------------------
  
  Proto11400101* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto11400101& from);
  void MergeFrom(const Proto11400101& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 pack_type = 1;
  inline bool has_pack_type() const;
  inline void clear_pack_type();
  static const int kPackTypeFieldNumber = 1;
  inline ::google::protobuf::int32 pack_type() const;
  inline void set_pack_type(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto11400101)
 private:
  inline void set_has_pack_type();
  inline void clear_has_pack_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 pack_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto11400101* default_instance_;
};
// -------------------------------------------------------------------

class Proto11400102 : public ::google::protobuf::Message {
 public:
  Proto11400102();
  virtual ~Proto11400102();
  
  Proto11400102(const Proto11400102& from);
  
  inline Proto11400102& operator=(const Proto11400102& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto11400102& default_instance();
  
  void Swap(Proto11400102* other);
  
  // implements Message ----------------------------------------------
  
  Proto11400102* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto11400102& from);
  void MergeFrom(const Proto11400102& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 pack_type = 1;
  inline bool has_pack_type() const;
  inline void clear_pack_type();
  static const int kPackTypeFieldNumber = 1;
  inline ::google::protobuf::int32 pack_type() const;
  inline void set_pack_type(::google::protobuf::int32 value);
  
  // optional int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto11400102)
 private:
  inline void set_has_pack_type();
  inline void clear_has_pack_type();
  inline void set_has_index();
  inline void clear_has_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 pack_type_;
  ::google::protobuf::int32 index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto11400102* default_instance_;
};
// -------------------------------------------------------------------

class Proto11400103 : public ::google::protobuf::Message {
 public:
  Proto11400103();
  virtual ~Proto11400103();
  
  Proto11400103(const Proto11400103& from);
  
  inline Proto11400103& operator=(const Proto11400103& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto11400103& default_instance();
  
  void Swap(Proto11400103* other);
  
  // implements Message ----------------------------------------------
  
  Proto11400103* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto11400103& from);
  void MergeFrom(const Proto11400103& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 pack_type = 1;
  inline bool has_pack_type() const;
  inline void clear_pack_type();
  static const int kPackTypeFieldNumber = 1;
  inline ::google::protobuf::int32 pack_type() const;
  inline void set_pack_type(::google::protobuf::int32 value);
  
  // optional int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto11400103)
 private:
  inline void set_has_pack_type();
  inline void clear_has_pack_type();
  inline void set_has_index();
  inline void clear_has_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 pack_type_;
  ::google::protobuf::int32 index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto11400103* default_instance_;
};
// -------------------------------------------------------------------

class Proto11400104 : public ::google::protobuf::Message {
 public:
  Proto11400104();
  virtual ~Proto11400104();
  
  Proto11400104(const Proto11400104& from);
  
  inline Proto11400104& operator=(const Proto11400104& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto11400104& default_instance();
  
  void Swap(Proto11400104* other);
  
  // implements Message ----------------------------------------------
  
  Proto11400104* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto11400104& from);
  void MergeFrom(const Proto11400104& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 pack_type = 1;
  inline bool has_pack_type() const;
  inline void clear_pack_type();
  static const int kPackTypeFieldNumber = 1;
  inline ::google::protobuf::int32 pack_type() const;
  inline void set_pack_type(::google::protobuf::int32 value);
  
  // optional int32 remove = 2;
  inline bool has_remove() const;
  inline void clear_remove();
  static const int kRemoveFieldNumber = 2;
  inline ::google::protobuf::int32 remove() const;
  inline void set_remove(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto11400104)
 private:
  inline void set_has_pack_type();
  inline void clear_has_pack_type();
  inline void set_has_remove();
  inline void clear_has_remove();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 pack_type_;
  ::google::protobuf::int32 remove_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto11400104* default_instance_;
};
// -------------------------------------------------------------------

class Proto11400105 : public ::google::protobuf::Message {
 public:
  Proto11400105();
  virtual ~Proto11400105();
  
  Proto11400105(const Proto11400105& from);
  
  inline Proto11400105& operator=(const Proto11400105& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto11400105& default_instance();
  
  void Swap(Proto11400105* other);
  
  // implements Message ----------------------------------------------
  
  Proto11400105* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto11400105& from);
  void MergeFrom(const Proto11400105& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 pack_type = 1;
  inline bool has_pack_type() const;
  inline void clear_pack_type();
  static const int kPackTypeFieldNumber = 1;
  inline ::google::protobuf::int32 pack_type() const;
  inline void set_pack_type(::google::protobuf::int32 value);
  
  // optional int32 index_from = 2;
  inline bool has_index_from() const;
  inline void clear_index_from();
  static const int kIndexFromFieldNumber = 2;
  inline ::google::protobuf::int32 index_from() const;
  inline void set_index_from(::google::protobuf::int32 value);
  
  // optional int32 index_to = 3;
  inline bool has_index_to() const;
  inline void clear_index_to();
  static const int kIndexToFieldNumber = 3;
  inline ::google::protobuf::int32 index_to() const;
  inline void set_index_to(::google::protobuf::int32 value);
  
  // optional int32 ignore_bind = 4;
  inline bool has_ignore_bind() const;
  inline void clear_ignore_bind();
  static const int kIgnoreBindFieldNumber = 4;
  inline ::google::protobuf::int32 ignore_bind() const;
  inline void set_ignore_bind(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto11400105)
 private:
  inline void set_has_pack_type();
  inline void clear_has_pack_type();
  inline void set_has_index_from();
  inline void clear_has_index_from();
  inline void set_has_index_to();
  inline void clear_has_index_to();
  inline void set_has_ignore_bind();
  inline void clear_has_ignore_bind();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 pack_type_;
  ::google::protobuf::int32 index_from_;
  ::google::protobuf::int32 index_to_;
  ::google::protobuf::int32 ignore_bind_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto11400105* default_instance_;
};
// -------------------------------------------------------------------

class Proto11400106 : public ::google::protobuf::Message {
 public:
  Proto11400106();
  virtual ~Proto11400106();
  
  Proto11400106(const Proto11400106& from);
  
  inline Proto11400106& operator=(const Proto11400106& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto11400106& default_instance();
  
  void Swap(Proto11400106* other);
  
  // implements Message ----------------------------------------------
  
  Proto11400106* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto11400106& from);
  void MergeFrom(const Proto11400106& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // optional int32 amount = 2;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 2;
  inline ::google::protobuf::int32 amount() const;
  inline void set_amount(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto11400106)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_amount();
  inline void clear_has_amount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 amount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto11400106* default_instance_;
};
// -------------------------------------------------------------------

class Proto11400107 : public ::google::protobuf::Message {
 public:
  Proto11400107();
  virtual ~Proto11400107();
  
  Proto11400107(const Proto11400107& from);
  
  inline Proto11400107& operator=(const Proto11400107& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto11400107& default_instance();
  
  void Swap(Proto11400107* other);
  
  // implements Message ----------------------------------------------
  
  Proto11400107* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto11400107& from);
  void MergeFrom(const Proto11400107& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 pack_type = 1;
  inline bool has_pack_type() const;
  inline void clear_pack_type();
  static const int kPackTypeFieldNumber = 1;
  inline ::google::protobuf::int32 pack_type() const;
  inline void set_pack_type(::google::protobuf::int32 value);
  
  // optional int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto11400107)
 private:
  inline void set_has_pack_type();
  inline void clear_has_pack_type();
  inline void set_has_index();
  inline void clear_has_index();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 pack_type_;
  ::google::protobuf::int32 index_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto11400107* default_instance_;
};
// -------------------------------------------------------------------

class Proto11400110 : public ::google::protobuf::Message {
 public:
  Proto11400110();
  virtual ~Proto11400110();
  
  Proto11400110(const Proto11400110& from);
  
  inline Proto11400110& operator=(const Proto11400110& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto11400110& default_instance();
  
  void Swap(Proto11400110* other);
  
  // implements Message ----------------------------------------------
  
  Proto11400110* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto11400110& from);
  void MergeFrom(const Proto11400110& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // optional int32 amount = 2;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 2;
  inline ::google::protobuf::int32 amount() const;
  inline void set_amount(::google::protobuf::int32 value);
  
  // optional int32 pack_type = 3;
  inline bool has_pack_type() const;
  inline void clear_pack_type();
  static const int kPackTypeFieldNumber = 3;
  inline ::google::protobuf::int32 pack_type() const;
  inline void set_pack_type(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto11400110)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_pack_type();
  inline void clear_has_pack_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 amount_;
  ::google::protobuf::int32 pack_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto11400110* default_instance_;
};
// -------------------------------------------------------------------

class Proto51400101 : public ::google::protobuf::Message {
 public:
  Proto51400101();
  virtual ~Proto51400101();
  
  Proto51400101(const Proto51400101& from);
  
  inline Proto51400101& operator=(const Proto51400101& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto51400101& default_instance();
  
  void Swap(Proto51400101* other);
  
  // implements Message ----------------------------------------------
  
  Proto51400101* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto51400101& from);
  void MergeFrom(const Proto51400101& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 pack_type = 1;
  inline bool has_pack_type() const;
  inline void clear_pack_type();
  static const int kPackTypeFieldNumber = 1;
  inline ::google::protobuf::int32 pack_type() const;
  inline void set_pack_type(::google::protobuf::int32 value);
  
  // optional int32 pack_size = 2;
  inline bool has_pack_size() const;
  inline void clear_pack_size();
  static const int kPackSizeFieldNumber = 2;
  inline ::google::protobuf::int32 pack_size() const;
  inline void set_pack_size(::google::protobuf::int32 value);
  
  // repeated .ProtoItem item_list = 3;
  inline int item_list_size() const;
  inline void clear_item_list();
  static const int kItemListFieldNumber = 3;
  inline const ::ProtoItem& item_list(int index) const;
  inline ::ProtoItem* mutable_item_list(int index);
  inline ::ProtoItem* add_item_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoItem >&
      item_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoItem >*
      mutable_item_list();
  
  // repeated .ProtoSuit suit_info = 4;
  inline int suit_info_size() const;
  inline void clear_suit_info();
  static const int kSuitInfoFieldNumber = 4;
  inline const ::ProtoSuit& suit_info(int index) const;
  inline ::ProtoSuit* mutable_suit_info(int index);
  inline ::ProtoSuit* add_suit_info();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoSuit >&
      suit_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoSuit >*
      mutable_suit_info();
  
  // optional .ProtoRefineSuit refine_suit = 5;
  inline bool has_refine_suit() const;
  inline void clear_refine_suit();
  static const int kRefineSuitFieldNumber = 5;
  inline const ::ProtoRefineSuit& refine_suit() const;
  inline ::ProtoRefineSuit* mutable_refine_suit();
  inline ::ProtoRefineSuit* release_refine_suit();
  
  // repeated int32 strengthen = 6;
  inline int strengthen_size() const;
  inline void clear_strengthen();
  static const int kStrengthenFieldNumber = 6;
  inline ::google::protobuf::int32 strengthen(int index) const;
  inline void set_strengthen(int index, ::google::protobuf::int32 value);
  inline void add_strengthen(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      strengthen() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_strengthen();
  
  // @@protoc_insertion_point(class_scope:Proto51400101)
 private:
  inline void set_has_pack_type();
  inline void clear_has_pack_type();
  inline void set_has_pack_size();
  inline void clear_has_pack_size();
  inline void set_has_refine_suit();
  inline void clear_has_refine_suit();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 pack_type_;
  ::google::protobuf::int32 pack_size_;
  ::google::protobuf::RepeatedPtrField< ::ProtoItem > item_list_;
  ::google::protobuf::RepeatedPtrField< ::ProtoSuit > suit_info_;
  ::ProtoRefineSuit* refine_suit_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > strengthen_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto51400101* default_instance_;
};
// -------------------------------------------------------------------

class Proto51400102 : public ::google::protobuf::Message {
 public:
  Proto51400102();
  virtual ~Proto51400102();
  
  Proto51400102(const Proto51400102& from);
  
  inline Proto51400102& operator=(const Proto51400102& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto51400102& default_instance();
  
  void Swap(Proto51400102* other);
  
  // implements Message ----------------------------------------------
  
  Proto51400102* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto51400102& from);
  void MergeFrom(const Proto51400102& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // optional int32 gold_cost = 2;
  inline bool has_gold_cost() const;
  inline void clear_gold_cost();
  static const int kGoldCostFieldNumber = 2;
  inline ::google::protobuf::int32 gold_cost() const;
  inline void set_gold_cost(::google::protobuf::int32 value);
  
  // optional int32 left_time = 3;
  inline bool has_left_time() const;
  inline void clear_left_time();
  static const int kLeftTimeFieldNumber = 3;
  inline ::google::protobuf::int32 left_time() const;
  inline void set_left_time(::google::protobuf::int32 value);
  
  // optional int32 total_time = 4;
  inline bool has_total_time() const;
  inline void clear_total_time();
  static const int kTotalTimeFieldNumber = 4;
  inline ::google::protobuf::int32 total_time() const;
  inline void set_total_time(::google::protobuf::int32 value);
  
  // optional int32 add_exp = 5;
  inline bool has_add_exp() const;
  inline void clear_add_exp();
  static const int kAddExpFieldNumber = 5;
  inline ::google::protobuf::int32 add_exp() const;
  inline void set_add_exp(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto51400102)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_gold_cost();
  inline void clear_has_gold_cost();
  inline void set_has_left_time();
  inline void clear_has_left_time();
  inline void set_has_total_time();
  inline void clear_has_total_time();
  inline void set_has_add_exp();
  inline void clear_has_add_exp();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 gold_cost_;
  ::google::protobuf::int32 left_time_;
  ::google::protobuf::int32 total_time_;
  ::google::protobuf::int32 add_exp_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto51400102* default_instance_;
};
// -------------------------------------------------------------------

class Proto51400103 : public ::google::protobuf::Message {
 public:
  Proto51400103();
  virtual ~Proto51400103();
  
  Proto51400103(const Proto51400103& from);
  
  inline Proto51400103& operator=(const Proto51400103& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto51400103& default_instance();
  
  void Swap(Proto51400103* other);
  
  // implements Message ----------------------------------------------
  
  Proto51400103* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto51400103& from);
  void MergeFrom(const Proto51400103& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 gold_cost = 1;
  inline bool has_gold_cost() const;
  inline void clear_gold_cost();
  static const int kGoldCostFieldNumber = 1;
  inline ::google::protobuf::int32 gold_cost() const;
  inline void set_gold_cost(::google::protobuf::int32 value);
  
  // optional int32 pack_size = 2;
  inline bool has_pack_size() const;
  inline void clear_pack_size();
  static const int kPackSizeFieldNumber = 2;
  inline ::google::protobuf::int32 pack_size() const;
  inline void set_pack_size(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto51400103)
 private:
  inline void set_has_gold_cost();
  inline void clear_has_gold_cost();
  inline void set_has_pack_size();
  inline void clear_has_pack_size();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 gold_cost_;
  ::google::protobuf::int32 pack_size_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto51400103* default_instance_;
};
// -------------------------------------------------------------------

class Proto51400106 : public ::google::protobuf::Message {
 public:
  Proto51400106();
  virtual ~Proto51400106();
  
  Proto51400106(const Proto51400106& from);
  
  inline Proto51400106& operator=(const Proto51400106& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto51400106& default_instance();
  
  void Swap(Proto51400106* other);
  
  // implements Message ----------------------------------------------
  
  Proto51400106* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto51400106& from);
  void MergeFrom(const Proto51400106& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 item_id = 1;
  inline bool has_item_id() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int32 item_id() const;
  inline void set_item_id(::google::protobuf::int32 value);
  
  // optional int32 tips_flag = 2;
  inline bool has_tips_flag() const;
  inline void clear_tips_flag();
  static const int kTipsFlagFieldNumber = 2;
  inline ::google::protobuf::int32 tips_flag() const;
  inline void set_tips_flag(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto51400106)
 private:
  inline void set_has_item_id();
  inline void clear_has_item_id();
  inline void set_has_tips_flag();
  inline void clear_has_tips_flag();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 item_id_;
  ::google::protobuf::int32 tips_flag_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto51400106* default_instance_;
};
// -------------------------------------------------------------------

class Proto81400102 : public ::google::protobuf::Message {
 public:
  Proto81400102();
  virtual ~Proto81400102();
  
  Proto81400102(const Proto81400102& from);
  
  inline Proto81400102& operator=(const Proto81400102& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto81400102& default_instance();
  
  void Swap(Proto81400102* other);
  
  // implements Message ----------------------------------------------
  
  Proto81400102* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto81400102& from);
  void MergeFrom(const Proto81400102& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 pack_type = 1;
  inline bool has_pack_type() const;
  inline void clear_pack_type();
  static const int kPackTypeFieldNumber = 1;
  inline ::google::protobuf::int32 pack_type() const;
  inline void set_pack_type(::google::protobuf::int32 value);
  
  // repeated .ProtoDelItem del_item_list = 2;
  inline int del_item_list_size() const;
  inline void clear_del_item_list();
  static const int kDelItemListFieldNumber = 2;
  inline const ::ProtoDelItem& del_item_list(int index) const;
  inline ::ProtoDelItem* mutable_del_item_list(int index);
  inline ::ProtoDelItem* add_del_item_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoDelItem >&
      del_item_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoDelItem >*
      mutable_del_item_list();
  
  // @@protoc_insertion_point(class_scope:Proto81400102)
 private:
  inline void set_has_pack_type();
  inline void clear_has_pack_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoDelItem > del_item_list_;
  ::google::protobuf::int32 pack_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto81400102* default_instance_;
};
// -------------------------------------------------------------------

class Proto81400101 : public ::google::protobuf::Message {
 public:
  Proto81400101();
  virtual ~Proto81400101();
  
  Proto81400101(const Proto81400101& from);
  
  inline Proto81400101& operator=(const Proto81400101& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto81400101& default_instance();
  
  void Swap(Proto81400101* other);
  
  // implements Message ----------------------------------------------
  
  Proto81400101* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto81400101& from);
  void MergeFrom(const Proto81400101& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 pack_type = 1;
  inline bool has_pack_type() const;
  inline void clear_pack_type();
  static const int kPackTypeFieldNumber = 1;
  inline ::google::protobuf::int32 pack_type() const;
  inline void set_pack_type(::google::protobuf::int32 value);
  
  // repeated .ProtoItem pack_item_list = 2;
  inline int pack_item_list_size() const;
  inline void clear_pack_item_list();
  static const int kPackItemListFieldNumber = 2;
  inline const ::ProtoItem& pack_item_list(int index) const;
  inline ::ProtoItem* mutable_pack_item_list(int index);
  inline ::ProtoItem* add_pack_item_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoItem >&
      pack_item_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoItem >*
      mutable_pack_item_list();
  
  // @@protoc_insertion_point(class_scope:Proto81400101)
 private:
  inline void set_has_pack_type();
  inline void clear_has_pack_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoItem > pack_item_list_;
  ::google::protobuf::int32 pack_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto81400101* default_instance_;
};
// -------------------------------------------------------------------

class Proto81400103 : public ::google::protobuf::Message {
 public:
  Proto81400103();
  virtual ~Proto81400103();
  
  Proto81400103(const Proto81400103& from);
  
  inline Proto81400103& operator=(const Proto81400103& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto81400103& default_instance();
  
  void Swap(Proto81400103* other);
  
  // implements Message ----------------------------------------------
  
  Proto81400103* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto81400103& from);
  void MergeFrom(const Proto81400103& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 gold = 1;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 1;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);
  
  // optional int32 bind_gold = 2;
  inline bool has_bind_gold() const;
  inline void clear_bind_gold();
  static const int kBindGoldFieldNumber = 2;
  inline ::google::protobuf::int32 bind_gold() const;
  inline void set_bind_gold(::google::protobuf::int32 value);
  
  // optional int32 copper = 3;
  inline bool has_copper() const;
  inline void clear_copper();
  static const int kCopperFieldNumber = 3;
  inline ::google::protobuf::int32 copper() const;
  inline void set_copper(::google::protobuf::int32 value);
  
  // optional int32 bind_copper = 4;
  inline bool has_bind_copper() const;
  inline void clear_bind_copper();
  static const int kBindCopperFieldNumber = 4;
  inline ::google::protobuf::int32 bind_copper() const;
  inline void set_bind_copper(::google::protobuf::int32 value);
  
  // optional int32 activity_score = 5;
  inline bool has_activity_score() const;
  inline void clear_activity_score();
  static const int kActivityScoreFieldNumber = 5;
  inline ::google::protobuf::int32 activity_score() const;
  inline void set_activity_score(::google::protobuf::int32 value);
  
  // optional int32 exploit = 6;
  inline bool has_exploit() const;
  inline void clear_exploit();
  static const int kExploitFieldNumber = 6;
  inline ::google::protobuf::int32 exploit() const;
  inline void set_exploit(::google::protobuf::int32 value);
  
  // optional int32 reputation = 7;
  inline bool has_reputation() const;
  inline void clear_reputation();
  static const int kReputationFieldNumber = 7;
  inline ::google::protobuf::int32 reputation() const;
  inline void set_reputation(::google::protobuf::int32 value);
  
  // optional int32 st_score = 8;
  inline bool has_st_score() const;
  inline void clear_st_score();
  static const int kStScoreFieldNumber = 8;
  inline ::google::protobuf::int32 st_score() const;
  inline void set_st_score(::google::protobuf::int32 value);
  
  // optional int32 reiki = 9;
  inline bool has_reiki() const;
  inline void clear_reiki();
  static const int kReikiFieldNumber = 9;
  inline ::google::protobuf::int32 reiki() const;
  inline void set_reiki(::google::protobuf::int32 value);
  
  // optional int32 honour = 10;
  inline bool has_honour() const;
  inline void clear_honour();
  static const int kHonourFieldNumber = 10;
  inline ::google::protobuf::int32 honour() const;
  inline void set_honour(::google::protobuf::int32 value);
  
  // optional int32 league_contri = 11;
  inline bool has_league_contri() const;
  inline void clear_league_contri();
  static const int kLeagueContriFieldNumber = 11;
  inline ::google::protobuf::int32 league_contri() const;
  inline void set_league_contri(::google::protobuf::int32 value);
  
  // optional int32 spirit = 12;
  inline bool has_spirit() const;
  inline void clear_spirit();
  static const int kSpiritFieldNumber = 12;
  inline ::google::protobuf::int32 spirit() const;
  inline void set_spirit(::google::protobuf::int32 value);
  
  // optional int32 practice = 13;
  inline bool has_practice() const;
  inline void clear_practice();
  static const int kPracticeFieldNumber = 13;
  inline ::google::protobuf::int32 practice() const;
  inline void set_practice(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto81400103)
 private:
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_bind_gold();
  inline void clear_has_bind_gold();
  inline void set_has_copper();
  inline void clear_has_copper();
  inline void set_has_bind_copper();
  inline void clear_has_bind_copper();
  inline void set_has_activity_score();
  inline void clear_has_activity_score();
  inline void set_has_exploit();
  inline void clear_has_exploit();
  inline void set_has_reputation();
  inline void clear_has_reputation();
  inline void set_has_st_score();
  inline void clear_has_st_score();
  inline void set_has_reiki();
  inline void clear_has_reiki();
  inline void set_has_honour();
  inline void clear_has_honour();
  inline void set_has_league_contri();
  inline void clear_has_league_contri();
  inline void set_has_spirit();
  inline void clear_has_spirit();
  inline void set_has_practice();
  inline void clear_has_practice();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 bind_gold_;
  ::google::protobuf::int32 copper_;
  ::google::protobuf::int32 bind_copper_;
  ::google::protobuf::int32 activity_score_;
  ::google::protobuf::int32 exploit_;
  ::google::protobuf::int32 reputation_;
  ::google::protobuf::int32 st_score_;
  ::google::protobuf::int32 reiki_;
  ::google::protobuf::int32 honour_;
  ::google::protobuf::int32 league_contri_;
  ::google::protobuf::int32 spirit_;
  ::google::protobuf::int32 practice_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto81400103* default_instance_;
};
// -------------------------------------------------------------------

class Proto11400326 : public ::google::protobuf::Message {
 public:
  Proto11400326();
  virtual ~Proto11400326();
  
  Proto11400326(const Proto11400326& from);
  
  inline Proto11400326& operator=(const Proto11400326& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto11400326& default_instance();
  
  void Swap(Proto11400326* other);
  
  // implements Message ----------------------------------------------
  
  Proto11400326* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto11400326& from);
  void MergeFrom(const Proto11400326& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::int32 task_id() const;
  inline void set_task_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto11400326)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto11400326* default_instance_;
};
// -------------------------------------------------------------------

class Proto11400327 : public ::google::protobuf::Message {
 public:
  Proto11400327();
  virtual ~Proto11400327();
  
  Proto11400327(const Proto11400327& from);
  
  inline Proto11400327& operator=(const Proto11400327& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto11400327& default_instance();
  
  void Swap(Proto11400327* other);
  
  // implements Message ----------------------------------------------
  
  Proto11400327* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto11400327& from);
  void MergeFrom(const Proto11400327& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::int32 task_id() const;
  inline void set_task_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto11400327)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto11400327* default_instance_;
};
// -------------------------------------------------------------------

class Proto11400328 : public ::google::protobuf::Message {
 public:
  Proto11400328();
  virtual ~Proto11400328();
  
  Proto11400328(const Proto11400328& from);
  
  inline Proto11400328& operator=(const Proto11400328& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto11400328& default_instance();
  
  void Swap(Proto11400328* other);
  
  // implements Message ----------------------------------------------
  
  Proto11400328* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto11400328& from);
  void MergeFrom(const Proto11400328& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::int32 task_id() const;
  inline void set_task_id(::google::protobuf::int32 value);
  
  // optional int32 is_double = 2;
  inline bool has_is_double() const;
  inline void clear_is_double();
  static const int kIsDoubleFieldNumber = 2;
  inline ::google::protobuf::int32 is_double() const;
  inline void set_is_double(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto11400328)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  inline void set_has_is_double();
  inline void clear_has_is_double();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 task_id_;
  ::google::protobuf::int32 is_double_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto11400328* default_instance_;
};
// -------------------------------------------------------------------

class Proto11400329 : public ::google::protobuf::Message {
 public:
  Proto11400329();
  virtual ~Proto11400329();
  
  Proto11400329(const Proto11400329& from);
  
  inline Proto11400329& operator=(const Proto11400329& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto11400329& default_instance();
  
  void Swap(Proto11400329* other);
  
  // implements Message ----------------------------------------------
  
  Proto11400329* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto11400329& from);
  void MergeFrom(const Proto11400329& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 npc_id = 1;
  inline bool has_npc_id() const;
  inline void clear_npc_id();
  static const int kNpcIdFieldNumber = 1;
  inline ::google::protobuf::int32 npc_id() const;
  inline void set_npc_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto11400329)
 private:
  inline void set_has_npc_id();
  inline void clear_has_npc_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 npc_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto11400329* default_instance_;
};
// -------------------------------------------------------------------

class Proto11400330 : public ::google::protobuf::Message {
 public:
  Proto11400330();
  virtual ~Proto11400330();
  
  Proto11400330(const Proto11400330& from);
  
  inline Proto11400330& operator=(const Proto11400330& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto11400330& default_instance();
  
  void Swap(Proto11400330* other);
  
  // implements Message ----------------------------------------------
  
  Proto11400330* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto11400330& from);
  void MergeFrom(const Proto11400330& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::int32 task_id() const;
  inline void set_task_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto11400330)
 private:
  inline void set_has_task_id();
  inline void clear_has_task_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 task_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto11400330* default_instance_;
};
// -------------------------------------------------------------------

class Proto51400325 : public ::google::protobuf::Message {
 public:
  Proto51400325();
  virtual ~Proto51400325();
  
  Proto51400325(const Proto51400325& from);
  
  inline Proto51400325& operator=(const Proto51400325& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto51400325& default_instance();
  
  void Swap(Proto51400325* other);
  
  // implements Message ----------------------------------------------
  
  Proto51400325* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto51400325& from);
  void MergeFrom(const Proto51400325& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoTaskInfo task_list = 1;
  inline int task_list_size() const;
  inline void clear_task_list();
  static const int kTaskListFieldNumber = 1;
  inline const ::ProtoTaskInfo& task_list(int index) const;
  inline ::ProtoTaskInfo* mutable_task_list(int index);
  inline ::ProtoTaskInfo* add_task_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoTaskInfo >&
      task_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoTaskInfo >*
      mutable_task_list();
  
  // repeated int32 task_finish = 2;
  inline int task_finish_size() const;
  inline void clear_task_finish();
  static const int kTaskFinishFieldNumber = 2;
  inline ::google::protobuf::int32 task_finish(int index) const;
  inline void set_task_finish(int index, ::google::protobuf::int32 value);
  inline void add_task_finish(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      task_finish() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_task_finish();
  
  // optional int32 is_finish_guide = 3;
  inline bool has_is_finish_guide() const;
  inline void clear_is_finish_guide();
  static const int kIsFinishGuideFieldNumber = 3;
  inline ::google::protobuf::int32 is_finish_guide() const;
  inline void set_is_finish_guide(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:Proto51400325)
 private:
  inline void set_has_is_finish_guide();
  inline void clear_has_is_finish_guide();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoTaskInfo > task_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > task_finish_;
  ::google::protobuf::int32 is_finish_guide_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto51400325* default_instance_;
};
// -------------------------------------------------------------------

class Proto51400329 : public ::google::protobuf::Message {
 public:
  Proto51400329();
  virtual ~Proto51400329();
  
  Proto51400329(const Proto51400329& from);
  
  inline Proto51400329& operator=(const Proto51400329& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Proto51400329& default_instance();
  
  void Swap(Proto51400329* other);
  
  // implements Message ----------------------------------------------
  
  Proto51400329* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Proto51400329& from);
  void MergeFrom(const Proto51400329& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ProtoTaskInfo task_list = 1;
  inline int task_list_size() const;
  inline void clear_task_list();
  static const int kTaskListFieldNumber = 1;
  inline const ::ProtoTaskInfo& task_list(int index) const;
  inline ::ProtoTaskInfo* mutable_task_list(int index);
  inline ::ProtoTaskInfo* add_task_list();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoTaskInfo >&
      task_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoTaskInfo >*
      mutable_task_list();
  
  // @@protoc_insertion_point(class_scope:Proto51400329)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ProtoTaskInfo > task_list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ProtoClient001_2eproto();
  friend void protobuf_AssignDesc_ProtoClient001_2eproto();
  friend void protobuf_ShutdownFile_ProtoClient001_2eproto();
  
  void InitAsDefaultInstance();
  static Proto51400329* default_instance_;
};
// ===================================================================


// ===================================================================

// Proto10700101

// optional string account = 1;
inline bool Proto10700101::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto10700101::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto10700101::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto10700101::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& Proto10700101::account() const {
  return *account_;
}
inline void Proto10700101::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto10700101::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto10700101::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10700101::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* Proto10700101::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string session = 2;
inline bool Proto10700101::has_session() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto10700101::set_has_session() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto10700101::clear_has_session() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto10700101::clear_session() {
  if (session_ != &::google::protobuf::internal::kEmptyString) {
    session_->clear();
  }
  clear_has_session();
}
inline const ::std::string& Proto10700101::session() const {
  return *session_;
}
inline void Proto10700101::set_session(const ::std::string& value) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(value);
}
inline void Proto10700101::set_session(const char* value) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(value);
}
inline void Proto10700101::set_session(const char* value, size_t size) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10700101::mutable_session() {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  return session_;
}
inline ::std::string* Proto10700101::release_session() {
  clear_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_;
    session_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string tick = 3;
inline bool Proto10700101::has_tick() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto10700101::set_has_tick() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto10700101::clear_has_tick() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto10700101::clear_tick() {
  if (tick_ != &::google::protobuf::internal::kEmptyString) {
    tick_->clear();
  }
  clear_has_tick();
}
inline const ::std::string& Proto10700101::tick() const {
  return *tick_;
}
inline void Proto10700101::set_tick(const ::std::string& value) {
  set_has_tick();
  if (tick_ == &::google::protobuf::internal::kEmptyString) {
    tick_ = new ::std::string;
  }
  tick_->assign(value);
}
inline void Proto10700101::set_tick(const char* value) {
  set_has_tick();
  if (tick_ == &::google::protobuf::internal::kEmptyString) {
    tick_ = new ::std::string;
  }
  tick_->assign(value);
}
inline void Proto10700101::set_tick(const char* value, size_t size) {
  set_has_tick();
  if (tick_ == &::google::protobuf::internal::kEmptyString) {
    tick_ = new ::std::string;
  }
  tick_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10700101::mutable_tick() {
  set_has_tick();
  if (tick_ == &::google::protobuf::internal::kEmptyString) {
    tick_ = new ::std::string;
  }
  return tick_;
}
inline ::std::string* Proto10700101::release_tick() {
  clear_has_tick();
  if (tick_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = tick_;
    tick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// Proto50700101

// optional string gate_ip = 1;
inline bool Proto50700101::has_gate_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto50700101::set_has_gate_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto50700101::clear_has_gate_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto50700101::clear_gate_ip() {
  if (gate_ip_ != &::google::protobuf::internal::kEmptyString) {
    gate_ip_->clear();
  }
  clear_has_gate_ip();
}
inline const ::std::string& Proto50700101::gate_ip() const {
  return *gate_ip_;
}
inline void Proto50700101::set_gate_ip(const ::std::string& value) {
  set_has_gate_ip();
  if (gate_ip_ == &::google::protobuf::internal::kEmptyString) {
    gate_ip_ = new ::std::string;
  }
  gate_ip_->assign(value);
}
inline void Proto50700101::set_gate_ip(const char* value) {
  set_has_gate_ip();
  if (gate_ip_ == &::google::protobuf::internal::kEmptyString) {
    gate_ip_ = new ::std::string;
  }
  gate_ip_->assign(value);
}
inline void Proto50700101::set_gate_ip(const char* value, size_t size) {
  set_has_gate_ip();
  if (gate_ip_ == &::google::protobuf::internal::kEmptyString) {
    gate_ip_ = new ::std::string;
  }
  gate_ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto50700101::mutable_gate_ip() {
  set_has_gate_ip();
  if (gate_ip_ == &::google::protobuf::internal::kEmptyString) {
    gate_ip_ = new ::std::string;
  }
  return gate_ip_;
}
inline ::std::string* Proto50700101::release_gate_ip() {
  clear_has_gate_ip();
  if (gate_ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gate_ip_;
    gate_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 gate_port = 2;
inline bool Proto50700101::has_gate_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto50700101::set_has_gate_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto50700101::clear_has_gate_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto50700101::clear_gate_port() {
  gate_port_ = 0;
  clear_has_gate_port();
}
inline ::google::protobuf::int32 Proto50700101::gate_port() const {
  return gate_port_;
}
inline void Proto50700101::set_gate_port(::google::protobuf::int32 value) {
  set_has_gate_port();
  gate_port_ = value;
}

// optional string domain = 3;
inline bool Proto50700101::has_domain() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto50700101::set_has_domain() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto50700101::clear_has_domain() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto50700101::clear_domain() {
  if (domain_ != &::google::protobuf::internal::kEmptyString) {
    domain_->clear();
  }
  clear_has_domain();
}
inline const ::std::string& Proto50700101::domain() const {
  return *domain_;
}
inline void Proto50700101::set_domain(const ::std::string& value) {
  set_has_domain();
  if (domain_ == &::google::protobuf::internal::kEmptyString) {
    domain_ = new ::std::string;
  }
  domain_->assign(value);
}
inline void Proto50700101::set_domain(const char* value) {
  set_has_domain();
  if (domain_ == &::google::protobuf::internal::kEmptyString) {
    domain_ = new ::std::string;
  }
  domain_->assign(value);
}
inline void Proto50700101::set_domain(const char* value, size_t size) {
  set_has_domain();
  if (domain_ == &::google::protobuf::internal::kEmptyString) {
    domain_ = new ::std::string;
  }
  domain_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto50700101::mutable_domain() {
  set_has_domain();
  if (domain_ == &::google::protobuf::internal::kEmptyString) {
    domain_ = new ::std::string;
  }
  return domain_;
}
inline ::std::string* Proto50700101::release_domain() {
  clear_has_domain();
  if (domain_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = domain_;
    domain_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// Proto10600101

// optional string account = 1;
inline bool Proto10600101::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto10600101::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto10600101::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto10600101::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& Proto10600101::account() const {
  return *account_;
}
inline void Proto10600101::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto10600101::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto10600101::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10600101::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* Proto10600101::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string session = 2;
inline bool Proto10600101::has_session() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto10600101::set_has_session() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto10600101::clear_has_session() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto10600101::clear_session() {
  if (session_ != &::google::protobuf::internal::kEmptyString) {
    session_->clear();
  }
  clear_has_session();
}
inline const ::std::string& Proto10600101::session() const {
  return *session_;
}
inline void Proto10600101::set_session(const ::std::string& value) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(value);
}
inline void Proto10600101::set_session(const char* value) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(value);
}
inline void Proto10600101::set_session(const char* value, size_t size) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10600101::mutable_session() {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  return session_;
}
inline ::std::string* Proto10600101::release_session() {
  clear_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_;
    session_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string tick = 3;
inline bool Proto10600101::has_tick() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto10600101::set_has_tick() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto10600101::clear_has_tick() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto10600101::clear_tick() {
  if (tick_ != &::google::protobuf::internal::kEmptyString) {
    tick_->clear();
  }
  clear_has_tick();
}
inline const ::std::string& Proto10600101::tick() const {
  return *tick_;
}
inline void Proto10600101::set_tick(const ::std::string& value) {
  set_has_tick();
  if (tick_ == &::google::protobuf::internal::kEmptyString) {
    tick_ = new ::std::string;
  }
  tick_->assign(value);
}
inline void Proto10600101::set_tick(const char* value) {
  set_has_tick();
  if (tick_ == &::google::protobuf::internal::kEmptyString) {
    tick_ = new ::std::string;
  }
  tick_->assign(value);
}
inline void Proto10600101::set_tick(const char* value, size_t size) {
  set_has_tick();
  if (tick_ == &::google::protobuf::internal::kEmptyString) {
    tick_ = new ::std::string;
  }
  tick_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10600101::mutable_tick() {
  set_has_tick();
  if (tick_ == &::google::protobuf::internal::kEmptyString) {
    tick_ = new ::std::string;
  }
  return tick_;
}
inline ::std::string* Proto10600101::release_tick() {
  clear_has_tick();
  if (tick_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = tick_;
    tick_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string agent = 4;
inline bool Proto10600101::has_agent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto10600101::set_has_agent() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto10600101::clear_has_agent() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto10600101::clear_agent() {
  if (agent_ != &::google::protobuf::internal::kEmptyString) {
    agent_->clear();
  }
  clear_has_agent();
}
inline const ::std::string& Proto10600101::agent() const {
  return *agent_;
}
inline void Proto10600101::set_agent(const ::std::string& value) {
  set_has_agent();
  if (agent_ == &::google::protobuf::internal::kEmptyString) {
    agent_ = new ::std::string;
  }
  agent_->assign(value);
}
inline void Proto10600101::set_agent(const char* value) {
  set_has_agent();
  if (agent_ == &::google::protobuf::internal::kEmptyString) {
    agent_ = new ::std::string;
  }
  agent_->assign(value);
}
inline void Proto10600101::set_agent(const char* value, size_t size) {
  set_has_agent();
  if (agent_ == &::google::protobuf::internal::kEmptyString) {
    agent_ = new ::std::string;
  }
  agent_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10600101::mutable_agent() {
  set_has_agent();
  if (agent_ == &::google::protobuf::internal::kEmptyString) {
    agent_ = new ::std::string;
  }
  return agent_;
}
inline ::std::string* Proto10600101::release_agent() {
  clear_has_agent();
  if (agent_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = agent_;
    agent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string platform = 5;
inline bool Proto10600101::has_platform() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto10600101::set_has_platform() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto10600101::clear_has_platform() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto10600101::clear_platform() {
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    platform_->clear();
  }
  clear_has_platform();
}
inline const ::std::string& Proto10600101::platform() const {
  return *platform_;
}
inline void Proto10600101::set_platform(const ::std::string& value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void Proto10600101::set_platform(const char* value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void Proto10600101::set_platform(const char* value, size_t size) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10600101::mutable_platform() {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  return platform_;
}
inline ::std::string* Proto10600101::release_platform() {
  clear_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = platform_;
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string net_type = 6;
inline bool Proto10600101::has_net_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto10600101::set_has_net_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto10600101::clear_has_net_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto10600101::clear_net_type() {
  if (net_type_ != &::google::protobuf::internal::kEmptyString) {
    net_type_->clear();
  }
  clear_has_net_type();
}
inline const ::std::string& Proto10600101::net_type() const {
  return *net_type_;
}
inline void Proto10600101::set_net_type(const ::std::string& value) {
  set_has_net_type();
  if (net_type_ == &::google::protobuf::internal::kEmptyString) {
    net_type_ = new ::std::string;
  }
  net_type_->assign(value);
}
inline void Proto10600101::set_net_type(const char* value) {
  set_has_net_type();
  if (net_type_ == &::google::protobuf::internal::kEmptyString) {
    net_type_ = new ::std::string;
  }
  net_type_->assign(value);
}
inline void Proto10600101::set_net_type(const char* value, size_t size) {
  set_has_net_type();
  if (net_type_ == &::google::protobuf::internal::kEmptyString) {
    net_type_ = new ::std::string;
  }
  net_type_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10600101::mutable_net_type() {
  set_has_net_type();
  if (net_type_ == &::google::protobuf::internal::kEmptyString) {
    net_type_ = new ::std::string;
  }
  return net_type_;
}
inline ::std::string* Proto10600101::release_net_type() {
  clear_has_net_type();
  if (net_type_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = net_type_;
    net_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string sys_version = 7;
inline bool Proto10600101::has_sys_version() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Proto10600101::set_has_sys_version() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Proto10600101::clear_has_sys_version() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Proto10600101::clear_sys_version() {
  if (sys_version_ != &::google::protobuf::internal::kEmptyString) {
    sys_version_->clear();
  }
  clear_has_sys_version();
}
inline const ::std::string& Proto10600101::sys_version() const {
  return *sys_version_;
}
inline void Proto10600101::set_sys_version(const ::std::string& value) {
  set_has_sys_version();
  if (sys_version_ == &::google::protobuf::internal::kEmptyString) {
    sys_version_ = new ::std::string;
  }
  sys_version_->assign(value);
}
inline void Proto10600101::set_sys_version(const char* value) {
  set_has_sys_version();
  if (sys_version_ == &::google::protobuf::internal::kEmptyString) {
    sys_version_ = new ::std::string;
  }
  sys_version_->assign(value);
}
inline void Proto10600101::set_sys_version(const char* value, size_t size) {
  set_has_sys_version();
  if (sys_version_ == &::google::protobuf::internal::kEmptyString) {
    sys_version_ = new ::std::string;
  }
  sys_version_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10600101::mutable_sys_version() {
  set_has_sys_version();
  if (sys_version_ == &::google::protobuf::internal::kEmptyString) {
    sys_version_ = new ::std::string;
  }
  return sys_version_;
}
inline ::std::string* Proto10600101::release_sys_version() {
  clear_has_sys_version();
  if (sys_version_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sys_version_;
    sys_version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string sys_model = 8;
inline bool Proto10600101::has_sys_model() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Proto10600101::set_has_sys_model() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Proto10600101::clear_has_sys_model() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Proto10600101::clear_sys_model() {
  if (sys_model_ != &::google::protobuf::internal::kEmptyString) {
    sys_model_->clear();
  }
  clear_has_sys_model();
}
inline const ::std::string& Proto10600101::sys_model() const {
  return *sys_model_;
}
inline void Proto10600101::set_sys_model(const ::std::string& value) {
  set_has_sys_model();
  if (sys_model_ == &::google::protobuf::internal::kEmptyString) {
    sys_model_ = new ::std::string;
  }
  sys_model_->assign(value);
}
inline void Proto10600101::set_sys_model(const char* value) {
  set_has_sys_model();
  if (sys_model_ == &::google::protobuf::internal::kEmptyString) {
    sys_model_ = new ::std::string;
  }
  sys_model_->assign(value);
}
inline void Proto10600101::set_sys_model(const char* value, size_t size) {
  set_has_sys_model();
  if (sys_model_ == &::google::protobuf::internal::kEmptyString) {
    sys_model_ = new ::std::string;
  }
  sys_model_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10600101::mutable_sys_model() {
  set_has_sys_model();
  if (sys_model_ == &::google::protobuf::internal::kEmptyString) {
    sys_model_ = new ::std::string;
  }
  return sys_model_;
}
inline ::std::string* Proto10600101::release_sys_model() {
  clear_has_sys_model();
  if (sys_model_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sys_model_;
    sys_model_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string mac = 9;
inline bool Proto10600101::has_mac() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Proto10600101::set_has_mac() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Proto10600101::clear_has_mac() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Proto10600101::clear_mac() {
  if (mac_ != &::google::protobuf::internal::kEmptyString) {
    mac_->clear();
  }
  clear_has_mac();
}
inline const ::std::string& Proto10600101::mac() const {
  return *mac_;
}
inline void Proto10600101::set_mac(const ::std::string& value) {
  set_has_mac();
  if (mac_ == &::google::protobuf::internal::kEmptyString) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void Proto10600101::set_mac(const char* value) {
  set_has_mac();
  if (mac_ == &::google::protobuf::internal::kEmptyString) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
}
inline void Proto10600101::set_mac(const char* value, size_t size) {
  set_has_mac();
  if (mac_ == &::google::protobuf::internal::kEmptyString) {
    mac_ = new ::std::string;
  }
  mac_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10600101::mutable_mac() {
  set_has_mac();
  if (mac_ == &::google::protobuf::internal::kEmptyString) {
    mac_ = new ::std::string;
  }
  return mac_;
}
inline ::std::string* Proto10600101::release_mac() {
  clear_has_mac();
  if (mac_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mac_;
    mac_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string c_sid = 10;
inline bool Proto10600101::has_c_sid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Proto10600101::set_has_c_sid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Proto10600101::clear_has_c_sid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Proto10600101::clear_c_sid() {
  if (c_sid_ != &::google::protobuf::internal::kEmptyString) {
    c_sid_->clear();
  }
  clear_has_c_sid();
}
inline const ::std::string& Proto10600101::c_sid() const {
  return *c_sid_;
}
inline void Proto10600101::set_c_sid(const ::std::string& value) {
  set_has_c_sid();
  if (c_sid_ == &::google::protobuf::internal::kEmptyString) {
    c_sid_ = new ::std::string;
  }
  c_sid_->assign(value);
}
inline void Proto10600101::set_c_sid(const char* value) {
  set_has_c_sid();
  if (c_sid_ == &::google::protobuf::internal::kEmptyString) {
    c_sid_ = new ::std::string;
  }
  c_sid_->assign(value);
}
inline void Proto10600101::set_c_sid(const char* value, size_t size) {
  set_has_c_sid();
  if (c_sid_ == &::google::protobuf::internal::kEmptyString) {
    c_sid_ = new ::std::string;
  }
  c_sid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10600101::mutable_c_sid() {
  set_has_c_sid();
  if (c_sid_ == &::google::protobuf::internal::kEmptyString) {
    c_sid_ = new ::std::string;
  }
  return c_sid_;
}
inline ::std::string* Proto10600101::release_c_sid() {
  clear_has_c_sid();
  if (c_sid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = c_sid_;
    c_sid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string server_flag = 11;
inline bool Proto10600101::has_server_flag() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Proto10600101::set_has_server_flag() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Proto10600101::clear_has_server_flag() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Proto10600101::clear_server_flag() {
  if (server_flag_ != &::google::protobuf::internal::kEmptyString) {
    server_flag_->clear();
  }
  clear_has_server_flag();
}
inline const ::std::string& Proto10600101::server_flag() const {
  return *server_flag_;
}
inline void Proto10600101::set_server_flag(const ::std::string& value) {
  set_has_server_flag();
  if (server_flag_ == &::google::protobuf::internal::kEmptyString) {
    server_flag_ = new ::std::string;
  }
  server_flag_->assign(value);
}
inline void Proto10600101::set_server_flag(const char* value) {
  set_has_server_flag();
  if (server_flag_ == &::google::protobuf::internal::kEmptyString) {
    server_flag_ = new ::std::string;
  }
  server_flag_->assign(value);
}
inline void Proto10600101::set_server_flag(const char* value, size_t size) {
  set_has_server_flag();
  if (server_flag_ == &::google::protobuf::internal::kEmptyString) {
    server_flag_ = new ::std::string;
  }
  server_flag_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10600101::mutable_server_flag() {
  set_has_server_flag();
  if (server_flag_ == &::google::protobuf::internal::kEmptyString) {
    server_flag_ = new ::std::string;
  }
  return server_flag_;
}
inline ::std::string* Proto10600101::release_server_flag() {
  clear_has_server_flag();
  if (server_flag_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = server_flag_;
    server_flag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 market = 12;
inline bool Proto10600101::has_market() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Proto10600101::set_has_market() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Proto10600101::clear_has_market() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Proto10600101::clear_market() {
  market_ = 0;
  clear_has_market();
}
inline ::google::protobuf::int32 Proto10600101::market() const {
  return market_;
}
inline void Proto10600101::set_market(::google::protobuf::int32 value) {
  set_has_market();
  market_ = value;
}

// optional string imei = 13;
inline bool Proto10600101::has_imei() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Proto10600101::set_has_imei() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Proto10600101::clear_has_imei() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Proto10600101::clear_imei() {
  if (imei_ != &::google::protobuf::internal::kEmptyString) {
    imei_->clear();
  }
  clear_has_imei();
}
inline const ::std::string& Proto10600101::imei() const {
  return *imei_;
}
inline void Proto10600101::set_imei(const ::std::string& value) {
  set_has_imei();
  if (imei_ == &::google::protobuf::internal::kEmptyString) {
    imei_ = new ::std::string;
  }
  imei_->assign(value);
}
inline void Proto10600101::set_imei(const char* value) {
  set_has_imei();
  if (imei_ == &::google::protobuf::internal::kEmptyString) {
    imei_ = new ::std::string;
  }
  imei_->assign(value);
}
inline void Proto10600101::set_imei(const char* value, size_t size) {
  set_has_imei();
  if (imei_ == &::google::protobuf::internal::kEmptyString) {
    imei_ = new ::std::string;
  }
  imei_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10600101::mutable_imei() {
  set_has_imei();
  if (imei_ == &::google::protobuf::internal::kEmptyString) {
    imei_ = new ::std::string;
  }
  return imei_;
}
inline ::std::string* Proto10600101::release_imei() {
  clear_has_imei();
  if (imei_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = imei_;
    imei_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// Proto50600101

// optional int64 role_id = 1;
inline bool Proto50600101::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto50600101::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto50600101::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto50600101::clear_role_id() {
  role_id_ = GOOGLE_LONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::int64 Proto50600101::role_id() const {
  return role_id_;
}
inline void Proto50600101::set_role_id(::google::protobuf::int64 value) {
  set_has_role_id();
  role_id_ = value;
}

// repeated .ProtoSceneAddress scene_addrs = 2;
inline int Proto50600101::scene_addrs_size() const {
  return scene_addrs_.size();
}
inline void Proto50600101::clear_scene_addrs() {
  scene_addrs_.Clear();
}
inline const ::ProtoSceneAddress& Proto50600101::scene_addrs(int index) const {
  return scene_addrs_.Get(index);
}
inline ::ProtoSceneAddress* Proto50600101::mutable_scene_addrs(int index) {
  return scene_addrs_.Mutable(index);
}
inline ::ProtoSceneAddress* Proto50600101::add_scene_addrs() {
  return scene_addrs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoSceneAddress >&
Proto50600101::scene_addrs() const {
  return scene_addrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoSceneAddress >*
Proto50600101::mutable_scene_addrs() {
  return &scene_addrs_;
}

// optional int32 ban_type = 3;
inline bool Proto50600101::has_ban_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto50600101::set_has_ban_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto50600101::clear_has_ban_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto50600101::clear_ban_type() {
  ban_type_ = 0;
  clear_has_ban_type();
}
inline ::google::protobuf::int32 Proto50600101::ban_type() const {
  return ban_type_;
}
inline void Proto50600101::set_ban_type(::google::protobuf::int32 value) {
  set_has_ban_type();
  ban_type_ = value;
}

// optional int32 expired_time = 4;
inline bool Proto50600101::has_expired_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto50600101::set_has_expired_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto50600101::clear_has_expired_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto50600101::clear_expired_time() {
  expired_time_ = 0;
  clear_has_expired_time();
}
inline ::google::protobuf::int32 Proto50600101::expired_time() const {
  return expired_time_;
}
inline void Proto50600101::set_expired_time(::google::protobuf::int32 value) {
  set_has_expired_time();
  expired_time_ = value;
}

// optional int32 left_ban_sec = 5;
inline bool Proto50600101::has_left_ban_sec() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto50600101::set_has_left_ban_sec() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto50600101::clear_has_left_ban_sec() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto50600101::clear_left_ban_sec() {
  left_ban_sec_ = 0;
  clear_has_left_ban_sec();
}
inline ::google::protobuf::int32 Proto50600101::left_ban_sec() const {
  return left_ban_sec_;
}
inline void Proto50600101::set_left_ban_sec(::google::protobuf::int32 value) {
  set_has_left_ban_sec();
  left_ban_sec_ = value;
}

// repeated .ProtoGateRole role_list = 6;
inline int Proto50600101::role_list_size() const {
  return role_list_.size();
}
inline void Proto50600101::clear_role_list() {
  role_list_.Clear();
}
inline const ::ProtoGateRole& Proto50600101::role_list(int index) const {
  return role_list_.Get(index);
}
inline ::ProtoGateRole* Proto50600101::mutable_role_list(int index) {
  return role_list_.Mutable(index);
}
inline ::ProtoGateRole* Proto50600101::add_role_list() {
  return role_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoGateRole >&
Proto50600101::role_list() const {
  return role_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoGateRole >*
Proto50600101::mutable_role_list() {
  return &role_list_;
}

// -------------------------------------------------------------------

// Proto10600102

// optional string name = 1;
inline bool Proto10600102::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto10600102::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto10600102::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto10600102::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Proto10600102::name() const {
  return *name_;
}
inline void Proto10600102::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Proto10600102::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Proto10600102::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10600102::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Proto10600102::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 sex = 2;
inline bool Proto10600102::has_sex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto10600102::set_has_sex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto10600102::clear_has_sex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto10600102::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 Proto10600102::sex() const {
  return sex_;
}
inline void Proto10600102::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
}

// optional string account = 3;
inline bool Proto10600102::has_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto10600102::set_has_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto10600102::clear_has_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto10600102::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& Proto10600102::account() const {
  return *account_;
}
inline void Proto10600102::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto10600102::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto10600102::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10600102::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* Proto10600102::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string session = 4;
inline bool Proto10600102::has_session() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto10600102::set_has_session() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto10600102::clear_has_session() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto10600102::clear_session() {
  if (session_ != &::google::protobuf::internal::kEmptyString) {
    session_->clear();
  }
  clear_has_session();
}
inline const ::std::string& Proto10600102::session() const {
  return *session_;
}
inline void Proto10600102::set_session(const ::std::string& value) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(value);
}
inline void Proto10600102::set_session(const char* value) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(value);
}
inline void Proto10600102::set_session(const char* value, size_t size) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10600102::mutable_session() {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  return session_;
}
inline ::std::string* Proto10600102::release_session() {
  clear_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_;
    session_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string agent = 5;
inline bool Proto10600102::has_agent() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto10600102::set_has_agent() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto10600102::clear_has_agent() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto10600102::clear_agent() {
  if (agent_ != &::google::protobuf::internal::kEmptyString) {
    agent_->clear();
  }
  clear_has_agent();
}
inline const ::std::string& Proto10600102::agent() const {
  return *agent_;
}
inline void Proto10600102::set_agent(const ::std::string& value) {
  set_has_agent();
  if (agent_ == &::google::protobuf::internal::kEmptyString) {
    agent_ = new ::std::string;
  }
  agent_->assign(value);
}
inline void Proto10600102::set_agent(const char* value) {
  set_has_agent();
  if (agent_ == &::google::protobuf::internal::kEmptyString) {
    agent_ = new ::std::string;
  }
  agent_->assign(value);
}
inline void Proto10600102::set_agent(const char* value, size_t size) {
  set_has_agent();
  if (agent_ == &::google::protobuf::internal::kEmptyString) {
    agent_ = new ::std::string;
  }
  agent_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10600102::mutable_agent() {
  set_has_agent();
  if (agent_ == &::google::protobuf::internal::kEmptyString) {
    agent_ = new ::std::string;
  }
  return agent_;
}
inline ::std::string* Proto10600102::release_agent() {
  clear_has_agent();
  if (agent_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = agent_;
    agent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string platform = 6;
inline bool Proto10600102::has_platform() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto10600102::set_has_platform() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto10600102::clear_has_platform() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto10600102::clear_platform() {
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    platform_->clear();
  }
  clear_has_platform();
}
inline const ::std::string& Proto10600102::platform() const {
  return *platform_;
}
inline void Proto10600102::set_platform(const ::std::string& value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void Proto10600102::set_platform(const char* value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void Proto10600102::set_platform(const char* value, size_t size) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10600102::mutable_platform() {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  return platform_;
}
inline ::std::string* Proto10600102::release_platform() {
  clear_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = platform_;
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 market = 7;
inline bool Proto10600102::has_market() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Proto10600102::set_has_market() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Proto10600102::clear_has_market() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Proto10600102::clear_market() {
  market_ = 0;
  clear_has_market();
}
inline ::google::protobuf::int32 Proto10600102::market() const {
  return market_;
}
inline void Proto10600102::set_market(::google::protobuf::int32 value) {
  set_has_market();
  market_ = value;
}

// optional int32 career = 8;
inline bool Proto10600102::has_career() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Proto10600102::set_has_career() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Proto10600102::clear_has_career() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Proto10600102::clear_career() {
  career_ = 0;
  clear_has_career();
}
inline ::google::protobuf::int32 Proto10600102::career() const {
  return career_;
}
inline void Proto10600102::set_career(::google::protobuf::int32 value) {
  set_has_career();
  career_ = value;
}

// -------------------------------------------------------------------

// Proto80400101

// optional int32 chat_scene = 1;
inline bool Proto80400101::has_chat_scene() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto80400101::set_has_chat_scene() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto80400101::clear_has_chat_scene() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto80400101::clear_chat_scene() {
  chat_scene_ = 0;
  clear_has_chat_scene();
}
inline ::google::protobuf::int32 Proto80400101::chat_scene() const {
  return chat_scene_;
}
inline void Proto80400101::set_chat_scene(::google::protobuf::int32 value) {
  set_has_chat_scene();
  chat_scene_ = value;
}

// optional int64 role_id = 2;
inline bool Proto80400101::has_role_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto80400101::set_has_role_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto80400101::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto80400101::clear_role_id() {
  role_id_ = GOOGLE_LONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::int64 Proto80400101::role_id() const {
  return role_id_;
}
inline void Proto80400101::set_role_id(::google::protobuf::int64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional string name = 3;
inline bool Proto80400101::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto80400101::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto80400101::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto80400101::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Proto80400101::name() const {
  return *name_;
}
inline void Proto80400101::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Proto80400101::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Proto80400101::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto80400101::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Proto80400101::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 level = 4;
inline bool Proto80400101::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto80400101::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto80400101::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto80400101::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Proto80400101::level() const {
  return level_;
}
inline void Proto80400101::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 sex = 5;
inline bool Proto80400101::has_sex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto80400101::set_has_sex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto80400101::clear_has_sex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto80400101::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 Proto80400101::sex() const {
  return sex_;
}
inline void Proto80400101::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
}

// optional int64 league_id = 6;
inline bool Proto80400101::has_league_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto80400101::set_has_league_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto80400101::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto80400101::clear_league_id() {
  league_id_ = GOOGLE_LONGLONG(0);
  clear_has_league_id();
}
inline ::google::protobuf::int64 Proto80400101::league_id() const {
  return league_id_;
}
inline void Proto80400101::set_league_id(::google::protobuf::int64 value) {
  set_has_league_id();
  league_id_ = value;
}

// optional string league_name = 7;
inline bool Proto80400101::has_league_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Proto80400101::set_has_league_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Proto80400101::clear_has_league_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Proto80400101::clear_league_name() {
  if (league_name_ != &::google::protobuf::internal::kEmptyString) {
    league_name_->clear();
  }
  clear_has_league_name();
}
inline const ::std::string& Proto80400101::league_name() const {
  return *league_name_;
}
inline void Proto80400101::set_league_name(const ::std::string& value) {
  set_has_league_name();
  if (league_name_ == &::google::protobuf::internal::kEmptyString) {
    league_name_ = new ::std::string;
  }
  league_name_->assign(value);
}
inline void Proto80400101::set_league_name(const char* value) {
  set_has_league_name();
  if (league_name_ == &::google::protobuf::internal::kEmptyString) {
    league_name_ = new ::std::string;
  }
  league_name_->assign(value);
}
inline void Proto80400101::set_league_name(const char* value, size_t size) {
  set_has_league_name();
  if (league_name_ == &::google::protobuf::internal::kEmptyString) {
    league_name_ = new ::std::string;
  }
  league_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto80400101::mutable_league_name() {
  set_has_league_name();
  if (league_name_ == &::google::protobuf::internal::kEmptyString) {
    league_name_ = new ::std::string;
  }
  return league_name_;
}
inline ::std::string* Proto80400101::release_league_name() {
  clear_has_league_name();
  if (league_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = league_name_;
    league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 scene_id = 8;
inline bool Proto80400101::has_scene_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Proto80400101::set_has_scene_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Proto80400101::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Proto80400101::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
inline ::google::protobuf::int32 Proto80400101::scene_id() const {
  return scene_id_;
}
inline void Proto80400101::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// optional int32 pixel_x = 9;
inline bool Proto80400101::has_pixel_x() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Proto80400101::set_has_pixel_x() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Proto80400101::clear_has_pixel_x() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Proto80400101::clear_pixel_x() {
  pixel_x_ = 0;
  clear_has_pixel_x();
}
inline ::google::protobuf::int32 Proto80400101::pixel_x() const {
  return pixel_x_;
}
inline void Proto80400101::set_pixel_x(::google::protobuf::int32 value) {
  set_has_pixel_x();
  pixel_x_ = value;
}

// optional int32 pixel_y = 10;
inline bool Proto80400101::has_pixel_y() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Proto80400101::set_has_pixel_y() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Proto80400101::clear_has_pixel_y() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Proto80400101::clear_pixel_y() {
  pixel_y_ = 0;
  clear_has_pixel_y();
}
inline ::google::protobuf::int32 Proto80400101::pixel_y() const {
  return pixel_y_;
}
inline void Proto80400101::set_pixel_y(::google::protobuf::int32 value) {
  set_has_pixel_y();
  pixel_y_ = value;
}

// optional int32 toward = 11;
inline bool Proto80400101::has_toward() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Proto80400101::set_has_toward() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Proto80400101::clear_has_toward() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Proto80400101::clear_toward() {
  toward_ = 0;
  clear_has_toward();
}
inline ::google::protobuf::int32 Proto80400101::toward() const {
  return toward_;
}
inline void Proto80400101::set_toward(::google::protobuf::int32 value) {
  set_has_toward();
  toward_ = value;
}

// optional int32 blood = 12;
inline bool Proto80400101::has_blood() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Proto80400101::set_has_blood() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Proto80400101::clear_has_blood() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Proto80400101::clear_blood() {
  blood_ = 0;
  clear_has_blood();
}
inline ::google::protobuf::int32 Proto80400101::blood() const {
  return blood_;
}
inline void Proto80400101::set_blood(::google::protobuf::int32 value) {
  set_has_blood();
  blood_ = value;
}

// optional int32 max_blood = 13;
inline bool Proto80400101::has_max_blood() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Proto80400101::set_has_max_blood() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Proto80400101::clear_has_max_blood() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Proto80400101::clear_max_blood() {
  max_blood_ = 0;
  clear_has_max_blood();
}
inline ::google::protobuf::int32 Proto80400101::max_blood() const {
  return max_blood_;
}
inline void Proto80400101::set_max_blood(::google::protobuf::int32 value) {
  set_has_max_blood();
  max_blood_ = value;
}

// optional int32 magic = 14;
inline bool Proto80400101::has_magic() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Proto80400101::set_has_magic() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Proto80400101::clear_has_magic() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Proto80400101::clear_magic() {
  magic_ = 0;
  clear_has_magic();
}
inline ::google::protobuf::int32 Proto80400101::magic() const {
  return magic_;
}
inline void Proto80400101::set_magic(::google::protobuf::int32 value) {
  set_has_magic();
  magic_ = value;
}

// optional int32 max_magic = 15;
inline bool Proto80400101::has_max_magic() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Proto80400101::set_has_max_magic() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Proto80400101::clear_has_max_magic() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Proto80400101::clear_max_magic() {
  max_magic_ = 0;
  clear_has_max_magic();
}
inline ::google::protobuf::int32 Proto80400101::max_magic() const {
  return max_magic_;
}
inline void Proto80400101::set_max_magic(::google::protobuf::int32 value) {
  set_has_max_magic();
  max_magic_ = value;
}

// optional int32 pk_state = 16;
inline bool Proto80400101::has_pk_state() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Proto80400101::set_has_pk_state() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Proto80400101::clear_has_pk_state() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Proto80400101::clear_pk_state() {
  pk_state_ = 0;
  clear_has_pk_state();
}
inline ::google::protobuf::int32 Proto80400101::pk_state() const {
  return pk_state_;
}
inline void Proto80400101::set_pk_state(::google::protobuf::int32 value) {
  set_has_pk_state();
  pk_state_ = value;
}

// optional int64 experience = 17;
inline bool Proto80400101::has_experience() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Proto80400101::set_has_experience() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Proto80400101::clear_has_experience() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Proto80400101::clear_experience() {
  experience_ = GOOGLE_LONGLONG(0);
  clear_has_experience();
}
inline ::google::protobuf::int64 Proto80400101::experience() const {
  return experience_;
}
inline void Proto80400101::set_experience(::google::protobuf::int64 value) {
  set_has_experience();
  experience_ = value;
}

// optional int32 speed = 18;
inline bool Proto80400101::has_speed() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Proto80400101::set_has_speed() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Proto80400101::clear_has_speed() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Proto80400101::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline ::google::protobuf::int32 Proto80400101::speed() const {
  return speed_;
}
inline void Proto80400101::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
}

// optional int32 vip_type = 19;
inline bool Proto80400101::has_vip_type() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Proto80400101::set_has_vip_type() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Proto80400101::clear_has_vip_type() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Proto80400101::clear_vip_type() {
  vip_type_ = 0;
  clear_has_vip_type();
}
inline ::google::protobuf::int32 Proto80400101::vip_type() const {
  return vip_type_;
}
inline void Proto80400101::set_vip_type(::google::protobuf::int32 value) {
  set_has_vip_type();
  vip_type_ = value;
}

// optional int32 force = 20;
inline bool Proto80400101::has_force() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Proto80400101::set_has_force() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Proto80400101::clear_has_force() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Proto80400101::clear_force() {
  force_ = 0;
  clear_has_force();
}
inline ::google::protobuf::int32 Proto80400101::force() const {
  return force_;
}
inline void Proto80400101::set_force(::google::protobuf::int32 value) {
  set_has_force();
  force_ = value;
}

// optional int32 team_id = 21;
inline bool Proto80400101::has_team_id() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Proto80400101::set_has_team_id() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Proto80400101::clear_has_team_id() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Proto80400101::clear_team_id() {
  team_id_ = 0;
  clear_has_team_id();
}
inline ::google::protobuf::int32 Proto80400101::team_id() const {
  return team_id_;
}
inline void Proto80400101::set_team_id(::google::protobuf::int32 value) {
  set_has_team_id();
  team_id_ = value;
}

// optional int32 camp_id = 22;
inline bool Proto80400101::has_camp_id() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Proto80400101::set_has_camp_id() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Proto80400101::clear_has_camp_id() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Proto80400101::clear_camp_id() {
  camp_id_ = 0;
  clear_has_camp_id();
}
inline ::google::protobuf::int32 Proto80400101::camp_id() const {
  return camp_id_;
}
inline void Proto80400101::set_camp_id(::google::protobuf::int32 value) {
  set_has_camp_id();
  camp_id_ = value;
}

// optional int32 permission = 23;
inline bool Proto80400101::has_permission() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Proto80400101::set_has_permission() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Proto80400101::clear_has_permission() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Proto80400101::clear_permission() {
  permission_ = 0;
  clear_has_permission();
}
inline ::google::protobuf::int32 Proto80400101::permission() const {
  return permission_;
}
inline void Proto80400101::set_permission(::google::protobuf::int32 value) {
  set_has_permission();
  permission_ = value;
}

// optional int32 space_id = 24;
inline bool Proto80400101::has_space_id() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Proto80400101::set_has_space_id() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Proto80400101::clear_has_space_id() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Proto80400101::clear_space_id() {
  space_id_ = 0;
  clear_has_space_id();
}
inline ::google::protobuf::int32 Proto80400101::space_id() const {
  return space_id_;
}
inline void Proto80400101::set_space_id(::google::protobuf::int32 value) {
  set_has_space_id();
  space_id_ = value;
}

// optional string server_flag = 25;
inline bool Proto80400101::has_server_flag() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Proto80400101::set_has_server_flag() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Proto80400101::clear_has_server_flag() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Proto80400101::clear_server_flag() {
  if (server_flag_ != &::google::protobuf::internal::kEmptyString) {
    server_flag_->clear();
  }
  clear_has_server_flag();
}
inline const ::std::string& Proto80400101::server_flag() const {
  return *server_flag_;
}
inline void Proto80400101::set_server_flag(const ::std::string& value) {
  set_has_server_flag();
  if (server_flag_ == &::google::protobuf::internal::kEmptyString) {
    server_flag_ = new ::std::string;
  }
  server_flag_->assign(value);
}
inline void Proto80400101::set_server_flag(const char* value) {
  set_has_server_flag();
  if (server_flag_ == &::google::protobuf::internal::kEmptyString) {
    server_flag_ = new ::std::string;
  }
  server_flag_->assign(value);
}
inline void Proto80400101::set_server_flag(const char* value, size_t size) {
  set_has_server_flag();
  if (server_flag_ == &::google::protobuf::internal::kEmptyString) {
    server_flag_ = new ::std::string;
  }
  server_flag_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto80400101::mutable_server_flag() {
  set_has_server_flag();
  if (server_flag_ == &::google::protobuf::internal::kEmptyString) {
    server_flag_ = new ::std::string;
  }
  return server_flag_;
}
inline ::std::string* Proto80400101::release_server_flag() {
  clear_has_server_flag();
  if (server_flag_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = server_flag_;
    server_flag_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 name_color = 26;
inline bool Proto80400101::has_name_color() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Proto80400101::set_has_name_color() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Proto80400101::clear_has_name_color() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Proto80400101::clear_name_color() {
  name_color_ = 0;
  clear_has_name_color();
}
inline ::google::protobuf::int32 Proto80400101::name_color() const {
  return name_color_;
}
inline void Proto80400101::set_name_color(::google::protobuf::int32 value) {
  set_has_name_color();
  name_color_ = value;
}

// optional int32 league_pos = 27;
inline bool Proto80400101::has_league_pos() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Proto80400101::set_has_league_pos() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Proto80400101::clear_has_league_pos() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Proto80400101::clear_league_pos() {
  league_pos_ = 0;
  clear_has_league_pos();
}
inline ::google::protobuf::int32 Proto80400101::league_pos() const {
  return league_pos_;
}
inline void Proto80400101::set_league_pos(::google::protobuf::int32 value) {
  set_has_league_pos();
  league_pos_ = value;
}

// optional int32 mw_id = 28;
inline bool Proto80400101::has_mw_id() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Proto80400101::set_has_mw_id() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Proto80400101::clear_has_mw_id() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Proto80400101::clear_mw_id() {
  mw_id_ = 0;
  clear_has_mw_id();
}
inline ::google::protobuf::int32 Proto80400101::mw_id() const {
  return mw_id_;
}
inline void Proto80400101::set_mw_id(::google::protobuf::int32 value) {
  set_has_mw_id();
  mw_id_ = value;
}

// optional int32 mw_rank_level = 29;
inline bool Proto80400101::has_mw_rank_level() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Proto80400101::set_has_mw_rank_level() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Proto80400101::clear_has_mw_rank_level() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Proto80400101::clear_mw_rank_level() {
  mw_rank_level_ = 0;
  clear_has_mw_rank_level();
}
inline ::google::protobuf::int32 Proto80400101::mw_rank_level() const {
  return mw_rank_level_;
}
inline void Proto80400101::set_mw_rank_level(::google::protobuf::int32 value) {
  set_has_mw_rank_level();
  mw_rank_level_ = value;
}

// optional string server_prev = 30;
inline bool Proto80400101::has_server_prev() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Proto80400101::set_has_server_prev() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Proto80400101::clear_has_server_prev() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Proto80400101::clear_server_prev() {
  if (server_prev_ != &::google::protobuf::internal::kEmptyString) {
    server_prev_->clear();
  }
  clear_has_server_prev();
}
inline const ::std::string& Proto80400101::server_prev() const {
  return *server_prev_;
}
inline void Proto80400101::set_server_prev(const ::std::string& value) {
  set_has_server_prev();
  if (server_prev_ == &::google::protobuf::internal::kEmptyString) {
    server_prev_ = new ::std::string;
  }
  server_prev_->assign(value);
}
inline void Proto80400101::set_server_prev(const char* value) {
  set_has_server_prev();
  if (server_prev_ == &::google::protobuf::internal::kEmptyString) {
    server_prev_ = new ::std::string;
  }
  server_prev_->assign(value);
}
inline void Proto80400101::set_server_prev(const char* value, size_t size) {
  set_has_server_prev();
  if (server_prev_ == &::google::protobuf::internal::kEmptyString) {
    server_prev_ = new ::std::string;
  }
  server_prev_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto80400101::mutable_server_prev() {
  set_has_server_prev();
  if (server_prev_ == &::google::protobuf::internal::kEmptyString) {
    server_prev_ = new ::std::string;
  }
  return server_prev_;
}
inline ::std::string* Proto80400101::release_server_prev() {
  clear_has_server_prev();
  if (server_prev_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = server_prev_;
    server_prev_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 server_id = 31;
inline bool Proto80400101::has_server_id() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void Proto80400101::set_has_server_id() {
  _has_bits_[0] |= 0x40000000u;
}
inline void Proto80400101::clear_has_server_id() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void Proto80400101::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 Proto80400101::server_id() const {
  return server_id_;
}
inline void Proto80400101::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
}

// optional int32 angry = 32;
inline bool Proto80400101::has_angry() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void Proto80400101::set_has_angry() {
  _has_bits_[0] |= 0x80000000u;
}
inline void Proto80400101::clear_has_angry() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void Proto80400101::clear_angry() {
  angry_ = 0;
  clear_has_angry();
}
inline ::google::protobuf::int32 Proto80400101::angry() const {
  return angry_;
}
inline void Proto80400101::set_angry(::google::protobuf::int32 value) {
  set_has_angry();
  angry_ = value;
}

// optional string full_name = 33;
inline bool Proto80400101::has_full_name() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void Proto80400101::set_has_full_name() {
  _has_bits_[1] |= 0x00000001u;
}
inline void Proto80400101::clear_has_full_name() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void Proto80400101::clear_full_name() {
  if (full_name_ != &::google::protobuf::internal::kEmptyString) {
    full_name_->clear();
  }
  clear_has_full_name();
}
inline const ::std::string& Proto80400101::full_name() const {
  return *full_name_;
}
inline void Proto80400101::set_full_name(const ::std::string& value) {
  set_has_full_name();
  if (full_name_ == &::google::protobuf::internal::kEmptyString) {
    full_name_ = new ::std::string;
  }
  full_name_->assign(value);
}
inline void Proto80400101::set_full_name(const char* value) {
  set_has_full_name();
  if (full_name_ == &::google::protobuf::internal::kEmptyString) {
    full_name_ = new ::std::string;
  }
  full_name_->assign(value);
}
inline void Proto80400101::set_full_name(const char* value, size_t size) {
  set_has_full_name();
  if (full_name_ == &::google::protobuf::internal::kEmptyString) {
    full_name_ = new ::std::string;
  }
  full_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto80400101::mutable_full_name() {
  set_has_full_name();
  if (full_name_ == &::google::protobuf::internal::kEmptyString) {
    full_name_ = new ::std::string;
  }
  return full_name_;
}
inline ::std::string* Proto80400101::release_full_name() {
  clear_has_full_name();
  if (full_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = full_name_;
    full_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 jump_value = 34;
inline bool Proto80400101::has_jump_value() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void Proto80400101::set_has_jump_value() {
  _has_bits_[1] |= 0x00000002u;
}
inline void Proto80400101::clear_has_jump_value() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void Proto80400101::clear_jump_value() {
  jump_value_ = 0;
  clear_has_jump_value();
}
inline ::google::protobuf::int32 Proto80400101::jump_value() const {
  return jump_value_;
}
inline void Proto80400101::set_jump_value(::google::protobuf::int32 value) {
  set_has_jump_value();
  jump_value_ = value;
}

// optional .ProtoRoleShape shape_info = 35;
inline bool Proto80400101::has_shape_info() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void Proto80400101::set_has_shape_info() {
  _has_bits_[1] |= 0x00000004u;
}
inline void Proto80400101::clear_has_shape_info() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void Proto80400101::clear_shape_info() {
  if (shape_info_ != NULL) shape_info_->::ProtoRoleShape::Clear();
  clear_has_shape_info();
}
inline const ::ProtoRoleShape& Proto80400101::shape_info() const {
  return shape_info_ != NULL ? *shape_info_ : *default_instance_->shape_info_;
}
inline ::ProtoRoleShape* Proto80400101::mutable_shape_info() {
  set_has_shape_info();
  if (shape_info_ == NULL) shape_info_ = new ::ProtoRoleShape;
  return shape_info_;
}
inline ::ProtoRoleShape* Proto80400101::release_shape_info() {
  clear_has_shape_info();
  ::ProtoRoleShape* temp = shape_info_;
  shape_info_ = NULL;
  return temp;
}

// optional int32 main_act = 36;
inline bool Proto80400101::has_main_act() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void Proto80400101::set_has_main_act() {
  _has_bits_[1] |= 0x00000008u;
}
inline void Proto80400101::clear_has_main_act() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void Proto80400101::clear_main_act() {
  main_act_ = 0;
  clear_has_main_act();
}
inline ::google::protobuf::int32 Proto80400101::main_act() const {
  return main_act_;
}
inline void Proto80400101::set_main_act(::google::protobuf::int32 value) {
  set_has_main_act();
  main_act_ = value;
}

// optional int64 partner_id = 37;
inline bool Proto80400101::has_partner_id() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void Proto80400101::set_has_partner_id() {
  _has_bits_[1] |= 0x00000010u;
}
inline void Proto80400101::clear_has_partner_id() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void Proto80400101::clear_partner_id() {
  partner_id_ = GOOGLE_LONGLONG(0);
  clear_has_partner_id();
}
inline ::google::protobuf::int64 Proto80400101::partner_id() const {
  return partner_id_;
}
inline void Proto80400101::set_partner_id(::google::protobuf::int64 value) {
  set_has_partner_id();
  partner_id_ = value;
}

// optional string partner_name = 38;
inline bool Proto80400101::has_partner_name() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void Proto80400101::set_has_partner_name() {
  _has_bits_[1] |= 0x00000020u;
}
inline void Proto80400101::clear_has_partner_name() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void Proto80400101::clear_partner_name() {
  if (partner_name_ != &::google::protobuf::internal::kEmptyString) {
    partner_name_->clear();
  }
  clear_has_partner_name();
}
inline const ::std::string& Proto80400101::partner_name() const {
  return *partner_name_;
}
inline void Proto80400101::set_partner_name(const ::std::string& value) {
  set_has_partner_name();
  if (partner_name_ == &::google::protobuf::internal::kEmptyString) {
    partner_name_ = new ::std::string;
  }
  partner_name_->assign(value);
}
inline void Proto80400101::set_partner_name(const char* value) {
  set_has_partner_name();
  if (partner_name_ == &::google::protobuf::internal::kEmptyString) {
    partner_name_ = new ::std::string;
  }
  partner_name_->assign(value);
}
inline void Proto80400101::set_partner_name(const char* value, size_t size) {
  set_has_partner_name();
  if (partner_name_ == &::google::protobuf::internal::kEmptyString) {
    partner_name_ = new ::std::string;
  }
  partner_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto80400101::mutable_partner_name() {
  set_has_partner_name();
  if (partner_name_ == &::google::protobuf::internal::kEmptyString) {
    partner_name_ = new ::std::string;
  }
  return partner_name_;
}
inline ::std::string* Proto80400101::release_partner_name() {
  clear_has_partner_name();
  if (partner_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = partner_name_;
    partner_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int64 wedding_id = 39;
inline bool Proto80400101::has_wedding_id() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void Proto80400101::set_has_wedding_id() {
  _has_bits_[1] |= 0x00000040u;
}
inline void Proto80400101::clear_has_wedding_id() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void Proto80400101::clear_wedding_id() {
  wedding_id_ = GOOGLE_LONGLONG(0);
  clear_has_wedding_id();
}
inline ::google::protobuf::int64 Proto80400101::wedding_id() const {
  return wedding_id_;
}
inline void Proto80400101::set_wedding_id(::google::protobuf::int64 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// optional int32 wedding_type = 40;
inline bool Proto80400101::has_wedding_type() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void Proto80400101::set_has_wedding_type() {
  _has_bits_[1] |= 0x00000080u;
}
inline void Proto80400101::clear_has_wedding_type() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void Proto80400101::clear_wedding_type() {
  wedding_type_ = 0;
  clear_has_wedding_type();
}
inline ::google::protobuf::int32 Proto80400101::wedding_type() const {
  return wedding_type_;
}
inline void Proto80400101::set_wedding_type(::google::protobuf::int32 value) {
  set_has_wedding_type();
  wedding_type_ = value;
}

// optional int32 open_days = 41;
inline bool Proto80400101::has_open_days() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void Proto80400101::set_has_open_days() {
  _has_bits_[1] |= 0x00000100u;
}
inline void Proto80400101::clear_has_open_days() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void Proto80400101::clear_open_days() {
  open_days_ = 0;
  clear_has_open_days();
}
inline ::google::protobuf::int32 Proto80400101::open_days() const {
  return open_days_;
}
inline void Proto80400101::set_open_days(::google::protobuf::int32 value) {
  set_has_open_days();
  open_days_ = value;
}

// -------------------------------------------------------------------

// Proto10400001

// optional int64 role_id = 1;
inline bool Proto10400001::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto10400001::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto10400001::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto10400001::clear_role_id() {
  role_id_ = GOOGLE_LONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::int64 Proto10400001::role_id() const {
  return role_id_;
}
inline void Proto10400001::set_role_id(::google::protobuf::int64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional string account = 2;
inline bool Proto10400001::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto10400001::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto10400001::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto10400001::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& Proto10400001::account() const {
  return *account_;
}
inline void Proto10400001::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto10400001::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto10400001::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10400001::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* Proto10400001::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string session = 3;
inline bool Proto10400001::has_session() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto10400001::set_has_session() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto10400001::clear_has_session() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto10400001::clear_session() {
  if (session_ != &::google::protobuf::internal::kEmptyString) {
    session_->clear();
  }
  clear_has_session();
}
inline const ::std::string& Proto10400001::session() const {
  return *session_;
}
inline void Proto10400001::set_session(const ::std::string& value) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(value);
}
inline void Proto10400001::set_session(const char* value) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(value);
}
inline void Proto10400001::set_session(const char* value, size_t size) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10400001::mutable_session() {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  return session_;
}
inline ::std::string* Proto10400001::release_session() {
  clear_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_;
    session_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// Proto80400102

// optional int64 role_id = 1;
inline bool Proto80400102::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto80400102::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto80400102::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto80400102::clear_role_id() {
  role_id_ = GOOGLE_LONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::int64 Proto80400102::role_id() const {
  return role_id_;
}
inline void Proto80400102::set_role_id(::google::protobuf::int64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional string name = 2;
inline bool Proto80400102::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto80400102::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto80400102::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto80400102::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Proto80400102::name() const {
  return *name_;
}
inline void Proto80400102::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Proto80400102::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Proto80400102::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto80400102::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Proto80400102::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 level = 3;
inline bool Proto80400102::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto80400102::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto80400102::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto80400102::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Proto80400102::level() const {
  return level_;
}
inline void Proto80400102::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 sex = 4;
inline bool Proto80400102::has_sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto80400102::set_has_sex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto80400102::clear_has_sex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto80400102::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 Proto80400102::sex() const {
  return sex_;
}
inline void Proto80400102::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
}

// optional int32 scene_id = 5;
inline bool Proto80400102::has_scene_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto80400102::set_has_scene_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto80400102::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto80400102::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
inline ::google::protobuf::int32 Proto80400102::scene_id() const {
  return scene_id_;
}
inline void Proto80400102::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// optional int32 pixel_x = 6;
inline bool Proto80400102::has_pixel_x() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto80400102::set_has_pixel_x() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto80400102::clear_has_pixel_x() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto80400102::clear_pixel_x() {
  pixel_x_ = 0;
  clear_has_pixel_x();
}
inline ::google::protobuf::int32 Proto80400102::pixel_x() const {
  return pixel_x_;
}
inline void Proto80400102::set_pixel_x(::google::protobuf::int32 value) {
  set_has_pixel_x();
  pixel_x_ = value;
}

// optional int32 pixel_y = 7;
inline bool Proto80400102::has_pixel_y() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Proto80400102::set_has_pixel_y() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Proto80400102::clear_has_pixel_y() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Proto80400102::clear_pixel_y() {
  pixel_y_ = 0;
  clear_has_pixel_y();
}
inline ::google::protobuf::int32 Proto80400102::pixel_y() const {
  return pixel_y_;
}
inline void Proto80400102::set_pixel_y(::google::protobuf::int32 value) {
  set_has_pixel_y();
  pixel_y_ = value;
}

// optional int32 toward = 8;
inline bool Proto80400102::has_toward() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Proto80400102::set_has_toward() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Proto80400102::clear_has_toward() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Proto80400102::clear_toward() {
  toward_ = 0;
  clear_has_toward();
}
inline ::google::protobuf::int32 Proto80400102::toward() const {
  return toward_;
}
inline void Proto80400102::set_toward(::google::protobuf::int32 value) {
  set_has_toward();
  toward_ = value;
}

// optional int32 blood = 9;
inline bool Proto80400102::has_blood() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Proto80400102::set_has_blood() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Proto80400102::clear_has_blood() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Proto80400102::clear_blood() {
  blood_ = 0;
  clear_has_blood();
}
inline ::google::protobuf::int32 Proto80400102::blood() const {
  return blood_;
}
inline void Proto80400102::set_blood(::google::protobuf::int32 value) {
  set_has_blood();
  blood_ = value;
}

// optional int32 max_blood = 10;
inline bool Proto80400102::has_max_blood() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Proto80400102::set_has_max_blood() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Proto80400102::clear_has_max_blood() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Proto80400102::clear_max_blood() {
  max_blood_ = 0;
  clear_has_max_blood();
}
inline ::google::protobuf::int32 Proto80400102::max_blood() const {
  return max_blood_;
}
inline void Proto80400102::set_max_blood(::google::protobuf::int32 value) {
  set_has_max_blood();
  max_blood_ = value;
}

// optional int32 magic = 11;
inline bool Proto80400102::has_magic() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Proto80400102::set_has_magic() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Proto80400102::clear_has_magic() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Proto80400102::clear_magic() {
  magic_ = 0;
  clear_has_magic();
}
inline ::google::protobuf::int32 Proto80400102::magic() const {
  return magic_;
}
inline void Proto80400102::set_magic(::google::protobuf::int32 value) {
  set_has_magic();
  magic_ = value;
}

// optional int32 max_magic = 12;
inline bool Proto80400102::has_max_magic() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Proto80400102::set_has_max_magic() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Proto80400102::clear_has_max_magic() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Proto80400102::clear_max_magic() {
  max_magic_ = 0;
  clear_has_max_magic();
}
inline ::google::protobuf::int32 Proto80400102::max_magic() const {
  return max_magic_;
}
inline void Proto80400102::set_max_magic(::google::protobuf::int32 value) {
  set_has_max_magic();
  max_magic_ = value;
}

// optional int32 pk_state = 13;
inline bool Proto80400102::has_pk_state() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Proto80400102::set_has_pk_state() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Proto80400102::clear_has_pk_state() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Proto80400102::clear_pk_state() {
  pk_state_ = 0;
  clear_has_pk_state();
}
inline ::google::protobuf::int32 Proto80400102::pk_state() const {
  return pk_state_;
}
inline void Proto80400102::set_pk_state(::google::protobuf::int32 value) {
  set_has_pk_state();
  pk_state_ = value;
}

// optional int32 speed = 14;
inline bool Proto80400102::has_speed() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Proto80400102::set_has_speed() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Proto80400102::clear_has_speed() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Proto80400102::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline ::google::protobuf::int32 Proto80400102::speed() const {
  return speed_;
}
inline void Proto80400102::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
}

// optional int32 fight_state = 15;
inline bool Proto80400102::has_fight_state() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Proto80400102::set_has_fight_state() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Proto80400102::clear_has_fight_state() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Proto80400102::clear_fight_state() {
  fight_state_ = 0;
  clear_has_fight_state();
}
inline ::google::protobuf::int32 Proto80400102::fight_state() const {
  return fight_state_;
}
inline void Proto80400102::set_fight_state(::google::protobuf::int32 value) {
  set_has_fight_state();
  fight_state_ = value;
}

// optional int32 mount_sort = 16;
inline bool Proto80400102::has_mount_sort() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Proto80400102::set_has_mount_sort() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Proto80400102::clear_has_mount_sort() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Proto80400102::clear_mount_sort() {
  mount_sort_ = 0;
  clear_has_mount_sort();
}
inline ::google::protobuf::int32 Proto80400102::mount_sort() const {
  return mount_sort_;
}
inline void Proto80400102::set_mount_sort(::google::protobuf::int32 value) {
  set_has_mount_sort();
  mount_sort_ = value;
}

// optional int32 vip_type = 17;
inline bool Proto80400102::has_vip_type() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Proto80400102::set_has_vip_type() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Proto80400102::clear_has_vip_type() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Proto80400102::clear_vip_type() {
  vip_type_ = 0;
  clear_has_vip_type();
}
inline ::google::protobuf::int32 Proto80400102::vip_type() const {
  return vip_type_;
}
inline void Proto80400102::set_vip_type(::google::protobuf::int32 value) {
  set_has_vip_type();
  vip_type_ = value;
}

// optional int32 force = 18;
inline bool Proto80400102::has_force() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Proto80400102::set_has_force() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Proto80400102::clear_has_force() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Proto80400102::clear_force() {
  force_ = 0;
  clear_has_force();
}
inline ::google::protobuf::int32 Proto80400102::force() const {
  return force_;
}
inline void Proto80400102::set_force(::google::protobuf::int32 value) {
  set_has_force();
  force_ = value;
}

// optional int32 camp_id = 19;
inline bool Proto80400102::has_camp_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Proto80400102::set_has_camp_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Proto80400102::clear_has_camp_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Proto80400102::clear_camp_id() {
  camp_id_ = 0;
  clear_has_camp_id();
}
inline ::google::protobuf::int32 Proto80400102::camp_id() const {
  return camp_id_;
}
inline void Proto80400102::set_camp_id(::google::protobuf::int32 value) {
  set_has_camp_id();
  camp_id_ = value;
}

// optional int64 league_id = 20;
inline bool Proto80400102::has_league_id() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Proto80400102::set_has_league_id() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Proto80400102::clear_has_league_id() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Proto80400102::clear_league_id() {
  league_id_ = GOOGLE_LONGLONG(0);
  clear_has_league_id();
}
inline ::google::protobuf::int64 Proto80400102::league_id() const {
  return league_id_;
}
inline void Proto80400102::set_league_id(::google::protobuf::int64 value) {
  set_has_league_id();
  league_id_ = value;
}

// optional int32 is_copy = 21;
inline bool Proto80400102::has_is_copy() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Proto80400102::set_has_is_copy() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Proto80400102::clear_has_is_copy() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Proto80400102::clear_is_copy() {
  is_copy_ = 0;
  clear_has_is_copy();
}
inline ::google::protobuf::int32 Proto80400102::is_copy() const {
  return is_copy_;
}
inline void Proto80400102::set_is_copy(::google::protobuf::int32 value) {
  set_has_is_copy();
  is_copy_ = value;
}

// optional int64 beast_id = 22;
inline bool Proto80400102::has_beast_id() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Proto80400102::set_has_beast_id() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Proto80400102::clear_has_beast_id() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Proto80400102::clear_beast_id() {
  beast_id_ = GOOGLE_LONGLONG(0);
  clear_has_beast_id();
}
inline ::google::protobuf::int64 Proto80400102::beast_id() const {
  return beast_id_;
}
inline void Proto80400102::set_beast_id(::google::protobuf::int64 value) {
  set_has_beast_id();
  beast_id_ = value;
}

// optional string league_name = 23;
inline bool Proto80400102::has_league_name() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Proto80400102::set_has_league_name() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Proto80400102::clear_has_league_name() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Proto80400102::clear_league_name() {
  if (league_name_ != &::google::protobuf::internal::kEmptyString) {
    league_name_->clear();
  }
  clear_has_league_name();
}
inline const ::std::string& Proto80400102::league_name() const {
  return *league_name_;
}
inline void Proto80400102::set_league_name(const ::std::string& value) {
  set_has_league_name();
  if (league_name_ == &::google::protobuf::internal::kEmptyString) {
    league_name_ = new ::std::string;
  }
  league_name_->assign(value);
}
inline void Proto80400102::set_league_name(const char* value) {
  set_has_league_name();
  if (league_name_ == &::google::protobuf::internal::kEmptyString) {
    league_name_ = new ::std::string;
  }
  league_name_->assign(value);
}
inline void Proto80400102::set_league_name(const char* value, size_t size) {
  set_has_league_name();
  if (league_name_ == &::google::protobuf::internal::kEmptyString) {
    league_name_ = new ::std::string;
  }
  league_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto80400102::mutable_league_name() {
  set_has_league_name();
  if (league_name_ == &::google::protobuf::internal::kEmptyString) {
    league_name_ = new ::std::string;
  }
  return league_name_;
}
inline ::std::string* Proto80400102::release_league_name() {
  clear_has_league_name();
  if (league_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = league_name_;
    league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 space_id = 24;
inline bool Proto80400102::has_space_id() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Proto80400102::set_has_space_id() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Proto80400102::clear_has_space_id() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Proto80400102::clear_space_id() {
  space_id_ = 0;
  clear_has_space_id();
}
inline ::google::protobuf::int32 Proto80400102::space_id() const {
  return space_id_;
}
inline void Proto80400102::set_space_id(::google::protobuf::int32 value) {
  set_has_space_id();
  space_id_ = value;
}

// optional int32 name_color = 25;
inline bool Proto80400102::has_name_color() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Proto80400102::set_has_name_color() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Proto80400102::clear_has_name_color() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Proto80400102::clear_name_color() {
  name_color_ = 0;
  clear_has_name_color();
}
inline ::google::protobuf::int32 Proto80400102::name_color() const {
  return name_color_;
}
inline void Proto80400102::set_name_color(::google::protobuf::int32 value) {
  set_has_name_color();
  name_color_ = value;
}

// optional int32 gather_state = 26;
inline bool Proto80400102::has_gather_state() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Proto80400102::set_has_gather_state() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Proto80400102::clear_has_gather_state() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Proto80400102::clear_gather_state() {
  gather_state_ = 0;
  clear_has_gather_state();
}
inline ::google::protobuf::int32 Proto80400102::gather_state() const {
  return gather_state_;
}
inline void Proto80400102::set_gather_state(::google::protobuf::int32 value) {
  set_has_gather_state();
  gather_state_ = value;
}

// optional int32 mount_lvl = 27;
inline bool Proto80400102::has_mount_lvl() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Proto80400102::set_has_mount_lvl() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Proto80400102::clear_has_mount_lvl() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Proto80400102::clear_mount_lvl() {
  mount_lvl_ = 0;
  clear_has_mount_lvl();
}
inline ::google::protobuf::int32 Proto80400102::mount_lvl() const {
  return mount_lvl_;
}
inline void Proto80400102::set_mount_lvl(::google::protobuf::int32 value) {
  set_has_mount_lvl();
  mount_lvl_ = value;
}

// optional int32 mw_id = 28;
inline bool Proto80400102::has_mw_id() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Proto80400102::set_has_mw_id() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Proto80400102::clear_has_mw_id() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Proto80400102::clear_mw_id() {
  mw_id_ = 0;
  clear_has_mw_id();
}
inline ::google::protobuf::int32 Proto80400102::mw_id() const {
  return mw_id_;
}
inline void Proto80400102::set_mw_id(::google::protobuf::int32 value) {
  set_has_mw_id();
  mw_id_ = value;
}

// optional int32 mw_rank_level = 29;
inline bool Proto80400102::has_mw_rank_level() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Proto80400102::set_has_mw_rank_level() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Proto80400102::clear_has_mw_rank_level() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Proto80400102::clear_mw_rank_level() {
  mw_rank_level_ = 0;
  clear_has_mw_rank_level();
}
inline ::google::protobuf::int32 Proto80400102::mw_rank_level() const {
  return mw_rank_level_;
}
inline void Proto80400102::set_mw_rank_level(::google::protobuf::int32 value) {
  set_has_mw_rank_level();
  mw_rank_level_ = value;
}

// optional int32 server_id = 30;
inline bool Proto80400102::has_server_id() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Proto80400102::set_has_server_id() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Proto80400102::clear_has_server_id() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Proto80400102::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 Proto80400102::server_id() const {
  return server_id_;
}
inline void Proto80400102::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
}

// optional string server_prev = 31;
inline bool Proto80400102::has_server_prev() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void Proto80400102::set_has_server_prev() {
  _has_bits_[0] |= 0x40000000u;
}
inline void Proto80400102::clear_has_server_prev() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void Proto80400102::clear_server_prev() {
  if (server_prev_ != &::google::protobuf::internal::kEmptyString) {
    server_prev_->clear();
  }
  clear_has_server_prev();
}
inline const ::std::string& Proto80400102::server_prev() const {
  return *server_prev_;
}
inline void Proto80400102::set_server_prev(const ::std::string& value) {
  set_has_server_prev();
  if (server_prev_ == &::google::protobuf::internal::kEmptyString) {
    server_prev_ = new ::std::string;
  }
  server_prev_->assign(value);
}
inline void Proto80400102::set_server_prev(const char* value) {
  set_has_server_prev();
  if (server_prev_ == &::google::protobuf::internal::kEmptyString) {
    server_prev_ = new ::std::string;
  }
  server_prev_->assign(value);
}
inline void Proto80400102::set_server_prev(const char* value, size_t size) {
  set_has_server_prev();
  if (server_prev_ == &::google::protobuf::internal::kEmptyString) {
    server_prev_ = new ::std::string;
  }
  server_prev_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto80400102::mutable_server_prev() {
  set_has_server_prev();
  if (server_prev_ == &::google::protobuf::internal::kEmptyString) {
    server_prev_ = new ::std::string;
  }
  return server_prev_;
}
inline ::std::string* Proto80400102::release_server_prev() {
  clear_has_server_prev();
  if (server_prev_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = server_prev_;
    server_prev_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 league_pos = 32;
inline bool Proto80400102::has_league_pos() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void Proto80400102::set_has_league_pos() {
  _has_bits_[0] |= 0x80000000u;
}
inline void Proto80400102::clear_has_league_pos() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void Proto80400102::clear_league_pos() {
  league_pos_ = 0;
  clear_has_league_pos();
}
inline ::google::protobuf::int32 Proto80400102::league_pos() const {
  return league_pos_;
}
inline void Proto80400102::set_league_pos(::google::protobuf::int32 value) {
  set_has_league_pos();
  league_pos_ = value;
}

// optional string full_name = 33;
inline bool Proto80400102::has_full_name() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void Proto80400102::set_has_full_name() {
  _has_bits_[1] |= 0x00000001u;
}
inline void Proto80400102::clear_has_full_name() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void Proto80400102::clear_full_name() {
  if (full_name_ != &::google::protobuf::internal::kEmptyString) {
    full_name_->clear();
  }
  clear_has_full_name();
}
inline const ::std::string& Proto80400102::full_name() const {
  return *full_name_;
}
inline void Proto80400102::set_full_name(const ::std::string& value) {
  set_has_full_name();
  if (full_name_ == &::google::protobuf::internal::kEmptyString) {
    full_name_ = new ::std::string;
  }
  full_name_->assign(value);
}
inline void Proto80400102::set_full_name(const char* value) {
  set_has_full_name();
  if (full_name_ == &::google::protobuf::internal::kEmptyString) {
    full_name_ = new ::std::string;
  }
  full_name_->assign(value);
}
inline void Proto80400102::set_full_name(const char* value, size_t size) {
  set_has_full_name();
  if (full_name_ == &::google::protobuf::internal::kEmptyString) {
    full_name_ = new ::std::string;
  }
  full_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto80400102::mutable_full_name() {
  set_has_full_name();
  if (full_name_ == &::google::protobuf::internal::kEmptyString) {
    full_name_ = new ::std::string;
  }
  return full_name_;
}
inline ::std::string* Proto80400102::release_full_name() {
  clear_has_full_name();
  if (full_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = full_name_;
    full_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional .ProtoRoleShape shape_info = 34;
inline bool Proto80400102::has_shape_info() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void Proto80400102::set_has_shape_info() {
  _has_bits_[1] |= 0x00000002u;
}
inline void Proto80400102::clear_has_shape_info() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void Proto80400102::clear_shape_info() {
  if (shape_info_ != NULL) shape_info_->::ProtoRoleShape::Clear();
  clear_has_shape_info();
}
inline const ::ProtoRoleShape& Proto80400102::shape_info() const {
  return shape_info_ != NULL ? *shape_info_ : *default_instance_->shape_info_;
}
inline ::ProtoRoleShape* Proto80400102::mutable_shape_info() {
  set_has_shape_info();
  if (shape_info_ == NULL) shape_info_ = new ::ProtoRoleShape;
  return shape_info_;
}
inline ::ProtoRoleShape* Proto80400102::release_shape_info() {
  clear_has_shape_info();
  ::ProtoRoleShape* temp = shape_info_;
  shape_info_ = NULL;
  return temp;
}

// optional int32 hotspring_status = 35;
inline bool Proto80400102::has_hotspring_status() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void Proto80400102::set_has_hotspring_status() {
  _has_bits_[1] |= 0x00000004u;
}
inline void Proto80400102::clear_has_hotspring_status() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void Proto80400102::clear_hotspring_status() {
  hotspring_status_ = 0;
  clear_has_hotspring_status();
}
inline ::google::protobuf::int32 Proto80400102::hotspring_status() const {
  return hotspring_status_;
}
inline void Proto80400102::set_hotspring_status(::google::protobuf::int32 value) {
  set_has_hotspring_status();
  hotspring_status_ = value;
}

// optional int64 partner_id = 36;
inline bool Proto80400102::has_partner_id() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void Proto80400102::set_has_partner_id() {
  _has_bits_[1] |= 0x00000008u;
}
inline void Proto80400102::clear_has_partner_id() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void Proto80400102::clear_partner_id() {
  partner_id_ = GOOGLE_LONGLONG(0);
  clear_has_partner_id();
}
inline ::google::protobuf::int64 Proto80400102::partner_id() const {
  return partner_id_;
}
inline void Proto80400102::set_partner_id(::google::protobuf::int64 value) {
  set_has_partner_id();
  partner_id_ = value;
}

// optional string partner_name = 37;
inline bool Proto80400102::has_partner_name() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void Proto80400102::set_has_partner_name() {
  _has_bits_[1] |= 0x00000010u;
}
inline void Proto80400102::clear_has_partner_name() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void Proto80400102::clear_partner_name() {
  if (partner_name_ != &::google::protobuf::internal::kEmptyString) {
    partner_name_->clear();
  }
  clear_has_partner_name();
}
inline const ::std::string& Proto80400102::partner_name() const {
  return *partner_name_;
}
inline void Proto80400102::set_partner_name(const ::std::string& value) {
  set_has_partner_name();
  if (partner_name_ == &::google::protobuf::internal::kEmptyString) {
    partner_name_ = new ::std::string;
  }
  partner_name_->assign(value);
}
inline void Proto80400102::set_partner_name(const char* value) {
  set_has_partner_name();
  if (partner_name_ == &::google::protobuf::internal::kEmptyString) {
    partner_name_ = new ::std::string;
  }
  partner_name_->assign(value);
}
inline void Proto80400102::set_partner_name(const char* value, size_t size) {
  set_has_partner_name();
  if (partner_name_ == &::google::protobuf::internal::kEmptyString) {
    partner_name_ = new ::std::string;
  }
  partner_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto80400102::mutable_partner_name() {
  set_has_partner_name();
  if (partner_name_ == &::google::protobuf::internal::kEmptyString) {
    partner_name_ = new ::std::string;
  }
  return partner_name_;
}
inline ::std::string* Proto80400102::release_partner_name() {
  clear_has_partner_name();
  if (partner_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = partner_name_;
    partner_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int64 wedding_id = 38;
inline bool Proto80400102::has_wedding_id() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void Proto80400102::set_has_wedding_id() {
  _has_bits_[1] |= 0x00000020u;
}
inline void Proto80400102::clear_has_wedding_id() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void Proto80400102::clear_wedding_id() {
  wedding_id_ = GOOGLE_LONGLONG(0);
  clear_has_wedding_id();
}
inline ::google::protobuf::int64 Proto80400102::wedding_id() const {
  return wedding_id_;
}
inline void Proto80400102::set_wedding_id(::google::protobuf::int64 value) {
  set_has_wedding_id();
  wedding_id_ = value;
}

// optional int32 wedding_type = 39;
inline bool Proto80400102::has_wedding_type() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void Proto80400102::set_has_wedding_type() {
  _has_bits_[1] |= 0x00000040u;
}
inline void Proto80400102::clear_has_wedding_type() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void Proto80400102::clear_wedding_type() {
  wedding_type_ = 0;
  clear_has_wedding_type();
}
inline ::google::protobuf::int32 Proto80400102::wedding_type() const {
  return wedding_type_;
}
inline void Proto80400102::set_wedding_type(::google::protobuf::int32 value) {
  set_has_wedding_type();
  wedding_type_ = value;
}

// -------------------------------------------------------------------

// Proto80400104

// optional int64 mover_id = 1;
inline bool Proto80400104::has_mover_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto80400104::set_has_mover_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto80400104::clear_has_mover_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto80400104::clear_mover_id() {
  mover_id_ = GOOGLE_LONGLONG(0);
  clear_has_mover_id();
}
inline ::google::protobuf::int64 Proto80400104::mover_id() const {
  return mover_id_;
}
inline void Proto80400104::set_mover_id(::google::protobuf::int64 value) {
  set_has_mover_id();
  mover_id_ = value;
}

// -------------------------------------------------------------------

// Proto10400109

// repeated .ProtoCoord step_list = 1;
inline int Proto10400109::step_list_size() const {
  return step_list_.size();
}
inline void Proto10400109::clear_step_list() {
  step_list_.Clear();
}
inline const ::ProtoCoord& Proto10400109::step_list(int index) const {
  return step_list_.Get(index);
}
inline ::ProtoCoord* Proto10400109::mutable_step_list(int index) {
  return step_list_.Mutable(index);
}
inline ::ProtoCoord* Proto10400109::add_step_list() {
  return step_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoCoord >&
Proto10400109::step_list() const {
  return step_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoCoord >*
Proto10400109::mutable_step_list() {
  return &step_list_;
}

// optional int32 toward = 2;
inline bool Proto10400109::has_toward() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto10400109::set_has_toward() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto10400109::clear_has_toward() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto10400109::clear_toward() {
  toward_ = 0;
  clear_has_toward();
}
inline ::google::protobuf::int32 Proto10400109::toward() const {
  return toward_;
}
inline void Proto10400109::set_toward(::google::protobuf::int32 value) {
  set_has_toward();
  toward_ = value;
}

// optional int32 arrive_tick = 3;
inline bool Proto10400109::has_arrive_tick() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto10400109::set_has_arrive_tick() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto10400109::clear_has_arrive_tick() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto10400109::clear_arrive_tick() {
  arrive_tick_ = 0;
  clear_has_arrive_tick();
}
inline ::google::protobuf::int32 Proto10400109::arrive_tick() const {
  return arrive_tick_;
}
inline void Proto10400109::set_arrive_tick(::google::protobuf::int32 value) {
  set_has_arrive_tick();
  arrive_tick_ = value;
}

// optional int32 scene_id = 4;
inline bool Proto10400109::has_scene_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto10400109::set_has_scene_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto10400109::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto10400109::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
inline ::google::protobuf::int32 Proto10400109::scene_id() const {
  return scene_id_;
}
inline void Proto10400109::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// -------------------------------------------------------------------

// Proto80400105

// optional int64 mover_id = 1;
inline bool Proto80400105::has_mover_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto80400105::set_has_mover_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto80400105::clear_has_mover_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto80400105::clear_mover_id() {
  mover_id_ = GOOGLE_LONGLONG(0);
  clear_has_mover_id();
}
inline ::google::protobuf::int64 Proto80400105::mover_id() const {
  return mover_id_;
}
inline void Proto80400105::set_mover_id(::google::protobuf::int64 value) {
  set_has_mover_id();
  mover_id_ = value;
}

// repeated .ProtoCoord step_list = 2;
inline int Proto80400105::step_list_size() const {
  return step_list_.size();
}
inline void Proto80400105::clear_step_list() {
  step_list_.Clear();
}
inline const ::ProtoCoord& Proto80400105::step_list(int index) const {
  return step_list_.Get(index);
}
inline ::ProtoCoord* Proto80400105::mutable_step_list(int index) {
  return step_list_.Mutable(index);
}
inline ::ProtoCoord* Proto80400105::add_step_list() {
  return step_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoCoord >&
Proto80400105::step_list() const {
  return step_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoCoord >*
Proto80400105::mutable_step_list() {
  return &step_list_;
}

// optional int32 toward = 3;
inline bool Proto80400105::has_toward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto80400105::set_has_toward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto80400105::clear_has_toward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto80400105::clear_toward() {
  toward_ = 0;
  clear_has_toward();
}
inline ::google::protobuf::int32 Proto80400105::toward() const {
  return toward_;
}
inline void Proto80400105::set_toward(::google::protobuf::int32 value) {
  set_has_toward();
  toward_ = value;
}

// optional int64 arrive_tick = 4;
inline bool Proto80400105::has_arrive_tick() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto80400105::set_has_arrive_tick() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto80400105::clear_has_arrive_tick() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto80400105::clear_arrive_tick() {
  arrive_tick_ = GOOGLE_LONGLONG(0);
  clear_has_arrive_tick();
}
inline ::google::protobuf::int64 Proto80400105::arrive_tick() const {
  return arrive_tick_;
}
inline void Proto80400105::set_arrive_tick(::google::protobuf::int64 value) {
  set_has_arrive_tick();
  arrive_tick_ = value;
}

// -------------------------------------------------------------------

// Proto50600102

// optional int32 test = 1;
inline bool Proto50600102::has_test() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto50600102::set_has_test() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto50600102::clear_has_test() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto50600102::clear_test() {
  test_ = 0;
  clear_has_test();
}
inline ::google::protobuf::int32 Proto50600102::test() const {
  return test_;
}
inline void Proto50600102::set_test(::google::protobuf::int32 value) {
  set_has_test();
  test_ = value;
}

// -------------------------------------------------------------------

// Proto10400110

// optional int32 scene_id = 1;
inline bool Proto10400110::has_scene_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto10400110::set_has_scene_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto10400110::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto10400110::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
inline ::google::protobuf::int32 Proto10400110::scene_id() const {
  return scene_id_;
}
inline void Proto10400110::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// -------------------------------------------------------------------

// Proto11499999

// optional string cmd_name = 1;
inline bool Proto11499999::has_cmd_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto11499999::set_has_cmd_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto11499999::clear_has_cmd_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto11499999::clear_cmd_name() {
  if (cmd_name_ != &::google::protobuf::internal::kEmptyString) {
    cmd_name_->clear();
  }
  clear_has_cmd_name();
}
inline const ::std::string& Proto11499999::cmd_name() const {
  return *cmd_name_;
}
inline void Proto11499999::set_cmd_name(const ::std::string& value) {
  set_has_cmd_name();
  if (cmd_name_ == &::google::protobuf::internal::kEmptyString) {
    cmd_name_ = new ::std::string;
  }
  cmd_name_->assign(value);
}
inline void Proto11499999::set_cmd_name(const char* value) {
  set_has_cmd_name();
  if (cmd_name_ == &::google::protobuf::internal::kEmptyString) {
    cmd_name_ = new ::std::string;
  }
  cmd_name_->assign(value);
}
inline void Proto11499999::set_cmd_name(const char* value, size_t size) {
  set_has_cmd_name();
  if (cmd_name_ == &::google::protobuf::internal::kEmptyString) {
    cmd_name_ = new ::std::string;
  }
  cmd_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto11499999::mutable_cmd_name() {
  set_has_cmd_name();
  if (cmd_name_ == &::google::protobuf::internal::kEmptyString) {
    cmd_name_ = new ::std::string;
  }
  return cmd_name_;
}
inline ::std::string* Proto11499999::release_cmd_name() {
  clear_has_cmd_name();
  if (cmd_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = cmd_name_;
    cmd_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 param1 = 2;
inline bool Proto11499999::has_param1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto11499999::set_has_param1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto11499999::clear_has_param1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto11499999::clear_param1() {
  param1_ = 0;
  clear_has_param1();
}
inline ::google::protobuf::int32 Proto11499999::param1() const {
  return param1_;
}
inline void Proto11499999::set_param1(::google::protobuf::int32 value) {
  set_has_param1();
  param1_ = value;
}

// optional int32 param2 = 3;
inline bool Proto11499999::has_param2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto11499999::set_has_param2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto11499999::clear_has_param2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto11499999::clear_param2() {
  param2_ = 0;
  clear_has_param2();
}
inline ::google::protobuf::int32 Proto11499999::param2() const {
  return param2_;
}
inline void Proto11499999::set_param2(::google::protobuf::int32 value) {
  set_has_param2();
  param2_ = value;
}

// optional int32 param3 = 4;
inline bool Proto11499999::has_param3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto11499999::set_has_param3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto11499999::clear_has_param3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto11499999::clear_param3() {
  param3_ = 0;
  clear_has_param3();
}
inline ::google::protobuf::int32 Proto11499999::param3() const {
  return param3_;
}
inline void Proto11499999::set_param3(::google::protobuf::int32 value) {
  set_has_param3();
  param3_ = value;
}

// optional int32 param4 = 5;
inline bool Proto11499999::has_param4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto11499999::set_has_param4() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto11499999::clear_has_param4() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto11499999::clear_param4() {
  param4_ = 0;
  clear_has_param4();
}
inline ::google::protobuf::int32 Proto11499999::param4() const {
  return param4_;
}
inline void Proto11499999::set_param4(::google::protobuf::int32 value) {
  set_has_param4();
  param4_ = value;
}

// optional int32 param5 = 6;
inline bool Proto11499999::has_param5() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto11499999::set_has_param5() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto11499999::clear_has_param5() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto11499999::clear_param5() {
  param5_ = 0;
  clear_has_param5();
}
inline ::google::protobuf::int32 Proto11499999::param5() const {
  return param5_;
}
inline void Proto11499999::set_param5(::google::protobuf::int32 value) {
  set_has_param5();
  param5_ = value;
}

// -------------------------------------------------------------------

// Proto10200001

// optional int64 role_id = 1;
inline bool Proto10200001::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto10200001::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto10200001::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto10200001::clear_role_id() {
  role_id_ = GOOGLE_LONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::int64 Proto10200001::role_id() const {
  return role_id_;
}
inline void Proto10200001::set_role_id(::google::protobuf::int64 value) {
  set_has_role_id();
  role_id_ = value;
}

// optional string account = 2;
inline bool Proto10200001::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto10200001::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto10200001::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto10200001::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& Proto10200001::account() const {
  return *account_;
}
inline void Proto10200001::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto10200001::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void Proto10200001::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10200001::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* Proto10200001::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string session = 3;
inline bool Proto10200001::has_session() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto10200001::set_has_session() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto10200001::clear_has_session() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto10200001::clear_session() {
  if (session_ != &::google::protobuf::internal::kEmptyString) {
    session_->clear();
  }
  clear_has_session();
}
inline const ::std::string& Proto10200001::session() const {
  return *session_;
}
inline void Proto10200001::set_session(const ::std::string& value) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(value);
}
inline void Proto10200001::set_session(const char* value) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(value);
}
inline void Proto10200001::set_session(const char* value, size_t size) {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  session_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10200001::mutable_session() {
  set_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    session_ = new ::std::string;
  }
  return session_;
}
inline ::std::string* Proto10200001::release_session() {
  clear_has_session();
  if (session_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_;
    session_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// Proto10200002

// optional int32 channel = 1;
inline bool Proto10200002::has_channel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto10200002::set_has_channel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto10200002::clear_has_channel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto10200002::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::google::protobuf::int32 Proto10200002::channel() const {
  return channel_;
}
inline void Proto10200002::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
}

// optional int32 type = 2;
inline bool Proto10200002::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto10200002::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto10200002::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto10200002::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Proto10200002::type() const {
  return type_;
}
inline void Proto10200002::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 voice_len = 3;
inline bool Proto10200002::has_voice_len() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto10200002::set_has_voice_len() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto10200002::clear_has_voice_len() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto10200002::clear_voice_len() {
  voice_len_ = 0;
  clear_has_voice_len();
}
inline ::google::protobuf::int32 Proto10200002::voice_len() const {
  return voice_len_;
}
inline void Proto10200002::set_voice_len(::google::protobuf::int32 value) {
  set_has_voice_len();
  voice_len_ = value;
}

// optional string wcontent = 4;
inline bool Proto10200002::has_wcontent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto10200002::set_has_wcontent() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto10200002::clear_has_wcontent() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto10200002::clear_wcontent() {
  if (wcontent_ != &::google::protobuf::internal::kEmptyString) {
    wcontent_->clear();
  }
  clear_has_wcontent();
}
inline const ::std::string& Proto10200002::wcontent() const {
  return *wcontent_;
}
inline void Proto10200002::set_wcontent(const ::std::string& value) {
  set_has_wcontent();
  if (wcontent_ == &::google::protobuf::internal::kEmptyString) {
    wcontent_ = new ::std::string;
  }
  wcontent_->assign(value);
}
inline void Proto10200002::set_wcontent(const char* value) {
  set_has_wcontent();
  if (wcontent_ == &::google::protobuf::internal::kEmptyString) {
    wcontent_ = new ::std::string;
  }
  wcontent_->assign(value);
}
inline void Proto10200002::set_wcontent(const char* value, size_t size) {
  set_has_wcontent();
  if (wcontent_ == &::google::protobuf::internal::kEmptyString) {
    wcontent_ = new ::std::string;
  }
  wcontent_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10200002::mutable_wcontent() {
  set_has_wcontent();
  if (wcontent_ == &::google::protobuf::internal::kEmptyString) {
    wcontent_ = new ::std::string;
  }
  return wcontent_;
}
inline ::std::string* Proto10200002::release_wcontent() {
  clear_has_wcontent();
  if (wcontent_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = wcontent_;
    wcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes vcontent = 5;
inline bool Proto10200002::has_vcontent() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto10200002::set_has_vcontent() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto10200002::clear_has_vcontent() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto10200002::clear_vcontent() {
  if (vcontent_ != &::google::protobuf::internal::kEmptyString) {
    vcontent_->clear();
  }
  clear_has_vcontent();
}
inline const ::std::string& Proto10200002::vcontent() const {
  return *vcontent_;
}
inline void Proto10200002::set_vcontent(const ::std::string& value) {
  set_has_vcontent();
  if (vcontent_ == &::google::protobuf::internal::kEmptyString) {
    vcontent_ = new ::std::string;
  }
  vcontent_->assign(value);
}
inline void Proto10200002::set_vcontent(const char* value) {
  set_has_vcontent();
  if (vcontent_ == &::google::protobuf::internal::kEmptyString) {
    vcontent_ = new ::std::string;
  }
  vcontent_->assign(value);
}
inline void Proto10200002::set_vcontent(const void* value, size_t size) {
  set_has_vcontent();
  if (vcontent_ == &::google::protobuf::internal::kEmptyString) {
    vcontent_ = new ::std::string;
  }
  vcontent_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10200002::mutable_vcontent() {
  set_has_vcontent();
  if (vcontent_ == &::google::protobuf::internal::kEmptyString) {
    vcontent_ = new ::std::string;
  }
  return vcontent_;
}
inline ::std::string* Proto10200002::release_vcontent() {
  clear_has_vcontent();
  if (vcontent_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = vcontent_;
    vcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// Proto10200003

// optional int64 dst_role_id = 1;
inline bool Proto10200003::has_dst_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto10200003::set_has_dst_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto10200003::clear_has_dst_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto10200003::clear_dst_role_id() {
  dst_role_id_ = GOOGLE_LONGLONG(0);
  clear_has_dst_role_id();
}
inline ::google::protobuf::int64 Proto10200003::dst_role_id() const {
  return dst_role_id_;
}
inline void Proto10200003::set_dst_role_id(::google::protobuf::int64 value) {
  set_has_dst_role_id();
  dst_role_id_ = value;
}

// optional int32 type = 2;
inline bool Proto10200003::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto10200003::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto10200003::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto10200003::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Proto10200003::type() const {
  return type_;
}
inline void Proto10200003::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 voice_len = 3;
inline bool Proto10200003::has_voice_len() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto10200003::set_has_voice_len() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto10200003::clear_has_voice_len() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto10200003::clear_voice_len() {
  voice_len_ = 0;
  clear_has_voice_len();
}
inline ::google::protobuf::int32 Proto10200003::voice_len() const {
  return voice_len_;
}
inline void Proto10200003::set_voice_len(::google::protobuf::int32 value) {
  set_has_voice_len();
  voice_len_ = value;
}

// optional string wcontent = 4;
inline bool Proto10200003::has_wcontent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto10200003::set_has_wcontent() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto10200003::clear_has_wcontent() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto10200003::clear_wcontent() {
  if (wcontent_ != &::google::protobuf::internal::kEmptyString) {
    wcontent_->clear();
  }
  clear_has_wcontent();
}
inline const ::std::string& Proto10200003::wcontent() const {
  return *wcontent_;
}
inline void Proto10200003::set_wcontent(const ::std::string& value) {
  set_has_wcontent();
  if (wcontent_ == &::google::protobuf::internal::kEmptyString) {
    wcontent_ = new ::std::string;
  }
  wcontent_->assign(value);
}
inline void Proto10200003::set_wcontent(const char* value) {
  set_has_wcontent();
  if (wcontent_ == &::google::protobuf::internal::kEmptyString) {
    wcontent_ = new ::std::string;
  }
  wcontent_->assign(value);
}
inline void Proto10200003::set_wcontent(const char* value, size_t size) {
  set_has_wcontent();
  if (wcontent_ == &::google::protobuf::internal::kEmptyString) {
    wcontent_ = new ::std::string;
  }
  wcontent_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10200003::mutable_wcontent() {
  set_has_wcontent();
  if (wcontent_ == &::google::protobuf::internal::kEmptyString) {
    wcontent_ = new ::std::string;
  }
  return wcontent_;
}
inline ::std::string* Proto10200003::release_wcontent() {
  clear_has_wcontent();
  if (wcontent_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = wcontent_;
    wcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes vcontent = 5;
inline bool Proto10200003::has_vcontent() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto10200003::set_has_vcontent() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto10200003::clear_has_vcontent() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto10200003::clear_vcontent() {
  if (vcontent_ != &::google::protobuf::internal::kEmptyString) {
    vcontent_->clear();
  }
  clear_has_vcontent();
}
inline const ::std::string& Proto10200003::vcontent() const {
  return *vcontent_;
}
inline void Proto10200003::set_vcontent(const ::std::string& value) {
  set_has_vcontent();
  if (vcontent_ == &::google::protobuf::internal::kEmptyString) {
    vcontent_ = new ::std::string;
  }
  vcontent_->assign(value);
}
inline void Proto10200003::set_vcontent(const char* value) {
  set_has_vcontent();
  if (vcontent_ == &::google::protobuf::internal::kEmptyString) {
    vcontent_ = new ::std::string;
  }
  vcontent_->assign(value);
}
inline void Proto10200003::set_vcontent(const void* value, size_t size) {
  set_has_vcontent();
  if (vcontent_ == &::google::protobuf::internal::kEmptyString) {
    vcontent_ = new ::std::string;
  }
  vcontent_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto10200003::mutable_vcontent() {
  set_has_vcontent();
  if (vcontent_ == &::google::protobuf::internal::kEmptyString) {
    vcontent_ = new ::std::string;
  }
  return vcontent_;
}
inline ::std::string* Proto10200003::release_vcontent() {
  clear_has_vcontent();
  if (vcontent_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = vcontent_;
    vcontent_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// Proto10200004

// optional int32 time_offset = 1;
inline bool Proto10200004::has_time_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto10200004::set_has_time_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto10200004::clear_has_time_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto10200004::clear_time_offset() {
  time_offset_ = 0;
  clear_has_time_offset();
}
inline ::google::protobuf::int32 Proto10200004::time_offset() const {
  return time_offset_;
}
inline void Proto10200004::set_time_offset(::google::protobuf::int32 value) {
  set_has_time_offset();
  time_offset_ = value;
}

// -------------------------------------------------------------------

// Proto11400002

// optional int32 pack_type = 1;
inline bool Proto11400002::has_pack_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto11400002::set_has_pack_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto11400002::clear_has_pack_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto11400002::clear_pack_type() {
  pack_type_ = 0;
  clear_has_pack_type();
}
inline ::google::protobuf::int32 Proto11400002::pack_type() const {
  return pack_type_;
}
inline void Proto11400002::set_pack_type(::google::protobuf::int32 value) {
  set_has_pack_type();
  pack_type_ = value;
}

// optional int32 goods_id = 2;
inline bool Proto11400002::has_goods_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto11400002::set_has_goods_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto11400002::clear_has_goods_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto11400002::clear_goods_id() {
  goods_id_ = 0;
  clear_has_goods_id();
}
inline ::google::protobuf::int32 Proto11400002::goods_id() const {
  return goods_id_;
}
inline void Proto11400002::set_goods_id(::google::protobuf::int32 value) {
  set_has_goods_id();
  goods_id_ = value;
}

// optional int32 index = 3;
inline bool Proto11400002::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto11400002::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto11400002::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto11400002::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 Proto11400002::index() const {
  return index_;
}
inline void Proto11400002::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 channel = 4;
inline bool Proto11400002::has_channel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto11400002::set_has_channel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto11400002::clear_has_channel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto11400002::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::google::protobuf::int32 Proto11400002::channel() const {
  return channel_;
}
inline void Proto11400002::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
}

// optional int32 type = 5;
inline bool Proto11400002::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto11400002::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto11400002::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto11400002::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Proto11400002::type() const {
  return type_;
}
inline void Proto11400002::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int64 roleID = 6;
inline bool Proto11400002::has_roleid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto11400002::set_has_roleid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto11400002::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto11400002::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::int64 Proto11400002::roleid() const {
  return roleid_;
}
inline void Proto11400002::set_roleid(::google::protobuf::int64 value) {
  set_has_roleid();
  roleid_ = value;
}

// optional int64 pet_id = 7;
inline bool Proto11400002::has_pet_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Proto11400002::set_has_pet_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Proto11400002::clear_has_pet_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Proto11400002::clear_pet_id() {
  pet_id_ = GOOGLE_LONGLONG(0);
  clear_has_pet_id();
}
inline ::google::protobuf::int64 Proto11400002::pet_id() const {
  return pet_id_;
}
inline void Proto11400002::set_pet_id(::google::protobuf::int64 value) {
  set_has_pet_id();
  pet_id_ = value;
}

// -------------------------------------------------------------------

// Proto11400001

// optional string content = 1;
inline bool Proto11400001::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto11400001::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto11400001::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto11400001::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& Proto11400001::content() const {
  return *content_;
}
inline void Proto11400001::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void Proto11400001::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void Proto11400001::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto11400001::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* Proto11400001::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// Proto50200004

// repeated .ProtoChatInfo content = 1;
inline int Proto50200004::content_size() const {
  return content_.size();
}
inline void Proto50200004::clear_content() {
  content_.Clear();
}
inline const ::ProtoChatInfo& Proto50200004::content(int index) const {
  return content_.Get(index);
}
inline ::ProtoChatInfo* Proto50200004::mutable_content(int index) {
  return content_.Mutable(index);
}
inline ::ProtoChatInfo* Proto50200004::add_content() {
  return content_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >&
Proto50200004::content() const {
  return content_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >*
Proto50200004::mutable_content() {
  return &content_;
}

// -------------------------------------------------------------------

// Proto80200001

// repeated .ProtoChatInfo content = 1;
inline int Proto80200001::content_size() const {
  return content_.size();
}
inline void Proto80200001::clear_content() {
  content_.Clear();
}
inline const ::ProtoChatInfo& Proto80200001::content(int index) const {
  return content_.Get(index);
}
inline ::ProtoChatInfo* Proto80200001::mutable_content(int index) {
  return content_.Mutable(index);
}
inline ::ProtoChatInfo* Proto80200001::add_content() {
  return content_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >&
Proto80200001::content() const {
  return content_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >*
Proto80200001::mutable_content() {
  return &content_;
}

// -------------------------------------------------------------------

// Proto80200002

// repeated .ProtoChatInfo content = 1;
inline int Proto80200002::content_size() const {
  return content_.size();
}
inline void Proto80200002::clear_content() {
  content_.Clear();
}
inline const ::ProtoChatInfo& Proto80200002::content(int index) const {
  return content_.Get(index);
}
inline ::ProtoChatInfo* Proto80200002::mutable_content(int index) {
  return content_.Mutable(index);
}
inline ::ProtoChatInfo* Proto80200002::add_content() {
  return content_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >&
Proto80200002::content() const {
  return content_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >*
Proto80200002::mutable_content() {
  return &content_;
}

// -------------------------------------------------------------------

// Proto80200003

// repeated .ProtoChatInfo content = 1;
inline int Proto80200003::content_size() const {
  return content_.size();
}
inline void Proto80200003::clear_content() {
  content_.Clear();
}
inline const ::ProtoChatInfo& Proto80200003::content(int index) const {
  return content_.Get(index);
}
inline ::ProtoChatInfo* Proto80200003::mutable_content(int index) {
  return content_.Mutable(index);
}
inline ::ProtoChatInfo* Proto80200003::add_content() {
  return content_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >&
Proto80200003::content() const {
  return content_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >*
Proto80200003::mutable_content() {
  return &content_;
}

// -------------------------------------------------------------------

// Proto10200005

// optional int64 peer_role_id = 1;
inline bool Proto10200005::has_peer_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto10200005::set_has_peer_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto10200005::clear_has_peer_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto10200005::clear_peer_role_id() {
  peer_role_id_ = GOOGLE_LONGLONG(0);
  clear_has_peer_role_id();
}
inline ::google::protobuf::int64 Proto10200005::peer_role_id() const {
  return peer_role_id_;
}
inline void Proto10200005::set_peer_role_id(::google::protobuf::int64 value) {
  set_has_peer_role_id();
  peer_role_id_ = value;
}

// optional int32 time_offset = 2;
inline bool Proto10200005::has_time_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto10200005::set_has_time_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto10200005::clear_has_time_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto10200005::clear_time_offset() {
  time_offset_ = 0;
  clear_has_time_offset();
}
inline ::google::protobuf::int32 Proto10200005::time_offset() const {
  return time_offset_;
}
inline void Proto10200005::set_time_offset(::google::protobuf::int32 value) {
  set_has_time_offset();
  time_offset_ = value;
}

// -------------------------------------------------------------------

// Proto50200005

// repeated .ProtoChatInfo content = 1;
inline int Proto50200005::content_size() const {
  return content_.size();
}
inline void Proto50200005::clear_content() {
  content_.Clear();
}
inline const ::ProtoChatInfo& Proto50200005::content(int index) const {
  return content_.Get(index);
}
inline ::ProtoChatInfo* Proto50200005::mutable_content(int index) {
  return content_.Mutable(index);
}
inline ::ProtoChatInfo* Proto50200005::add_content() {
  return content_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >&
Proto50200005::content() const {
  return content_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoChatInfo >*
Proto50200005::mutable_content() {
  return &content_;
}

// -------------------------------------------------------------------

// Proto10200006

// optional int32 channel = 1;
inline bool Proto10200006::has_channel() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto10200006::set_has_channel() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto10200006::clear_has_channel() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto10200006::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::google::protobuf::int32 Proto10200006::channel() const {
  return channel_;
}
inline void Proto10200006::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
}

// optional int64 voice_id = 2;
inline bool Proto10200006::has_voice_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto10200006::set_has_voice_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto10200006::clear_has_voice_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto10200006::clear_voice_id() {
  voice_id_ = GOOGLE_LONGLONG(0);
  clear_has_voice_id();
}
inline ::google::protobuf::int64 Proto10200006::voice_id() const {
  return voice_id_;
}
inline void Proto10200006::set_voice_id(::google::protobuf::int64 value) {
  set_has_voice_id();
  voice_id_ = value;
}

// -------------------------------------------------------------------

// Proto50200006

// optional int64 voice_id = 1;
inline bool Proto50200006::has_voice_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto50200006::set_has_voice_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto50200006::clear_has_voice_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto50200006::clear_voice_id() {
  voice_id_ = GOOGLE_LONGLONG(0);
  clear_has_voice_id();
}
inline ::google::protobuf::int64 Proto50200006::voice_id() const {
  return voice_id_;
}
inline void Proto50200006::set_voice_id(::google::protobuf::int64 value) {
  set_has_voice_id();
  voice_id_ = value;
}

// optional bytes content = 2;
inline bool Proto50200006::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto50200006::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto50200006::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto50200006::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& Proto50200006::content() const {
  return *content_;
}
inline void Proto50200006::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void Proto50200006::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void Proto50200006::set_content(const void* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Proto50200006::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* Proto50200006::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 voice_length = 3;
inline bool Proto50200006::has_voice_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto50200006::set_has_voice_length() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto50200006::clear_has_voice_length() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto50200006::clear_voice_length() {
  voice_length_ = 0;
  clear_has_voice_length();
}
inline ::google::protobuf::int32 Proto50200006::voice_length() const {
  return voice_length_;
}
inline void Proto50200006::set_voice_length(::google::protobuf::int32 value) {
  set_has_voice_length();
  voice_length_ = value;
}

// -------------------------------------------------------------------

// Proto11400101

// optional int32 pack_type = 1;
inline bool Proto11400101::has_pack_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto11400101::set_has_pack_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto11400101::clear_has_pack_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto11400101::clear_pack_type() {
  pack_type_ = 0;
  clear_has_pack_type();
}
inline ::google::protobuf::int32 Proto11400101::pack_type() const {
  return pack_type_;
}
inline void Proto11400101::set_pack_type(::google::protobuf::int32 value) {
  set_has_pack_type();
  pack_type_ = value;
}

// -------------------------------------------------------------------

// Proto11400102

// optional int32 pack_type = 1;
inline bool Proto11400102::has_pack_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto11400102::set_has_pack_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto11400102::clear_has_pack_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto11400102::clear_pack_type() {
  pack_type_ = 0;
  clear_has_pack_type();
}
inline ::google::protobuf::int32 Proto11400102::pack_type() const {
  return pack_type_;
}
inline void Proto11400102::set_pack_type(::google::protobuf::int32 value) {
  set_has_pack_type();
  pack_type_ = value;
}

// optional int32 index = 2;
inline bool Proto11400102::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto11400102::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto11400102::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto11400102::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 Proto11400102::index() const {
  return index_;
}
inline void Proto11400102::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// Proto11400103

// optional int32 pack_type = 1;
inline bool Proto11400103::has_pack_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto11400103::set_has_pack_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto11400103::clear_has_pack_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto11400103::clear_pack_type() {
  pack_type_ = 0;
  clear_has_pack_type();
}
inline ::google::protobuf::int32 Proto11400103::pack_type() const {
  return pack_type_;
}
inline void Proto11400103::set_pack_type(::google::protobuf::int32 value) {
  set_has_pack_type();
  pack_type_ = value;
}

// optional int32 index = 2;
inline bool Proto11400103::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto11400103::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto11400103::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto11400103::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 Proto11400103::index() const {
  return index_;
}
inline void Proto11400103::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// Proto11400104

// optional int32 pack_type = 1;
inline bool Proto11400104::has_pack_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto11400104::set_has_pack_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto11400104::clear_has_pack_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto11400104::clear_pack_type() {
  pack_type_ = 0;
  clear_has_pack_type();
}
inline ::google::protobuf::int32 Proto11400104::pack_type() const {
  return pack_type_;
}
inline void Proto11400104::set_pack_type(::google::protobuf::int32 value) {
  set_has_pack_type();
  pack_type_ = value;
}

// optional int32 remove = 2;
inline bool Proto11400104::has_remove() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto11400104::set_has_remove() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto11400104::clear_has_remove() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto11400104::clear_remove() {
  remove_ = 0;
  clear_has_remove();
}
inline ::google::protobuf::int32 Proto11400104::remove() const {
  return remove_;
}
inline void Proto11400104::set_remove(::google::protobuf::int32 value) {
  set_has_remove();
  remove_ = value;
}

// -------------------------------------------------------------------

// Proto11400105

// optional int32 pack_type = 1;
inline bool Proto11400105::has_pack_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto11400105::set_has_pack_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto11400105::clear_has_pack_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto11400105::clear_pack_type() {
  pack_type_ = 0;
  clear_has_pack_type();
}
inline ::google::protobuf::int32 Proto11400105::pack_type() const {
  return pack_type_;
}
inline void Proto11400105::set_pack_type(::google::protobuf::int32 value) {
  set_has_pack_type();
  pack_type_ = value;
}

// optional int32 index_from = 2;
inline bool Proto11400105::has_index_from() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto11400105::set_has_index_from() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto11400105::clear_has_index_from() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto11400105::clear_index_from() {
  index_from_ = 0;
  clear_has_index_from();
}
inline ::google::protobuf::int32 Proto11400105::index_from() const {
  return index_from_;
}
inline void Proto11400105::set_index_from(::google::protobuf::int32 value) {
  set_has_index_from();
  index_from_ = value;
}

// optional int32 index_to = 3;
inline bool Proto11400105::has_index_to() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto11400105::set_has_index_to() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto11400105::clear_has_index_to() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto11400105::clear_index_to() {
  index_to_ = 0;
  clear_has_index_to();
}
inline ::google::protobuf::int32 Proto11400105::index_to() const {
  return index_to_;
}
inline void Proto11400105::set_index_to(::google::protobuf::int32 value) {
  set_has_index_to();
  index_to_ = value;
}

// optional int32 ignore_bind = 4;
inline bool Proto11400105::has_ignore_bind() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto11400105::set_has_ignore_bind() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto11400105::clear_has_ignore_bind() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto11400105::clear_ignore_bind() {
  ignore_bind_ = 0;
  clear_has_ignore_bind();
}
inline ::google::protobuf::int32 Proto11400105::ignore_bind() const {
  return ignore_bind_;
}
inline void Proto11400105::set_ignore_bind(::google::protobuf::int32 value) {
  set_has_ignore_bind();
  ignore_bind_ = value;
}

// -------------------------------------------------------------------

// Proto11400106

// optional int32 index = 1;
inline bool Proto11400106::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto11400106::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto11400106::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto11400106::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 Proto11400106::index() const {
  return index_;
}
inline void Proto11400106::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 amount = 2;
inline bool Proto11400106::has_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto11400106::set_has_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto11400106::clear_has_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto11400106::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google::protobuf::int32 Proto11400106::amount() const {
  return amount_;
}
inline void Proto11400106::set_amount(::google::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
}

// -------------------------------------------------------------------

// Proto11400107

// optional int32 pack_type = 1;
inline bool Proto11400107::has_pack_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto11400107::set_has_pack_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto11400107::clear_has_pack_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto11400107::clear_pack_type() {
  pack_type_ = 0;
  clear_has_pack_type();
}
inline ::google::protobuf::int32 Proto11400107::pack_type() const {
  return pack_type_;
}
inline void Proto11400107::set_pack_type(::google::protobuf::int32 value) {
  set_has_pack_type();
  pack_type_ = value;
}

// optional int32 index = 2;
inline bool Proto11400107::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto11400107::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto11400107::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto11400107::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 Proto11400107::index() const {
  return index_;
}
inline void Proto11400107::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// Proto11400110

// optional int32 index = 1;
inline bool Proto11400110::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto11400110::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto11400110::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto11400110::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 Proto11400110::index() const {
  return index_;
}
inline void Proto11400110::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 amount = 2;
inline bool Proto11400110::has_amount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto11400110::set_has_amount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto11400110::clear_has_amount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto11400110::clear_amount() {
  amount_ = 0;
  clear_has_amount();
}
inline ::google::protobuf::int32 Proto11400110::amount() const {
  return amount_;
}
inline void Proto11400110::set_amount(::google::protobuf::int32 value) {
  set_has_amount();
  amount_ = value;
}

// optional int32 pack_type = 3;
inline bool Proto11400110::has_pack_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto11400110::set_has_pack_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto11400110::clear_has_pack_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto11400110::clear_pack_type() {
  pack_type_ = 0;
  clear_has_pack_type();
}
inline ::google::protobuf::int32 Proto11400110::pack_type() const {
  return pack_type_;
}
inline void Proto11400110::set_pack_type(::google::protobuf::int32 value) {
  set_has_pack_type();
  pack_type_ = value;
}

// -------------------------------------------------------------------

// Proto51400101

// optional int32 pack_type = 1;
inline bool Proto51400101::has_pack_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto51400101::set_has_pack_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto51400101::clear_has_pack_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto51400101::clear_pack_type() {
  pack_type_ = 0;
  clear_has_pack_type();
}
inline ::google::protobuf::int32 Proto51400101::pack_type() const {
  return pack_type_;
}
inline void Proto51400101::set_pack_type(::google::protobuf::int32 value) {
  set_has_pack_type();
  pack_type_ = value;
}

// optional int32 pack_size = 2;
inline bool Proto51400101::has_pack_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto51400101::set_has_pack_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto51400101::clear_has_pack_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto51400101::clear_pack_size() {
  pack_size_ = 0;
  clear_has_pack_size();
}
inline ::google::protobuf::int32 Proto51400101::pack_size() const {
  return pack_size_;
}
inline void Proto51400101::set_pack_size(::google::protobuf::int32 value) {
  set_has_pack_size();
  pack_size_ = value;
}

// repeated .ProtoItem item_list = 3;
inline int Proto51400101::item_list_size() const {
  return item_list_.size();
}
inline void Proto51400101::clear_item_list() {
  item_list_.Clear();
}
inline const ::ProtoItem& Proto51400101::item_list(int index) const {
  return item_list_.Get(index);
}
inline ::ProtoItem* Proto51400101::mutable_item_list(int index) {
  return item_list_.Mutable(index);
}
inline ::ProtoItem* Proto51400101::add_item_list() {
  return item_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoItem >&
Proto51400101::item_list() const {
  return item_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoItem >*
Proto51400101::mutable_item_list() {
  return &item_list_;
}

// repeated .ProtoSuit suit_info = 4;
inline int Proto51400101::suit_info_size() const {
  return suit_info_.size();
}
inline void Proto51400101::clear_suit_info() {
  suit_info_.Clear();
}
inline const ::ProtoSuit& Proto51400101::suit_info(int index) const {
  return suit_info_.Get(index);
}
inline ::ProtoSuit* Proto51400101::mutable_suit_info(int index) {
  return suit_info_.Mutable(index);
}
inline ::ProtoSuit* Proto51400101::add_suit_info() {
  return suit_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoSuit >&
Proto51400101::suit_info() const {
  return suit_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoSuit >*
Proto51400101::mutable_suit_info() {
  return &suit_info_;
}

// optional .ProtoRefineSuit refine_suit = 5;
inline bool Proto51400101::has_refine_suit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto51400101::set_has_refine_suit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto51400101::clear_has_refine_suit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto51400101::clear_refine_suit() {
  if (refine_suit_ != NULL) refine_suit_->::ProtoRefineSuit::Clear();
  clear_has_refine_suit();
}
inline const ::ProtoRefineSuit& Proto51400101::refine_suit() const {
  return refine_suit_ != NULL ? *refine_suit_ : *default_instance_->refine_suit_;
}
inline ::ProtoRefineSuit* Proto51400101::mutable_refine_suit() {
  set_has_refine_suit();
  if (refine_suit_ == NULL) refine_suit_ = new ::ProtoRefineSuit;
  return refine_suit_;
}
inline ::ProtoRefineSuit* Proto51400101::release_refine_suit() {
  clear_has_refine_suit();
  ::ProtoRefineSuit* temp = refine_suit_;
  refine_suit_ = NULL;
  return temp;
}

// repeated int32 strengthen = 6;
inline int Proto51400101::strengthen_size() const {
  return strengthen_.size();
}
inline void Proto51400101::clear_strengthen() {
  strengthen_.Clear();
}
inline ::google::protobuf::int32 Proto51400101::strengthen(int index) const {
  return strengthen_.Get(index);
}
inline void Proto51400101::set_strengthen(int index, ::google::protobuf::int32 value) {
  strengthen_.Set(index, value);
}
inline void Proto51400101::add_strengthen(::google::protobuf::int32 value) {
  strengthen_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Proto51400101::strengthen() const {
  return strengthen_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Proto51400101::mutable_strengthen() {
  return &strengthen_;
}

// -------------------------------------------------------------------

// Proto51400102

// optional int32 index = 1;
inline bool Proto51400102::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto51400102::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto51400102::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto51400102::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 Proto51400102::index() const {
  return index_;
}
inline void Proto51400102::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// optional int32 gold_cost = 2;
inline bool Proto51400102::has_gold_cost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto51400102::set_has_gold_cost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto51400102::clear_has_gold_cost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto51400102::clear_gold_cost() {
  gold_cost_ = 0;
  clear_has_gold_cost();
}
inline ::google::protobuf::int32 Proto51400102::gold_cost() const {
  return gold_cost_;
}
inline void Proto51400102::set_gold_cost(::google::protobuf::int32 value) {
  set_has_gold_cost();
  gold_cost_ = value;
}

// optional int32 left_time = 3;
inline bool Proto51400102::has_left_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto51400102::set_has_left_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto51400102::clear_has_left_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto51400102::clear_left_time() {
  left_time_ = 0;
  clear_has_left_time();
}
inline ::google::protobuf::int32 Proto51400102::left_time() const {
  return left_time_;
}
inline void Proto51400102::set_left_time(::google::protobuf::int32 value) {
  set_has_left_time();
  left_time_ = value;
}

// optional int32 total_time = 4;
inline bool Proto51400102::has_total_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto51400102::set_has_total_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto51400102::clear_has_total_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto51400102::clear_total_time() {
  total_time_ = 0;
  clear_has_total_time();
}
inline ::google::protobuf::int32 Proto51400102::total_time() const {
  return total_time_;
}
inline void Proto51400102::set_total_time(::google::protobuf::int32 value) {
  set_has_total_time();
  total_time_ = value;
}

// optional int32 add_exp = 5;
inline bool Proto51400102::has_add_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto51400102::set_has_add_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto51400102::clear_has_add_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto51400102::clear_add_exp() {
  add_exp_ = 0;
  clear_has_add_exp();
}
inline ::google::protobuf::int32 Proto51400102::add_exp() const {
  return add_exp_;
}
inline void Proto51400102::set_add_exp(::google::protobuf::int32 value) {
  set_has_add_exp();
  add_exp_ = value;
}

// -------------------------------------------------------------------

// Proto51400103

// optional int32 gold_cost = 1;
inline bool Proto51400103::has_gold_cost() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto51400103::set_has_gold_cost() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto51400103::clear_has_gold_cost() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto51400103::clear_gold_cost() {
  gold_cost_ = 0;
  clear_has_gold_cost();
}
inline ::google::protobuf::int32 Proto51400103::gold_cost() const {
  return gold_cost_;
}
inline void Proto51400103::set_gold_cost(::google::protobuf::int32 value) {
  set_has_gold_cost();
  gold_cost_ = value;
}

// optional int32 pack_size = 2;
inline bool Proto51400103::has_pack_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto51400103::set_has_pack_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto51400103::clear_has_pack_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto51400103::clear_pack_size() {
  pack_size_ = 0;
  clear_has_pack_size();
}
inline ::google::protobuf::int32 Proto51400103::pack_size() const {
  return pack_size_;
}
inline void Proto51400103::set_pack_size(::google::protobuf::int32 value) {
  set_has_pack_size();
  pack_size_ = value;
}

// -------------------------------------------------------------------

// Proto51400106

// optional int32 item_id = 1;
inline bool Proto51400106::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto51400106::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto51400106::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto51400106::clear_item_id() {
  item_id_ = 0;
  clear_has_item_id();
}
inline ::google::protobuf::int32 Proto51400106::item_id() const {
  return item_id_;
}
inline void Proto51400106::set_item_id(::google::protobuf::int32 value) {
  set_has_item_id();
  item_id_ = value;
}

// optional int32 tips_flag = 2;
inline bool Proto51400106::has_tips_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto51400106::set_has_tips_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto51400106::clear_has_tips_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto51400106::clear_tips_flag() {
  tips_flag_ = 0;
  clear_has_tips_flag();
}
inline ::google::protobuf::int32 Proto51400106::tips_flag() const {
  return tips_flag_;
}
inline void Proto51400106::set_tips_flag(::google::protobuf::int32 value) {
  set_has_tips_flag();
  tips_flag_ = value;
}

// -------------------------------------------------------------------

// Proto81400102

// optional int32 pack_type = 1;
inline bool Proto81400102::has_pack_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto81400102::set_has_pack_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto81400102::clear_has_pack_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto81400102::clear_pack_type() {
  pack_type_ = 0;
  clear_has_pack_type();
}
inline ::google::protobuf::int32 Proto81400102::pack_type() const {
  return pack_type_;
}
inline void Proto81400102::set_pack_type(::google::protobuf::int32 value) {
  set_has_pack_type();
  pack_type_ = value;
}

// repeated .ProtoDelItem del_item_list = 2;
inline int Proto81400102::del_item_list_size() const {
  return del_item_list_.size();
}
inline void Proto81400102::clear_del_item_list() {
  del_item_list_.Clear();
}
inline const ::ProtoDelItem& Proto81400102::del_item_list(int index) const {
  return del_item_list_.Get(index);
}
inline ::ProtoDelItem* Proto81400102::mutable_del_item_list(int index) {
  return del_item_list_.Mutable(index);
}
inline ::ProtoDelItem* Proto81400102::add_del_item_list() {
  return del_item_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoDelItem >&
Proto81400102::del_item_list() const {
  return del_item_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoDelItem >*
Proto81400102::mutable_del_item_list() {
  return &del_item_list_;
}

// -------------------------------------------------------------------

// Proto81400101

// optional int32 pack_type = 1;
inline bool Proto81400101::has_pack_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto81400101::set_has_pack_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto81400101::clear_has_pack_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto81400101::clear_pack_type() {
  pack_type_ = 0;
  clear_has_pack_type();
}
inline ::google::protobuf::int32 Proto81400101::pack_type() const {
  return pack_type_;
}
inline void Proto81400101::set_pack_type(::google::protobuf::int32 value) {
  set_has_pack_type();
  pack_type_ = value;
}

// repeated .ProtoItem pack_item_list = 2;
inline int Proto81400101::pack_item_list_size() const {
  return pack_item_list_.size();
}
inline void Proto81400101::clear_pack_item_list() {
  pack_item_list_.Clear();
}
inline const ::ProtoItem& Proto81400101::pack_item_list(int index) const {
  return pack_item_list_.Get(index);
}
inline ::ProtoItem* Proto81400101::mutable_pack_item_list(int index) {
  return pack_item_list_.Mutable(index);
}
inline ::ProtoItem* Proto81400101::add_pack_item_list() {
  return pack_item_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoItem >&
Proto81400101::pack_item_list() const {
  return pack_item_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoItem >*
Proto81400101::mutable_pack_item_list() {
  return &pack_item_list_;
}

// -------------------------------------------------------------------

// Proto81400103

// optional int32 gold = 1;
inline bool Proto81400103::has_gold() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto81400103::set_has_gold() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto81400103::clear_has_gold() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto81400103::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 Proto81400103::gold() const {
  return gold_;
}
inline void Proto81400103::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// optional int32 bind_gold = 2;
inline bool Proto81400103::has_bind_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto81400103::set_has_bind_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto81400103::clear_has_bind_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto81400103::clear_bind_gold() {
  bind_gold_ = 0;
  clear_has_bind_gold();
}
inline ::google::protobuf::int32 Proto81400103::bind_gold() const {
  return bind_gold_;
}
inline void Proto81400103::set_bind_gold(::google::protobuf::int32 value) {
  set_has_bind_gold();
  bind_gold_ = value;
}

// optional int32 copper = 3;
inline bool Proto81400103::has_copper() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto81400103::set_has_copper() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto81400103::clear_has_copper() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto81400103::clear_copper() {
  copper_ = 0;
  clear_has_copper();
}
inline ::google::protobuf::int32 Proto81400103::copper() const {
  return copper_;
}
inline void Proto81400103::set_copper(::google::protobuf::int32 value) {
  set_has_copper();
  copper_ = value;
}

// optional int32 bind_copper = 4;
inline bool Proto81400103::has_bind_copper() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Proto81400103::set_has_bind_copper() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Proto81400103::clear_has_bind_copper() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Proto81400103::clear_bind_copper() {
  bind_copper_ = 0;
  clear_has_bind_copper();
}
inline ::google::protobuf::int32 Proto81400103::bind_copper() const {
  return bind_copper_;
}
inline void Proto81400103::set_bind_copper(::google::protobuf::int32 value) {
  set_has_bind_copper();
  bind_copper_ = value;
}

// optional int32 activity_score = 5;
inline bool Proto81400103::has_activity_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Proto81400103::set_has_activity_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Proto81400103::clear_has_activity_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Proto81400103::clear_activity_score() {
  activity_score_ = 0;
  clear_has_activity_score();
}
inline ::google::protobuf::int32 Proto81400103::activity_score() const {
  return activity_score_;
}
inline void Proto81400103::set_activity_score(::google::protobuf::int32 value) {
  set_has_activity_score();
  activity_score_ = value;
}

// optional int32 exploit = 6;
inline bool Proto81400103::has_exploit() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Proto81400103::set_has_exploit() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Proto81400103::clear_has_exploit() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Proto81400103::clear_exploit() {
  exploit_ = 0;
  clear_has_exploit();
}
inline ::google::protobuf::int32 Proto81400103::exploit() const {
  return exploit_;
}
inline void Proto81400103::set_exploit(::google::protobuf::int32 value) {
  set_has_exploit();
  exploit_ = value;
}

// optional int32 reputation = 7;
inline bool Proto81400103::has_reputation() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Proto81400103::set_has_reputation() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Proto81400103::clear_has_reputation() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Proto81400103::clear_reputation() {
  reputation_ = 0;
  clear_has_reputation();
}
inline ::google::protobuf::int32 Proto81400103::reputation() const {
  return reputation_;
}
inline void Proto81400103::set_reputation(::google::protobuf::int32 value) {
  set_has_reputation();
  reputation_ = value;
}

// optional int32 st_score = 8;
inline bool Proto81400103::has_st_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Proto81400103::set_has_st_score() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Proto81400103::clear_has_st_score() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Proto81400103::clear_st_score() {
  st_score_ = 0;
  clear_has_st_score();
}
inline ::google::protobuf::int32 Proto81400103::st_score() const {
  return st_score_;
}
inline void Proto81400103::set_st_score(::google::protobuf::int32 value) {
  set_has_st_score();
  st_score_ = value;
}

// optional int32 reiki = 9;
inline bool Proto81400103::has_reiki() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Proto81400103::set_has_reiki() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Proto81400103::clear_has_reiki() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Proto81400103::clear_reiki() {
  reiki_ = 0;
  clear_has_reiki();
}
inline ::google::protobuf::int32 Proto81400103::reiki() const {
  return reiki_;
}
inline void Proto81400103::set_reiki(::google::protobuf::int32 value) {
  set_has_reiki();
  reiki_ = value;
}

// optional int32 honour = 10;
inline bool Proto81400103::has_honour() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Proto81400103::set_has_honour() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Proto81400103::clear_has_honour() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Proto81400103::clear_honour() {
  honour_ = 0;
  clear_has_honour();
}
inline ::google::protobuf::int32 Proto81400103::honour() const {
  return honour_;
}
inline void Proto81400103::set_honour(::google::protobuf::int32 value) {
  set_has_honour();
  honour_ = value;
}

// optional int32 league_contri = 11;
inline bool Proto81400103::has_league_contri() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Proto81400103::set_has_league_contri() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Proto81400103::clear_has_league_contri() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Proto81400103::clear_league_contri() {
  league_contri_ = 0;
  clear_has_league_contri();
}
inline ::google::protobuf::int32 Proto81400103::league_contri() const {
  return league_contri_;
}
inline void Proto81400103::set_league_contri(::google::protobuf::int32 value) {
  set_has_league_contri();
  league_contri_ = value;
}

// optional int32 spirit = 12;
inline bool Proto81400103::has_spirit() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Proto81400103::set_has_spirit() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Proto81400103::clear_has_spirit() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Proto81400103::clear_spirit() {
  spirit_ = 0;
  clear_has_spirit();
}
inline ::google::protobuf::int32 Proto81400103::spirit() const {
  return spirit_;
}
inline void Proto81400103::set_spirit(::google::protobuf::int32 value) {
  set_has_spirit();
  spirit_ = value;
}

// optional int32 practice = 13;
inline bool Proto81400103::has_practice() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Proto81400103::set_has_practice() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Proto81400103::clear_has_practice() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Proto81400103::clear_practice() {
  practice_ = 0;
  clear_has_practice();
}
inline ::google::protobuf::int32 Proto81400103::practice() const {
  return practice_;
}
inline void Proto81400103::set_practice(::google::protobuf::int32 value) {
  set_has_practice();
  practice_ = value;
}

// -------------------------------------------------------------------

// Proto11400326

// optional int32 task_id = 1;
inline bool Proto11400326::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto11400326::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto11400326::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto11400326::clear_task_id() {
  task_id_ = 0;
  clear_has_task_id();
}
inline ::google::protobuf::int32 Proto11400326::task_id() const {
  return task_id_;
}
inline void Proto11400326::set_task_id(::google::protobuf::int32 value) {
  set_has_task_id();
  task_id_ = value;
}

// -------------------------------------------------------------------

// Proto11400327

// optional int32 task_id = 1;
inline bool Proto11400327::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto11400327::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto11400327::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto11400327::clear_task_id() {
  task_id_ = 0;
  clear_has_task_id();
}
inline ::google::protobuf::int32 Proto11400327::task_id() const {
  return task_id_;
}
inline void Proto11400327::set_task_id(::google::protobuf::int32 value) {
  set_has_task_id();
  task_id_ = value;
}

// -------------------------------------------------------------------

// Proto11400328

// optional int32 task_id = 1;
inline bool Proto11400328::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto11400328::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto11400328::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto11400328::clear_task_id() {
  task_id_ = 0;
  clear_has_task_id();
}
inline ::google::protobuf::int32 Proto11400328::task_id() const {
  return task_id_;
}
inline void Proto11400328::set_task_id(::google::protobuf::int32 value) {
  set_has_task_id();
  task_id_ = value;
}

// optional int32 is_double = 2;
inline bool Proto11400328::has_is_double() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Proto11400328::set_has_is_double() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Proto11400328::clear_has_is_double() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Proto11400328::clear_is_double() {
  is_double_ = 0;
  clear_has_is_double();
}
inline ::google::protobuf::int32 Proto11400328::is_double() const {
  return is_double_;
}
inline void Proto11400328::set_is_double(::google::protobuf::int32 value) {
  set_has_is_double();
  is_double_ = value;
}

// -------------------------------------------------------------------

// Proto11400329

// optional int32 npc_id = 1;
inline bool Proto11400329::has_npc_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto11400329::set_has_npc_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto11400329::clear_has_npc_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto11400329::clear_npc_id() {
  npc_id_ = 0;
  clear_has_npc_id();
}
inline ::google::protobuf::int32 Proto11400329::npc_id() const {
  return npc_id_;
}
inline void Proto11400329::set_npc_id(::google::protobuf::int32 value) {
  set_has_npc_id();
  npc_id_ = value;
}

// -------------------------------------------------------------------

// Proto11400330

// optional int32 task_id = 1;
inline bool Proto11400330::has_task_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Proto11400330::set_has_task_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Proto11400330::clear_has_task_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Proto11400330::clear_task_id() {
  task_id_ = 0;
  clear_has_task_id();
}
inline ::google::protobuf::int32 Proto11400330::task_id() const {
  return task_id_;
}
inline void Proto11400330::set_task_id(::google::protobuf::int32 value) {
  set_has_task_id();
  task_id_ = value;
}

// -------------------------------------------------------------------

// Proto51400325

// repeated .ProtoTaskInfo task_list = 1;
inline int Proto51400325::task_list_size() const {
  return task_list_.size();
}
inline void Proto51400325::clear_task_list() {
  task_list_.Clear();
}
inline const ::ProtoTaskInfo& Proto51400325::task_list(int index) const {
  return task_list_.Get(index);
}
inline ::ProtoTaskInfo* Proto51400325::mutable_task_list(int index) {
  return task_list_.Mutable(index);
}
inline ::ProtoTaskInfo* Proto51400325::add_task_list() {
  return task_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoTaskInfo >&
Proto51400325::task_list() const {
  return task_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoTaskInfo >*
Proto51400325::mutable_task_list() {
  return &task_list_;
}

// repeated int32 task_finish = 2;
inline int Proto51400325::task_finish_size() const {
  return task_finish_.size();
}
inline void Proto51400325::clear_task_finish() {
  task_finish_.Clear();
}
inline ::google::protobuf::int32 Proto51400325::task_finish(int index) const {
  return task_finish_.Get(index);
}
inline void Proto51400325::set_task_finish(int index, ::google::protobuf::int32 value) {
  task_finish_.Set(index, value);
}
inline void Proto51400325::add_task_finish(::google::protobuf::int32 value) {
  task_finish_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Proto51400325::task_finish() const {
  return task_finish_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Proto51400325::mutable_task_finish() {
  return &task_finish_;
}

// optional int32 is_finish_guide = 3;
inline bool Proto51400325::has_is_finish_guide() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Proto51400325::set_has_is_finish_guide() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Proto51400325::clear_has_is_finish_guide() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Proto51400325::clear_is_finish_guide() {
  is_finish_guide_ = 0;
  clear_has_is_finish_guide();
}
inline ::google::protobuf::int32 Proto51400325::is_finish_guide() const {
  return is_finish_guide_;
}
inline void Proto51400325::set_is_finish_guide(::google::protobuf::int32 value) {
  set_has_is_finish_guide();
  is_finish_guide_ = value;
}

// -------------------------------------------------------------------

// Proto51400329

// repeated .ProtoTaskInfo task_list = 1;
inline int Proto51400329::task_list_size() const {
  return task_list_.size();
}
inline void Proto51400329::clear_task_list() {
  task_list_.Clear();
}
inline const ::ProtoTaskInfo& Proto51400329::task_list(int index) const {
  return task_list_.Get(index);
}
inline ::ProtoTaskInfo* Proto51400329::mutable_task_list(int index) {
  return task_list_.Mutable(index);
}
inline ::ProtoTaskInfo* Proto51400329::add_task_list() {
  return task_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoTaskInfo >&
Proto51400329::task_list() const {
  return task_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoTaskInfo >*
Proto51400329::mutable_task_list() {
  return &task_list_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProtoClient001_2eproto__INCLUDED
