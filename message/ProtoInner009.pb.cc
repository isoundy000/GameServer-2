// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoInner009.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto31400044_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400044_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400023_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400023_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400026_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400026_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400045_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400045_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30103102_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30103102_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400454_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400454_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100409_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100409_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100410_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100410_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30600104_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30600104_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400040_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400040_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100606_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100606_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400041_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400041_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400146_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400146_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400410_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400410_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30402401_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30402401_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100243_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100243_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400455_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400455_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400048_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400048_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400914_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400914_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400915_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400915_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400916_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400916_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400049_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400049_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400050_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400050_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400507_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400507_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30102101_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30102101_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30102102_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30102102_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400508_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400508_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400509_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400509_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400510_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400510_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31403102_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31403102_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400117_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400117_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400803_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400803_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400051_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400051_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100231_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100231_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100951_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100951_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400511_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400511_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400512_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400512_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400513_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400513_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400514_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400514_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400027_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400027_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400917_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400917_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400918_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400918_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400052_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400052_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400919_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400919_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30101111_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30101111_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31404011_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31404011_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400053_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400053_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400147_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400147_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400054_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400054_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400411_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400411_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoInner009_2eproto() {
  protobuf_AddDesc_ProtoInner009_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoInner009.proto");
  GOOGLE_CHECK(file != NULL);
  Proto31400044_descriptor_ = file->message_type(0);
  static const int Proto31400044_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400044, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400044, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400044, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400044, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400044, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400044, recogn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400044, time_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400044, slot_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400044, is_all_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400044, column_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400044, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400044, fish_index_),
  };
  Proto31400044_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400044_descriptor_,
      Proto31400044::default_instance_,
      Proto31400044_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400044, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400044, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400044));
  Proto31400023_descriptor_ = file->message_type(1);
  static const int Proto31400023_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400023, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400023, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400023, other_info_),
  };
  Proto31400023_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400023_descriptor_,
      Proto31400023::default_instance_,
      Proto31400023_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400023, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400023, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400023));
  Proto30400026_descriptor_ = file->message_type(2);
  static const int Proto30400026_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400026, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400026, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400026, other_info_),
  };
  Proto30400026_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400026_descriptor_,
      Proto30400026::default_instance_,
      Proto30400026_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400026, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400026, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400026));
  Proto31400045_descriptor_ = file->message_type(3);
  static const int Proto31400045_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400045, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400045, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400045, obj_),
  };
  Proto31400045_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400045_descriptor_,
      Proto31400045::default_instance_,
      Proto31400045_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400045, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400045, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400045));
  Proto30103102_descriptor_ = file->message_type(4);
  static const int Proto30103102_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30103102, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30103102, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30103102, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30103102, sub_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30103102, sub_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30103102, other_info_),
  };
  Proto30103102_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30103102_descriptor_,
      Proto30103102::default_instance_,
      Proto30103102_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30103102, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30103102, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30103102));
  Proto30400454_descriptor_ = file->message_type(5);
  static const int Proto30400454_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400454, flag_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400454, league_index_),
  };
  Proto30400454_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400454_descriptor_,
      Proto30400454::default_instance_,
      Proto30400454_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400454, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400454, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400454));
  Proto30100409_descriptor_ = file->message_type(6);
  static const int Proto30100409_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100409, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100409, other_info_),
  };
  Proto30100409_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100409_descriptor_,
      Proto30100409::default_instance_,
      Proto30100409_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100409, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100409, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100409));
  Proto30100410_descriptor_ = file->message_type(7);
  static const int Proto30100410_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100410, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100410, other_info_),
  };
  Proto30100410_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100410_descriptor_,
      Proto30100410::default_instance_,
      Proto30100410_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100410, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100410, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100410));
  Proto30600104_descriptor_ = file->message_type(8);
  static const int Proto30600104_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30600104, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30600104, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30600104, content_),
  };
  Proto30600104_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30600104_descriptor_,
      Proto30600104::default_instance_,
      Proto30600104_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30600104, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30600104, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30600104));
  Proto30400040_descriptor_ = file->message_type(9);
  static const int Proto30400040_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400040, boss_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400040, coord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400040, scene_id_),
  };
  Proto30400040_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400040_descriptor_,
      Proto30400040::default_instance_,
      Proto30400040_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400040, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400040, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400040));
  Proto30100606_descriptor_ = file->message_type(10);
  static const int Proto30100606_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100606, today_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100606, today_bind_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100606, consum_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100606, consum_bind_gold_),
  };
  Proto30100606_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100606_descriptor_,
      Proto30100606::default_instance_,
      Proto30100606_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100606, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100606, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100606));
  Proto30400041_descriptor_ = file->message_type(11);
  static const int Proto30400041_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400041, icon_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400041, drop_act_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400041, start_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400041, end_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400041, update_tick_),
  };
  Proto30400041_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400041_descriptor_,
      Proto30400041::default_instance_,
      Proto30400041_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400041, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400041, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400041));
  Proto31400146_descriptor_ = file->message_type(12);
  static const int Proto31400146_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400146, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400146, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400146, select_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400146, select_color_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400146, open_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400146, send_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400146, fashion_info_),
  };
  Proto31400146_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400146_descriptor_,
      Proto31400146::default_instance_,
      Proto31400146_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400146, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400146, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400146));
  Proto30400410_descriptor_ = file->message_type(13);
  static const int Proto30400410_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400410, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400410, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400410, open_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400410, notify_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400410, select_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400410, sel_color_id_),
  };
  Proto30400410_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400410_descriptor_,
      Proto30400410::default_instance_,
      Proto30400410_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400410, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400410, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400410));
  Proto30402401_descriptor_ = file->message_type(14);
  static const int Proto30402401_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402401, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402401, item_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402401, receiver_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402401, receiver_name_),
  };
  Proto30402401_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30402401_descriptor_,
      Proto30402401::default_instance_,
      Proto30402401_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402401, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30402401, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30402401));
  Proto30100243_descriptor_ = file->message_type(15);
  static const int Proto30100243_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100243, league_index_),
  };
  Proto30100243_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100243_descriptor_,
      Proto30100243::default_instance_,
      Proto30100243_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100243, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100243, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100243));
  Proto30400455_descriptor_ = file->message_type(16);
  static const int Proto30400455_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400455, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400455, name_),
  };
  Proto30400455_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400455_descriptor_,
      Proto30400455::default_instance_,
      Proto30400455_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400455, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400455, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400455));
  Proto31400048_descriptor_ = file->message_type(17);
  static const int Proto31400048_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400048, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400048, other_info_),
  };
  Proto31400048_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400048_descriptor_,
      Proto31400048::default_instance_,
      Proto31400048_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400048, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400048, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400048));
  Proto30400914_descriptor_ = file->message_type(18);
  static const int Proto30400914_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400914, role_id_),
  };
  Proto30400914_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400914_descriptor_,
      Proto30400914::default_instance_,
      Proto30400914_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400914, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400914, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400914));
  Proto30400915_descriptor_ = file->message_type(19);
  static const int Proto30400915_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400915, prev_scene_id_),
  };
  Proto30400915_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400915_descriptor_,
      Proto30400915::default_instance_,
      Proto30400915_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400915, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400915, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400915));
  Proto30400916_descriptor_ = file->message_type(20);
  static const int Proto30400916_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400916, state_),
  };
  Proto30400916_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400916_descriptor_,
      Proto30400916::default_instance_,
      Proto30400916_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400916, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400916, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400916));
  Proto31400049_descriptor_ = file->message_type(21);
  static const int Proto31400049_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400049, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400049, other_info_),
  };
  Proto31400049_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400049_descriptor_,
      Proto31400049::default_instance_,
      Proto31400049_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400049, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400049, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400049));
  Proto31400050_descriptor_ = file->message_type(22);
  static const int Proto31400050_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400050, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400050, operate_),
  };
  Proto31400050_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400050_descriptor_,
      Proto31400050::default_instance_,
      Proto31400050_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400050, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400050, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400050));
  Proto30400507_descriptor_ = file->message_type(23);
  static const int Proto30400507_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400507, rank_info_),
  };
  Proto30400507_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400507_descriptor_,
      Proto30400507::default_instance_,
      Proto30400507_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400507, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400507, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400507));
  Proto30102101_descriptor_ = file->message_type(24);
  static const int Proto30102101_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102101, buff_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102101, buff_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102101, from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102101, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102101, other_info_),
  };
  Proto30102101_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30102101_descriptor_,
      Proto30102101::default_instance_,
      Proto30102101_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102101, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102101, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30102101));
  Proto30102102_descriptor_ = file->message_type(25);
  static const int Proto30102102_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102102, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102102, other_info_),
  };
  Proto30102102_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30102102_descriptor_,
      Proto30102102::default_instance_,
      Proto30102102_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102102, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30102102, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30102102));
  Proto30400508_descriptor_ = file->message_type(26);
  static const int Proto30400508_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400508, label_get_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400508, reward_get_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400508, left_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400508, label_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400508, rank_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400508, page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400508, role_id_),
  };
  Proto30400508_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400508_descriptor_,
      Proto30400508::default_instance_,
      Proto30400508_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400508, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400508, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400508));
  Proto30400509_descriptor_ = file->message_type(27);
  static const int Proto30400509_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400509, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400509, player1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400509, player2_),
  };
  Proto30400509_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400509_descriptor_,
      Proto30400509::default_instance_,
      Proto30400509_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400509, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400509, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400509));
  Proto30400510_descriptor_ = file->message_type(28);
  static const int Proto30400510_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400510, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400510, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400510, rank_),
  };
  Proto30400510_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400510_descriptor_,
      Proto30400510::default_instance_,
      Proto30400510_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400510, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400510, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400510));
  Proto31403102_descriptor_ = file->message_type(29);
  static const int Proto31403102_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403102, wed_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403102, wedding_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403102, other_info_),
  };
  Proto31403102_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31403102_descriptor_,
      Proto31403102::default_instance_,
      Proto31403102_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403102, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31403102, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31403102));
  Proto30400117_descriptor_ = file->message_type(30);
  static const int Proto30400117_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400117, flag_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400117, leader_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400117, skill_map_),
  };
  Proto30400117_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400117_descriptor_,
      Proto30400117::default_instance_,
      Proto30400117_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400117, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400117, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400117));
  Proto30400803_descriptor_ = file->message_type(31);
  static const int Proto30400803_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400803, flag_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400803, skill_map_),
  };
  Proto30400803_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400803_descriptor_,
      Proto30400803::default_instance_,
      Proto30400803_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400803, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400803, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400803));
  Proto31400051_descriptor_ = file->message_type(32);
  static const int Proto31400051_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400051, monster_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400051, other_info_),
  };
  Proto31400051_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400051_descriptor_,
      Proto31400051::default_instance_,
      Proto31400051_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400051, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400051, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400051));
  Proto30100231_descriptor_ = file->message_type(33);
  static const int Proto30100231_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100231, league_id_),
  };
  Proto30100231_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100231_descriptor_,
      Proto30100231::default_instance_,
      Proto30100231_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100231, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100231, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100231));
  Proto30100951_descriptor_ = file->message_type(34);
  static const int Proto30100951_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100951, wave_),
  };
  Proto30100951_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100951_descriptor_,
      Proto30100951::default_instance_,
      Proto30100951_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100951, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100951, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100951));
  Proto30400511_descriptor_ = file->message_type(35);
  static const int Proto30400511_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400511, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400511, self_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400511, server_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400511, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400511, activity_id_),
  };
  Proto30400511_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400511_descriptor_,
      Proto30400511::default_instance_,
      Proto30400511_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400511, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400511, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400511));
  Proto30400512_descriptor_ = file->message_type(36);
  static const int Proto30400512_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400512, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400512, page_),
  };
  Proto30400512_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400512_descriptor_,
      Proto30400512::default_instance_,
      Proto30400512_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400512, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400512, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400512));
  Proto30400513_descriptor_ = file->message_type(37);
  static const int Proto30400513_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400513, obj_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400513, type_),
  };
  Proto30400513_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400513_descriptor_,
      Proto30400513::default_instance_,
      Proto30400513_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400513, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400513, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400513));
  Proto30400514_descriptor_ = file->message_type(38);
  static const int Proto30400514_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400514, type_),
  };
  Proto30400514_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400514_descriptor_,
      Proto30400514::default_instance_,
      Proto30400514_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400514, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400514, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400514));
  Proto30400027_descriptor_ = file->message_type(39);
  static const int Proto30400027_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400027, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400027, scene_),
  };
  Proto30400027_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400027_descriptor_,
      Proto30400027::default_instance_,
      Proto30400027_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400027, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400027, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400027));
  Proto30400917_descriptor_ = file->message_type(40);
  static const int Proto30400917_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400917, value_set_),
  };
  Proto30400917_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400917_descriptor_,
      Proto30400917::default_instance_,
      Proto30400917_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400917, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400917, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400917));
  Proto30400918_descriptor_ = file->message_type(41);
  static const int Proto30400918_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400918, prev_scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400918, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400918, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400918, scrit_type_),
  };
  Proto30400918_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400918_descriptor_,
      Proto30400918::default_instance_,
      Proto30400918_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400918, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400918, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400918));
  Proto31400052_descriptor_ = file->message_type(42);
  static const int Proto31400052_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400052, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400052, mult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400052, is_reset_),
  };
  Proto31400052_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400052_descriptor_,
      Proto31400052::default_instance_,
      Proto31400052_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400052, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400052, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400052));
  Proto30400919_descriptor_ = file->message_type(43);
  static const int Proto30400919_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400919, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400919, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400919, scrit_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400919, mult_),
  };
  Proto30400919_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400919_descriptor_,
      Proto30400919::default_instance_,
      Proto30400919_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400919, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400919, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400919));
  Proto30101111_descriptor_ = file->message_type(44);
  static const int Proto30101111_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101111, cur_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101111, recharge_type_),
  };
  Proto30101111_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30101111_descriptor_,
      Proto30101111::default_instance_,
      Proto30101111_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101111, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101111, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30101111));
  Proto31404011_descriptor_ = file->message_type(45);
  static const int Proto31404011_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31404011, isapply_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31404011, surplustime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31404011, offline_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31404011, hook_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31404011, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31404011, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31404011, hook_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31404011, today_offline_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31404011, vip_plus_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31404011, one_point_five_plue_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31404011, two_plus_time_),
  };
  Proto31404011_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31404011_descriptor_,
      Proto31404011::default_instance_,
      Proto31404011_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31404011, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31404011, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31404011));
  Proto31400053_descriptor_ = file->message_type(46);
  static const int Proto31400053_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400053, drop_act_),
  };
  Proto31400053_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400053_descriptor_,
      Proto31400053::default_instance_,
      Proto31400053_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400053, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400053, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400053));
  Proto31400147_descriptor_ = file->message_type(47);
  static const int Proto31400147_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400147, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400147, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400147, open_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400147, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400147, transfer_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400147, last_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400147, active_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400147, open_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400147, gold_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400147, refresh_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400147, reduce_cool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400147, add_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400147, transfer_info_),
  };
  Proto31400147_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400147_descriptor_,
      Proto31400147::default_instance_,
      Proto31400147_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400147, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400147, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400147));
  Proto31400054_descriptor_ = file->message_type(48);
  static const int Proto31400054_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400054, act_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400054, reward_index_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400054, bind_item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400054, unbind_item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400054, op_ret_),
  };
  Proto31400054_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400054_descriptor_,
      Proto31400054::default_instance_,
      Proto31400054_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400054, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400054, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400054));
  Proto30400411_descriptor_ = file->message_type(49);
  static const int Proto30400411_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400411, transfer_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400411, last_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400411, active_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400411, reduce_cool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400411, add_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400411, transfer_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400411, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400411, notify_),
  };
  Proto30400411_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400411_descriptor_,
      Proto30400411::default_instance_,
      Proto30400411_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400411, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400411, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400411));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoInner009_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400044_descriptor_, &Proto31400044::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400023_descriptor_, &Proto31400023::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400026_descriptor_, &Proto30400026::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400045_descriptor_, &Proto31400045::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30103102_descriptor_, &Proto30103102::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400454_descriptor_, &Proto30400454::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100409_descriptor_, &Proto30100409::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100410_descriptor_, &Proto30100410::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30600104_descriptor_, &Proto30600104::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400040_descriptor_, &Proto30400040::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100606_descriptor_, &Proto30100606::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400041_descriptor_, &Proto30400041::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400146_descriptor_, &Proto31400146::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400410_descriptor_, &Proto30400410::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30402401_descriptor_, &Proto30402401::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100243_descriptor_, &Proto30100243::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400455_descriptor_, &Proto30400455::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400048_descriptor_, &Proto31400048::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400914_descriptor_, &Proto30400914::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400915_descriptor_, &Proto30400915::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400916_descriptor_, &Proto30400916::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400049_descriptor_, &Proto31400049::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400050_descriptor_, &Proto31400050::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400507_descriptor_, &Proto30400507::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30102101_descriptor_, &Proto30102101::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30102102_descriptor_, &Proto30102102::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400508_descriptor_, &Proto30400508::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400509_descriptor_, &Proto30400509::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400510_descriptor_, &Proto30400510::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31403102_descriptor_, &Proto31403102::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400117_descriptor_, &Proto30400117::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400803_descriptor_, &Proto30400803::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400051_descriptor_, &Proto31400051::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100231_descriptor_, &Proto30100231::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100951_descriptor_, &Proto30100951::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400511_descriptor_, &Proto30400511::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400512_descriptor_, &Proto30400512::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400513_descriptor_, &Proto30400513::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400514_descriptor_, &Proto30400514::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400027_descriptor_, &Proto30400027::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400917_descriptor_, &Proto30400917::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400918_descriptor_, &Proto30400918::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400052_descriptor_, &Proto31400052::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400919_descriptor_, &Proto30400919::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30101111_descriptor_, &Proto30101111::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31404011_descriptor_, &Proto31404011::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400053_descriptor_, &Proto31400053::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400147_descriptor_, &Proto31400147::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400054_descriptor_, &Proto31400054::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400411_descriptor_, &Proto30400411::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoInner009_2eproto() {
  delete Proto31400044::default_instance_;
  delete Proto31400044_reflection_;
  delete Proto31400023::default_instance_;
  delete Proto31400023_reflection_;
  delete Proto30400026::default_instance_;
  delete Proto30400026_reflection_;
  delete Proto31400045::default_instance_;
  delete Proto31400045_reflection_;
  delete Proto30103102::default_instance_;
  delete Proto30103102_reflection_;
  delete Proto30400454::default_instance_;
  delete Proto30400454_reflection_;
  delete Proto30100409::default_instance_;
  delete Proto30100409_reflection_;
  delete Proto30100410::default_instance_;
  delete Proto30100410_reflection_;
  delete Proto30600104::default_instance_;
  delete Proto30600104_reflection_;
  delete Proto30400040::default_instance_;
  delete Proto30400040_reflection_;
  delete Proto30100606::default_instance_;
  delete Proto30100606_reflection_;
  delete Proto30400041::default_instance_;
  delete Proto30400041_reflection_;
  delete Proto31400146::default_instance_;
  delete Proto31400146_reflection_;
  delete Proto30400410::default_instance_;
  delete Proto30400410_reflection_;
  delete Proto30402401::default_instance_;
  delete Proto30402401_reflection_;
  delete Proto30100243::default_instance_;
  delete Proto30100243_reflection_;
  delete Proto30400455::default_instance_;
  delete Proto30400455_reflection_;
  delete Proto31400048::default_instance_;
  delete Proto31400048_reflection_;
  delete Proto30400914::default_instance_;
  delete Proto30400914_reflection_;
  delete Proto30400915::default_instance_;
  delete Proto30400915_reflection_;
  delete Proto30400916::default_instance_;
  delete Proto30400916_reflection_;
  delete Proto31400049::default_instance_;
  delete Proto31400049_reflection_;
  delete Proto31400050::default_instance_;
  delete Proto31400050_reflection_;
  delete Proto30400507::default_instance_;
  delete Proto30400507_reflection_;
  delete Proto30102101::default_instance_;
  delete Proto30102101_reflection_;
  delete Proto30102102::default_instance_;
  delete Proto30102102_reflection_;
  delete Proto30400508::default_instance_;
  delete Proto30400508_reflection_;
  delete Proto30400509::default_instance_;
  delete Proto30400509_reflection_;
  delete Proto30400510::default_instance_;
  delete Proto30400510_reflection_;
  delete Proto31403102::default_instance_;
  delete Proto31403102_reflection_;
  delete Proto30400117::default_instance_;
  delete Proto30400117_reflection_;
  delete Proto30400803::default_instance_;
  delete Proto30400803_reflection_;
  delete Proto31400051::default_instance_;
  delete Proto31400051_reflection_;
  delete Proto30100231::default_instance_;
  delete Proto30100231_reflection_;
  delete Proto30100951::default_instance_;
  delete Proto30100951_reflection_;
  delete Proto30400511::default_instance_;
  delete Proto30400511_reflection_;
  delete Proto30400512::default_instance_;
  delete Proto30400512_reflection_;
  delete Proto30400513::default_instance_;
  delete Proto30400513_reflection_;
  delete Proto30400514::default_instance_;
  delete Proto30400514_reflection_;
  delete Proto30400027::default_instance_;
  delete Proto30400027_reflection_;
  delete Proto30400917::default_instance_;
  delete Proto30400917_reflection_;
  delete Proto30400918::default_instance_;
  delete Proto30400918_reflection_;
  delete Proto31400052::default_instance_;
  delete Proto31400052_reflection_;
  delete Proto30400919::default_instance_;
  delete Proto30400919_reflection_;
  delete Proto30101111::default_instance_;
  delete Proto30101111_reflection_;
  delete Proto31404011::default_instance_;
  delete Proto31404011_reflection_;
  delete Proto31400053::default_instance_;
  delete Proto31400053_reflection_;
  delete Proto31400147::default_instance_;
  delete Proto31400147_reflection_;
  delete Proto31400054::default_instance_;
  delete Proto31400054_reflection_;
  delete Proto30400411::default_instance_;
  delete Proto30400411_reflection_;
}

void protobuf_AddDesc_ProtoInner009_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::protobuf_AddDesc_ProtoInnerPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023ProtoInner009.proto\032\021ProtoPublic.proto"
    "\032\026ProtoInnerPublic.proto\"\362\001\n\rProto314000"
    "44\022\023\n\013activity_id\030\001 \001(\005\022\016\n\006amount\030\002 \001(\005\022"
    "\032\n\005money\030\003 \001(\0132\013.ProtoMoney\022\034\n\003obj\030\004 \001(\013"
    "2\017.ProtoSerialObj\022\014\n\004type\030\005 \001(\005\022\016\n\006recog"
    "n\030\006 \001(\005\022\022\n\ntime_point\030\007 \001(\005\022\017\n\007slot_id\030\010"
    " \001(\005\022\016\n\006is_all\030\t \001(\005\022\016\n\006column\030\n \001(\005\022\013\n\003"
    "num\030\013 \001(\005\022\022\n\nfish_index\030\014 \003(\005\"L\n\rProto31"
    "400023\022\n\n\002id\030\001 \001(\005\022\013\n\003num\030\002 \001(\005\022\"\n\nother"
    "_info\030\003 \001(\0132\016.ProtoThreeObj\"L\n\rProto3040"
    "0026\022\n\n\002id\030\001 \001(\005\022\013\n\003num\030\002 \001(\005\022\"\n\nother_i"
    "nfo\030\003 \001(\0132\016.ProtoThreeObj\"^\n\rProto314000"
    "45\022\023\n\013activity_id\030\001 \001(\005\022\032\n\005money\030\002 \001(\0132\013"
    ".ProtoMoney\022\034\n\003obj\030\003 \001(\0132\017.ProtoSerialOb"
    "j\"z\n\rProto30103102\022\014\n\004type\030\001 \001(\005\022\n\n\002id\030\002"
    " \001(\003\022\r\n\005value\030\003 \001(\003\022\r\n\005sub_1\030\004 \001(\005\022\r\n\005su"
    "b_2\030\005 \001(\005\022\"\n\nother_info\030\006 \001(\0132\016.ProtoThr"
    "eeObj\"7\n\rProto30400454\022\020\n\010flag_lvl\030\001 \001(\005"
    "\022\024\n\014league_index\030\002 \001(\003\"A\n\rProto30100409\022"
    "\014\n\004gold\030\001 \001(\003\022\"\n\nother_info\030\002 \001(\0132\016.Prot"
    "oThreeObj\"@\n\rProto30100410\022\013\n\003exp\030\001 \001(\005\022"
    "\"\n\nother_info\030\002 \001(\0132\016.ProtoThreeObj\"<\n\rP"
    "roto30600104\022\014\n\004flag\030\001 \001(\005\022\014\n\004name\030\002 \001(\t"
    "\022\017\n\007content\030\003 \001(\014\"N\n\rProto30400040\022\017\n\007bo"
    "ss_id\030\001 \001(\005\022\032\n\005coord\030\002 \001(\0132\013.ProtoCoord\022"
    "\020\n\010scene_id\030\003 \001(\005\"k\n\rProto30100606\022\022\n\nto"
    "day_gold\030\001 \001(\005\022\027\n\017today_bind_gold\030\002 \001(\005\022"
    "\023\n\013consum_gold\030\003 \001(\005\022\030\n\020consum_bind_gold"
    "\030\004 \001(\005\"o\n\rProto30400041\022\021\n\ticon_type\030\001 \001"
    "(\005\022\020\n\010drop_act\030\002 \001(\005\022\022\n\nstart_tick\030\003 \001(\003"
    "\022\020\n\010end_tick\030\004 \001(\003\022\023\n\013update_tick\030\005 \001(\003\""
    "\242\001\n\rProto31400146\022\r\n\005level\030\001 \001(\005\022\013\n\003exp\030"
    "\002 \001(\005\022\021\n\tselect_id\030\003 \001(\005\022\027\n\017select_color"
    "_id\030\004 \001(\005\022\014\n\004open\030\005 \001(\005\022\020\n\010send_set\030\006 \003("
    "\005\022)\n\014fashion_info\030\007 \003(\0132\023.ProtoFashionDe"
    "tail\"w\n\rProto30400410\022\r\n\005level\030\001 \001(\005\022\013\n\003"
    "exp\030\002 \001(\005\022\014\n\004open\030\003 \001(\005\022\023\n\013notify_flag\030\004"
    " \001(\005\022\021\n\tselect_id\030\005 \001(\005\022\024\n\014sel_color_id\030"
    "\006 \001(\005\"^\n\rProto30402401\022\017\n\007item_id\030\001 \001(\005\022"
    "\020\n\010item_num\030\002 \001(\005\022\023\n\013receiver_id\030\003 \001(\003\022\025"
    "\n\rreceiver_name\030\004 \001(\t\"%\n\rProto30100243\022\024"
    "\n\014league_index\030\001 \001(\003\",\n\rProto30400455\022\r\n"
    "\005index\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\"R\n\rProto31400"
    "048\022\035\n\titem_list\030\001 \003(\0132\n.ProtoItem\022\"\n\not"
    "her_info\030\002 \001(\0132\016.ProtoThreeObj\" \n\rProto3"
    "0400914\022\017\n\007role_id\030\001 \001(\003\"&\n\rProto3040091"
    "5\022\025\n\rprev_scene_id\030\001 \001(\005\"\036\n\rProto3040091"
    "6\022\r\n\005state\030\001 \001(\005\"A\n\rProto31400049\022\014\n\004typ"
    "e\030\001 \001(\005\022\"\n\nother_info\030\002 \001(\0132\016.ProtoThree"
    "Obj\"/\n\rProto31400050\022\r\n\005index\030\001 \001(\005\022\017\n\007o"
    "perate\030\002 \001(\005\"5\n\rProto30400507\022$\n\trank_in"
    "fo\030\001 \001(\0132\021.ProtoWeddingRank\"u\n\rProto3010"
    "2101\022\017\n\007buff_id\030\001 \001(\005\022\021\n\tbuff_time\030\002 \001(\005"
    "\022\014\n\004from\030\003 \001(\005\022\016\n\006status\030\004 \001(\005\022\"\n\nother_"
    "info\030\005 \001(\0132\016.ProtoThreeObj\"A\n\rProto30102"
    "102\022\014\n\004type\030\001 \001(\005\022\"\n\nother_info\030\002 \001(\0132\016."
    "ProtoThreeObj\"\223\001\n\rProto30400508\022\021\n\tlabel"
    "_get\030\001 \001(\005\022\022\n\nreward_get\030\002 \001(\005\022\021\n\tleft_t"
    "ick\030\003 \001(\005\022\024\n\014label_reward\030\004 \001(\005\022\023\n\013rank_"
    "reward\030\005 \001(\005\022\014\n\004page\030\006 \001(\005\022\017\n\007role_id\030\007 "
    "\001(\003\"\?\n\rProto30400509\022\014\n\004rank\030\001 \001(\005\022\017\n\007pl"
    "ayer1\030\002 \001(\003\022\017\n\007player2\030\003 \001(\003\"<\n\rProto304"
    "00510\022\014\n\004type\030\001 \001(\005\022\017\n\007role_id\030\002 \001(\003\022\014\n\004"
    "rank\030\003 \001(\005\"n\n\rProto31403102\022%\n\010wed_info\030"
    "\001 \003(\0132\023.ProtoWeddingDetail\022\022\n\nwedding_id"
    "\030\002 \001(\003\022\"\n\nother_info\030\003 \001(\0132\016.ProtoThreeO"
    "bj\"V\n\rProto30400117\022\020\n\010flag_lvl\030\001 \001(\005\022\021\n"
    "\tleader_id\030\002 \001(\003\022 \n\tskill_map\030\003 \003(\0132\r.Pr"
    "otoPairObj\"C\n\rProto30400803\022\020\n\010flag_lvl\030"
    "\001 \001(\005\022 \n\tskill_map\030\002 \003(\0132\r.ProtoPairObj\""
    "W\n\rProto31400051\022\"\n\013monster_set\030\001 \003(\0132\r."
    "ProtoMonster\022\"\n\nother_info\030\002 \001(\0132\016.Proto"
    "ThreeObj\"\"\n\rProto30100231\022\021\n\tleague_id\030\001"
    " \001(\003\"\035\n\rProto30100951\022\014\n\004wave\030\001 \001(\005\"\206\001\n\r"
    "Proto30400511\022\014\n\004type\030\001 \001(\005\022\037\n\tself_info"
    "\030\002 \001(\0132\014.ProtoTeamer\022!\n\013server_info\030\003 \001("
    "\0132\014.ProtoServer\022\016\n\006amount\030\004 \001(\005\022\023\n\013activ"
    "ity_id\030\005 \001(\005\"+\n\rProto30400512\022\014\n\004type\030\001 "
    "\001(\005\022\014\n\004page\030\002 \001(\005\":\n\rProto30400513\022\033\n\003ob"
    "j\030\001 \003(\0132\016.ProtoThreeObj\022\014\n\004type\030\002 \001(\005\"\035\n"
    "\rProto30400514\022\014\n\004type\030\001 \001(\005\"-\n\rProto304"
    "00027\022\r\n\005index\030\001 \001(\005\022\r\n\005scene\030\002 \001(\005\"\"\n\rP"
    "roto30400917\022\021\n\tvalue_set\030\001 \003(\005\"]\n\rProto"
    "30400918\022\025\n\rprev_scene_id\030\001 \001(\005\022\014\n\004type\030"
    "\002 \001(\005\022\023\n\013script_sort\030\003 \001(\005\022\022\n\nscrit_type"
    "\030\004 \001(\005\"=\n\rProto31400052\022\014\n\004type\030\001 \001(\005\022\014\n"
    "\004mult\030\002 \001(\005\022\020\n\010is_reset\030\003 \001(\005\"T\n\rProto30"
    "400919\022\014\n\004type\030\001 \001(\005\022\023\n\013script_sort\030\002 \001("
    "\005\022\022\n\nscrit_type\030\003 \001(\005\022\014\n\004mult\030\004 \001(\005\"8\n\rP"
    "roto30101111\022\020\n\010cur_gold\030\001 \001(\005\022\025\n\rrechar"
    "ge_type\030\002 \001(\005\"\244\002\n\rProto31404011\022\017\n\007isApp"
    "ly\030\001 \001(\010\022\023\n\013surplustime\030\002 \001(\003\022%\n\016offline"
    "_reward\030\003 \001(\0132\r.ProtoPairMap\022\020\n\010hook_exp"
    "\030\004 \001(\005\022\022\n\nstart_time\030\005 \001(\003\022\020\n\010end_time\030\006"
    " \001(\003\022\021\n\thook_time\030\007 \001(\003\022+\n\024today_offline"
    "_reward\030\010 \001(\0132\r.ProtoPairMap\022\025\n\rvip_plus"
    "_time\030\t \001(\003\022 \n\030one_point_five_plue_time\030"
    "\n \001(\003\022\025\n\rtwo_plus_time\030\013 \001(\003\"!\n\rProto314"
    "00053\022\020\n\010drop_act\030\001 \001(\005\"\221\002\n\rProto3140014"
    "7\022\r\n\005level\030\001 \001(\005\022\013\n\003exp\030\002 \001(\005\022\014\n\004open\030\003 "
    "\001(\005\022\r\n\005stage\030\004 \001(\005\022\025\n\rtransfer_tick\030\005 \001("
    "\003\022\014\n\004last\030\006 \001(\005\022\021\n\tactive_id\030\007 \001(\005\022\023\n\013op"
    "en_reward\030\010 \001(\005\022\022\n\ngold_times\030\t \001(\005\022\024\n\014r"
    "efresh_tick\030\n \001(\003\022\023\n\013reduce_cool\030\013 \001(\005\022\020"
    "\n\010add_time\030\014 \001(\005\022)\n\rtransfer_info\030\r \003(\0132"
    "\022.ProtoTransferInfo\"\256\001\n\rProto31400054\022\016\n"
    "\006act_id\030\001 \001(\005\0223\n\021reward_index_list\030\002 \003(\013"
    "2\030.ProtoBackActRewardIndex\022\"\n\016bind_item_"
    "list\030\003 \003(\0132\n.ProtoItem\022$\n\020unbind_item_li"
    "st\030\004 \003(\0132\n.ProtoItem\022\016\n\006op_ret\030\005 \001(\005\"\267\001\n"
    "\rProto30400411\022\025\n\rtransfer_tick\030\001 \001(\003\022\014\n"
    "\004last\030\002 \001(\005\022\021\n\tactive_id\030\003 \001(\005\022\023\n\013reduce"
    "_cool\030\004 \001(\005\022\020\n\010add_time\030\005 \001(\005\022)\n\rtransfe"
    "r_info\030\006 \001(\0132\022.ProtoTransferInfo\022\014\n\004type"
    "\030\007 \001(\005\022\016\n\006notify\030\010 \001(\005", 4582);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoInner009.proto", &protobuf_RegisterTypes);
  Proto31400044::default_instance_ = new Proto31400044();
  Proto31400023::default_instance_ = new Proto31400023();
  Proto30400026::default_instance_ = new Proto30400026();
  Proto31400045::default_instance_ = new Proto31400045();
  Proto30103102::default_instance_ = new Proto30103102();
  Proto30400454::default_instance_ = new Proto30400454();
  Proto30100409::default_instance_ = new Proto30100409();
  Proto30100410::default_instance_ = new Proto30100410();
  Proto30600104::default_instance_ = new Proto30600104();
  Proto30400040::default_instance_ = new Proto30400040();
  Proto30100606::default_instance_ = new Proto30100606();
  Proto30400041::default_instance_ = new Proto30400041();
  Proto31400146::default_instance_ = new Proto31400146();
  Proto30400410::default_instance_ = new Proto30400410();
  Proto30402401::default_instance_ = new Proto30402401();
  Proto30100243::default_instance_ = new Proto30100243();
  Proto30400455::default_instance_ = new Proto30400455();
  Proto31400048::default_instance_ = new Proto31400048();
  Proto30400914::default_instance_ = new Proto30400914();
  Proto30400915::default_instance_ = new Proto30400915();
  Proto30400916::default_instance_ = new Proto30400916();
  Proto31400049::default_instance_ = new Proto31400049();
  Proto31400050::default_instance_ = new Proto31400050();
  Proto30400507::default_instance_ = new Proto30400507();
  Proto30102101::default_instance_ = new Proto30102101();
  Proto30102102::default_instance_ = new Proto30102102();
  Proto30400508::default_instance_ = new Proto30400508();
  Proto30400509::default_instance_ = new Proto30400509();
  Proto30400510::default_instance_ = new Proto30400510();
  Proto31403102::default_instance_ = new Proto31403102();
  Proto30400117::default_instance_ = new Proto30400117();
  Proto30400803::default_instance_ = new Proto30400803();
  Proto31400051::default_instance_ = new Proto31400051();
  Proto30100231::default_instance_ = new Proto30100231();
  Proto30100951::default_instance_ = new Proto30100951();
  Proto30400511::default_instance_ = new Proto30400511();
  Proto30400512::default_instance_ = new Proto30400512();
  Proto30400513::default_instance_ = new Proto30400513();
  Proto30400514::default_instance_ = new Proto30400514();
  Proto30400027::default_instance_ = new Proto30400027();
  Proto30400917::default_instance_ = new Proto30400917();
  Proto30400918::default_instance_ = new Proto30400918();
  Proto31400052::default_instance_ = new Proto31400052();
  Proto30400919::default_instance_ = new Proto30400919();
  Proto30101111::default_instance_ = new Proto30101111();
  Proto31404011::default_instance_ = new Proto31404011();
  Proto31400053::default_instance_ = new Proto31400053();
  Proto31400147::default_instance_ = new Proto31400147();
  Proto31400054::default_instance_ = new Proto31400054();
  Proto30400411::default_instance_ = new Proto30400411();
  Proto31400044::default_instance_->InitAsDefaultInstance();
  Proto31400023::default_instance_->InitAsDefaultInstance();
  Proto30400026::default_instance_->InitAsDefaultInstance();
  Proto31400045::default_instance_->InitAsDefaultInstance();
  Proto30103102::default_instance_->InitAsDefaultInstance();
  Proto30400454::default_instance_->InitAsDefaultInstance();
  Proto30100409::default_instance_->InitAsDefaultInstance();
  Proto30100410::default_instance_->InitAsDefaultInstance();
  Proto30600104::default_instance_->InitAsDefaultInstance();
  Proto30400040::default_instance_->InitAsDefaultInstance();
  Proto30100606::default_instance_->InitAsDefaultInstance();
  Proto30400041::default_instance_->InitAsDefaultInstance();
  Proto31400146::default_instance_->InitAsDefaultInstance();
  Proto30400410::default_instance_->InitAsDefaultInstance();
  Proto30402401::default_instance_->InitAsDefaultInstance();
  Proto30100243::default_instance_->InitAsDefaultInstance();
  Proto30400455::default_instance_->InitAsDefaultInstance();
  Proto31400048::default_instance_->InitAsDefaultInstance();
  Proto30400914::default_instance_->InitAsDefaultInstance();
  Proto30400915::default_instance_->InitAsDefaultInstance();
  Proto30400916::default_instance_->InitAsDefaultInstance();
  Proto31400049::default_instance_->InitAsDefaultInstance();
  Proto31400050::default_instance_->InitAsDefaultInstance();
  Proto30400507::default_instance_->InitAsDefaultInstance();
  Proto30102101::default_instance_->InitAsDefaultInstance();
  Proto30102102::default_instance_->InitAsDefaultInstance();
  Proto30400508::default_instance_->InitAsDefaultInstance();
  Proto30400509::default_instance_->InitAsDefaultInstance();
  Proto30400510::default_instance_->InitAsDefaultInstance();
  Proto31403102::default_instance_->InitAsDefaultInstance();
  Proto30400117::default_instance_->InitAsDefaultInstance();
  Proto30400803::default_instance_->InitAsDefaultInstance();
  Proto31400051::default_instance_->InitAsDefaultInstance();
  Proto30100231::default_instance_->InitAsDefaultInstance();
  Proto30100951::default_instance_->InitAsDefaultInstance();
  Proto30400511::default_instance_->InitAsDefaultInstance();
  Proto30400512::default_instance_->InitAsDefaultInstance();
  Proto30400513::default_instance_->InitAsDefaultInstance();
  Proto30400514::default_instance_->InitAsDefaultInstance();
  Proto30400027::default_instance_->InitAsDefaultInstance();
  Proto30400917::default_instance_->InitAsDefaultInstance();
  Proto30400918::default_instance_->InitAsDefaultInstance();
  Proto31400052::default_instance_->InitAsDefaultInstance();
  Proto30400919::default_instance_->InitAsDefaultInstance();
  Proto30101111::default_instance_->InitAsDefaultInstance();
  Proto31404011::default_instance_->InitAsDefaultInstance();
  Proto31400053::default_instance_->InitAsDefaultInstance();
  Proto31400147::default_instance_->InitAsDefaultInstance();
  Proto31400054::default_instance_->InitAsDefaultInstance();
  Proto30400411::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoInner009_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoInner009_2eproto {
  StaticDescriptorInitializer_ProtoInner009_2eproto() {
    protobuf_AddDesc_ProtoInner009_2eproto();
  }
} static_descriptor_initializer_ProtoInner009_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto31400044::kActivityIdFieldNumber;
const int Proto31400044::kAmountFieldNumber;
const int Proto31400044::kMoneyFieldNumber;
const int Proto31400044::kObjFieldNumber;
const int Proto31400044::kTypeFieldNumber;
const int Proto31400044::kRecognFieldNumber;
const int Proto31400044::kTimePointFieldNumber;
const int Proto31400044::kSlotIdFieldNumber;
const int Proto31400044::kIsAllFieldNumber;
const int Proto31400044::kColumnFieldNumber;
const int Proto31400044::kNumFieldNumber;
const int Proto31400044::kFishIndexFieldNumber;
#endif  // !_MSC_VER

Proto31400044::Proto31400044()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400044::InitAsDefaultInstance() {
  money_ = const_cast< ::ProtoMoney*>(&::ProtoMoney::default_instance());
  obj_ = const_cast< ::ProtoSerialObj*>(&::ProtoSerialObj::default_instance());
}

Proto31400044::Proto31400044(const Proto31400044& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400044::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  amount_ = 0;
  money_ = NULL;
  obj_ = NULL;
  type_ = 0;
  recogn_ = 0;
  time_point_ = 0;
  slot_id_ = 0;
  is_all_ = 0;
  column_ = 0;
  num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400044::~Proto31400044() {
  SharedDtor();
}

void Proto31400044::SharedDtor() {
  if (this != default_instance_) {
    delete money_;
    delete obj_;
  }
}

void Proto31400044::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400044::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400044_descriptor_;
}

const Proto31400044& Proto31400044::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto31400044* Proto31400044::default_instance_ = NULL;

Proto31400044* Proto31400044::New() const {
  return new Proto31400044;
}

void Proto31400044::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    amount_ = 0;
    if (has_money()) {
      if (money_ != NULL) money_->::ProtoMoney::Clear();
    }
    if (has_obj()) {
      if (obj_ != NULL) obj_->::ProtoSerialObj::Clear();
    }
    type_ = 0;
    recogn_ = 0;
    time_point_ = 0;
    slot_id_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    is_all_ = 0;
    column_ = 0;
    num_ = 0;
  }
  fish_index_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400044::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_money;
        break;
      }
      
      // optional .ProtoMoney money = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_money:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_money()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_obj;
        break;
      }
      
      // optional .ProtoSerialObj obj = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_obj:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_obj()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }
      
      // optional int32 type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_recogn;
        break;
      }
      
      // optional int32 recogn = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recogn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recogn_)));
          set_has_recogn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_time_point;
        break;
      }
      
      // optional int32 time_point = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_point_)));
          set_has_time_point();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_slot_id;
        break;
      }
      
      // optional int32 slot_id = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_slot_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &slot_id_)));
          set_has_slot_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_is_all;
        break;
      }
      
      // optional int32 is_all = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_all:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_all_)));
          set_has_is_all();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_column;
        break;
      }
      
      // optional int32 column = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_column:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &column_)));
          set_has_column();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_num;
        break;
      }
      
      // optional int32 num = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_fish_index;
        break;
      }
      
      // repeated int32 fish_index = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fish_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 96, input, this->mutable_fish_index())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_fish_index())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_fish_index;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400044::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 amount = 2;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->amount(), output);
  }
  
  // optional .ProtoMoney money = 3;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->money(), output);
  }
  
  // optional .ProtoSerialObj obj = 4;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->obj(), output);
  }
  
  // optional int32 type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }
  
  // optional int32 recogn = 6;
  if (has_recogn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->recogn(), output);
  }
  
  // optional int32 time_point = 7;
  if (has_time_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->time_point(), output);
  }
  
  // optional int32 slot_id = 8;
  if (has_slot_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->slot_id(), output);
  }
  
  // optional int32 is_all = 9;
  if (has_is_all()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->is_all(), output);
  }
  
  // optional int32 column = 10;
  if (has_column()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->column(), output);
  }
  
  // optional int32 num = 11;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->num(), output);
  }
  
  // repeated int32 fish_index = 12;
  for (int i = 0; i < this->fish_index_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      12, this->fish_index(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400044::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 amount = 2;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->amount(), target);
  }
  
  // optional .ProtoMoney money = 3;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->money(), target);
  }
  
  // optional .ProtoSerialObj obj = 4;
  if (has_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->obj(), target);
  }
  
  // optional int32 type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }
  
  // optional int32 recogn = 6;
  if (has_recogn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->recogn(), target);
  }
  
  // optional int32 time_point = 7;
  if (has_time_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->time_point(), target);
  }
  
  // optional int32 slot_id = 8;
  if (has_slot_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->slot_id(), target);
  }
  
  // optional int32 is_all = 9;
  if (has_is_all()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->is_all(), target);
  }
  
  // optional int32 column = 10;
  if (has_column()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->column(), target);
  }
  
  // optional int32 num = 11;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->num(), target);
  }
  
  // repeated int32 fish_index = 12;
  for (int i = 0; i < this->fish_index_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(12, this->fish_index(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400044::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 amount = 2;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
    // optional .ProtoMoney money = 3;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->money());
    }
    
    // optional .ProtoSerialObj obj = 4;
    if (has_obj()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->obj());
    }
    
    // optional int32 type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 recogn = 6;
    if (has_recogn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recogn());
    }
    
    // optional int32 time_point = 7;
    if (has_time_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time_point());
    }
    
    // optional int32 slot_id = 8;
    if (has_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->slot_id());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 is_all = 9;
    if (has_is_all()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_all());
    }
    
    // optional int32 column = 10;
    if (has_column()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->column());
    }
    
    // optional int32 num = 11;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }
    
  }
  // repeated int32 fish_index = 12;
  {
    int data_size = 0;
    for (int i = 0; i < this->fish_index_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->fish_index(i));
    }
    total_size += 1 * this->fish_index_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400044::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400044* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400044*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400044::MergeFrom(const Proto31400044& from) {
  GOOGLE_CHECK_NE(&from, this);
  fish_index_.MergeFrom(from.fish_index_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_money()) {
      mutable_money()->::ProtoMoney::MergeFrom(from.money());
    }
    if (from.has_obj()) {
      mutable_obj()->::ProtoSerialObj::MergeFrom(from.obj());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_recogn()) {
      set_recogn(from.recogn());
    }
    if (from.has_time_point()) {
      set_time_point(from.time_point());
    }
    if (from.has_slot_id()) {
      set_slot_id(from.slot_id());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_is_all()) {
      set_is_all(from.is_all());
    }
    if (from.has_column()) {
      set_column(from.column());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400044::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400044::CopyFrom(const Proto31400044& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400044::IsInitialized() const {
  
  return true;
}

void Proto31400044::Swap(Proto31400044* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(amount_, other->amount_);
    std::swap(money_, other->money_);
    std::swap(obj_, other->obj_);
    std::swap(type_, other->type_);
    std::swap(recogn_, other->recogn_);
    std::swap(time_point_, other->time_point_);
    std::swap(slot_id_, other->slot_id_);
    std::swap(is_all_, other->is_all_);
    std::swap(column_, other->column_);
    std::swap(num_, other->num_);
    fish_index_.Swap(&other->fish_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400044::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400044_descriptor_;
  metadata.reflection = Proto31400044_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400023::kIdFieldNumber;
const int Proto31400023::kNumFieldNumber;
const int Proto31400023::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto31400023::Proto31400023()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400023::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto31400023::Proto31400023(const Proto31400023& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400023::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  num_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400023::~Proto31400023() {
  SharedDtor();
}

void Proto31400023::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto31400023::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400023::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400023_descriptor_;
}

const Proto31400023& Proto31400023::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto31400023* Proto31400023::default_instance_ = NULL;

Proto31400023* Proto31400023::New() const {
  return new Proto31400023;
}

void Proto31400023::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    num_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400023::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }
      
      // optional int32 num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400023::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional int32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }
  
  // optional .ProtoThreeObj other_info = 3;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400023::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional int32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }
  
  // optional .ProtoThreeObj other_info = 3;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400023::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional int32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }
    
    // optional .ProtoThreeObj other_info = 3;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400023::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400023* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400023*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400023::MergeFrom(const Proto31400023& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400023::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400023::CopyFrom(const Proto31400023& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400023::IsInitialized() const {
  
  return true;
}

void Proto31400023::Swap(Proto31400023* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400023::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400023_descriptor_;
  metadata.reflection = Proto31400023_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400026::kIdFieldNumber;
const int Proto30400026::kNumFieldNumber;
const int Proto30400026::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto30400026::Proto30400026()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400026::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto30400026::Proto30400026(const Proto30400026& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400026::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  num_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400026::~Proto30400026() {
  SharedDtor();
}

void Proto30400026::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto30400026::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400026::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400026_descriptor_;
}

const Proto30400026& Proto30400026::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400026* Proto30400026::default_instance_ = NULL;

Proto30400026* Proto30400026::New() const {
  return new Proto30400026;
}

void Proto30400026::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    num_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400026::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_num;
        break;
      }
      
      // optional int32 num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400026::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional int32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }
  
  // optional .ProtoThreeObj other_info = 3;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400026::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional int32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }
  
  // optional .ProtoThreeObj other_info = 3;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400026::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional int32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->num());
    }
    
    // optional .ProtoThreeObj other_info = 3;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400026::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400026* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400026*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400026::MergeFrom(const Proto30400026& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400026::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400026::CopyFrom(const Proto30400026& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400026::IsInitialized() const {
  
  return true;
}

void Proto30400026::Swap(Proto30400026* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(num_, other->num_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400026::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400026_descriptor_;
  metadata.reflection = Proto30400026_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400045::kActivityIdFieldNumber;
const int Proto31400045::kMoneyFieldNumber;
const int Proto31400045::kObjFieldNumber;
#endif  // !_MSC_VER

Proto31400045::Proto31400045()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400045::InitAsDefaultInstance() {
  money_ = const_cast< ::ProtoMoney*>(&::ProtoMoney::default_instance());
  obj_ = const_cast< ::ProtoSerialObj*>(&::ProtoSerialObj::default_instance());
}

Proto31400045::Proto31400045(const Proto31400045& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400045::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  money_ = NULL;
  obj_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400045::~Proto31400045() {
  SharedDtor();
}

void Proto31400045::SharedDtor() {
  if (this != default_instance_) {
    delete money_;
    delete obj_;
  }
}

void Proto31400045::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400045::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400045_descriptor_;
}

const Proto31400045& Proto31400045::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto31400045* Proto31400045::default_instance_ = NULL;

Proto31400045* Proto31400045::New() const {
  return new Proto31400045;
}

void Proto31400045::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    if (has_money()) {
      if (money_ != NULL) money_->::ProtoMoney::Clear();
    }
    if (has_obj()) {
      if (obj_ != NULL) obj_->::ProtoSerialObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400045::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_money;
        break;
      }
      
      // optional .ProtoMoney money = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_money:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_money()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_obj;
        break;
      }
      
      // optional .ProtoSerialObj obj = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_obj:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_obj()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400045::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional .ProtoMoney money = 2;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->money(), output);
  }
  
  // optional .ProtoSerialObj obj = 3;
  if (has_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->obj(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400045::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional .ProtoMoney money = 2;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->money(), target);
  }
  
  // optional .ProtoSerialObj obj = 3;
  if (has_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->obj(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400045::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional .ProtoMoney money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->money());
    }
    
    // optional .ProtoSerialObj obj = 3;
    if (has_obj()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->obj());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400045::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400045* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400045*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400045::MergeFrom(const Proto31400045& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_money()) {
      mutable_money()->::ProtoMoney::MergeFrom(from.money());
    }
    if (from.has_obj()) {
      mutable_obj()->::ProtoSerialObj::MergeFrom(from.obj());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400045::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400045::CopyFrom(const Proto31400045& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400045::IsInitialized() const {
  
  return true;
}

void Proto31400045::Swap(Proto31400045* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(money_, other->money_);
    std::swap(obj_, other->obj_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400045::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400045_descriptor_;
  metadata.reflection = Proto31400045_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30103102::kTypeFieldNumber;
const int Proto30103102::kIdFieldNumber;
const int Proto30103102::kValueFieldNumber;
const int Proto30103102::kSub1FieldNumber;
const int Proto30103102::kSub2FieldNumber;
const int Proto30103102::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto30103102::Proto30103102()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30103102::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto30103102::Proto30103102(const Proto30103102& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30103102::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  value_ = GOOGLE_LONGLONG(0);
  sub_1_ = 0;
  sub_2_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30103102::~Proto30103102() {
  SharedDtor();
}

void Proto30103102::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto30103102::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30103102::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30103102_descriptor_;
}

const Proto30103102& Proto30103102::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30103102* Proto30103102::default_instance_ = NULL;

Proto30103102* Proto30103102::New() const {
  return new Proto30103102;
}

void Proto30103102::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    id_ = GOOGLE_LONGLONG(0);
    value_ = GOOGLE_LONGLONG(0);
    sub_1_ = 0;
    sub_2_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30103102::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }
      
      // optional int64 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_value;
        break;
      }
      
      // optional int64 value = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_sub_1;
        break;
      }
      
      // optional int32 sub_1 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sub_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sub_1_)));
          set_has_sub_1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_sub_2;
        break;
      }
      
      // optional int32 sub_2 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sub_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sub_2_)));
          set_has_sub_2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30103102::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int64 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->id(), output);
  }
  
  // optional int64 value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->value(), output);
  }
  
  // optional int32 sub_1 = 4;
  if (has_sub_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->sub_1(), output);
  }
  
  // optional int32 sub_2 = 5;
  if (has_sub_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->sub_2(), output);
  }
  
  // optional .ProtoThreeObj other_info = 6;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30103102::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int64 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->id(), target);
  }
  
  // optional int64 value = 3;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->value(), target);
  }
  
  // optional int32 sub_1 = 4;
  if (has_sub_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->sub_1(), target);
  }
  
  // optional int32 sub_2 = 5;
  if (has_sub_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->sub_2(), target);
  }
  
  // optional .ProtoThreeObj other_info = 6;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30103102::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int64 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->id());
    }
    
    // optional int64 value = 3;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->value());
    }
    
    // optional int32 sub_1 = 4;
    if (has_sub_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sub_1());
    }
    
    // optional int32 sub_2 = 5;
    if (has_sub_2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sub_2());
    }
    
    // optional .ProtoThreeObj other_info = 6;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30103102::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30103102* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30103102*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30103102::MergeFrom(const Proto30103102& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_sub_1()) {
      set_sub_1(from.sub_1());
    }
    if (from.has_sub_2()) {
      set_sub_2(from.sub_2());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30103102::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30103102::CopyFrom(const Proto30103102& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30103102::IsInitialized() const {
  
  return true;
}

void Proto30103102::Swap(Proto30103102* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(id_, other->id_);
    std::swap(value_, other->value_);
    std::swap(sub_1_, other->sub_1_);
    std::swap(sub_2_, other->sub_2_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30103102::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30103102_descriptor_;
  metadata.reflection = Proto30103102_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400454::kFlagLvlFieldNumber;
const int Proto30400454::kLeagueIndexFieldNumber;
#endif  // !_MSC_VER

Proto30400454::Proto30400454()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400454::InitAsDefaultInstance() {
}

Proto30400454::Proto30400454(const Proto30400454& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400454::SharedCtor() {
  _cached_size_ = 0;
  flag_lvl_ = 0;
  league_index_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400454::~Proto30400454() {
  SharedDtor();
}

void Proto30400454::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400454::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400454::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400454_descriptor_;
}

const Proto30400454& Proto30400454::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400454* Proto30400454::default_instance_ = NULL;

Proto30400454* Proto30400454::New() const {
  return new Proto30400454;
}

void Proto30400454::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    flag_lvl_ = 0;
    league_index_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400454::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flag_lvl = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_lvl_)));
          set_has_flag_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_league_index;
        break;
      }
      
      // optional int64 league_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_index_)));
          set_has_league_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400454::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 flag_lvl = 1;
  if (has_flag_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag_lvl(), output);
  }
  
  // optional int64 league_index = 2;
  if (has_league_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->league_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400454::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 flag_lvl = 1;
  if (has_flag_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag_lvl(), target);
  }
  
  // optional int64 league_index = 2;
  if (has_league_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->league_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400454::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 flag_lvl = 1;
    if (has_flag_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag_lvl());
    }
    
    // optional int64 league_index = 2;
    if (has_league_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400454::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400454* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400454*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400454::MergeFrom(const Proto30400454& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flag_lvl()) {
      set_flag_lvl(from.flag_lvl());
    }
    if (from.has_league_index()) {
      set_league_index(from.league_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400454::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400454::CopyFrom(const Proto30400454& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400454::IsInitialized() const {
  
  return true;
}

void Proto30400454::Swap(Proto30400454* other) {
  if (other != this) {
    std::swap(flag_lvl_, other->flag_lvl_);
    std::swap(league_index_, other->league_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400454::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400454_descriptor_;
  metadata.reflection = Proto30400454_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100409::kGoldFieldNumber;
const int Proto30100409::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto30100409::Proto30100409()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100409::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto30100409::Proto30100409(const Proto30100409& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100409::SharedCtor() {
  _cached_size_ = 0;
  gold_ = GOOGLE_LONGLONG(0);
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100409::~Proto30100409() {
  SharedDtor();
}

void Proto30100409::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto30100409::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100409::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100409_descriptor_;
}

const Proto30100409& Proto30100409::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30100409* Proto30100409::default_instance_ = NULL;

Proto30100409* Proto30100409::New() const {
  return new Proto30100409;
}

void Proto30100409::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gold_ = GOOGLE_LONGLONG(0);
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100409::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 gold = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100409::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 gold = 1;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->gold(), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100409::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 gold = 1;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->gold(), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100409::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 gold = 1;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->gold());
    }
    
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100409::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100409* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100409*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100409::MergeFrom(const Proto30100409& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100409::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100409::CopyFrom(const Proto30100409& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100409::IsInitialized() const {
  
  return true;
}

void Proto30100409::Swap(Proto30100409* other) {
  if (other != this) {
    std::swap(gold_, other->gold_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100409::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100409_descriptor_;
  metadata.reflection = Proto30100409_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100410::kExpFieldNumber;
const int Proto30100410::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto30100410::Proto30100410()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100410::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto30100410::Proto30100410(const Proto30100410& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100410::SharedCtor() {
  _cached_size_ = 0;
  exp_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100410::~Proto30100410() {
  SharedDtor();
}

void Proto30100410::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto30100410::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100410::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100410_descriptor_;
}

const Proto30100410& Proto30100410::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30100410* Proto30100410::default_instance_ = NULL;

Proto30100410* Proto30100410::New() const {
  return new Proto30100410;
}

void Proto30100410::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    exp_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100410::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 exp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100410::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 exp = 1;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->exp(), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100410::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 exp = 1;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->exp(), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100410::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 exp = 1;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }
    
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100410::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100410* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100410*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100410::MergeFrom(const Proto30100410& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100410::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100410::CopyFrom(const Proto30100410& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100410::IsInitialized() const {
  
  return true;
}

void Proto30100410::Swap(Proto30100410* other) {
  if (other != this) {
    std::swap(exp_, other->exp_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100410::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100410_descriptor_;
  metadata.reflection = Proto30100410_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30600104::kFlagFieldNumber;
const int Proto30600104::kNameFieldNumber;
const int Proto30600104::kContentFieldNumber;
#endif  // !_MSC_VER

Proto30600104::Proto30600104()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30600104::InitAsDefaultInstance() {
}

Proto30600104::Proto30600104(const Proto30600104& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30600104::SharedCtor() {
  _cached_size_ = 0;
  flag_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30600104::~Proto30600104() {
  SharedDtor();
}

void Proto30600104::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void Proto30600104::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30600104::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30600104_descriptor_;
}

const Proto30600104& Proto30600104::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30600104* Proto30600104::default_instance_ = NULL;

Proto30600104* Proto30600104::New() const {
  return new Proto30600104;
}

void Proto30600104::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    flag_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30600104::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_content;
        break;
      }
      
      // optional bytes content = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30600104::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 flag = 1;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag(), output);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  // optional bytes content = 3;
  if (has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->content(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30600104::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 flag = 1;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag(), target);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  // optional bytes content = 3;
  if (has_content()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->content(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30600104::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 flag = 1;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }
    
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // optional bytes content = 3;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->content());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30600104::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30600104* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30600104*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30600104::MergeFrom(const Proto30600104& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flag()) {
      set_flag(from.flag());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30600104::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30600104::CopyFrom(const Proto30600104& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30600104::IsInitialized() const {
  
  return true;
}

void Proto30600104::Swap(Proto30600104* other) {
  if (other != this) {
    std::swap(flag_, other->flag_);
    std::swap(name_, other->name_);
    std::swap(content_, other->content_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30600104::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30600104_descriptor_;
  metadata.reflection = Proto30600104_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400040::kBossIdFieldNumber;
const int Proto30400040::kCoordFieldNumber;
const int Proto30400040::kSceneIdFieldNumber;
#endif  // !_MSC_VER

Proto30400040::Proto30400040()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400040::InitAsDefaultInstance() {
  coord_ = const_cast< ::ProtoCoord*>(&::ProtoCoord::default_instance());
}

Proto30400040::Proto30400040(const Proto30400040& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400040::SharedCtor() {
  _cached_size_ = 0;
  boss_id_ = 0;
  coord_ = NULL;
  scene_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400040::~Proto30400040() {
  SharedDtor();
}

void Proto30400040::SharedDtor() {
  if (this != default_instance_) {
    delete coord_;
  }
}

void Proto30400040::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400040::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400040_descriptor_;
}

const Proto30400040& Proto30400040::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400040* Proto30400040::default_instance_ = NULL;

Proto30400040* Proto30400040::New() const {
  return new Proto30400040;
}

void Proto30400040::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    boss_id_ = 0;
    if (has_coord()) {
      if (coord_ != NULL) coord_->::ProtoCoord::Clear();
    }
    scene_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400040::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 boss_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &boss_id_)));
          set_has_boss_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_coord;
        break;
      }
      
      // optional .ProtoCoord coord = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_coord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_coord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400040::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 boss_id = 1;
  if (has_boss_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->boss_id(), output);
  }
  
  // optional .ProtoCoord coord = 2;
  if (has_coord()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->coord(), output);
  }
  
  // optional int32 scene_id = 3;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->scene_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400040::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 boss_id = 1;
  if (has_boss_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->boss_id(), target);
  }
  
  // optional .ProtoCoord coord = 2;
  if (has_coord()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->coord(), target);
  }
  
  // optional int32 scene_id = 3;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->scene_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400040::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 boss_id = 1;
    if (has_boss_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->boss_id());
    }
    
    // optional .ProtoCoord coord = 2;
    if (has_coord()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->coord());
    }
    
    // optional int32 scene_id = 3;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400040::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400040* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400040*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400040::MergeFrom(const Proto30400040& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_boss_id()) {
      set_boss_id(from.boss_id());
    }
    if (from.has_coord()) {
      mutable_coord()->::ProtoCoord::MergeFrom(from.coord());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400040::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400040::CopyFrom(const Proto30400040& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400040::IsInitialized() const {
  
  return true;
}

void Proto30400040::Swap(Proto30400040* other) {
  if (other != this) {
    std::swap(boss_id_, other->boss_id_);
    std::swap(coord_, other->coord_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400040::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400040_descriptor_;
  metadata.reflection = Proto30400040_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100606::kTodayGoldFieldNumber;
const int Proto30100606::kTodayBindGoldFieldNumber;
const int Proto30100606::kConsumGoldFieldNumber;
const int Proto30100606::kConsumBindGoldFieldNumber;
#endif  // !_MSC_VER

Proto30100606::Proto30100606()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100606::InitAsDefaultInstance() {
}

Proto30100606::Proto30100606(const Proto30100606& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100606::SharedCtor() {
  _cached_size_ = 0;
  today_gold_ = 0;
  today_bind_gold_ = 0;
  consum_gold_ = 0;
  consum_bind_gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100606::~Proto30100606() {
  SharedDtor();
}

void Proto30100606::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100606::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100606::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100606_descriptor_;
}

const Proto30100606& Proto30100606::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30100606* Proto30100606::default_instance_ = NULL;

Proto30100606* Proto30100606::New() const {
  return new Proto30100606;
}

void Proto30100606::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    today_gold_ = 0;
    today_bind_gold_ = 0;
    consum_gold_ = 0;
    consum_bind_gold_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100606::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 today_gold = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &today_gold_)));
          set_has_today_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_today_bind_gold;
        break;
      }
      
      // optional int32 today_bind_gold = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_today_bind_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &today_bind_gold_)));
          set_has_today_bind_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_consum_gold;
        break;
      }
      
      // optional int32 consum_gold = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_consum_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &consum_gold_)));
          set_has_consum_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_consum_bind_gold;
        break;
      }
      
      // optional int32 consum_bind_gold = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_consum_bind_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &consum_bind_gold_)));
          set_has_consum_bind_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100606::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 today_gold = 1;
  if (has_today_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->today_gold(), output);
  }
  
  // optional int32 today_bind_gold = 2;
  if (has_today_bind_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->today_bind_gold(), output);
  }
  
  // optional int32 consum_gold = 3;
  if (has_consum_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->consum_gold(), output);
  }
  
  // optional int32 consum_bind_gold = 4;
  if (has_consum_bind_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->consum_bind_gold(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100606::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 today_gold = 1;
  if (has_today_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->today_gold(), target);
  }
  
  // optional int32 today_bind_gold = 2;
  if (has_today_bind_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->today_bind_gold(), target);
  }
  
  // optional int32 consum_gold = 3;
  if (has_consum_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->consum_gold(), target);
  }
  
  // optional int32 consum_bind_gold = 4;
  if (has_consum_bind_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->consum_bind_gold(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100606::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 today_gold = 1;
    if (has_today_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->today_gold());
    }
    
    // optional int32 today_bind_gold = 2;
    if (has_today_bind_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->today_bind_gold());
    }
    
    // optional int32 consum_gold = 3;
    if (has_consum_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->consum_gold());
    }
    
    // optional int32 consum_bind_gold = 4;
    if (has_consum_bind_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->consum_bind_gold());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100606::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100606* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100606*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100606::MergeFrom(const Proto30100606& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_today_gold()) {
      set_today_gold(from.today_gold());
    }
    if (from.has_today_bind_gold()) {
      set_today_bind_gold(from.today_bind_gold());
    }
    if (from.has_consum_gold()) {
      set_consum_gold(from.consum_gold());
    }
    if (from.has_consum_bind_gold()) {
      set_consum_bind_gold(from.consum_bind_gold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100606::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100606::CopyFrom(const Proto30100606& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100606::IsInitialized() const {
  
  return true;
}

void Proto30100606::Swap(Proto30100606* other) {
  if (other != this) {
    std::swap(today_gold_, other->today_gold_);
    std::swap(today_bind_gold_, other->today_bind_gold_);
    std::swap(consum_gold_, other->consum_gold_);
    std::swap(consum_bind_gold_, other->consum_bind_gold_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100606::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100606_descriptor_;
  metadata.reflection = Proto30100606_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400041::kIconTypeFieldNumber;
const int Proto30400041::kDropActFieldNumber;
const int Proto30400041::kStartTickFieldNumber;
const int Proto30400041::kEndTickFieldNumber;
const int Proto30400041::kUpdateTickFieldNumber;
#endif  // !_MSC_VER

Proto30400041::Proto30400041()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400041::InitAsDefaultInstance() {
}

Proto30400041::Proto30400041(const Proto30400041& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400041::SharedCtor() {
  _cached_size_ = 0;
  icon_type_ = 0;
  drop_act_ = 0;
  start_tick_ = GOOGLE_LONGLONG(0);
  end_tick_ = GOOGLE_LONGLONG(0);
  update_tick_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400041::~Proto30400041() {
  SharedDtor();
}

void Proto30400041::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400041::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400041::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400041_descriptor_;
}

const Proto30400041& Proto30400041::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400041* Proto30400041::default_instance_ = NULL;

Proto30400041* Proto30400041::New() const {
  return new Proto30400041;
}

void Proto30400041::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    icon_type_ = 0;
    drop_act_ = 0;
    start_tick_ = GOOGLE_LONGLONG(0);
    end_tick_ = GOOGLE_LONGLONG(0);
    update_tick_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400041::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 icon_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &icon_type_)));
          set_has_icon_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_drop_act;
        break;
      }
      
      // optional int32 drop_act = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_drop_act:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &drop_act_)));
          set_has_drop_act();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_start_tick;
        break;
      }
      
      // optional int64 start_tick = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_tick_)));
          set_has_start_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_end_tick;
        break;
      }
      
      // optional int64 end_tick = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_tick_)));
          set_has_end_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_update_tick;
        break;
      }
      
      // optional int64 update_tick = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_update_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &update_tick_)));
          set_has_update_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400041::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 icon_type = 1;
  if (has_icon_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->icon_type(), output);
  }
  
  // optional int32 drop_act = 2;
  if (has_drop_act()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->drop_act(), output);
  }
  
  // optional int64 start_tick = 3;
  if (has_start_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->start_tick(), output);
  }
  
  // optional int64 end_tick = 4;
  if (has_end_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->end_tick(), output);
  }
  
  // optional int64 update_tick = 5;
  if (has_update_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->update_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400041::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 icon_type = 1;
  if (has_icon_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->icon_type(), target);
  }
  
  // optional int32 drop_act = 2;
  if (has_drop_act()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->drop_act(), target);
  }
  
  // optional int64 start_tick = 3;
  if (has_start_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->start_tick(), target);
  }
  
  // optional int64 end_tick = 4;
  if (has_end_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->end_tick(), target);
  }
  
  // optional int64 update_tick = 5;
  if (has_update_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->update_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400041::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 icon_type = 1;
    if (has_icon_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->icon_type());
    }
    
    // optional int32 drop_act = 2;
    if (has_drop_act()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->drop_act());
    }
    
    // optional int64 start_tick = 3;
    if (has_start_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_tick());
    }
    
    // optional int64 end_tick = 4;
    if (has_end_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_tick());
    }
    
    // optional int64 update_tick = 5;
    if (has_update_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->update_tick());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400041::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400041* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400041*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400041::MergeFrom(const Proto30400041& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_icon_type()) {
      set_icon_type(from.icon_type());
    }
    if (from.has_drop_act()) {
      set_drop_act(from.drop_act());
    }
    if (from.has_start_tick()) {
      set_start_tick(from.start_tick());
    }
    if (from.has_end_tick()) {
      set_end_tick(from.end_tick());
    }
    if (from.has_update_tick()) {
      set_update_tick(from.update_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400041::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400041::CopyFrom(const Proto30400041& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400041::IsInitialized() const {
  
  return true;
}

void Proto30400041::Swap(Proto30400041* other) {
  if (other != this) {
    std::swap(icon_type_, other->icon_type_);
    std::swap(drop_act_, other->drop_act_);
    std::swap(start_tick_, other->start_tick_);
    std::swap(end_tick_, other->end_tick_);
    std::swap(update_tick_, other->update_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400041::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400041_descriptor_;
  metadata.reflection = Proto30400041_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400146::kLevelFieldNumber;
const int Proto31400146::kExpFieldNumber;
const int Proto31400146::kSelectIdFieldNumber;
const int Proto31400146::kSelectColorIdFieldNumber;
const int Proto31400146::kOpenFieldNumber;
const int Proto31400146::kSendSetFieldNumber;
const int Proto31400146::kFashionInfoFieldNumber;
#endif  // !_MSC_VER

Proto31400146::Proto31400146()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400146::InitAsDefaultInstance() {
}

Proto31400146::Proto31400146(const Proto31400146& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400146::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  exp_ = 0;
  select_id_ = 0;
  select_color_id_ = 0;
  open_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400146::~Proto31400146() {
  SharedDtor();
}

void Proto31400146::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400146::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400146::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400146_descriptor_;
}

const Proto31400146& Proto31400146::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto31400146* Proto31400146::default_instance_ = NULL;

Proto31400146* Proto31400146::New() const {
  return new Proto31400146;
}

void Proto31400146::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    exp_ = 0;
    select_id_ = 0;
    select_color_id_ = 0;
    open_ = 0;
  }
  send_set_.Clear();
  fashion_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400146::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exp;
        break;
      }
      
      // optional int32 exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_select_id;
        break;
      }
      
      // optional int32 select_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_select_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &select_id_)));
          set_has_select_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_select_color_id;
        break;
      }
      
      // optional int32 select_color_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_select_color_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &select_color_id_)));
          set_has_select_color_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_open;
        break;
      }
      
      // optional int32 open = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_)));
          set_has_open();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_send_set;
        break;
      }
      
      // repeated int32 send_set = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_send_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_send_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_send_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_send_set;
        if (input->ExpectTag(58)) goto parse_fashion_info;
        break;
      }
      
      // repeated .ProtoFashionDetail fashion_info = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fashion_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fashion_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_fashion_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400146::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exp(), output);
  }
  
  // optional int32 select_id = 3;
  if (has_select_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->select_id(), output);
  }
  
  // optional int32 select_color_id = 4;
  if (has_select_color_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->select_color_id(), output);
  }
  
  // optional int32 open = 5;
  if (has_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->open(), output);
  }
  
  // repeated int32 send_set = 6;
  for (int i = 0; i < this->send_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->send_set(i), output);
  }
  
  // repeated .ProtoFashionDetail fashion_info = 7;
  for (int i = 0; i < this->fashion_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->fashion_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400146::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exp(), target);
  }
  
  // optional int32 select_id = 3;
  if (has_select_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->select_id(), target);
  }
  
  // optional int32 select_color_id = 4;
  if (has_select_color_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->select_color_id(), target);
  }
  
  // optional int32 open = 5;
  if (has_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->open(), target);
  }
  
  // repeated int32 send_set = 6;
  for (int i = 0; i < this->send_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->send_set(i), target);
  }
  
  // repeated .ProtoFashionDetail fashion_info = 7;
  for (int i = 0; i < this->fashion_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->fashion_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400146::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 exp = 2;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }
    
    // optional int32 select_id = 3;
    if (has_select_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->select_id());
    }
    
    // optional int32 select_color_id = 4;
    if (has_select_color_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->select_color_id());
    }
    
    // optional int32 open = 5;
    if (has_open()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open());
    }
    
  }
  // repeated int32 send_set = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->send_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->send_set(i));
    }
    total_size += 1 * this->send_set_size() + data_size;
  }
  
  // repeated .ProtoFashionDetail fashion_info = 7;
  total_size += 1 * this->fashion_info_size();
  for (int i = 0; i < this->fashion_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fashion_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400146::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400146* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400146*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400146::MergeFrom(const Proto31400146& from) {
  GOOGLE_CHECK_NE(&from, this);
  send_set_.MergeFrom(from.send_set_);
  fashion_info_.MergeFrom(from.fashion_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_select_id()) {
      set_select_id(from.select_id());
    }
    if (from.has_select_color_id()) {
      set_select_color_id(from.select_color_id());
    }
    if (from.has_open()) {
      set_open(from.open());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400146::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400146::CopyFrom(const Proto31400146& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400146::IsInitialized() const {
  
  return true;
}

void Proto31400146::Swap(Proto31400146* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(exp_, other->exp_);
    std::swap(select_id_, other->select_id_);
    std::swap(select_color_id_, other->select_color_id_);
    std::swap(open_, other->open_);
    send_set_.Swap(&other->send_set_);
    fashion_info_.Swap(&other->fashion_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400146::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400146_descriptor_;
  metadata.reflection = Proto31400146_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400410::kLevelFieldNumber;
const int Proto30400410::kExpFieldNumber;
const int Proto30400410::kOpenFieldNumber;
const int Proto30400410::kNotifyFlagFieldNumber;
const int Proto30400410::kSelectIdFieldNumber;
const int Proto30400410::kSelColorIdFieldNumber;
#endif  // !_MSC_VER

Proto30400410::Proto30400410()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400410::InitAsDefaultInstance() {
}

Proto30400410::Proto30400410(const Proto30400410& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400410::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  exp_ = 0;
  open_ = 0;
  notify_flag_ = 0;
  select_id_ = 0;
  sel_color_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400410::~Proto30400410() {
  SharedDtor();
}

void Proto30400410::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400410::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400410::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400410_descriptor_;
}

const Proto30400410& Proto30400410::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400410* Proto30400410::default_instance_ = NULL;

Proto30400410* Proto30400410::New() const {
  return new Proto30400410;
}

void Proto30400410::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    exp_ = 0;
    open_ = 0;
    notify_flag_ = 0;
    select_id_ = 0;
    sel_color_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400410::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exp;
        break;
      }
      
      // optional int32 exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_open;
        break;
      }
      
      // optional int32 open = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_)));
          set_has_open();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_notify_flag;
        break;
      }
      
      // optional int32 notify_flag = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_notify_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &notify_flag_)));
          set_has_notify_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_select_id;
        break;
      }
      
      // optional int32 select_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_select_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &select_id_)));
          set_has_select_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_sel_color_id;
        break;
      }
      
      // optional int32 sel_color_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sel_color_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sel_color_id_)));
          set_has_sel_color_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400410::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exp(), output);
  }
  
  // optional int32 open = 3;
  if (has_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->open(), output);
  }
  
  // optional int32 notify_flag = 4;
  if (has_notify_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->notify_flag(), output);
  }
  
  // optional int32 select_id = 5;
  if (has_select_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->select_id(), output);
  }
  
  // optional int32 sel_color_id = 6;
  if (has_sel_color_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->sel_color_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400410::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exp(), target);
  }
  
  // optional int32 open = 3;
  if (has_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->open(), target);
  }
  
  // optional int32 notify_flag = 4;
  if (has_notify_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->notify_flag(), target);
  }
  
  // optional int32 select_id = 5;
  if (has_select_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->select_id(), target);
  }
  
  // optional int32 sel_color_id = 6;
  if (has_sel_color_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->sel_color_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400410::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 exp = 2;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }
    
    // optional int32 open = 3;
    if (has_open()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open());
    }
    
    // optional int32 notify_flag = 4;
    if (has_notify_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->notify_flag());
    }
    
    // optional int32 select_id = 5;
    if (has_select_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->select_id());
    }
    
    // optional int32 sel_color_id = 6;
    if (has_sel_color_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sel_color_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400410::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400410* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400410*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400410::MergeFrom(const Proto30400410& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_open()) {
      set_open(from.open());
    }
    if (from.has_notify_flag()) {
      set_notify_flag(from.notify_flag());
    }
    if (from.has_select_id()) {
      set_select_id(from.select_id());
    }
    if (from.has_sel_color_id()) {
      set_sel_color_id(from.sel_color_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400410::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400410::CopyFrom(const Proto30400410& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400410::IsInitialized() const {
  
  return true;
}

void Proto30400410::Swap(Proto30400410* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(exp_, other->exp_);
    std::swap(open_, other->open_);
    std::swap(notify_flag_, other->notify_flag_);
    std::swap(select_id_, other->select_id_);
    std::swap(sel_color_id_, other->sel_color_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400410::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400410_descriptor_;
  metadata.reflection = Proto30400410_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30402401::kItemIdFieldNumber;
const int Proto30402401::kItemNumFieldNumber;
const int Proto30402401::kReceiverIdFieldNumber;
const int Proto30402401::kReceiverNameFieldNumber;
#endif  // !_MSC_VER

Proto30402401::Proto30402401()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30402401::InitAsDefaultInstance() {
}

Proto30402401::Proto30402401(const Proto30402401& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30402401::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  item_num_ = 0;
  receiver_id_ = GOOGLE_LONGLONG(0);
  receiver_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30402401::~Proto30402401() {
  SharedDtor();
}

void Proto30402401::SharedDtor() {
  if (receiver_name_ != &::google::protobuf::internal::kEmptyString) {
    delete receiver_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto30402401::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30402401::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30402401_descriptor_;
}

const Proto30402401& Proto30402401::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30402401* Proto30402401::default_instance_ = NULL;

Proto30402401* Proto30402401::New() const {
  return new Proto30402401;
}

void Proto30402401::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    item_num_ = 0;
    receiver_id_ = GOOGLE_LONGLONG(0);
    if (has_receiver_name()) {
      if (receiver_name_ != &::google::protobuf::internal::kEmptyString) {
        receiver_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30402401::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_num;
        break;
      }
      
      // optional int32 item_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
          set_has_item_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_receiver_id;
        break;
      }
      
      // optional int64 receiver_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_receiver_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &receiver_id_)));
          set_has_receiver_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_receiver_name;
        break;
      }
      
      // optional string receiver_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_receiver_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receiver_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->receiver_name().data(), this->receiver_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30402401::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 item_num = 2;
  if (has_item_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_num(), output);
  }
  
  // optional int64 receiver_id = 3;
  if (has_receiver_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->receiver_id(), output);
  }
  
  // optional string receiver_name = 4;
  if (has_receiver_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiver_name().data(), this->receiver_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->receiver_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30402401::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 item_num = 2;
  if (has_item_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_num(), target);
  }
  
  // optional int64 receiver_id = 3;
  if (has_receiver_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->receiver_id(), target);
  }
  
  // optional string receiver_name = 4;
  if (has_receiver_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->receiver_name().data(), this->receiver_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->receiver_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30402401::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_num = 2;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_num());
    }
    
    // optional int64 receiver_id = 3;
    if (has_receiver_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->receiver_id());
    }
    
    // optional string receiver_name = 4;
    if (has_receiver_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->receiver_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30402401::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30402401* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30402401*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30402401::MergeFrom(const Proto30402401& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_num()) {
      set_item_num(from.item_num());
    }
    if (from.has_receiver_id()) {
      set_receiver_id(from.receiver_id());
    }
    if (from.has_receiver_name()) {
      set_receiver_name(from.receiver_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30402401::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30402401::CopyFrom(const Proto30402401& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30402401::IsInitialized() const {
  
  return true;
}

void Proto30402401::Swap(Proto30402401* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(item_num_, other->item_num_);
    std::swap(receiver_id_, other->receiver_id_);
    std::swap(receiver_name_, other->receiver_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30402401::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30402401_descriptor_;
  metadata.reflection = Proto30402401_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100243::kLeagueIndexFieldNumber;
#endif  // !_MSC_VER

Proto30100243::Proto30100243()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100243::InitAsDefaultInstance() {
}

Proto30100243::Proto30100243(const Proto30100243& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100243::SharedCtor() {
  _cached_size_ = 0;
  league_index_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100243::~Proto30100243() {
  SharedDtor();
}

void Proto30100243::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100243::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100243::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100243_descriptor_;
}

const Proto30100243& Proto30100243::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30100243* Proto30100243::default_instance_ = NULL;

Proto30100243* Proto30100243::New() const {
  return new Proto30100243;
}

void Proto30100243::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_index_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100243::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 league_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_index_)));
          set_has_league_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100243::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->league_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100243::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->league_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100243::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 league_index = 1;
    if (has_league_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100243::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100243* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100243*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100243::MergeFrom(const Proto30100243& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_index()) {
      set_league_index(from.league_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100243::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100243::CopyFrom(const Proto30100243& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100243::IsInitialized() const {
  
  return true;
}

void Proto30100243::Swap(Proto30100243* other) {
  if (other != this) {
    std::swap(league_index_, other->league_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100243::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100243_descriptor_;
  metadata.reflection = Proto30100243_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400455::kIndexFieldNumber;
const int Proto30400455::kNameFieldNumber;
#endif  // !_MSC_VER

Proto30400455::Proto30400455()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400455::InitAsDefaultInstance() {
}

Proto30400455::Proto30400455(const Proto30400455& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400455::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400455::~Proto30400455() {
  SharedDtor();
}

void Proto30400455::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Proto30400455::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400455::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400455_descriptor_;
}

const Proto30400455& Proto30400455::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400455* Proto30400455::default_instance_ = NULL;

Proto30400455* Proto30400455::New() const {
  return new Proto30400455;
}

void Proto30400455::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400455::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400455::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400455::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400455::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400455::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400455* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400455*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400455::MergeFrom(const Proto30400455& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400455::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400455::CopyFrom(const Proto30400455& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400455::IsInitialized() const {
  
  return true;
}

void Proto30400455::Swap(Proto30400455* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400455::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400455_descriptor_;
  metadata.reflection = Proto30400455_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400048::kItemListFieldNumber;
const int Proto31400048::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto31400048::Proto31400048()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400048::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto31400048::Proto31400048(const Proto31400048& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400048::SharedCtor() {
  _cached_size_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400048::~Proto31400048() {
  SharedDtor();
}

void Proto31400048::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto31400048::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400048::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400048_descriptor_;
}

const Proto31400048& Proto31400048::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto31400048* Proto31400048::default_instance_ = NULL;

Proto31400048* Proto31400048::New() const {
  return new Proto31400048;
}

void Proto31400048::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400048::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem item_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item_list;
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400048::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(i), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400048::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem item_list = 1;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_list(i), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400048::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  // repeated .ProtoItem item_list = 1;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400048::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400048* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400048*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400048::MergeFrom(const Proto31400048& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400048::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400048::CopyFrom(const Proto31400048& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400048::IsInitialized() const {
  
  return true;
}

void Proto31400048::Swap(Proto31400048* other) {
  if (other != this) {
    item_list_.Swap(&other->item_list_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400048::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400048_descriptor_;
  metadata.reflection = Proto31400048_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400914::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto30400914::Proto30400914()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400914::InitAsDefaultInstance() {
}

Proto30400914::Proto30400914(const Proto30400914& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400914::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400914::~Proto30400914() {
  SharedDtor();
}

void Proto30400914::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400914::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400914::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400914_descriptor_;
}

const Proto30400914& Proto30400914::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400914* Proto30400914::default_instance_ = NULL;

Proto30400914* Proto30400914::New() const {
  return new Proto30400914;
}

void Proto30400914::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400914::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400914::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400914::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400914::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400914::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400914* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400914*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400914::MergeFrom(const Proto30400914& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400914::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400914::CopyFrom(const Proto30400914& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400914::IsInitialized() const {
  
  return true;
}

void Proto30400914::Swap(Proto30400914* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400914::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400914_descriptor_;
  metadata.reflection = Proto30400914_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400915::kPrevSceneIdFieldNumber;
#endif  // !_MSC_VER

Proto30400915::Proto30400915()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400915::InitAsDefaultInstance() {
}

Proto30400915::Proto30400915(const Proto30400915& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400915::SharedCtor() {
  _cached_size_ = 0;
  prev_scene_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400915::~Proto30400915() {
  SharedDtor();
}

void Proto30400915::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400915::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400915::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400915_descriptor_;
}

const Proto30400915& Proto30400915::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400915* Proto30400915::default_instance_ = NULL;

Proto30400915* Proto30400915::New() const {
  return new Proto30400915;
}

void Proto30400915::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    prev_scene_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400915::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 prev_scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prev_scene_id_)));
          set_has_prev_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400915::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 prev_scene_id = 1;
  if (has_prev_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->prev_scene_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400915::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 prev_scene_id = 1;
  if (has_prev_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->prev_scene_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400915::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 prev_scene_id = 1;
    if (has_prev_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->prev_scene_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400915::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400915* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400915*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400915::MergeFrom(const Proto30400915& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_prev_scene_id()) {
      set_prev_scene_id(from.prev_scene_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400915::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400915::CopyFrom(const Proto30400915& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400915::IsInitialized() const {
  
  return true;
}

void Proto30400915::Swap(Proto30400915* other) {
  if (other != this) {
    std::swap(prev_scene_id_, other->prev_scene_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400915::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400915_descriptor_;
  metadata.reflection = Proto30400915_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400916::kStateFieldNumber;
#endif  // !_MSC_VER

Proto30400916::Proto30400916()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400916::InitAsDefaultInstance() {
}

Proto30400916::Proto30400916(const Proto30400916& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400916::SharedCtor() {
  _cached_size_ = 0;
  state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400916::~Proto30400916() {
  SharedDtor();
}

void Proto30400916::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400916::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400916::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400916_descriptor_;
}

const Proto30400916& Proto30400916::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400916* Proto30400916::default_instance_ = NULL;

Proto30400916* Proto30400916::New() const {
  return new Proto30400916;
}

void Proto30400916::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400916::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400916::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400916::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400916::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 state = 1;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400916::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400916* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400916*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400916::MergeFrom(const Proto30400916& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400916::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400916::CopyFrom(const Proto30400916& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400916::IsInitialized() const {
  
  return true;
}

void Proto30400916::Swap(Proto30400916* other) {
  if (other != this) {
    std::swap(state_, other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400916::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400916_descriptor_;
  metadata.reflection = Proto30400916_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400049::kTypeFieldNumber;
const int Proto31400049::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto31400049::Proto31400049()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400049::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto31400049::Proto31400049(const Proto31400049& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400049::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400049::~Proto31400049() {
  SharedDtor();
}

void Proto31400049::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto31400049::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400049::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400049_descriptor_;
}

const Proto31400049& Proto31400049::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto31400049* Proto31400049::default_instance_ = NULL;

Proto31400049* Proto31400049::New() const {
  return new Proto31400049;
}

void Proto31400049::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400049::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400049::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400049::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400049::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400049::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400049* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400049*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400049::MergeFrom(const Proto31400049& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400049::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400049::CopyFrom(const Proto31400049& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400049::IsInitialized() const {
  
  return true;
}

void Proto31400049::Swap(Proto31400049* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400049::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400049_descriptor_;
  metadata.reflection = Proto31400049_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400050::kIndexFieldNumber;
const int Proto31400050::kOperateFieldNumber;
#endif  // !_MSC_VER

Proto31400050::Proto31400050()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400050::InitAsDefaultInstance() {
}

Proto31400050::Proto31400050(const Proto31400050& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400050::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  operate_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400050::~Proto31400050() {
  SharedDtor();
}

void Proto31400050::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400050::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400050::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400050_descriptor_;
}

const Proto31400050& Proto31400050::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto31400050* Proto31400050::default_instance_ = NULL;

Proto31400050* Proto31400050::New() const {
  return new Proto31400050;
}

void Proto31400050::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    operate_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400050::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_operate;
        break;
      }
      
      // optional int32 operate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_operate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &operate_)));
          set_has_operate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400050::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional int32 operate = 2;
  if (has_operate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->operate(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400050::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional int32 operate = 2;
  if (has_operate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->operate(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400050::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 operate = 2;
    if (has_operate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->operate());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400050::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400050* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400050*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400050::MergeFrom(const Proto31400050& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_operate()) {
      set_operate(from.operate());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400050::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400050::CopyFrom(const Proto31400050& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400050::IsInitialized() const {
  
  return true;
}

void Proto31400050::Swap(Proto31400050* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(operate_, other->operate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400050::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400050_descriptor_;
  metadata.reflection = Proto31400050_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400507::kRankInfoFieldNumber;
#endif  // !_MSC_VER

Proto30400507::Proto30400507()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400507::InitAsDefaultInstance() {
  rank_info_ = const_cast< ::ProtoWeddingRank*>(&::ProtoWeddingRank::default_instance());
}

Proto30400507::Proto30400507(const Proto30400507& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400507::SharedCtor() {
  _cached_size_ = 0;
  rank_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400507::~Proto30400507() {
  SharedDtor();
}

void Proto30400507::SharedDtor() {
  if (this != default_instance_) {
    delete rank_info_;
  }
}

void Proto30400507::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400507::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400507_descriptor_;
}

const Proto30400507& Proto30400507::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400507* Proto30400507::default_instance_ = NULL;

Proto30400507* Proto30400507::New() const {
  return new Proto30400507;
}

void Proto30400507::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_rank_info()) {
      if (rank_info_ != NULL) rank_info_->::ProtoWeddingRank::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400507::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoWeddingRank rank_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rank_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400507::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoWeddingRank rank_info = 1;
  if (has_rank_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rank_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400507::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoWeddingRank rank_info = 1;
  if (has_rank_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rank_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400507::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoWeddingRank rank_info = 1;
    if (has_rank_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rank_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400507::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400507* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400507*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400507::MergeFrom(const Proto30400507& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rank_info()) {
      mutable_rank_info()->::ProtoWeddingRank::MergeFrom(from.rank_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400507::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400507::CopyFrom(const Proto30400507& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400507::IsInitialized() const {
  
  return true;
}

void Proto30400507::Swap(Proto30400507* other) {
  if (other != this) {
    std::swap(rank_info_, other->rank_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400507::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400507_descriptor_;
  metadata.reflection = Proto30400507_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30102101::kBuffIdFieldNumber;
const int Proto30102101::kBuffTimeFieldNumber;
const int Proto30102101::kFromFieldNumber;
const int Proto30102101::kStatusFieldNumber;
const int Proto30102101::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto30102101::Proto30102101()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30102101::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto30102101::Proto30102101(const Proto30102101& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30102101::SharedCtor() {
  _cached_size_ = 0;
  buff_id_ = 0;
  buff_time_ = 0;
  from_ = 0;
  status_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30102101::~Proto30102101() {
  SharedDtor();
}

void Proto30102101::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto30102101::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30102101::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30102101_descriptor_;
}

const Proto30102101& Proto30102101::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30102101* Proto30102101::default_instance_ = NULL;

Proto30102101* Proto30102101::New() const {
  return new Proto30102101;
}

void Proto30102101::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    buff_id_ = 0;
    buff_time_ = 0;
    from_ = 0;
    status_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30102101::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 buff_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buff_id_)));
          set_has_buff_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_buff_time;
        break;
      }
      
      // optional int32 buff_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buff_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buff_time_)));
          set_has_buff_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_from;
        break;
      }
      
      // optional int32 from = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_from:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_)));
          set_has_from();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_status;
        break;
      }
      
      // optional int32 status = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30102101::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 buff_id = 1;
  if (has_buff_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->buff_id(), output);
  }
  
  // optional int32 buff_time = 2;
  if (has_buff_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->buff_time(), output);
  }
  
  // optional int32 from = 3;
  if (has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->from(), output);
  }
  
  // optional int32 status = 4;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->status(), output);
  }
  
  // optional .ProtoThreeObj other_info = 5;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30102101::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 buff_id = 1;
  if (has_buff_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->buff_id(), target);
  }
  
  // optional int32 buff_time = 2;
  if (has_buff_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->buff_time(), target);
  }
  
  // optional int32 from = 3;
  if (has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->from(), target);
  }
  
  // optional int32 status = 4;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->status(), target);
  }
  
  // optional .ProtoThreeObj other_info = 5;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30102101::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 buff_id = 1;
    if (has_buff_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buff_id());
    }
    
    // optional int32 buff_time = 2;
    if (has_buff_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buff_time());
    }
    
    // optional int32 from = 3;
    if (has_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->from());
    }
    
    // optional int32 status = 4;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional .ProtoThreeObj other_info = 5;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30102101::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30102101* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30102101*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30102101::MergeFrom(const Proto30102101& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buff_id()) {
      set_buff_id(from.buff_id());
    }
    if (from.has_buff_time()) {
      set_buff_time(from.buff_time());
    }
    if (from.has_from()) {
      set_from(from.from());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30102101::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30102101::CopyFrom(const Proto30102101& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30102101::IsInitialized() const {
  
  return true;
}

void Proto30102101::Swap(Proto30102101* other) {
  if (other != this) {
    std::swap(buff_id_, other->buff_id_);
    std::swap(buff_time_, other->buff_time_);
    std::swap(from_, other->from_);
    std::swap(status_, other->status_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30102101::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30102101_descriptor_;
  metadata.reflection = Proto30102101_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30102102::kTypeFieldNumber;
const int Proto30102102::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto30102102::Proto30102102()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30102102::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto30102102::Proto30102102(const Proto30102102& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30102102::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30102102::~Proto30102102() {
  SharedDtor();
}

void Proto30102102::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto30102102::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30102102::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30102102_descriptor_;
}

const Proto30102102& Proto30102102::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30102102* Proto30102102::default_instance_ = NULL;

Proto30102102* Proto30102102::New() const {
  return new Proto30102102;
}

void Proto30102102::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30102102::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30102102::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30102102::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30102102::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30102102::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30102102* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30102102*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30102102::MergeFrom(const Proto30102102& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30102102::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30102102::CopyFrom(const Proto30102102& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30102102::IsInitialized() const {
  
  return true;
}

void Proto30102102::Swap(Proto30102102* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30102102::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30102102_descriptor_;
  metadata.reflection = Proto30102102_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400508::kLabelGetFieldNumber;
const int Proto30400508::kRewardGetFieldNumber;
const int Proto30400508::kLeftTickFieldNumber;
const int Proto30400508::kLabelRewardFieldNumber;
const int Proto30400508::kRankRewardFieldNumber;
const int Proto30400508::kPageFieldNumber;
const int Proto30400508::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto30400508::Proto30400508()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400508::InitAsDefaultInstance() {
}

Proto30400508::Proto30400508(const Proto30400508& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400508::SharedCtor() {
  _cached_size_ = 0;
  label_get_ = 0;
  reward_get_ = 0;
  left_tick_ = 0;
  label_reward_ = 0;
  rank_reward_ = 0;
  page_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400508::~Proto30400508() {
  SharedDtor();
}

void Proto30400508::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400508::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400508::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400508_descriptor_;
}

const Proto30400508& Proto30400508::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400508* Proto30400508::default_instance_ = NULL;

Proto30400508* Proto30400508::New() const {
  return new Proto30400508;
}

void Proto30400508::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    label_get_ = 0;
    reward_get_ = 0;
    left_tick_ = 0;
    label_reward_ = 0;
    rank_reward_ = 0;
    page_ = 0;
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400508::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 label_get = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_get_)));
          set_has_label_get();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_reward_get;
        break;
      }
      
      // optional int32 reward_get = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_get:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_get_)));
          set_has_reward_get();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left_tick;
        break;
      }
      
      // optional int32 left_tick = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_tick_)));
          set_has_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_label_reward;
        break;
      }
      
      // optional int32 label_reward = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_label_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_reward_)));
          set_has_label_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_rank_reward;
        break;
      }
      
      // optional int32 rank_reward = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_reward_)));
          set_has_rank_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_page;
        break;
      }
      
      // optional int32 page = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
          set_has_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400508::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 label_get = 1;
  if (has_label_get()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->label_get(), output);
  }
  
  // optional int32 reward_get = 2;
  if (has_reward_get()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reward_get(), output);
  }
  
  // optional int32 left_tick = 3;
  if (has_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_tick(), output);
  }
  
  // optional int32 label_reward = 4;
  if (has_label_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->label_reward(), output);
  }
  
  // optional int32 rank_reward = 5;
  if (has_rank_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->rank_reward(), output);
  }
  
  // optional int32 page = 6;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->page(), output);
  }
  
  // optional int64 role_id = 7;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400508::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 label_get = 1;
  if (has_label_get()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->label_get(), target);
  }
  
  // optional int32 reward_get = 2;
  if (has_reward_get()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reward_get(), target);
  }
  
  // optional int32 left_tick = 3;
  if (has_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_tick(), target);
  }
  
  // optional int32 label_reward = 4;
  if (has_label_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->label_reward(), target);
  }
  
  // optional int32 rank_reward = 5;
  if (has_rank_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->rank_reward(), target);
  }
  
  // optional int32 page = 6;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->page(), target);
  }
  
  // optional int64 role_id = 7;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400508::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 label_get = 1;
    if (has_label_get()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_get());
    }
    
    // optional int32 reward_get = 2;
    if (has_reward_get()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_get());
    }
    
    // optional int32 left_tick = 3;
    if (has_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_tick());
    }
    
    // optional int32 label_reward = 4;
    if (has_label_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_reward());
    }
    
    // optional int32 rank_reward = 5;
    if (has_rank_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_reward());
    }
    
    // optional int32 page = 6;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page());
    }
    
    // optional int64 role_id = 7;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400508::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400508* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400508*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400508::MergeFrom(const Proto30400508& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_label_get()) {
      set_label_get(from.label_get());
    }
    if (from.has_reward_get()) {
      set_reward_get(from.reward_get());
    }
    if (from.has_left_tick()) {
      set_left_tick(from.left_tick());
    }
    if (from.has_label_reward()) {
      set_label_reward(from.label_reward());
    }
    if (from.has_rank_reward()) {
      set_rank_reward(from.rank_reward());
    }
    if (from.has_page()) {
      set_page(from.page());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400508::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400508::CopyFrom(const Proto30400508& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400508::IsInitialized() const {
  
  return true;
}

void Proto30400508::Swap(Proto30400508* other) {
  if (other != this) {
    std::swap(label_get_, other->label_get_);
    std::swap(reward_get_, other->reward_get_);
    std::swap(left_tick_, other->left_tick_);
    std::swap(label_reward_, other->label_reward_);
    std::swap(rank_reward_, other->rank_reward_);
    std::swap(page_, other->page_);
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400508::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400508_descriptor_;
  metadata.reflection = Proto30400508_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400509::kRankFieldNumber;
const int Proto30400509::kPlayer1FieldNumber;
const int Proto30400509::kPlayer2FieldNumber;
#endif  // !_MSC_VER

Proto30400509::Proto30400509()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400509::InitAsDefaultInstance() {
}

Proto30400509::Proto30400509(const Proto30400509& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400509::SharedCtor() {
  _cached_size_ = 0;
  rank_ = 0;
  player1_ = GOOGLE_LONGLONG(0);
  player2_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400509::~Proto30400509() {
  SharedDtor();
}

void Proto30400509::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400509::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400509::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400509_descriptor_;
}

const Proto30400509& Proto30400509::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400509* Proto30400509::default_instance_ = NULL;

Proto30400509* Proto30400509::New() const {
  return new Proto30400509;
}

void Proto30400509::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rank_ = 0;
    player1_ = GOOGLE_LONGLONG(0);
    player2_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400509::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_player1;
        break;
      }
      
      // optional int64 player1 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player1_)));
          set_has_player1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_player2;
        break;
      }
      
      // optional int64 player2 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_player2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player2_)));
          set_has_player2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400509::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 rank = 1;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank(), output);
  }
  
  // optional int64 player1 = 2;
  if (has_player1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->player1(), output);
  }
  
  // optional int64 player2 = 3;
  if (has_player2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->player2(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400509::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 rank = 1;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank(), target);
  }
  
  // optional int64 player1 = 2;
  if (has_player1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->player1(), target);
  }
  
  // optional int64 player2 = 3;
  if (has_player2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->player2(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400509::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 rank = 1;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank());
    }
    
    // optional int64 player1 = 2;
    if (has_player1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player1());
    }
    
    // optional int64 player2 = 3;
    if (has_player2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player2());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400509::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400509* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400509*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400509::MergeFrom(const Proto30400509& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rank()) {
      set_rank(from.rank());
    }
    if (from.has_player1()) {
      set_player1(from.player1());
    }
    if (from.has_player2()) {
      set_player2(from.player2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400509::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400509::CopyFrom(const Proto30400509& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400509::IsInitialized() const {
  
  return true;
}

void Proto30400509::Swap(Proto30400509* other) {
  if (other != this) {
    std::swap(rank_, other->rank_);
    std::swap(player1_, other->player1_);
    std::swap(player2_, other->player2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400509::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400509_descriptor_;
  metadata.reflection = Proto30400509_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400510::kTypeFieldNumber;
const int Proto30400510::kRoleIdFieldNumber;
const int Proto30400510::kRankFieldNumber;
#endif  // !_MSC_VER

Proto30400510::Proto30400510()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400510::InitAsDefaultInstance() {
}

Proto30400510::Proto30400510(const Proto30400510& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400510::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  rank_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400510::~Proto30400510() {
  SharedDtor();
}

void Proto30400510::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400510::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400510::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400510_descriptor_;
}

const Proto30400510& Proto30400510::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400510* Proto30400510::default_instance_ = NULL;

Proto30400510* Proto30400510::New() const {
  return new Proto30400510;
}

void Proto30400510::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    role_id_ = GOOGLE_LONGLONG(0);
    rank_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400510::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_rank;
        break;
      }
      
      // optional int32 rank = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400510::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->role_id(), output);
  }
  
  // optional int32 rank = 3;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rank(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400510::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->role_id(), target);
  }
  
  // optional int32 rank = 3;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rank(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400510::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int64 role_id = 2;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 rank = 3;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400510::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400510* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400510*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400510::MergeFrom(const Proto30400510& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_rank()) {
      set_rank(from.rank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400510::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400510::CopyFrom(const Proto30400510& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400510::IsInitialized() const {
  
  return true;
}

void Proto30400510::Swap(Proto30400510* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(role_id_, other->role_id_);
    std::swap(rank_, other->rank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400510::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400510_descriptor_;
  metadata.reflection = Proto30400510_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31403102::kWedInfoFieldNumber;
const int Proto31403102::kWeddingIdFieldNumber;
const int Proto31403102::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto31403102::Proto31403102()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31403102::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto31403102::Proto31403102(const Proto31403102& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31403102::SharedCtor() {
  _cached_size_ = 0;
  wedding_id_ = GOOGLE_LONGLONG(0);
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31403102::~Proto31403102() {
  SharedDtor();
}

void Proto31403102::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto31403102::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31403102::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31403102_descriptor_;
}

const Proto31403102& Proto31403102::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto31403102* Proto31403102::default_instance_ = NULL;

Proto31403102* Proto31403102::New() const {
  return new Proto31403102;
}

void Proto31403102::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    wedding_id_ = GOOGLE_LONGLONG(0);
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  wed_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31403102::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoWeddingDetail wed_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_wed_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_wed_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_wed_info;
        if (input->ExpectTag(16)) goto parse_wedding_id;
        break;
      }
      
      // optional int64 wedding_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wedding_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &wedding_id_)));
          set_has_wedding_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31403102::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoWeddingDetail wed_info = 1;
  for (int i = 0; i < this->wed_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->wed_info(i), output);
  }
  
  // optional int64 wedding_id = 2;
  if (has_wedding_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->wedding_id(), output);
  }
  
  // optional .ProtoThreeObj other_info = 3;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31403102::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoWeddingDetail wed_info = 1;
  for (int i = 0; i < this->wed_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->wed_info(i), target);
  }
  
  // optional int64 wedding_id = 2;
  if (has_wedding_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->wedding_id(), target);
  }
  
  // optional .ProtoThreeObj other_info = 3;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31403102::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int64 wedding_id = 2;
    if (has_wedding_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->wedding_id());
    }
    
    // optional .ProtoThreeObj other_info = 3;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  // repeated .ProtoWeddingDetail wed_info = 1;
  total_size += 1 * this->wed_info_size();
  for (int i = 0; i < this->wed_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->wed_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31403102::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31403102* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31403102*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31403102::MergeFrom(const Proto31403102& from) {
  GOOGLE_CHECK_NE(&from, this);
  wed_info_.MergeFrom(from.wed_info_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_wedding_id()) {
      set_wedding_id(from.wedding_id());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31403102::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31403102::CopyFrom(const Proto31403102& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31403102::IsInitialized() const {
  
  return true;
}

void Proto31403102::Swap(Proto31403102* other) {
  if (other != this) {
    wed_info_.Swap(&other->wed_info_);
    std::swap(wedding_id_, other->wedding_id_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31403102::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31403102_descriptor_;
  metadata.reflection = Proto31403102_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400117::kFlagLvlFieldNumber;
const int Proto30400117::kLeaderIdFieldNumber;
const int Proto30400117::kSkillMapFieldNumber;
#endif  // !_MSC_VER

Proto30400117::Proto30400117()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400117::InitAsDefaultInstance() {
}

Proto30400117::Proto30400117(const Proto30400117& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400117::SharedCtor() {
  _cached_size_ = 0;
  flag_lvl_ = 0;
  leader_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400117::~Proto30400117() {
  SharedDtor();
}

void Proto30400117::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400117::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400117::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400117_descriptor_;
}

const Proto30400117& Proto30400117::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400117* Proto30400117::default_instance_ = NULL;

Proto30400117* Proto30400117::New() const {
  return new Proto30400117;
}

void Proto30400117::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    flag_lvl_ = 0;
    leader_id_ = GOOGLE_LONGLONG(0);
  }
  skill_map_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400117::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flag_lvl = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_lvl_)));
          set_has_flag_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_leader_id;
        break;
      }
      
      // optional int64 leader_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leader_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &leader_id_)));
          set_has_leader_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_skill_map;
        break;
      }
      
      // repeated .ProtoPairObj skill_map = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skill_map()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_skill_map;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400117::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 flag_lvl = 1;
  if (has_flag_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag_lvl(), output);
  }
  
  // optional int64 leader_id = 2;
  if (has_leader_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->leader_id(), output);
  }
  
  // repeated .ProtoPairObj skill_map = 3;
  for (int i = 0; i < this->skill_map_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->skill_map(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400117::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 flag_lvl = 1;
  if (has_flag_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag_lvl(), target);
  }
  
  // optional int64 leader_id = 2;
  if (has_leader_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->leader_id(), target);
  }
  
  // repeated .ProtoPairObj skill_map = 3;
  for (int i = 0; i < this->skill_map_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->skill_map(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400117::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 flag_lvl = 1;
    if (has_flag_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag_lvl());
    }
    
    // optional int64 leader_id = 2;
    if (has_leader_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->leader_id());
    }
    
  }
  // repeated .ProtoPairObj skill_map = 3;
  total_size += 1 * this->skill_map_size();
  for (int i = 0; i < this->skill_map_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skill_map(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400117::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400117* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400117*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400117::MergeFrom(const Proto30400117& from) {
  GOOGLE_CHECK_NE(&from, this);
  skill_map_.MergeFrom(from.skill_map_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flag_lvl()) {
      set_flag_lvl(from.flag_lvl());
    }
    if (from.has_leader_id()) {
      set_leader_id(from.leader_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400117::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400117::CopyFrom(const Proto30400117& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400117::IsInitialized() const {
  
  return true;
}

void Proto30400117::Swap(Proto30400117* other) {
  if (other != this) {
    std::swap(flag_lvl_, other->flag_lvl_);
    std::swap(leader_id_, other->leader_id_);
    skill_map_.Swap(&other->skill_map_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400117::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400117_descriptor_;
  metadata.reflection = Proto30400117_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400803::kFlagLvlFieldNumber;
const int Proto30400803::kSkillMapFieldNumber;
#endif  // !_MSC_VER

Proto30400803::Proto30400803()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400803::InitAsDefaultInstance() {
}

Proto30400803::Proto30400803(const Proto30400803& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400803::SharedCtor() {
  _cached_size_ = 0;
  flag_lvl_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400803::~Proto30400803() {
  SharedDtor();
}

void Proto30400803::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400803::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400803::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400803_descriptor_;
}

const Proto30400803& Proto30400803::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400803* Proto30400803::default_instance_ = NULL;

Proto30400803* Proto30400803::New() const {
  return new Proto30400803;
}

void Proto30400803::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    flag_lvl_ = 0;
  }
  skill_map_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400803::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flag_lvl = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_lvl_)));
          set_has_flag_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_skill_map;
        break;
      }
      
      // repeated .ProtoPairObj skill_map = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skill_map()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_skill_map;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400803::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 flag_lvl = 1;
  if (has_flag_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag_lvl(), output);
  }
  
  // repeated .ProtoPairObj skill_map = 2;
  for (int i = 0; i < this->skill_map_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->skill_map(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400803::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 flag_lvl = 1;
  if (has_flag_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag_lvl(), target);
  }
  
  // repeated .ProtoPairObj skill_map = 2;
  for (int i = 0; i < this->skill_map_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->skill_map(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400803::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 flag_lvl = 1;
    if (has_flag_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag_lvl());
    }
    
  }
  // repeated .ProtoPairObj skill_map = 2;
  total_size += 1 * this->skill_map_size();
  for (int i = 0; i < this->skill_map_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skill_map(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400803::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400803* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400803*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400803::MergeFrom(const Proto30400803& from) {
  GOOGLE_CHECK_NE(&from, this);
  skill_map_.MergeFrom(from.skill_map_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flag_lvl()) {
      set_flag_lvl(from.flag_lvl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400803::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400803::CopyFrom(const Proto30400803& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400803::IsInitialized() const {
  
  return true;
}

void Proto30400803::Swap(Proto30400803* other) {
  if (other != this) {
    std::swap(flag_lvl_, other->flag_lvl_);
    skill_map_.Swap(&other->skill_map_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400803::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400803_descriptor_;
  metadata.reflection = Proto30400803_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400051::kMonsterSetFieldNumber;
const int Proto31400051::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto31400051::Proto31400051()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400051::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto31400051::Proto31400051(const Proto31400051& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400051::SharedCtor() {
  _cached_size_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400051::~Proto31400051() {
  SharedDtor();
}

void Proto31400051::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto31400051::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400051::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400051_descriptor_;
}

const Proto31400051& Proto31400051::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto31400051* Proto31400051::default_instance_ = NULL;

Proto31400051* Proto31400051::New() const {
  return new Proto31400051;
}

void Proto31400051::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  monster_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400051::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoMonster monster_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_monster_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_monster_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_monster_set;
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400051::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoMonster monster_set = 1;
  for (int i = 0; i < this->monster_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->monster_set(i), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400051::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoMonster monster_set = 1;
  for (int i = 0; i < this->monster_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->monster_set(i), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400051::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  // repeated .ProtoMonster monster_set = 1;
  total_size += 1 * this->monster_set_size();
  for (int i = 0; i < this->monster_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->monster_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400051::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400051* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400051*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400051::MergeFrom(const Proto31400051& from) {
  GOOGLE_CHECK_NE(&from, this);
  monster_set_.MergeFrom(from.monster_set_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400051::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400051::CopyFrom(const Proto31400051& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400051::IsInitialized() const {
  
  return true;
}

void Proto31400051::Swap(Proto31400051* other) {
  if (other != this) {
    monster_set_.Swap(&other->monster_set_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400051::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400051_descriptor_;
  metadata.reflection = Proto31400051_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100231::kLeagueIdFieldNumber;
#endif  // !_MSC_VER

Proto30100231::Proto30100231()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100231::InitAsDefaultInstance() {
}

Proto30100231::Proto30100231(const Proto30100231& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100231::SharedCtor() {
  _cached_size_ = 0;
  league_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100231::~Proto30100231() {
  SharedDtor();
}

void Proto30100231::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100231::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100231::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100231_descriptor_;
}

const Proto30100231& Proto30100231::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30100231* Proto30100231::default_instance_ = NULL;

Proto30100231* Proto30100231::New() const {
  return new Proto30100231;
}

void Proto30100231::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100231::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 league_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_id_)));
          set_has_league_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100231::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 league_id = 1;
  if (has_league_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->league_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100231::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 league_id = 1;
  if (has_league_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->league_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100231::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 league_id = 1;
    if (has_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100231::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100231* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100231*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100231::MergeFrom(const Proto30100231& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_id()) {
      set_league_id(from.league_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100231::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100231::CopyFrom(const Proto30100231& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100231::IsInitialized() const {
  
  return true;
}

void Proto30100231::Swap(Proto30100231* other) {
  if (other != this) {
    std::swap(league_id_, other->league_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100231::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100231_descriptor_;
  metadata.reflection = Proto30100231_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100951::kWaveFieldNumber;
#endif  // !_MSC_VER

Proto30100951::Proto30100951()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100951::InitAsDefaultInstance() {
}

Proto30100951::Proto30100951(const Proto30100951& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100951::SharedCtor() {
  _cached_size_ = 0;
  wave_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100951::~Proto30100951() {
  SharedDtor();
}

void Proto30100951::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100951::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100951::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100951_descriptor_;
}

const Proto30100951& Proto30100951::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30100951* Proto30100951::default_instance_ = NULL;

Proto30100951* Proto30100951::New() const {
  return new Proto30100951;
}

void Proto30100951::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    wave_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100951::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 wave = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wave_)));
          set_has_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100951::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 wave = 1;
  if (has_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wave(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100951::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 wave = 1;
  if (has_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wave(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100951::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 wave = 1;
    if (has_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wave());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100951::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100951* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100951*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100951::MergeFrom(const Proto30100951& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wave()) {
      set_wave(from.wave());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100951::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100951::CopyFrom(const Proto30100951& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100951::IsInitialized() const {
  
  return true;
}

void Proto30100951::Swap(Proto30100951* other) {
  if (other != this) {
    std::swap(wave_, other->wave_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100951::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100951_descriptor_;
  metadata.reflection = Proto30100951_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400511::kTypeFieldNumber;
const int Proto30400511::kSelfInfoFieldNumber;
const int Proto30400511::kServerInfoFieldNumber;
const int Proto30400511::kAmountFieldNumber;
const int Proto30400511::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto30400511::Proto30400511()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400511::InitAsDefaultInstance() {
  self_info_ = const_cast< ::ProtoTeamer*>(&::ProtoTeamer::default_instance());
  server_info_ = const_cast< ::ProtoServer*>(&::ProtoServer::default_instance());
}

Proto30400511::Proto30400511(const Proto30400511& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400511::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  self_info_ = NULL;
  server_info_ = NULL;
  amount_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400511::~Proto30400511() {
  SharedDtor();
}

void Proto30400511::SharedDtor() {
  if (this != default_instance_) {
    delete self_info_;
    delete server_info_;
  }
}

void Proto30400511::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400511::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400511_descriptor_;
}

const Proto30400511& Proto30400511::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400511* Proto30400511::default_instance_ = NULL;

Proto30400511* Proto30400511::New() const {
  return new Proto30400511;
}

void Proto30400511::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_self_info()) {
      if (self_info_ != NULL) self_info_->::ProtoTeamer::Clear();
    }
    if (has_server_info()) {
      if (server_info_ != NULL) server_info_->::ProtoServer::Clear();
    }
    amount_ = 0;
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400511::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_self_info;
        break;
      }
      
      // optional .ProtoTeamer self_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_self_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_server_info;
        break;
      }
      
      // optional .ProtoServer server_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_server_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_server_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_activity_id;
        break;
      }
      
      // optional int32 activity_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400511::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional .ProtoTeamer self_info = 2;
  if (has_self_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->self_info(), output);
  }
  
  // optional .ProtoServer server_info = 3;
  if (has_server_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->server_info(), output);
  }
  
  // optional int32 amount = 4;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->amount(), output);
  }
  
  // optional int32 activity_id = 5;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400511::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional .ProtoTeamer self_info = 2;
  if (has_self_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->self_info(), target);
  }
  
  // optional .ProtoServer server_info = 3;
  if (has_server_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->server_info(), target);
  }
  
  // optional int32 amount = 4;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->amount(), target);
  }
  
  // optional int32 activity_id = 5;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400511::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional .ProtoTeamer self_info = 2;
    if (has_self_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->self_info());
    }
    
    // optional .ProtoServer server_info = 3;
    if (has_server_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->server_info());
    }
    
    // optional int32 amount = 4;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
    // optional int32 activity_id = 5;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400511::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400511* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400511*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400511::MergeFrom(const Proto30400511& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_self_info()) {
      mutable_self_info()->::ProtoTeamer::MergeFrom(from.self_info());
    }
    if (from.has_server_info()) {
      mutable_server_info()->::ProtoServer::MergeFrom(from.server_info());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400511::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400511::CopyFrom(const Proto30400511& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400511::IsInitialized() const {
  
  return true;
}

void Proto30400511::Swap(Proto30400511* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(self_info_, other->self_info_);
    std::swap(server_info_, other->server_info_);
    std::swap(amount_, other->amount_);
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400511::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400511_descriptor_;
  metadata.reflection = Proto30400511_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400512::kTypeFieldNumber;
const int Proto30400512::kPageFieldNumber;
#endif  // !_MSC_VER

Proto30400512::Proto30400512()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400512::InitAsDefaultInstance() {
}

Proto30400512::Proto30400512(const Proto30400512& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400512::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400512::~Proto30400512() {
  SharedDtor();
}

void Proto30400512::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400512::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400512::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400512_descriptor_;
}

const Proto30400512& Proto30400512::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400512* Proto30400512::default_instance_ = NULL;

Proto30400512* Proto30400512::New() const {
  return new Proto30400512;
}

void Proto30400512::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    page_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400512::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_page;
        break;
      }
      
      // optional int32 page = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
          set_has_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400512::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 page = 2;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400512::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 page = 2;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400512::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 page = 2;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400512::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400512* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400512*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400512::MergeFrom(const Proto30400512& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_page()) {
      set_page(from.page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400512::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400512::CopyFrom(const Proto30400512& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400512::IsInitialized() const {
  
  return true;
}

void Proto30400512::Swap(Proto30400512* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(page_, other->page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400512::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400512_descriptor_;
  metadata.reflection = Proto30400512_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400513::kObjFieldNumber;
const int Proto30400513::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto30400513::Proto30400513()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400513::InitAsDefaultInstance() {
}

Proto30400513::Proto30400513(const Proto30400513& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400513::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400513::~Proto30400513() {
  SharedDtor();
}

void Proto30400513::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400513::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400513::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400513_descriptor_;
}

const Proto30400513& Proto30400513::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400513* Proto30400513::default_instance_ = NULL;

Proto30400513* Proto30400513::New() const {
  return new Proto30400513;
}

void Proto30400513::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    type_ = 0;
  }
  obj_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400513::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoThreeObj obj = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_obj:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_obj()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_obj;
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400513::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoThreeObj obj = 1;
  for (int i = 0; i < this->obj_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->obj(i), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400513::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoThreeObj obj = 1;
  for (int i = 0; i < this->obj_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->obj(i), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400513::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  // repeated .ProtoThreeObj obj = 1;
  total_size += 1 * this->obj_size();
  for (int i = 0; i < this->obj_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->obj(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400513::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400513* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400513*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400513::MergeFrom(const Proto30400513& from) {
  GOOGLE_CHECK_NE(&from, this);
  obj_.MergeFrom(from.obj_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400513::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400513::CopyFrom(const Proto30400513& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400513::IsInitialized() const {
  
  return true;
}

void Proto30400513::Swap(Proto30400513* other) {
  if (other != this) {
    obj_.Swap(&other->obj_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400513::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400513_descriptor_;
  metadata.reflection = Proto30400513_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400514::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto30400514::Proto30400514()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400514::InitAsDefaultInstance() {
}

Proto30400514::Proto30400514(const Proto30400514& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400514::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400514::~Proto30400514() {
  SharedDtor();
}

void Proto30400514::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400514::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400514::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400514_descriptor_;
}

const Proto30400514& Proto30400514::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400514* Proto30400514::default_instance_ = NULL;

Proto30400514* Proto30400514::New() const {
  return new Proto30400514;
}

void Proto30400514::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400514::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400514::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400514::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400514::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400514::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400514* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400514*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400514::MergeFrom(const Proto30400514& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400514::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400514::CopyFrom(const Proto30400514& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400514::IsInitialized() const {
  
  return true;
}

void Proto30400514::Swap(Proto30400514* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400514::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400514_descriptor_;
  metadata.reflection = Proto30400514_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400027::kIndexFieldNumber;
const int Proto30400027::kSceneFieldNumber;
#endif  // !_MSC_VER

Proto30400027::Proto30400027()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400027::InitAsDefaultInstance() {
}

Proto30400027::Proto30400027(const Proto30400027& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400027::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  scene_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400027::~Proto30400027() {
  SharedDtor();
}

void Proto30400027::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400027::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400027::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400027_descriptor_;
}

const Proto30400027& Proto30400027::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400027* Proto30400027::default_instance_ = NULL;

Proto30400027* Proto30400027::New() const {
  return new Proto30400027;
}

void Proto30400027::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    scene_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400027::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_scene;
        break;
      }
      
      // optional int32 scene = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_)));
          set_has_scene();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400027::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional int32 scene = 2;
  if (has_scene()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->scene(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400027::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional int32 scene = 2;
  if (has_scene()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->scene(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400027::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 scene = 2;
    if (has_scene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400027::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400027* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400027*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400027::MergeFrom(const Proto30400027& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_scene()) {
      set_scene(from.scene());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400027::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400027::CopyFrom(const Proto30400027& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400027::IsInitialized() const {
  
  return true;
}

void Proto30400027::Swap(Proto30400027* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(scene_, other->scene_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400027::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400027_descriptor_;
  metadata.reflection = Proto30400027_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400917::kValueSetFieldNumber;
#endif  // !_MSC_VER

Proto30400917::Proto30400917()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400917::InitAsDefaultInstance() {
}

Proto30400917::Proto30400917(const Proto30400917& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400917::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400917::~Proto30400917() {
  SharedDtor();
}

void Proto30400917::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400917::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400917::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400917_descriptor_;
}

const Proto30400917& Proto30400917::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400917* Proto30400917::default_instance_ = NULL;

Proto30400917* Proto30400917::New() const {
  return new Proto30400917;
}

void Proto30400917::Clear() {
  value_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400917::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 value_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_value_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_value_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_value_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400917::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 value_set = 1;
  for (int i = 0; i < this->value_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->value_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400917::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 value_set = 1;
  for (int i = 0; i < this->value_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->value_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400917::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 value_set = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->value_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->value_set(i));
    }
    total_size += 1 * this->value_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400917::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400917* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400917*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400917::MergeFrom(const Proto30400917& from) {
  GOOGLE_CHECK_NE(&from, this);
  value_set_.MergeFrom(from.value_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400917::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400917::CopyFrom(const Proto30400917& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400917::IsInitialized() const {
  
  return true;
}

void Proto30400917::Swap(Proto30400917* other) {
  if (other != this) {
    value_set_.Swap(&other->value_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400917::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400917_descriptor_;
  metadata.reflection = Proto30400917_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400918::kPrevSceneIdFieldNumber;
const int Proto30400918::kTypeFieldNumber;
const int Proto30400918::kScriptSortFieldNumber;
const int Proto30400918::kScritTypeFieldNumber;
#endif  // !_MSC_VER

Proto30400918::Proto30400918()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400918::InitAsDefaultInstance() {
}

Proto30400918::Proto30400918(const Proto30400918& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400918::SharedCtor() {
  _cached_size_ = 0;
  prev_scene_id_ = 0;
  type_ = 0;
  script_sort_ = 0;
  scrit_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400918::~Proto30400918() {
  SharedDtor();
}

void Proto30400918::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400918::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400918::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400918_descriptor_;
}

const Proto30400918& Proto30400918::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400918* Proto30400918::default_instance_ = NULL;

Proto30400918* Proto30400918::New() const {
  return new Proto30400918;
}

void Proto30400918::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    prev_scene_id_ = 0;
    type_ = 0;
    script_sort_ = 0;
    scrit_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400918::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 prev_scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prev_scene_id_)));
          set_has_prev_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_script_sort;
        break;
      }
      
      // optional int32 script_sort = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_scrit_type;
        break;
      }
      
      // optional int32 scrit_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scrit_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scrit_type_)));
          set_has_scrit_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400918::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 prev_scene_id = 1;
  if (has_prev_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->prev_scene_id(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  // optional int32 script_sort = 3;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->script_sort(), output);
  }
  
  // optional int32 scrit_type = 4;
  if (has_scrit_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->scrit_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400918::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 prev_scene_id = 1;
  if (has_prev_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->prev_scene_id(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  // optional int32 script_sort = 3;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->script_sort(), target);
  }
  
  // optional int32 scrit_type = 4;
  if (has_scrit_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->scrit_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400918::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 prev_scene_id = 1;
    if (has_prev_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->prev_scene_id());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 script_sort = 3;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 scrit_type = 4;
    if (has_scrit_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scrit_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400918::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400918* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400918*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400918::MergeFrom(const Proto30400918& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_prev_scene_id()) {
      set_prev_scene_id(from.prev_scene_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_scrit_type()) {
      set_scrit_type(from.scrit_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400918::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400918::CopyFrom(const Proto30400918& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400918::IsInitialized() const {
  
  return true;
}

void Proto30400918::Swap(Proto30400918* other) {
  if (other != this) {
    std::swap(prev_scene_id_, other->prev_scene_id_);
    std::swap(type_, other->type_);
    std::swap(script_sort_, other->script_sort_);
    std::swap(scrit_type_, other->scrit_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400918::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400918_descriptor_;
  metadata.reflection = Proto30400918_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400052::kTypeFieldNumber;
const int Proto31400052::kMultFieldNumber;
const int Proto31400052::kIsResetFieldNumber;
#endif  // !_MSC_VER

Proto31400052::Proto31400052()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400052::InitAsDefaultInstance() {
}

Proto31400052::Proto31400052(const Proto31400052& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400052::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  mult_ = 0;
  is_reset_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400052::~Proto31400052() {
  SharedDtor();
}

void Proto31400052::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400052::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400052::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400052_descriptor_;
}

const Proto31400052& Proto31400052::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto31400052* Proto31400052::default_instance_ = NULL;

Proto31400052* Proto31400052::New() const {
  return new Proto31400052;
}

void Proto31400052::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    mult_ = 0;
    is_reset_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400052::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_mult;
        break;
      }
      
      // optional int32 mult = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mult_)));
          set_has_mult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_reset;
        break;
      }
      
      // optional int32 is_reset = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_reset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_reset_)));
          set_has_is_reset();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400052::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 mult = 2;
  if (has_mult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mult(), output);
  }
  
  // optional int32 is_reset = 3;
  if (has_is_reset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_reset(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400052::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 mult = 2;
  if (has_mult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mult(), target);
  }
  
  // optional int32 is_reset = 3;
  if (has_is_reset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_reset(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400052::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 mult = 2;
    if (has_mult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mult());
    }
    
    // optional int32 is_reset = 3;
    if (has_is_reset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_reset());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400052::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400052* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400052*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400052::MergeFrom(const Proto31400052& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_mult()) {
      set_mult(from.mult());
    }
    if (from.has_is_reset()) {
      set_is_reset(from.is_reset());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400052::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400052::CopyFrom(const Proto31400052& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400052::IsInitialized() const {
  
  return true;
}

void Proto31400052::Swap(Proto31400052* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(mult_, other->mult_);
    std::swap(is_reset_, other->is_reset_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400052::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400052_descriptor_;
  metadata.reflection = Proto31400052_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400919::kTypeFieldNumber;
const int Proto30400919::kScriptSortFieldNumber;
const int Proto30400919::kScritTypeFieldNumber;
const int Proto30400919::kMultFieldNumber;
#endif  // !_MSC_VER

Proto30400919::Proto30400919()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400919::InitAsDefaultInstance() {
}

Proto30400919::Proto30400919(const Proto30400919& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400919::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  script_sort_ = 0;
  scrit_type_ = 0;
  mult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400919::~Proto30400919() {
  SharedDtor();
}

void Proto30400919::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400919::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400919::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400919_descriptor_;
}

const Proto30400919& Proto30400919::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400919* Proto30400919::default_instance_ = NULL;

Proto30400919* Proto30400919::New() const {
  return new Proto30400919;
}

void Proto30400919::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    script_sort_ = 0;
    scrit_type_ = 0;
    mult_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400919::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_script_sort;
        break;
      }
      
      // optional int32 script_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_scrit_type;
        break;
      }
      
      // optional int32 scrit_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scrit_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scrit_type_)));
          set_has_scrit_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_mult;
        break;
      }
      
      // optional int32 mult = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mult_)));
          set_has_mult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400919::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->script_sort(), output);
  }
  
  // optional int32 scrit_type = 3;
  if (has_scrit_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->scrit_type(), output);
  }
  
  // optional int32 mult = 4;
  if (has_mult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->mult(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400919::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->script_sort(), target);
  }
  
  // optional int32 scrit_type = 3;
  if (has_scrit_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->scrit_type(), target);
  }
  
  // optional int32 mult = 4;
  if (has_mult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->mult(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400919::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 script_sort = 2;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 scrit_type = 3;
    if (has_scrit_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scrit_type());
    }
    
    // optional int32 mult = 4;
    if (has_mult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mult());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400919::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400919* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400919*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400919::MergeFrom(const Proto30400919& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_scrit_type()) {
      set_scrit_type(from.scrit_type());
    }
    if (from.has_mult()) {
      set_mult(from.mult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400919::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400919::CopyFrom(const Proto30400919& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400919::IsInitialized() const {
  
  return true;
}

void Proto30400919::Swap(Proto30400919* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(script_sort_, other->script_sort_);
    std::swap(scrit_type_, other->scrit_type_);
    std::swap(mult_, other->mult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400919::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400919_descriptor_;
  metadata.reflection = Proto30400919_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30101111::kCurGoldFieldNumber;
const int Proto30101111::kRechargeTypeFieldNumber;
#endif  // !_MSC_VER

Proto30101111::Proto30101111()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30101111::InitAsDefaultInstance() {
}

Proto30101111::Proto30101111(const Proto30101111& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30101111::SharedCtor() {
  _cached_size_ = 0;
  cur_gold_ = 0;
  recharge_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30101111::~Proto30101111() {
  SharedDtor();
}

void Proto30101111::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30101111::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30101111::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30101111_descriptor_;
}

const Proto30101111& Proto30101111::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30101111* Proto30101111::default_instance_ = NULL;

Proto30101111* Proto30101111::New() const {
  return new Proto30101111;
}

void Proto30101111::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_gold_ = 0;
    recharge_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30101111::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_gold = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_gold_)));
          set_has_cur_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_recharge_type;
        break;
      }
      
      // optional int32 recharge_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recharge_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recharge_type_)));
          set_has_recharge_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30101111::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_gold = 1;
  if (has_cur_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_gold(), output);
  }
  
  // optional int32 recharge_type = 2;
  if (has_recharge_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->recharge_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30101111::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_gold = 1;
  if (has_cur_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_gold(), target);
  }
  
  // optional int32 recharge_type = 2;
  if (has_recharge_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->recharge_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30101111::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_gold = 1;
    if (has_cur_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_gold());
    }
    
    // optional int32 recharge_type = 2;
    if (has_recharge_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recharge_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30101111::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30101111* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30101111*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30101111::MergeFrom(const Proto30101111& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_gold()) {
      set_cur_gold(from.cur_gold());
    }
    if (from.has_recharge_type()) {
      set_recharge_type(from.recharge_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30101111::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30101111::CopyFrom(const Proto30101111& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30101111::IsInitialized() const {
  
  return true;
}

void Proto30101111::Swap(Proto30101111* other) {
  if (other != this) {
    std::swap(cur_gold_, other->cur_gold_);
    std::swap(recharge_type_, other->recharge_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30101111::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30101111_descriptor_;
  metadata.reflection = Proto30101111_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31404011::kIsApplyFieldNumber;
const int Proto31404011::kSurplustimeFieldNumber;
const int Proto31404011::kOfflineRewardFieldNumber;
const int Proto31404011::kHookExpFieldNumber;
const int Proto31404011::kStartTimeFieldNumber;
const int Proto31404011::kEndTimeFieldNumber;
const int Proto31404011::kHookTimeFieldNumber;
const int Proto31404011::kTodayOfflineRewardFieldNumber;
const int Proto31404011::kVipPlusTimeFieldNumber;
const int Proto31404011::kOnePointFivePlueTimeFieldNumber;
const int Proto31404011::kTwoPlusTimeFieldNumber;
#endif  // !_MSC_VER

Proto31404011::Proto31404011()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31404011::InitAsDefaultInstance() {
  offline_reward_ = const_cast< ::ProtoPairMap*>(&::ProtoPairMap::default_instance());
  today_offline_reward_ = const_cast< ::ProtoPairMap*>(&::ProtoPairMap::default_instance());
}

Proto31404011::Proto31404011(const Proto31404011& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31404011::SharedCtor() {
  _cached_size_ = 0;
  isapply_ = false;
  surplustime_ = GOOGLE_LONGLONG(0);
  offline_reward_ = NULL;
  hook_exp_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  hook_time_ = GOOGLE_LONGLONG(0);
  today_offline_reward_ = NULL;
  vip_plus_time_ = GOOGLE_LONGLONG(0);
  one_point_five_plue_time_ = GOOGLE_LONGLONG(0);
  two_plus_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31404011::~Proto31404011() {
  SharedDtor();
}

void Proto31404011::SharedDtor() {
  if (this != default_instance_) {
    delete offline_reward_;
    delete today_offline_reward_;
  }
}

void Proto31404011::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31404011::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31404011_descriptor_;
}

const Proto31404011& Proto31404011::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto31404011* Proto31404011::default_instance_ = NULL;

Proto31404011* Proto31404011::New() const {
  return new Proto31404011;
}

void Proto31404011::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    isapply_ = false;
    surplustime_ = GOOGLE_LONGLONG(0);
    if (has_offline_reward()) {
      if (offline_reward_ != NULL) offline_reward_->::ProtoPairMap::Clear();
    }
    hook_exp_ = 0;
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    hook_time_ = GOOGLE_LONGLONG(0);
    if (has_today_offline_reward()) {
      if (today_offline_reward_ != NULL) today_offline_reward_->::ProtoPairMap::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    vip_plus_time_ = GOOGLE_LONGLONG(0);
    one_point_five_plue_time_ = GOOGLE_LONGLONG(0);
    two_plus_time_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31404011::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool isApply = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isapply_)));
          set_has_isapply();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_surplustime;
        break;
      }
      
      // optional int64 surplustime = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_surplustime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &surplustime_)));
          set_has_surplustime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_offline_reward;
        break;
      }
      
      // optional .ProtoPairMap offline_reward = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_offline_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_offline_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_hook_exp;
        break;
      }
      
      // optional int32 hook_exp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hook_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hook_exp_)));
          set_has_hook_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_start_time;
        break;
      }
      
      // optional int64 start_time = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_end_time;
        break;
      }
      
      // optional int64 end_time = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_hook_time;
        break;
      }
      
      // optional int64 hook_time = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hook_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &hook_time_)));
          set_has_hook_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_today_offline_reward;
        break;
      }
      
      // optional .ProtoPairMap today_offline_reward = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_today_offline_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_today_offline_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_vip_plus_time;
        break;
      }
      
      // optional int64 vip_plus_time = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_plus_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &vip_plus_time_)));
          set_has_vip_plus_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_one_point_five_plue_time;
        break;
      }
      
      // optional int64 one_point_five_plue_time = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_one_point_five_plue_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &one_point_five_plue_time_)));
          set_has_one_point_five_plue_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_two_plus_time;
        break;
      }
      
      // optional int64 two_plus_time = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_two_plus_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &two_plus_time_)));
          set_has_two_plus_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31404011::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool isApply = 1;
  if (has_isapply()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->isapply(), output);
  }
  
  // optional int64 surplustime = 2;
  if (has_surplustime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->surplustime(), output);
  }
  
  // optional .ProtoPairMap offline_reward = 3;
  if (has_offline_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->offline_reward(), output);
  }
  
  // optional int32 hook_exp = 4;
  if (has_hook_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->hook_exp(), output);
  }
  
  // optional int64 start_time = 5;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->start_time(), output);
  }
  
  // optional int64 end_time = 6;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->end_time(), output);
  }
  
  // optional int64 hook_time = 7;
  if (has_hook_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->hook_time(), output);
  }
  
  // optional .ProtoPairMap today_offline_reward = 8;
  if (has_today_offline_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->today_offline_reward(), output);
  }
  
  // optional int64 vip_plus_time = 9;
  if (has_vip_plus_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->vip_plus_time(), output);
  }
  
  // optional int64 one_point_five_plue_time = 10;
  if (has_one_point_five_plue_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->one_point_five_plue_time(), output);
  }
  
  // optional int64 two_plus_time = 11;
  if (has_two_plus_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->two_plus_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31404011::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool isApply = 1;
  if (has_isapply()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->isapply(), target);
  }
  
  // optional int64 surplustime = 2;
  if (has_surplustime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->surplustime(), target);
  }
  
  // optional .ProtoPairMap offline_reward = 3;
  if (has_offline_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->offline_reward(), target);
  }
  
  // optional int32 hook_exp = 4;
  if (has_hook_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->hook_exp(), target);
  }
  
  // optional int64 start_time = 5;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->start_time(), target);
  }
  
  // optional int64 end_time = 6;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->end_time(), target);
  }
  
  // optional int64 hook_time = 7;
  if (has_hook_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->hook_time(), target);
  }
  
  // optional .ProtoPairMap today_offline_reward = 8;
  if (has_today_offline_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->today_offline_reward(), target);
  }
  
  // optional int64 vip_plus_time = 9;
  if (has_vip_plus_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->vip_plus_time(), target);
  }
  
  // optional int64 one_point_five_plue_time = 10;
  if (has_one_point_five_plue_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->one_point_five_plue_time(), target);
  }
  
  // optional int64 two_plus_time = 11;
  if (has_two_plus_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->two_plus_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31404011::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool isApply = 1;
    if (has_isapply()) {
      total_size += 1 + 1;
    }
    
    // optional int64 surplustime = 2;
    if (has_surplustime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->surplustime());
    }
    
    // optional .ProtoPairMap offline_reward = 3;
    if (has_offline_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->offline_reward());
    }
    
    // optional int32 hook_exp = 4;
    if (has_hook_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hook_exp());
    }
    
    // optional int64 start_time = 5;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }
    
    // optional int64 end_time = 6;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }
    
    // optional int64 hook_time = 7;
    if (has_hook_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->hook_time());
    }
    
    // optional .ProtoPairMap today_offline_reward = 8;
    if (has_today_offline_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->today_offline_reward());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 vip_plus_time = 9;
    if (has_vip_plus_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->vip_plus_time());
    }
    
    // optional int64 one_point_five_plue_time = 10;
    if (has_one_point_five_plue_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->one_point_five_plue_time());
    }
    
    // optional int64 two_plus_time = 11;
    if (has_two_plus_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->two_plus_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31404011::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31404011* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31404011*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31404011::MergeFrom(const Proto31404011& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_isapply()) {
      set_isapply(from.isapply());
    }
    if (from.has_surplustime()) {
      set_surplustime(from.surplustime());
    }
    if (from.has_offline_reward()) {
      mutable_offline_reward()->::ProtoPairMap::MergeFrom(from.offline_reward());
    }
    if (from.has_hook_exp()) {
      set_hook_exp(from.hook_exp());
    }
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_hook_time()) {
      set_hook_time(from.hook_time());
    }
    if (from.has_today_offline_reward()) {
      mutable_today_offline_reward()->::ProtoPairMap::MergeFrom(from.today_offline_reward());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_vip_plus_time()) {
      set_vip_plus_time(from.vip_plus_time());
    }
    if (from.has_one_point_five_plue_time()) {
      set_one_point_five_plue_time(from.one_point_five_plue_time());
    }
    if (from.has_two_plus_time()) {
      set_two_plus_time(from.two_plus_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31404011::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31404011::CopyFrom(const Proto31404011& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31404011::IsInitialized() const {
  
  return true;
}

void Proto31404011::Swap(Proto31404011* other) {
  if (other != this) {
    std::swap(isapply_, other->isapply_);
    std::swap(surplustime_, other->surplustime_);
    std::swap(offline_reward_, other->offline_reward_);
    std::swap(hook_exp_, other->hook_exp_);
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(hook_time_, other->hook_time_);
    std::swap(today_offline_reward_, other->today_offline_reward_);
    std::swap(vip_plus_time_, other->vip_plus_time_);
    std::swap(one_point_five_plue_time_, other->one_point_five_plue_time_);
    std::swap(two_plus_time_, other->two_plus_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31404011::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31404011_descriptor_;
  metadata.reflection = Proto31404011_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400053::kDropActFieldNumber;
#endif  // !_MSC_VER

Proto31400053::Proto31400053()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400053::InitAsDefaultInstance() {
}

Proto31400053::Proto31400053(const Proto31400053& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400053::SharedCtor() {
  _cached_size_ = 0;
  drop_act_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400053::~Proto31400053() {
  SharedDtor();
}

void Proto31400053::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400053::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400053::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400053_descriptor_;
}

const Proto31400053& Proto31400053::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto31400053* Proto31400053::default_instance_ = NULL;

Proto31400053* Proto31400053::New() const {
  return new Proto31400053;
}

void Proto31400053::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    drop_act_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400053::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 drop_act = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &drop_act_)));
          set_has_drop_act();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400053::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 drop_act = 1;
  if (has_drop_act()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->drop_act(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400053::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 drop_act = 1;
  if (has_drop_act()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->drop_act(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400053::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 drop_act = 1;
    if (has_drop_act()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->drop_act());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400053::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400053* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400053*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400053::MergeFrom(const Proto31400053& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_drop_act()) {
      set_drop_act(from.drop_act());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400053::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400053::CopyFrom(const Proto31400053& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400053::IsInitialized() const {
  
  return true;
}

void Proto31400053::Swap(Proto31400053* other) {
  if (other != this) {
    std::swap(drop_act_, other->drop_act_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400053::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400053_descriptor_;
  metadata.reflection = Proto31400053_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400147::kLevelFieldNumber;
const int Proto31400147::kExpFieldNumber;
const int Proto31400147::kOpenFieldNumber;
const int Proto31400147::kStageFieldNumber;
const int Proto31400147::kTransferTickFieldNumber;
const int Proto31400147::kLastFieldNumber;
const int Proto31400147::kActiveIdFieldNumber;
const int Proto31400147::kOpenRewardFieldNumber;
const int Proto31400147::kGoldTimesFieldNumber;
const int Proto31400147::kRefreshTickFieldNumber;
const int Proto31400147::kReduceCoolFieldNumber;
const int Proto31400147::kAddTimeFieldNumber;
const int Proto31400147::kTransferInfoFieldNumber;
#endif  // !_MSC_VER

Proto31400147::Proto31400147()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400147::InitAsDefaultInstance() {
}

Proto31400147::Proto31400147(const Proto31400147& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400147::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  exp_ = 0;
  open_ = 0;
  stage_ = 0;
  transfer_tick_ = GOOGLE_LONGLONG(0);
  last_ = 0;
  active_id_ = 0;
  open_reward_ = 0;
  gold_times_ = 0;
  refresh_tick_ = GOOGLE_LONGLONG(0);
  reduce_cool_ = 0;
  add_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400147::~Proto31400147() {
  SharedDtor();
}

void Proto31400147::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400147::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400147::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400147_descriptor_;
}

const Proto31400147& Proto31400147::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto31400147* Proto31400147::default_instance_ = NULL;

Proto31400147* Proto31400147::New() const {
  return new Proto31400147;
}

void Proto31400147::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    exp_ = 0;
    open_ = 0;
    stage_ = 0;
    transfer_tick_ = GOOGLE_LONGLONG(0);
    last_ = 0;
    active_id_ = 0;
    open_reward_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    gold_times_ = 0;
    refresh_tick_ = GOOGLE_LONGLONG(0);
    reduce_cool_ = 0;
    add_time_ = 0;
  }
  transfer_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400147::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exp;
        break;
      }
      
      // optional int32 exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_open;
        break;
      }
      
      // optional int32 open = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_)));
          set_has_open();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_stage;
        break;
      }
      
      // optional int32 stage = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_)));
          set_has_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_transfer_tick;
        break;
      }
      
      // optional int64 transfer_tick = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_transfer_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &transfer_tick_)));
          set_has_transfer_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_last;
        break;
      }
      
      // optional int32 last = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_)));
          set_has_last();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_active_id;
        break;
      }
      
      // optional int32 active_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_active_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &active_id_)));
          set_has_active_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_open_reward;
        break;
      }
      
      // optional int32 open_reward = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_open_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_reward_)));
          set_has_open_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_gold_times;
        break;
      }
      
      // optional int32 gold_times = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_times_)));
          set_has_gold_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_refresh_tick;
        break;
      }
      
      // optional int64 refresh_tick = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &refresh_tick_)));
          set_has_refresh_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_reduce_cool;
        break;
      }
      
      // optional int32 reduce_cool = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reduce_cool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reduce_cool_)));
          set_has_reduce_cool();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_add_time;
        break;
      }
      
      // optional int32 add_time = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_add_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_time_)));
          set_has_add_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_transfer_info;
        break;
      }
      
      // repeated .ProtoTransferInfo transfer_info = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_transfer_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_transfer_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_transfer_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400147::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exp(), output);
  }
  
  // optional int32 open = 3;
  if (has_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->open(), output);
  }
  
  // optional int32 stage = 4;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->stage(), output);
  }
  
  // optional int64 transfer_tick = 5;
  if (has_transfer_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->transfer_tick(), output);
  }
  
  // optional int32 last = 6;
  if (has_last()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->last(), output);
  }
  
  // optional int32 active_id = 7;
  if (has_active_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->active_id(), output);
  }
  
  // optional int32 open_reward = 8;
  if (has_open_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->open_reward(), output);
  }
  
  // optional int32 gold_times = 9;
  if (has_gold_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->gold_times(), output);
  }
  
  // optional int64 refresh_tick = 10;
  if (has_refresh_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->refresh_tick(), output);
  }
  
  // optional int32 reduce_cool = 11;
  if (has_reduce_cool()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->reduce_cool(), output);
  }
  
  // optional int32 add_time = 12;
  if (has_add_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->add_time(), output);
  }
  
  // repeated .ProtoTransferInfo transfer_info = 13;
  for (int i = 0; i < this->transfer_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->transfer_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400147::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exp(), target);
  }
  
  // optional int32 open = 3;
  if (has_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->open(), target);
  }
  
  // optional int32 stage = 4;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->stage(), target);
  }
  
  // optional int64 transfer_tick = 5;
  if (has_transfer_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->transfer_tick(), target);
  }
  
  // optional int32 last = 6;
  if (has_last()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->last(), target);
  }
  
  // optional int32 active_id = 7;
  if (has_active_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->active_id(), target);
  }
  
  // optional int32 open_reward = 8;
  if (has_open_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->open_reward(), target);
  }
  
  // optional int32 gold_times = 9;
  if (has_gold_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->gold_times(), target);
  }
  
  // optional int64 refresh_tick = 10;
  if (has_refresh_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->refresh_tick(), target);
  }
  
  // optional int32 reduce_cool = 11;
  if (has_reduce_cool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->reduce_cool(), target);
  }
  
  // optional int32 add_time = 12;
  if (has_add_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->add_time(), target);
  }
  
  // repeated .ProtoTransferInfo transfer_info = 13;
  for (int i = 0; i < this->transfer_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->transfer_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400147::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 exp = 2;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }
    
    // optional int32 open = 3;
    if (has_open()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open());
    }
    
    // optional int32 stage = 4;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stage());
    }
    
    // optional int64 transfer_tick = 5;
    if (has_transfer_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->transfer_tick());
    }
    
    // optional int32 last = 6;
    if (has_last()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last());
    }
    
    // optional int32 active_id = 7;
    if (has_active_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->active_id());
    }
    
    // optional int32 open_reward = 8;
    if (has_open_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open_reward());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 gold_times = 9;
    if (has_gold_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold_times());
    }
    
    // optional int64 refresh_tick = 10;
    if (has_refresh_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->refresh_tick());
    }
    
    // optional int32 reduce_cool = 11;
    if (has_reduce_cool()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reduce_cool());
    }
    
    // optional int32 add_time = 12;
    if (has_add_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_time());
    }
    
  }
  // repeated .ProtoTransferInfo transfer_info = 13;
  total_size += 1 * this->transfer_info_size();
  for (int i = 0; i < this->transfer_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->transfer_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400147::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400147* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400147*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400147::MergeFrom(const Proto31400147& from) {
  GOOGLE_CHECK_NE(&from, this);
  transfer_info_.MergeFrom(from.transfer_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_open()) {
      set_open(from.open());
    }
    if (from.has_stage()) {
      set_stage(from.stage());
    }
    if (from.has_transfer_tick()) {
      set_transfer_tick(from.transfer_tick());
    }
    if (from.has_last()) {
      set_last(from.last());
    }
    if (from.has_active_id()) {
      set_active_id(from.active_id());
    }
    if (from.has_open_reward()) {
      set_open_reward(from.open_reward());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_gold_times()) {
      set_gold_times(from.gold_times());
    }
    if (from.has_refresh_tick()) {
      set_refresh_tick(from.refresh_tick());
    }
    if (from.has_reduce_cool()) {
      set_reduce_cool(from.reduce_cool());
    }
    if (from.has_add_time()) {
      set_add_time(from.add_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400147::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400147::CopyFrom(const Proto31400147& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400147::IsInitialized() const {
  
  return true;
}

void Proto31400147::Swap(Proto31400147* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(exp_, other->exp_);
    std::swap(open_, other->open_);
    std::swap(stage_, other->stage_);
    std::swap(transfer_tick_, other->transfer_tick_);
    std::swap(last_, other->last_);
    std::swap(active_id_, other->active_id_);
    std::swap(open_reward_, other->open_reward_);
    std::swap(gold_times_, other->gold_times_);
    std::swap(refresh_tick_, other->refresh_tick_);
    std::swap(reduce_cool_, other->reduce_cool_);
    std::swap(add_time_, other->add_time_);
    transfer_info_.Swap(&other->transfer_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400147::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400147_descriptor_;
  metadata.reflection = Proto31400147_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400054::kActIdFieldNumber;
const int Proto31400054::kRewardIndexListFieldNumber;
const int Proto31400054::kBindItemListFieldNumber;
const int Proto31400054::kUnbindItemListFieldNumber;
const int Proto31400054::kOpRetFieldNumber;
#endif  // !_MSC_VER

Proto31400054::Proto31400054()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400054::InitAsDefaultInstance() {
}

Proto31400054::Proto31400054(const Proto31400054& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400054::SharedCtor() {
  _cached_size_ = 0;
  act_id_ = 0;
  op_ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400054::~Proto31400054() {
  SharedDtor();
}

void Proto31400054::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400054::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400054::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400054_descriptor_;
}

const Proto31400054& Proto31400054::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto31400054* Proto31400054::default_instance_ = NULL;

Proto31400054* Proto31400054::New() const {
  return new Proto31400054;
}

void Proto31400054::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    act_id_ = 0;
    op_ret_ = 0;
  }
  reward_index_list_.Clear();
  bind_item_list_.Clear();
  unbind_item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400054::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 act_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_id_)));
          set_has_act_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_reward_index_list;
        break;
      }
      
      // repeated .ProtoBackActRewardIndex reward_index_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_reward_index_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_index_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_reward_index_list;
        if (input->ExpectTag(26)) goto parse_bind_item_list;
        break;
      }
      
      // repeated .ProtoItem bind_item_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bind_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bind_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_bind_item_list;
        if (input->ExpectTag(34)) goto parse_unbind_item_list;
        break;
      }
      
      // repeated .ProtoItem unbind_item_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_unbind_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_unbind_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_unbind_item_list;
        if (input->ExpectTag(40)) goto parse_op_ret;
        break;
      }
      
      // optional int32 op_ret = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_op_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &op_ret_)));
          set_has_op_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400054::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 act_id = 1;
  if (has_act_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->act_id(), output);
  }
  
  // repeated .ProtoBackActRewardIndex reward_index_list = 2;
  for (int i = 0; i < this->reward_index_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->reward_index_list(i), output);
  }
  
  // repeated .ProtoItem bind_item_list = 3;
  for (int i = 0; i < this->bind_item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->bind_item_list(i), output);
  }
  
  // repeated .ProtoItem unbind_item_list = 4;
  for (int i = 0; i < this->unbind_item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->unbind_item_list(i), output);
  }
  
  // optional int32 op_ret = 5;
  if (has_op_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->op_ret(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400054::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 act_id = 1;
  if (has_act_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->act_id(), target);
  }
  
  // repeated .ProtoBackActRewardIndex reward_index_list = 2;
  for (int i = 0; i < this->reward_index_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->reward_index_list(i), target);
  }
  
  // repeated .ProtoItem bind_item_list = 3;
  for (int i = 0; i < this->bind_item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->bind_item_list(i), target);
  }
  
  // repeated .ProtoItem unbind_item_list = 4;
  for (int i = 0; i < this->unbind_item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->unbind_item_list(i), target);
  }
  
  // optional int32 op_ret = 5;
  if (has_op_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->op_ret(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400054::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 act_id = 1;
    if (has_act_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_id());
    }
    
    // optional int32 op_ret = 5;
    if (has_op_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->op_ret());
    }
    
  }
  // repeated .ProtoBackActRewardIndex reward_index_list = 2;
  total_size += 1 * this->reward_index_list_size();
  for (int i = 0; i < this->reward_index_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_index_list(i));
  }
  
  // repeated .ProtoItem bind_item_list = 3;
  total_size += 1 * this->bind_item_list_size();
  for (int i = 0; i < this->bind_item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bind_item_list(i));
  }
  
  // repeated .ProtoItem unbind_item_list = 4;
  total_size += 1 * this->unbind_item_list_size();
  for (int i = 0; i < this->unbind_item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->unbind_item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400054::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400054* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400054*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400054::MergeFrom(const Proto31400054& from) {
  GOOGLE_CHECK_NE(&from, this);
  reward_index_list_.MergeFrom(from.reward_index_list_);
  bind_item_list_.MergeFrom(from.bind_item_list_);
  unbind_item_list_.MergeFrom(from.unbind_item_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_act_id()) {
      set_act_id(from.act_id());
    }
    if (from.has_op_ret()) {
      set_op_ret(from.op_ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400054::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400054::CopyFrom(const Proto31400054& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400054::IsInitialized() const {
  
  return true;
}

void Proto31400054::Swap(Proto31400054* other) {
  if (other != this) {
    std::swap(act_id_, other->act_id_);
    reward_index_list_.Swap(&other->reward_index_list_);
    bind_item_list_.Swap(&other->bind_item_list_);
    unbind_item_list_.Swap(&other->unbind_item_list_);
    std::swap(op_ret_, other->op_ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400054::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400054_descriptor_;
  metadata.reflection = Proto31400054_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400411::kTransferTickFieldNumber;
const int Proto30400411::kLastFieldNumber;
const int Proto30400411::kActiveIdFieldNumber;
const int Proto30400411::kReduceCoolFieldNumber;
const int Proto30400411::kAddTimeFieldNumber;
const int Proto30400411::kTransferInfoFieldNumber;
const int Proto30400411::kTypeFieldNumber;
const int Proto30400411::kNotifyFieldNumber;
#endif  // !_MSC_VER

Proto30400411::Proto30400411()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400411::InitAsDefaultInstance() {
  transfer_info_ = const_cast< ::ProtoTransferInfo*>(&::ProtoTransferInfo::default_instance());
}

Proto30400411::Proto30400411(const Proto30400411& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400411::SharedCtor() {
  _cached_size_ = 0;
  transfer_tick_ = GOOGLE_LONGLONG(0);
  last_ = 0;
  active_id_ = 0;
  reduce_cool_ = 0;
  add_time_ = 0;
  transfer_info_ = NULL;
  type_ = 0;
  notify_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400411::~Proto30400411() {
  SharedDtor();
}

void Proto30400411::SharedDtor() {
  if (this != default_instance_) {
    delete transfer_info_;
  }
}

void Proto30400411::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400411::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400411_descriptor_;
}

const Proto30400411& Proto30400411::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner009_2eproto();  return *default_instance_;
}

Proto30400411* Proto30400411::default_instance_ = NULL;

Proto30400411* Proto30400411::New() const {
  return new Proto30400411;
}

void Proto30400411::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    transfer_tick_ = GOOGLE_LONGLONG(0);
    last_ = 0;
    active_id_ = 0;
    reduce_cool_ = 0;
    add_time_ = 0;
    if (has_transfer_info()) {
      if (transfer_info_ != NULL) transfer_info_->::ProtoTransferInfo::Clear();
    }
    type_ = 0;
    notify_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400411::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 transfer_tick = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &transfer_tick_)));
          set_has_transfer_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_last;
        break;
      }
      
      // optional int32 last = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_)));
          set_has_last();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_active_id;
        break;
      }
      
      // optional int32 active_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_active_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &active_id_)));
          set_has_active_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_reduce_cool;
        break;
      }
      
      // optional int32 reduce_cool = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reduce_cool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reduce_cool_)));
          set_has_reduce_cool();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_add_time;
        break;
      }
      
      // optional int32 add_time = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_add_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_time_)));
          set_has_add_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_transfer_info;
        break;
      }
      
      // optional .ProtoTransferInfo transfer_info = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_transfer_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_transfer_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_type;
        break;
      }
      
      // optional int32 type = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_notify;
        break;
      }
      
      // optional int32 notify = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_notify:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &notify_)));
          set_has_notify();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400411::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 transfer_tick = 1;
  if (has_transfer_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->transfer_tick(), output);
  }
  
  // optional int32 last = 2;
  if (has_last()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->last(), output);
  }
  
  // optional int32 active_id = 3;
  if (has_active_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->active_id(), output);
  }
  
  // optional int32 reduce_cool = 4;
  if (has_reduce_cool()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->reduce_cool(), output);
  }
  
  // optional int32 add_time = 5;
  if (has_add_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->add_time(), output);
  }
  
  // optional .ProtoTransferInfo transfer_info = 6;
  if (has_transfer_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->transfer_info(), output);
  }
  
  // optional int32 type = 7;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->type(), output);
  }
  
  // optional int32 notify = 8;
  if (has_notify()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->notify(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400411::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 transfer_tick = 1;
  if (has_transfer_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->transfer_tick(), target);
  }
  
  // optional int32 last = 2;
  if (has_last()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->last(), target);
  }
  
  // optional int32 active_id = 3;
  if (has_active_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->active_id(), target);
  }
  
  // optional int32 reduce_cool = 4;
  if (has_reduce_cool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->reduce_cool(), target);
  }
  
  // optional int32 add_time = 5;
  if (has_add_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->add_time(), target);
  }
  
  // optional .ProtoTransferInfo transfer_info = 6;
  if (has_transfer_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->transfer_info(), target);
  }
  
  // optional int32 type = 7;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->type(), target);
  }
  
  // optional int32 notify = 8;
  if (has_notify()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->notify(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400411::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 transfer_tick = 1;
    if (has_transfer_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->transfer_tick());
    }
    
    // optional int32 last = 2;
    if (has_last()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last());
    }
    
    // optional int32 active_id = 3;
    if (has_active_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->active_id());
    }
    
    // optional int32 reduce_cool = 4;
    if (has_reduce_cool()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reduce_cool());
    }
    
    // optional int32 add_time = 5;
    if (has_add_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_time());
    }
    
    // optional .ProtoTransferInfo transfer_info = 6;
    if (has_transfer_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->transfer_info());
    }
    
    // optional int32 type = 7;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 notify = 8;
    if (has_notify()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->notify());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400411::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400411* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400411*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400411::MergeFrom(const Proto30400411& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_transfer_tick()) {
      set_transfer_tick(from.transfer_tick());
    }
    if (from.has_last()) {
      set_last(from.last());
    }
    if (from.has_active_id()) {
      set_active_id(from.active_id());
    }
    if (from.has_reduce_cool()) {
      set_reduce_cool(from.reduce_cool());
    }
    if (from.has_add_time()) {
      set_add_time(from.add_time());
    }
    if (from.has_transfer_info()) {
      mutable_transfer_info()->::ProtoTransferInfo::MergeFrom(from.transfer_info());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_notify()) {
      set_notify(from.notify());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400411::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400411::CopyFrom(const Proto30400411& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400411::IsInitialized() const {
  
  return true;
}

void Proto30400411::Swap(Proto30400411* other) {
  if (other != this) {
    std::swap(transfer_tick_, other->transfer_tick_);
    std::swap(last_, other->last_);
    std::swap(active_id_, other->active_id_);
    std::swap(reduce_cool_, other->reduce_cool_);
    std::swap(add_time_, other->add_time_);
    std::swap(transfer_info_, other->transfer_info_);
    std::swap(type_, other->type_);
    std::swap(notify_, other->notify_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400411::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400411_descriptor_;
  metadata.reflection = Proto30400411_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
