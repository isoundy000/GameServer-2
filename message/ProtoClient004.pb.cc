// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient004.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto11400653_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400653_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400653_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400653_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400602_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400602_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400207_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400207_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400103_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400103_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400654_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400654_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400701_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400701_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400702_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400702_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400702_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400702_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400704_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400704_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100601_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100601_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100602_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100602_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100604_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100604_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100605_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100605_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100622_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100622_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100601_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100601_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100604_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100604_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100606_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100606_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100624_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100624_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100624_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100624_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100625_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100625_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100611_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100611_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100621_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100621_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100626_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100626_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100627_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100627_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100628_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100628_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100628_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100628_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100614_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100614_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100614_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100614_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100616_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100616_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100617_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100617_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100615_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100615_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100615_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100615_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100619_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100619_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100620_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100620_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100613_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100613_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100618_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100618_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100621_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100621_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400803_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400803_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400804_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400804_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400803_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400803_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100021_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100021_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100021_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100021_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100022_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100022_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400208_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400208_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100023_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100023_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100303_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100303_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100304_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100304_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100307_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100307_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100309_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100309_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient004_2eproto() {
  protobuf_AddDesc_ProtoClient004_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient004.proto");
  GOOGLE_CHECK(file != NULL);
  Proto11400653_descriptor_ = file->message_type(0);
  static const int Proto11400653_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400653, pkg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400653, pkg_index_),
  };
  Proto11400653_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400653_descriptor_,
      Proto11400653::default_instance_,
      Proto11400653_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400653, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400653, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400653));
  Proto51400653_descriptor_ = file->message_type(1);
  static const int Proto51400653_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400653, pkg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400653, pkg_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400653, fashion_id_),
  };
  Proto51400653_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400653_descriptor_,
      Proto51400653::default_instance_,
      Proto51400653_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400653, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400653, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400653));
  Proto81400602_descriptor_ = file->message_type(2);
  static const int Proto81400602_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400602, pkg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400602, pkg_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400602, fashion_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400602, left_sec_),
  };
  Proto81400602_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400602_descriptor_,
      Proto81400602::default_instance_,
      Proto81400602_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400602, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400602, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400602));
  Proto80400207_descriptor_ = file->message_type(3);
  static const int Proto80400207_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400207, fighter_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400207, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400207, status_detial_),
  };
  Proto80400207_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400207_descriptor_,
      Proto80400207::default_instance_,
      Proto80400207_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400207, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400207, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400207));
  Proto80400103_descriptor_ = file->message_type(4);
  static const int Proto80400103_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400103, beast_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400103, master_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400103, beast_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400103, beast_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400103, toward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400103, beast_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400103, space_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400103, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400103, mount_shape_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400103, weapon_shape_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400103, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400103, beast_wing_),
  };
  Proto80400103_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400103_descriptor_,
      Proto80400103::default_instance_,
      Proto80400103_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400103, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400103, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400103));
  Proto11400654_descriptor_ = file->message_type(5);
  static const int Proto11400654_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400654, pkg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400654, pkg_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400654, amount_),
  };
  Proto11400654_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400654_descriptor_,
      Proto11400654::default_instance_,
      Proto11400654_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400654, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400654, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400654));
  Proto50400701_descriptor_ = file->message_type(6);
  static const int Proto50400701_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400701, skill_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400701, scheme_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400701, scheme_skill_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400701, rama_skill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400701, rama_skill_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400701, part_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400701, transfer_skill_),
  };
  Proto50400701_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400701_descriptor_,
      Proto50400701::default_instance_,
      Proto50400701_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400701, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400701, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400701));
  Proto10400702_descriptor_ = file->message_type(7);
  static const int Proto10400702_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400702, scheme_),
  };
  Proto10400702_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400702_descriptor_,
      Proto10400702::default_instance_,
      Proto10400702_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400702, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400702, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400702));
  Proto50400702_descriptor_ = file->message_type(8);
  static const int Proto50400702_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400702, scheme_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400702, skill_list_),
  };
  Proto50400702_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400702_descriptor_,
      Proto50400702::default_instance_,
      Proto50400702_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400702, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400702, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400702));
  Proto10400704_descriptor_ = file->message_type(9);
  static const int Proto10400704_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400704, scheme_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400704, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400704, skill_id_),
  };
  Proto10400704_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400704_descriptor_,
      Proto10400704::default_instance_,
      Proto10400704_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400704, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400704, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400704));
  Proto10100601_descriptor_ = file->message_type(10);
  static const int Proto10100601_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100601, page_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100601, show_join_),
  };
  Proto10100601_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100601_descriptor_,
      Proto10100601::default_instance_,
      Proto10100601_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100601, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100601, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100601));
  Proto10100602_descriptor_ = file->message_type(11);
  static const int Proto10100602_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100602, league_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100602, league_intro_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100602, create_type_),
  };
  Proto10100602_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100602_descriptor_,
      Proto10100602::default_instance_,
      Proto10100602_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100602, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100602, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100602));
  Proto10100604_descriptor_ = file->message_type(12);
  static const int Proto10100604_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100604, apply_set_),
  };
  Proto10100604_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100604_descriptor_,
      Proto10100604::default_instance_,
      Proto10100604_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100604, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100604, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100604));
  Proto10100605_descriptor_ = file->message_type(13);
  static const int Proto10100605_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100605, league_index_),
  };
  Proto10100605_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100605_descriptor_,
      Proto10100605::default_instance_,
      Proto10100605_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100605, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100605, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100605));
  Proto50100622_descriptor_ = file->message_type(14);
  static const int Proto50100622_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100622, league_flag_),
  };
  Proto50100622_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100622_descriptor_,
      Proto50100622::default_instance_,
      Proto50100622_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100622, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100622, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100622));
  Proto50100601_descriptor_ = file->message_type(15);
  static const int Proto50100601_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100601, page_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100601, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100601, league_set_),
  };
  Proto50100601_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100601_descriptor_,
      Proto50100601::default_instance_,
      Proto50100601_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100601, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100601, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100601));
  Proto50100604_descriptor_ = file->message_type(16);
  static const int Proto50100604_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100604, apply_set_),
  };
  Proto50100604_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100604_descriptor_,
      Proto50100604::default_instance_,
      Proto50100604_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100604, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100604, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100604));
  Proto50100606_descriptor_ = file->message_type(17);
  static const int Proto50100606_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, league_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, league_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, league_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, league_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, leader_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, leader_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, league_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, league_resource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, total_resource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, league_intro_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, league_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, have_salary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, left_recruit_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, is_lstore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, auto_accept_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, leader_career_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, leader_sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, leader_weapons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, leader_wings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, fashion_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, fashion_color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, max_role_),
  };
  Proto50100606_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100606_descriptor_,
      Proto50100606::default_instance_,
      Proto50100606_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100606, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100606));
  Proto10100624_descriptor_ = file->message_type(18);
  static const int Proto10100624_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100624, shop_type_),
  };
  Proto10100624_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100624_descriptor_,
      Proto10100624::default_instance_,
      Proto10100624_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100624, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100624, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100624));
  Proto50100624_descriptor_ = file->message_type(19);
  static const int Proto50100624_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100624, shop_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100624, cur_contri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100624, shop_set_),
  };
  Proto50100624_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100624_descriptor_,
      Proto50100624::default_instance_,
      Proto50100624_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100624, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100624, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100624));
  Proto10100625_descriptor_ = file->message_type(20);
  static const int Proto10100625_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100625, shop_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100625, buy_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100625, buy_number_),
  };
  Proto10100625_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100625_descriptor_,
      Proto10100625::default_instance_,
      Proto10100625_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100625, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100625, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100625));
  Proto10100611_descriptor_ = file->message_type(21);
  static const int Proto10100611_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100611, league_intro_),
  };
  Proto10100611_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100611_descriptor_,
      Proto10100611::default_instance_,
      Proto10100611_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100611, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100611, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100611));
  Proto10100621_descriptor_ = file->message_type(22);
  static const int Proto10100621_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100621, page_index_),
  };
  Proto10100621_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100621_descriptor_,
      Proto10100621::default_instance_,
      Proto10100621_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100621, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100621, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100621));
  Proto50100626_descriptor_ = file->message_type(23);
  static const int Proto50100626_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100626, wand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100626, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100626, my_contri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100626, send_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100626, today_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100626, total_rank_),
  };
  Proto50100626_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100626_descriptor_,
      Proto50100626::default_instance_,
      Proto50100626_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100626, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100626, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100626));
  Proto50100627_descriptor_ = file->message_type(24);
  static const int Proto50100627_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100627, cur_contri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100627, skill_set_),
  };
  Proto50100627_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100627_descriptor_,
      Proto50100627::default_instance_,
      Proto50100627_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100627, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100627, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100627));
  Proto10100628_descriptor_ = file->message_type(25);
  static const int Proto10100628_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100628, skill_id_),
  };
  Proto10100628_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100628_descriptor_,
      Proto10100628::default_instance_,
      Proto10100628_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100628, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100628, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100628));
  Proto50100628_descriptor_ = file->message_type(26);
  static const int Proto50100628_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100628, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100628, skill_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100628, cur_contri_),
  };
  Proto50100628_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100628_descriptor_,
      Proto50100628::default_instance_,
      Proto50100628_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100628, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100628, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100628));
  Proto10100614_descriptor_ = file->message_type(27);
  static const int Proto10100614_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100614, page_index_),
  };
  Proto10100614_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100614_descriptor_,
      Proto10100614::default_instance_,
      Proto10100614_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100614, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100614, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100614));
  Proto50100614_descriptor_ = file->message_type(28);
  static const int Proto50100614_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100614, member_set_),
  };
  Proto50100614_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100614_descriptor_,
      Proto50100614::default_instance_,
      Proto50100614_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100614, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100614, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100614));
  Proto10100616_descriptor_ = file->message_type(29);
  static const int Proto10100616_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100616, role_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100616, target_pos_),
  };
  Proto10100616_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100616_descriptor_,
      Proto10100616::default_instance_,
      Proto10100616_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100616, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100616, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100616));
  Proto10100617_descriptor_ = file->message_type(30);
  static const int Proto10100617_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100617, role_index_),
  };
  Proto10100617_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100617_descriptor_,
      Proto10100617::default_instance_,
      Proto10100617_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100617, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100617, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100617));
  Proto10100615_descriptor_ = file->message_type(31);
  static const int Proto10100615_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100615, page_index_),
  };
  Proto10100615_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100615_descriptor_,
      Proto10100615::default_instance_,
      Proto10100615_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100615, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100615, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100615));
  Proto50100615_descriptor_ = file->message_type(32);
  static const int Proto50100615_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100615, apply_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100615, page_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100615, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100615, auto_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100615, accept_force_),
  };
  Proto50100615_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100615_descriptor_,
      Proto50100615::default_instance_,
      Proto50100615_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100615, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100615, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100615));
  Proto10100619_descriptor_ = file->message_type(33);
  static const int Proto10100619_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100619, role_set_),
  };
  Proto10100619_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100619_descriptor_,
      Proto10100619::default_instance_,
      Proto10100619_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100619, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100619, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100619));
  Proto10100620_descriptor_ = file->message_type(34);
  static const int Proto10100620_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100620, role_set_),
  };
  Proto10100620_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100620_descriptor_,
      Proto10100620::default_instance_,
      Proto10100620_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100620, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100620, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100620));
  Proto10100613_descriptor_ = file->message_type(35);
  static const int Proto10100613_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100613, donate_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100613, donate_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100613, send_flag_),
  };
  Proto10100613_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100613_descriptor_,
      Proto10100613::default_instance_,
      Proto10100613_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100613, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100613, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100613));
  Proto10100618_descriptor_ = file->message_type(36);
  static const int Proto10100618_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100618, role_index_),
  };
  Proto10100618_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100618_descriptor_,
      Proto10100618::default_instance_,
      Proto10100618_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100618, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100618, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100618));
  Proto50100621_descriptor_ = file->message_type(37);
  static const int Proto50100621_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100621, log_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100621, cur_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100621, total_page_),
  };
  Proto50100621_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100621_descriptor_,
      Proto50100621::default_instance_,
      Proto50100621_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100621, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100621, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100621));
  Proto11400803_descriptor_ = file->message_type(38);
  static const int Proto11400803_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400803, vip_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400803, reward_type_),
  };
  Proto11400803_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400803_descriptor_,
      Proto11400803::default_instance_,
      Proto11400803_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400803, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400803, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400803));
  Proto51400804_descriptor_ = file->message_type(39);
  static const int Proto51400804_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400804, vip_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400804, ishavegift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400804, free_divine_reset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400804, free_transfer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400804, free_divine_get_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400804, free_dg_pro_cool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400804, need_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400804, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400804, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400804, vip_gift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400804, vip_weekly_gift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400804, free_relive_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400804, weekly_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400804, level_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400804, reward_list_),
  };
  Proto51400804_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400804_descriptor_,
      Proto51400804::default_instance_,
      Proto51400804_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400804, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400804, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400804));
  Proto51400803_descriptor_ = file->message_type(40);
  static const int Proto51400803_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400803, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400803, reward_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400803, vip_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400803, reward_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400803, weekly_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400803, weekly_reward_),
  };
  Proto51400803_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400803_descriptor_,
      Proto51400803::default_instance_,
      Proto51400803_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400803, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400803, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400803));
  Proto10100021_descriptor_ = file->message_type(41);
  static const int Proto10100021_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100021, mall_type_),
  };
  Proto10100021_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100021_descriptor_,
      Proto10100021::default_instance_,
      Proto10100021_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100021, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100021, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100021));
  Proto50100021_descriptor_ = file->message_type(42);
  static const int Proto50100021_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100021, mall_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100021, activity_active_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100021, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100021, vip_lvl_),
  };
  Proto50100021_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100021_descriptor_,
      Proto50100021::default_instance_,
      Proto50100021_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100021, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100021, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100021));
  Proto10100022_descriptor_ = file->message_type(43);
  static const int Proto10100022_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100022, shop_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100022, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100022, item_anount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100022, player_name_),
  };
  Proto10100022_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100022_descriptor_,
      Proto10100022::default_instance_,
      Proto10100022_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100022, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100022, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100022));
  Proto80400208_descriptor_ = file->message_type(44);
  static const int Proto80400208_offsets_[26] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, update_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, mount_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, weapon_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, clothes_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, fashion_weapon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, fashion_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, fashion_color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, cur_label_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, league_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, league_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, vip_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, src_role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, role_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, weapon_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, is_protect_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, mw_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, mw_rank_lvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, sword_pool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, hotspring_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, partner_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, partner_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, wedding_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, wedding_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, transfer_id_),
  };
  Proto80400208_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400208_descriptor_,
      Proto80400208::default_instance_,
      Proto80400208_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400208, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400208));
  Proto10100023_descriptor_ = file->message_type(45);
  static const int Proto10100023_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100023, shop_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100023, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100023, buy_amount_),
  };
  Proto10100023_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100023_descriptor_,
      Proto10100023::default_instance_,
      Proto10100023_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100023, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100023, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100023));
  Proto10100303_descriptor_ = file->message_type(46);
  static const int Proto10100303_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100303, role_id_),
  };
  Proto10100303_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100303_descriptor_,
      Proto10100303::default_instance_,
      Proto10100303_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100303, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100303, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100303));
  Proto10100304_descriptor_ = file->message_type(47);
  static const int Proto10100304_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100304, role_id_),
  };
  Proto10100304_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100304_descriptor_,
      Proto10100304::default_instance_,
      Proto10100304_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100304, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100304, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100304));
  Proto10100307_descriptor_ = file->message_type(48);
  static const int Proto10100307_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100307, role_id_),
  };
  Proto10100307_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100307_descriptor_,
      Proto10100307::default_instance_,
      Proto10100307_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100307, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100307, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100307));
  Proto10100309_descriptor_ = file->message_type(49);
  static const int Proto10100309_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100309, respone_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100309, role_id_),
  };
  Proto10100309_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100309_descriptor_,
      Proto10100309::default_instance_,
      Proto10100309_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100309, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100309, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100309));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient004_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400653_descriptor_, &Proto11400653::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400653_descriptor_, &Proto51400653::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400602_descriptor_, &Proto81400602::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400207_descriptor_, &Proto80400207::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400103_descriptor_, &Proto80400103::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400654_descriptor_, &Proto11400654::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400701_descriptor_, &Proto50400701::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400702_descriptor_, &Proto10400702::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400702_descriptor_, &Proto50400702::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400704_descriptor_, &Proto10400704::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100601_descriptor_, &Proto10100601::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100602_descriptor_, &Proto10100602::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100604_descriptor_, &Proto10100604::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100605_descriptor_, &Proto10100605::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100622_descriptor_, &Proto50100622::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100601_descriptor_, &Proto50100601::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100604_descriptor_, &Proto50100604::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100606_descriptor_, &Proto50100606::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100624_descriptor_, &Proto10100624::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100624_descriptor_, &Proto50100624::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100625_descriptor_, &Proto10100625::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100611_descriptor_, &Proto10100611::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100621_descriptor_, &Proto10100621::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100626_descriptor_, &Proto50100626::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100627_descriptor_, &Proto50100627::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100628_descriptor_, &Proto10100628::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100628_descriptor_, &Proto50100628::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100614_descriptor_, &Proto10100614::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100614_descriptor_, &Proto50100614::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100616_descriptor_, &Proto10100616::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100617_descriptor_, &Proto10100617::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100615_descriptor_, &Proto10100615::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100615_descriptor_, &Proto50100615::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100619_descriptor_, &Proto10100619::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100620_descriptor_, &Proto10100620::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100613_descriptor_, &Proto10100613::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100618_descriptor_, &Proto10100618::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100621_descriptor_, &Proto50100621::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400803_descriptor_, &Proto11400803::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400804_descriptor_, &Proto51400804::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400803_descriptor_, &Proto51400803::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100021_descriptor_, &Proto10100021::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100021_descriptor_, &Proto50100021::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100022_descriptor_, &Proto10100022::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400208_descriptor_, &Proto80400208::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100023_descriptor_, &Proto10100023::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100303_descriptor_, &Proto10100303::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100304_descriptor_, &Proto10100304::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100307_descriptor_, &Proto10100307::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100309_descriptor_, &Proto10100309::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient004_2eproto() {
  delete Proto11400653::default_instance_;
  delete Proto11400653_reflection_;
  delete Proto51400653::default_instance_;
  delete Proto51400653_reflection_;
  delete Proto81400602::default_instance_;
  delete Proto81400602_reflection_;
  delete Proto80400207::default_instance_;
  delete Proto80400207_reflection_;
  delete Proto80400103::default_instance_;
  delete Proto80400103_reflection_;
  delete Proto11400654::default_instance_;
  delete Proto11400654_reflection_;
  delete Proto50400701::default_instance_;
  delete Proto50400701_reflection_;
  delete Proto10400702::default_instance_;
  delete Proto10400702_reflection_;
  delete Proto50400702::default_instance_;
  delete Proto50400702_reflection_;
  delete Proto10400704::default_instance_;
  delete Proto10400704_reflection_;
  delete Proto10100601::default_instance_;
  delete Proto10100601_reflection_;
  delete Proto10100602::default_instance_;
  delete Proto10100602_reflection_;
  delete Proto10100604::default_instance_;
  delete Proto10100604_reflection_;
  delete Proto10100605::default_instance_;
  delete Proto10100605_reflection_;
  delete Proto50100622::default_instance_;
  delete Proto50100622_reflection_;
  delete Proto50100601::default_instance_;
  delete Proto50100601_reflection_;
  delete Proto50100604::default_instance_;
  delete Proto50100604_reflection_;
  delete Proto50100606::default_instance_;
  delete Proto50100606_reflection_;
  delete Proto10100624::default_instance_;
  delete Proto10100624_reflection_;
  delete Proto50100624::default_instance_;
  delete Proto50100624_reflection_;
  delete Proto10100625::default_instance_;
  delete Proto10100625_reflection_;
  delete Proto10100611::default_instance_;
  delete Proto10100611_reflection_;
  delete Proto10100621::default_instance_;
  delete Proto10100621_reflection_;
  delete Proto50100626::default_instance_;
  delete Proto50100626_reflection_;
  delete Proto50100627::default_instance_;
  delete Proto50100627_reflection_;
  delete Proto10100628::default_instance_;
  delete Proto10100628_reflection_;
  delete Proto50100628::default_instance_;
  delete Proto50100628_reflection_;
  delete Proto10100614::default_instance_;
  delete Proto10100614_reflection_;
  delete Proto50100614::default_instance_;
  delete Proto50100614_reflection_;
  delete Proto10100616::default_instance_;
  delete Proto10100616_reflection_;
  delete Proto10100617::default_instance_;
  delete Proto10100617_reflection_;
  delete Proto10100615::default_instance_;
  delete Proto10100615_reflection_;
  delete Proto50100615::default_instance_;
  delete Proto50100615_reflection_;
  delete Proto10100619::default_instance_;
  delete Proto10100619_reflection_;
  delete Proto10100620::default_instance_;
  delete Proto10100620_reflection_;
  delete Proto10100613::default_instance_;
  delete Proto10100613_reflection_;
  delete Proto10100618::default_instance_;
  delete Proto10100618_reflection_;
  delete Proto50100621::default_instance_;
  delete Proto50100621_reflection_;
  delete Proto11400803::default_instance_;
  delete Proto11400803_reflection_;
  delete Proto51400804::default_instance_;
  delete Proto51400804_reflection_;
  delete Proto51400803::default_instance_;
  delete Proto51400803_reflection_;
  delete Proto10100021::default_instance_;
  delete Proto10100021_reflection_;
  delete Proto50100021::default_instance_;
  delete Proto50100021_reflection_;
  delete Proto10100022::default_instance_;
  delete Proto10100022_reflection_;
  delete Proto80400208::default_instance_;
  delete Proto80400208_reflection_;
  delete Proto10100023::default_instance_;
  delete Proto10100023_reflection_;
  delete Proto10100303::default_instance_;
  delete Proto10100303_reflection_;
  delete Proto10100304::default_instance_;
  delete Proto10100304_reflection_;
  delete Proto10100307::default_instance_;
  delete Proto10100307_reflection_;
  delete Proto10100309::default_instance_;
  delete Proto10100309_reflection_;
}

void protobuf_AddDesc_ProtoClient004_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient004.proto\032\021ProtoPublic.prot"
    "o\"4\n\rProto11400653\022\020\n\010pkg_type\030\001 \001(\005\022\021\n\t"
    "pkg_index\030\002 \001(\005\"H\n\rProto51400653\022\020\n\010pkg_"
    "type\030\001 \001(\005\022\021\n\tpkg_index\030\002 \001(\005\022\022\n\nfashion"
    "_id\030\003 \001(\005\"Z\n\rProto81400602\022\020\n\010pkg_type\030\001"
    " \001(\005\022\021\n\tpkg_index\030\002 \001(\005\022\022\n\nfashion_id\030\003 "
    "\001(\005\022\020\n\010left_sec\030\004 \001(\005\"X\n\rProto80400207\022\022"
    "\n\nfighter_id\030\001 \001(\003\022\016\n\006status\030\002 \001(\005\022#\n\rst"
    "atus_detial\030\003 \001(\0132\014.ProtoStatus\"\377\001\n\rProt"
    "o80400103\022\020\n\010beast_id\030\001 \001(\003\022\021\n\tmaster_id"
    "\030\002 \001(\003\022\022\n\nbeast_sort\030\003 \001(\005\022\022\n\nbeast_name"
    "\030\004 \001(\t\022\016\n\006toward\030\005 \001(\005\022\023\n\013beast_speed\030\006 "
    "\001(\005\022\020\n\010space_id\030\007 \001(\005\022\035\n\010location\030\010 \001(\0132"
    "\013.ProtoCoord\022\023\n\013mount_shape\030\t \001(\005\022\024\n\014wea"
    "pon_shape\030\n \001(\005\022\014\n\004type\030\013 \001(\005\022\022\n\nbeast_w"
    "ing\030\014 \001(\005\"D\n\rProto11400654\022\020\n\010pkg_type\030\001"
    " \001(\005\022\021\n\tpkg_index\030\002 \001(\005\022\016\n\006amount\030\003 \001(\005\""
    "\273\001\n\rProto50400701\022\037\n\nskill_list\030\001 \003(\0132\013."
    "ProtoSkill\022\016\n\006scheme\030\002 \001(\005\022\031\n\021scheme_ski"
    "ll_list\030\003 \003(\005\022\022\n\nrama_skill\030\004 \001(\005\022\027\n\017ram"
    "a_skill_list\030\005 \003(\005\022\014\n\004part\030\006 \001(\005\022#\n\016tran"
    "sfer_skill\030\007 \003(\0132\013.ProtoSkill\"\037\n\rProto10"
    "400702\022\016\n\006scheme\030\001 \001(\005\"3\n\rProto50400702\022"
    "\016\n\006scheme\030\001 \001(\005\022\022\n\nskill_list\030\002 \003(\005\"@\n\rP"
    "roto10400704\022\016\n\006scheme\030\001 \001(\005\022\r\n\005index\030\002 "
    "\001(\005\022\020\n\010skill_id\030\003 \001(\005\"6\n\rProto10100601\022\022"
    "\n\npage_index\030\001 \001(\005\022\021\n\tshow_join\030\002 \001(\005\"O\n"
    "\rProto10100602\022\023\n\013league_name\030\001 \001(\t\022\024\n\014l"
    "eague_intro\030\002 \001(\t\022\023\n\013create_type\030\003 \001(\005\"\""
    "\n\rProto10100604\022\021\n\tapply_set\030\001 \003(\003\"%\n\rPr"
    "oto10100605\022\024\n\014league_index\030\001 \001(\003\"$\n\rPro"
    "to50100622\022\023\n\013league_flag\030\001 \001(\005\"]\n\rProto"
    "50100601\022\022\n\npage_index\030\001 \001(\005\022\022\n\ntotal_pa"
    "ge\030\002 \001(\005\022$\n\nleague_set\030\003 \003(\0132\020.ProtoLeag"
    "ueItem\"\"\n\rProto50100604\022\021\n\tapply_set\030\001 \003"
    "(\003\"\352\003\n\rProto50100606\022\024\n\014league_index\030\001 \001"
    "(\003\022\023\n\013league_name\030\002 \001(\t\022\024\n\014league_count\030"
    "\003 \001(\005\022\023\n\013league_rank\030\004 \001(\005\022\021\n\tleader_id\030"
    "\005 \001(\003\022\023\n\013leader_name\030\006 \001(\t\022\022\n\nleague_lvl"
    "\030\007 \001(\005\022\027\n\017league_resource\030\010 \001(\005\022\026\n\016total"
    "_resource\030\t \001(\005\022\024\n\014league_intro\030\n \001(\t\022\022\n"
    "\nleague_pos\030\013 \001(\005\022\023\n\013have_salary\030\014 \001(\005\022\031"
    "\n\021left_recruit_time\030\r \001(\005\022\021\n\tis_lstore\030\016"
    " \001(\005\022\023\n\013auto_accept\030\017 \001(\005\022\025\n\rleader_care"
    "er\030\020 \001(\005\022\022\n\nleader_sex\030\021 \001(\005\022\026\n\016leader_w"
    "eapons\030\022 \001(\005\022\024\n\014leader_wings\030\023 \001(\005\022\022\n\nfa"
    "shion_id\030\024 \001(\005\022\025\n\rfashion_color\030\025 \001(\005\022\020\n"
    "\010max_role\030\026 \001(\005\"\"\n\rProto10100624\022\021\n\tshop"
    "_type\030\001 \001(\005\"Z\n\rProto50100624\022\021\n\tshop_typ"
    "e\030\001 \001(\005\022\022\n\ncur_contri\030\002 \001(\005\022\"\n\010shop_set\030"
    "\003 \003(\0132\020.ProtoLeagueShop\"H\n\rProto10100625"
    "\022\021\n\tshop_type\030\001 \001(\005\022\020\n\010buy_item\030\002 \001(\005\022\022\n"
    "\nbuy_number\030\003 \001(\005\"%\n\rProto10100611\022\024\n\014le"
    "ague_intro\030\001 \001(\t\"#\n\rProto10100621\022\022\n\npag"
    "e_index\030\001 \001(\005\"\235\001\n\rProto50100626\022\014\n\004wand\030"
    "\001 \001(\005\022\014\n\004gold\030\002 \001(\005\022\021\n\tmy_contri\030\003 \001(\005\022\021"
    "\n\tsend_flag\030\004 \001(\005\022$\n\ntoday_rank\030\005 \003(\0132\020."
    "ProtoDonateRank\022$\n\ntotal_rank\030\006 \003(\0132\020.Pr"
    "otoDonateRank\"E\n\rProto50100627\022\022\n\ncur_co"
    "ntri\030\001 \001(\005\022 \n\tskill_set\030\002 \003(\0132\r.ProtoPai"
    "rObj\"!\n\rProto10100628\022\020\n\010skill_id\030\001 \001(\005\""
    "J\n\rProto50100628\022\020\n\010skill_id\030\001 \001(\005\022\023\n\013sk"
    "ill_level\030\002 \001(\005\022\022\n\ncur_contri\030\003 \001(\005\"#\n\rP"
    "roto10100614\022\022\n\npage_index\030\001 \001(\005\"7\n\rProt"
    "o50100614\022&\n\nmember_set\030\001 \003(\0132\022.ProtoLea"
    "gueMember\"7\n\rProto10100616\022\022\n\nrole_index"
    "\030\001 \001(\003\022\022\n\ntarget_pos\030\002 \001(\005\"#\n\rProto10100"
    "617\022\022\n\nrole_index\030\001 \001(\003\"#\n\rProto10100615"
    "\022\022\n\npage_index\030\001 \001(\005\"\206\001\n\rProto50100615\022$"
    "\n\tapply_set\030\001 \003(\0132\021.ProtoLeagueApply\022\022\n\n"
    "page_index\030\002 \001(\005\022\022\n\ntotal_page\030\003 \001(\005\022\021\n\t"
    "auto_flag\030\004 \001(\005\022\024\n\014accept_force\030\005 \001(\005\"!\n"
    "\rProto10100619\022\020\n\010role_set\030\001 \003(\003\"!\n\rProt"
    "o10100620\022\020\n\010role_set\030\001 \003(\003\"N\n\rProto1010"
    "0613\022\023\n\013donate_type\030\001 \001(\005\022\025\n\rdonate_numb"
    "er\030\002 \001(\005\022\021\n\tsend_flag\030\003 \001(\005\"#\n\rProto1010"
    "0618\022\022\n\nrole_index\030\001 \001(\003\"W\n\rProto5010062"
    "1\022 \n\007log_set\030\001 \003(\0132\017.ProtoLeagueLog\022\020\n\010c"
    "ur_page\030\002 \001(\005\022\022\n\ntotal_page\030\003 \001(\005\"6\n\rPro"
    "to11400803\022\020\n\010vip_type\030\001 \001(\005\022\023\n\013reward_t"
    "ype\030\002 \001(\005\"\200\003\n\rProto51400804\022\020\n\010vip_type\030"
    "\001 \001(\005\022\022\n\nisHaveGift\030\002 \001(\005\022\031\n\021free_divine"
    "_reset\030\003 \001(\005\022\025\n\rfree_transfer\030\004 \001(\005\022\027\n\017f"
    "ree_divine_get\030\005 \001(\005\022\030\n\020free_dg_pro_cool"
    "\030\006 \001(\005\022\021\n\tneed_gold\030\007 \001(\005\022\014\n\004gold\030\010 \001(\005\022"
    "\035\n\titem_list\030\t \003(\0132\n.ProtoItem\022\037\n\010vip_gi"
    "ft\030\n \003(\0132\r.ProtoVipGift\022&\n\017vip_weekly_gi"
    "ft\030\013 \003(\0132\r.ProtoVipGift\022\031\n\021free_relive_t"
    "imes\030\014 \001(\005\022\025\n\rweekly_reward\030\r \001(\005\022\024\n\014lev"
    "el_reward\030\016 \001(\005\022\023\n\013reward_list\030\017 \003(\005\"\243\001\n"
    "\rProto51400803\022\014\n\004flag\030\001 \001(\005\022\023\n\013reward_t"
    "ype\030\002 \001(\005\022\020\n\010vip_type\030\003 \001(\005\022\"\n\013reward_li"
    "st\030\004 \003(\0132\r.ProtoVipGift\022\"\n\013weekly_list\030\005"
    " \003(\0132\r.ProtoVipGift\022\025\n\rweekly_reward\030\006 \001"
    "(\005\"\"\n\rProto10100021\022\021\n\tmall_type\030\001 \001(\005\"o"
    "\n\rProto50100021\022!\n\tmall_list\030\001 \003(\0132\016.Pro"
    "toMallList\022\027\n\017activity_active\030\002 \001(\005\022\021\n\tl"
    "eft_time\030\003 \001(\005\022\017\n\007vip_lvl\030\004 \001(\005\"]\n\rProto"
    "10100022\022\021\n\tshop_type\030\001 \001(\005\022\017\n\007item_id\030\002"
    " \001(\005\022\023\n\013item_anount\030\003 \001(\005\022\023\n\013player_name"
    "\030\004 \001(\t\"\231\004\n\rProto80400208\022\017\n\007role_id\030\001 \001("
    "\003\022\023\n\013update_type\030\002 \001(\005\022\020\n\010mount_id\030\003 \001(\005"
    "\022\021\n\tweapon_id\030\004 \001(\005\022\022\n\nclothes_id\030\005 \001(\005\022"
    "\026\n\016fashion_weapon\030\006 \001(\005\022\022\n\nfashion_id\030\007 "
    "\001(\005\022\025\n\rfashion_color\030\010 \001(\005\022\021\n\tcur_label\030"
    "\t \001(\005\022\021\n\tleague_id\030\n \001(\003\022\023\n\013league_name\030"
    "\013 \001(\t\022\020\n\010vip_type\030\014 \001(\005\022\023\n\013src_role_id\030\r"
    " \001(\003\022\022\n\nrole_level\030\016 \001(\005\022\022\n\nweapon_lvl\030\017"
    " \001(\005\022\022\n\nis_protect\030\020 \001(\005\022\r\n\005value\030\021 \001(\005\022"
    "\r\n\005mw_id\030\022 \001(\005\022\023\n\013mw_rank_lvl\030\023 \001(\005\022\022\n\ns"
    "word_pool\030\024 \001(\005\022\030\n\020hotspring_status\030\025 \001("
    "\005\022\022\n\npartner_id\030\026 \001(\003\022\024\n\014partner_name\030\027 "
    "\001(\t\022\022\n\nwedding_id\030\030 \001(\003\022\024\n\014wedding_type\030"
    "\031 \001(\005\022\023\n\013transfer_id\030\032 \001(\005\"G\n\rProto10100"
    "023\022\021\n\tshop_type\030\001 \001(\005\022\017\n\007item_id\030\002 \001(\005\022"
    "\022\n\nbuy_amount\030\003 \001(\005\" \n\rProto10100303\022\017\n\007"
    "role_id\030\001 \001(\003\" \n\rProto10100304\022\017\n\007role_i"
    "d\030\001 \001(\003\" \n\rProto10100307\022\017\n\007role_id\030\001 \001("
    "\003\"6\n\rProto10100309\022\024\n\014respone_type\030\001 \001(\005"
    "\022\017\n\007role_id\030\002 \003(\003", 4777);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient004.proto", &protobuf_RegisterTypes);
  Proto11400653::default_instance_ = new Proto11400653();
  Proto51400653::default_instance_ = new Proto51400653();
  Proto81400602::default_instance_ = new Proto81400602();
  Proto80400207::default_instance_ = new Proto80400207();
  Proto80400103::default_instance_ = new Proto80400103();
  Proto11400654::default_instance_ = new Proto11400654();
  Proto50400701::default_instance_ = new Proto50400701();
  Proto10400702::default_instance_ = new Proto10400702();
  Proto50400702::default_instance_ = new Proto50400702();
  Proto10400704::default_instance_ = new Proto10400704();
  Proto10100601::default_instance_ = new Proto10100601();
  Proto10100602::default_instance_ = new Proto10100602();
  Proto10100604::default_instance_ = new Proto10100604();
  Proto10100605::default_instance_ = new Proto10100605();
  Proto50100622::default_instance_ = new Proto50100622();
  Proto50100601::default_instance_ = new Proto50100601();
  Proto50100604::default_instance_ = new Proto50100604();
  Proto50100606::default_instance_ = new Proto50100606();
  Proto10100624::default_instance_ = new Proto10100624();
  Proto50100624::default_instance_ = new Proto50100624();
  Proto10100625::default_instance_ = new Proto10100625();
  Proto10100611::default_instance_ = new Proto10100611();
  Proto10100621::default_instance_ = new Proto10100621();
  Proto50100626::default_instance_ = new Proto50100626();
  Proto50100627::default_instance_ = new Proto50100627();
  Proto10100628::default_instance_ = new Proto10100628();
  Proto50100628::default_instance_ = new Proto50100628();
  Proto10100614::default_instance_ = new Proto10100614();
  Proto50100614::default_instance_ = new Proto50100614();
  Proto10100616::default_instance_ = new Proto10100616();
  Proto10100617::default_instance_ = new Proto10100617();
  Proto10100615::default_instance_ = new Proto10100615();
  Proto50100615::default_instance_ = new Proto50100615();
  Proto10100619::default_instance_ = new Proto10100619();
  Proto10100620::default_instance_ = new Proto10100620();
  Proto10100613::default_instance_ = new Proto10100613();
  Proto10100618::default_instance_ = new Proto10100618();
  Proto50100621::default_instance_ = new Proto50100621();
  Proto11400803::default_instance_ = new Proto11400803();
  Proto51400804::default_instance_ = new Proto51400804();
  Proto51400803::default_instance_ = new Proto51400803();
  Proto10100021::default_instance_ = new Proto10100021();
  Proto50100021::default_instance_ = new Proto50100021();
  Proto10100022::default_instance_ = new Proto10100022();
  Proto80400208::default_instance_ = new Proto80400208();
  Proto10100023::default_instance_ = new Proto10100023();
  Proto10100303::default_instance_ = new Proto10100303();
  Proto10100304::default_instance_ = new Proto10100304();
  Proto10100307::default_instance_ = new Proto10100307();
  Proto10100309::default_instance_ = new Proto10100309();
  Proto11400653::default_instance_->InitAsDefaultInstance();
  Proto51400653::default_instance_->InitAsDefaultInstance();
  Proto81400602::default_instance_->InitAsDefaultInstance();
  Proto80400207::default_instance_->InitAsDefaultInstance();
  Proto80400103::default_instance_->InitAsDefaultInstance();
  Proto11400654::default_instance_->InitAsDefaultInstance();
  Proto50400701::default_instance_->InitAsDefaultInstance();
  Proto10400702::default_instance_->InitAsDefaultInstance();
  Proto50400702::default_instance_->InitAsDefaultInstance();
  Proto10400704::default_instance_->InitAsDefaultInstance();
  Proto10100601::default_instance_->InitAsDefaultInstance();
  Proto10100602::default_instance_->InitAsDefaultInstance();
  Proto10100604::default_instance_->InitAsDefaultInstance();
  Proto10100605::default_instance_->InitAsDefaultInstance();
  Proto50100622::default_instance_->InitAsDefaultInstance();
  Proto50100601::default_instance_->InitAsDefaultInstance();
  Proto50100604::default_instance_->InitAsDefaultInstance();
  Proto50100606::default_instance_->InitAsDefaultInstance();
  Proto10100624::default_instance_->InitAsDefaultInstance();
  Proto50100624::default_instance_->InitAsDefaultInstance();
  Proto10100625::default_instance_->InitAsDefaultInstance();
  Proto10100611::default_instance_->InitAsDefaultInstance();
  Proto10100621::default_instance_->InitAsDefaultInstance();
  Proto50100626::default_instance_->InitAsDefaultInstance();
  Proto50100627::default_instance_->InitAsDefaultInstance();
  Proto10100628::default_instance_->InitAsDefaultInstance();
  Proto50100628::default_instance_->InitAsDefaultInstance();
  Proto10100614::default_instance_->InitAsDefaultInstance();
  Proto50100614::default_instance_->InitAsDefaultInstance();
  Proto10100616::default_instance_->InitAsDefaultInstance();
  Proto10100617::default_instance_->InitAsDefaultInstance();
  Proto10100615::default_instance_->InitAsDefaultInstance();
  Proto50100615::default_instance_->InitAsDefaultInstance();
  Proto10100619::default_instance_->InitAsDefaultInstance();
  Proto10100620::default_instance_->InitAsDefaultInstance();
  Proto10100613::default_instance_->InitAsDefaultInstance();
  Proto10100618::default_instance_->InitAsDefaultInstance();
  Proto50100621::default_instance_->InitAsDefaultInstance();
  Proto11400803::default_instance_->InitAsDefaultInstance();
  Proto51400804::default_instance_->InitAsDefaultInstance();
  Proto51400803::default_instance_->InitAsDefaultInstance();
  Proto10100021::default_instance_->InitAsDefaultInstance();
  Proto50100021::default_instance_->InitAsDefaultInstance();
  Proto10100022::default_instance_->InitAsDefaultInstance();
  Proto80400208::default_instance_->InitAsDefaultInstance();
  Proto10100023::default_instance_->InitAsDefaultInstance();
  Proto10100303::default_instance_->InitAsDefaultInstance();
  Proto10100304::default_instance_->InitAsDefaultInstance();
  Proto10100307::default_instance_->InitAsDefaultInstance();
  Proto10100309::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient004_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient004_2eproto {
  StaticDescriptorInitializer_ProtoClient004_2eproto() {
    protobuf_AddDesc_ProtoClient004_2eproto();
  }
} static_descriptor_initializer_ProtoClient004_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto11400653::kPkgTypeFieldNumber;
const int Proto11400653::kPkgIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400653::Proto11400653()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400653::InitAsDefaultInstance() {
}

Proto11400653::Proto11400653(const Proto11400653& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400653::SharedCtor() {
  _cached_size_ = 0;
  pkg_type_ = 0;
  pkg_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400653::~Proto11400653() {
  SharedDtor();
}

void Proto11400653::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400653::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400653::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400653_descriptor_;
}

const Proto11400653& Proto11400653::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto11400653* Proto11400653::default_instance_ = NULL;

Proto11400653* Proto11400653::New() const {
  return new Proto11400653;
}

void Proto11400653::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pkg_type_ = 0;
    pkg_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400653::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pkg_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_type_)));
          set_has_pkg_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pkg_index;
        break;
      }
      
      // optional int32 pkg_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400653::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pkg_type = 1;
  if (has_pkg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pkg_type(), output);
  }
  
  // optional int32 pkg_index = 2;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pkg_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400653::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pkg_type = 1;
  if (has_pkg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pkg_type(), target);
  }
  
  // optional int32 pkg_index = 2;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pkg_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400653::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pkg_type = 1;
    if (has_pkg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_type());
    }
    
    // optional int32 pkg_index = 2;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400653::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400653* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400653*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400653::MergeFrom(const Proto11400653& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pkg_type()) {
      set_pkg_type(from.pkg_type());
    }
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400653::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400653::CopyFrom(const Proto11400653& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400653::IsInitialized() const {
  
  return true;
}

void Proto11400653::Swap(Proto11400653* other) {
  if (other != this) {
    std::swap(pkg_type_, other->pkg_type_);
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400653::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400653_descriptor_;
  metadata.reflection = Proto11400653_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400653::kPkgTypeFieldNumber;
const int Proto51400653::kPkgIndexFieldNumber;
const int Proto51400653::kFashionIdFieldNumber;
#endif  // !_MSC_VER

Proto51400653::Proto51400653()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400653::InitAsDefaultInstance() {
}

Proto51400653::Proto51400653(const Proto51400653& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400653::SharedCtor() {
  _cached_size_ = 0;
  pkg_type_ = 0;
  pkg_index_ = 0;
  fashion_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400653::~Proto51400653() {
  SharedDtor();
}

void Proto51400653::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400653::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400653::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400653_descriptor_;
}

const Proto51400653& Proto51400653::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto51400653* Proto51400653::default_instance_ = NULL;

Proto51400653* Proto51400653::New() const {
  return new Proto51400653;
}

void Proto51400653::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pkg_type_ = 0;
    pkg_index_ = 0;
    fashion_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400653::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pkg_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_type_)));
          set_has_pkg_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pkg_index;
        break;
      }
      
      // optional int32 pkg_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_fashion_id;
        break;
      }
      
      // optional int32 fashion_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400653::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pkg_type = 1;
  if (has_pkg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pkg_type(), output);
  }
  
  // optional int32 pkg_index = 2;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pkg_index(), output);
  }
  
  // optional int32 fashion_id = 3;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fashion_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400653::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pkg_type = 1;
  if (has_pkg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pkg_type(), target);
  }
  
  // optional int32 pkg_index = 2;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pkg_index(), target);
  }
  
  // optional int32 fashion_id = 3;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fashion_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400653::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pkg_type = 1;
    if (has_pkg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_type());
    }
    
    // optional int32 pkg_index = 2;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
    // optional int32 fashion_id = 3;
    if (has_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400653::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400653* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400653*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400653::MergeFrom(const Proto51400653& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pkg_type()) {
      set_pkg_type(from.pkg_type());
    }
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400653::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400653::CopyFrom(const Proto51400653& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400653::IsInitialized() const {
  
  return true;
}

void Proto51400653::Swap(Proto51400653* other) {
  if (other != this) {
    std::swap(pkg_type_, other->pkg_type_);
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400653::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400653_descriptor_;
  metadata.reflection = Proto51400653_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400602::kPkgTypeFieldNumber;
const int Proto81400602::kPkgIndexFieldNumber;
const int Proto81400602::kFashionIdFieldNumber;
const int Proto81400602::kLeftSecFieldNumber;
#endif  // !_MSC_VER

Proto81400602::Proto81400602()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400602::InitAsDefaultInstance() {
}

Proto81400602::Proto81400602(const Proto81400602& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400602::SharedCtor() {
  _cached_size_ = 0;
  pkg_type_ = 0;
  pkg_index_ = 0;
  fashion_id_ = 0;
  left_sec_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400602::~Proto81400602() {
  SharedDtor();
}

void Proto81400602::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400602::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400602::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400602_descriptor_;
}

const Proto81400602& Proto81400602::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto81400602* Proto81400602::default_instance_ = NULL;

Proto81400602* Proto81400602::New() const {
  return new Proto81400602;
}

void Proto81400602::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pkg_type_ = 0;
    pkg_index_ = 0;
    fashion_id_ = 0;
    left_sec_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400602::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pkg_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_type_)));
          set_has_pkg_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pkg_index;
        break;
      }
      
      // optional int32 pkg_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_fashion_id;
        break;
      }
      
      // optional int32 fashion_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_left_sec;
        break;
      }
      
      // optional int32 left_sec = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_sec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_sec_)));
          set_has_left_sec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400602::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pkg_type = 1;
  if (has_pkg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pkg_type(), output);
  }
  
  // optional int32 pkg_index = 2;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pkg_index(), output);
  }
  
  // optional int32 fashion_id = 3;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fashion_id(), output);
  }
  
  // optional int32 left_sec = 4;
  if (has_left_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->left_sec(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400602::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pkg_type = 1;
  if (has_pkg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pkg_type(), target);
  }
  
  // optional int32 pkg_index = 2;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pkg_index(), target);
  }
  
  // optional int32 fashion_id = 3;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fashion_id(), target);
  }
  
  // optional int32 left_sec = 4;
  if (has_left_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->left_sec(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400602::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pkg_type = 1;
    if (has_pkg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_type());
    }
    
    // optional int32 pkg_index = 2;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
    // optional int32 fashion_id = 3;
    if (has_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
    // optional int32 left_sec = 4;
    if (has_left_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_sec());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400602::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400602* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400602*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400602::MergeFrom(const Proto81400602& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pkg_type()) {
      set_pkg_type(from.pkg_type());
    }
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
    if (from.has_left_sec()) {
      set_left_sec(from.left_sec());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400602::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400602::CopyFrom(const Proto81400602& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400602::IsInitialized() const {
  
  return true;
}

void Proto81400602::Swap(Proto81400602* other) {
  if (other != this) {
    std::swap(pkg_type_, other->pkg_type_);
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(left_sec_, other->left_sec_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400602::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400602_descriptor_;
  metadata.reflection = Proto81400602_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400207::kFighterIdFieldNumber;
const int Proto80400207::kStatusFieldNumber;
const int Proto80400207::kStatusDetialFieldNumber;
#endif  // !_MSC_VER

Proto80400207::Proto80400207()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400207::InitAsDefaultInstance() {
  status_detial_ = const_cast< ::ProtoStatus*>(&::ProtoStatus::default_instance());
}

Proto80400207::Proto80400207(const Proto80400207& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400207::SharedCtor() {
  _cached_size_ = 0;
  fighter_id_ = GOOGLE_LONGLONG(0);
  status_ = 0;
  status_detial_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400207::~Proto80400207() {
  SharedDtor();
}

void Proto80400207::SharedDtor() {
  if (this != default_instance_) {
    delete status_detial_;
  }
}

void Proto80400207::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400207::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400207_descriptor_;
}

const Proto80400207& Proto80400207::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto80400207* Proto80400207::default_instance_ = NULL;

Proto80400207* Proto80400207::New() const {
  return new Proto80400207;
}

void Proto80400207::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fighter_id_ = GOOGLE_LONGLONG(0);
    status_ = 0;
    if (has_status_detial()) {
      if (status_detial_ != NULL) status_detial_->::ProtoStatus::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400207::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 fighter_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fighter_id_)));
          set_has_fighter_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }
      
      // optional int32 status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_status_detial;
        break;
      }
      
      // optional .ProtoStatus status_detial = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_status_detial:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status_detial()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400207::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->fighter_id(), output);
  }
  
  // optional int32 status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }
  
  // optional .ProtoStatus status_detial = 3;
  if (has_status_detial()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->status_detial(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400207::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->fighter_id(), target);
  }
  
  // optional int32 status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }
  
  // optional .ProtoStatus status_detial = 3;
  if (has_status_detial()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->status_detial(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400207::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 fighter_id = 1;
    if (has_fighter_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fighter_id());
    }
    
    // optional int32 status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional .ProtoStatus status_detial = 3;
    if (has_status_detial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->status_detial());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400207::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400207* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400207*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400207::MergeFrom(const Proto80400207& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fighter_id()) {
      set_fighter_id(from.fighter_id());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_status_detial()) {
      mutable_status_detial()->::ProtoStatus::MergeFrom(from.status_detial());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400207::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400207::CopyFrom(const Proto80400207& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400207::IsInitialized() const {
  
  return true;
}

void Proto80400207::Swap(Proto80400207* other) {
  if (other != this) {
    std::swap(fighter_id_, other->fighter_id_);
    std::swap(status_, other->status_);
    std::swap(status_detial_, other->status_detial_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400207::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400207_descriptor_;
  metadata.reflection = Proto80400207_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400103::kBeastIdFieldNumber;
const int Proto80400103::kMasterIdFieldNumber;
const int Proto80400103::kBeastSortFieldNumber;
const int Proto80400103::kBeastNameFieldNumber;
const int Proto80400103::kTowardFieldNumber;
const int Proto80400103::kBeastSpeedFieldNumber;
const int Proto80400103::kSpaceIdFieldNumber;
const int Proto80400103::kLocationFieldNumber;
const int Proto80400103::kMountShapeFieldNumber;
const int Proto80400103::kWeaponShapeFieldNumber;
const int Proto80400103::kTypeFieldNumber;
const int Proto80400103::kBeastWingFieldNumber;
#endif  // !_MSC_VER

Proto80400103::Proto80400103()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400103::InitAsDefaultInstance() {
  location_ = const_cast< ::ProtoCoord*>(&::ProtoCoord::default_instance());
}

Proto80400103::Proto80400103(const Proto80400103& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400103::SharedCtor() {
  _cached_size_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  master_id_ = GOOGLE_LONGLONG(0);
  beast_sort_ = 0;
  beast_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  toward_ = 0;
  beast_speed_ = 0;
  space_id_ = 0;
  location_ = NULL;
  mount_shape_ = 0;
  weapon_shape_ = 0;
  type_ = 0;
  beast_wing_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400103::~Proto80400103() {
  SharedDtor();
}

void Proto80400103::SharedDtor() {
  if (beast_name_ != &::google::protobuf::internal::kEmptyString) {
    delete beast_name_;
  }
  if (this != default_instance_) {
    delete location_;
  }
}

void Proto80400103::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400103::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400103_descriptor_;
}

const Proto80400103& Proto80400103::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto80400103* Proto80400103::default_instance_ = NULL;

Proto80400103* Proto80400103::New() const {
  return new Proto80400103;
}

void Proto80400103::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    beast_id_ = GOOGLE_LONGLONG(0);
    master_id_ = GOOGLE_LONGLONG(0);
    beast_sort_ = 0;
    if (has_beast_name()) {
      if (beast_name_ != &::google::protobuf::internal::kEmptyString) {
        beast_name_->clear();
      }
    }
    toward_ = 0;
    beast_speed_ = 0;
    space_id_ = 0;
    if (has_location()) {
      if (location_ != NULL) location_->::ProtoCoord::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    mount_shape_ = 0;
    weapon_shape_ = 0;
    type_ = 0;
    beast_wing_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400103::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 beast_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_master_id;
        break;
      }
      
      // optional int64 master_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_master_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &master_id_)));
          set_has_master_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_beast_sort;
        break;
      }
      
      // optional int32 beast_sort = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beast_sort_)));
          set_has_beast_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_beast_name;
        break;
      }
      
      // optional string beast_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_beast_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_beast_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->beast_name().data(), this->beast_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_toward;
        break;
      }
      
      // optional int32 toward = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_toward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &toward_)));
          set_has_toward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_beast_speed;
        break;
      }
      
      // optional int32 beast_speed = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beast_speed_)));
          set_has_beast_speed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_space_id;
        break;
      }
      
      // optional int32 space_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_space_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &space_id_)));
          set_has_space_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_location;
        break;
      }
      
      // optional .ProtoCoord location = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_mount_shape;
        break;
      }
      
      // optional int32 mount_shape = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mount_shape:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mount_shape_)));
          set_has_mount_shape();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_weapon_shape;
        break;
      }
      
      // optional int32 weapon_shape = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_weapon_shape:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weapon_shape_)));
          set_has_weapon_shape();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_type;
        break;
      }
      
      // optional int32 type = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_beast_wing;
        break;
      }
      
      // optional int32 beast_wing = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_wing:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beast_wing_)));
          set_has_beast_wing();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400103::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->beast_id(), output);
  }
  
  // optional int64 master_id = 2;
  if (has_master_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->master_id(), output);
  }
  
  // optional int32 beast_sort = 3;
  if (has_beast_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->beast_sort(), output);
  }
  
  // optional string beast_name = 4;
  if (has_beast_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->beast_name().data(), this->beast_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->beast_name(), output);
  }
  
  // optional int32 toward = 5;
  if (has_toward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->toward(), output);
  }
  
  // optional int32 beast_speed = 6;
  if (has_beast_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->beast_speed(), output);
  }
  
  // optional int32 space_id = 7;
  if (has_space_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->space_id(), output);
  }
  
  // optional .ProtoCoord location = 8;
  if (has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->location(), output);
  }
  
  // optional int32 mount_shape = 9;
  if (has_mount_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->mount_shape(), output);
  }
  
  // optional int32 weapon_shape = 10;
  if (has_weapon_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->weapon_shape(), output);
  }
  
  // optional int32 type = 11;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->type(), output);
  }
  
  // optional int32 beast_wing = 12;
  if (has_beast_wing()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->beast_wing(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400103::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 beast_id = 1;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->beast_id(), target);
  }
  
  // optional int64 master_id = 2;
  if (has_master_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->master_id(), target);
  }
  
  // optional int32 beast_sort = 3;
  if (has_beast_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->beast_sort(), target);
  }
  
  // optional string beast_name = 4;
  if (has_beast_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->beast_name().data(), this->beast_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->beast_name(), target);
  }
  
  // optional int32 toward = 5;
  if (has_toward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->toward(), target);
  }
  
  // optional int32 beast_speed = 6;
  if (has_beast_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->beast_speed(), target);
  }
  
  // optional int32 space_id = 7;
  if (has_space_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->space_id(), target);
  }
  
  // optional .ProtoCoord location = 8;
  if (has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->location(), target);
  }
  
  // optional int32 mount_shape = 9;
  if (has_mount_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->mount_shape(), target);
  }
  
  // optional int32 weapon_shape = 10;
  if (has_weapon_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->weapon_shape(), target);
  }
  
  // optional int32 type = 11;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->type(), target);
  }
  
  // optional int32 beast_wing = 12;
  if (has_beast_wing()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->beast_wing(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400103::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 beast_id = 1;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
    // optional int64 master_id = 2;
    if (has_master_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->master_id());
    }
    
    // optional int32 beast_sort = 3;
    if (has_beast_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->beast_sort());
    }
    
    // optional string beast_name = 4;
    if (has_beast_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->beast_name());
    }
    
    // optional int32 toward = 5;
    if (has_toward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->toward());
    }
    
    // optional int32 beast_speed = 6;
    if (has_beast_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->beast_speed());
    }
    
    // optional int32 space_id = 7;
    if (has_space_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->space_id());
    }
    
    // optional .ProtoCoord location = 8;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->location());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 mount_shape = 9;
    if (has_mount_shape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mount_shape());
    }
    
    // optional int32 weapon_shape = 10;
    if (has_weapon_shape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weapon_shape());
    }
    
    // optional int32 type = 11;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 beast_wing = 12;
    if (has_beast_wing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->beast_wing());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400103::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400103* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400103*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400103::MergeFrom(const Proto80400103& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
    if (from.has_master_id()) {
      set_master_id(from.master_id());
    }
    if (from.has_beast_sort()) {
      set_beast_sort(from.beast_sort());
    }
    if (from.has_beast_name()) {
      set_beast_name(from.beast_name());
    }
    if (from.has_toward()) {
      set_toward(from.toward());
    }
    if (from.has_beast_speed()) {
      set_beast_speed(from.beast_speed());
    }
    if (from.has_space_id()) {
      set_space_id(from.space_id());
    }
    if (from.has_location()) {
      mutable_location()->::ProtoCoord::MergeFrom(from.location());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_mount_shape()) {
      set_mount_shape(from.mount_shape());
    }
    if (from.has_weapon_shape()) {
      set_weapon_shape(from.weapon_shape());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_beast_wing()) {
      set_beast_wing(from.beast_wing());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400103::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400103::CopyFrom(const Proto80400103& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400103::IsInitialized() const {
  
  return true;
}

void Proto80400103::Swap(Proto80400103* other) {
  if (other != this) {
    std::swap(beast_id_, other->beast_id_);
    std::swap(master_id_, other->master_id_);
    std::swap(beast_sort_, other->beast_sort_);
    std::swap(beast_name_, other->beast_name_);
    std::swap(toward_, other->toward_);
    std::swap(beast_speed_, other->beast_speed_);
    std::swap(space_id_, other->space_id_);
    std::swap(location_, other->location_);
    std::swap(mount_shape_, other->mount_shape_);
    std::swap(weapon_shape_, other->weapon_shape_);
    std::swap(type_, other->type_);
    std::swap(beast_wing_, other->beast_wing_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400103::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400103_descriptor_;
  metadata.reflection = Proto80400103_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400654::kPkgTypeFieldNumber;
const int Proto11400654::kPkgIndexFieldNumber;
const int Proto11400654::kAmountFieldNumber;
#endif  // !_MSC_VER

Proto11400654::Proto11400654()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400654::InitAsDefaultInstance() {
}

Proto11400654::Proto11400654(const Proto11400654& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400654::SharedCtor() {
  _cached_size_ = 0;
  pkg_type_ = 0;
  pkg_index_ = 0;
  amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400654::~Proto11400654() {
  SharedDtor();
}

void Proto11400654::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400654::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400654::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400654_descriptor_;
}

const Proto11400654& Proto11400654::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto11400654* Proto11400654::default_instance_ = NULL;

Proto11400654* Proto11400654::New() const {
  return new Proto11400654;
}

void Proto11400654::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pkg_type_ = 0;
    pkg_index_ = 0;
    amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400654::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pkg_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_type_)));
          set_has_pkg_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pkg_index;
        break;
      }
      
      // optional int32 pkg_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400654::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pkg_type = 1;
  if (has_pkg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pkg_type(), output);
  }
  
  // optional int32 pkg_index = 2;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pkg_index(), output);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400654::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pkg_type = 1;
  if (has_pkg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pkg_type(), target);
  }
  
  // optional int32 pkg_index = 2;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pkg_index(), target);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400654::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pkg_type = 1;
    if (has_pkg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_type());
    }
    
    // optional int32 pkg_index = 2;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
    // optional int32 amount = 3;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400654::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400654* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400654*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400654::MergeFrom(const Proto11400654& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pkg_type()) {
      set_pkg_type(from.pkg_type());
    }
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400654::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400654::CopyFrom(const Proto11400654& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400654::IsInitialized() const {
  
  return true;
}

void Proto11400654::Swap(Proto11400654* other) {
  if (other != this) {
    std::swap(pkg_type_, other->pkg_type_);
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(amount_, other->amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400654::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400654_descriptor_;
  metadata.reflection = Proto11400654_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400701::kSkillListFieldNumber;
const int Proto50400701::kSchemeFieldNumber;
const int Proto50400701::kSchemeSkillListFieldNumber;
const int Proto50400701::kRamaSkillFieldNumber;
const int Proto50400701::kRamaSkillListFieldNumber;
const int Proto50400701::kPartFieldNumber;
const int Proto50400701::kTransferSkillFieldNumber;
#endif  // !_MSC_VER

Proto50400701::Proto50400701()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400701::InitAsDefaultInstance() {
}

Proto50400701::Proto50400701(const Proto50400701& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400701::SharedCtor() {
  _cached_size_ = 0;
  scheme_ = 0;
  rama_skill_ = 0;
  part_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400701::~Proto50400701() {
  SharedDtor();
}

void Proto50400701::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400701::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400701::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400701_descriptor_;
}

const Proto50400701& Proto50400701::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto50400701* Proto50400701::default_instance_ = NULL;

Proto50400701* Proto50400701::New() const {
  return new Proto50400701;
}

void Proto50400701::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    scheme_ = 0;
    rama_skill_ = 0;
    part_ = 0;
  }
  skill_list_.Clear();
  scheme_skill_list_.Clear();
  rama_skill_list_.Clear();
  transfer_skill_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400701::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoSkill skill_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skill_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_skill_list;
        if (input->ExpectTag(16)) goto parse_scheme;
        break;
      }
      
      // optional int32 scheme = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scheme:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scheme_)));
          set_has_scheme();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_scheme_skill_list;
        break;
      }
      
      // repeated int32 scheme_skill_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scheme_skill_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_scheme_skill_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_scheme_skill_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_scheme_skill_list;
        if (input->ExpectTag(32)) goto parse_rama_skill;
        break;
      }
      
      // optional int32 rama_skill = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rama_skill:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rama_skill_)));
          set_has_rama_skill();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_rama_skill_list;
        break;
      }
      
      // repeated int32 rama_skill_list = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rama_skill_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_rama_skill_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_rama_skill_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_rama_skill_list;
        if (input->ExpectTag(48)) goto parse_part;
        break;
      }
      
      // optional int32 part = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_part:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &part_)));
          set_has_part();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_transfer_skill;
        break;
      }
      
      // repeated .ProtoSkill transfer_skill = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_transfer_skill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_transfer_skill()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_transfer_skill;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400701::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoSkill skill_list = 1;
  for (int i = 0; i < this->skill_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->skill_list(i), output);
  }
  
  // optional int32 scheme = 2;
  if (has_scheme()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->scheme(), output);
  }
  
  // repeated int32 scheme_skill_list = 3;
  for (int i = 0; i < this->scheme_skill_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->scheme_skill_list(i), output);
  }
  
  // optional int32 rama_skill = 4;
  if (has_rama_skill()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->rama_skill(), output);
  }
  
  // repeated int32 rama_skill_list = 5;
  for (int i = 0; i < this->rama_skill_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->rama_skill_list(i), output);
  }
  
  // optional int32 part = 6;
  if (has_part()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->part(), output);
  }
  
  // repeated .ProtoSkill transfer_skill = 7;
  for (int i = 0; i < this->transfer_skill_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->transfer_skill(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400701::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoSkill skill_list = 1;
  for (int i = 0; i < this->skill_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->skill_list(i), target);
  }
  
  // optional int32 scheme = 2;
  if (has_scheme()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->scheme(), target);
  }
  
  // repeated int32 scheme_skill_list = 3;
  for (int i = 0; i < this->scheme_skill_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->scheme_skill_list(i), target);
  }
  
  // optional int32 rama_skill = 4;
  if (has_rama_skill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->rama_skill(), target);
  }
  
  // repeated int32 rama_skill_list = 5;
  for (int i = 0; i < this->rama_skill_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->rama_skill_list(i), target);
  }
  
  // optional int32 part = 6;
  if (has_part()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->part(), target);
  }
  
  // repeated .ProtoSkill transfer_skill = 7;
  for (int i = 0; i < this->transfer_skill_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->transfer_skill(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400701::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 scheme = 2;
    if (has_scheme()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scheme());
    }
    
    // optional int32 rama_skill = 4;
    if (has_rama_skill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rama_skill());
    }
    
    // optional int32 part = 6;
    if (has_part()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->part());
    }
    
  }
  // repeated .ProtoSkill skill_list = 1;
  total_size += 1 * this->skill_list_size();
  for (int i = 0; i < this->skill_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skill_list(i));
  }
  
  // repeated int32 scheme_skill_list = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->scheme_skill_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->scheme_skill_list(i));
    }
    total_size += 1 * this->scheme_skill_list_size() + data_size;
  }
  
  // repeated int32 rama_skill_list = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->rama_skill_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->rama_skill_list(i));
    }
    total_size += 1 * this->rama_skill_list_size() + data_size;
  }
  
  // repeated .ProtoSkill transfer_skill = 7;
  total_size += 1 * this->transfer_skill_size();
  for (int i = 0; i < this->transfer_skill_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->transfer_skill(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400701::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400701* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400701*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400701::MergeFrom(const Proto50400701& from) {
  GOOGLE_CHECK_NE(&from, this);
  skill_list_.MergeFrom(from.skill_list_);
  scheme_skill_list_.MergeFrom(from.scheme_skill_list_);
  rama_skill_list_.MergeFrom(from.rama_skill_list_);
  transfer_skill_.MergeFrom(from.transfer_skill_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_scheme()) {
      set_scheme(from.scheme());
    }
    if (from.has_rama_skill()) {
      set_rama_skill(from.rama_skill());
    }
    if (from.has_part()) {
      set_part(from.part());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400701::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400701::CopyFrom(const Proto50400701& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400701::IsInitialized() const {
  
  return true;
}

void Proto50400701::Swap(Proto50400701* other) {
  if (other != this) {
    skill_list_.Swap(&other->skill_list_);
    std::swap(scheme_, other->scheme_);
    scheme_skill_list_.Swap(&other->scheme_skill_list_);
    std::swap(rama_skill_, other->rama_skill_);
    rama_skill_list_.Swap(&other->rama_skill_list_);
    std::swap(part_, other->part_);
    transfer_skill_.Swap(&other->transfer_skill_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400701::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400701_descriptor_;
  metadata.reflection = Proto50400701_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400702::kSchemeFieldNumber;
#endif  // !_MSC_VER

Proto10400702::Proto10400702()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400702::InitAsDefaultInstance() {
}

Proto10400702::Proto10400702(const Proto10400702& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400702::SharedCtor() {
  _cached_size_ = 0;
  scheme_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400702::~Proto10400702() {
  SharedDtor();
}

void Proto10400702::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400702::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400702::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400702_descriptor_;
}

const Proto10400702& Proto10400702::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10400702* Proto10400702::default_instance_ = NULL;

Proto10400702* Proto10400702::New() const {
  return new Proto10400702;
}

void Proto10400702::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scheme_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400702::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scheme = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scheme_)));
          set_has_scheme();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400702::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scheme = 1;
  if (has_scheme()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scheme(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400702::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scheme = 1;
  if (has_scheme()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scheme(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400702::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scheme = 1;
    if (has_scheme()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scheme());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400702::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400702* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400702*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400702::MergeFrom(const Proto10400702& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scheme()) {
      set_scheme(from.scheme());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400702::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400702::CopyFrom(const Proto10400702& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400702::IsInitialized() const {
  
  return true;
}

void Proto10400702::Swap(Proto10400702* other) {
  if (other != this) {
    std::swap(scheme_, other->scheme_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400702::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400702_descriptor_;
  metadata.reflection = Proto10400702_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400702::kSchemeFieldNumber;
const int Proto50400702::kSkillListFieldNumber;
#endif  // !_MSC_VER

Proto50400702::Proto50400702()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400702::InitAsDefaultInstance() {
}

Proto50400702::Proto50400702(const Proto50400702& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400702::SharedCtor() {
  _cached_size_ = 0;
  scheme_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400702::~Proto50400702() {
  SharedDtor();
}

void Proto50400702::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400702::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400702::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400702_descriptor_;
}

const Proto50400702& Proto50400702::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto50400702* Proto50400702::default_instance_ = NULL;

Proto50400702* Proto50400702::New() const {
  return new Proto50400702;
}

void Proto50400702::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scheme_ = 0;
  }
  skill_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400702::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scheme = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scheme_)));
          set_has_scheme();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_skill_list;
        break;
      }
      
      // repeated int32 skill_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_skill_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_skill_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_skill_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400702::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scheme = 1;
  if (has_scheme()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scheme(), output);
  }
  
  // repeated int32 skill_list = 2;
  for (int i = 0; i < this->skill_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->skill_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400702::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scheme = 1;
  if (has_scheme()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scheme(), target);
  }
  
  // repeated int32 skill_list = 2;
  for (int i = 0; i < this->skill_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->skill_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400702::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scheme = 1;
    if (has_scheme()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scheme());
    }
    
  }
  // repeated int32 skill_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->skill_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->skill_list(i));
    }
    total_size += 1 * this->skill_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400702::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400702* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400702*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400702::MergeFrom(const Proto50400702& from) {
  GOOGLE_CHECK_NE(&from, this);
  skill_list_.MergeFrom(from.skill_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scheme()) {
      set_scheme(from.scheme());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400702::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400702::CopyFrom(const Proto50400702& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400702::IsInitialized() const {
  
  return true;
}

void Proto50400702::Swap(Proto50400702* other) {
  if (other != this) {
    std::swap(scheme_, other->scheme_);
    skill_list_.Swap(&other->skill_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400702::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400702_descriptor_;
  metadata.reflection = Proto50400702_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400704::kSchemeFieldNumber;
const int Proto10400704::kIndexFieldNumber;
const int Proto10400704::kSkillIdFieldNumber;
#endif  // !_MSC_VER

Proto10400704::Proto10400704()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400704::InitAsDefaultInstance() {
}

Proto10400704::Proto10400704(const Proto10400704& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400704::SharedCtor() {
  _cached_size_ = 0;
  scheme_ = 0;
  index_ = 0;
  skill_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400704::~Proto10400704() {
  SharedDtor();
}

void Proto10400704::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400704::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400704::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400704_descriptor_;
}

const Proto10400704& Proto10400704::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10400704* Proto10400704::default_instance_ = NULL;

Proto10400704* Proto10400704::New() const {
  return new Proto10400704;
}

void Proto10400704::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scheme_ = 0;
    index_ = 0;
    skill_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400704::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scheme = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scheme_)));
          set_has_scheme();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }
      
      // optional int32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_skill_id;
        break;
      }
      
      // optional int32 skill_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400704::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scheme = 1;
  if (has_scheme()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scheme(), output);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }
  
  // optional int32 skill_id = 3;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skill_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400704::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scheme = 1;
  if (has_scheme()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scheme(), target);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }
  
  // optional int32 skill_id = 3;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skill_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400704::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scheme = 1;
    if (has_scheme()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scheme());
    }
    
    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 skill_id = 3;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400704::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400704* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400704*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400704::MergeFrom(const Proto10400704& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scheme()) {
      set_scheme(from.scheme());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400704::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400704::CopyFrom(const Proto10400704& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400704::IsInitialized() const {
  
  return true;
}

void Proto10400704::Swap(Proto10400704* other) {
  if (other != this) {
    std::swap(scheme_, other->scheme_);
    std::swap(index_, other->index_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400704::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400704_descriptor_;
  metadata.reflection = Proto10400704_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100601::kPageIndexFieldNumber;
const int Proto10100601::kShowJoinFieldNumber;
#endif  // !_MSC_VER

Proto10100601::Proto10100601()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100601::InitAsDefaultInstance() {
}

Proto10100601::Proto10100601(const Proto10100601& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100601::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  show_join_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100601::~Proto10100601() {
  SharedDtor();
}

void Proto10100601::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100601::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100601::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100601_descriptor_;
}

const Proto10100601& Proto10100601::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100601* Proto10100601::default_instance_ = NULL;

Proto10100601* Proto10100601::New() const {
  return new Proto10100601;
}

void Proto10100601::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
    show_join_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100601::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_show_join;
        break;
      }
      
      // optional int32 show_join = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_show_join:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &show_join_)));
          set_has_show_join();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100601::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  // optional int32 show_join = 2;
  if (has_show_join()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->show_join(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100601::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  // optional int32 show_join = 2;
  if (has_show_join()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->show_join(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100601::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
    // optional int32 show_join = 2;
    if (has_show_join()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->show_join());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100601::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100601* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100601*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100601::MergeFrom(const Proto10100601& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
    if (from.has_show_join()) {
      set_show_join(from.show_join());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100601::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100601::CopyFrom(const Proto10100601& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100601::IsInitialized() const {
  
  return true;
}

void Proto10100601::Swap(Proto10100601* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(show_join_, other->show_join_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100601::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100601_descriptor_;
  metadata.reflection = Proto10100601_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100602::kLeagueNameFieldNumber;
const int Proto10100602::kLeagueIntroFieldNumber;
const int Proto10100602::kCreateTypeFieldNumber;
#endif  // !_MSC_VER

Proto10100602::Proto10100602()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100602::InitAsDefaultInstance() {
}

Proto10100602::Proto10100602(const Proto10100602& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100602::SharedCtor() {
  _cached_size_ = 0;
  league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  league_intro_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  create_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100602::~Proto10100602() {
  SharedDtor();
}

void Proto10100602::SharedDtor() {
  if (league_name_ != &::google::protobuf::internal::kEmptyString) {
    delete league_name_;
  }
  if (league_intro_ != &::google::protobuf::internal::kEmptyString) {
    delete league_intro_;
  }
  if (this != default_instance_) {
  }
}

void Proto10100602::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100602::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100602_descriptor_;
}

const Proto10100602& Proto10100602::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100602* Proto10100602::default_instance_ = NULL;

Proto10100602* Proto10100602::New() const {
  return new Proto10100602;
}

void Proto10100602::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_league_name()) {
      if (league_name_ != &::google::protobuf::internal::kEmptyString) {
        league_name_->clear();
      }
    }
    if (has_league_intro()) {
      if (league_intro_ != &::google::protobuf::internal::kEmptyString) {
        league_intro_->clear();
      }
    }
    create_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100602::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string league_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_league_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->league_name().data(), this->league_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_league_intro;
        break;
      }
      
      // optional string league_intro = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_intro:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_league_intro()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->league_intro().data(), this->league_intro().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_create_type;
        break;
      }
      
      // optional int32 create_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_create_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &create_type_)));
          set_has_create_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100602::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string league_name = 1;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->league_name(), output);
  }
  
  // optional string league_intro = 2;
  if (has_league_intro()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_intro().data(), this->league_intro().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->league_intro(), output);
  }
  
  // optional int32 create_type = 3;
  if (has_create_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->create_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100602::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string league_name = 1;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->league_name(), target);
  }
  
  // optional string league_intro = 2;
  if (has_league_intro()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_intro().data(), this->league_intro().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->league_intro(), target);
  }
  
  // optional int32 create_type = 3;
  if (has_create_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->create_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100602::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string league_name = 1;
    if (has_league_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->league_name());
    }
    
    // optional string league_intro = 2;
    if (has_league_intro()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->league_intro());
    }
    
    // optional int32 create_type = 3;
    if (has_create_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->create_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100602::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100602* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100602*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100602::MergeFrom(const Proto10100602& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_name()) {
      set_league_name(from.league_name());
    }
    if (from.has_league_intro()) {
      set_league_intro(from.league_intro());
    }
    if (from.has_create_type()) {
      set_create_type(from.create_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100602::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100602::CopyFrom(const Proto10100602& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100602::IsInitialized() const {
  
  return true;
}

void Proto10100602::Swap(Proto10100602* other) {
  if (other != this) {
    std::swap(league_name_, other->league_name_);
    std::swap(league_intro_, other->league_intro_);
    std::swap(create_type_, other->create_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100602::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100602_descriptor_;
  metadata.reflection = Proto10100602_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100604::kApplySetFieldNumber;
#endif  // !_MSC_VER

Proto10100604::Proto10100604()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100604::InitAsDefaultInstance() {
}

Proto10100604::Proto10100604(const Proto10100604& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100604::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100604::~Proto10100604() {
  SharedDtor();
}

void Proto10100604::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100604::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100604::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100604_descriptor_;
}

const Proto10100604& Proto10100604::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100604* Proto10100604::default_instance_ = NULL;

Proto10100604* Proto10100604::New() const {
  return new Proto10100604;
}

void Proto10100604::Clear() {
  apply_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100604::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 apply_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_apply_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_apply_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_apply_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_apply_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100604::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 apply_set = 1;
  for (int i = 0; i < this->apply_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->apply_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100604::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 apply_set = 1;
  for (int i = 0; i < this->apply_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->apply_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100604::ByteSize() const {
  int total_size = 0;
  
  // repeated int64 apply_set = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->apply_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->apply_set(i));
    }
    total_size += 1 * this->apply_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100604::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100604* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100604*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100604::MergeFrom(const Proto10100604& from) {
  GOOGLE_CHECK_NE(&from, this);
  apply_set_.MergeFrom(from.apply_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100604::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100604::CopyFrom(const Proto10100604& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100604::IsInitialized() const {
  
  return true;
}

void Proto10100604::Swap(Proto10100604* other) {
  if (other != this) {
    apply_set_.Swap(&other->apply_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100604::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100604_descriptor_;
  metadata.reflection = Proto10100604_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100605::kLeagueIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100605::Proto10100605()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100605::InitAsDefaultInstance() {
}

Proto10100605::Proto10100605(const Proto10100605& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100605::SharedCtor() {
  _cached_size_ = 0;
  league_index_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100605::~Proto10100605() {
  SharedDtor();
}

void Proto10100605::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100605::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100605::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100605_descriptor_;
}

const Proto10100605& Proto10100605::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100605* Proto10100605::default_instance_ = NULL;

Proto10100605* Proto10100605::New() const {
  return new Proto10100605;
}

void Proto10100605::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_index_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100605::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 league_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_index_)));
          set_has_league_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100605::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->league_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100605::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->league_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100605::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 league_index = 1;
    if (has_league_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100605::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100605* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100605*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100605::MergeFrom(const Proto10100605& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_index()) {
      set_league_index(from.league_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100605::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100605::CopyFrom(const Proto10100605& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100605::IsInitialized() const {
  
  return true;
}

void Proto10100605::Swap(Proto10100605* other) {
  if (other != this) {
    std::swap(league_index_, other->league_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100605::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100605_descriptor_;
  metadata.reflection = Proto10100605_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100622::kLeagueFlagFieldNumber;
#endif  // !_MSC_VER

Proto50100622::Proto50100622()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100622::InitAsDefaultInstance() {
}

Proto50100622::Proto50100622(const Proto50100622& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100622::SharedCtor() {
  _cached_size_ = 0;
  league_flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100622::~Proto50100622() {
  SharedDtor();
}

void Proto50100622::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100622::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100622::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100622_descriptor_;
}

const Proto50100622& Proto50100622::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto50100622* Proto50100622::default_instance_ = NULL;

Proto50100622* Proto50100622::New() const {
  return new Proto50100622;
}

void Proto50100622::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_flag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100622::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 league_flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &league_flag_)));
          set_has_league_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100622::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 league_flag = 1;
  if (has_league_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->league_flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100622::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 league_flag = 1;
  if (has_league_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->league_flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100622::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 league_flag = 1;
    if (has_league_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->league_flag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100622::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100622* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100622*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100622::MergeFrom(const Proto50100622& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_flag()) {
      set_league_flag(from.league_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100622::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100622::CopyFrom(const Proto50100622& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100622::IsInitialized() const {
  
  return true;
}

void Proto50100622::Swap(Proto50100622* other) {
  if (other != this) {
    std::swap(league_flag_, other->league_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100622::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100622_descriptor_;
  metadata.reflection = Proto50100622_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100601::kPageIndexFieldNumber;
const int Proto50100601::kTotalPageFieldNumber;
const int Proto50100601::kLeagueSetFieldNumber;
#endif  // !_MSC_VER

Proto50100601::Proto50100601()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100601::InitAsDefaultInstance() {
}

Proto50100601::Proto50100601(const Proto50100601& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100601::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  total_page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100601::~Proto50100601() {
  SharedDtor();
}

void Proto50100601::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100601::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100601::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100601_descriptor_;
}

const Proto50100601& Proto50100601::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto50100601* Proto50100601::default_instance_ = NULL;

Proto50100601* Proto50100601::New() const {
  return new Proto50100601;
}

void Proto50100601::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
    total_page_ = 0;
  }
  league_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100601::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_league_set;
        break;
      }
      
      // repeated .ProtoLeagueItem league_set = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_league_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_league_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100601::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  // optional int32 total_page = 2;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_page(), output);
  }
  
  // repeated .ProtoLeagueItem league_set = 3;
  for (int i = 0; i < this->league_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->league_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100601::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  // optional int32 total_page = 2;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_page(), target);
  }
  
  // repeated .ProtoLeagueItem league_set = 3;
  for (int i = 0; i < this->league_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->league_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100601::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
    // optional int32 total_page = 2;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
  }
  // repeated .ProtoLeagueItem league_set = 3;
  total_size += 1 * this->league_set_size();
  for (int i = 0; i < this->league_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->league_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100601::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100601* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100601*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100601::MergeFrom(const Proto50100601& from) {
  GOOGLE_CHECK_NE(&from, this);
  league_set_.MergeFrom(from.league_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100601::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100601::CopyFrom(const Proto50100601& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100601::IsInitialized() const {
  
  return true;
}

void Proto50100601::Swap(Proto50100601* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(total_page_, other->total_page_);
    league_set_.Swap(&other->league_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100601::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100601_descriptor_;
  metadata.reflection = Proto50100601_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100604::kApplySetFieldNumber;
#endif  // !_MSC_VER

Proto50100604::Proto50100604()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100604::InitAsDefaultInstance() {
}

Proto50100604::Proto50100604(const Proto50100604& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100604::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100604::~Proto50100604() {
  SharedDtor();
}

void Proto50100604::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100604::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100604::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100604_descriptor_;
}

const Proto50100604& Proto50100604::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto50100604* Proto50100604::default_instance_ = NULL;

Proto50100604* Proto50100604::New() const {
  return new Proto50100604;
}

void Proto50100604::Clear() {
  apply_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100604::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 apply_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_apply_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_apply_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_apply_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_apply_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100604::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 apply_set = 1;
  for (int i = 0; i < this->apply_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->apply_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100604::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 apply_set = 1;
  for (int i = 0; i < this->apply_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->apply_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100604::ByteSize() const {
  int total_size = 0;
  
  // repeated int64 apply_set = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->apply_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->apply_set(i));
    }
    total_size += 1 * this->apply_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100604::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100604* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100604*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100604::MergeFrom(const Proto50100604& from) {
  GOOGLE_CHECK_NE(&from, this);
  apply_set_.MergeFrom(from.apply_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100604::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100604::CopyFrom(const Proto50100604& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100604::IsInitialized() const {
  
  return true;
}

void Proto50100604::Swap(Proto50100604* other) {
  if (other != this) {
    apply_set_.Swap(&other->apply_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100604::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100604_descriptor_;
  metadata.reflection = Proto50100604_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100606::kLeagueIndexFieldNumber;
const int Proto50100606::kLeagueNameFieldNumber;
const int Proto50100606::kLeagueCountFieldNumber;
const int Proto50100606::kLeagueRankFieldNumber;
const int Proto50100606::kLeaderIdFieldNumber;
const int Proto50100606::kLeaderNameFieldNumber;
const int Proto50100606::kLeagueLvlFieldNumber;
const int Proto50100606::kLeagueResourceFieldNumber;
const int Proto50100606::kTotalResourceFieldNumber;
const int Proto50100606::kLeagueIntroFieldNumber;
const int Proto50100606::kLeaguePosFieldNumber;
const int Proto50100606::kHaveSalaryFieldNumber;
const int Proto50100606::kLeftRecruitTimeFieldNumber;
const int Proto50100606::kIsLstoreFieldNumber;
const int Proto50100606::kAutoAcceptFieldNumber;
const int Proto50100606::kLeaderCareerFieldNumber;
const int Proto50100606::kLeaderSexFieldNumber;
const int Proto50100606::kLeaderWeaponsFieldNumber;
const int Proto50100606::kLeaderWingsFieldNumber;
const int Proto50100606::kFashionIdFieldNumber;
const int Proto50100606::kFashionColorFieldNumber;
const int Proto50100606::kMaxRoleFieldNumber;
#endif  // !_MSC_VER

Proto50100606::Proto50100606()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100606::InitAsDefaultInstance() {
}

Proto50100606::Proto50100606(const Proto50100606& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100606::SharedCtor() {
  _cached_size_ = 0;
  league_index_ = GOOGLE_LONGLONG(0);
  league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  league_count_ = 0;
  league_rank_ = 0;
  leader_id_ = GOOGLE_LONGLONG(0);
  leader_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  league_lvl_ = 0;
  league_resource_ = 0;
  total_resource_ = 0;
  league_intro_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  league_pos_ = 0;
  have_salary_ = 0;
  left_recruit_time_ = 0;
  is_lstore_ = 0;
  auto_accept_ = 0;
  leader_career_ = 0;
  leader_sex_ = 0;
  leader_weapons_ = 0;
  leader_wings_ = 0;
  fashion_id_ = 0;
  fashion_color_ = 0;
  max_role_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100606::~Proto50100606() {
  SharedDtor();
}

void Proto50100606::SharedDtor() {
  if (league_name_ != &::google::protobuf::internal::kEmptyString) {
    delete league_name_;
  }
  if (leader_name_ != &::google::protobuf::internal::kEmptyString) {
    delete leader_name_;
  }
  if (league_intro_ != &::google::protobuf::internal::kEmptyString) {
    delete league_intro_;
  }
  if (this != default_instance_) {
  }
}

void Proto50100606::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100606::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100606_descriptor_;
}

const Proto50100606& Proto50100606::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto50100606* Proto50100606::default_instance_ = NULL;

Proto50100606* Proto50100606::New() const {
  return new Proto50100606;
}

void Proto50100606::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_index_ = GOOGLE_LONGLONG(0);
    if (has_league_name()) {
      if (league_name_ != &::google::protobuf::internal::kEmptyString) {
        league_name_->clear();
      }
    }
    league_count_ = 0;
    league_rank_ = 0;
    leader_id_ = GOOGLE_LONGLONG(0);
    if (has_leader_name()) {
      if (leader_name_ != &::google::protobuf::internal::kEmptyString) {
        leader_name_->clear();
      }
    }
    league_lvl_ = 0;
    league_resource_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    total_resource_ = 0;
    if (has_league_intro()) {
      if (league_intro_ != &::google::protobuf::internal::kEmptyString) {
        league_intro_->clear();
      }
    }
    league_pos_ = 0;
    have_salary_ = 0;
    left_recruit_time_ = 0;
    is_lstore_ = 0;
    auto_accept_ = 0;
    leader_career_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    leader_sex_ = 0;
    leader_weapons_ = 0;
    leader_wings_ = 0;
    fashion_id_ = 0;
    fashion_color_ = 0;
    max_role_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100606::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 league_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_index_)));
          set_has_league_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_league_name;
        break;
      }
      
      // optional string league_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_league_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->league_name().data(), this->league_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_league_count;
        break;
      }
      
      // optional int32 league_count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &league_count_)));
          set_has_league_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_league_rank;
        break;
      }
      
      // optional int32 league_rank = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &league_rank_)));
          set_has_league_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_leader_id;
        break;
      }
      
      // optional int64 leader_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leader_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &leader_id_)));
          set_has_leader_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_leader_name;
        break;
      }
      
      // optional string leader_name = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_leader_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->leader_name().data(), this->leader_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_league_lvl;
        break;
      }
      
      // optional int32 league_lvl = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &league_lvl_)));
          set_has_league_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_league_resource;
        break;
      }
      
      // optional int32 league_resource = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_resource:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &league_resource_)));
          set_has_league_resource();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_total_resource;
        break;
      }
      
      // optional int32 total_resource = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_resource:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_resource_)));
          set_has_total_resource();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_league_intro;
        break;
      }
      
      // optional string league_intro = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_intro:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_league_intro()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->league_intro().data(), this->league_intro().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_league_pos;
        break;
      }
      
      // optional int32 league_pos = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &league_pos_)));
          set_has_league_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_have_salary;
        break;
      }
      
      // optional int32 have_salary = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_have_salary:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &have_salary_)));
          set_has_have_salary();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_left_recruit_time;
        break;
      }
      
      // optional int32 left_recruit_time = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_recruit_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_recruit_time_)));
          set_has_left_recruit_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_is_lstore;
        break;
      }
      
      // optional int32 is_lstore = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_lstore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_lstore_)));
          set_has_is_lstore();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_auto_accept;
        break;
      }
      
      // optional int32 auto_accept = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_accept:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_accept_)));
          set_has_auto_accept();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_leader_career;
        break;
      }
      
      // optional int32 leader_career = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leader_career:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leader_career_)));
          set_has_leader_career();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_leader_sex;
        break;
      }
      
      // optional int32 leader_sex = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leader_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leader_sex_)));
          set_has_leader_sex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_leader_weapons;
        break;
      }
      
      // optional int32 leader_weapons = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leader_weapons:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leader_weapons_)));
          set_has_leader_weapons();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_leader_wings;
        break;
      }
      
      // optional int32 leader_wings = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leader_wings:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &leader_wings_)));
          set_has_leader_wings();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_fashion_id;
        break;
      }
      
      // optional int32 fashion_id = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_fashion_color;
        break;
      }
      
      // optional int32 fashion_color = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_color_)));
          set_has_fashion_color();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_max_role;
        break;
      }
      
      // optional int32 max_role = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_role:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_role_)));
          set_has_max_role();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100606::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->league_index(), output);
  }
  
  // optional string league_name = 2;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->league_name(), output);
  }
  
  // optional int32 league_count = 3;
  if (has_league_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->league_count(), output);
  }
  
  // optional int32 league_rank = 4;
  if (has_league_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->league_rank(), output);
  }
  
  // optional int64 leader_id = 5;
  if (has_leader_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->leader_id(), output);
  }
  
  // optional string leader_name = 6;
  if (has_leader_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leader_name().data(), this->leader_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->leader_name(), output);
  }
  
  // optional int32 league_lvl = 7;
  if (has_league_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->league_lvl(), output);
  }
  
  // optional int32 league_resource = 8;
  if (has_league_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->league_resource(), output);
  }
  
  // optional int32 total_resource = 9;
  if (has_total_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->total_resource(), output);
  }
  
  // optional string league_intro = 10;
  if (has_league_intro()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_intro().data(), this->league_intro().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->league_intro(), output);
  }
  
  // optional int32 league_pos = 11;
  if (has_league_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->league_pos(), output);
  }
  
  // optional int32 have_salary = 12;
  if (has_have_salary()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->have_salary(), output);
  }
  
  // optional int32 left_recruit_time = 13;
  if (has_left_recruit_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->left_recruit_time(), output);
  }
  
  // optional int32 is_lstore = 14;
  if (has_is_lstore()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->is_lstore(), output);
  }
  
  // optional int32 auto_accept = 15;
  if (has_auto_accept()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->auto_accept(), output);
  }
  
  // optional int32 leader_career = 16;
  if (has_leader_career()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->leader_career(), output);
  }
  
  // optional int32 leader_sex = 17;
  if (has_leader_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->leader_sex(), output);
  }
  
  // optional int32 leader_weapons = 18;
  if (has_leader_weapons()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->leader_weapons(), output);
  }
  
  // optional int32 leader_wings = 19;
  if (has_leader_wings()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->leader_wings(), output);
  }
  
  // optional int32 fashion_id = 20;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->fashion_id(), output);
  }
  
  // optional int32 fashion_color = 21;
  if (has_fashion_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->fashion_color(), output);
  }
  
  // optional int32 max_role = 22;
  if (has_max_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->max_role(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100606::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->league_index(), target);
  }
  
  // optional string league_name = 2;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->league_name(), target);
  }
  
  // optional int32 league_count = 3;
  if (has_league_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->league_count(), target);
  }
  
  // optional int32 league_rank = 4;
  if (has_league_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->league_rank(), target);
  }
  
  // optional int64 leader_id = 5;
  if (has_leader_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->leader_id(), target);
  }
  
  // optional string leader_name = 6;
  if (has_leader_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leader_name().data(), this->leader_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->leader_name(), target);
  }
  
  // optional int32 league_lvl = 7;
  if (has_league_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->league_lvl(), target);
  }
  
  // optional int32 league_resource = 8;
  if (has_league_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->league_resource(), target);
  }
  
  // optional int32 total_resource = 9;
  if (has_total_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->total_resource(), target);
  }
  
  // optional string league_intro = 10;
  if (has_league_intro()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_intro().data(), this->league_intro().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->league_intro(), target);
  }
  
  // optional int32 league_pos = 11;
  if (has_league_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->league_pos(), target);
  }
  
  // optional int32 have_salary = 12;
  if (has_have_salary()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->have_salary(), target);
  }
  
  // optional int32 left_recruit_time = 13;
  if (has_left_recruit_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->left_recruit_time(), target);
  }
  
  // optional int32 is_lstore = 14;
  if (has_is_lstore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->is_lstore(), target);
  }
  
  // optional int32 auto_accept = 15;
  if (has_auto_accept()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->auto_accept(), target);
  }
  
  // optional int32 leader_career = 16;
  if (has_leader_career()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->leader_career(), target);
  }
  
  // optional int32 leader_sex = 17;
  if (has_leader_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->leader_sex(), target);
  }
  
  // optional int32 leader_weapons = 18;
  if (has_leader_weapons()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->leader_weapons(), target);
  }
  
  // optional int32 leader_wings = 19;
  if (has_leader_wings()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->leader_wings(), target);
  }
  
  // optional int32 fashion_id = 20;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->fashion_id(), target);
  }
  
  // optional int32 fashion_color = 21;
  if (has_fashion_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->fashion_color(), target);
  }
  
  // optional int32 max_role = 22;
  if (has_max_role()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->max_role(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100606::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 league_index = 1;
    if (has_league_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_index());
    }
    
    // optional string league_name = 2;
    if (has_league_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->league_name());
    }
    
    // optional int32 league_count = 3;
    if (has_league_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->league_count());
    }
    
    // optional int32 league_rank = 4;
    if (has_league_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->league_rank());
    }
    
    // optional int64 leader_id = 5;
    if (has_leader_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->leader_id());
    }
    
    // optional string leader_name = 6;
    if (has_leader_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->leader_name());
    }
    
    // optional int32 league_lvl = 7;
    if (has_league_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->league_lvl());
    }
    
    // optional int32 league_resource = 8;
    if (has_league_resource()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->league_resource());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 total_resource = 9;
    if (has_total_resource()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_resource());
    }
    
    // optional string league_intro = 10;
    if (has_league_intro()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->league_intro());
    }
    
    // optional int32 league_pos = 11;
    if (has_league_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->league_pos());
    }
    
    // optional int32 have_salary = 12;
    if (has_have_salary()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->have_salary());
    }
    
    // optional int32 left_recruit_time = 13;
    if (has_left_recruit_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_recruit_time());
    }
    
    // optional int32 is_lstore = 14;
    if (has_is_lstore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_lstore());
    }
    
    // optional int32 auto_accept = 15;
    if (has_auto_accept()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_accept());
    }
    
    // optional int32 leader_career = 16;
    if (has_leader_career()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leader_career());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 leader_sex = 17;
    if (has_leader_sex()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leader_sex());
    }
    
    // optional int32 leader_weapons = 18;
    if (has_leader_weapons()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leader_weapons());
    }
    
    // optional int32 leader_wings = 19;
    if (has_leader_wings()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->leader_wings());
    }
    
    // optional int32 fashion_id = 20;
    if (has_fashion_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
    // optional int32 fashion_color = 21;
    if (has_fashion_color()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_color());
    }
    
    // optional int32 max_role = 22;
    if (has_max_role()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_role());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100606::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100606* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100606*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100606::MergeFrom(const Proto50100606& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_index()) {
      set_league_index(from.league_index());
    }
    if (from.has_league_name()) {
      set_league_name(from.league_name());
    }
    if (from.has_league_count()) {
      set_league_count(from.league_count());
    }
    if (from.has_league_rank()) {
      set_league_rank(from.league_rank());
    }
    if (from.has_leader_id()) {
      set_leader_id(from.leader_id());
    }
    if (from.has_leader_name()) {
      set_leader_name(from.leader_name());
    }
    if (from.has_league_lvl()) {
      set_league_lvl(from.league_lvl());
    }
    if (from.has_league_resource()) {
      set_league_resource(from.league_resource());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_total_resource()) {
      set_total_resource(from.total_resource());
    }
    if (from.has_league_intro()) {
      set_league_intro(from.league_intro());
    }
    if (from.has_league_pos()) {
      set_league_pos(from.league_pos());
    }
    if (from.has_have_salary()) {
      set_have_salary(from.have_salary());
    }
    if (from.has_left_recruit_time()) {
      set_left_recruit_time(from.left_recruit_time());
    }
    if (from.has_is_lstore()) {
      set_is_lstore(from.is_lstore());
    }
    if (from.has_auto_accept()) {
      set_auto_accept(from.auto_accept());
    }
    if (from.has_leader_career()) {
      set_leader_career(from.leader_career());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_leader_sex()) {
      set_leader_sex(from.leader_sex());
    }
    if (from.has_leader_weapons()) {
      set_leader_weapons(from.leader_weapons());
    }
    if (from.has_leader_wings()) {
      set_leader_wings(from.leader_wings());
    }
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
    if (from.has_fashion_color()) {
      set_fashion_color(from.fashion_color());
    }
    if (from.has_max_role()) {
      set_max_role(from.max_role());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100606::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100606::CopyFrom(const Proto50100606& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100606::IsInitialized() const {
  
  return true;
}

void Proto50100606::Swap(Proto50100606* other) {
  if (other != this) {
    std::swap(league_index_, other->league_index_);
    std::swap(league_name_, other->league_name_);
    std::swap(league_count_, other->league_count_);
    std::swap(league_rank_, other->league_rank_);
    std::swap(leader_id_, other->leader_id_);
    std::swap(leader_name_, other->leader_name_);
    std::swap(league_lvl_, other->league_lvl_);
    std::swap(league_resource_, other->league_resource_);
    std::swap(total_resource_, other->total_resource_);
    std::swap(league_intro_, other->league_intro_);
    std::swap(league_pos_, other->league_pos_);
    std::swap(have_salary_, other->have_salary_);
    std::swap(left_recruit_time_, other->left_recruit_time_);
    std::swap(is_lstore_, other->is_lstore_);
    std::swap(auto_accept_, other->auto_accept_);
    std::swap(leader_career_, other->leader_career_);
    std::swap(leader_sex_, other->leader_sex_);
    std::swap(leader_weapons_, other->leader_weapons_);
    std::swap(leader_wings_, other->leader_wings_);
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(fashion_color_, other->fashion_color_);
    std::swap(max_role_, other->max_role_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100606::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100606_descriptor_;
  metadata.reflection = Proto50100606_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100624::kShopTypeFieldNumber;
#endif  // !_MSC_VER

Proto10100624::Proto10100624()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100624::InitAsDefaultInstance() {
}

Proto10100624::Proto10100624(const Proto10100624& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100624::SharedCtor() {
  _cached_size_ = 0;
  shop_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100624::~Proto10100624() {
  SharedDtor();
}

void Proto10100624::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100624::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100624::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100624_descriptor_;
}

const Proto10100624& Proto10100624::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100624* Proto10100624::default_instance_ = NULL;

Proto10100624* Proto10100624::New() const {
  return new Proto10100624;
}

void Proto10100624::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    shop_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100624::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 shop_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_type_)));
          set_has_shop_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100624::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 shop_type = 1;
  if (has_shop_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->shop_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100624::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 shop_type = 1;
  if (has_shop_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->shop_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100624::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 shop_type = 1;
    if (has_shop_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100624::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100624* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100624*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100624::MergeFrom(const Proto10100624& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shop_type()) {
      set_shop_type(from.shop_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100624::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100624::CopyFrom(const Proto10100624& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100624::IsInitialized() const {
  
  return true;
}

void Proto10100624::Swap(Proto10100624* other) {
  if (other != this) {
    std::swap(shop_type_, other->shop_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100624::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100624_descriptor_;
  metadata.reflection = Proto10100624_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100624::kShopTypeFieldNumber;
const int Proto50100624::kCurContriFieldNumber;
const int Proto50100624::kShopSetFieldNumber;
#endif  // !_MSC_VER

Proto50100624::Proto50100624()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100624::InitAsDefaultInstance() {
}

Proto50100624::Proto50100624(const Proto50100624& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100624::SharedCtor() {
  _cached_size_ = 0;
  shop_type_ = 0;
  cur_contri_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100624::~Proto50100624() {
  SharedDtor();
}

void Proto50100624::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100624::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100624::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100624_descriptor_;
}

const Proto50100624& Proto50100624::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto50100624* Proto50100624::default_instance_ = NULL;

Proto50100624* Proto50100624::New() const {
  return new Proto50100624;
}

void Proto50100624::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    shop_type_ = 0;
    cur_contri_ = 0;
  }
  shop_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100624::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 shop_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_type_)));
          set_has_shop_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cur_contri;
        break;
      }
      
      // optional int32 cur_contri = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_contri:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_contri_)));
          set_has_cur_contri();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_shop_set;
        break;
      }
      
      // repeated .ProtoLeagueShop shop_set = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shop_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shop_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_shop_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100624::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 shop_type = 1;
  if (has_shop_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->shop_type(), output);
  }
  
  // optional int32 cur_contri = 2;
  if (has_cur_contri()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cur_contri(), output);
  }
  
  // repeated .ProtoLeagueShop shop_set = 3;
  for (int i = 0; i < this->shop_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->shop_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100624::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 shop_type = 1;
  if (has_shop_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->shop_type(), target);
  }
  
  // optional int32 cur_contri = 2;
  if (has_cur_contri()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cur_contri(), target);
  }
  
  // repeated .ProtoLeagueShop shop_set = 3;
  for (int i = 0; i < this->shop_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->shop_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100624::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 shop_type = 1;
    if (has_shop_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop_type());
    }
    
    // optional int32 cur_contri = 2;
    if (has_cur_contri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_contri());
    }
    
  }
  // repeated .ProtoLeagueShop shop_set = 3;
  total_size += 1 * this->shop_set_size();
  for (int i = 0; i < this->shop_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->shop_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100624::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100624* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100624*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100624::MergeFrom(const Proto50100624& from) {
  GOOGLE_CHECK_NE(&from, this);
  shop_set_.MergeFrom(from.shop_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shop_type()) {
      set_shop_type(from.shop_type());
    }
    if (from.has_cur_contri()) {
      set_cur_contri(from.cur_contri());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100624::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100624::CopyFrom(const Proto50100624& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100624::IsInitialized() const {
  
  return true;
}

void Proto50100624::Swap(Proto50100624* other) {
  if (other != this) {
    std::swap(shop_type_, other->shop_type_);
    std::swap(cur_contri_, other->cur_contri_);
    shop_set_.Swap(&other->shop_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100624::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100624_descriptor_;
  metadata.reflection = Proto50100624_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100625::kShopTypeFieldNumber;
const int Proto10100625::kBuyItemFieldNumber;
const int Proto10100625::kBuyNumberFieldNumber;
#endif  // !_MSC_VER

Proto10100625::Proto10100625()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100625::InitAsDefaultInstance() {
}

Proto10100625::Proto10100625(const Proto10100625& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100625::SharedCtor() {
  _cached_size_ = 0;
  shop_type_ = 0;
  buy_item_ = 0;
  buy_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100625::~Proto10100625() {
  SharedDtor();
}

void Proto10100625::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100625::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100625::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100625_descriptor_;
}

const Proto10100625& Proto10100625::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100625* Proto10100625::default_instance_ = NULL;

Proto10100625* Proto10100625::New() const {
  return new Proto10100625;
}

void Proto10100625::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    shop_type_ = 0;
    buy_item_ = 0;
    buy_number_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100625::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 shop_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_type_)));
          set_has_shop_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_buy_item;
        break;
      }
      
      // optional int32 buy_item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_item_)));
          set_has_buy_item();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_buy_number;
        break;
      }
      
      // optional int32 buy_number = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_number_)));
          set_has_buy_number();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100625::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 shop_type = 1;
  if (has_shop_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->shop_type(), output);
  }
  
  // optional int32 buy_item = 2;
  if (has_buy_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->buy_item(), output);
  }
  
  // optional int32 buy_number = 3;
  if (has_buy_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->buy_number(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100625::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 shop_type = 1;
  if (has_shop_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->shop_type(), target);
  }
  
  // optional int32 buy_item = 2;
  if (has_buy_item()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->buy_item(), target);
  }
  
  // optional int32 buy_number = 3;
  if (has_buy_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->buy_number(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100625::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 shop_type = 1;
    if (has_shop_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop_type());
    }
    
    // optional int32 buy_item = 2;
    if (has_buy_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_item());
    }
    
    // optional int32 buy_number = 3;
    if (has_buy_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_number());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100625::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100625* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100625*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100625::MergeFrom(const Proto10100625& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shop_type()) {
      set_shop_type(from.shop_type());
    }
    if (from.has_buy_item()) {
      set_buy_item(from.buy_item());
    }
    if (from.has_buy_number()) {
      set_buy_number(from.buy_number());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100625::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100625::CopyFrom(const Proto10100625& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100625::IsInitialized() const {
  
  return true;
}

void Proto10100625::Swap(Proto10100625* other) {
  if (other != this) {
    std::swap(shop_type_, other->shop_type_);
    std::swap(buy_item_, other->buy_item_);
    std::swap(buy_number_, other->buy_number_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100625::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100625_descriptor_;
  metadata.reflection = Proto10100625_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100611::kLeagueIntroFieldNumber;
#endif  // !_MSC_VER

Proto10100611::Proto10100611()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100611::InitAsDefaultInstance() {
}

Proto10100611::Proto10100611(const Proto10100611& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100611::SharedCtor() {
  _cached_size_ = 0;
  league_intro_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100611::~Proto10100611() {
  SharedDtor();
}

void Proto10100611::SharedDtor() {
  if (league_intro_ != &::google::protobuf::internal::kEmptyString) {
    delete league_intro_;
  }
  if (this != default_instance_) {
  }
}

void Proto10100611::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100611::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100611_descriptor_;
}

const Proto10100611& Proto10100611::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100611* Proto10100611::default_instance_ = NULL;

Proto10100611* Proto10100611::New() const {
  return new Proto10100611;
}

void Proto10100611::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_league_intro()) {
      if (league_intro_ != &::google::protobuf::internal::kEmptyString) {
        league_intro_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100611::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string league_intro = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_league_intro()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->league_intro().data(), this->league_intro().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100611::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string league_intro = 1;
  if (has_league_intro()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_intro().data(), this->league_intro().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->league_intro(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100611::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string league_intro = 1;
  if (has_league_intro()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_intro().data(), this->league_intro().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->league_intro(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100611::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string league_intro = 1;
    if (has_league_intro()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->league_intro());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100611::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100611* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100611*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100611::MergeFrom(const Proto10100611& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_intro()) {
      set_league_intro(from.league_intro());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100611::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100611::CopyFrom(const Proto10100611& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100611::IsInitialized() const {
  
  return true;
}

void Proto10100611::Swap(Proto10100611* other) {
  if (other != this) {
    std::swap(league_intro_, other->league_intro_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100611::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100611_descriptor_;
  metadata.reflection = Proto10100611_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100621::kPageIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100621::Proto10100621()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100621::InitAsDefaultInstance() {
}

Proto10100621::Proto10100621(const Proto10100621& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100621::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100621::~Proto10100621() {
  SharedDtor();
}

void Proto10100621::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100621::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100621::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100621_descriptor_;
}

const Proto10100621& Proto10100621::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100621* Proto10100621::default_instance_ = NULL;

Proto10100621* Proto10100621::New() const {
  return new Proto10100621;
}

void Proto10100621::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100621::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100621::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100621::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100621::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100621::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100621* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100621*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100621::MergeFrom(const Proto10100621& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100621::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100621::CopyFrom(const Proto10100621& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100621::IsInitialized() const {
  
  return true;
}

void Proto10100621::Swap(Proto10100621* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100621::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100621_descriptor_;
  metadata.reflection = Proto10100621_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100626::kWandFieldNumber;
const int Proto50100626::kGoldFieldNumber;
const int Proto50100626::kMyContriFieldNumber;
const int Proto50100626::kSendFlagFieldNumber;
const int Proto50100626::kTodayRankFieldNumber;
const int Proto50100626::kTotalRankFieldNumber;
#endif  // !_MSC_VER

Proto50100626::Proto50100626()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100626::InitAsDefaultInstance() {
}

Proto50100626::Proto50100626(const Proto50100626& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100626::SharedCtor() {
  _cached_size_ = 0;
  wand_ = 0;
  gold_ = 0;
  my_contri_ = 0;
  send_flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100626::~Proto50100626() {
  SharedDtor();
}

void Proto50100626::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100626::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100626::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100626_descriptor_;
}

const Proto50100626& Proto50100626::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto50100626* Proto50100626::default_instance_ = NULL;

Proto50100626* Proto50100626::New() const {
  return new Proto50100626;
}

void Proto50100626::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    wand_ = 0;
    gold_ = 0;
    my_contri_ = 0;
    send_flag_ = 0;
  }
  today_rank_.Clear();
  total_rank_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100626::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 wand = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wand_)));
          set_has_wand();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gold;
        break;
      }
      
      // optional int32 gold = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_my_contri;
        break;
      }
      
      // optional int32 my_contri = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_my_contri:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &my_contri_)));
          set_has_my_contri();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_send_flag;
        break;
      }
      
      // optional int32 send_flag = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_send_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &send_flag_)));
          set_has_send_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_today_rank;
        break;
      }
      
      // repeated .ProtoDonateRank today_rank = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_today_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_today_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_today_rank;
        if (input->ExpectTag(50)) goto parse_total_rank;
        break;
      }
      
      // repeated .ProtoDonateRank total_rank = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_total_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_total_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_total_rank;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100626::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 wand = 1;
  if (has_wand()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wand(), output);
  }
  
  // optional int32 gold = 2;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gold(), output);
  }
  
  // optional int32 my_contri = 3;
  if (has_my_contri()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->my_contri(), output);
  }
  
  // optional int32 send_flag = 4;
  if (has_send_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->send_flag(), output);
  }
  
  // repeated .ProtoDonateRank today_rank = 5;
  for (int i = 0; i < this->today_rank_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->today_rank(i), output);
  }
  
  // repeated .ProtoDonateRank total_rank = 6;
  for (int i = 0; i < this->total_rank_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->total_rank(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100626::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 wand = 1;
  if (has_wand()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wand(), target);
  }
  
  // optional int32 gold = 2;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gold(), target);
  }
  
  // optional int32 my_contri = 3;
  if (has_my_contri()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->my_contri(), target);
  }
  
  // optional int32 send_flag = 4;
  if (has_send_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->send_flag(), target);
  }
  
  // repeated .ProtoDonateRank today_rank = 5;
  for (int i = 0; i < this->today_rank_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->today_rank(i), target);
  }
  
  // repeated .ProtoDonateRank total_rank = 6;
  for (int i = 0; i < this->total_rank_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->total_rank(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100626::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 wand = 1;
    if (has_wand()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wand());
    }
    
    // optional int32 gold = 2;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }
    
    // optional int32 my_contri = 3;
    if (has_my_contri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->my_contri());
    }
    
    // optional int32 send_flag = 4;
    if (has_send_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->send_flag());
    }
    
  }
  // repeated .ProtoDonateRank today_rank = 5;
  total_size += 1 * this->today_rank_size();
  for (int i = 0; i < this->today_rank_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->today_rank(i));
  }
  
  // repeated .ProtoDonateRank total_rank = 6;
  total_size += 1 * this->total_rank_size();
  for (int i = 0; i < this->total_rank_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->total_rank(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100626::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100626* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100626*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100626::MergeFrom(const Proto50100626& from) {
  GOOGLE_CHECK_NE(&from, this);
  today_rank_.MergeFrom(from.today_rank_);
  total_rank_.MergeFrom(from.total_rank_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wand()) {
      set_wand(from.wand());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_my_contri()) {
      set_my_contri(from.my_contri());
    }
    if (from.has_send_flag()) {
      set_send_flag(from.send_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100626::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100626::CopyFrom(const Proto50100626& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100626::IsInitialized() const {
  
  return true;
}

void Proto50100626::Swap(Proto50100626* other) {
  if (other != this) {
    std::swap(wand_, other->wand_);
    std::swap(gold_, other->gold_);
    std::swap(my_contri_, other->my_contri_);
    std::swap(send_flag_, other->send_flag_);
    today_rank_.Swap(&other->today_rank_);
    total_rank_.Swap(&other->total_rank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100626::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100626_descriptor_;
  metadata.reflection = Proto50100626_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100627::kCurContriFieldNumber;
const int Proto50100627::kSkillSetFieldNumber;
#endif  // !_MSC_VER

Proto50100627::Proto50100627()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100627::InitAsDefaultInstance() {
}

Proto50100627::Proto50100627(const Proto50100627& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100627::SharedCtor() {
  _cached_size_ = 0;
  cur_contri_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100627::~Proto50100627() {
  SharedDtor();
}

void Proto50100627::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100627::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100627::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100627_descriptor_;
}

const Proto50100627& Proto50100627::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto50100627* Proto50100627::default_instance_ = NULL;

Proto50100627* Proto50100627::New() const {
  return new Proto50100627;
}

void Proto50100627::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_contri_ = 0;
  }
  skill_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100627::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_contri = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_contri_)));
          set_has_cur_contri();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_skill_set;
        break;
      }
      
      // repeated .ProtoPairObj skill_set = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skill_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_skill_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100627::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_contri = 1;
  if (has_cur_contri()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_contri(), output);
  }
  
  // repeated .ProtoPairObj skill_set = 2;
  for (int i = 0; i < this->skill_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->skill_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100627::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_contri = 1;
  if (has_cur_contri()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_contri(), target);
  }
  
  // repeated .ProtoPairObj skill_set = 2;
  for (int i = 0; i < this->skill_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->skill_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100627::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_contri = 1;
    if (has_cur_contri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_contri());
    }
    
  }
  // repeated .ProtoPairObj skill_set = 2;
  total_size += 1 * this->skill_set_size();
  for (int i = 0; i < this->skill_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skill_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100627::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100627* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100627*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100627::MergeFrom(const Proto50100627& from) {
  GOOGLE_CHECK_NE(&from, this);
  skill_set_.MergeFrom(from.skill_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_contri()) {
      set_cur_contri(from.cur_contri());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100627::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100627::CopyFrom(const Proto50100627& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100627::IsInitialized() const {
  
  return true;
}

void Proto50100627::Swap(Proto50100627* other) {
  if (other != this) {
    std::swap(cur_contri_, other->cur_contri_);
    skill_set_.Swap(&other->skill_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100627::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100627_descriptor_;
  metadata.reflection = Proto50100627_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100628::kSkillIdFieldNumber;
#endif  // !_MSC_VER

Proto10100628::Proto10100628()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100628::InitAsDefaultInstance() {
}

Proto10100628::Proto10100628(const Proto10100628& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100628::SharedCtor() {
  _cached_size_ = 0;
  skill_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100628::~Proto10100628() {
  SharedDtor();
}

void Proto10100628::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100628::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100628::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100628_descriptor_;
}

const Proto10100628& Proto10100628::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100628* Proto10100628::default_instance_ = NULL;

Proto10100628* Proto10100628::New() const {
  return new Proto10100628;
}

void Proto10100628::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skill_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100628::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 skill_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100628::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skill_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100628::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skill_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100628::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 skill_id = 1;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100628::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100628* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100628*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100628::MergeFrom(const Proto10100628& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100628::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100628::CopyFrom(const Proto10100628& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100628::IsInitialized() const {
  
  return true;
}

void Proto10100628::Swap(Proto10100628* other) {
  if (other != this) {
    std::swap(skill_id_, other->skill_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100628::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100628_descriptor_;
  metadata.reflection = Proto10100628_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100628::kSkillIdFieldNumber;
const int Proto50100628::kSkillLevelFieldNumber;
const int Proto50100628::kCurContriFieldNumber;
#endif  // !_MSC_VER

Proto50100628::Proto50100628()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100628::InitAsDefaultInstance() {
}

Proto50100628::Proto50100628(const Proto50100628& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100628::SharedCtor() {
  _cached_size_ = 0;
  skill_id_ = 0;
  skill_level_ = 0;
  cur_contri_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100628::~Proto50100628() {
  SharedDtor();
}

void Proto50100628::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100628::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100628::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100628_descriptor_;
}

const Proto50100628& Proto50100628::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto50100628* Proto50100628::default_instance_ = NULL;

Proto50100628* Proto50100628::New() const {
  return new Proto50100628;
}

void Proto50100628::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skill_id_ = 0;
    skill_level_ = 0;
    cur_contri_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100628::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 skill_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_skill_level;
        break;
      }
      
      // optional int32 skill_level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_level_)));
          set_has_skill_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cur_contri;
        break;
      }
      
      // optional int32 cur_contri = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_contri:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_contri_)));
          set_has_cur_contri();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100628::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skill_id(), output);
  }
  
  // optional int32 skill_level = 2;
  if (has_skill_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skill_level(), output);
  }
  
  // optional int32 cur_contri = 3;
  if (has_cur_contri()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cur_contri(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100628::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skill_id(), target);
  }
  
  // optional int32 skill_level = 2;
  if (has_skill_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skill_level(), target);
  }
  
  // optional int32 cur_contri = 3;
  if (has_cur_contri()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cur_contri(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100628::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 skill_id = 1;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
    // optional int32 skill_level = 2;
    if (has_skill_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_level());
    }
    
    // optional int32 cur_contri = 3;
    if (has_cur_contri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_contri());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100628::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100628* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100628*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100628::MergeFrom(const Proto50100628& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_skill_level()) {
      set_skill_level(from.skill_level());
    }
    if (from.has_cur_contri()) {
      set_cur_contri(from.cur_contri());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100628::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100628::CopyFrom(const Proto50100628& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100628::IsInitialized() const {
  
  return true;
}

void Proto50100628::Swap(Proto50100628* other) {
  if (other != this) {
    std::swap(skill_id_, other->skill_id_);
    std::swap(skill_level_, other->skill_level_);
    std::swap(cur_contri_, other->cur_contri_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100628::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100628_descriptor_;
  metadata.reflection = Proto50100628_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100614::kPageIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100614::Proto10100614()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100614::InitAsDefaultInstance() {
}

Proto10100614::Proto10100614(const Proto10100614& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100614::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100614::~Proto10100614() {
  SharedDtor();
}

void Proto10100614::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100614::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100614::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100614_descriptor_;
}

const Proto10100614& Proto10100614::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100614* Proto10100614::default_instance_ = NULL;

Proto10100614* Proto10100614::New() const {
  return new Proto10100614;
}

void Proto10100614::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100614::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100614::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100614::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100614::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100614::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100614* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100614*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100614::MergeFrom(const Proto10100614& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100614::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100614::CopyFrom(const Proto10100614& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100614::IsInitialized() const {
  
  return true;
}

void Proto10100614::Swap(Proto10100614* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100614::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100614_descriptor_;
  metadata.reflection = Proto10100614_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100614::kMemberSetFieldNumber;
#endif  // !_MSC_VER

Proto50100614::Proto50100614()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100614::InitAsDefaultInstance() {
}

Proto50100614::Proto50100614(const Proto50100614& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100614::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100614::~Proto50100614() {
  SharedDtor();
}

void Proto50100614::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100614::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100614::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100614_descriptor_;
}

const Proto50100614& Proto50100614::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto50100614* Proto50100614::default_instance_ = NULL;

Proto50100614* Proto50100614::New() const {
  return new Proto50100614;
}

void Proto50100614::Clear() {
  member_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100614::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoLeagueMember member_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_member_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_member_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_member_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100614::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoLeagueMember member_set = 1;
  for (int i = 0; i < this->member_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->member_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100614::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoLeagueMember member_set = 1;
  for (int i = 0; i < this->member_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->member_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100614::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoLeagueMember member_set = 1;
  total_size += 1 * this->member_set_size();
  for (int i = 0; i < this->member_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->member_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100614::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100614* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100614*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100614::MergeFrom(const Proto50100614& from) {
  GOOGLE_CHECK_NE(&from, this);
  member_set_.MergeFrom(from.member_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100614::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100614::CopyFrom(const Proto50100614& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100614::IsInitialized() const {
  
  return true;
}

void Proto50100614::Swap(Proto50100614* other) {
  if (other != this) {
    member_set_.Swap(&other->member_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100614::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100614_descriptor_;
  metadata.reflection = Proto50100614_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100616::kRoleIndexFieldNumber;
const int Proto10100616::kTargetPosFieldNumber;
#endif  // !_MSC_VER

Proto10100616::Proto10100616()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100616::InitAsDefaultInstance() {
}

Proto10100616::Proto10100616(const Proto10100616& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100616::SharedCtor() {
  _cached_size_ = 0;
  role_index_ = GOOGLE_LONGLONG(0);
  target_pos_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100616::~Proto10100616() {
  SharedDtor();
}

void Proto10100616::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100616::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100616::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100616_descriptor_;
}

const Proto10100616& Proto10100616::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100616* Proto10100616::default_instance_ = NULL;

Proto10100616* Proto10100616::New() const {
  return new Proto10100616;
}

void Proto10100616::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_index_ = GOOGLE_LONGLONG(0);
    target_pos_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100616::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_index_)));
          set_has_role_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_target_pos;
        break;
      }
      
      // optional int32 target_pos = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_target_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_pos_)));
          set_has_target_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100616::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_index = 1;
  if (has_role_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_index(), output);
  }
  
  // optional int32 target_pos = 2;
  if (has_target_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->target_pos(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100616::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_index = 1;
  if (has_role_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_index(), target);
  }
  
  // optional int32 target_pos = 2;
  if (has_target_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->target_pos(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100616::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_index = 1;
    if (has_role_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_index());
    }
    
    // optional int32 target_pos = 2;
    if (has_target_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_pos());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100616::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100616* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100616*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100616::MergeFrom(const Proto10100616& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_index()) {
      set_role_index(from.role_index());
    }
    if (from.has_target_pos()) {
      set_target_pos(from.target_pos());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100616::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100616::CopyFrom(const Proto10100616& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100616::IsInitialized() const {
  
  return true;
}

void Proto10100616::Swap(Proto10100616* other) {
  if (other != this) {
    std::swap(role_index_, other->role_index_);
    std::swap(target_pos_, other->target_pos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100616::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100616_descriptor_;
  metadata.reflection = Proto10100616_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100617::kRoleIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100617::Proto10100617()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100617::InitAsDefaultInstance() {
}

Proto10100617::Proto10100617(const Proto10100617& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100617::SharedCtor() {
  _cached_size_ = 0;
  role_index_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100617::~Proto10100617() {
  SharedDtor();
}

void Proto10100617::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100617::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100617::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100617_descriptor_;
}

const Proto10100617& Proto10100617::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100617* Proto10100617::default_instance_ = NULL;

Proto10100617* Proto10100617::New() const {
  return new Proto10100617;
}

void Proto10100617::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_index_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100617::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_index_)));
          set_has_role_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100617::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_index = 1;
  if (has_role_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100617::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_index = 1;
  if (has_role_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100617::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_index = 1;
    if (has_role_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100617::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100617* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100617*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100617::MergeFrom(const Proto10100617& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_index()) {
      set_role_index(from.role_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100617::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100617::CopyFrom(const Proto10100617& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100617::IsInitialized() const {
  
  return true;
}

void Proto10100617::Swap(Proto10100617* other) {
  if (other != this) {
    std::swap(role_index_, other->role_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100617::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100617_descriptor_;
  metadata.reflection = Proto10100617_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100615::kPageIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100615::Proto10100615()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100615::InitAsDefaultInstance() {
}

Proto10100615::Proto10100615(const Proto10100615& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100615::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100615::~Proto10100615() {
  SharedDtor();
}

void Proto10100615::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100615::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100615::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100615_descriptor_;
}

const Proto10100615& Proto10100615::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100615* Proto10100615::default_instance_ = NULL;

Proto10100615* Proto10100615::New() const {
  return new Proto10100615;
}

void Proto10100615::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100615::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100615::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100615::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100615::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100615::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100615* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100615*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100615::MergeFrom(const Proto10100615& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100615::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100615::CopyFrom(const Proto10100615& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100615::IsInitialized() const {
  
  return true;
}

void Proto10100615::Swap(Proto10100615* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100615::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100615_descriptor_;
  metadata.reflection = Proto10100615_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100615::kApplySetFieldNumber;
const int Proto50100615::kPageIndexFieldNumber;
const int Proto50100615::kTotalPageFieldNumber;
const int Proto50100615::kAutoFlagFieldNumber;
const int Proto50100615::kAcceptForceFieldNumber;
#endif  // !_MSC_VER

Proto50100615::Proto50100615()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100615::InitAsDefaultInstance() {
}

Proto50100615::Proto50100615(const Proto50100615& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100615::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  total_page_ = 0;
  auto_flag_ = 0;
  accept_force_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100615::~Proto50100615() {
  SharedDtor();
}

void Proto50100615::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100615::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100615::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100615_descriptor_;
}

const Proto50100615& Proto50100615::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto50100615* Proto50100615::default_instance_ = NULL;

Proto50100615* Proto50100615::New() const {
  return new Proto50100615;
}

void Proto50100615::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    page_index_ = 0;
    total_page_ = 0;
    auto_flag_ = 0;
    accept_force_ = 0;
  }
  apply_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100615::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoLeagueApply apply_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_apply_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_apply_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_apply_set;
        if (input->ExpectTag(16)) goto parse_page_index;
        break;
      }
      
      // optional int32 page_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_auto_flag;
        break;
      }
      
      // optional int32 auto_flag = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_flag_)));
          set_has_auto_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_accept_force;
        break;
      }
      
      // optional int32 accept_force = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_accept_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &accept_force_)));
          set_has_accept_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100615::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoLeagueApply apply_set = 1;
  for (int i = 0; i < this->apply_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->apply_set(i), output);
  }
  
  // optional int32 page_index = 2;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_index(), output);
  }
  
  // optional int32 total_page = 3;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_page(), output);
  }
  
  // optional int32 auto_flag = 4;
  if (has_auto_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->auto_flag(), output);
  }
  
  // optional int32 accept_force = 5;
  if (has_accept_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->accept_force(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100615::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoLeagueApply apply_set = 1;
  for (int i = 0; i < this->apply_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->apply_set(i), target);
  }
  
  // optional int32 page_index = 2;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_index(), target);
  }
  
  // optional int32 total_page = 3;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_page(), target);
  }
  
  // optional int32 auto_flag = 4;
  if (has_auto_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->auto_flag(), target);
  }
  
  // optional int32 accept_force = 5;
  if (has_accept_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->accept_force(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100615::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 page_index = 2;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
    // optional int32 total_page = 3;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
    // optional int32 auto_flag = 4;
    if (has_auto_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_flag());
    }
    
    // optional int32 accept_force = 5;
    if (has_accept_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->accept_force());
    }
    
  }
  // repeated .ProtoLeagueApply apply_set = 1;
  total_size += 1 * this->apply_set_size();
  for (int i = 0; i < this->apply_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->apply_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100615::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100615* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100615*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100615::MergeFrom(const Proto50100615& from) {
  GOOGLE_CHECK_NE(&from, this);
  apply_set_.MergeFrom(from.apply_set_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
    if (from.has_auto_flag()) {
      set_auto_flag(from.auto_flag());
    }
    if (from.has_accept_force()) {
      set_accept_force(from.accept_force());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100615::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100615::CopyFrom(const Proto50100615& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100615::IsInitialized() const {
  
  return true;
}

void Proto50100615::Swap(Proto50100615* other) {
  if (other != this) {
    apply_set_.Swap(&other->apply_set_);
    std::swap(page_index_, other->page_index_);
    std::swap(total_page_, other->total_page_);
    std::swap(auto_flag_, other->auto_flag_);
    std::swap(accept_force_, other->accept_force_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100615::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100615_descriptor_;
  metadata.reflection = Proto50100615_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100619::kRoleSetFieldNumber;
#endif  // !_MSC_VER

Proto10100619::Proto10100619()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100619::InitAsDefaultInstance() {
}

Proto10100619::Proto10100619(const Proto10100619& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100619::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100619::~Proto10100619() {
  SharedDtor();
}

void Proto10100619::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100619::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100619::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100619_descriptor_;
}

const Proto10100619& Proto10100619::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100619* Proto10100619::default_instance_ = NULL;

Proto10100619* Proto10100619::New() const {
  return new Proto10100619;
}

void Proto10100619::Clear() {
  role_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100619::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 role_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_role_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_role_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100619::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 role_set = 1;
  for (int i = 0; i < this->role_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->role_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100619::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 role_set = 1;
  for (int i = 0; i < this->role_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->role_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100619::ByteSize() const {
  int total_size = 0;
  
  // repeated int64 role_set = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_set(i));
    }
    total_size += 1 * this->role_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100619::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100619* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100619*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100619::MergeFrom(const Proto10100619& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_set_.MergeFrom(from.role_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100619::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100619::CopyFrom(const Proto10100619& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100619::IsInitialized() const {
  
  return true;
}

void Proto10100619::Swap(Proto10100619* other) {
  if (other != this) {
    role_set_.Swap(&other->role_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100619::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100619_descriptor_;
  metadata.reflection = Proto10100619_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100620::kRoleSetFieldNumber;
#endif  // !_MSC_VER

Proto10100620::Proto10100620()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100620::InitAsDefaultInstance() {
}

Proto10100620::Proto10100620(const Proto10100620& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100620::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100620::~Proto10100620() {
  SharedDtor();
}

void Proto10100620::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100620::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100620::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100620_descriptor_;
}

const Proto10100620& Proto10100620::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100620* Proto10100620::default_instance_ = NULL;

Proto10100620* Proto10100620::New() const {
  return new Proto10100620;
}

void Proto10100620::Clear() {
  role_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100620::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 role_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_role_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_role_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100620::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 role_set = 1;
  for (int i = 0; i < this->role_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->role_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100620::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 role_set = 1;
  for (int i = 0; i < this->role_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->role_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100620::ByteSize() const {
  int total_size = 0;
  
  // repeated int64 role_set = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_set(i));
    }
    total_size += 1 * this->role_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100620::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100620* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100620*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100620::MergeFrom(const Proto10100620& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_set_.MergeFrom(from.role_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100620::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100620::CopyFrom(const Proto10100620& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100620::IsInitialized() const {
  
  return true;
}

void Proto10100620::Swap(Proto10100620* other) {
  if (other != this) {
    role_set_.Swap(&other->role_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100620::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100620_descriptor_;
  metadata.reflection = Proto10100620_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100613::kDonateTypeFieldNumber;
const int Proto10100613::kDonateNumberFieldNumber;
const int Proto10100613::kSendFlagFieldNumber;
#endif  // !_MSC_VER

Proto10100613::Proto10100613()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100613::InitAsDefaultInstance() {
}

Proto10100613::Proto10100613(const Proto10100613& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100613::SharedCtor() {
  _cached_size_ = 0;
  donate_type_ = 0;
  donate_number_ = 0;
  send_flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100613::~Proto10100613() {
  SharedDtor();
}

void Proto10100613::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100613::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100613::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100613_descriptor_;
}

const Proto10100613& Proto10100613::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100613* Proto10100613::default_instance_ = NULL;

Proto10100613* Proto10100613::New() const {
  return new Proto10100613;
}

void Proto10100613::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    donate_type_ = 0;
    donate_number_ = 0;
    send_flag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100613::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 donate_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &donate_type_)));
          set_has_donate_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_donate_number;
        break;
      }
      
      // optional int32 donate_number = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_donate_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &donate_number_)));
          set_has_donate_number();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_send_flag;
        break;
      }
      
      // optional int32 send_flag = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_send_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &send_flag_)));
          set_has_send_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100613::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 donate_type = 1;
  if (has_donate_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->donate_type(), output);
  }
  
  // optional int32 donate_number = 2;
  if (has_donate_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->donate_number(), output);
  }
  
  // optional int32 send_flag = 3;
  if (has_send_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->send_flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100613::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 donate_type = 1;
  if (has_donate_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->donate_type(), target);
  }
  
  // optional int32 donate_number = 2;
  if (has_donate_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->donate_number(), target);
  }
  
  // optional int32 send_flag = 3;
  if (has_send_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->send_flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100613::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 donate_type = 1;
    if (has_donate_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->donate_type());
    }
    
    // optional int32 donate_number = 2;
    if (has_donate_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->donate_number());
    }
    
    // optional int32 send_flag = 3;
    if (has_send_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->send_flag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100613::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100613* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100613*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100613::MergeFrom(const Proto10100613& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_donate_type()) {
      set_donate_type(from.donate_type());
    }
    if (from.has_donate_number()) {
      set_donate_number(from.donate_number());
    }
    if (from.has_send_flag()) {
      set_send_flag(from.send_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100613::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100613::CopyFrom(const Proto10100613& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100613::IsInitialized() const {
  
  return true;
}

void Proto10100613::Swap(Proto10100613* other) {
  if (other != this) {
    std::swap(donate_type_, other->donate_type_);
    std::swap(donate_number_, other->donate_number_);
    std::swap(send_flag_, other->send_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100613::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100613_descriptor_;
  metadata.reflection = Proto10100613_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100618::kRoleIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100618::Proto10100618()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100618::InitAsDefaultInstance() {
}

Proto10100618::Proto10100618(const Proto10100618& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100618::SharedCtor() {
  _cached_size_ = 0;
  role_index_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100618::~Proto10100618() {
  SharedDtor();
}

void Proto10100618::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100618::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100618::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100618_descriptor_;
}

const Proto10100618& Proto10100618::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100618* Proto10100618::default_instance_ = NULL;

Proto10100618* Proto10100618::New() const {
  return new Proto10100618;
}

void Proto10100618::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_index_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100618::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_index_)));
          set_has_role_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100618::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_index = 1;
  if (has_role_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100618::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_index = 1;
  if (has_role_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100618::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_index = 1;
    if (has_role_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100618::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100618* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100618*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100618::MergeFrom(const Proto10100618& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_index()) {
      set_role_index(from.role_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100618::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100618::CopyFrom(const Proto10100618& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100618::IsInitialized() const {
  
  return true;
}

void Proto10100618::Swap(Proto10100618* other) {
  if (other != this) {
    std::swap(role_index_, other->role_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100618::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100618_descriptor_;
  metadata.reflection = Proto10100618_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100621::kLogSetFieldNumber;
const int Proto50100621::kCurPageFieldNumber;
const int Proto50100621::kTotalPageFieldNumber;
#endif  // !_MSC_VER

Proto50100621::Proto50100621()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100621::InitAsDefaultInstance() {
}

Proto50100621::Proto50100621(const Proto50100621& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100621::SharedCtor() {
  _cached_size_ = 0;
  cur_page_ = 0;
  total_page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100621::~Proto50100621() {
  SharedDtor();
}

void Proto50100621::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100621::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100621::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100621_descriptor_;
}

const Proto50100621& Proto50100621::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto50100621* Proto50100621::default_instance_ = NULL;

Proto50100621* Proto50100621::New() const {
  return new Proto50100621;
}

void Proto50100621::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    cur_page_ = 0;
    total_page_ = 0;
  }
  log_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100621::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoLeagueLog log_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_log_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_log_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_log_set;
        if (input->ExpectTag(16)) goto parse_cur_page;
        break;
      }
      
      // optional int32 cur_page = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_page_)));
          set_has_cur_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100621::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoLeagueLog log_set = 1;
  for (int i = 0; i < this->log_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->log_set(i), output);
  }
  
  // optional int32 cur_page = 2;
  if (has_cur_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cur_page(), output);
  }
  
  // optional int32 total_page = 3;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100621::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoLeagueLog log_set = 1;
  for (int i = 0; i < this->log_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->log_set(i), target);
  }
  
  // optional int32 cur_page = 2;
  if (has_cur_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cur_page(), target);
  }
  
  // optional int32 total_page = 3;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100621::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 cur_page = 2;
    if (has_cur_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_page());
    }
    
    // optional int32 total_page = 3;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
  }
  // repeated .ProtoLeagueLog log_set = 1;
  total_size += 1 * this->log_set_size();
  for (int i = 0; i < this->log_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->log_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100621::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100621* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100621*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100621::MergeFrom(const Proto50100621& from) {
  GOOGLE_CHECK_NE(&from, this);
  log_set_.MergeFrom(from.log_set_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_cur_page()) {
      set_cur_page(from.cur_page());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100621::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100621::CopyFrom(const Proto50100621& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100621::IsInitialized() const {
  
  return true;
}

void Proto50100621::Swap(Proto50100621* other) {
  if (other != this) {
    log_set_.Swap(&other->log_set_);
    std::swap(cur_page_, other->cur_page_);
    std::swap(total_page_, other->total_page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100621::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100621_descriptor_;
  metadata.reflection = Proto50100621_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400803::kVipTypeFieldNumber;
const int Proto11400803::kRewardTypeFieldNumber;
#endif  // !_MSC_VER

Proto11400803::Proto11400803()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400803::InitAsDefaultInstance() {
}

Proto11400803::Proto11400803(const Proto11400803& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400803::SharedCtor() {
  _cached_size_ = 0;
  vip_type_ = 0;
  reward_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400803::~Proto11400803() {
  SharedDtor();
}

void Proto11400803::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400803::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400803::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400803_descriptor_;
}

const Proto11400803& Proto11400803::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto11400803* Proto11400803::default_instance_ = NULL;

Proto11400803* Proto11400803::New() const {
  return new Proto11400803;
}

void Proto11400803::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    vip_type_ = 0;
    reward_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400803::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 vip_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_type_)));
          set_has_vip_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_reward_type;
        break;
      }
      
      // optional int32 reward_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_type_)));
          set_has_reward_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400803::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 vip_type = 1;
  if (has_vip_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vip_type(), output);
  }
  
  // optional int32 reward_type = 2;
  if (has_reward_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reward_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400803::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 vip_type = 1;
  if (has_vip_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->vip_type(), target);
  }
  
  // optional int32 reward_type = 2;
  if (has_reward_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reward_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400803::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 vip_type = 1;
    if (has_vip_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_type());
    }
    
    // optional int32 reward_type = 2;
    if (has_reward_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400803::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400803* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400803*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400803::MergeFrom(const Proto11400803& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_vip_type()) {
      set_vip_type(from.vip_type());
    }
    if (from.has_reward_type()) {
      set_reward_type(from.reward_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400803::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400803::CopyFrom(const Proto11400803& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400803::IsInitialized() const {
  
  return true;
}

void Proto11400803::Swap(Proto11400803* other) {
  if (other != this) {
    std::swap(vip_type_, other->vip_type_);
    std::swap(reward_type_, other->reward_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400803::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400803_descriptor_;
  metadata.reflection = Proto11400803_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400804::kVipTypeFieldNumber;
const int Proto51400804::kIsHaveGiftFieldNumber;
const int Proto51400804::kFreeDivineResetFieldNumber;
const int Proto51400804::kFreeTransferFieldNumber;
const int Proto51400804::kFreeDivineGetFieldNumber;
const int Proto51400804::kFreeDgProCoolFieldNumber;
const int Proto51400804::kNeedGoldFieldNumber;
const int Proto51400804::kGoldFieldNumber;
const int Proto51400804::kItemListFieldNumber;
const int Proto51400804::kVipGiftFieldNumber;
const int Proto51400804::kVipWeeklyGiftFieldNumber;
const int Proto51400804::kFreeReliveTimesFieldNumber;
const int Proto51400804::kWeeklyRewardFieldNumber;
const int Proto51400804::kLevelRewardFieldNumber;
const int Proto51400804::kRewardListFieldNumber;
#endif  // !_MSC_VER

Proto51400804::Proto51400804()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400804::InitAsDefaultInstance() {
}

Proto51400804::Proto51400804(const Proto51400804& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400804::SharedCtor() {
  _cached_size_ = 0;
  vip_type_ = 0;
  ishavegift_ = 0;
  free_divine_reset_ = 0;
  free_transfer_ = 0;
  free_divine_get_ = 0;
  free_dg_pro_cool_ = 0;
  need_gold_ = 0;
  gold_ = 0;
  free_relive_times_ = 0;
  weekly_reward_ = 0;
  level_reward_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400804::~Proto51400804() {
  SharedDtor();
}

void Proto51400804::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400804::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400804::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400804_descriptor_;
}

const Proto51400804& Proto51400804::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto51400804* Proto51400804::default_instance_ = NULL;

Proto51400804* Proto51400804::New() const {
  return new Proto51400804;
}

void Proto51400804::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    vip_type_ = 0;
    ishavegift_ = 0;
    free_divine_reset_ = 0;
    free_transfer_ = 0;
    free_divine_get_ = 0;
    free_dg_pro_cool_ = 0;
    need_gold_ = 0;
    gold_ = 0;
  }
  if (_has_bits_[11 / 32] & (0xffu << (11 % 32))) {
    free_relive_times_ = 0;
    weekly_reward_ = 0;
    level_reward_ = 0;
  }
  item_list_.Clear();
  vip_gift_.Clear();
  vip_weekly_gift_.Clear();
  reward_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400804::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 vip_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_type_)));
          set_has_vip_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_isHaveGift;
        break;
      }
      
      // optional int32 isHaveGift = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isHaveGift:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ishavegift_)));
          set_has_ishavegift();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_free_divine_reset;
        break;
      }
      
      // optional int32 free_divine_reset = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_free_divine_reset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &free_divine_reset_)));
          set_has_free_divine_reset();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_free_transfer;
        break;
      }
      
      // optional int32 free_transfer = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_free_transfer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &free_transfer_)));
          set_has_free_transfer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_free_divine_get;
        break;
      }
      
      // optional int32 free_divine_get = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_free_divine_get:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &free_divine_get_)));
          set_has_free_divine_get();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_free_dg_pro_cool;
        break;
      }
      
      // optional int32 free_dg_pro_cool = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_free_dg_pro_cool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &free_dg_pro_cool_)));
          set_has_free_dg_pro_cool();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_need_gold;
        break;
      }
      
      // optional int32 need_gold = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_need_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_gold_)));
          set_has_need_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_gold;
        break;
      }
      
      // optional int32 gold = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoItem item_list = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_item_list;
        if (input->ExpectTag(82)) goto parse_vip_gift;
        break;
      }
      
      // repeated .ProtoVipGift vip_gift = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_vip_gift:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_vip_gift()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_vip_gift;
        if (input->ExpectTag(90)) goto parse_vip_weekly_gift;
        break;
      }
      
      // repeated .ProtoVipGift vip_weekly_gift = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_vip_weekly_gift:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_vip_weekly_gift()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_vip_weekly_gift;
        if (input->ExpectTag(96)) goto parse_free_relive_times;
        break;
      }
      
      // optional int32 free_relive_times = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_free_relive_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &free_relive_times_)));
          set_has_free_relive_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_weekly_reward;
        break;
      }
      
      // optional int32 weekly_reward = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_weekly_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weekly_reward_)));
          set_has_weekly_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_level_reward;
        break;
      }
      
      // optional int32 level_reward = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_reward_)));
          set_has_level_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_reward_list;
        break;
      }
      
      // repeated int32 reward_list = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 120, input, this->mutable_reward_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_reward_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_reward_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400804::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 vip_type = 1;
  if (has_vip_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->vip_type(), output);
  }
  
  // optional int32 isHaveGift = 2;
  if (has_ishavegift()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ishavegift(), output);
  }
  
  // optional int32 free_divine_reset = 3;
  if (has_free_divine_reset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->free_divine_reset(), output);
  }
  
  // optional int32 free_transfer = 4;
  if (has_free_transfer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->free_transfer(), output);
  }
  
  // optional int32 free_divine_get = 5;
  if (has_free_divine_get()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->free_divine_get(), output);
  }
  
  // optional int32 free_dg_pro_cool = 6;
  if (has_free_dg_pro_cool()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->free_dg_pro_cool(), output);
  }
  
  // optional int32 need_gold = 7;
  if (has_need_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->need_gold(), output);
  }
  
  // optional int32 gold = 8;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->gold(), output);
  }
  
  // repeated .ProtoItem item_list = 9;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->item_list(i), output);
  }
  
  // repeated .ProtoVipGift vip_gift = 10;
  for (int i = 0; i < this->vip_gift_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->vip_gift(i), output);
  }
  
  // repeated .ProtoVipGift vip_weekly_gift = 11;
  for (int i = 0; i < this->vip_weekly_gift_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->vip_weekly_gift(i), output);
  }
  
  // optional int32 free_relive_times = 12;
  if (has_free_relive_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->free_relive_times(), output);
  }
  
  // optional int32 weekly_reward = 13;
  if (has_weekly_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->weekly_reward(), output);
  }
  
  // optional int32 level_reward = 14;
  if (has_level_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->level_reward(), output);
  }
  
  // repeated int32 reward_list = 15;
  for (int i = 0; i < this->reward_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      15, this->reward_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400804::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 vip_type = 1;
  if (has_vip_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->vip_type(), target);
  }
  
  // optional int32 isHaveGift = 2;
  if (has_ishavegift()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ishavegift(), target);
  }
  
  // optional int32 free_divine_reset = 3;
  if (has_free_divine_reset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->free_divine_reset(), target);
  }
  
  // optional int32 free_transfer = 4;
  if (has_free_transfer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->free_transfer(), target);
  }
  
  // optional int32 free_divine_get = 5;
  if (has_free_divine_get()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->free_divine_get(), target);
  }
  
  // optional int32 free_dg_pro_cool = 6;
  if (has_free_dg_pro_cool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->free_dg_pro_cool(), target);
  }
  
  // optional int32 need_gold = 7;
  if (has_need_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->need_gold(), target);
  }
  
  // optional int32 gold = 8;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->gold(), target);
  }
  
  // repeated .ProtoItem item_list = 9;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->item_list(i), target);
  }
  
  // repeated .ProtoVipGift vip_gift = 10;
  for (int i = 0; i < this->vip_gift_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->vip_gift(i), target);
  }
  
  // repeated .ProtoVipGift vip_weekly_gift = 11;
  for (int i = 0; i < this->vip_weekly_gift_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->vip_weekly_gift(i), target);
  }
  
  // optional int32 free_relive_times = 12;
  if (has_free_relive_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->free_relive_times(), target);
  }
  
  // optional int32 weekly_reward = 13;
  if (has_weekly_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->weekly_reward(), target);
  }
  
  // optional int32 level_reward = 14;
  if (has_level_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->level_reward(), target);
  }
  
  // repeated int32 reward_list = 15;
  for (int i = 0; i < this->reward_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(15, this->reward_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400804::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 vip_type = 1;
    if (has_vip_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_type());
    }
    
    // optional int32 isHaveGift = 2;
    if (has_ishavegift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ishavegift());
    }
    
    // optional int32 free_divine_reset = 3;
    if (has_free_divine_reset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->free_divine_reset());
    }
    
    // optional int32 free_transfer = 4;
    if (has_free_transfer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->free_transfer());
    }
    
    // optional int32 free_divine_get = 5;
    if (has_free_divine_get()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->free_divine_get());
    }
    
    // optional int32 free_dg_pro_cool = 6;
    if (has_free_dg_pro_cool()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->free_dg_pro_cool());
    }
    
    // optional int32 need_gold = 7;
    if (has_need_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->need_gold());
    }
    
    // optional int32 gold = 8;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }
    
  }
  if (_has_bits_[11 / 32] & (0xffu << (11 % 32))) {
    // optional int32 free_relive_times = 12;
    if (has_free_relive_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->free_relive_times());
    }
    
    // optional int32 weekly_reward = 13;
    if (has_weekly_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weekly_reward());
    }
    
    // optional int32 level_reward = 14;
    if (has_level_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level_reward());
    }
    
  }
  // repeated .ProtoItem item_list = 9;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  // repeated .ProtoVipGift vip_gift = 10;
  total_size += 1 * this->vip_gift_size();
  for (int i = 0; i < this->vip_gift_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vip_gift(i));
  }
  
  // repeated .ProtoVipGift vip_weekly_gift = 11;
  total_size += 1 * this->vip_weekly_gift_size();
  for (int i = 0; i < this->vip_weekly_gift_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vip_weekly_gift(i));
  }
  
  // repeated int32 reward_list = 15;
  {
    int data_size = 0;
    for (int i = 0; i < this->reward_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->reward_list(i));
    }
    total_size += 1 * this->reward_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400804::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400804* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400804*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400804::MergeFrom(const Proto51400804& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  vip_gift_.MergeFrom(from.vip_gift_);
  vip_weekly_gift_.MergeFrom(from.vip_weekly_gift_);
  reward_list_.MergeFrom(from.reward_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_vip_type()) {
      set_vip_type(from.vip_type());
    }
    if (from.has_ishavegift()) {
      set_ishavegift(from.ishavegift());
    }
    if (from.has_free_divine_reset()) {
      set_free_divine_reset(from.free_divine_reset());
    }
    if (from.has_free_transfer()) {
      set_free_transfer(from.free_transfer());
    }
    if (from.has_free_divine_get()) {
      set_free_divine_get(from.free_divine_get());
    }
    if (from.has_free_dg_pro_cool()) {
      set_free_dg_pro_cool(from.free_dg_pro_cool());
    }
    if (from.has_need_gold()) {
      set_need_gold(from.need_gold());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
  }
  if (from._has_bits_[11 / 32] & (0xffu << (11 % 32))) {
    if (from.has_free_relive_times()) {
      set_free_relive_times(from.free_relive_times());
    }
    if (from.has_weekly_reward()) {
      set_weekly_reward(from.weekly_reward());
    }
    if (from.has_level_reward()) {
      set_level_reward(from.level_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400804::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400804::CopyFrom(const Proto51400804& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400804::IsInitialized() const {
  
  return true;
}

void Proto51400804::Swap(Proto51400804* other) {
  if (other != this) {
    std::swap(vip_type_, other->vip_type_);
    std::swap(ishavegift_, other->ishavegift_);
    std::swap(free_divine_reset_, other->free_divine_reset_);
    std::swap(free_transfer_, other->free_transfer_);
    std::swap(free_divine_get_, other->free_divine_get_);
    std::swap(free_dg_pro_cool_, other->free_dg_pro_cool_);
    std::swap(need_gold_, other->need_gold_);
    std::swap(gold_, other->gold_);
    item_list_.Swap(&other->item_list_);
    vip_gift_.Swap(&other->vip_gift_);
    vip_weekly_gift_.Swap(&other->vip_weekly_gift_);
    std::swap(free_relive_times_, other->free_relive_times_);
    std::swap(weekly_reward_, other->weekly_reward_);
    std::swap(level_reward_, other->level_reward_);
    reward_list_.Swap(&other->reward_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400804::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400804_descriptor_;
  metadata.reflection = Proto51400804_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400803::kFlagFieldNumber;
const int Proto51400803::kRewardTypeFieldNumber;
const int Proto51400803::kVipTypeFieldNumber;
const int Proto51400803::kRewardListFieldNumber;
const int Proto51400803::kWeeklyListFieldNumber;
const int Proto51400803::kWeeklyRewardFieldNumber;
#endif  // !_MSC_VER

Proto51400803::Proto51400803()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400803::InitAsDefaultInstance() {
}

Proto51400803::Proto51400803(const Proto51400803& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400803::SharedCtor() {
  _cached_size_ = 0;
  flag_ = 0;
  reward_type_ = 0;
  vip_type_ = 0;
  weekly_reward_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400803::~Proto51400803() {
  SharedDtor();
}

void Proto51400803::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400803::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400803::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400803_descriptor_;
}

const Proto51400803& Proto51400803::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto51400803* Proto51400803::default_instance_ = NULL;

Proto51400803* Proto51400803::New() const {
  return new Proto51400803;
}

void Proto51400803::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    flag_ = 0;
    reward_type_ = 0;
    vip_type_ = 0;
    weekly_reward_ = 0;
  }
  reward_list_.Clear();
  weekly_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400803::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_reward_type;
        break;
      }
      
      // optional int32 reward_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_type_)));
          set_has_reward_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_vip_type;
        break;
      }
      
      // optional int32 vip_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_type_)));
          set_has_vip_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_reward_list;
        break;
      }
      
      // repeated .ProtoVipGift reward_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_reward_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_reward_list;
        if (input->ExpectTag(42)) goto parse_weekly_list;
        break;
      }
      
      // repeated .ProtoVipGift weekly_list = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_weekly_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_weekly_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_weekly_list;
        if (input->ExpectTag(48)) goto parse_weekly_reward;
        break;
      }
      
      // optional int32 weekly_reward = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_weekly_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weekly_reward_)));
          set_has_weekly_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400803::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 flag = 1;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag(), output);
  }
  
  // optional int32 reward_type = 2;
  if (has_reward_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reward_type(), output);
  }
  
  // optional int32 vip_type = 3;
  if (has_vip_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->vip_type(), output);
  }
  
  // repeated .ProtoVipGift reward_list = 4;
  for (int i = 0; i < this->reward_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->reward_list(i), output);
  }
  
  // repeated .ProtoVipGift weekly_list = 5;
  for (int i = 0; i < this->weekly_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->weekly_list(i), output);
  }
  
  // optional int32 weekly_reward = 6;
  if (has_weekly_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->weekly_reward(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400803::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 flag = 1;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag(), target);
  }
  
  // optional int32 reward_type = 2;
  if (has_reward_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reward_type(), target);
  }
  
  // optional int32 vip_type = 3;
  if (has_vip_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->vip_type(), target);
  }
  
  // repeated .ProtoVipGift reward_list = 4;
  for (int i = 0; i < this->reward_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->reward_list(i), target);
  }
  
  // repeated .ProtoVipGift weekly_list = 5;
  for (int i = 0; i < this->weekly_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->weekly_list(i), target);
  }
  
  // optional int32 weekly_reward = 6;
  if (has_weekly_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->weekly_reward(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400803::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 flag = 1;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }
    
    // optional int32 reward_type = 2;
    if (has_reward_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_type());
    }
    
    // optional int32 vip_type = 3;
    if (has_vip_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_type());
    }
    
    // optional int32 weekly_reward = 6;
    if (has_weekly_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weekly_reward());
    }
    
  }
  // repeated .ProtoVipGift reward_list = 4;
  total_size += 1 * this->reward_list_size();
  for (int i = 0; i < this->reward_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_list(i));
  }
  
  // repeated .ProtoVipGift weekly_list = 5;
  total_size += 1 * this->weekly_list_size();
  for (int i = 0; i < this->weekly_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->weekly_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400803::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400803* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400803*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400803::MergeFrom(const Proto51400803& from) {
  GOOGLE_CHECK_NE(&from, this);
  reward_list_.MergeFrom(from.reward_list_);
  weekly_list_.MergeFrom(from.weekly_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flag()) {
      set_flag(from.flag());
    }
    if (from.has_reward_type()) {
      set_reward_type(from.reward_type());
    }
    if (from.has_vip_type()) {
      set_vip_type(from.vip_type());
    }
    if (from.has_weekly_reward()) {
      set_weekly_reward(from.weekly_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400803::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400803::CopyFrom(const Proto51400803& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400803::IsInitialized() const {
  
  return true;
}

void Proto51400803::Swap(Proto51400803* other) {
  if (other != this) {
    std::swap(flag_, other->flag_);
    std::swap(reward_type_, other->reward_type_);
    std::swap(vip_type_, other->vip_type_);
    reward_list_.Swap(&other->reward_list_);
    weekly_list_.Swap(&other->weekly_list_);
    std::swap(weekly_reward_, other->weekly_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400803::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400803_descriptor_;
  metadata.reflection = Proto51400803_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100021::kMallTypeFieldNumber;
#endif  // !_MSC_VER

Proto10100021::Proto10100021()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100021::InitAsDefaultInstance() {
}

Proto10100021::Proto10100021(const Proto10100021& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100021::SharedCtor() {
  _cached_size_ = 0;
  mall_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100021::~Proto10100021() {
  SharedDtor();
}

void Proto10100021::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100021::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100021::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100021_descriptor_;
}

const Proto10100021& Proto10100021::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100021* Proto10100021::default_instance_ = NULL;

Proto10100021* Proto10100021::New() const {
  return new Proto10100021;
}

void Proto10100021::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    mall_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100021::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 mall_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mall_type_)));
          set_has_mall_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100021::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 mall_type = 1;
  if (has_mall_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->mall_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100021::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 mall_type = 1;
  if (has_mall_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->mall_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100021::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 mall_type = 1;
    if (has_mall_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mall_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100021::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100021* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100021*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100021::MergeFrom(const Proto10100021& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_mall_type()) {
      set_mall_type(from.mall_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100021::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100021::CopyFrom(const Proto10100021& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100021::IsInitialized() const {
  
  return true;
}

void Proto10100021::Swap(Proto10100021* other) {
  if (other != this) {
    std::swap(mall_type_, other->mall_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100021::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100021_descriptor_;
  metadata.reflection = Proto10100021_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100021::kMallListFieldNumber;
const int Proto50100021::kActivityActiveFieldNumber;
const int Proto50100021::kLeftTimeFieldNumber;
const int Proto50100021::kVipLvlFieldNumber;
#endif  // !_MSC_VER

Proto50100021::Proto50100021()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100021::InitAsDefaultInstance() {
}

Proto50100021::Proto50100021(const Proto50100021& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100021::SharedCtor() {
  _cached_size_ = 0;
  activity_active_ = 0;
  left_time_ = 0;
  vip_lvl_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100021::~Proto50100021() {
  SharedDtor();
}

void Proto50100021::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100021::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100021::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100021_descriptor_;
}

const Proto50100021& Proto50100021::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto50100021* Proto50100021::default_instance_ = NULL;

Proto50100021* Proto50100021::New() const {
  return new Proto50100021;
}

void Proto50100021::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    activity_active_ = 0;
    left_time_ = 0;
    vip_lvl_ = 0;
  }
  mall_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100021::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoMallList mall_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mall_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mall_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_mall_list;
        if (input->ExpectTag(16)) goto parse_activity_active;
        break;
      }
      
      // optional int32 activity_active = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_active:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_active_)));
          set_has_activity_active();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_vip_lvl;
        break;
      }
      
      // optional int32 vip_lvl = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_lvl_)));
          set_has_vip_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100021::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoMallList mall_list = 1;
  for (int i = 0; i < this->mall_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->mall_list(i), output);
  }
  
  // optional int32 activity_active = 2;
  if (has_activity_active()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activity_active(), output);
  }
  
  // optional int32 left_time = 3;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_time(), output);
  }
  
  // optional int32 vip_lvl = 4;
  if (has_vip_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->vip_lvl(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100021::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoMallList mall_list = 1;
  for (int i = 0; i < this->mall_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->mall_list(i), target);
  }
  
  // optional int32 activity_active = 2;
  if (has_activity_active()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activity_active(), target);
  }
  
  // optional int32 left_time = 3;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_time(), target);
  }
  
  // optional int32 vip_lvl = 4;
  if (has_vip_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->vip_lvl(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100021::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 activity_active = 2;
    if (has_activity_active()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_active());
    }
    
    // optional int32 left_time = 3;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 vip_lvl = 4;
    if (has_vip_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_lvl());
    }
    
  }
  // repeated .ProtoMallList mall_list = 1;
  total_size += 1 * this->mall_list_size();
  for (int i = 0; i < this->mall_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mall_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100021::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100021* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100021*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100021::MergeFrom(const Proto50100021& from) {
  GOOGLE_CHECK_NE(&from, this);
  mall_list_.MergeFrom(from.mall_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_activity_active()) {
      set_activity_active(from.activity_active());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_vip_lvl()) {
      set_vip_lvl(from.vip_lvl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100021::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100021::CopyFrom(const Proto50100021& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100021::IsInitialized() const {
  
  return true;
}

void Proto50100021::Swap(Proto50100021* other) {
  if (other != this) {
    mall_list_.Swap(&other->mall_list_);
    std::swap(activity_active_, other->activity_active_);
    std::swap(left_time_, other->left_time_);
    std::swap(vip_lvl_, other->vip_lvl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100021::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100021_descriptor_;
  metadata.reflection = Proto50100021_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100022::kShopTypeFieldNumber;
const int Proto10100022::kItemIdFieldNumber;
const int Proto10100022::kItemAnountFieldNumber;
const int Proto10100022::kPlayerNameFieldNumber;
#endif  // !_MSC_VER

Proto10100022::Proto10100022()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100022::InitAsDefaultInstance() {
}

Proto10100022::Proto10100022(const Proto10100022& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100022::SharedCtor() {
  _cached_size_ = 0;
  shop_type_ = 0;
  item_id_ = 0;
  item_anount_ = 0;
  player_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100022::~Proto10100022() {
  SharedDtor();
}

void Proto10100022::SharedDtor() {
  if (player_name_ != &::google::protobuf::internal::kEmptyString) {
    delete player_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto10100022::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100022::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100022_descriptor_;
}

const Proto10100022& Proto10100022::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100022* Proto10100022::default_instance_ = NULL;

Proto10100022* Proto10100022::New() const {
  return new Proto10100022;
}

void Proto10100022::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    shop_type_ = 0;
    item_id_ = 0;
    item_anount_ = 0;
    if (has_player_name()) {
      if (player_name_ != &::google::protobuf::internal::kEmptyString) {
        player_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100022::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 shop_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_type_)));
          set_has_shop_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }
      
      // optional int32 item_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_anount;
        break;
      }
      
      // optional int32 item_anount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_anount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_anount_)));
          set_has_item_anount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_player_name;
        break;
      }
      
      // optional string player_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_player_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_player_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->player_name().data(), this->player_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100022::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 shop_type = 1;
  if (has_shop_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->shop_type(), output);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_id(), output);
  }
  
  // optional int32 item_anount = 3;
  if (has_item_anount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_anount(), output);
  }
  
  // optional string player_name = 4;
  if (has_player_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->player_name().data(), this->player_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->player_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100022::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 shop_type = 1;
  if (has_shop_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->shop_type(), target);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_id(), target);
  }
  
  // optional int32 item_anount = 3;
  if (has_item_anount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_anount(), target);
  }
  
  // optional string player_name = 4;
  if (has_player_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->player_name().data(), this->player_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->player_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100022::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 shop_type = 1;
    if (has_shop_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop_type());
    }
    
    // optional int32 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_anount = 3;
    if (has_item_anount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_anount());
    }
    
    // optional string player_name = 4;
    if (has_player_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->player_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100022::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100022* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100022*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100022::MergeFrom(const Proto10100022& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shop_type()) {
      set_shop_type(from.shop_type());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_anount()) {
      set_item_anount(from.item_anount());
    }
    if (from.has_player_name()) {
      set_player_name(from.player_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100022::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100022::CopyFrom(const Proto10100022& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100022::IsInitialized() const {
  
  return true;
}

void Proto10100022::Swap(Proto10100022* other) {
  if (other != this) {
    std::swap(shop_type_, other->shop_type_);
    std::swap(item_id_, other->item_id_);
    std::swap(item_anount_, other->item_anount_);
    std::swap(player_name_, other->player_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100022::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100022_descriptor_;
  metadata.reflection = Proto10100022_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400208::kRoleIdFieldNumber;
const int Proto80400208::kUpdateTypeFieldNumber;
const int Proto80400208::kMountIdFieldNumber;
const int Proto80400208::kWeaponIdFieldNumber;
const int Proto80400208::kClothesIdFieldNumber;
const int Proto80400208::kFashionWeaponFieldNumber;
const int Proto80400208::kFashionIdFieldNumber;
const int Proto80400208::kFashionColorFieldNumber;
const int Proto80400208::kCurLabelFieldNumber;
const int Proto80400208::kLeagueIdFieldNumber;
const int Proto80400208::kLeagueNameFieldNumber;
const int Proto80400208::kVipTypeFieldNumber;
const int Proto80400208::kSrcRoleIdFieldNumber;
const int Proto80400208::kRoleLevelFieldNumber;
const int Proto80400208::kWeaponLvlFieldNumber;
const int Proto80400208::kIsProtectFieldNumber;
const int Proto80400208::kValueFieldNumber;
const int Proto80400208::kMwIdFieldNumber;
const int Proto80400208::kMwRankLvlFieldNumber;
const int Proto80400208::kSwordPoolFieldNumber;
const int Proto80400208::kHotspringStatusFieldNumber;
const int Proto80400208::kPartnerIdFieldNumber;
const int Proto80400208::kPartnerNameFieldNumber;
const int Proto80400208::kWeddingIdFieldNumber;
const int Proto80400208::kWeddingTypeFieldNumber;
const int Proto80400208::kTransferIdFieldNumber;
#endif  // !_MSC_VER

Proto80400208::Proto80400208()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400208::InitAsDefaultInstance() {
}

Proto80400208::Proto80400208(const Proto80400208& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400208::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  update_type_ = 0;
  mount_id_ = 0;
  weapon_id_ = 0;
  clothes_id_ = 0;
  fashion_weapon_ = 0;
  fashion_id_ = 0;
  fashion_color_ = 0;
  cur_label_ = 0;
  league_id_ = GOOGLE_LONGLONG(0);
  league_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  vip_type_ = 0;
  src_role_id_ = GOOGLE_LONGLONG(0);
  role_level_ = 0;
  weapon_lvl_ = 0;
  is_protect_ = 0;
  value_ = 0;
  mw_id_ = 0;
  mw_rank_lvl_ = 0;
  sword_pool_ = 0;
  hotspring_status_ = 0;
  partner_id_ = GOOGLE_LONGLONG(0);
  partner_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  wedding_id_ = GOOGLE_LONGLONG(0);
  wedding_type_ = 0;
  transfer_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400208::~Proto80400208() {
  SharedDtor();
}

void Proto80400208::SharedDtor() {
  if (league_name_ != &::google::protobuf::internal::kEmptyString) {
    delete league_name_;
  }
  if (partner_name_ != &::google::protobuf::internal::kEmptyString) {
    delete partner_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400208::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400208::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400208_descriptor_;
}

const Proto80400208& Proto80400208::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto80400208* Proto80400208::default_instance_ = NULL;

Proto80400208* Proto80400208::New() const {
  return new Proto80400208;
}

void Proto80400208::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    update_type_ = 0;
    mount_id_ = 0;
    weapon_id_ = 0;
    clothes_id_ = 0;
    fashion_weapon_ = 0;
    fashion_id_ = 0;
    fashion_color_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    cur_label_ = 0;
    league_id_ = GOOGLE_LONGLONG(0);
    if (has_league_name()) {
      if (league_name_ != &::google::protobuf::internal::kEmptyString) {
        league_name_->clear();
      }
    }
    vip_type_ = 0;
    src_role_id_ = GOOGLE_LONGLONG(0);
    role_level_ = 0;
    weapon_lvl_ = 0;
    is_protect_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    value_ = 0;
    mw_id_ = 0;
    mw_rank_lvl_ = 0;
    sword_pool_ = 0;
    hotspring_status_ = 0;
    partner_id_ = GOOGLE_LONGLONG(0);
    if (has_partner_name()) {
      if (partner_name_ != &::google::protobuf::internal::kEmptyString) {
        partner_name_->clear();
      }
    }
    wedding_id_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    wedding_type_ = 0;
    transfer_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400208::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_update_type;
        break;
      }
      
      // optional int32 update_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_update_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &update_type_)));
          set_has_update_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_mount_id;
        break;
      }
      
      // optional int32 mount_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mount_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mount_id_)));
          set_has_mount_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_weapon_id;
        break;
      }
      
      // optional int32 weapon_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_weapon_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weapon_id_)));
          set_has_weapon_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_clothes_id;
        break;
      }
      
      // optional int32 clothes_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_clothes_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clothes_id_)));
          set_has_clothes_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_fashion_weapon;
        break;
      }
      
      // optional int32 fashion_weapon = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_weapon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_weapon_)));
          set_has_fashion_weapon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_fashion_id;
        break;
      }
      
      // optional int32 fashion_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_fashion_color;
        break;
      }
      
      // optional int32 fashion_color = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_color:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_color_)));
          set_has_fashion_color();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_cur_label;
        break;
      }
      
      // optional int32 cur_label = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_label:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_label_)));
          set_has_cur_label();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_league_id;
        break;
      }
      
      // optional int64 league_id = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_id_)));
          set_has_league_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_league_name;
        break;
      }
      
      // optional string league_name = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_league_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->league_name().data(), this->league_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_vip_type;
        break;
      }
      
      // optional int32 vip_type = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_type_)));
          set_has_vip_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_src_role_id;
        break;
      }
      
      // optional int64 src_role_id = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_src_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &src_role_id_)));
          set_has_src_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_role_level;
        break;
      }
      
      // optional int32 role_level = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_level_)));
          set_has_role_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_weapon_lvl;
        break;
      }
      
      // optional int32 weapon_lvl = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_weapon_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weapon_lvl_)));
          set_has_weapon_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_is_protect;
        break;
      }
      
      // optional int32 is_protect = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_protect:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_protect_)));
          set_has_is_protect();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_value;
        break;
      }
      
      // optional int32 value = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_mw_id;
        break;
      }
      
      // optional int32 mw_id = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mw_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mw_id_)));
          set_has_mw_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_mw_rank_lvl;
        break;
      }
      
      // optional int32 mw_rank_lvl = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mw_rank_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mw_rank_lvl_)));
          set_has_mw_rank_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_sword_pool;
        break;
      }
      
      // optional int32 sword_pool = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sword_pool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sword_pool_)));
          set_has_sword_pool();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_hotspring_status;
        break;
      }
      
      // optional int32 hotspring_status = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hotspring_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hotspring_status_)));
          set_has_hotspring_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_partner_id;
        break;
      }
      
      // optional int64 partner_id = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_partner_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &partner_id_)));
          set_has_partner_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_partner_name;
        break;
      }
      
      // optional string partner_name = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_partner_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partner_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->partner_name().data(), this->partner_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_wedding_id;
        break;
      }
      
      // optional int64 wedding_id = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wedding_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &wedding_id_)));
          set_has_wedding_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_wedding_type;
        break;
      }
      
      // optional int32 wedding_type = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wedding_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wedding_type_)));
          set_has_wedding_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(208)) goto parse_transfer_id;
        break;
      }
      
      // optional int32 transfer_id = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_transfer_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transfer_id_)));
          set_has_transfer_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400208::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 update_type = 2;
  if (has_update_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->update_type(), output);
  }
  
  // optional int32 mount_id = 3;
  if (has_mount_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mount_id(), output);
  }
  
  // optional int32 weapon_id = 4;
  if (has_weapon_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->weapon_id(), output);
  }
  
  // optional int32 clothes_id = 5;
  if (has_clothes_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->clothes_id(), output);
  }
  
  // optional int32 fashion_weapon = 6;
  if (has_fashion_weapon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->fashion_weapon(), output);
  }
  
  // optional int32 fashion_id = 7;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->fashion_id(), output);
  }
  
  // optional int32 fashion_color = 8;
  if (has_fashion_color()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->fashion_color(), output);
  }
  
  // optional int32 cur_label = 9;
  if (has_cur_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->cur_label(), output);
  }
  
  // optional int64 league_id = 10;
  if (has_league_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->league_id(), output);
  }
  
  // optional string league_name = 11;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->league_name(), output);
  }
  
  // optional int32 vip_type = 12;
  if (has_vip_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->vip_type(), output);
  }
  
  // optional int64 src_role_id = 13;
  if (has_src_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->src_role_id(), output);
  }
  
  // optional int32 role_level = 14;
  if (has_role_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->role_level(), output);
  }
  
  // optional int32 weapon_lvl = 15;
  if (has_weapon_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->weapon_lvl(), output);
  }
  
  // optional int32 is_protect = 16;
  if (has_is_protect()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->is_protect(), output);
  }
  
  // optional int32 value = 17;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->value(), output);
  }
  
  // optional int32 mw_id = 18;
  if (has_mw_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->mw_id(), output);
  }
  
  // optional int32 mw_rank_lvl = 19;
  if (has_mw_rank_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->mw_rank_lvl(), output);
  }
  
  // optional int32 sword_pool = 20;
  if (has_sword_pool()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->sword_pool(), output);
  }
  
  // optional int32 hotspring_status = 21;
  if (has_hotspring_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->hotspring_status(), output);
  }
  
  // optional int64 partner_id = 22;
  if (has_partner_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(22, this->partner_id(), output);
  }
  
  // optional string partner_name = 23;
  if (has_partner_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->partner_name().data(), this->partner_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->partner_name(), output);
  }
  
  // optional int64 wedding_id = 24;
  if (has_wedding_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(24, this->wedding_id(), output);
  }
  
  // optional int32 wedding_type = 25;
  if (has_wedding_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->wedding_type(), output);
  }
  
  // optional int32 transfer_id = 26;
  if (has_transfer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->transfer_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400208::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 update_type = 2;
  if (has_update_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->update_type(), target);
  }
  
  // optional int32 mount_id = 3;
  if (has_mount_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mount_id(), target);
  }
  
  // optional int32 weapon_id = 4;
  if (has_weapon_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->weapon_id(), target);
  }
  
  // optional int32 clothes_id = 5;
  if (has_clothes_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->clothes_id(), target);
  }
  
  // optional int32 fashion_weapon = 6;
  if (has_fashion_weapon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->fashion_weapon(), target);
  }
  
  // optional int32 fashion_id = 7;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->fashion_id(), target);
  }
  
  // optional int32 fashion_color = 8;
  if (has_fashion_color()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->fashion_color(), target);
  }
  
  // optional int32 cur_label = 9;
  if (has_cur_label()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->cur_label(), target);
  }
  
  // optional int64 league_id = 10;
  if (has_league_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->league_id(), target);
  }
  
  // optional string league_name = 11;
  if (has_league_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->league_name().data(), this->league_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->league_name(), target);
  }
  
  // optional int32 vip_type = 12;
  if (has_vip_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->vip_type(), target);
  }
  
  // optional int64 src_role_id = 13;
  if (has_src_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->src_role_id(), target);
  }
  
  // optional int32 role_level = 14;
  if (has_role_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->role_level(), target);
  }
  
  // optional int32 weapon_lvl = 15;
  if (has_weapon_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->weapon_lvl(), target);
  }
  
  // optional int32 is_protect = 16;
  if (has_is_protect()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->is_protect(), target);
  }
  
  // optional int32 value = 17;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->value(), target);
  }
  
  // optional int32 mw_id = 18;
  if (has_mw_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->mw_id(), target);
  }
  
  // optional int32 mw_rank_lvl = 19;
  if (has_mw_rank_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->mw_rank_lvl(), target);
  }
  
  // optional int32 sword_pool = 20;
  if (has_sword_pool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->sword_pool(), target);
  }
  
  // optional int32 hotspring_status = 21;
  if (has_hotspring_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->hotspring_status(), target);
  }
  
  // optional int64 partner_id = 22;
  if (has_partner_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(22, this->partner_id(), target);
  }
  
  // optional string partner_name = 23;
  if (has_partner_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->partner_name().data(), this->partner_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->partner_name(), target);
  }
  
  // optional int64 wedding_id = 24;
  if (has_wedding_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(24, this->wedding_id(), target);
  }
  
  // optional int32 wedding_type = 25;
  if (has_wedding_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->wedding_type(), target);
  }
  
  // optional int32 transfer_id = 26;
  if (has_transfer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->transfer_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400208::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 update_type = 2;
    if (has_update_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->update_type());
    }
    
    // optional int32 mount_id = 3;
    if (has_mount_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mount_id());
    }
    
    // optional int32 weapon_id = 4;
    if (has_weapon_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weapon_id());
    }
    
    // optional int32 clothes_id = 5;
    if (has_clothes_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->clothes_id());
    }
    
    // optional int32 fashion_weapon = 6;
    if (has_fashion_weapon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_weapon());
    }
    
    // optional int32 fashion_id = 7;
    if (has_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
    // optional int32 fashion_color = 8;
    if (has_fashion_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_color());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 cur_label = 9;
    if (has_cur_label()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_label());
    }
    
    // optional int64 league_id = 10;
    if (has_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_id());
    }
    
    // optional string league_name = 11;
    if (has_league_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->league_name());
    }
    
    // optional int32 vip_type = 12;
    if (has_vip_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_type());
    }
    
    // optional int64 src_role_id = 13;
    if (has_src_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->src_role_id());
    }
    
    // optional int32 role_level = 14;
    if (has_role_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->role_level());
    }
    
    // optional int32 weapon_lvl = 15;
    if (has_weapon_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weapon_lvl());
    }
    
    // optional int32 is_protect = 16;
    if (has_is_protect()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_protect());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 value = 17;
    if (has_value()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }
    
    // optional int32 mw_id = 18;
    if (has_mw_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mw_id());
    }
    
    // optional int32 mw_rank_lvl = 19;
    if (has_mw_rank_lvl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mw_rank_lvl());
    }
    
    // optional int32 sword_pool = 20;
    if (has_sword_pool()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sword_pool());
    }
    
    // optional int32 hotspring_status = 21;
    if (has_hotspring_status()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hotspring_status());
    }
    
    // optional int64 partner_id = 22;
    if (has_partner_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->partner_id());
    }
    
    // optional string partner_name = 23;
    if (has_partner_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->partner_name());
    }
    
    // optional int64 wedding_id = 24;
    if (has_wedding_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->wedding_id());
    }
    
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional int32 wedding_type = 25;
    if (has_wedding_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wedding_type());
    }
    
    // optional int32 transfer_id = 26;
    if (has_transfer_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transfer_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400208::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400208* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400208*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400208::MergeFrom(const Proto80400208& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_update_type()) {
      set_update_type(from.update_type());
    }
    if (from.has_mount_id()) {
      set_mount_id(from.mount_id());
    }
    if (from.has_weapon_id()) {
      set_weapon_id(from.weapon_id());
    }
    if (from.has_clothes_id()) {
      set_clothes_id(from.clothes_id());
    }
    if (from.has_fashion_weapon()) {
      set_fashion_weapon(from.fashion_weapon());
    }
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
    if (from.has_fashion_color()) {
      set_fashion_color(from.fashion_color());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_cur_label()) {
      set_cur_label(from.cur_label());
    }
    if (from.has_league_id()) {
      set_league_id(from.league_id());
    }
    if (from.has_league_name()) {
      set_league_name(from.league_name());
    }
    if (from.has_vip_type()) {
      set_vip_type(from.vip_type());
    }
    if (from.has_src_role_id()) {
      set_src_role_id(from.src_role_id());
    }
    if (from.has_role_level()) {
      set_role_level(from.role_level());
    }
    if (from.has_weapon_lvl()) {
      set_weapon_lvl(from.weapon_lvl());
    }
    if (from.has_is_protect()) {
      set_is_protect(from.is_protect());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_mw_id()) {
      set_mw_id(from.mw_id());
    }
    if (from.has_mw_rank_lvl()) {
      set_mw_rank_lvl(from.mw_rank_lvl());
    }
    if (from.has_sword_pool()) {
      set_sword_pool(from.sword_pool());
    }
    if (from.has_hotspring_status()) {
      set_hotspring_status(from.hotspring_status());
    }
    if (from.has_partner_id()) {
      set_partner_id(from.partner_id());
    }
    if (from.has_partner_name()) {
      set_partner_name(from.partner_name());
    }
    if (from.has_wedding_id()) {
      set_wedding_id(from.wedding_id());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_wedding_type()) {
      set_wedding_type(from.wedding_type());
    }
    if (from.has_transfer_id()) {
      set_transfer_id(from.transfer_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400208::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400208::CopyFrom(const Proto80400208& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400208::IsInitialized() const {
  
  return true;
}

void Proto80400208::Swap(Proto80400208* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(update_type_, other->update_type_);
    std::swap(mount_id_, other->mount_id_);
    std::swap(weapon_id_, other->weapon_id_);
    std::swap(clothes_id_, other->clothes_id_);
    std::swap(fashion_weapon_, other->fashion_weapon_);
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(fashion_color_, other->fashion_color_);
    std::swap(cur_label_, other->cur_label_);
    std::swap(league_id_, other->league_id_);
    std::swap(league_name_, other->league_name_);
    std::swap(vip_type_, other->vip_type_);
    std::swap(src_role_id_, other->src_role_id_);
    std::swap(role_level_, other->role_level_);
    std::swap(weapon_lvl_, other->weapon_lvl_);
    std::swap(is_protect_, other->is_protect_);
    std::swap(value_, other->value_);
    std::swap(mw_id_, other->mw_id_);
    std::swap(mw_rank_lvl_, other->mw_rank_lvl_);
    std::swap(sword_pool_, other->sword_pool_);
    std::swap(hotspring_status_, other->hotspring_status_);
    std::swap(partner_id_, other->partner_id_);
    std::swap(partner_name_, other->partner_name_);
    std::swap(wedding_id_, other->wedding_id_);
    std::swap(wedding_type_, other->wedding_type_);
    std::swap(transfer_id_, other->transfer_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400208::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400208_descriptor_;
  metadata.reflection = Proto80400208_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100023::kShopTypeFieldNumber;
const int Proto10100023::kItemIdFieldNumber;
const int Proto10100023::kBuyAmountFieldNumber;
#endif  // !_MSC_VER

Proto10100023::Proto10100023()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100023::InitAsDefaultInstance() {
}

Proto10100023::Proto10100023(const Proto10100023& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100023::SharedCtor() {
  _cached_size_ = 0;
  shop_type_ = 0;
  item_id_ = 0;
  buy_amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100023::~Proto10100023() {
  SharedDtor();
}

void Proto10100023::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100023::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100023::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100023_descriptor_;
}

const Proto10100023& Proto10100023::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100023* Proto10100023::default_instance_ = NULL;

Proto10100023* Proto10100023::New() const {
  return new Proto10100023;
}

void Proto10100023::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    shop_type_ = 0;
    item_id_ = 0;
    buy_amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100023::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 shop_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_type_)));
          set_has_shop_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }
      
      // optional int32 item_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_buy_amount;
        break;
      }
      
      // optional int32 buy_amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_amount_)));
          set_has_buy_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100023::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 shop_type = 1;
  if (has_shop_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->shop_type(), output);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_id(), output);
  }
  
  // optional int32 buy_amount = 3;
  if (has_buy_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->buy_amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100023::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 shop_type = 1;
  if (has_shop_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->shop_type(), target);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_id(), target);
  }
  
  // optional int32 buy_amount = 3;
  if (has_buy_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->buy_amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100023::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 shop_type = 1;
    if (has_shop_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop_type());
    }
    
    // optional int32 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 buy_amount = 3;
    if (has_buy_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100023::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100023* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100023*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100023::MergeFrom(const Proto10100023& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_shop_type()) {
      set_shop_type(from.shop_type());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_buy_amount()) {
      set_buy_amount(from.buy_amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100023::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100023::CopyFrom(const Proto10100023& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100023::IsInitialized() const {
  
  return true;
}

void Proto10100023::Swap(Proto10100023* other) {
  if (other != this) {
    std::swap(shop_type_, other->shop_type_);
    std::swap(item_id_, other->item_id_);
    std::swap(buy_amount_, other->buy_amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100023::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100023_descriptor_;
  metadata.reflection = Proto10100023_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100303::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto10100303::Proto10100303()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100303::InitAsDefaultInstance() {
}

Proto10100303::Proto10100303(const Proto10100303& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100303::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100303::~Proto10100303() {
  SharedDtor();
}

void Proto10100303::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100303::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100303::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100303_descriptor_;
}

const Proto10100303& Proto10100303::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100303* Proto10100303::default_instance_ = NULL;

Proto10100303* Proto10100303::New() const {
  return new Proto10100303;
}

void Proto10100303::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100303::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100303::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100303::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100303::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100303::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100303* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100303*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100303::MergeFrom(const Proto10100303& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100303::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100303::CopyFrom(const Proto10100303& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100303::IsInitialized() const {
  
  return true;
}

void Proto10100303::Swap(Proto10100303* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100303::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100303_descriptor_;
  metadata.reflection = Proto10100303_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100304::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto10100304::Proto10100304()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100304::InitAsDefaultInstance() {
}

Proto10100304::Proto10100304(const Proto10100304& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100304::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100304::~Proto10100304() {
  SharedDtor();
}

void Proto10100304::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100304::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100304::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100304_descriptor_;
}

const Proto10100304& Proto10100304::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100304* Proto10100304::default_instance_ = NULL;

Proto10100304* Proto10100304::New() const {
  return new Proto10100304;
}

void Proto10100304::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100304::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100304::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100304::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100304::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100304::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100304* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100304*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100304::MergeFrom(const Proto10100304& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100304::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100304::CopyFrom(const Proto10100304& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100304::IsInitialized() const {
  
  return true;
}

void Proto10100304::Swap(Proto10100304* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100304::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100304_descriptor_;
  metadata.reflection = Proto10100304_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100307::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto10100307::Proto10100307()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100307::InitAsDefaultInstance() {
}

Proto10100307::Proto10100307(const Proto10100307& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100307::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100307::~Proto10100307() {
  SharedDtor();
}

void Proto10100307::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100307::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100307::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100307_descriptor_;
}

const Proto10100307& Proto10100307::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100307* Proto10100307::default_instance_ = NULL;

Proto10100307* Proto10100307::New() const {
  return new Proto10100307;
}

void Proto10100307::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100307::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100307::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100307::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100307::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100307::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100307* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100307*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100307::MergeFrom(const Proto10100307& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100307::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100307::CopyFrom(const Proto10100307& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100307::IsInitialized() const {
  
  return true;
}

void Proto10100307::Swap(Proto10100307* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100307::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100307_descriptor_;
  metadata.reflection = Proto10100307_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100309::kResponeTypeFieldNumber;
const int Proto10100309::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto10100309::Proto10100309()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100309::InitAsDefaultInstance() {
}

Proto10100309::Proto10100309(const Proto10100309& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100309::SharedCtor() {
  _cached_size_ = 0;
  respone_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100309::~Proto10100309() {
  SharedDtor();
}

void Proto10100309::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100309::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100309::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100309_descriptor_;
}

const Proto10100309& Proto10100309::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient004_2eproto();  return *default_instance_;
}

Proto10100309* Proto10100309::default_instance_ = NULL;

Proto10100309* Proto10100309::New() const {
  return new Proto10100309;
}

void Proto10100309::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    respone_type_ = 0;
  }
  role_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100309::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 respone_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &respone_type_)));
          set_has_respone_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_id;
        break;
      }
      
      // repeated int64 role_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 16, input, this->mutable_role_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_id;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100309::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 respone_type = 1;
  if (has_respone_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->respone_type(), output);
  }
  
  // repeated int64 role_id = 2;
  for (int i = 0; i < this->role_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      2, this->role_id(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100309::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 respone_type = 1;
  if (has_respone_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->respone_type(), target);
  }
  
  // repeated int64 role_id = 2;
  for (int i = 0; i < this->role_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(2, this->role_id(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100309::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 respone_type = 1;
    if (has_respone_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->respone_type());
    }
    
  }
  // repeated int64 role_id = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_id(i));
    }
    total_size += 1 * this->role_id_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100309::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100309* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100309*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100309::MergeFrom(const Proto10100309& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_id_.MergeFrom(from.role_id_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_respone_type()) {
      set_respone_type(from.respone_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100309::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100309::CopyFrom(const Proto10100309& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100309::IsInitialized() const {
  
  return true;
}

void Proto10100309::Swap(Proto10100309* other) {
  if (other != this) {
    std::swap(respone_type_, other->respone_type_);
    role_id_.Swap(&other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100309::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100309_descriptor_;
  metadata.reflection = Proto10100309_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
