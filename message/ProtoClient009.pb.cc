// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient009.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto11400334_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400334_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400115_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400115_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400115_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400115_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400116_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400116_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400116_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400116_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400335_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400335_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400114_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400114_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400117_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400117_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400118_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400118_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400118_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400118_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400119_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400119_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400107_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400107_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400219_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400219_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50999999_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50999999_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400220_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400220_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400916_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400916_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400916_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400916_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401421_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401421_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100103_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100103_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400201_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400201_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400656_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400656_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400656_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400656_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100632_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100632_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400604_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400604_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100025_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100025_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100025_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100025_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401431_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401431_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401431_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401431_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100901_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100901_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100902_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100902_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100903_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100903_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100903_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100903_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100904_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100904_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100905_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100905_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401432_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401432_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400337_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400337_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400336_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400336_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100032_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100032_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401405_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401405_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100901_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100901_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401441_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401441_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101002_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101004_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101004_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101005_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101005_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101006_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101006_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400006_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400006_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400918_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400918_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400347_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400347_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient009_2eproto() {
  protobuf_AddDesc_ProtoClient009_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient009.proto");
  GOOGLE_CHECK(file != NULL);
  Proto11400334_descriptor_ = file->message_type(0);
  static const int Proto11400334_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400334, step_),
  };
  Proto11400334_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400334_descriptor_,
      Proto11400334::default_instance_,
      Proto11400334_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400334, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400334, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400334));
  Proto11400115_descriptor_ = file->message_type(1);
  static const int Proto11400115_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400115, item_index_),
  };
  Proto11400115_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400115_descriptor_,
      Proto11400115::default_instance_,
      Proto11400115_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400115, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400115, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400115));
  Proto51400115_descriptor_ = file->message_type(2);
  static const int Proto51400115_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400115, item_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400115, prop_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400115, item_set_),
  };
  Proto51400115_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400115_descriptor_,
      Proto51400115::default_instance_,
      Proto51400115_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400115, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400115, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400115));
  Proto51400116_descriptor_ = file->message_type(3);
  static const int Proto51400116_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400116, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400116, item_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400116, prop_index_),
  };
  Proto51400116_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400116_descriptor_,
      Proto51400116::default_instance_,
      Proto51400116_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400116, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400116, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400116));
  Proto11400116_descriptor_ = file->message_type(4);
  static const int Proto11400116_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400116, item_index_),
  };
  Proto11400116_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400116_descriptor_,
      Proto11400116::default_instance_,
      Proto11400116_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400116, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400116, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400116));
  Proto51400335_descriptor_ = file->message_type(5);
  static const int Proto51400335_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400335, name_),
  };
  Proto51400335_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400335_descriptor_,
      Proto51400335::default_instance_,
      Proto51400335_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400335, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400335, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400335));
  Proto10400114_descriptor_ = file->message_type(6);
  static const int Proto10400114_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400114, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400114, pixel_y_),
  };
  Proto10400114_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400114_descriptor_,
      Proto10400114::default_instance_,
      Proto10400114_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400114, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400114, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400114));
  Proto51400117_descriptor_ = file->message_type(7);
  static const int Proto51400117_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400117, login_days_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400117, draw_days_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400117, login_reward_),
  };
  Proto51400117_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400117_descriptor_,
      Proto51400117::default_instance_,
      Proto51400117_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400117, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400117, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400117));
  Proto11400118_descriptor_ = file->message_type(8);
  static const int Proto11400118_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400118, draw_day_),
  };
  Proto11400118_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400118_descriptor_,
      Proto11400118::default_instance_,
      Proto11400118_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400118, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400118, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400118));
  Proto51400118_descriptor_ = file->message_type(9);
  static const int Proto51400118_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400118, draw_day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400118, item_id_),
  };
  Proto51400118_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400118_descriptor_,
      Proto51400118::default_instance_,
      Proto51400118_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400118, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400118, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400118));
  Proto51400119_descriptor_ = file->message_type(10);
  static const int Proto51400119_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400119, reward_flag_),
  };
  Proto51400119_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400119_descriptor_,
      Proto51400119::default_instance_,
      Proto51400119_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400119, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400119, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400119));
  Proto81400107_descriptor_ = file->message_type(11);
  static const int Proto81400107_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400107, lastest_task_id_),
  };
  Proto81400107_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400107_descriptor_,
      Proto81400107::default_instance_,
      Proto81400107_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400107, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400107, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400107));
  Proto80400219_descriptor_ = file->message_type(12);
  static const int Proto80400219_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400219, text_id_),
  };
  Proto80400219_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400219_descriptor_,
      Proto80400219::default_instance_,
      Proto80400219_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400219, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400219, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400219));
  Proto50999999_descriptor_ = file->message_type(13);
  static const int Proto50999999_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50999999, msec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50999999, drop_reason_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50999999, ban_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50999999, ban_str_),
  };
  Proto50999999_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50999999_descriptor_,
      Proto50999999::default_instance_,
      Proto50999999_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50999999, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50999999, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50999999));
  Proto80400220_descriptor_ = file->message_type(14);
  static const int Proto80400220_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400220, fighter_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400220, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400220, skill_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400220, skill_pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400220, skill_pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400220, target_list_),
  };
  Proto80400220_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400220_descriptor_,
      Proto80400220::default_instance_,
      Proto80400220_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400220, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400220, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400220));
  Proto10400916_descriptor_ = file->message_type(15);
  static const int Proto10400916_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400916, relive_mode_),
  };
  Proto10400916_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400916_descriptor_,
      Proto10400916::default_instance_,
      Proto10400916_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400916, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400916, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400916));
  Proto50400916_descriptor_ = file->message_type(16);
  static const int Proto50400916_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400916, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400916, blood_percent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400916, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400916, item_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400916, relive_n_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400916, relive_total_),
  };
  Proto50400916_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400916_descriptor_,
      Proto50400916::default_instance_,
      Proto50400916_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400916, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400916, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400916));
  Proto51401421_descriptor_ = file->message_type(17);
  static const int Proto51401421_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401421, keys_),
  };
  Proto51401421_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401421_descriptor_,
      Proto51401421::default_instance_,
      Proto51401421_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401421, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401421, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401421));
  Proto80100103_descriptor_ = file->message_type(18);
  static const int Proto80100103_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100103, update_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100103, beast_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100103, value_),
  };
  Proto80100103_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100103_descriptor_,
      Proto80100103::default_instance_,
      Proto80100103_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100103, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100103, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100103));
  Proto81400201_descriptor_ = file->message_type(19);
  static const int Proto81400201_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400201, task_id_),
  };
  Proto81400201_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400201_descriptor_,
      Proto81400201::default_instance_,
      Proto81400201_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400201, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400201, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400201));
  Proto11400656_descriptor_ = file->message_type(20);
  static const int Proto11400656_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400656, fashion_id_),
  };
  Proto11400656_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400656_descriptor_,
      Proto11400656::default_instance_,
      Proto11400656_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400656, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400656, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400656));
  Proto51400656_descriptor_ = file->message_type(21);
  static const int Proto51400656_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400656, fashion_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400656, mall_gold_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400656, can_convert_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400656, convert_martial_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400656, convert_martial_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400656, convert_martial_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400656, fashion_mall_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400656, martial_mall_type_),
  };
  Proto51400656_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400656_descriptor_,
      Proto51400656::default_instance_,
      Proto51400656_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400656, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400656, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400656));
  Proto10100632_descriptor_ = file->message_type(22);
  static const int Proto10100632_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100632, auto_accept_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100632, accept_force_),
  };
  Proto10100632_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100632_descriptor_,
      Proto10100632::default_instance_,
      Proto10100632_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100632, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100632, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100632));
  Proto81400604_descriptor_ = file->message_type(23);
  static const int Proto81400604_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400604, fight_force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400604, prop_map_),
  };
  Proto81400604_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400604_descriptor_,
      Proto81400604::default_instance_,
      Proto81400604_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400604, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400604, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400604));
  Proto10100025_descriptor_ = file->message_type(24);
  static const int Proto10100025_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100025, fashion_id_),
  };
  Proto10100025_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100025_descriptor_,
      Proto10100025::default_instance_,
      Proto10100025_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100025, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100025, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100025));
  Proto50100025_descriptor_ = file->message_type(25);
  static const int Proto50100025_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100025, fashion_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100025, pkg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100025, pkg_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100025, fashion_part_),
  };
  Proto50100025_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100025_descriptor_,
      Proto50100025::default_instance_,
      Proto50100025_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100025, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100025, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100025));
  Proto11401431_descriptor_ = file->message_type(26);
  static const int Proto11401431_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401431, acti_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401431, super_vip_use_),
  };
  Proto11401431_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401431_descriptor_,
      Proto11401431::default_instance_,
      Proto11401431_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401431, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401431, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401431));
  Proto51401431_descriptor_ = file->message_type(27);
  static const int Proto51401431_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401431, gift_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401431, gift_name_),
  };
  Proto51401431_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401431_descriptor_,
      Proto51401431::default_instance_,
      Proto51401431_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401431, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401431, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401431));
  Proto50100901_descriptor_ = file->message_type(28);
  static const int Proto50100901_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100901, last_record_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100901, replay_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100901, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100901, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100901, evaluate_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100901, contact_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100901, is_official_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100901, reward_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100901, official_id_),
  };
  Proto50100901_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100901_descriptor_,
      Proto50100901::default_instance_,
      Proto50100901_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100901, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100901, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100901));
  Proto50100902_descriptor_ = file->message_type(29);
  static const int Proto50100902_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100902, record_list_),
  };
  Proto50100902_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100902_descriptor_,
      Proto50100902::default_instance_,
      Proto50100902_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100902, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100902, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100902));
  Proto10100903_descriptor_ = file->message_type(30);
  static const int Proto10100903_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100903, is_summit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100903, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100903, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100903, record_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100903, evaluate_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100903, is_official_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100903, official_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100903, reward_id_),
  };
  Proto10100903_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100903_descriptor_,
      Proto10100903::default_instance_,
      Proto10100903_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100903, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100903, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100903));
  Proto50100903_descriptor_ = file->message_type(31);
  static const int Proto50100903_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100903, is_summit_),
  };
  Proto50100903_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100903_descriptor_,
      Proto50100903::default_instance_,
      Proto50100903_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100903, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100903, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100903));
  Proto10100904_descriptor_ = file->message_type(32);
  static const int Proto10100904_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100904, record_id_),
  };
  Proto10100904_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100904_descriptor_,
      Proto10100904::default_instance_,
      Proto10100904_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100904, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100904, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100904));
  Proto10100905_descriptor_ = file->message_type(33);
  static const int Proto10100905_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100905, record_id_),
  };
  Proto10100905_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100905_descriptor_,
      Proto10100905::default_instance_,
      Proto10100905_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100905, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100905, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100905));
  Proto51401432_descriptor_ = file->message_type(34);
  static const int Proto51401432_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401432, gift_def_),
  };
  Proto51401432_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401432_descriptor_,
      Proto51401432::default_instance_,
      Proto51401432_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401432, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401432, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401432));
  Proto11400337_descriptor_ = file->message_type(35);
  static const int Proto11400337_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400337, step_),
  };
  Proto11400337_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400337_descriptor_,
      Proto11400337::default_instance_,
      Proto11400337_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400337, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400337, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400337));
  Proto51400336_descriptor_ = file->message_type(36);
  static const int Proto51400336_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400336, step_),
  };
  Proto51400336_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400336_descriptor_,
      Proto51400336::default_instance_,
      Proto51400336_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400336, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400336, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400336));
  Proto50100032_descriptor_ = file->message_type(37);
  static const int Proto50100032_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100032, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100032, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100032, item_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100032, start_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100032, draw_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100032, award_id_),
  };
  Proto50100032_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100032_descriptor_,
      Proto50100032::default_instance_,
      Proto50100032_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100032, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100032, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100032));
  Proto81401405_descriptor_ = file->message_type(38);
  static const int Proto81401405_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401405, check_in_popup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401405, notice_popup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401405, found_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401405, found_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401405, seven_login_reward_popup_),
  };
  Proto81401405_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401405_descriptor_,
      Proto81401405::default_instance_,
      Proto81401405_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401405, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401405, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401405));
  Proto80100901_descriptor_ = file->message_type(39);
  static const int Proto80100901_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100901, unread_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100901, replay_set_),
  };
  Proto80100901_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100901_descriptor_,
      Proto80100901::default_instance_,
      Proto80100901_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100901, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100901, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100901));
  Proto51401441_descriptor_ = file->message_type(40);
  static const int Proto51401441_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401441, has_reward_),
  };
  Proto51401441_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401441_descriptor_,
      Proto51401441::default_instance_,
      Proto51401441_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401441, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401441, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401441));
  Proto50101001_descriptor_ = file->message_type(41);
  static const int Proto50101001_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, left_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, buy_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, left_cool_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, is_over_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, anima_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, next_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, area_role_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, area_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, have_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, career_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, reward_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, next_reward_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, is_skip_),
  };
  Proto50101001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101001_descriptor_,
      Proto50101001::default_instance_,
      Proto50101001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101001));
  Proto50101002_descriptor_ = file->message_type(42);
  static const int Proto50101002_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101002, last_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101002, add_anima_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101002, add_copper_),
  };
  Proto50101002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101002_descriptor_,
      Proto50101002::default_instance_,
      Proto50101002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101002));
  Proto10101003_descriptor_ = file->message_type(43);
  static const int Proto10101003_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101003, rank_),
  };
  Proto10101003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101003_descriptor_,
      Proto10101003::default_instance_,
      Proto10101003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101003));
  Proto50101004_descriptor_ = file->message_type(44);
  static const int Proto50101004_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101004, left_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101004, buy_times_),
  };
  Proto50101004_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101004_descriptor_,
      Proto50101004::default_instance_,
      Proto50101004_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101004, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101004, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101004));
  Proto50101005_descriptor_ = file->message_type(45);
  static const int Proto50101005_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101005, status_),
  };
  Proto50101005_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101005_descriptor_,
      Proto50101005::default_instance_,
      Proto50101005_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101005, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101005, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101005));
  Proto50101006_descriptor_ = file->message_type(46);
  static const int Proto50101006_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101006, money_),
  };
  Proto50101006_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101006_descriptor_,
      Proto50101006::default_instance_,
      Proto50101006_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101006, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101006, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101006));
  Proto10400006_descriptor_ = file->message_type(47);
  static const int Proto10400006_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400006, tips_flag_),
  };
  Proto10400006_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400006_descriptor_,
      Proto10400006::default_instance_,
      Proto10400006_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400006, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400006, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400006));
  Proto50400918_descriptor_ = file->message_type(48);
  static const int Proto50400918_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400918, script_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400918, curr_strength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400918, left_buy_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400918, trvl_total_pass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400918, max_trvl_pass_),
  };
  Proto50400918_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400918_descriptor_,
      Proto50400918::default_instance_,
      Proto50400918_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400918, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400918, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400918));
  Proto80400347_descriptor_ = file->message_type(49);
  static const int Proto80400347_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400347, fight_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400347, add_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400347, add_anima_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400347, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400347, rank_change_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400347, rank_differ_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400347, figth_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400347, rank_player_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400347, index_),
  };
  Proto80400347_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400347_descriptor_,
      Proto80400347::default_instance_,
      Proto80400347_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400347, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400347, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400347));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient009_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400334_descriptor_, &Proto11400334::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400115_descriptor_, &Proto11400115::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400115_descriptor_, &Proto51400115::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400116_descriptor_, &Proto51400116::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400116_descriptor_, &Proto11400116::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400335_descriptor_, &Proto51400335::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400114_descriptor_, &Proto10400114::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400117_descriptor_, &Proto51400117::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400118_descriptor_, &Proto11400118::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400118_descriptor_, &Proto51400118::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400119_descriptor_, &Proto51400119::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400107_descriptor_, &Proto81400107::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400219_descriptor_, &Proto80400219::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50999999_descriptor_, &Proto50999999::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400220_descriptor_, &Proto80400220::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400916_descriptor_, &Proto10400916::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400916_descriptor_, &Proto50400916::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401421_descriptor_, &Proto51401421::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100103_descriptor_, &Proto80100103::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400201_descriptor_, &Proto81400201::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400656_descriptor_, &Proto11400656::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400656_descriptor_, &Proto51400656::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100632_descriptor_, &Proto10100632::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400604_descriptor_, &Proto81400604::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100025_descriptor_, &Proto10100025::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100025_descriptor_, &Proto50100025::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401431_descriptor_, &Proto11401431::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401431_descriptor_, &Proto51401431::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100901_descriptor_, &Proto50100901::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100902_descriptor_, &Proto50100902::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100903_descriptor_, &Proto10100903::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100903_descriptor_, &Proto50100903::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100904_descriptor_, &Proto10100904::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100905_descriptor_, &Proto10100905::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401432_descriptor_, &Proto51401432::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400337_descriptor_, &Proto11400337::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400336_descriptor_, &Proto51400336::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100032_descriptor_, &Proto50100032::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401405_descriptor_, &Proto81401405::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100901_descriptor_, &Proto80100901::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401441_descriptor_, &Proto51401441::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101001_descriptor_, &Proto50101001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101002_descriptor_, &Proto50101002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101003_descriptor_, &Proto10101003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101004_descriptor_, &Proto50101004::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101005_descriptor_, &Proto50101005::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101006_descriptor_, &Proto50101006::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400006_descriptor_, &Proto10400006::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400918_descriptor_, &Proto50400918::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400347_descriptor_, &Proto80400347::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient009_2eproto() {
  delete Proto11400334::default_instance_;
  delete Proto11400334_reflection_;
  delete Proto11400115::default_instance_;
  delete Proto11400115_reflection_;
  delete Proto51400115::default_instance_;
  delete Proto51400115_reflection_;
  delete Proto51400116::default_instance_;
  delete Proto51400116_reflection_;
  delete Proto11400116::default_instance_;
  delete Proto11400116_reflection_;
  delete Proto51400335::default_instance_;
  delete Proto51400335_reflection_;
  delete Proto10400114::default_instance_;
  delete Proto10400114_reflection_;
  delete Proto51400117::default_instance_;
  delete Proto51400117_reflection_;
  delete Proto11400118::default_instance_;
  delete Proto11400118_reflection_;
  delete Proto51400118::default_instance_;
  delete Proto51400118_reflection_;
  delete Proto51400119::default_instance_;
  delete Proto51400119_reflection_;
  delete Proto81400107::default_instance_;
  delete Proto81400107_reflection_;
  delete Proto80400219::default_instance_;
  delete Proto80400219_reflection_;
  delete Proto50999999::default_instance_;
  delete Proto50999999_reflection_;
  delete Proto80400220::default_instance_;
  delete Proto80400220_reflection_;
  delete Proto10400916::default_instance_;
  delete Proto10400916_reflection_;
  delete Proto50400916::default_instance_;
  delete Proto50400916_reflection_;
  delete Proto51401421::default_instance_;
  delete Proto51401421_reflection_;
  delete Proto80100103::default_instance_;
  delete Proto80100103_reflection_;
  delete Proto81400201::default_instance_;
  delete Proto81400201_reflection_;
  delete Proto11400656::default_instance_;
  delete Proto11400656_reflection_;
  delete Proto51400656::default_instance_;
  delete Proto51400656_reflection_;
  delete Proto10100632::default_instance_;
  delete Proto10100632_reflection_;
  delete Proto81400604::default_instance_;
  delete Proto81400604_reflection_;
  delete Proto10100025::default_instance_;
  delete Proto10100025_reflection_;
  delete Proto50100025::default_instance_;
  delete Proto50100025_reflection_;
  delete Proto11401431::default_instance_;
  delete Proto11401431_reflection_;
  delete Proto51401431::default_instance_;
  delete Proto51401431_reflection_;
  delete Proto50100901::default_instance_;
  delete Proto50100901_reflection_;
  delete Proto50100902::default_instance_;
  delete Proto50100902_reflection_;
  delete Proto10100903::default_instance_;
  delete Proto10100903_reflection_;
  delete Proto50100903::default_instance_;
  delete Proto50100903_reflection_;
  delete Proto10100904::default_instance_;
  delete Proto10100904_reflection_;
  delete Proto10100905::default_instance_;
  delete Proto10100905_reflection_;
  delete Proto51401432::default_instance_;
  delete Proto51401432_reflection_;
  delete Proto11400337::default_instance_;
  delete Proto11400337_reflection_;
  delete Proto51400336::default_instance_;
  delete Proto51400336_reflection_;
  delete Proto50100032::default_instance_;
  delete Proto50100032_reflection_;
  delete Proto81401405::default_instance_;
  delete Proto81401405_reflection_;
  delete Proto80100901::default_instance_;
  delete Proto80100901_reflection_;
  delete Proto51401441::default_instance_;
  delete Proto51401441_reflection_;
  delete Proto50101001::default_instance_;
  delete Proto50101001_reflection_;
  delete Proto50101002::default_instance_;
  delete Proto50101002_reflection_;
  delete Proto10101003::default_instance_;
  delete Proto10101003_reflection_;
  delete Proto50101004::default_instance_;
  delete Proto50101004_reflection_;
  delete Proto50101005::default_instance_;
  delete Proto50101005_reflection_;
  delete Proto50101006::default_instance_;
  delete Proto50101006_reflection_;
  delete Proto10400006::default_instance_;
  delete Proto10400006_reflection_;
  delete Proto50400918::default_instance_;
  delete Proto50400918_reflection_;
  delete Proto80400347::default_instance_;
  delete Proto80400347_reflection_;
}

void protobuf_AddDesc_ProtoClient009_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient009.proto\032\021ProtoPublic.prot"
    "o\"\035\n\rProto11400334\022\014\n\004step\030\001 \001(\005\"#\n\rProt"
    "o11400115\022\022\n\nitem_index\030\001 \001(\005\"U\n\rProto51"
    "400115\022\022\n\nitem_index\030\001 \001(\005\022\022\n\nprop_index"
    "\030\002 \001(\005\022\034\n\010item_set\030\003 \003(\0132\n.ProtoItem\"I\n\r"
    "Proto51400116\022\017\n\007item_id\030\001 \001(\005\022\023\n\013item_a"
    "mount\030\002 \001(\005\022\022\n\nprop_index\030\003 \001(\005\"#\n\rProto"
    "11400116\022\022\n\nitem_index\030\001 \001(\005\"\035\n\rProto514"
    "00335\022\014\n\004name\030\001 \001(\t\"1\n\rProto10400114\022\017\n\007"
    "pixel_x\030\001 \001(\005\022\017\n\007pixel_y\030\002 \001(\005\"`\n\rProto5"
    "1400117\022\022\n\nlogin_days\030\001 \001(\005\022\021\n\tdraw_days"
    "\030\002 \003(\005\022(\n\014login_reward\030\003 \003(\0132\022.ProtoSeve"
    "nDayItem\"!\n\rProto11400118\022\020\n\010draw_day\030\001 "
    "\001(\005\"2\n\rProto51400118\022\020\n\010draw_day\030\001 \001(\005\022\017"
    "\n\007item_id\030\002 \001(\005\"$\n\rProto51400119\022\023\n\013rewa"
    "rd_flag\030\001 \001(\005\"(\n\rProto81400107\022\027\n\017lastes"
    "t_task_id\030\001 \001(\005\" \n\rProto80400219\022\017\n\007text"
    "_id\030\001 \001(\005\"U\n\rProto50999999\022\014\n\004msec\030\001 \001(\005"
    "\022\023\n\013drop_reason\030\002 \001(\005\022\020\n\010ban_type\030\003 \001(\005\022"
    "\017\n\007ban_str\030\004 \001(\t\"\240\001\n\rProto80400220\022\022\n\nfi"
    "ghter_id\030\001 \001(\003\022\020\n\010skill_id\030\002 \001(\005\022\023\n\013skil"
    "l_level\030\003 \001(\005\022\025\n\rskill_pixel_x\030\004 \001(\005\022\025\n\r"
    "skill_pixel_y\030\005 \001(\005\022&\n\013target_list\030\006 \003(\013"
    "2\021.ProtoSkillTarget\"$\n\rProto10400916\022\023\n\013"
    "relive_mode\030\001 \001(\005\"\177\n\rProto50400916\022\014\n\004go"
    "ld\030\001 \001(\005\022\025\n\rblood_percent\030\002 \001(\005\022\017\n\007item_"
    "id\030\003 \001(\005\022\020\n\010item_num\030\004 \001(\005\022\020\n\010relive_n\030\005"
    " \001(\005\022\024\n\014relive_total\030\006 \001(\005\"\035\n\rProto51401"
    "421\022\014\n\004keys\030\001 \003(\t\"E\n\rProto80100103\022\023\n\013up"
    "date_type\030\001 \001(\005\022\020\n\010beast_id\030\002 \001(\003\022\r\n\005val"
    "ue\030\003 \001(\005\" \n\rProto81400201\022\017\n\007task_id\030\001 \001"
    "(\005\"#\n\rProto11400656\022\022\n\nfashion_id\030\001 \001(\005\""
    "\342\001\n\rProto51400656\022\022\n\nfashion_id\030\001 \001(\005\022\027\n"
    "\017mall_gold_price\030\002 \001(\005\022\023\n\013can_convert\030\003 "
    "\001(\005\022\032\n\022convert_martial_id\030\004 \001(\005\022\036\n\026conve"
    "rt_martial_amount\030\005 \001(\005\022\035\n\025convert_marti"
    "al_price\030\006 \001(\005\022\031\n\021fashion_mall_type\030\007 \001("
    "\005\022\031\n\021martial_mall_type\030\010 \001(\005\":\n\rProto101"
    "00632\022\023\n\013auto_accept\030\001 \001(\005\022\024\n\014accept_for"
    "ce\030\002 \001(\005\"E\n\rProto81400604\022\023\n\013fight_force"
    "\030\001 \001(\005\022\037\n\010prop_map\030\002 \003(\0132\r.ProtoPairObj\""
    "#\n\rProto10100025\022\022\n\nfashion_id\030\001 \001(\005\"^\n\r"
    "Proto50100025\022\022\n\nfashion_id\030\001 \001(\005\022\020\n\010pkg"
    "_type\030\002 \001(\005\022\021\n\tpkg_index\030\003 \001(\005\022\024\n\014fashio"
    "n_part\030\004 \001(\005\"9\n\rProto11401431\022\021\n\tacti_co"
    "de\030\001 \001(\t\022\025\n\rsuper_vip_use\030\002 \001(\005\"5\n\rProto"
    "51401431\022\021\n\tgift_sort\030\001 \001(\005\022\021\n\tgift_name"
    "\030\002 \001(\t\"\305\001\n\rProto50100901\022\030\n\020last_record_"
    "type\030\001 \001(\005\022\025\n\rreplay_amount\030\002 \001(\005\022\r\n\005tit"
    "le\030\003 \001(\t\022\017\n\007content\030\004 \001(\t\022\025\n\revaluate_st"
    "ar\030\005 \001(\005\022\017\n\007contact\030\006 \001(\t\022\023\n\013is_official"
    "\030\007 \001(\005\022\021\n\treward_id\030\010 \001(\005\022\023\n\013official_id"
    "\030\t \001(\005\"=\n\rProto50100902\022,\n\013record_list\030\001"
    " \003(\0132\027.ProtoCustomerSVCRecord\"\253\001\n\rProto1"
    "0100903\022\021\n\tis_summit\030\001 \001(\005\022\r\n\005title\030\002 \001("
    "\t\022\017\n\007content\030\003 \001(\t\022\023\n\013record_type\030\004 \001(\005\022"
    "\025\n\revaluate_star\030\005 \001(\005\022\023\n\013is_official\030\006 "
    "\001(\005\022\023\n\013official_id\030\007 \001(\005\022\021\n\treward_id\030\010 "
    "\001(\005\"\"\n\rProto50100903\022\021\n\tis_summit\030\001 \001(\005\""
    "\"\n\rProto10100904\022\021\n\trecord_id\030\001 \001(\003\"\"\n\rP"
    "roto10100905\022\021\n\trecord_id\030\001 \001(\003\"5\n\rProto"
    "51401432\022$\n\010gift_def\030\001 \003(\0132\022.ProtoMediaG"
    "iftDef\"\035\n\rProto11400337\022\014\n\004step\030\001 \001(\005\"\035\n"
    "\rProto51400336\022\014\n\004step\030\001 \003(\005\"\206\001\n\rProto50"
    "100032\022\r\n\005title\030\001 \001(\t\022\017\n\007content\030\002 \003(\t\022\034"
    "\n\010item_set\030\003 \003(\0132\n.ProtoItem\022\022\n\nstart_ti"
    "ck\030\004 \001(\003\022\021\n\tdraw_flag\030\005 \001(\005\022\020\n\010award_id\030"
    "\006 \001(\005\"\206\001\n\rProto81401405\022\026\n\016check_in_popu"
    "p\030\001 \001(\005\022\024\n\014notice_popup\030\002 \001(\005\022\022\n\nfound_f"
    "lag\030\003 \001(\005\022\021\n\tfound_num\030\004 \001(\005\022 \n\030seven_lo"
    "gin_reward_popup\030\005 \001(\005\"S\n\rProto80100901\022"
    "\025\n\runread_amount\030\001 \001(\005\022+\n\nreplay_set\030\002 \003"
    "(\0132\027.ProtoCustomerSVCRecord\"#\n\rProto5140"
    "1441\022\022\n\nhas_reward\030\001 \001(\005\"\353\002\n\rProto501010"
    "01\022\014\n\004rank\030\001 \001(\005\022\r\n\005force\030\002 \001(\005\022\013\n\003sex\030\003"
    " \001(\005\022\022\n\nleft_times\030\004 \001(\005\022\021\n\tbuy_times\030\005 "
    "\001(\005\022\026\n\016left_cool_time\030\006 \001(\005\022\025\n\ris_over_l"
    "imit\030\007 \001(\005\022\r\n\005anima\030\010 \001(\005\022\r\n\005money\030\t \001(\005"
    "\022\021\n\tnext_time\030\n \001(\005\022!\n\tarea_role\030\013 \003(\0132\016"
    ".ProtoAreaRole\022%\n\013area_record\030\014 \003(\0132\020.Pr"
    "otoAreaRecord\022\023\n\013have_reward\030\r \001(\005\022\016\n\006ca"
    "reer\030\016 \001(\005\022\021\n\treward_id\030\017 \001(\005\022\026\n\016next_re"
    "ward_id\030\020 \001(\005\022\017\n\007is_skip\030\021 \001(\005\"I\n\rProto5"
    "0101002\022\021\n\tlast_rank\030\001 \001(\005\022\021\n\tadd_anima\030"
    "\002 \001(\005\022\022\n\nadd_copper\030\003 \001(\005\"\035\n\rProto101010"
    "03\022\014\n\004rank\030\001 \001(\005\"6\n\rProto50101004\022\022\n\nlef"
    "t_times\030\001 \001(\005\022\021\n\tbuy_times\030\002 \001(\005\"\037\n\rProt"
    "o50101005\022\016\n\006status\030\001 \001(\005\"\036\n\rProto501010"
    "06\022\r\n\005money\030\001 \001(\005\"\"\n\rProto10400006\022\021\n\tti"
    "ps_flag\030\001 \001(\005\"\225\001\n\rProto50400918\022%\n\013scrip"
    "t_list\030\001 \003(\0132\020.ProtoScriptInfo\022\025\n\rcurr_s"
    "trength\030\002 \001(\005\022\026\n\016left_buy_times\030\003 \001(\005\022\027\n"
    "\017trvl_total_pass\030\004 \001(\005\022\025\n\rmax_trvl_pass\030"
    "\005 \001(\005\"\310\001\n\rProto80400347\022\023\n\013fight_state\030\001"
    " \001(\005\022\017\n\007add_exp\030\002 \001(\005\022\021\n\tadd_anima\030\003 \001(\005"
    "\022\014\n\004rank\030\004 \001(\005\022\023\n\013rank_change\030\005 \001(\005\022\023\n\013r"
    "ank_differ\030\006 \001(\005\022\022\n\nfigth_time\030\007 \001(\005\022#\n\013"
    "rank_player\030\010 \001(\0132\016.ProtoAreaRole\022\r\n\005ind"
    "ex\030\t \001(\005", 3928);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient009.proto", &protobuf_RegisterTypes);
  Proto11400334::default_instance_ = new Proto11400334();
  Proto11400115::default_instance_ = new Proto11400115();
  Proto51400115::default_instance_ = new Proto51400115();
  Proto51400116::default_instance_ = new Proto51400116();
  Proto11400116::default_instance_ = new Proto11400116();
  Proto51400335::default_instance_ = new Proto51400335();
  Proto10400114::default_instance_ = new Proto10400114();
  Proto51400117::default_instance_ = new Proto51400117();
  Proto11400118::default_instance_ = new Proto11400118();
  Proto51400118::default_instance_ = new Proto51400118();
  Proto51400119::default_instance_ = new Proto51400119();
  Proto81400107::default_instance_ = new Proto81400107();
  Proto80400219::default_instance_ = new Proto80400219();
  Proto50999999::default_instance_ = new Proto50999999();
  Proto80400220::default_instance_ = new Proto80400220();
  Proto10400916::default_instance_ = new Proto10400916();
  Proto50400916::default_instance_ = new Proto50400916();
  Proto51401421::default_instance_ = new Proto51401421();
  Proto80100103::default_instance_ = new Proto80100103();
  Proto81400201::default_instance_ = new Proto81400201();
  Proto11400656::default_instance_ = new Proto11400656();
  Proto51400656::default_instance_ = new Proto51400656();
  Proto10100632::default_instance_ = new Proto10100632();
  Proto81400604::default_instance_ = new Proto81400604();
  Proto10100025::default_instance_ = new Proto10100025();
  Proto50100025::default_instance_ = new Proto50100025();
  Proto11401431::default_instance_ = new Proto11401431();
  Proto51401431::default_instance_ = new Proto51401431();
  Proto50100901::default_instance_ = new Proto50100901();
  Proto50100902::default_instance_ = new Proto50100902();
  Proto10100903::default_instance_ = new Proto10100903();
  Proto50100903::default_instance_ = new Proto50100903();
  Proto10100904::default_instance_ = new Proto10100904();
  Proto10100905::default_instance_ = new Proto10100905();
  Proto51401432::default_instance_ = new Proto51401432();
  Proto11400337::default_instance_ = new Proto11400337();
  Proto51400336::default_instance_ = new Proto51400336();
  Proto50100032::default_instance_ = new Proto50100032();
  Proto81401405::default_instance_ = new Proto81401405();
  Proto80100901::default_instance_ = new Proto80100901();
  Proto51401441::default_instance_ = new Proto51401441();
  Proto50101001::default_instance_ = new Proto50101001();
  Proto50101002::default_instance_ = new Proto50101002();
  Proto10101003::default_instance_ = new Proto10101003();
  Proto50101004::default_instance_ = new Proto50101004();
  Proto50101005::default_instance_ = new Proto50101005();
  Proto50101006::default_instance_ = new Proto50101006();
  Proto10400006::default_instance_ = new Proto10400006();
  Proto50400918::default_instance_ = new Proto50400918();
  Proto80400347::default_instance_ = new Proto80400347();
  Proto11400334::default_instance_->InitAsDefaultInstance();
  Proto11400115::default_instance_->InitAsDefaultInstance();
  Proto51400115::default_instance_->InitAsDefaultInstance();
  Proto51400116::default_instance_->InitAsDefaultInstance();
  Proto11400116::default_instance_->InitAsDefaultInstance();
  Proto51400335::default_instance_->InitAsDefaultInstance();
  Proto10400114::default_instance_->InitAsDefaultInstance();
  Proto51400117::default_instance_->InitAsDefaultInstance();
  Proto11400118::default_instance_->InitAsDefaultInstance();
  Proto51400118::default_instance_->InitAsDefaultInstance();
  Proto51400119::default_instance_->InitAsDefaultInstance();
  Proto81400107::default_instance_->InitAsDefaultInstance();
  Proto80400219::default_instance_->InitAsDefaultInstance();
  Proto50999999::default_instance_->InitAsDefaultInstance();
  Proto80400220::default_instance_->InitAsDefaultInstance();
  Proto10400916::default_instance_->InitAsDefaultInstance();
  Proto50400916::default_instance_->InitAsDefaultInstance();
  Proto51401421::default_instance_->InitAsDefaultInstance();
  Proto80100103::default_instance_->InitAsDefaultInstance();
  Proto81400201::default_instance_->InitAsDefaultInstance();
  Proto11400656::default_instance_->InitAsDefaultInstance();
  Proto51400656::default_instance_->InitAsDefaultInstance();
  Proto10100632::default_instance_->InitAsDefaultInstance();
  Proto81400604::default_instance_->InitAsDefaultInstance();
  Proto10100025::default_instance_->InitAsDefaultInstance();
  Proto50100025::default_instance_->InitAsDefaultInstance();
  Proto11401431::default_instance_->InitAsDefaultInstance();
  Proto51401431::default_instance_->InitAsDefaultInstance();
  Proto50100901::default_instance_->InitAsDefaultInstance();
  Proto50100902::default_instance_->InitAsDefaultInstance();
  Proto10100903::default_instance_->InitAsDefaultInstance();
  Proto50100903::default_instance_->InitAsDefaultInstance();
  Proto10100904::default_instance_->InitAsDefaultInstance();
  Proto10100905::default_instance_->InitAsDefaultInstance();
  Proto51401432::default_instance_->InitAsDefaultInstance();
  Proto11400337::default_instance_->InitAsDefaultInstance();
  Proto51400336::default_instance_->InitAsDefaultInstance();
  Proto50100032::default_instance_->InitAsDefaultInstance();
  Proto81401405::default_instance_->InitAsDefaultInstance();
  Proto80100901::default_instance_->InitAsDefaultInstance();
  Proto51401441::default_instance_->InitAsDefaultInstance();
  Proto50101001::default_instance_->InitAsDefaultInstance();
  Proto50101002::default_instance_->InitAsDefaultInstance();
  Proto10101003::default_instance_->InitAsDefaultInstance();
  Proto50101004::default_instance_->InitAsDefaultInstance();
  Proto50101005::default_instance_->InitAsDefaultInstance();
  Proto50101006::default_instance_->InitAsDefaultInstance();
  Proto10400006::default_instance_->InitAsDefaultInstance();
  Proto50400918::default_instance_->InitAsDefaultInstance();
  Proto80400347::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient009_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient009_2eproto {
  StaticDescriptorInitializer_ProtoClient009_2eproto() {
    protobuf_AddDesc_ProtoClient009_2eproto();
  }
} static_descriptor_initializer_ProtoClient009_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto11400334::kStepFieldNumber;
#endif  // !_MSC_VER

Proto11400334::Proto11400334()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400334::InitAsDefaultInstance() {
}

Proto11400334::Proto11400334(const Proto11400334& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400334::SharedCtor() {
  _cached_size_ = 0;
  step_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400334::~Proto11400334() {
  SharedDtor();
}

void Proto11400334::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400334::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400334::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400334_descriptor_;
}

const Proto11400334& Proto11400334::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto11400334* Proto11400334::default_instance_ = NULL;

Proto11400334* Proto11400334::New() const {
  return new Proto11400334;
}

void Proto11400334::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    step_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400334::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 step = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &step_)));
          set_has_step();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400334::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 step = 1;
  if (has_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->step(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400334::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 step = 1;
  if (has_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->step(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400334::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 step = 1;
    if (has_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->step());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400334::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400334* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400334*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400334::MergeFrom(const Proto11400334& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_step()) {
      set_step(from.step());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400334::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400334::CopyFrom(const Proto11400334& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400334::IsInitialized() const {
  
  return true;
}

void Proto11400334::Swap(Proto11400334* other) {
  if (other != this) {
    std::swap(step_, other->step_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400334::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400334_descriptor_;
  metadata.reflection = Proto11400334_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400115::kItemIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400115::Proto11400115()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400115::InitAsDefaultInstance() {
}

Proto11400115::Proto11400115(const Proto11400115& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400115::SharedCtor() {
  _cached_size_ = 0;
  item_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400115::~Proto11400115() {
  SharedDtor();
}

void Proto11400115::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400115::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400115::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400115_descriptor_;
}

const Proto11400115& Proto11400115::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto11400115* Proto11400115::default_instance_ = NULL;

Proto11400115* Proto11400115::New() const {
  return new Proto11400115;
}

void Proto11400115::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400115::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_index_)));
          set_has_item_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400115::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_index = 1;
  if (has_item_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400115::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_index = 1;
  if (has_item_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400115::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_index = 1;
    if (has_item_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400115::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400115* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400115*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400115::MergeFrom(const Proto11400115& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_index()) {
      set_item_index(from.item_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400115::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400115::CopyFrom(const Proto11400115& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400115::IsInitialized() const {
  
  return true;
}

void Proto11400115::Swap(Proto11400115* other) {
  if (other != this) {
    std::swap(item_index_, other->item_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400115::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400115_descriptor_;
  metadata.reflection = Proto11400115_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400115::kItemIndexFieldNumber;
const int Proto51400115::kPropIndexFieldNumber;
const int Proto51400115::kItemSetFieldNumber;
#endif  // !_MSC_VER

Proto51400115::Proto51400115()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400115::InitAsDefaultInstance() {
}

Proto51400115::Proto51400115(const Proto51400115& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400115::SharedCtor() {
  _cached_size_ = 0;
  item_index_ = 0;
  prop_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400115::~Proto51400115() {
  SharedDtor();
}

void Proto51400115::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400115::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400115::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400115_descriptor_;
}

const Proto51400115& Proto51400115::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto51400115* Proto51400115::default_instance_ = NULL;

Proto51400115* Proto51400115::New() const {
  return new Proto51400115;
}

void Proto51400115::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_index_ = 0;
    prop_index_ = 0;
  }
  item_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400115::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_index_)));
          set_has_item_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_prop_index;
        break;
      }
      
      // optional int32 prop_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_prop_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prop_index_)));
          set_has_prop_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_item_set;
        break;
      }
      
      // repeated .ProtoItem item_set = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_item_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400115::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_index = 1;
  if (has_item_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_index(), output);
  }
  
  // optional int32 prop_index = 2;
  if (has_prop_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->prop_index(), output);
  }
  
  // repeated .ProtoItem item_set = 3;
  for (int i = 0; i < this->item_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->item_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400115::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_index = 1;
  if (has_item_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_index(), target);
  }
  
  // optional int32 prop_index = 2;
  if (has_prop_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->prop_index(), target);
  }
  
  // repeated .ProtoItem item_set = 3;
  for (int i = 0; i < this->item_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->item_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400115::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_index = 1;
    if (has_item_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_index());
    }
    
    // optional int32 prop_index = 2;
    if (has_prop_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->prop_index());
    }
    
  }
  // repeated .ProtoItem item_set = 3;
  total_size += 1 * this->item_set_size();
  for (int i = 0; i < this->item_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400115::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400115* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400115*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400115::MergeFrom(const Proto51400115& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_set_.MergeFrom(from.item_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_index()) {
      set_item_index(from.item_index());
    }
    if (from.has_prop_index()) {
      set_prop_index(from.prop_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400115::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400115::CopyFrom(const Proto51400115& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400115::IsInitialized() const {
  
  return true;
}

void Proto51400115::Swap(Proto51400115* other) {
  if (other != this) {
    std::swap(item_index_, other->item_index_);
    std::swap(prop_index_, other->prop_index_);
    item_set_.Swap(&other->item_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400115::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400115_descriptor_;
  metadata.reflection = Proto51400115_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400116::kItemIdFieldNumber;
const int Proto51400116::kItemAmountFieldNumber;
const int Proto51400116::kPropIndexFieldNumber;
#endif  // !_MSC_VER

Proto51400116::Proto51400116()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400116::InitAsDefaultInstance() {
}

Proto51400116::Proto51400116(const Proto51400116& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400116::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = 0;
  item_amount_ = 0;
  prop_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400116::~Proto51400116() {
  SharedDtor();
}

void Proto51400116::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400116::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400116::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400116_descriptor_;
}

const Proto51400116& Proto51400116::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto51400116* Proto51400116::default_instance_ = NULL;

Proto51400116* Proto51400116::New() const {
  return new Proto51400116;
}

void Proto51400116::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_id_ = 0;
    item_amount_ = 0;
    prop_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400116::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_amount;
        break;
      }
      
      // optional int32 item_amount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_amount_)));
          set_has_item_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_prop_index;
        break;
      }
      
      // optional int32 prop_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_prop_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prop_index_)));
          set_has_prop_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400116::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_id(), output);
  }
  
  // optional int32 item_amount = 2;
  if (has_item_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_amount(), output);
  }
  
  // optional int32 prop_index = 3;
  if (has_prop_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->prop_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400116::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_id = 1;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_id(), target);
  }
  
  // optional int32 item_amount = 2;
  if (has_item_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_amount(), target);
  }
  
  // optional int32 prop_index = 3;
  if (has_prop_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->prop_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400116::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_amount = 2;
    if (has_item_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_amount());
    }
    
    // optional int32 prop_index = 3;
    if (has_prop_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->prop_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400116::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400116* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400116*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400116::MergeFrom(const Proto51400116& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_amount()) {
      set_item_amount(from.item_amount());
    }
    if (from.has_prop_index()) {
      set_prop_index(from.prop_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400116::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400116::CopyFrom(const Proto51400116& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400116::IsInitialized() const {
  
  return true;
}

void Proto51400116::Swap(Proto51400116* other) {
  if (other != this) {
    std::swap(item_id_, other->item_id_);
    std::swap(item_amount_, other->item_amount_);
    std::swap(prop_index_, other->prop_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400116::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400116_descriptor_;
  metadata.reflection = Proto51400116_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400116::kItemIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400116::Proto11400116()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400116::InitAsDefaultInstance() {
}

Proto11400116::Proto11400116(const Proto11400116& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400116::SharedCtor() {
  _cached_size_ = 0;
  item_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400116::~Proto11400116() {
  SharedDtor();
}

void Proto11400116::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400116::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400116::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400116_descriptor_;
}

const Proto11400116& Proto11400116::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto11400116* Proto11400116::default_instance_ = NULL;

Proto11400116* Proto11400116::New() const {
  return new Proto11400116;
}

void Proto11400116::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400116::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_index_)));
          set_has_item_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400116::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_index = 1;
  if (has_item_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400116::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_index = 1;
  if (has_item_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400116::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_index = 1;
    if (has_item_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400116::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400116* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400116*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400116::MergeFrom(const Proto11400116& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_index()) {
      set_item_index(from.item_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400116::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400116::CopyFrom(const Proto11400116& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400116::IsInitialized() const {
  
  return true;
}

void Proto11400116::Swap(Proto11400116* other) {
  if (other != this) {
    std::swap(item_index_, other->item_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400116::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400116_descriptor_;
  metadata.reflection = Proto11400116_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400335::kNameFieldNumber;
#endif  // !_MSC_VER

Proto51400335::Proto51400335()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400335::InitAsDefaultInstance() {
}

Proto51400335::Proto51400335(const Proto51400335& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400335::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400335::~Proto51400335() {
  SharedDtor();
}

void Proto51400335::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Proto51400335::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400335::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400335_descriptor_;
}

const Proto51400335& Proto51400335::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto51400335* Proto51400335::default_instance_ = NULL;

Proto51400335* Proto51400335::New() const {
  return new Proto51400335;
}

void Proto51400335::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400335::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400335::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400335::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400335::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400335::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400335* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400335*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400335::MergeFrom(const Proto51400335& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400335::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400335::CopyFrom(const Proto51400335& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400335::IsInitialized() const {
  
  return true;
}

void Proto51400335::Swap(Proto51400335* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400335::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400335_descriptor_;
  metadata.reflection = Proto51400335_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400114::kPixelXFieldNumber;
const int Proto10400114::kPixelYFieldNumber;
#endif  // !_MSC_VER

Proto10400114::Proto10400114()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400114::InitAsDefaultInstance() {
}

Proto10400114::Proto10400114(const Proto10400114& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400114::SharedCtor() {
  _cached_size_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400114::~Proto10400114() {
  SharedDtor();
}

void Proto10400114::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400114::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400114::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400114_descriptor_;
}

const Proto10400114& Proto10400114::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto10400114* Proto10400114::default_instance_ = NULL;

Proto10400114* Proto10400114::New() const {
  return new Proto10400114;
}

void Proto10400114::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pixel_x_ = 0;
    pixel_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400114::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pixel_x = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400114::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pixel_x = 1;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 2;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pixel_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400114::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pixel_x = 1;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 2;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pixel_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400114::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pixel_x = 1;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 2;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400114::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400114* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400114*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400114::MergeFrom(const Proto10400114& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400114::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400114::CopyFrom(const Proto10400114& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400114::IsInitialized() const {
  
  return true;
}

void Proto10400114::Swap(Proto10400114* other) {
  if (other != this) {
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400114::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400114_descriptor_;
  metadata.reflection = Proto10400114_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400117::kLoginDaysFieldNumber;
const int Proto51400117::kDrawDaysFieldNumber;
const int Proto51400117::kLoginRewardFieldNumber;
#endif  // !_MSC_VER

Proto51400117::Proto51400117()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400117::InitAsDefaultInstance() {
}

Proto51400117::Proto51400117(const Proto51400117& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400117::SharedCtor() {
  _cached_size_ = 0;
  login_days_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400117::~Proto51400117() {
  SharedDtor();
}

void Proto51400117::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400117::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400117::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400117_descriptor_;
}

const Proto51400117& Proto51400117::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto51400117* Proto51400117::default_instance_ = NULL;

Proto51400117* Proto51400117::New() const {
  return new Proto51400117;
}

void Proto51400117::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    login_days_ = 0;
  }
  draw_days_.Clear();
  login_reward_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400117::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 login_days = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &login_days_)));
          set_has_login_days();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_draw_days;
        break;
      }
      
      // repeated int32 draw_days = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_draw_days:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_draw_days())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_draw_days())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_draw_days;
        if (input->ExpectTag(26)) goto parse_login_reward;
        break;
      }
      
      // repeated .ProtoSevenDayItem login_reward = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_login_reward:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_login_reward()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_login_reward;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400117::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 login_days = 1;
  if (has_login_days()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->login_days(), output);
  }
  
  // repeated int32 draw_days = 2;
  for (int i = 0; i < this->draw_days_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->draw_days(i), output);
  }
  
  // repeated .ProtoSevenDayItem login_reward = 3;
  for (int i = 0; i < this->login_reward_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->login_reward(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400117::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 login_days = 1;
  if (has_login_days()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->login_days(), target);
  }
  
  // repeated int32 draw_days = 2;
  for (int i = 0; i < this->draw_days_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->draw_days(i), target);
  }
  
  // repeated .ProtoSevenDayItem login_reward = 3;
  for (int i = 0; i < this->login_reward_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->login_reward(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400117::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 login_days = 1;
    if (has_login_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->login_days());
    }
    
  }
  // repeated int32 draw_days = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->draw_days_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->draw_days(i));
    }
    total_size += 1 * this->draw_days_size() + data_size;
  }
  
  // repeated .ProtoSevenDayItem login_reward = 3;
  total_size += 1 * this->login_reward_size();
  for (int i = 0; i < this->login_reward_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->login_reward(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400117::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400117* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400117*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400117::MergeFrom(const Proto51400117& from) {
  GOOGLE_CHECK_NE(&from, this);
  draw_days_.MergeFrom(from.draw_days_);
  login_reward_.MergeFrom(from.login_reward_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_login_days()) {
      set_login_days(from.login_days());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400117::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400117::CopyFrom(const Proto51400117& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400117::IsInitialized() const {
  
  return true;
}

void Proto51400117::Swap(Proto51400117* other) {
  if (other != this) {
    std::swap(login_days_, other->login_days_);
    draw_days_.Swap(&other->draw_days_);
    login_reward_.Swap(&other->login_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400117::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400117_descriptor_;
  metadata.reflection = Proto51400117_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400118::kDrawDayFieldNumber;
#endif  // !_MSC_VER

Proto11400118::Proto11400118()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400118::InitAsDefaultInstance() {
}

Proto11400118::Proto11400118(const Proto11400118& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400118::SharedCtor() {
  _cached_size_ = 0;
  draw_day_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400118::~Proto11400118() {
  SharedDtor();
}

void Proto11400118::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400118::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400118::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400118_descriptor_;
}

const Proto11400118& Proto11400118::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto11400118* Proto11400118::default_instance_ = NULL;

Proto11400118* Proto11400118::New() const {
  return new Proto11400118;
}

void Proto11400118::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    draw_day_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400118::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 draw_day = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &draw_day_)));
          set_has_draw_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400118::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 draw_day = 1;
  if (has_draw_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->draw_day(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400118::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 draw_day = 1;
  if (has_draw_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->draw_day(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400118::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 draw_day = 1;
    if (has_draw_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->draw_day());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400118::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400118* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400118*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400118::MergeFrom(const Proto11400118& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_draw_day()) {
      set_draw_day(from.draw_day());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400118::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400118::CopyFrom(const Proto11400118& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400118::IsInitialized() const {
  
  return true;
}

void Proto11400118::Swap(Proto11400118* other) {
  if (other != this) {
    std::swap(draw_day_, other->draw_day_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400118::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400118_descriptor_;
  metadata.reflection = Proto11400118_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400118::kDrawDayFieldNumber;
const int Proto51400118::kItemIdFieldNumber;
#endif  // !_MSC_VER

Proto51400118::Proto51400118()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400118::InitAsDefaultInstance() {
}

Proto51400118::Proto51400118(const Proto51400118& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400118::SharedCtor() {
  _cached_size_ = 0;
  draw_day_ = 0;
  item_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400118::~Proto51400118() {
  SharedDtor();
}

void Proto51400118::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400118::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400118::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400118_descriptor_;
}

const Proto51400118& Proto51400118::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto51400118* Proto51400118::default_instance_ = NULL;

Proto51400118* Proto51400118::New() const {
  return new Proto51400118;
}

void Proto51400118::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    draw_day_ = 0;
    item_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400118::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 draw_day = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &draw_day_)));
          set_has_draw_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }
      
      // optional int32 item_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400118::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 draw_day = 1;
  if (has_draw_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->draw_day(), output);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400118::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 draw_day = 1;
  if (has_draw_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->draw_day(), target);
  }
  
  // optional int32 item_id = 2;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400118::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 draw_day = 1;
    if (has_draw_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->draw_day());
    }
    
    // optional int32 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400118::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400118* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400118*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400118::MergeFrom(const Proto51400118& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_draw_day()) {
      set_draw_day(from.draw_day());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400118::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400118::CopyFrom(const Proto51400118& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400118::IsInitialized() const {
  
  return true;
}

void Proto51400118::Swap(Proto51400118* other) {
  if (other != this) {
    std::swap(draw_day_, other->draw_day_);
    std::swap(item_id_, other->item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400118::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400118_descriptor_;
  metadata.reflection = Proto51400118_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400119::kRewardFlagFieldNumber;
#endif  // !_MSC_VER

Proto51400119::Proto51400119()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400119::InitAsDefaultInstance() {
}

Proto51400119::Proto51400119(const Proto51400119& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400119::SharedCtor() {
  _cached_size_ = 0;
  reward_flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400119::~Proto51400119() {
  SharedDtor();
}

void Proto51400119::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400119::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400119::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400119_descriptor_;
}

const Proto51400119& Proto51400119::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto51400119* Proto51400119::default_instance_ = NULL;

Proto51400119* Proto51400119::New() const {
  return new Proto51400119;
}

void Proto51400119::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    reward_flag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400119::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 reward_flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_flag_)));
          set_has_reward_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400119::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 reward_flag = 1;
  if (has_reward_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reward_flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400119::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 reward_flag = 1;
  if (has_reward_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reward_flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400119::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 reward_flag = 1;
    if (has_reward_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_flag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400119::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400119* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400119*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400119::MergeFrom(const Proto51400119& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward_flag()) {
      set_reward_flag(from.reward_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400119::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400119::CopyFrom(const Proto51400119& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400119::IsInitialized() const {
  
  return true;
}

void Proto51400119::Swap(Proto51400119* other) {
  if (other != this) {
    std::swap(reward_flag_, other->reward_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400119::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400119_descriptor_;
  metadata.reflection = Proto51400119_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400107::kLastestTaskIdFieldNumber;
#endif  // !_MSC_VER

Proto81400107::Proto81400107()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400107::InitAsDefaultInstance() {
}

Proto81400107::Proto81400107(const Proto81400107& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400107::SharedCtor() {
  _cached_size_ = 0;
  lastest_task_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400107::~Proto81400107() {
  SharedDtor();
}

void Proto81400107::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400107::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400107::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400107_descriptor_;
}

const Proto81400107& Proto81400107::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto81400107* Proto81400107::default_instance_ = NULL;

Proto81400107* Proto81400107::New() const {
  return new Proto81400107;
}

void Proto81400107::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    lastest_task_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400107::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 lastest_task_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lastest_task_id_)));
          set_has_lastest_task_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400107::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 lastest_task_id = 1;
  if (has_lastest_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lastest_task_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400107::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 lastest_task_id = 1;
  if (has_lastest_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lastest_task_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400107::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 lastest_task_id = 1;
    if (has_lastest_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lastest_task_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400107::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400107* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400107*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400107::MergeFrom(const Proto81400107& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lastest_task_id()) {
      set_lastest_task_id(from.lastest_task_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400107::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400107::CopyFrom(const Proto81400107& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400107::IsInitialized() const {
  
  return true;
}

void Proto81400107::Swap(Proto81400107* other) {
  if (other != this) {
    std::swap(lastest_task_id_, other->lastest_task_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400107::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400107_descriptor_;
  metadata.reflection = Proto81400107_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400219::kTextIdFieldNumber;
#endif  // !_MSC_VER

Proto80400219::Proto80400219()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400219::InitAsDefaultInstance() {
}

Proto80400219::Proto80400219(const Proto80400219& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400219::SharedCtor() {
  _cached_size_ = 0;
  text_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400219::~Proto80400219() {
  SharedDtor();
}

void Proto80400219::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400219::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400219::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400219_descriptor_;
}

const Proto80400219& Proto80400219::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto80400219* Proto80400219::default_instance_ = NULL;

Proto80400219* Proto80400219::New() const {
  return new Proto80400219;
}

void Proto80400219::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    text_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400219::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 text_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &text_id_)));
          set_has_text_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400219::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 text_id = 1;
  if (has_text_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->text_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400219::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 text_id = 1;
  if (has_text_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->text_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400219::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 text_id = 1;
    if (has_text_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->text_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400219::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400219* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400219*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400219::MergeFrom(const Proto80400219& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_text_id()) {
      set_text_id(from.text_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400219::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400219::CopyFrom(const Proto80400219& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400219::IsInitialized() const {
  
  return true;
}

void Proto80400219::Swap(Proto80400219* other) {
  if (other != this) {
    std::swap(text_id_, other->text_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400219::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400219_descriptor_;
  metadata.reflection = Proto80400219_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50999999::kMsecFieldNumber;
const int Proto50999999::kDropReasonFieldNumber;
const int Proto50999999::kBanTypeFieldNumber;
const int Proto50999999::kBanStrFieldNumber;
#endif  // !_MSC_VER

Proto50999999::Proto50999999()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50999999::InitAsDefaultInstance() {
}

Proto50999999::Proto50999999(const Proto50999999& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50999999::SharedCtor() {
  _cached_size_ = 0;
  msec_ = 0;
  drop_reason_ = 0;
  ban_type_ = 0;
  ban_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50999999::~Proto50999999() {
  SharedDtor();
}

void Proto50999999::SharedDtor() {
  if (ban_str_ != &::google::protobuf::internal::kEmptyString) {
    delete ban_str_;
  }
  if (this != default_instance_) {
  }
}

void Proto50999999::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50999999::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50999999_descriptor_;
}

const Proto50999999& Proto50999999::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto50999999* Proto50999999::default_instance_ = NULL;

Proto50999999* Proto50999999::New() const {
  return new Proto50999999;
}

void Proto50999999::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    msec_ = 0;
    drop_reason_ = 0;
    ban_type_ = 0;
    if (has_ban_str()) {
      if (ban_str_ != &::google::protobuf::internal::kEmptyString) {
        ban_str_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50999999::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 msec = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msec_)));
          set_has_msec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_drop_reason;
        break;
      }
      
      // optional int32 drop_reason = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_drop_reason:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &drop_reason_)));
          set_has_drop_reason();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_ban_type;
        break;
      }
      
      // optional int32 ban_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ban_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ban_type_)));
          set_has_ban_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_ban_str;
        break;
      }
      
      // optional string ban_str = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ban_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ban_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->ban_str().data(), this->ban_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50999999::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 msec = 1;
  if (has_msec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msec(), output);
  }
  
  // optional int32 drop_reason = 2;
  if (has_drop_reason()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->drop_reason(), output);
  }
  
  // optional int32 ban_type = 3;
  if (has_ban_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ban_type(), output);
  }
  
  // optional string ban_str = 4;
  if (has_ban_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ban_str().data(), this->ban_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->ban_str(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50999999::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 msec = 1;
  if (has_msec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msec(), target);
  }
  
  // optional int32 drop_reason = 2;
  if (has_drop_reason()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->drop_reason(), target);
  }
  
  // optional int32 ban_type = 3;
  if (has_ban_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ban_type(), target);
  }
  
  // optional string ban_str = 4;
  if (has_ban_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->ban_str().data(), this->ban_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ban_str(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50999999::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 msec = 1;
    if (has_msec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msec());
    }
    
    // optional int32 drop_reason = 2;
    if (has_drop_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->drop_reason());
    }
    
    // optional int32 ban_type = 3;
    if (has_ban_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ban_type());
    }
    
    // optional string ban_str = 4;
    if (has_ban_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ban_str());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50999999::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50999999* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50999999*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50999999::MergeFrom(const Proto50999999& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msec()) {
      set_msec(from.msec());
    }
    if (from.has_drop_reason()) {
      set_drop_reason(from.drop_reason());
    }
    if (from.has_ban_type()) {
      set_ban_type(from.ban_type());
    }
    if (from.has_ban_str()) {
      set_ban_str(from.ban_str());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50999999::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50999999::CopyFrom(const Proto50999999& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50999999::IsInitialized() const {
  
  return true;
}

void Proto50999999::Swap(Proto50999999* other) {
  if (other != this) {
    std::swap(msec_, other->msec_);
    std::swap(drop_reason_, other->drop_reason_);
    std::swap(ban_type_, other->ban_type_);
    std::swap(ban_str_, other->ban_str_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50999999::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50999999_descriptor_;
  metadata.reflection = Proto50999999_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400220::kFighterIdFieldNumber;
const int Proto80400220::kSkillIdFieldNumber;
const int Proto80400220::kSkillLevelFieldNumber;
const int Proto80400220::kSkillPixelXFieldNumber;
const int Proto80400220::kSkillPixelYFieldNumber;
const int Proto80400220::kTargetListFieldNumber;
#endif  // !_MSC_VER

Proto80400220::Proto80400220()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400220::InitAsDefaultInstance() {
}

Proto80400220::Proto80400220(const Proto80400220& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400220::SharedCtor() {
  _cached_size_ = 0;
  fighter_id_ = GOOGLE_LONGLONG(0);
  skill_id_ = 0;
  skill_level_ = 0;
  skill_pixel_x_ = 0;
  skill_pixel_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400220::~Proto80400220() {
  SharedDtor();
}

void Proto80400220::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400220::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400220::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400220_descriptor_;
}

const Proto80400220& Proto80400220::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto80400220* Proto80400220::default_instance_ = NULL;

Proto80400220* Proto80400220::New() const {
  return new Proto80400220;
}

void Proto80400220::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fighter_id_ = GOOGLE_LONGLONG(0);
    skill_id_ = 0;
    skill_level_ = 0;
    skill_pixel_x_ = 0;
    skill_pixel_y_ = 0;
  }
  target_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400220::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 fighter_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fighter_id_)));
          set_has_fighter_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_skill_id;
        break;
      }
      
      // optional int32 skill_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_skill_level;
        break;
      }
      
      // optional int32 skill_level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_level_)));
          set_has_skill_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_skill_pixel_x;
        break;
      }
      
      // optional int32 skill_pixel_x = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_pixel_x_)));
          set_has_skill_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_skill_pixel_y;
        break;
      }
      
      // optional int32 skill_pixel_y = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_pixel_y_)));
          set_has_skill_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_target_list;
        break;
      }
      
      // repeated .ProtoSkillTarget target_list = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_target_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_target_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_target_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400220::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->fighter_id(), output);
  }
  
  // optional int32 skill_id = 2;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skill_id(), output);
  }
  
  // optional int32 skill_level = 3;
  if (has_skill_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skill_level(), output);
  }
  
  // optional int32 skill_pixel_x = 4;
  if (has_skill_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->skill_pixel_x(), output);
  }
  
  // optional int32 skill_pixel_y = 5;
  if (has_skill_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->skill_pixel_y(), output);
  }
  
  // repeated .ProtoSkillTarget target_list = 6;
  for (int i = 0; i < this->target_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->target_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400220::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->fighter_id(), target);
  }
  
  // optional int32 skill_id = 2;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skill_id(), target);
  }
  
  // optional int32 skill_level = 3;
  if (has_skill_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skill_level(), target);
  }
  
  // optional int32 skill_pixel_x = 4;
  if (has_skill_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->skill_pixel_x(), target);
  }
  
  // optional int32 skill_pixel_y = 5;
  if (has_skill_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->skill_pixel_y(), target);
  }
  
  // repeated .ProtoSkillTarget target_list = 6;
  for (int i = 0; i < this->target_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->target_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400220::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 fighter_id = 1;
    if (has_fighter_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fighter_id());
    }
    
    // optional int32 skill_id = 2;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
    // optional int32 skill_level = 3;
    if (has_skill_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_level());
    }
    
    // optional int32 skill_pixel_x = 4;
    if (has_skill_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_pixel_x());
    }
    
    // optional int32 skill_pixel_y = 5;
    if (has_skill_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_pixel_y());
    }
    
  }
  // repeated .ProtoSkillTarget target_list = 6;
  total_size += 1 * this->target_list_size();
  for (int i = 0; i < this->target_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->target_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400220::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400220* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400220*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400220::MergeFrom(const Proto80400220& from) {
  GOOGLE_CHECK_NE(&from, this);
  target_list_.MergeFrom(from.target_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fighter_id()) {
      set_fighter_id(from.fighter_id());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_skill_level()) {
      set_skill_level(from.skill_level());
    }
    if (from.has_skill_pixel_x()) {
      set_skill_pixel_x(from.skill_pixel_x());
    }
    if (from.has_skill_pixel_y()) {
      set_skill_pixel_y(from.skill_pixel_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400220::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400220::CopyFrom(const Proto80400220& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400220::IsInitialized() const {
  
  return true;
}

void Proto80400220::Swap(Proto80400220* other) {
  if (other != this) {
    std::swap(fighter_id_, other->fighter_id_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(skill_level_, other->skill_level_);
    std::swap(skill_pixel_x_, other->skill_pixel_x_);
    std::swap(skill_pixel_y_, other->skill_pixel_y_);
    target_list_.Swap(&other->target_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400220::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400220_descriptor_;
  metadata.reflection = Proto80400220_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400916::kReliveModeFieldNumber;
#endif  // !_MSC_VER

Proto10400916::Proto10400916()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400916::InitAsDefaultInstance() {
}

Proto10400916::Proto10400916(const Proto10400916& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400916::SharedCtor() {
  _cached_size_ = 0;
  relive_mode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400916::~Proto10400916() {
  SharedDtor();
}

void Proto10400916::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400916::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400916::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400916_descriptor_;
}

const Proto10400916& Proto10400916::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto10400916* Proto10400916::default_instance_ = NULL;

Proto10400916* Proto10400916::New() const {
  return new Proto10400916;
}

void Proto10400916::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    relive_mode_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400916::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 relive_mode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &relive_mode_)));
          set_has_relive_mode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400916::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 relive_mode = 1;
  if (has_relive_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->relive_mode(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400916::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 relive_mode = 1;
  if (has_relive_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->relive_mode(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400916::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 relive_mode = 1;
    if (has_relive_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->relive_mode());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400916::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400916* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400916*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400916::MergeFrom(const Proto10400916& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_relive_mode()) {
      set_relive_mode(from.relive_mode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400916::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400916::CopyFrom(const Proto10400916& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400916::IsInitialized() const {
  
  return true;
}

void Proto10400916::Swap(Proto10400916* other) {
  if (other != this) {
    std::swap(relive_mode_, other->relive_mode_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400916::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400916_descriptor_;
  metadata.reflection = Proto10400916_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400916::kGoldFieldNumber;
const int Proto50400916::kBloodPercentFieldNumber;
const int Proto50400916::kItemIdFieldNumber;
const int Proto50400916::kItemNumFieldNumber;
const int Proto50400916::kReliveNFieldNumber;
const int Proto50400916::kReliveTotalFieldNumber;
#endif  // !_MSC_VER

Proto50400916::Proto50400916()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400916::InitAsDefaultInstance() {
}

Proto50400916::Proto50400916(const Proto50400916& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400916::SharedCtor() {
  _cached_size_ = 0;
  gold_ = 0;
  blood_percent_ = 0;
  item_id_ = 0;
  item_num_ = 0;
  relive_n_ = 0;
  relive_total_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400916::~Proto50400916() {
  SharedDtor();
}

void Proto50400916::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400916::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400916::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400916_descriptor_;
}

const Proto50400916& Proto50400916::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto50400916* Proto50400916::default_instance_ = NULL;

Proto50400916* Proto50400916::New() const {
  return new Proto50400916;
}

void Proto50400916::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gold_ = 0;
    blood_percent_ = 0;
    item_id_ = 0;
    item_num_ = 0;
    relive_n_ = 0;
    relive_total_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400916::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 gold = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_blood_percent;
        break;
      }
      
      // optional int32 blood_percent = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_blood_percent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blood_percent_)));
          set_has_blood_percent();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_id;
        break;
      }
      
      // optional int32 item_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_item_num;
        break;
      }
      
      // optional int32 item_num = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_num_)));
          set_has_item_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_relive_n;
        break;
      }
      
      // optional int32 relive_n = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_relive_n:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &relive_n_)));
          set_has_relive_n();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_relive_total;
        break;
      }
      
      // optional int32 relive_total = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_relive_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &relive_total_)));
          set_has_relive_total();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400916::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 gold = 1;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gold(), output);
  }
  
  // optional int32 blood_percent = 2;
  if (has_blood_percent()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->blood_percent(), output);
  }
  
  // optional int32 item_id = 3;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_id(), output);
  }
  
  // optional int32 item_num = 4;
  if (has_item_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->item_num(), output);
  }
  
  // optional int32 relive_n = 5;
  if (has_relive_n()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->relive_n(), output);
  }
  
  // optional int32 relive_total = 6;
  if (has_relive_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->relive_total(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400916::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 gold = 1;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gold(), target);
  }
  
  // optional int32 blood_percent = 2;
  if (has_blood_percent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->blood_percent(), target);
  }
  
  // optional int32 item_id = 3;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_id(), target);
  }
  
  // optional int32 item_num = 4;
  if (has_item_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->item_num(), target);
  }
  
  // optional int32 relive_n = 5;
  if (has_relive_n()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->relive_n(), target);
  }
  
  // optional int32 relive_total = 6;
  if (has_relive_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->relive_total(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400916::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 gold = 1;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }
    
    // optional int32 blood_percent = 2;
    if (has_blood_percent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->blood_percent());
    }
    
    // optional int32 item_id = 3;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 item_num = 4;
    if (has_item_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_num());
    }
    
    // optional int32 relive_n = 5;
    if (has_relive_n()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->relive_n());
    }
    
    // optional int32 relive_total = 6;
    if (has_relive_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->relive_total());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400916::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400916* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400916*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400916::MergeFrom(const Proto50400916& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_blood_percent()) {
      set_blood_percent(from.blood_percent());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_item_num()) {
      set_item_num(from.item_num());
    }
    if (from.has_relive_n()) {
      set_relive_n(from.relive_n());
    }
    if (from.has_relive_total()) {
      set_relive_total(from.relive_total());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400916::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400916::CopyFrom(const Proto50400916& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400916::IsInitialized() const {
  
  return true;
}

void Proto50400916::Swap(Proto50400916* other) {
  if (other != this) {
    std::swap(gold_, other->gold_);
    std::swap(blood_percent_, other->blood_percent_);
    std::swap(item_id_, other->item_id_);
    std::swap(item_num_, other->item_num_);
    std::swap(relive_n_, other->relive_n_);
    std::swap(relive_total_, other->relive_total_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400916::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400916_descriptor_;
  metadata.reflection = Proto50400916_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401421::kKeysFieldNumber;
#endif  // !_MSC_VER

Proto51401421::Proto51401421()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401421::InitAsDefaultInstance() {
}

Proto51401421::Proto51401421(const Proto51401421& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401421::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401421::~Proto51401421() {
  SharedDtor();
}

void Proto51401421::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401421::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401421::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401421_descriptor_;
}

const Proto51401421& Proto51401421::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto51401421* Proto51401421::default_instance_ = NULL;

Proto51401421* Proto51401421::New() const {
  return new Proto51401421;
}

void Proto51401421::Clear() {
  keys_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401421::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string keys = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_keys:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_keys()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->keys(0).data(), this->keys(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_keys;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401421::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string keys = 1;
  for (int i = 0; i < this->keys_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->keys(i).data(), this->keys(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->keys(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401421::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string keys = 1;
  for (int i = 0; i < this->keys_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->keys(i).data(), this->keys(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->keys(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401421::ByteSize() const {
  int total_size = 0;
  
  // repeated string keys = 1;
  total_size += 1 * this->keys_size();
  for (int i = 0; i < this->keys_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->keys(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401421::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401421* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401421*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401421::MergeFrom(const Proto51401421& from) {
  GOOGLE_CHECK_NE(&from, this);
  keys_.MergeFrom(from.keys_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401421::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401421::CopyFrom(const Proto51401421& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401421::IsInitialized() const {
  
  return true;
}

void Proto51401421::Swap(Proto51401421* other) {
  if (other != this) {
    keys_.Swap(&other->keys_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401421::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401421_descriptor_;
  metadata.reflection = Proto51401421_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100103::kUpdateTypeFieldNumber;
const int Proto80100103::kBeastIdFieldNumber;
const int Proto80100103::kValueFieldNumber;
#endif  // !_MSC_VER

Proto80100103::Proto80100103()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100103::InitAsDefaultInstance() {
}

Proto80100103::Proto80100103(const Proto80100103& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100103::SharedCtor() {
  _cached_size_ = 0;
  update_type_ = 0;
  beast_id_ = GOOGLE_LONGLONG(0);
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100103::~Proto80100103() {
  SharedDtor();
}

void Proto80100103::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80100103::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100103::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100103_descriptor_;
}

const Proto80100103& Proto80100103::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto80100103* Proto80100103::default_instance_ = NULL;

Proto80100103* Proto80100103::New() const {
  return new Proto80100103;
}

void Proto80100103::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    update_type_ = 0;
    beast_id_ = GOOGLE_LONGLONG(0);
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100103::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 update_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &update_type_)));
          set_has_update_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_beast_id;
        break;
      }
      
      // optional int64 beast_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_value;
        break;
      }
      
      // optional int32 value = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100103::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 update_type = 1;
  if (has_update_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->update_type(), output);
  }
  
  // optional int64 beast_id = 2;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->beast_id(), output);
  }
  
  // optional int32 value = 3;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100103::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 update_type = 1;
  if (has_update_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->update_type(), target);
  }
  
  // optional int64 beast_id = 2;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->beast_id(), target);
  }
  
  // optional int32 value = 3;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100103::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 update_type = 1;
    if (has_update_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->update_type());
    }
    
    // optional int64 beast_id = 2;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
    // optional int32 value = 3;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100103::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100103* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100103*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100103::MergeFrom(const Proto80100103& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_update_type()) {
      set_update_type(from.update_type());
    }
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100103::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100103::CopyFrom(const Proto80100103& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100103::IsInitialized() const {
  
  return true;
}

void Proto80100103::Swap(Proto80100103* other) {
  if (other != this) {
    std::swap(update_type_, other->update_type_);
    std::swap(beast_id_, other->beast_id_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100103::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100103_descriptor_;
  metadata.reflection = Proto80100103_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400201::kTaskIdFieldNumber;
#endif  // !_MSC_VER

Proto81400201::Proto81400201()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400201::InitAsDefaultInstance() {
}

Proto81400201::Proto81400201(const Proto81400201& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400201::SharedCtor() {
  _cached_size_ = 0;
  task_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400201::~Proto81400201() {
  SharedDtor();
}

void Proto81400201::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400201::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400201::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400201_descriptor_;
}

const Proto81400201& Proto81400201::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto81400201* Proto81400201::default_instance_ = NULL;

Proto81400201* Proto81400201::New() const {
  return new Proto81400201;
}

void Proto81400201::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    task_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400201::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 task_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
          set_has_task_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400201::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->task_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400201::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->task_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400201::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 task_id = 1;
    if (has_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400201::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400201* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400201*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400201::MergeFrom(const Proto81400201& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_task_id()) {
      set_task_id(from.task_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400201::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400201::CopyFrom(const Proto81400201& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400201::IsInitialized() const {
  
  return true;
}

void Proto81400201::Swap(Proto81400201* other) {
  if (other != this) {
    std::swap(task_id_, other->task_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400201::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400201_descriptor_;
  metadata.reflection = Proto81400201_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400656::kFashionIdFieldNumber;
#endif  // !_MSC_VER

Proto11400656::Proto11400656()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400656::InitAsDefaultInstance() {
}

Proto11400656::Proto11400656(const Proto11400656& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400656::SharedCtor() {
  _cached_size_ = 0;
  fashion_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400656::~Proto11400656() {
  SharedDtor();
}

void Proto11400656::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400656::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400656::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400656_descriptor_;
}

const Proto11400656& Proto11400656::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto11400656* Proto11400656::default_instance_ = NULL;

Proto11400656* Proto11400656::New() const {
  return new Proto11400656;
}

void Proto11400656::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fashion_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400656::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fashion_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400656::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fashion_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400656::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fashion_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400656::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fashion_id = 1;
    if (has_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400656::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400656* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400656*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400656::MergeFrom(const Proto11400656& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400656::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400656::CopyFrom(const Proto11400656& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400656::IsInitialized() const {
  
  return true;
}

void Proto11400656::Swap(Proto11400656* other) {
  if (other != this) {
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400656::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400656_descriptor_;
  metadata.reflection = Proto11400656_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400656::kFashionIdFieldNumber;
const int Proto51400656::kMallGoldPriceFieldNumber;
const int Proto51400656::kCanConvertFieldNumber;
const int Proto51400656::kConvertMartialIdFieldNumber;
const int Proto51400656::kConvertMartialAmountFieldNumber;
const int Proto51400656::kConvertMartialPriceFieldNumber;
const int Proto51400656::kFashionMallTypeFieldNumber;
const int Proto51400656::kMartialMallTypeFieldNumber;
#endif  // !_MSC_VER

Proto51400656::Proto51400656()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400656::InitAsDefaultInstance() {
}

Proto51400656::Proto51400656(const Proto51400656& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400656::SharedCtor() {
  _cached_size_ = 0;
  fashion_id_ = 0;
  mall_gold_price_ = 0;
  can_convert_ = 0;
  convert_martial_id_ = 0;
  convert_martial_amount_ = 0;
  convert_martial_price_ = 0;
  fashion_mall_type_ = 0;
  martial_mall_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400656::~Proto51400656() {
  SharedDtor();
}

void Proto51400656::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400656::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400656::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400656_descriptor_;
}

const Proto51400656& Proto51400656::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto51400656* Proto51400656::default_instance_ = NULL;

Proto51400656* Proto51400656::New() const {
  return new Proto51400656;
}

void Proto51400656::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fashion_id_ = 0;
    mall_gold_price_ = 0;
    can_convert_ = 0;
    convert_martial_id_ = 0;
    convert_martial_amount_ = 0;
    convert_martial_price_ = 0;
    fashion_mall_type_ = 0;
    martial_mall_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400656::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fashion_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_mall_gold_price;
        break;
      }
      
      // optional int32 mall_gold_price = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mall_gold_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mall_gold_price_)));
          set_has_mall_gold_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_can_convert;
        break;
      }
      
      // optional int32 can_convert = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_can_convert:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &can_convert_)));
          set_has_can_convert();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_convert_martial_id;
        break;
      }
      
      // optional int32 convert_martial_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_convert_martial_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &convert_martial_id_)));
          set_has_convert_martial_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_convert_martial_amount;
        break;
      }
      
      // optional int32 convert_martial_amount = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_convert_martial_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &convert_martial_amount_)));
          set_has_convert_martial_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_convert_martial_price;
        break;
      }
      
      // optional int32 convert_martial_price = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_convert_martial_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &convert_martial_price_)));
          set_has_convert_martial_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_fashion_mall_type;
        break;
      }
      
      // optional int32 fashion_mall_type = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_mall_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_mall_type_)));
          set_has_fashion_mall_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_martial_mall_type;
        break;
      }
      
      // optional int32 martial_mall_type = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_martial_mall_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &martial_mall_type_)));
          set_has_martial_mall_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400656::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fashion_id(), output);
  }
  
  // optional int32 mall_gold_price = 2;
  if (has_mall_gold_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mall_gold_price(), output);
  }
  
  // optional int32 can_convert = 3;
  if (has_can_convert()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->can_convert(), output);
  }
  
  // optional int32 convert_martial_id = 4;
  if (has_convert_martial_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->convert_martial_id(), output);
  }
  
  // optional int32 convert_martial_amount = 5;
  if (has_convert_martial_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->convert_martial_amount(), output);
  }
  
  // optional int32 convert_martial_price = 6;
  if (has_convert_martial_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->convert_martial_price(), output);
  }
  
  // optional int32 fashion_mall_type = 7;
  if (has_fashion_mall_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->fashion_mall_type(), output);
  }
  
  // optional int32 martial_mall_type = 8;
  if (has_martial_mall_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->martial_mall_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400656::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fashion_id(), target);
  }
  
  // optional int32 mall_gold_price = 2;
  if (has_mall_gold_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mall_gold_price(), target);
  }
  
  // optional int32 can_convert = 3;
  if (has_can_convert()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->can_convert(), target);
  }
  
  // optional int32 convert_martial_id = 4;
  if (has_convert_martial_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->convert_martial_id(), target);
  }
  
  // optional int32 convert_martial_amount = 5;
  if (has_convert_martial_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->convert_martial_amount(), target);
  }
  
  // optional int32 convert_martial_price = 6;
  if (has_convert_martial_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->convert_martial_price(), target);
  }
  
  // optional int32 fashion_mall_type = 7;
  if (has_fashion_mall_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->fashion_mall_type(), target);
  }
  
  // optional int32 martial_mall_type = 8;
  if (has_martial_mall_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->martial_mall_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400656::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fashion_id = 1;
    if (has_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
    // optional int32 mall_gold_price = 2;
    if (has_mall_gold_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mall_gold_price());
    }
    
    // optional int32 can_convert = 3;
    if (has_can_convert()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->can_convert());
    }
    
    // optional int32 convert_martial_id = 4;
    if (has_convert_martial_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->convert_martial_id());
    }
    
    // optional int32 convert_martial_amount = 5;
    if (has_convert_martial_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->convert_martial_amount());
    }
    
    // optional int32 convert_martial_price = 6;
    if (has_convert_martial_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->convert_martial_price());
    }
    
    // optional int32 fashion_mall_type = 7;
    if (has_fashion_mall_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_mall_type());
    }
    
    // optional int32 martial_mall_type = 8;
    if (has_martial_mall_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->martial_mall_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400656::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400656* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400656*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400656::MergeFrom(const Proto51400656& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
    if (from.has_mall_gold_price()) {
      set_mall_gold_price(from.mall_gold_price());
    }
    if (from.has_can_convert()) {
      set_can_convert(from.can_convert());
    }
    if (from.has_convert_martial_id()) {
      set_convert_martial_id(from.convert_martial_id());
    }
    if (from.has_convert_martial_amount()) {
      set_convert_martial_amount(from.convert_martial_amount());
    }
    if (from.has_convert_martial_price()) {
      set_convert_martial_price(from.convert_martial_price());
    }
    if (from.has_fashion_mall_type()) {
      set_fashion_mall_type(from.fashion_mall_type());
    }
    if (from.has_martial_mall_type()) {
      set_martial_mall_type(from.martial_mall_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400656::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400656::CopyFrom(const Proto51400656& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400656::IsInitialized() const {
  
  return true;
}

void Proto51400656::Swap(Proto51400656* other) {
  if (other != this) {
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(mall_gold_price_, other->mall_gold_price_);
    std::swap(can_convert_, other->can_convert_);
    std::swap(convert_martial_id_, other->convert_martial_id_);
    std::swap(convert_martial_amount_, other->convert_martial_amount_);
    std::swap(convert_martial_price_, other->convert_martial_price_);
    std::swap(fashion_mall_type_, other->fashion_mall_type_);
    std::swap(martial_mall_type_, other->martial_mall_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400656::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400656_descriptor_;
  metadata.reflection = Proto51400656_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100632::kAutoAcceptFieldNumber;
const int Proto10100632::kAcceptForceFieldNumber;
#endif  // !_MSC_VER

Proto10100632::Proto10100632()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100632::InitAsDefaultInstance() {
}

Proto10100632::Proto10100632(const Proto10100632& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100632::SharedCtor() {
  _cached_size_ = 0;
  auto_accept_ = 0;
  accept_force_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100632::~Proto10100632() {
  SharedDtor();
}

void Proto10100632::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100632::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100632::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100632_descriptor_;
}

const Proto10100632& Proto10100632::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto10100632* Proto10100632::default_instance_ = NULL;

Proto10100632* Proto10100632::New() const {
  return new Proto10100632;
}

void Proto10100632::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    auto_accept_ = 0;
    accept_force_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100632::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 auto_accept = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_accept_)));
          set_has_auto_accept();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_accept_force;
        break;
      }
      
      // optional int32 accept_force = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_accept_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &accept_force_)));
          set_has_accept_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100632::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 auto_accept = 1;
  if (has_auto_accept()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->auto_accept(), output);
  }
  
  // optional int32 accept_force = 2;
  if (has_accept_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->accept_force(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100632::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 auto_accept = 1;
  if (has_auto_accept()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->auto_accept(), target);
  }
  
  // optional int32 accept_force = 2;
  if (has_accept_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->accept_force(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100632::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 auto_accept = 1;
    if (has_auto_accept()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_accept());
    }
    
    // optional int32 accept_force = 2;
    if (has_accept_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->accept_force());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100632::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100632* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100632*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100632::MergeFrom(const Proto10100632& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_auto_accept()) {
      set_auto_accept(from.auto_accept());
    }
    if (from.has_accept_force()) {
      set_accept_force(from.accept_force());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100632::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100632::CopyFrom(const Proto10100632& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100632::IsInitialized() const {
  
  return true;
}

void Proto10100632::Swap(Proto10100632* other) {
  if (other != this) {
    std::swap(auto_accept_, other->auto_accept_);
    std::swap(accept_force_, other->accept_force_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100632::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100632_descriptor_;
  metadata.reflection = Proto10100632_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400604::kFightForceFieldNumber;
const int Proto81400604::kPropMapFieldNumber;
#endif  // !_MSC_VER

Proto81400604::Proto81400604()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400604::InitAsDefaultInstance() {
}

Proto81400604::Proto81400604(const Proto81400604& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400604::SharedCtor() {
  _cached_size_ = 0;
  fight_force_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400604::~Proto81400604() {
  SharedDtor();
}

void Proto81400604::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400604::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400604::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400604_descriptor_;
}

const Proto81400604& Proto81400604::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto81400604* Proto81400604::default_instance_ = NULL;

Proto81400604* Proto81400604::New() const {
  return new Proto81400604;
}

void Proto81400604::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fight_force_ = 0;
  }
  prop_map_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400604::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fight_force = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_force_)));
          set_has_fight_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_prop_map;
        break;
      }
      
      // repeated .ProtoPairObj prop_map = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prop_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prop_map()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_prop_map;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400604::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fight_force = 1;
  if (has_fight_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fight_force(), output);
  }
  
  // repeated .ProtoPairObj prop_map = 2;
  for (int i = 0; i < this->prop_map_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->prop_map(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400604::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fight_force = 1;
  if (has_fight_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fight_force(), target);
  }
  
  // repeated .ProtoPairObj prop_map = 2;
  for (int i = 0; i < this->prop_map_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->prop_map(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400604::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fight_force = 1;
    if (has_fight_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_force());
    }
    
  }
  // repeated .ProtoPairObj prop_map = 2;
  total_size += 1 * this->prop_map_size();
  for (int i = 0; i < this->prop_map_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prop_map(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400604::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400604* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400604*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400604::MergeFrom(const Proto81400604& from) {
  GOOGLE_CHECK_NE(&from, this);
  prop_map_.MergeFrom(from.prop_map_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fight_force()) {
      set_fight_force(from.fight_force());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400604::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400604::CopyFrom(const Proto81400604& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400604::IsInitialized() const {
  
  return true;
}

void Proto81400604::Swap(Proto81400604* other) {
  if (other != this) {
    std::swap(fight_force_, other->fight_force_);
    prop_map_.Swap(&other->prop_map_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400604::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400604_descriptor_;
  metadata.reflection = Proto81400604_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100025::kFashionIdFieldNumber;
#endif  // !_MSC_VER

Proto10100025::Proto10100025()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100025::InitAsDefaultInstance() {
}

Proto10100025::Proto10100025(const Proto10100025& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100025::SharedCtor() {
  _cached_size_ = 0;
  fashion_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100025::~Proto10100025() {
  SharedDtor();
}

void Proto10100025::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100025::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100025::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100025_descriptor_;
}

const Proto10100025& Proto10100025::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto10100025* Proto10100025::default_instance_ = NULL;

Proto10100025* Proto10100025::New() const {
  return new Proto10100025;
}

void Proto10100025::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fashion_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100025::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fashion_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100025::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fashion_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100025::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fashion_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100025::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fashion_id = 1;
    if (has_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100025::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100025* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100025*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100025::MergeFrom(const Proto10100025& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100025::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100025::CopyFrom(const Proto10100025& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100025::IsInitialized() const {
  
  return true;
}

void Proto10100025::Swap(Proto10100025* other) {
  if (other != this) {
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100025::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100025_descriptor_;
  metadata.reflection = Proto10100025_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100025::kFashionIdFieldNumber;
const int Proto50100025::kPkgTypeFieldNumber;
const int Proto50100025::kPkgIndexFieldNumber;
const int Proto50100025::kFashionPartFieldNumber;
#endif  // !_MSC_VER

Proto50100025::Proto50100025()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100025::InitAsDefaultInstance() {
}

Proto50100025::Proto50100025(const Proto50100025& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100025::SharedCtor() {
  _cached_size_ = 0;
  fashion_id_ = 0;
  pkg_type_ = 0;
  pkg_index_ = 0;
  fashion_part_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100025::~Proto50100025() {
  SharedDtor();
}

void Proto50100025::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100025::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100025::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100025_descriptor_;
}

const Proto50100025& Proto50100025::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto50100025* Proto50100025::default_instance_ = NULL;

Proto50100025* Proto50100025::New() const {
  return new Proto50100025;
}

void Proto50100025::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fashion_id_ = 0;
    pkg_type_ = 0;
    pkg_index_ = 0;
    fashion_part_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100025::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fashion_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pkg_type;
        break;
      }
      
      // optional int32 pkg_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_type_)));
          set_has_pkg_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pkg_index;
        break;
      }
      
      // optional int32 pkg_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pkg_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pkg_index_)));
          set_has_pkg_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_fashion_part;
        break;
      }
      
      // optional int32 fashion_part = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_part:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_part_)));
          set_has_fashion_part();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100025::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fashion_id(), output);
  }
  
  // optional int32 pkg_type = 2;
  if (has_pkg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pkg_type(), output);
  }
  
  // optional int32 pkg_index = 3;
  if (has_pkg_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pkg_index(), output);
  }
  
  // optional int32 fashion_part = 4;
  if (has_fashion_part()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->fashion_part(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100025::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fashion_id(), target);
  }
  
  // optional int32 pkg_type = 2;
  if (has_pkg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pkg_type(), target);
  }
  
  // optional int32 pkg_index = 3;
  if (has_pkg_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pkg_index(), target);
  }
  
  // optional int32 fashion_part = 4;
  if (has_fashion_part()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->fashion_part(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100025::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fashion_id = 1;
    if (has_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
    // optional int32 pkg_type = 2;
    if (has_pkg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_type());
    }
    
    // optional int32 pkg_index = 3;
    if (has_pkg_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pkg_index());
    }
    
    // optional int32 fashion_part = 4;
    if (has_fashion_part()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_part());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100025::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100025* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100025*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100025::MergeFrom(const Proto50100025& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
    if (from.has_pkg_type()) {
      set_pkg_type(from.pkg_type());
    }
    if (from.has_pkg_index()) {
      set_pkg_index(from.pkg_index());
    }
    if (from.has_fashion_part()) {
      set_fashion_part(from.fashion_part());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100025::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100025::CopyFrom(const Proto50100025& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100025::IsInitialized() const {
  
  return true;
}

void Proto50100025::Swap(Proto50100025* other) {
  if (other != this) {
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(pkg_type_, other->pkg_type_);
    std::swap(pkg_index_, other->pkg_index_);
    std::swap(fashion_part_, other->fashion_part_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100025::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100025_descriptor_;
  metadata.reflection = Proto50100025_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401431::kActiCodeFieldNumber;
const int Proto11401431::kSuperVipUseFieldNumber;
#endif  // !_MSC_VER

Proto11401431::Proto11401431()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401431::InitAsDefaultInstance() {
}

Proto11401431::Proto11401431(const Proto11401431& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401431::SharedCtor() {
  _cached_size_ = 0;
  acti_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  super_vip_use_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401431::~Proto11401431() {
  SharedDtor();
}

void Proto11401431::SharedDtor() {
  if (acti_code_ != &::google::protobuf::internal::kEmptyString) {
    delete acti_code_;
  }
  if (this != default_instance_) {
  }
}

void Proto11401431::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401431::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401431_descriptor_;
}

const Proto11401431& Proto11401431::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto11401431* Proto11401431::default_instance_ = NULL;

Proto11401431* Proto11401431::New() const {
  return new Proto11401431;
}

void Proto11401431::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_acti_code()) {
      if (acti_code_ != &::google::protobuf::internal::kEmptyString) {
        acti_code_->clear();
      }
    }
    super_vip_use_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401431::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string acti_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_acti_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->acti_code().data(), this->acti_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_super_vip_use;
        break;
      }
      
      // optional int32 super_vip_use = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_super_vip_use:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &super_vip_use_)));
          set_has_super_vip_use();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401431::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string acti_code = 1;
  if (has_acti_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->acti_code().data(), this->acti_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->acti_code(), output);
  }
  
  // optional int32 super_vip_use = 2;
  if (has_super_vip_use()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->super_vip_use(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401431::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string acti_code = 1;
  if (has_acti_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->acti_code().data(), this->acti_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->acti_code(), target);
  }
  
  // optional int32 super_vip_use = 2;
  if (has_super_vip_use()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->super_vip_use(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401431::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string acti_code = 1;
    if (has_acti_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->acti_code());
    }
    
    // optional int32 super_vip_use = 2;
    if (has_super_vip_use()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->super_vip_use());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401431::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401431* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401431*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401431::MergeFrom(const Proto11401431& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_acti_code()) {
      set_acti_code(from.acti_code());
    }
    if (from.has_super_vip_use()) {
      set_super_vip_use(from.super_vip_use());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401431::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401431::CopyFrom(const Proto11401431& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401431::IsInitialized() const {
  
  return true;
}

void Proto11401431::Swap(Proto11401431* other) {
  if (other != this) {
    std::swap(acti_code_, other->acti_code_);
    std::swap(super_vip_use_, other->super_vip_use_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401431::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401431_descriptor_;
  metadata.reflection = Proto11401431_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401431::kGiftSortFieldNumber;
const int Proto51401431::kGiftNameFieldNumber;
#endif  // !_MSC_VER

Proto51401431::Proto51401431()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401431::InitAsDefaultInstance() {
}

Proto51401431::Proto51401431(const Proto51401431& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401431::SharedCtor() {
  _cached_size_ = 0;
  gift_sort_ = 0;
  gift_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401431::~Proto51401431() {
  SharedDtor();
}

void Proto51401431::SharedDtor() {
  if (gift_name_ != &::google::protobuf::internal::kEmptyString) {
    delete gift_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto51401431::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401431::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401431_descriptor_;
}

const Proto51401431& Proto51401431::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto51401431* Proto51401431::default_instance_ = NULL;

Proto51401431* Proto51401431::New() const {
  return new Proto51401431;
}

void Proto51401431::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gift_sort_ = 0;
    if (has_gift_name()) {
      if (gift_name_ != &::google::protobuf::internal::kEmptyString) {
        gift_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401431::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 gift_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gift_sort_)));
          set_has_gift_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_gift_name;
        break;
      }
      
      // optional string gift_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gift_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gift_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->gift_name().data(), this->gift_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401431::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 gift_sort = 1;
  if (has_gift_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gift_sort(), output);
  }
  
  // optional string gift_name = 2;
  if (has_gift_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->gift_name().data(), this->gift_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->gift_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401431::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 gift_sort = 1;
  if (has_gift_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gift_sort(), target);
  }
  
  // optional string gift_name = 2;
  if (has_gift_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->gift_name().data(), this->gift_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gift_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401431::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 gift_sort = 1;
    if (has_gift_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gift_sort());
    }
    
    // optional string gift_name = 2;
    if (has_gift_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gift_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401431::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401431* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401431*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401431::MergeFrom(const Proto51401431& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gift_sort()) {
      set_gift_sort(from.gift_sort());
    }
    if (from.has_gift_name()) {
      set_gift_name(from.gift_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401431::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401431::CopyFrom(const Proto51401431& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401431::IsInitialized() const {
  
  return true;
}

void Proto51401431::Swap(Proto51401431* other) {
  if (other != this) {
    std::swap(gift_sort_, other->gift_sort_);
    std::swap(gift_name_, other->gift_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401431::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401431_descriptor_;
  metadata.reflection = Proto51401431_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100901::kLastRecordTypeFieldNumber;
const int Proto50100901::kReplayAmountFieldNumber;
const int Proto50100901::kTitleFieldNumber;
const int Proto50100901::kContentFieldNumber;
const int Proto50100901::kEvaluateStarFieldNumber;
const int Proto50100901::kContactFieldNumber;
const int Proto50100901::kIsOfficialFieldNumber;
const int Proto50100901::kRewardIdFieldNumber;
const int Proto50100901::kOfficialIdFieldNumber;
#endif  // !_MSC_VER

Proto50100901::Proto50100901()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100901::InitAsDefaultInstance() {
}

Proto50100901::Proto50100901(const Proto50100901& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100901::SharedCtor() {
  _cached_size_ = 0;
  last_record_type_ = 0;
  replay_amount_ = 0;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  evaluate_star_ = 0;
  contact_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  is_official_ = 0;
  reward_id_ = 0;
  official_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100901::~Proto50100901() {
  SharedDtor();
}

void Proto50100901::SharedDtor() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (contact_ != &::google::protobuf::internal::kEmptyString) {
    delete contact_;
  }
  if (this != default_instance_) {
  }
}

void Proto50100901::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100901::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100901_descriptor_;
}

const Proto50100901& Proto50100901::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto50100901* Proto50100901::default_instance_ = NULL;

Proto50100901* Proto50100901::New() const {
  return new Proto50100901;
}

void Proto50100901::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    last_record_type_ = 0;
    replay_amount_ = 0;
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::kEmptyString) {
        title_->clear();
      }
    }
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
    evaluate_star_ = 0;
    if (has_contact()) {
      if (contact_ != &::google::protobuf::internal::kEmptyString) {
        contact_->clear();
      }
    }
    is_official_ = 0;
    reward_id_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    official_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100901::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 last_record_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_record_type_)));
          set_has_last_record_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_replay_amount;
        break;
      }
      
      // optional int32 replay_amount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_replay_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &replay_amount_)));
          set_has_replay_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_title;
        break;
      }
      
      // optional string title = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_content;
        break;
      }
      
      // optional string content = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_evaluate_star;
        break;
      }
      
      // optional int32 evaluate_star = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_evaluate_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &evaluate_star_)));
          set_has_evaluate_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_contact;
        break;
      }
      
      // optional string contact = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_contact:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contact()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->contact().data(), this->contact().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_is_official;
        break;
      }
      
      // optional int32 is_official = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_official:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_official_)));
          set_has_is_official();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_reward_id;
        break;
      }
      
      // optional int32 reward_id = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_id_)));
          set_has_reward_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_official_id;
        break;
      }
      
      // optional int32 official_id = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_official_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &official_id_)));
          set_has_official_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100901::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 last_record_type = 1;
  if (has_last_record_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->last_record_type(), output);
  }
  
  // optional int32 replay_amount = 2;
  if (has_replay_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->replay_amount(), output);
  }
  
  // optional string title = 3;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->title(), output);
  }
  
  // optional string content = 4;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->content(), output);
  }
  
  // optional int32 evaluate_star = 5;
  if (has_evaluate_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->evaluate_star(), output);
  }
  
  // optional string contact = 6;
  if (has_contact()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->contact().data(), this->contact().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->contact(), output);
  }
  
  // optional int32 is_official = 7;
  if (has_is_official()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->is_official(), output);
  }
  
  // optional int32 reward_id = 8;
  if (has_reward_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->reward_id(), output);
  }
  
  // optional int32 official_id = 9;
  if (has_official_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->official_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100901::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 last_record_type = 1;
  if (has_last_record_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->last_record_type(), target);
  }
  
  // optional int32 replay_amount = 2;
  if (has_replay_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->replay_amount(), target);
  }
  
  // optional string title = 3;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->title(), target);
  }
  
  // optional string content = 4;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->content(), target);
  }
  
  // optional int32 evaluate_star = 5;
  if (has_evaluate_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->evaluate_star(), target);
  }
  
  // optional string contact = 6;
  if (has_contact()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->contact().data(), this->contact().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->contact(), target);
  }
  
  // optional int32 is_official = 7;
  if (has_is_official()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->is_official(), target);
  }
  
  // optional int32 reward_id = 8;
  if (has_reward_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->reward_id(), target);
  }
  
  // optional int32 official_id = 9;
  if (has_official_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->official_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100901::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 last_record_type = 1;
    if (has_last_record_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_record_type());
    }
    
    // optional int32 replay_amount = 2;
    if (has_replay_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->replay_amount());
    }
    
    // optional string title = 3;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }
    
    // optional string content = 4;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }
    
    // optional int32 evaluate_star = 5;
    if (has_evaluate_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->evaluate_star());
    }
    
    // optional string contact = 6;
    if (has_contact()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->contact());
    }
    
    // optional int32 is_official = 7;
    if (has_is_official()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_official());
    }
    
    // optional int32 reward_id = 8;
    if (has_reward_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_id());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 official_id = 9;
    if (has_official_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->official_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100901::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100901* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100901*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100901::MergeFrom(const Proto50100901& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_last_record_type()) {
      set_last_record_type(from.last_record_type());
    }
    if (from.has_replay_amount()) {
      set_replay_amount(from.replay_amount());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
    if (from.has_evaluate_star()) {
      set_evaluate_star(from.evaluate_star());
    }
    if (from.has_contact()) {
      set_contact(from.contact());
    }
    if (from.has_is_official()) {
      set_is_official(from.is_official());
    }
    if (from.has_reward_id()) {
      set_reward_id(from.reward_id());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_official_id()) {
      set_official_id(from.official_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100901::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100901::CopyFrom(const Proto50100901& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100901::IsInitialized() const {
  
  return true;
}

void Proto50100901::Swap(Proto50100901* other) {
  if (other != this) {
    std::swap(last_record_type_, other->last_record_type_);
    std::swap(replay_amount_, other->replay_amount_);
    std::swap(title_, other->title_);
    std::swap(content_, other->content_);
    std::swap(evaluate_star_, other->evaluate_star_);
    std::swap(contact_, other->contact_);
    std::swap(is_official_, other->is_official_);
    std::swap(reward_id_, other->reward_id_);
    std::swap(official_id_, other->official_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100901::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100901_descriptor_;
  metadata.reflection = Proto50100901_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100902::kRecordListFieldNumber;
#endif  // !_MSC_VER

Proto50100902::Proto50100902()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100902::InitAsDefaultInstance() {
}

Proto50100902::Proto50100902(const Proto50100902& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100902::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100902::~Proto50100902() {
  SharedDtor();
}

void Proto50100902::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100902::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100902::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100902_descriptor_;
}

const Proto50100902& Proto50100902::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto50100902* Proto50100902::default_instance_ = NULL;

Proto50100902* Proto50100902::New() const {
  return new Proto50100902;
}

void Proto50100902::Clear() {
  record_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100902::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoCustomerSVCRecord record_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_record_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_record_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_record_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100902::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoCustomerSVCRecord record_list = 1;
  for (int i = 0; i < this->record_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->record_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100902::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoCustomerSVCRecord record_list = 1;
  for (int i = 0; i < this->record_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->record_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100902::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoCustomerSVCRecord record_list = 1;
  total_size += 1 * this->record_list_size();
  for (int i = 0; i < this->record_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->record_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100902::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100902* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100902*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100902::MergeFrom(const Proto50100902& from) {
  GOOGLE_CHECK_NE(&from, this);
  record_list_.MergeFrom(from.record_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100902::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100902::CopyFrom(const Proto50100902& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100902::IsInitialized() const {
  
  return true;
}

void Proto50100902::Swap(Proto50100902* other) {
  if (other != this) {
    record_list_.Swap(&other->record_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100902::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100902_descriptor_;
  metadata.reflection = Proto50100902_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100903::kIsSummitFieldNumber;
const int Proto10100903::kTitleFieldNumber;
const int Proto10100903::kContentFieldNumber;
const int Proto10100903::kRecordTypeFieldNumber;
const int Proto10100903::kEvaluateStarFieldNumber;
const int Proto10100903::kIsOfficialFieldNumber;
const int Proto10100903::kOfficialIdFieldNumber;
const int Proto10100903::kRewardIdFieldNumber;
#endif  // !_MSC_VER

Proto10100903::Proto10100903()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100903::InitAsDefaultInstance() {
}

Proto10100903::Proto10100903(const Proto10100903& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100903::SharedCtor() {
  _cached_size_ = 0;
  is_summit_ = 0;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  record_type_ = 0;
  evaluate_star_ = 0;
  is_official_ = 0;
  official_id_ = 0;
  reward_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100903::~Proto10100903() {
  SharedDtor();
}

void Proto10100903::SharedDtor() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void Proto10100903::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100903::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100903_descriptor_;
}

const Proto10100903& Proto10100903::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto10100903* Proto10100903::default_instance_ = NULL;

Proto10100903* Proto10100903::New() const {
  return new Proto10100903;
}

void Proto10100903::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_summit_ = 0;
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::kEmptyString) {
        title_->clear();
      }
    }
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
    record_type_ = 0;
    evaluate_star_ = 0;
    is_official_ = 0;
    official_id_ = 0;
    reward_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100903::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 is_summit = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_summit_)));
          set_has_is_summit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_title;
        break;
      }
      
      // optional string title = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_content;
        break;
      }
      
      // optional string content = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_record_type;
        break;
      }
      
      // optional int32 record_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_record_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &record_type_)));
          set_has_record_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_evaluate_star;
        break;
      }
      
      // optional int32 evaluate_star = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_evaluate_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &evaluate_star_)));
          set_has_evaluate_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_is_official;
        break;
      }
      
      // optional int32 is_official = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_official:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_official_)));
          set_has_is_official();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_official_id;
        break;
      }
      
      // optional int32 official_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_official_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &official_id_)));
          set_has_official_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_reward_id;
        break;
      }
      
      // optional int32 reward_id = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_id_)));
          set_has_reward_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100903::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 is_summit = 1;
  if (has_is_summit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->is_summit(), output);
  }
  
  // optional string title = 2;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->title(), output);
  }
  
  // optional string content = 3;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->content(), output);
  }
  
  // optional int32 record_type = 4;
  if (has_record_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->record_type(), output);
  }
  
  // optional int32 evaluate_star = 5;
  if (has_evaluate_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->evaluate_star(), output);
  }
  
  // optional int32 is_official = 6;
  if (has_is_official()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->is_official(), output);
  }
  
  // optional int32 official_id = 7;
  if (has_official_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->official_id(), output);
  }
  
  // optional int32 reward_id = 8;
  if (has_reward_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->reward_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100903::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 is_summit = 1;
  if (has_is_summit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->is_summit(), target);
  }
  
  // optional string title = 2;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }
  
  // optional string content = 3;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->content(), target);
  }
  
  // optional int32 record_type = 4;
  if (has_record_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->record_type(), target);
  }
  
  // optional int32 evaluate_star = 5;
  if (has_evaluate_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->evaluate_star(), target);
  }
  
  // optional int32 is_official = 6;
  if (has_is_official()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->is_official(), target);
  }
  
  // optional int32 official_id = 7;
  if (has_official_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->official_id(), target);
  }
  
  // optional int32 reward_id = 8;
  if (has_reward_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->reward_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100903::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 is_summit = 1;
    if (has_is_summit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_summit());
    }
    
    // optional string title = 2;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }
    
    // optional string content = 3;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }
    
    // optional int32 record_type = 4;
    if (has_record_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->record_type());
    }
    
    // optional int32 evaluate_star = 5;
    if (has_evaluate_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->evaluate_star());
    }
    
    // optional int32 is_official = 6;
    if (has_is_official()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_official());
    }
    
    // optional int32 official_id = 7;
    if (has_official_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->official_id());
    }
    
    // optional int32 reward_id = 8;
    if (has_reward_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100903::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100903* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100903*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100903::MergeFrom(const Proto10100903& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_summit()) {
      set_is_summit(from.is_summit());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_content()) {
      set_content(from.content());
    }
    if (from.has_record_type()) {
      set_record_type(from.record_type());
    }
    if (from.has_evaluate_star()) {
      set_evaluate_star(from.evaluate_star());
    }
    if (from.has_is_official()) {
      set_is_official(from.is_official());
    }
    if (from.has_official_id()) {
      set_official_id(from.official_id());
    }
    if (from.has_reward_id()) {
      set_reward_id(from.reward_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100903::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100903::CopyFrom(const Proto10100903& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100903::IsInitialized() const {
  
  return true;
}

void Proto10100903::Swap(Proto10100903* other) {
  if (other != this) {
    std::swap(is_summit_, other->is_summit_);
    std::swap(title_, other->title_);
    std::swap(content_, other->content_);
    std::swap(record_type_, other->record_type_);
    std::swap(evaluate_star_, other->evaluate_star_);
    std::swap(is_official_, other->is_official_);
    std::swap(official_id_, other->official_id_);
    std::swap(reward_id_, other->reward_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100903::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100903_descriptor_;
  metadata.reflection = Proto10100903_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100903::kIsSummitFieldNumber;
#endif  // !_MSC_VER

Proto50100903::Proto50100903()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100903::InitAsDefaultInstance() {
}

Proto50100903::Proto50100903(const Proto50100903& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100903::SharedCtor() {
  _cached_size_ = 0;
  is_summit_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100903::~Proto50100903() {
  SharedDtor();
}

void Proto50100903::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100903::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100903::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100903_descriptor_;
}

const Proto50100903& Proto50100903::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto50100903* Proto50100903::default_instance_ = NULL;

Proto50100903* Proto50100903::New() const {
  return new Proto50100903;
}

void Proto50100903::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_summit_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100903::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 is_summit = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_summit_)));
          set_has_is_summit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100903::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 is_summit = 1;
  if (has_is_summit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->is_summit(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100903::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 is_summit = 1;
  if (has_is_summit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->is_summit(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100903::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 is_summit = 1;
    if (has_is_summit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_summit());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100903::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100903* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100903*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100903::MergeFrom(const Proto50100903& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_summit()) {
      set_is_summit(from.is_summit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100903::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100903::CopyFrom(const Proto50100903& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100903::IsInitialized() const {
  
  return true;
}

void Proto50100903::Swap(Proto50100903* other) {
  if (other != this) {
    std::swap(is_summit_, other->is_summit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100903::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100903_descriptor_;
  metadata.reflection = Proto50100903_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100904::kRecordIdFieldNumber;
#endif  // !_MSC_VER

Proto10100904::Proto10100904()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100904::InitAsDefaultInstance() {
}

Proto10100904::Proto10100904(const Proto10100904& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100904::SharedCtor() {
  _cached_size_ = 0;
  record_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100904::~Proto10100904() {
  SharedDtor();
}

void Proto10100904::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100904::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100904::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100904_descriptor_;
}

const Proto10100904& Proto10100904::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto10100904* Proto10100904::default_instance_ = NULL;

Proto10100904* Proto10100904::New() const {
  return new Proto10100904;
}

void Proto10100904::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    record_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100904::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 record_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &record_id_)));
          set_has_record_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100904::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 record_id = 1;
  if (has_record_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->record_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100904::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 record_id = 1;
  if (has_record_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->record_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100904::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 record_id = 1;
    if (has_record_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->record_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100904::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100904* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100904*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100904::MergeFrom(const Proto10100904& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_record_id()) {
      set_record_id(from.record_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100904::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100904::CopyFrom(const Proto10100904& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100904::IsInitialized() const {
  
  return true;
}

void Proto10100904::Swap(Proto10100904* other) {
  if (other != this) {
    std::swap(record_id_, other->record_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100904::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100904_descriptor_;
  metadata.reflection = Proto10100904_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100905::kRecordIdFieldNumber;
#endif  // !_MSC_VER

Proto10100905::Proto10100905()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100905::InitAsDefaultInstance() {
}

Proto10100905::Proto10100905(const Proto10100905& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100905::SharedCtor() {
  _cached_size_ = 0;
  record_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100905::~Proto10100905() {
  SharedDtor();
}

void Proto10100905::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100905::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100905::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100905_descriptor_;
}

const Proto10100905& Proto10100905::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto10100905* Proto10100905::default_instance_ = NULL;

Proto10100905* Proto10100905::New() const {
  return new Proto10100905;
}

void Proto10100905::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    record_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100905::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 record_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &record_id_)));
          set_has_record_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100905::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 record_id = 1;
  if (has_record_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->record_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100905::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 record_id = 1;
  if (has_record_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->record_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100905::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 record_id = 1;
    if (has_record_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->record_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100905::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100905* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100905*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100905::MergeFrom(const Proto10100905& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_record_id()) {
      set_record_id(from.record_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100905::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100905::CopyFrom(const Proto10100905& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100905::IsInitialized() const {
  
  return true;
}

void Proto10100905::Swap(Proto10100905* other) {
  if (other != this) {
    std::swap(record_id_, other->record_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100905::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100905_descriptor_;
  metadata.reflection = Proto10100905_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401432::kGiftDefFieldNumber;
#endif  // !_MSC_VER

Proto51401432::Proto51401432()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401432::InitAsDefaultInstance() {
}

Proto51401432::Proto51401432(const Proto51401432& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401432::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401432::~Proto51401432() {
  SharedDtor();
}

void Proto51401432::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401432::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401432::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401432_descriptor_;
}

const Proto51401432& Proto51401432::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto51401432* Proto51401432::default_instance_ = NULL;

Proto51401432* Proto51401432::New() const {
  return new Proto51401432;
}

void Proto51401432::Clear() {
  gift_def_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401432::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoMediaGiftDef gift_def = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gift_def:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gift_def()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_gift_def;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401432::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoMediaGiftDef gift_def = 1;
  for (int i = 0; i < this->gift_def_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gift_def(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401432::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoMediaGiftDef gift_def = 1;
  for (int i = 0; i < this->gift_def_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->gift_def(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401432::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoMediaGiftDef gift_def = 1;
  total_size += 1 * this->gift_def_size();
  for (int i = 0; i < this->gift_def_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gift_def(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401432::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401432* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401432*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401432::MergeFrom(const Proto51401432& from) {
  GOOGLE_CHECK_NE(&from, this);
  gift_def_.MergeFrom(from.gift_def_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401432::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401432::CopyFrom(const Proto51401432& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401432::IsInitialized() const {
  
  return true;
}

void Proto51401432::Swap(Proto51401432* other) {
  if (other != this) {
    gift_def_.Swap(&other->gift_def_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401432::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401432_descriptor_;
  metadata.reflection = Proto51401432_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400337::kStepFieldNumber;
#endif  // !_MSC_VER

Proto11400337::Proto11400337()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400337::InitAsDefaultInstance() {
}

Proto11400337::Proto11400337(const Proto11400337& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400337::SharedCtor() {
  _cached_size_ = 0;
  step_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400337::~Proto11400337() {
  SharedDtor();
}

void Proto11400337::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400337::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400337::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400337_descriptor_;
}

const Proto11400337& Proto11400337::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto11400337* Proto11400337::default_instance_ = NULL;

Proto11400337* Proto11400337::New() const {
  return new Proto11400337;
}

void Proto11400337::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    step_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400337::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 step = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &step_)));
          set_has_step();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400337::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 step = 1;
  if (has_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->step(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400337::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 step = 1;
  if (has_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->step(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400337::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 step = 1;
    if (has_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->step());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400337::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400337* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400337*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400337::MergeFrom(const Proto11400337& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_step()) {
      set_step(from.step());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400337::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400337::CopyFrom(const Proto11400337& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400337::IsInitialized() const {
  
  return true;
}

void Proto11400337::Swap(Proto11400337* other) {
  if (other != this) {
    std::swap(step_, other->step_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400337::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400337_descriptor_;
  metadata.reflection = Proto11400337_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400336::kStepFieldNumber;
#endif  // !_MSC_VER

Proto51400336::Proto51400336()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400336::InitAsDefaultInstance() {
}

Proto51400336::Proto51400336(const Proto51400336& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400336::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400336::~Proto51400336() {
  SharedDtor();
}

void Proto51400336::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400336::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400336::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400336_descriptor_;
}

const Proto51400336& Proto51400336::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto51400336* Proto51400336::default_instance_ = NULL;

Proto51400336* Proto51400336::New() const {
  return new Proto51400336;
}

void Proto51400336::Clear() {
  step_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400336::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 step = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_step:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_step())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_step())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_step;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400336::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 step = 1;
  for (int i = 0; i < this->step_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->step(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400336::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 step = 1;
  for (int i = 0; i < this->step_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->step(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400336::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 step = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->step_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->step(i));
    }
    total_size += 1 * this->step_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400336::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400336* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400336*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400336::MergeFrom(const Proto51400336& from) {
  GOOGLE_CHECK_NE(&from, this);
  step_.MergeFrom(from.step_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400336::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400336::CopyFrom(const Proto51400336& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400336::IsInitialized() const {
  
  return true;
}

void Proto51400336::Swap(Proto51400336* other) {
  if (other != this) {
    step_.Swap(&other->step_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400336::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400336_descriptor_;
  metadata.reflection = Proto51400336_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100032::kTitleFieldNumber;
const int Proto50100032::kContentFieldNumber;
const int Proto50100032::kItemSetFieldNumber;
const int Proto50100032::kStartTickFieldNumber;
const int Proto50100032::kDrawFlagFieldNumber;
const int Proto50100032::kAwardIdFieldNumber;
#endif  // !_MSC_VER

Proto50100032::Proto50100032()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100032::InitAsDefaultInstance() {
}

Proto50100032::Proto50100032(const Proto50100032& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100032::SharedCtor() {
  _cached_size_ = 0;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  start_tick_ = GOOGLE_LONGLONG(0);
  draw_flag_ = 0;
  award_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100032::~Proto50100032() {
  SharedDtor();
}

void Proto50100032::SharedDtor() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (this != default_instance_) {
  }
}

void Proto50100032::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100032::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100032_descriptor_;
}

const Proto50100032& Proto50100032::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto50100032* Proto50100032::default_instance_ = NULL;

Proto50100032* Proto50100032::New() const {
  return new Proto50100032;
}

void Proto50100032::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::kEmptyString) {
        title_->clear();
      }
    }
    start_tick_ = GOOGLE_LONGLONG(0);
    draw_flag_ = 0;
    award_id_ = 0;
  }
  content_.Clear();
  item_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100032::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string title = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_content;
        break;
      }
      
      // repeated string content = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content(0).data(), this->content(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_content;
        if (input->ExpectTag(26)) goto parse_item_set;
        break;
      }
      
      // repeated .ProtoItem item_set = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_item_set;
        if (input->ExpectTag(32)) goto parse_start_tick;
        break;
      }
      
      // optional int64 start_tick = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_tick_)));
          set_has_start_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_draw_flag;
        break;
      }
      
      // optional int32 draw_flag = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_draw_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &draw_flag_)));
          set_has_draw_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_award_id;
        break;
      }
      
      // optional int32 award_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_award_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &award_id_)));
          set_has_award_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100032::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string title = 1;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->title(), output);
  }
  
  // repeated string content = 2;
  for (int i = 0; i < this->content_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->content(i).data(), this->content(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->content(i), output);
  }
  
  // repeated .ProtoItem item_set = 3;
  for (int i = 0; i < this->item_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->item_set(i), output);
  }
  
  // optional int64 start_tick = 4;
  if (has_start_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->start_tick(), output);
  }
  
  // optional int32 draw_flag = 5;
  if (has_draw_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->draw_flag(), output);
  }
  
  // optional int32 award_id = 6;
  if (has_award_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->award_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100032::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string title = 1;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }
  
  // repeated string content = 2;
  for (int i = 0; i < this->content_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content(i).data(), this->content(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->content(i), target);
  }
  
  // repeated .ProtoItem item_set = 3;
  for (int i = 0; i < this->item_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->item_set(i), target);
  }
  
  // optional int64 start_tick = 4;
  if (has_start_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->start_tick(), target);
  }
  
  // optional int32 draw_flag = 5;
  if (has_draw_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->draw_flag(), target);
  }
  
  // optional int32 award_id = 6;
  if (has_award_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->award_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100032::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string title = 1;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }
    
    // optional int64 start_tick = 4;
    if (has_start_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_tick());
    }
    
    // optional int32 draw_flag = 5;
    if (has_draw_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->draw_flag());
    }
    
    // optional int32 award_id = 6;
    if (has_award_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->award_id());
    }
    
  }
  // repeated string content = 2;
  total_size += 1 * this->content_size();
  for (int i = 0; i < this->content_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->content(i));
  }
  
  // repeated .ProtoItem item_set = 3;
  total_size += 1 * this->item_set_size();
  for (int i = 0; i < this->item_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100032::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100032* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100032*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100032::MergeFrom(const Proto50100032& from) {
  GOOGLE_CHECK_NE(&from, this);
  content_.MergeFrom(from.content_);
  item_set_.MergeFrom(from.item_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_start_tick()) {
      set_start_tick(from.start_tick());
    }
    if (from.has_draw_flag()) {
      set_draw_flag(from.draw_flag());
    }
    if (from.has_award_id()) {
      set_award_id(from.award_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100032::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100032::CopyFrom(const Proto50100032& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100032::IsInitialized() const {
  
  return true;
}

void Proto50100032::Swap(Proto50100032* other) {
  if (other != this) {
    std::swap(title_, other->title_);
    content_.Swap(&other->content_);
    item_set_.Swap(&other->item_set_);
    std::swap(start_tick_, other->start_tick_);
    std::swap(draw_flag_, other->draw_flag_);
    std::swap(award_id_, other->award_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100032::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100032_descriptor_;
  metadata.reflection = Proto50100032_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401405::kCheckInPopupFieldNumber;
const int Proto81401405::kNoticePopupFieldNumber;
const int Proto81401405::kFoundFlagFieldNumber;
const int Proto81401405::kFoundNumFieldNumber;
const int Proto81401405::kSevenLoginRewardPopupFieldNumber;
#endif  // !_MSC_VER

Proto81401405::Proto81401405()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401405::InitAsDefaultInstance() {
}

Proto81401405::Proto81401405(const Proto81401405& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401405::SharedCtor() {
  _cached_size_ = 0;
  check_in_popup_ = 0;
  notice_popup_ = 0;
  found_flag_ = 0;
  found_num_ = 0;
  seven_login_reward_popup_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401405::~Proto81401405() {
  SharedDtor();
}

void Proto81401405::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401405::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401405::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401405_descriptor_;
}

const Proto81401405& Proto81401405::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto81401405* Proto81401405::default_instance_ = NULL;

Proto81401405* Proto81401405::New() const {
  return new Proto81401405;
}

void Proto81401405::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    check_in_popup_ = 0;
    notice_popup_ = 0;
    found_flag_ = 0;
    found_num_ = 0;
    seven_login_reward_popup_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401405::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 check_in_popup = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &check_in_popup_)));
          set_has_check_in_popup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_notice_popup;
        break;
      }
      
      // optional int32 notice_popup = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_notice_popup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &notice_popup_)));
          set_has_notice_popup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_found_flag;
        break;
      }
      
      // optional int32 found_flag = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_found_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &found_flag_)));
          set_has_found_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_found_num;
        break;
      }
      
      // optional int32 found_num = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_found_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &found_num_)));
          set_has_found_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_seven_login_reward_popup;
        break;
      }
      
      // optional int32 seven_login_reward_popup = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_seven_login_reward_popup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seven_login_reward_popup_)));
          set_has_seven_login_reward_popup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401405::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 check_in_popup = 1;
  if (has_check_in_popup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->check_in_popup(), output);
  }
  
  // optional int32 notice_popup = 2;
  if (has_notice_popup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->notice_popup(), output);
  }
  
  // optional int32 found_flag = 3;
  if (has_found_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->found_flag(), output);
  }
  
  // optional int32 found_num = 4;
  if (has_found_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->found_num(), output);
  }
  
  // optional int32 seven_login_reward_popup = 5;
  if (has_seven_login_reward_popup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->seven_login_reward_popup(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401405::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 check_in_popup = 1;
  if (has_check_in_popup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->check_in_popup(), target);
  }
  
  // optional int32 notice_popup = 2;
  if (has_notice_popup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->notice_popup(), target);
  }
  
  // optional int32 found_flag = 3;
  if (has_found_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->found_flag(), target);
  }
  
  // optional int32 found_num = 4;
  if (has_found_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->found_num(), target);
  }
  
  // optional int32 seven_login_reward_popup = 5;
  if (has_seven_login_reward_popup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->seven_login_reward_popup(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401405::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 check_in_popup = 1;
    if (has_check_in_popup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->check_in_popup());
    }
    
    // optional int32 notice_popup = 2;
    if (has_notice_popup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->notice_popup());
    }
    
    // optional int32 found_flag = 3;
    if (has_found_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->found_flag());
    }
    
    // optional int32 found_num = 4;
    if (has_found_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->found_num());
    }
    
    // optional int32 seven_login_reward_popup = 5;
    if (has_seven_login_reward_popup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->seven_login_reward_popup());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401405::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401405* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401405*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401405::MergeFrom(const Proto81401405& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_check_in_popup()) {
      set_check_in_popup(from.check_in_popup());
    }
    if (from.has_notice_popup()) {
      set_notice_popup(from.notice_popup());
    }
    if (from.has_found_flag()) {
      set_found_flag(from.found_flag());
    }
    if (from.has_found_num()) {
      set_found_num(from.found_num());
    }
    if (from.has_seven_login_reward_popup()) {
      set_seven_login_reward_popup(from.seven_login_reward_popup());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401405::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401405::CopyFrom(const Proto81401405& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401405::IsInitialized() const {
  
  return true;
}

void Proto81401405::Swap(Proto81401405* other) {
  if (other != this) {
    std::swap(check_in_popup_, other->check_in_popup_);
    std::swap(notice_popup_, other->notice_popup_);
    std::swap(found_flag_, other->found_flag_);
    std::swap(found_num_, other->found_num_);
    std::swap(seven_login_reward_popup_, other->seven_login_reward_popup_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401405::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401405_descriptor_;
  metadata.reflection = Proto81401405_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100901::kUnreadAmountFieldNumber;
const int Proto80100901::kReplaySetFieldNumber;
#endif  // !_MSC_VER

Proto80100901::Proto80100901()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100901::InitAsDefaultInstance() {
}

Proto80100901::Proto80100901(const Proto80100901& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100901::SharedCtor() {
  _cached_size_ = 0;
  unread_amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100901::~Proto80100901() {
  SharedDtor();
}

void Proto80100901::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80100901::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100901::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100901_descriptor_;
}

const Proto80100901& Proto80100901::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto80100901* Proto80100901::default_instance_ = NULL;

Proto80100901* Proto80100901::New() const {
  return new Proto80100901;
}

void Proto80100901::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    unread_amount_ = 0;
  }
  replay_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100901::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 unread_amount = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unread_amount_)));
          set_has_unread_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_replay_set;
        break;
      }
      
      // repeated .ProtoCustomerSVCRecord replay_set = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_replay_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_replay_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_replay_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100901::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 unread_amount = 1;
  if (has_unread_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->unread_amount(), output);
  }
  
  // repeated .ProtoCustomerSVCRecord replay_set = 2;
  for (int i = 0; i < this->replay_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->replay_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100901::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 unread_amount = 1;
  if (has_unread_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->unread_amount(), target);
  }
  
  // repeated .ProtoCustomerSVCRecord replay_set = 2;
  for (int i = 0; i < this->replay_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->replay_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100901::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 unread_amount = 1;
    if (has_unread_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->unread_amount());
    }
    
  }
  // repeated .ProtoCustomerSVCRecord replay_set = 2;
  total_size += 1 * this->replay_set_size();
  for (int i = 0; i < this->replay_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->replay_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100901::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100901* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100901*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100901::MergeFrom(const Proto80100901& from) {
  GOOGLE_CHECK_NE(&from, this);
  replay_set_.MergeFrom(from.replay_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_unread_amount()) {
      set_unread_amount(from.unread_amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100901::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100901::CopyFrom(const Proto80100901& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100901::IsInitialized() const {
  
  return true;
}

void Proto80100901::Swap(Proto80100901* other) {
  if (other != this) {
    std::swap(unread_amount_, other->unread_amount_);
    replay_set_.Swap(&other->replay_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100901::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100901_descriptor_;
  metadata.reflection = Proto80100901_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401441::kHasRewardFieldNumber;
#endif  // !_MSC_VER

Proto51401441::Proto51401441()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401441::InitAsDefaultInstance() {
}

Proto51401441::Proto51401441(const Proto51401441& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401441::SharedCtor() {
  _cached_size_ = 0;
  has_reward_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401441::~Proto51401441() {
  SharedDtor();
}

void Proto51401441::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401441::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401441::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401441_descriptor_;
}

const Proto51401441& Proto51401441::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto51401441* Proto51401441::default_instance_ = NULL;

Proto51401441* Proto51401441::New() const {
  return new Proto51401441;
}

void Proto51401441::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    has_reward_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401441::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 has_reward = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &has_reward_)));
          set_has_has_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401441::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 has_reward = 1;
  if (has_has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->has_reward(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401441::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 has_reward = 1;
  if (has_has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->has_reward(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401441::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 has_reward = 1;
    if (has_has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->has_reward());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401441::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401441* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401441*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401441::MergeFrom(const Proto51401441& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_has_reward()) {
      set_has_reward(from.has_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401441::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401441::CopyFrom(const Proto51401441& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401441::IsInitialized() const {
  
  return true;
}

void Proto51401441::Swap(Proto51401441* other) {
  if (other != this) {
    std::swap(has_reward_, other->has_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401441::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401441_descriptor_;
  metadata.reflection = Proto51401441_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101001::kRankFieldNumber;
const int Proto50101001::kForceFieldNumber;
const int Proto50101001::kSexFieldNumber;
const int Proto50101001::kLeftTimesFieldNumber;
const int Proto50101001::kBuyTimesFieldNumber;
const int Proto50101001::kLeftCoolTimeFieldNumber;
const int Proto50101001::kIsOverLimitFieldNumber;
const int Proto50101001::kAnimaFieldNumber;
const int Proto50101001::kMoneyFieldNumber;
const int Proto50101001::kNextTimeFieldNumber;
const int Proto50101001::kAreaRoleFieldNumber;
const int Proto50101001::kAreaRecordFieldNumber;
const int Proto50101001::kHaveRewardFieldNumber;
const int Proto50101001::kCareerFieldNumber;
const int Proto50101001::kRewardIdFieldNumber;
const int Proto50101001::kNextRewardIdFieldNumber;
const int Proto50101001::kIsSkipFieldNumber;
#endif  // !_MSC_VER

Proto50101001::Proto50101001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101001::InitAsDefaultInstance() {
}

Proto50101001::Proto50101001(const Proto50101001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101001::SharedCtor() {
  _cached_size_ = 0;
  rank_ = 0;
  force_ = 0;
  sex_ = 0;
  left_times_ = 0;
  buy_times_ = 0;
  left_cool_time_ = 0;
  is_over_limit_ = 0;
  anima_ = 0;
  money_ = 0;
  next_time_ = 0;
  have_reward_ = 0;
  career_ = 0;
  reward_id_ = 0;
  next_reward_id_ = 0;
  is_skip_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101001::~Proto50101001() {
  SharedDtor();
}

void Proto50101001::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50101001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101001_descriptor_;
}

const Proto50101001& Proto50101001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto50101001* Proto50101001::default_instance_ = NULL;

Proto50101001* Proto50101001::New() const {
  return new Proto50101001;
}

void Proto50101001::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rank_ = 0;
    force_ = 0;
    sex_ = 0;
    left_times_ = 0;
    buy_times_ = 0;
    left_cool_time_ = 0;
    is_over_limit_ = 0;
    anima_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    money_ = 0;
    next_time_ = 0;
    have_reward_ = 0;
    career_ = 0;
    reward_id_ = 0;
    next_reward_id_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    is_skip_ = 0;
  }
  area_role_.Clear();
  area_record_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_force;
        break;
      }
      
      // optional int32 force = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_sex;
        break;
      }
      
      // optional int32 sex = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
          set_has_sex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_left_times;
        break;
      }
      
      // optional int32 left_times = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_times_)));
          set_has_left_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_buy_times;
        break;
      }
      
      // optional int32 buy_times = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_times_)));
          set_has_buy_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_left_cool_time;
        break;
      }
      
      // optional int32 left_cool_time = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_cool_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_cool_time_)));
          set_has_left_cool_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_is_over_limit;
        break;
      }
      
      // optional int32 is_over_limit = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_over_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_over_limit_)));
          set_has_is_over_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_anima;
        break;
      }
      
      // optional int32 anima = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_anima:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &anima_)));
          set_has_anima();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_money;
        break;
      }
      
      // optional int32 money = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_next_time;
        break;
      }
      
      // optional int32 next_time = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_next_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &next_time_)));
          set_has_next_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_area_role;
        break;
      }
      
      // repeated .ProtoAreaRole area_role = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_area_role:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_area_role()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_area_role;
        if (input->ExpectTag(98)) goto parse_area_record;
        break;
      }
      
      // repeated .ProtoAreaRecord area_record = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_area_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_area_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_area_record;
        if (input->ExpectTag(104)) goto parse_have_reward;
        break;
      }
      
      // optional int32 have_reward = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_have_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &have_reward_)));
          set_has_have_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_career;
        break;
      }
      
      // optional int32 career = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_career:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &career_)));
          set_has_career();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_reward_id;
        break;
      }
      
      // optional int32 reward_id = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_id_)));
          set_has_reward_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_next_reward_id;
        break;
      }
      
      // optional int32 next_reward_id = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_next_reward_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &next_reward_id_)));
          set_has_next_reward_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_is_skip;
        break;
      }
      
      // optional int32 is_skip = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_skip:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_skip_)));
          set_has_is_skip();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 rank = 1;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank(), output);
  }
  
  // optional int32 force = 2;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->force(), output);
  }
  
  // optional int32 sex = 3;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sex(), output);
  }
  
  // optional int32 left_times = 4;
  if (has_left_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->left_times(), output);
  }
  
  // optional int32 buy_times = 5;
  if (has_buy_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->buy_times(), output);
  }
  
  // optional int32 left_cool_time = 6;
  if (has_left_cool_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->left_cool_time(), output);
  }
  
  // optional int32 is_over_limit = 7;
  if (has_is_over_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->is_over_limit(), output);
  }
  
  // optional int32 anima = 8;
  if (has_anima()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->anima(), output);
  }
  
  // optional int32 money = 9;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->money(), output);
  }
  
  // optional int32 next_time = 10;
  if (has_next_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->next_time(), output);
  }
  
  // repeated .ProtoAreaRole area_role = 11;
  for (int i = 0; i < this->area_role_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->area_role(i), output);
  }
  
  // repeated .ProtoAreaRecord area_record = 12;
  for (int i = 0; i < this->area_record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->area_record(i), output);
  }
  
  // optional int32 have_reward = 13;
  if (has_have_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->have_reward(), output);
  }
  
  // optional int32 career = 14;
  if (has_career()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->career(), output);
  }
  
  // optional int32 reward_id = 15;
  if (has_reward_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->reward_id(), output);
  }
  
  // optional int32 next_reward_id = 16;
  if (has_next_reward_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->next_reward_id(), output);
  }
  
  // optional int32 is_skip = 17;
  if (has_is_skip()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->is_skip(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 rank = 1;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank(), target);
  }
  
  // optional int32 force = 2;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->force(), target);
  }
  
  // optional int32 sex = 3;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sex(), target);
  }
  
  // optional int32 left_times = 4;
  if (has_left_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->left_times(), target);
  }
  
  // optional int32 buy_times = 5;
  if (has_buy_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->buy_times(), target);
  }
  
  // optional int32 left_cool_time = 6;
  if (has_left_cool_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->left_cool_time(), target);
  }
  
  // optional int32 is_over_limit = 7;
  if (has_is_over_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->is_over_limit(), target);
  }
  
  // optional int32 anima = 8;
  if (has_anima()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->anima(), target);
  }
  
  // optional int32 money = 9;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->money(), target);
  }
  
  // optional int32 next_time = 10;
  if (has_next_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->next_time(), target);
  }
  
  // repeated .ProtoAreaRole area_role = 11;
  for (int i = 0; i < this->area_role_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->area_role(i), target);
  }
  
  // repeated .ProtoAreaRecord area_record = 12;
  for (int i = 0; i < this->area_record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->area_record(i), target);
  }
  
  // optional int32 have_reward = 13;
  if (has_have_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->have_reward(), target);
  }
  
  // optional int32 career = 14;
  if (has_career()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->career(), target);
  }
  
  // optional int32 reward_id = 15;
  if (has_reward_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->reward_id(), target);
  }
  
  // optional int32 next_reward_id = 16;
  if (has_next_reward_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->next_reward_id(), target);
  }
  
  // optional int32 is_skip = 17;
  if (has_is_skip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->is_skip(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101001::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 rank = 1;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank());
    }
    
    // optional int32 force = 2;
    if (has_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->force());
    }
    
    // optional int32 sex = 3;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sex());
    }
    
    // optional int32 left_times = 4;
    if (has_left_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_times());
    }
    
    // optional int32 buy_times = 5;
    if (has_buy_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_times());
    }
    
    // optional int32 left_cool_time = 6;
    if (has_left_cool_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_cool_time());
    }
    
    // optional int32 is_over_limit = 7;
    if (has_is_over_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_over_limit());
    }
    
    // optional int32 anima = 8;
    if (has_anima()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->anima());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 money = 9;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }
    
    // optional int32 next_time = 10;
    if (has_next_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->next_time());
    }
    
    // optional int32 have_reward = 13;
    if (has_have_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->have_reward());
    }
    
    // optional int32 career = 14;
    if (has_career()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->career());
    }
    
    // optional int32 reward_id = 15;
    if (has_reward_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_id());
    }
    
    // optional int32 next_reward_id = 16;
    if (has_next_reward_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->next_reward_id());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 is_skip = 17;
    if (has_is_skip()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_skip());
    }
    
  }
  // repeated .ProtoAreaRole area_role = 11;
  total_size += 1 * this->area_role_size();
  for (int i = 0; i < this->area_role_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->area_role(i));
  }
  
  // repeated .ProtoAreaRecord area_record = 12;
  total_size += 1 * this->area_record_size();
  for (int i = 0; i < this->area_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->area_record(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101001::MergeFrom(const Proto50101001& from) {
  GOOGLE_CHECK_NE(&from, this);
  area_role_.MergeFrom(from.area_role_);
  area_record_.MergeFrom(from.area_record_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rank()) {
      set_rank(from.rank());
    }
    if (from.has_force()) {
      set_force(from.force());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_left_times()) {
      set_left_times(from.left_times());
    }
    if (from.has_buy_times()) {
      set_buy_times(from.buy_times());
    }
    if (from.has_left_cool_time()) {
      set_left_cool_time(from.left_cool_time());
    }
    if (from.has_is_over_limit()) {
      set_is_over_limit(from.is_over_limit());
    }
    if (from.has_anima()) {
      set_anima(from.anima());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_next_time()) {
      set_next_time(from.next_time());
    }
    if (from.has_have_reward()) {
      set_have_reward(from.have_reward());
    }
    if (from.has_career()) {
      set_career(from.career());
    }
    if (from.has_reward_id()) {
      set_reward_id(from.reward_id());
    }
    if (from.has_next_reward_id()) {
      set_next_reward_id(from.next_reward_id());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_is_skip()) {
      set_is_skip(from.is_skip());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101001::CopyFrom(const Proto50101001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101001::IsInitialized() const {
  
  return true;
}

void Proto50101001::Swap(Proto50101001* other) {
  if (other != this) {
    std::swap(rank_, other->rank_);
    std::swap(force_, other->force_);
    std::swap(sex_, other->sex_);
    std::swap(left_times_, other->left_times_);
    std::swap(buy_times_, other->buy_times_);
    std::swap(left_cool_time_, other->left_cool_time_);
    std::swap(is_over_limit_, other->is_over_limit_);
    std::swap(anima_, other->anima_);
    std::swap(money_, other->money_);
    std::swap(next_time_, other->next_time_);
    area_role_.Swap(&other->area_role_);
    area_record_.Swap(&other->area_record_);
    std::swap(have_reward_, other->have_reward_);
    std::swap(career_, other->career_);
    std::swap(reward_id_, other->reward_id_);
    std::swap(next_reward_id_, other->next_reward_id_);
    std::swap(is_skip_, other->is_skip_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101001_descriptor_;
  metadata.reflection = Proto50101001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101002::kLastRankFieldNumber;
const int Proto50101002::kAddAnimaFieldNumber;
const int Proto50101002::kAddCopperFieldNumber;
#endif  // !_MSC_VER

Proto50101002::Proto50101002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101002::InitAsDefaultInstance() {
}

Proto50101002::Proto50101002(const Proto50101002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101002::SharedCtor() {
  _cached_size_ = 0;
  last_rank_ = 0;
  add_anima_ = 0;
  add_copper_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101002::~Proto50101002() {
  SharedDtor();
}

void Proto50101002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50101002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101002_descriptor_;
}

const Proto50101002& Proto50101002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto50101002* Proto50101002::default_instance_ = NULL;

Proto50101002* Proto50101002::New() const {
  return new Proto50101002;
}

void Proto50101002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    last_rank_ = 0;
    add_anima_ = 0;
    add_copper_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 last_rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_rank_)));
          set_has_last_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_add_anima;
        break;
      }
      
      // optional int32 add_anima = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_add_anima:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_anima_)));
          set_has_add_anima();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_add_copper;
        break;
      }
      
      // optional int32 add_copper = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_add_copper:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_copper_)));
          set_has_add_copper();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->last_rank(), output);
  }
  
  // optional int32 add_anima = 2;
  if (has_add_anima()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->add_anima(), output);
  }
  
  // optional int32 add_copper = 3;
  if (has_add_copper()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->add_copper(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->last_rank(), target);
  }
  
  // optional int32 add_anima = 2;
  if (has_add_anima()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->add_anima(), target);
  }
  
  // optional int32 add_copper = 3;
  if (has_add_copper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->add_copper(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 last_rank = 1;
    if (has_last_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_rank());
    }
    
    // optional int32 add_anima = 2;
    if (has_add_anima()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_anima());
    }
    
    // optional int32 add_copper = 3;
    if (has_add_copper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_copper());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101002::MergeFrom(const Proto50101002& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_last_rank()) {
      set_last_rank(from.last_rank());
    }
    if (from.has_add_anima()) {
      set_add_anima(from.add_anima());
    }
    if (from.has_add_copper()) {
      set_add_copper(from.add_copper());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101002::CopyFrom(const Proto50101002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101002::IsInitialized() const {
  
  return true;
}

void Proto50101002::Swap(Proto50101002* other) {
  if (other != this) {
    std::swap(last_rank_, other->last_rank_);
    std::swap(add_anima_, other->add_anima_);
    std::swap(add_copper_, other->add_copper_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101002_descriptor_;
  metadata.reflection = Proto50101002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101003::kRankFieldNumber;
#endif  // !_MSC_VER

Proto10101003::Proto10101003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101003::InitAsDefaultInstance() {
}

Proto10101003::Proto10101003(const Proto10101003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101003::SharedCtor() {
  _cached_size_ = 0;
  rank_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101003::~Proto10101003() {
  SharedDtor();
}

void Proto10101003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101003_descriptor_;
}

const Proto10101003& Proto10101003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto10101003* Proto10101003::default_instance_ = NULL;

Proto10101003* Proto10101003::New() const {
  return new Proto10101003;
}

void Proto10101003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rank_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 rank = 1;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 rank = 1;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 rank = 1;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101003::MergeFrom(const Proto10101003& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rank()) {
      set_rank(from.rank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101003::CopyFrom(const Proto10101003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101003::IsInitialized() const {
  
  return true;
}

void Proto10101003::Swap(Proto10101003* other) {
  if (other != this) {
    std::swap(rank_, other->rank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101003_descriptor_;
  metadata.reflection = Proto10101003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101004::kLeftTimesFieldNumber;
const int Proto50101004::kBuyTimesFieldNumber;
#endif  // !_MSC_VER

Proto50101004::Proto50101004()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101004::InitAsDefaultInstance() {
}

Proto50101004::Proto50101004(const Proto50101004& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101004::SharedCtor() {
  _cached_size_ = 0;
  left_times_ = 0;
  buy_times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101004::~Proto50101004() {
  SharedDtor();
}

void Proto50101004::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50101004::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101004::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101004_descriptor_;
}

const Proto50101004& Proto50101004::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto50101004* Proto50101004::default_instance_ = NULL;

Proto50101004* Proto50101004::New() const {
  return new Proto50101004;
}

void Proto50101004::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_times_ = 0;
    buy_times_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101004::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_times = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_times_)));
          set_has_left_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_buy_times;
        break;
      }
      
      // optional int32 buy_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_times_)));
          set_has_buy_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101004::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_times = 1;
  if (has_left_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_times(), output);
  }
  
  // optional int32 buy_times = 2;
  if (has_buy_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->buy_times(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101004::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_times = 1;
  if (has_left_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_times(), target);
  }
  
  // optional int32 buy_times = 2;
  if (has_buy_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->buy_times(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101004::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_times = 1;
    if (has_left_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_times());
    }
    
    // optional int32 buy_times = 2;
    if (has_buy_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_times());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101004::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101004* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101004*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101004::MergeFrom(const Proto50101004& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_times()) {
      set_left_times(from.left_times());
    }
    if (from.has_buy_times()) {
      set_buy_times(from.buy_times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101004::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101004::CopyFrom(const Proto50101004& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101004::IsInitialized() const {
  
  return true;
}

void Proto50101004::Swap(Proto50101004* other) {
  if (other != this) {
    std::swap(left_times_, other->left_times_);
    std::swap(buy_times_, other->buy_times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101004::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101004_descriptor_;
  metadata.reflection = Proto50101004_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101005::kStatusFieldNumber;
#endif  // !_MSC_VER

Proto50101005::Proto50101005()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101005::InitAsDefaultInstance() {
}

Proto50101005::Proto50101005(const Proto50101005& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101005::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101005::~Proto50101005() {
  SharedDtor();
}

void Proto50101005::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50101005::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101005::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101005_descriptor_;
}

const Proto50101005& Proto50101005::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto50101005* Proto50101005::default_instance_ = NULL;

Proto50101005* Proto50101005::New() const {
  return new Proto50101005;
}

void Proto50101005::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101005::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101005::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101005::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101005::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101005::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101005* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101005*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101005::MergeFrom(const Proto50101005& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101005::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101005::CopyFrom(const Proto50101005& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101005::IsInitialized() const {
  
  return true;
}

void Proto50101005::Swap(Proto50101005* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101005::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101005_descriptor_;
  metadata.reflection = Proto50101005_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101006::kMoneyFieldNumber;
#endif  // !_MSC_VER

Proto50101006::Proto50101006()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101006::InitAsDefaultInstance() {
}

Proto50101006::Proto50101006(const Proto50101006& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101006::SharedCtor() {
  _cached_size_ = 0;
  money_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101006::~Proto50101006() {
  SharedDtor();
}

void Proto50101006::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50101006::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101006::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101006_descriptor_;
}

const Proto50101006& Proto50101006::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto50101006* Proto50101006::default_instance_ = NULL;

Proto50101006* Proto50101006::New() const {
  return new Proto50101006;
}

void Proto50101006::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    money_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101006::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 money = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101006::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 money = 1;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->money(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101006::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 money = 1;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->money(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101006::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 money = 1;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101006::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101006* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101006*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101006::MergeFrom(const Proto50101006& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_money()) {
      set_money(from.money());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101006::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101006::CopyFrom(const Proto50101006& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101006::IsInitialized() const {
  
  return true;
}

void Proto50101006::Swap(Proto50101006* other) {
  if (other != this) {
    std::swap(money_, other->money_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101006::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101006_descriptor_;
  metadata.reflection = Proto50101006_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400006::kTipsFlagFieldNumber;
#endif  // !_MSC_VER

Proto10400006::Proto10400006()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400006::InitAsDefaultInstance() {
}

Proto10400006::Proto10400006(const Proto10400006& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400006::SharedCtor() {
  _cached_size_ = 0;
  tips_flag_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400006::~Proto10400006() {
  SharedDtor();
}

void Proto10400006::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400006::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400006::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400006_descriptor_;
}

const Proto10400006& Proto10400006::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto10400006* Proto10400006::default_instance_ = NULL;

Proto10400006* Proto10400006::New() const {
  return new Proto10400006;
}

void Proto10400006::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tips_flag_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400006::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tips_flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tips_flag_)));
          set_has_tips_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400006::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 tips_flag = 1;
  if (has_tips_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tips_flag(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400006::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 tips_flag = 1;
  if (has_tips_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tips_flag(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400006::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 tips_flag = 1;
    if (has_tips_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tips_flag());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400006::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400006* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400006*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400006::MergeFrom(const Proto10400006& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tips_flag()) {
      set_tips_flag(from.tips_flag());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400006::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400006::CopyFrom(const Proto10400006& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400006::IsInitialized() const {
  
  return true;
}

void Proto10400006::Swap(Proto10400006* other) {
  if (other != this) {
    std::swap(tips_flag_, other->tips_flag_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400006::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400006_descriptor_;
  metadata.reflection = Proto10400006_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400918::kScriptListFieldNumber;
const int Proto50400918::kCurrStrengthFieldNumber;
const int Proto50400918::kLeftBuyTimesFieldNumber;
const int Proto50400918::kTrvlTotalPassFieldNumber;
const int Proto50400918::kMaxTrvlPassFieldNumber;
#endif  // !_MSC_VER

Proto50400918::Proto50400918()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400918::InitAsDefaultInstance() {
}

Proto50400918::Proto50400918(const Proto50400918& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400918::SharedCtor() {
  _cached_size_ = 0;
  curr_strength_ = 0;
  left_buy_times_ = 0;
  trvl_total_pass_ = 0;
  max_trvl_pass_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400918::~Proto50400918() {
  SharedDtor();
}

void Proto50400918::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400918::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400918::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400918_descriptor_;
}

const Proto50400918& Proto50400918::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto50400918* Proto50400918::default_instance_ = NULL;

Proto50400918* Proto50400918::New() const {
  return new Proto50400918;
}

void Proto50400918::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    curr_strength_ = 0;
    left_buy_times_ = 0;
    trvl_total_pass_ = 0;
    max_trvl_pass_ = 0;
  }
  script_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400918::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoScriptInfo script_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_script_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_script_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_script_list;
        if (input->ExpectTag(16)) goto parse_curr_strength;
        break;
      }
      
      // optional int32 curr_strength = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_curr_strength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &curr_strength_)));
          set_has_curr_strength();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left_buy_times;
        break;
      }
      
      // optional int32 left_buy_times = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_buy_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_buy_times_)));
          set_has_left_buy_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_trvl_total_pass;
        break;
      }
      
      // optional int32 trvl_total_pass = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_trvl_total_pass:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trvl_total_pass_)));
          set_has_trvl_total_pass();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_max_trvl_pass;
        break;
      }
      
      // optional int32 max_trvl_pass = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_trvl_pass:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_trvl_pass_)));
          set_has_max_trvl_pass();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400918::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoScriptInfo script_list = 1;
  for (int i = 0; i < this->script_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->script_list(i), output);
  }
  
  // optional int32 curr_strength = 2;
  if (has_curr_strength()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->curr_strength(), output);
  }
  
  // optional int32 left_buy_times = 3;
  if (has_left_buy_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_buy_times(), output);
  }
  
  // optional int32 trvl_total_pass = 4;
  if (has_trvl_total_pass()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->trvl_total_pass(), output);
  }
  
  // optional int32 max_trvl_pass = 5;
  if (has_max_trvl_pass()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->max_trvl_pass(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400918::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoScriptInfo script_list = 1;
  for (int i = 0; i < this->script_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->script_list(i), target);
  }
  
  // optional int32 curr_strength = 2;
  if (has_curr_strength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->curr_strength(), target);
  }
  
  // optional int32 left_buy_times = 3;
  if (has_left_buy_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_buy_times(), target);
  }
  
  // optional int32 trvl_total_pass = 4;
  if (has_trvl_total_pass()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->trvl_total_pass(), target);
  }
  
  // optional int32 max_trvl_pass = 5;
  if (has_max_trvl_pass()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->max_trvl_pass(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400918::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 curr_strength = 2;
    if (has_curr_strength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->curr_strength());
    }
    
    // optional int32 left_buy_times = 3;
    if (has_left_buy_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_buy_times());
    }
    
    // optional int32 trvl_total_pass = 4;
    if (has_trvl_total_pass()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->trvl_total_pass());
    }
    
    // optional int32 max_trvl_pass = 5;
    if (has_max_trvl_pass()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_trvl_pass());
    }
    
  }
  // repeated .ProtoScriptInfo script_list = 1;
  total_size += 1 * this->script_list_size();
  for (int i = 0; i < this->script_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->script_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400918::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400918* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400918*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400918::MergeFrom(const Proto50400918& from) {
  GOOGLE_CHECK_NE(&from, this);
  script_list_.MergeFrom(from.script_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_curr_strength()) {
      set_curr_strength(from.curr_strength());
    }
    if (from.has_left_buy_times()) {
      set_left_buy_times(from.left_buy_times());
    }
    if (from.has_trvl_total_pass()) {
      set_trvl_total_pass(from.trvl_total_pass());
    }
    if (from.has_max_trvl_pass()) {
      set_max_trvl_pass(from.max_trvl_pass());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400918::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400918::CopyFrom(const Proto50400918& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400918::IsInitialized() const {
  
  return true;
}

void Proto50400918::Swap(Proto50400918* other) {
  if (other != this) {
    script_list_.Swap(&other->script_list_);
    std::swap(curr_strength_, other->curr_strength_);
    std::swap(left_buy_times_, other->left_buy_times_);
    std::swap(trvl_total_pass_, other->trvl_total_pass_);
    std::swap(max_trvl_pass_, other->max_trvl_pass_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400918::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400918_descriptor_;
  metadata.reflection = Proto50400918_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400347::kFightStateFieldNumber;
const int Proto80400347::kAddExpFieldNumber;
const int Proto80400347::kAddAnimaFieldNumber;
const int Proto80400347::kRankFieldNumber;
const int Proto80400347::kRankChangeFieldNumber;
const int Proto80400347::kRankDifferFieldNumber;
const int Proto80400347::kFigthTimeFieldNumber;
const int Proto80400347::kRankPlayerFieldNumber;
const int Proto80400347::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto80400347::Proto80400347()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400347::InitAsDefaultInstance() {
  rank_player_ = const_cast< ::ProtoAreaRole*>(&::ProtoAreaRole::default_instance());
}

Proto80400347::Proto80400347(const Proto80400347& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400347::SharedCtor() {
  _cached_size_ = 0;
  fight_state_ = 0;
  add_exp_ = 0;
  add_anima_ = 0;
  rank_ = 0;
  rank_change_ = 0;
  rank_differ_ = 0;
  figth_time_ = 0;
  rank_player_ = NULL;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400347::~Proto80400347() {
  SharedDtor();
}

void Proto80400347::SharedDtor() {
  if (this != default_instance_) {
    delete rank_player_;
  }
}

void Proto80400347::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400347::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400347_descriptor_;
}

const Proto80400347& Proto80400347::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient009_2eproto();  return *default_instance_;
}

Proto80400347* Proto80400347::default_instance_ = NULL;

Proto80400347* Proto80400347::New() const {
  return new Proto80400347;
}

void Proto80400347::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fight_state_ = 0;
    add_exp_ = 0;
    add_anima_ = 0;
    rank_ = 0;
    rank_change_ = 0;
    rank_differ_ = 0;
    figth_time_ = 0;
    if (has_rank_player()) {
      if (rank_player_ != NULL) rank_player_->::ProtoAreaRole::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400347::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fight_state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_state_)));
          set_has_fight_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_add_exp;
        break;
      }
      
      // optional int32 add_exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_add_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_exp_)));
          set_has_add_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_add_anima;
        break;
      }
      
      // optional int32 add_anima = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_add_anima:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_anima_)));
          set_has_add_anima();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_rank;
        break;
      }
      
      // optional int32 rank = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_)));
          set_has_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_rank_change;
        break;
      }
      
      // optional int32 rank_change = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_change:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_change_)));
          set_has_rank_change();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_rank_differ;
        break;
      }
      
      // optional int32 rank_differ = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rank_differ:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_differ_)));
          set_has_rank_differ();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_figth_time;
        break;
      }
      
      // optional int32 figth_time = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_figth_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &figth_time_)));
          set_has_figth_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_rank_player;
        break;
      }
      
      // optional .ProtoAreaRole rank_player = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_player:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rank_player()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_index;
        break;
      }
      
      // optional int32 index = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400347::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fight_state = 1;
  if (has_fight_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fight_state(), output);
  }
  
  // optional int32 add_exp = 2;
  if (has_add_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->add_exp(), output);
  }
  
  // optional int32 add_anima = 3;
  if (has_add_anima()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->add_anima(), output);
  }
  
  // optional int32 rank = 4;
  if (has_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->rank(), output);
  }
  
  // optional int32 rank_change = 5;
  if (has_rank_change()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->rank_change(), output);
  }
  
  // optional int32 rank_differ = 6;
  if (has_rank_differ()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->rank_differ(), output);
  }
  
  // optional int32 figth_time = 7;
  if (has_figth_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->figth_time(), output);
  }
  
  // optional .ProtoAreaRole rank_player = 8;
  if (has_rank_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->rank_player(), output);
  }
  
  // optional int32 index = 9;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400347::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fight_state = 1;
  if (has_fight_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fight_state(), target);
  }
  
  // optional int32 add_exp = 2;
  if (has_add_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->add_exp(), target);
  }
  
  // optional int32 add_anima = 3;
  if (has_add_anima()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->add_anima(), target);
  }
  
  // optional int32 rank = 4;
  if (has_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->rank(), target);
  }
  
  // optional int32 rank_change = 5;
  if (has_rank_change()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->rank_change(), target);
  }
  
  // optional int32 rank_differ = 6;
  if (has_rank_differ()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->rank_differ(), target);
  }
  
  // optional int32 figth_time = 7;
  if (has_figth_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->figth_time(), target);
  }
  
  // optional .ProtoAreaRole rank_player = 8;
  if (has_rank_player()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->rank_player(), target);
  }
  
  // optional int32 index = 9;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400347::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fight_state = 1;
    if (has_fight_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_state());
    }
    
    // optional int32 add_exp = 2;
    if (has_add_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_exp());
    }
    
    // optional int32 add_anima = 3;
    if (has_add_anima()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_anima());
    }
    
    // optional int32 rank = 4;
    if (has_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank());
    }
    
    // optional int32 rank_change = 5;
    if (has_rank_change()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_change());
    }
    
    // optional int32 rank_differ = 6;
    if (has_rank_differ()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_differ());
    }
    
    // optional int32 figth_time = 7;
    if (has_figth_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->figth_time());
    }
    
    // optional .ProtoAreaRole rank_player = 8;
    if (has_rank_player()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rank_player());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 index = 9;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400347::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400347* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400347*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400347::MergeFrom(const Proto80400347& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fight_state()) {
      set_fight_state(from.fight_state());
    }
    if (from.has_add_exp()) {
      set_add_exp(from.add_exp());
    }
    if (from.has_add_anima()) {
      set_add_anima(from.add_anima());
    }
    if (from.has_rank()) {
      set_rank(from.rank());
    }
    if (from.has_rank_change()) {
      set_rank_change(from.rank_change());
    }
    if (from.has_rank_differ()) {
      set_rank_differ(from.rank_differ());
    }
    if (from.has_figth_time()) {
      set_figth_time(from.figth_time());
    }
    if (from.has_rank_player()) {
      mutable_rank_player()->::ProtoAreaRole::MergeFrom(from.rank_player());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400347::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400347::CopyFrom(const Proto80400347& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400347::IsInitialized() const {
  
  return true;
}

void Proto80400347::Swap(Proto80400347* other) {
  if (other != this) {
    std::swap(fight_state_, other->fight_state_);
    std::swap(add_exp_, other->add_exp_);
    std::swap(add_anima_, other->add_anima_);
    std::swap(rank_, other->rank_);
    std::swap(rank_change_, other->rank_change_);
    std::swap(rank_differ_, other->rank_differ_);
    std::swap(figth_time_, other->figth_time_);
    std::swap(rank_player_, other->rank_player_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400347::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400347_descriptor_;
  metadata.reflection = Proto80400347_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
