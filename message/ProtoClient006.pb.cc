// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient006.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto50400002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400002_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401301_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401301_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401302_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401302_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401301_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401301_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400112_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400112_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400308_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400308_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400311_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400311_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400333_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400333_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400334_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400334_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400335_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400335_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401401_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401401_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401402_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401402_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401402_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401402_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401401_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401401_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400113_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400113_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400113_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400113_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400114_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400114_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400305_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400305_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400106_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400106_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400107_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400107_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400501_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400501_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400401_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400401_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400402_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400402_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80200004_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80200004_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401412_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401412_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401413_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401413_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401412_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401412_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401411_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401411_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100031_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100031_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100031_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100031_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400306_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400306_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400306_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400306_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400307_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400307_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400307_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400307_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400336_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400336_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400906_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400906_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400905_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400905_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400337_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400337_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400338_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400338_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400308_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400308_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100401_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100401_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100701_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100701_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100405_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100405_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100701_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100701_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100406_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100406_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100407_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100407_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100408_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100408_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100408_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100408_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100409_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100409_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100413_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100413_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient006_2eproto() {
  protobuf_AddDesc_ProtoClient006_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient006.proto");
  GOOGLE_CHECK(file != NULL);
  Proto50400002_descriptor_ = file->message_type(0);
  static const int Proto50400002_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400002, drop_id_),
  };
  Proto50400002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400002_descriptor_,
      Proto50400002::default_instance_,
      Proto50400002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400002));
  Proto51401301_descriptor_ = file->message_type(1);
  static const int Proto51401301_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401301, pre_stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401301, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401301, login_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401301, award_list_),
  };
  Proto51401301_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401301_descriptor_,
      Proto51401301::default_instance_,
      Proto51401301_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401301, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401301, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401301));
  Proto51401302_descriptor_ = file->message_type(2);
  static const int Proto51401302_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401302, config_item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401302, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401302, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401302, received_mark_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401302, pre_stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401302, login_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401302, award_list_),
  };
  Proto51401302_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401302_descriptor_,
      Proto51401302::default_instance_,
      Proto51401302_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401302, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401302, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401302));
  Proto81401301_descriptor_ = file->message_type(3);
  static const int Proto81401301_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401301, item_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401301, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401301, pre_stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401301, stage_),
  };
  Proto81401301_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401301_descriptor_,
      Proto81401301::default_instance_,
      Proto81401301_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401301, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401301, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401301));
  Proto80400112_descriptor_ = file->message_type(4);
  static const int Proto80400112_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400112, drop_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400112, drop_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400112, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400112, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400112, pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400112, viewer_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400112, no_auto_pickup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400112, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400112, left_protect_sec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400112, no_viewer_set_),
  };
  Proto80400112_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400112_descriptor_,
      Proto80400112::default_instance_,
      Proto80400112_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400112, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400112, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400112));
  Proto80400308_descriptor_ = file->message_type(5);
  static const int Proto80400308_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400308, quit_type_),
  };
  Proto80400308_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400308_descriptor_,
      Proto80400308::default_instance_,
      Proto80400308_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400308, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400308, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400308));
  Proto80400311_descriptor_ = file->message_type(6);
  static const int Proto80400311_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400311, role_id_),
  };
  Proto80400311_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400311_descriptor_,
      Proto80400311::default_instance_,
      Proto80400311_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400311, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400311, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400311));
  Proto80400333_descriptor_ = file->message_type(7);
  static const int Proto80400333_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400333, fighter_set_),
  };
  Proto80400333_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400333_descriptor_,
      Proto80400333::default_instance_,
      Proto80400333_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400333, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400333, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400333));
  Proto80400334_descriptor_ = file->message_type(8);
  static const int Proto80400334_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400334, fighting_state_),
  };
  Proto80400334_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400334_descriptor_,
      Proto80400334::default_instance_,
      Proto80400334_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400334, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400334, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400334));
  Proto80400335_descriptor_ = file->message_type(9);
  static const int Proto80400335_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400335, activity_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400335, activity_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400335, is_first_),
  };
  Proto80400335_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400335_descriptor_,
      Proto80400335::default_instance_,
      Proto80400335_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400335, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400335, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400335));
  Proto51401401_descriptor_ = file->message_type(10);
  static const int Proto51401401_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401401, award_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401401, check_in_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401401, has_award_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401401, has_total_award_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401401, check_total_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401401, charge_money_),
  };
  Proto51401401_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401401_descriptor_,
      Proto51401401::default_instance_,
      Proto51401401_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401401, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401401, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401401));
  Proto11401402_descriptor_ = file->message_type(11);
  static const int Proto11401402_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401402, award_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401402, month_day_),
  };
  Proto11401402_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401402_descriptor_,
      Proto11401402::default_instance_,
      Proto11401402_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401402, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401402, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401402));
  Proto51401402_descriptor_ = file->message_type(12);
  static const int Proto51401402_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401402, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401402, check_in_point_),
  };
  Proto51401402_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401402_descriptor_,
      Proto51401402::default_instance_,
      Proto51401402_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401402, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401402, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401402));
  Proto81401401_descriptor_ = file->message_type(13);
  static const int Proto81401401_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401401, check_in_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401401, liveness_award_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401401, exp_restore_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401401, check_in_popup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401401, show_check_in_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401401, level_award_),
  };
  Proto81401401_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401401_descriptor_,
      Proto81401401::default_instance_,
      Proto81401401_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401401, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401401, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401401));
  Proto11400113_descriptor_ = file->message_type(14);
  static const int Proto11400113_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400113, index_),
  };
  Proto11400113_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400113_descriptor_,
      Proto11400113::default_instance_,
      Proto11400113_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400113, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400113, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400113));
  Proto51400113_descriptor_ = file->message_type(15);
  static const int Proto51400113_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400113, map_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400113, map_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400113, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400113, coord_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400113, coord_y_),
  };
  Proto51400113_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400113_descriptor_,
      Proto51400113::default_instance_,
      Proto51400113_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400113, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400113, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400113));
  Proto11400114_descriptor_ = file->message_type(16);
  static const int Proto11400114_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400114, cur_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400114, index_),
  };
  Proto11400114_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400114_descriptor_,
      Proto11400114::default_instance_,
      Proto11400114_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400114, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400114, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400114));
  Proto10400305_descriptor_ = file->message_type(17);
  static const int Proto10400305_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400305, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400305, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400305, coord_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400305, coord_y_),
  };
  Proto10400305_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400305_descriptor_,
      Proto10400305::default_instance_,
      Proto10400305_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400305, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400305, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400305));
  Proto80400106_descriptor_ = file->message_type(18);
  static const int Proto80400106_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400106, effect_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400106, effect_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400106, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400106, pixel_y_),
  };
  Proto80400106_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400106_descriptor_,
      Proto80400106::default_instance_,
      Proto80400106_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400106, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400106, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400106));
  Proto80400107_descriptor_ = file->message_type(19);
  static const int Proto80400107_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400107, effect_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400107, effect_sort_),
  };
  Proto80400107_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400107_descriptor_,
      Proto80400107::default_instance_,
      Proto80400107_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400107, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400107, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400107));
  Proto50400501_descriptor_ = file->message_type(20);
  static const int Proto50400501_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400501, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400501, pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400501, pixel_y_),
  };
  Proto50400501_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400501_descriptor_,
      Proto50400501::default_instance_,
      Proto50400501_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400501, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400501, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400501));
  Proto80400401_descriptor_ = file->message_type(21);
  static const int Proto80400401_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400401, fighter_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400401, blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400401, max_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400401, mount_info_),
  };
  Proto80400401_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400401_descriptor_,
      Proto80400401::default_instance_,
      Proto80400401_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400401, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400401, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400401));
  Proto80400402_descriptor_ = file->message_type(22);
  static const int Proto80400402_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400402, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400402, nearby_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400402, alive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400402, online_),
  };
  Proto80400402_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400402_descriptor_,
      Proto80400402::default_instance_,
      Proto80400402_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400402, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400402, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400402));
  Proto80200004_descriptor_ = file->message_type(23);
  static const int Proto80200004_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80200004, chat_channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80200004, opra_),
  };
  Proto80200004_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80200004_descriptor_,
      Proto80200004::default_instance_,
      Proto80200004_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80200004, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80200004, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80200004));
  Proto11401412_descriptor_ = file->message_type(24);
  static const int Proto11401412_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401412, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401412, restore_type_),
  };
  Proto11401412_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401412_descriptor_,
      Proto11401412::default_instance_,
      Proto11401412_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401412, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401412, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401412));
  Proto11401413_descriptor_ = file->message_type(25);
  static const int Proto11401413_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401413, restore_type_),
  };
  Proto11401413_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401413_descriptor_,
      Proto11401413::default_instance_,
      Proto11401413_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401413, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401413, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401413));
  Proto51401412_descriptor_ = file->message_type(26);
  static const int Proto51401412_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401412, activity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401412, other_info_),
  };
  Proto51401412_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401412_descriptor_,
      Proto51401412::default_instance_,
      Proto51401412_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401412, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401412, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401412));
  Proto51401411_descriptor_ = file->message_type(27);
  static const int Proto51401411_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401411, restore_info_),
  };
  Proto51401411_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401411_descriptor_,
      Proto51401411::default_instance_,
      Proto51401411_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401411, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401411, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401411));
  Proto10100031_descriptor_ = file->message_type(28);
  static const int Proto10100031_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100031, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100031, beast_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100031, query_type_),
  };
  Proto10100031_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100031_descriptor_,
      Proto10100031::default_instance_,
      Proto10100031_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100031, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100031, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100031));
  Proto50100031_descriptor_ = file->message_type(29);
  static const int Proto50100031_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, beast_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, beast_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, beast_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, beast_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, beast_force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, ability_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, growth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, attack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, hit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, crit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, sky_soul_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, earth_soul_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, life_soul_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, skill_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, mount_grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, on_mount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, mount_shape_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, sky_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, earth_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, life_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, query_type_),
  };
  Proto50100031_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100031_descriptor_,
      Proto50100031::default_instance_,
      Proto50100031_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100031, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100031));
  Proto10400306_descriptor_ = file->message_type(30);
  static const int Proto10400306_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400306, page_index_),
  };
  Proto10400306_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400306_descriptor_,
      Proto10400306::default_instance_,
      Proto10400306_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400306, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400306, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400306));
  Proto50400306_descriptor_ = file->message_type(31);
  static const int Proto50400306_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400306, page_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400306, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400306, role_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400306, self_role_),
  };
  Proto50400306_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400306_descriptor_,
      Proto50400306::default_instance_,
      Proto50400306_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400306, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400306, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400306));
  Proto10400307_descriptor_ = file->message_type(32);
  static const int Proto10400307_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400307, page_index_),
  };
  Proto10400307_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400307_descriptor_,
      Proto10400307::default_instance_,
      Proto10400307_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400307, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400307, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400307));
  Proto50400307_descriptor_ = file->message_type(33);
  static const int Proto50400307_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400307, page_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400307, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400307, league_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400307, self_league_),
  };
  Proto50400307_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400307_descriptor_,
      Proto50400307::default_instance_,
      Proto50400307_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400307, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400307, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400307));
  Proto80400336_descriptor_ = file->message_type(34);
  static const int Proto80400336_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400336, win_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400336, win_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400336, win_league_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400336, lose_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400336, lose_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400336, lose_league_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400336, fight_state_),
  };
  Proto80400336_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400336_descriptor_,
      Proto80400336::default_instance_,
      Proto80400336_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400336, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400336, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400336));
  Proto80400906_descriptor_ = file->message_type(35);
  static const int Proto80400906_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400906, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400906, scipt_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400906, used_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400906, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400906, copper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400906, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400906, star_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400906, is_first_pass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400906, ai_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400906, rescue_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400906, present_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400906, next_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400906, no_card_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400906, begin_wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400906, end_wave_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400906, cur_floor_),
  };
  Proto80400906_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400906_descriptor_,
      Proto80400906::default_instance_,
      Proto80400906_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400906, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400906, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400906));
  Proto10400905_descriptor_ = file->message_type(36);
  static const int Proto10400905_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400905, novice_step_),
  };
  Proto10400905_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400905_descriptor_,
      Proto10400905::default_instance_,
      Proto10400905_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400905, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400905, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400905));
  Proto80400337_descriptor_ = file->message_type(37);
  static const int Proto80400337_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400337, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400337, martial_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400337, total_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400337, first_role_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400337, second_role_),
  };
  Proto80400337_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400337_descriptor_,
      Proto80400337::default_instance_,
      Proto80400337_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400337, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400337, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400337));
  Proto80400338_descriptor_ = file->message_type(38);
  static const int Proto80400338_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400338, result_state_),
  };
  Proto80400338_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400338_descriptor_,
      Proto80400338::default_instance_,
      Proto80400338_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400338, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400338, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400338));
  Proto50400308_descriptor_ = file->message_type(39);
  static const int Proto50400308_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400308, sign_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400308, reward_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400308, left_time_),
  };
  Proto50400308_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400308_descriptor_,
      Proto50400308::default_instance_,
      Proto50400308_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400308, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400308, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400308));
  Proto10100401_descriptor_ = file->message_type(40);
  static const int Proto10100401_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100401, fb_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100401, fb_degree_),
  };
  Proto10100401_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100401_descriptor_,
      Proto10100401::default_instance_,
      Proto10100401_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100401, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100401, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100401));
  Proto10100701_descriptor_ = file->message_type(41);
  static const int Proto10100701_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100701, rank_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100701, data_type_),
  };
  Proto10100701_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100701_descriptor_,
      Proto10100701::default_instance_,
      Proto10100701_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100701, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100701, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100701));
  Proto10100405_descriptor_ = file->message_type(42);
  static const int Proto10100405_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100405, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100405, is_couple_),
  };
  Proto10100405_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100405_descriptor_,
      Proto10100405::default_instance_,
      Proto10100405_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100405, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100405, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100405));
  Proto50100701_descriptor_ = file->message_type(43);
  static const int Proto50100701_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100701, rank_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100701, data_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100701, rank_record_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100701, my_rank_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100701, is_worship_),
  };
  Proto50100701_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100701_descriptor_,
      Proto50100701::default_instance_,
      Proto50100701_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100701, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100701, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100701));
  Proto10100406_descriptor_ = file->message_type(44);
  static const int Proto10100406_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100406, leader_id_),
  };
  Proto10100406_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100406_descriptor_,
      Proto10100406::default_instance_,
      Proto10100406_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100406, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100406, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100406));
  Proto10100407_descriptor_ = file->message_type(45);
  static const int Proto10100407_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100407, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100407, oper_type_),
  };
  Proto10100407_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100407_descriptor_,
      Proto10100407::default_instance_,
      Proto10100407_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100407, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100407, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100407));
  Proto10100408_descriptor_ = file->message_type(46);
  static const int Proto10100408_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100408, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100408, oper_type_),
  };
  Proto10100408_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100408_descriptor_,
      Proto10100408::default_instance_,
      Proto10100408_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100408, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100408, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100408));
  Proto50100408_descriptor_ = file->message_type(47);
  static const int Proto50100408_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100408, role_id_),
  };
  Proto50100408_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100408_descriptor_,
      Proto50100408::default_instance_,
      Proto50100408_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100408, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100408, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100408));
  Proto10100409_descriptor_ = file->message_type(48);
  static const int Proto10100409_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100409, ready_state_),
  };
  Proto10100409_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100409_descriptor_,
      Proto10100409::default_instance_,
      Proto10100409_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100409, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100409, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100409));
  Proto10100413_descriptor_ = file->message_type(49);
  static const int Proto10100413_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100413, fb_id_),
  };
  Proto10100413_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100413_descriptor_,
      Proto10100413::default_instance_,
      Proto10100413_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100413, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100413, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100413));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient006_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400002_descriptor_, &Proto50400002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401301_descriptor_, &Proto51401301::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401302_descriptor_, &Proto51401302::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401301_descriptor_, &Proto81401301::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400112_descriptor_, &Proto80400112::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400308_descriptor_, &Proto80400308::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400311_descriptor_, &Proto80400311::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400333_descriptor_, &Proto80400333::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400334_descriptor_, &Proto80400334::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400335_descriptor_, &Proto80400335::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401401_descriptor_, &Proto51401401::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401402_descriptor_, &Proto11401402::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401402_descriptor_, &Proto51401402::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401401_descriptor_, &Proto81401401::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400113_descriptor_, &Proto11400113::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400113_descriptor_, &Proto51400113::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400114_descriptor_, &Proto11400114::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400305_descriptor_, &Proto10400305::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400106_descriptor_, &Proto80400106::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400107_descriptor_, &Proto80400107::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400501_descriptor_, &Proto50400501::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400401_descriptor_, &Proto80400401::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400402_descriptor_, &Proto80400402::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80200004_descriptor_, &Proto80200004::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401412_descriptor_, &Proto11401412::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401413_descriptor_, &Proto11401413::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401412_descriptor_, &Proto51401412::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401411_descriptor_, &Proto51401411::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100031_descriptor_, &Proto10100031::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100031_descriptor_, &Proto50100031::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400306_descriptor_, &Proto10400306::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400306_descriptor_, &Proto50400306::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400307_descriptor_, &Proto10400307::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400307_descriptor_, &Proto50400307::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400336_descriptor_, &Proto80400336::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400906_descriptor_, &Proto80400906::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400905_descriptor_, &Proto10400905::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400337_descriptor_, &Proto80400337::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400338_descriptor_, &Proto80400338::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400308_descriptor_, &Proto50400308::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100401_descriptor_, &Proto10100401::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100701_descriptor_, &Proto10100701::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100405_descriptor_, &Proto10100405::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100701_descriptor_, &Proto50100701::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100406_descriptor_, &Proto10100406::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100407_descriptor_, &Proto10100407::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100408_descriptor_, &Proto10100408::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100408_descriptor_, &Proto50100408::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100409_descriptor_, &Proto10100409::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100413_descriptor_, &Proto10100413::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient006_2eproto() {
  delete Proto50400002::default_instance_;
  delete Proto50400002_reflection_;
  delete Proto51401301::default_instance_;
  delete Proto51401301_reflection_;
  delete Proto51401302::default_instance_;
  delete Proto51401302_reflection_;
  delete Proto81401301::default_instance_;
  delete Proto81401301_reflection_;
  delete Proto80400112::default_instance_;
  delete Proto80400112_reflection_;
  delete Proto80400308::default_instance_;
  delete Proto80400308_reflection_;
  delete Proto80400311::default_instance_;
  delete Proto80400311_reflection_;
  delete Proto80400333::default_instance_;
  delete Proto80400333_reflection_;
  delete Proto80400334::default_instance_;
  delete Proto80400334_reflection_;
  delete Proto80400335::default_instance_;
  delete Proto80400335_reflection_;
  delete Proto51401401::default_instance_;
  delete Proto51401401_reflection_;
  delete Proto11401402::default_instance_;
  delete Proto11401402_reflection_;
  delete Proto51401402::default_instance_;
  delete Proto51401402_reflection_;
  delete Proto81401401::default_instance_;
  delete Proto81401401_reflection_;
  delete Proto11400113::default_instance_;
  delete Proto11400113_reflection_;
  delete Proto51400113::default_instance_;
  delete Proto51400113_reflection_;
  delete Proto11400114::default_instance_;
  delete Proto11400114_reflection_;
  delete Proto10400305::default_instance_;
  delete Proto10400305_reflection_;
  delete Proto80400106::default_instance_;
  delete Proto80400106_reflection_;
  delete Proto80400107::default_instance_;
  delete Proto80400107_reflection_;
  delete Proto50400501::default_instance_;
  delete Proto50400501_reflection_;
  delete Proto80400401::default_instance_;
  delete Proto80400401_reflection_;
  delete Proto80400402::default_instance_;
  delete Proto80400402_reflection_;
  delete Proto80200004::default_instance_;
  delete Proto80200004_reflection_;
  delete Proto11401412::default_instance_;
  delete Proto11401412_reflection_;
  delete Proto11401413::default_instance_;
  delete Proto11401413_reflection_;
  delete Proto51401412::default_instance_;
  delete Proto51401412_reflection_;
  delete Proto51401411::default_instance_;
  delete Proto51401411_reflection_;
  delete Proto10100031::default_instance_;
  delete Proto10100031_reflection_;
  delete Proto50100031::default_instance_;
  delete Proto50100031_reflection_;
  delete Proto10400306::default_instance_;
  delete Proto10400306_reflection_;
  delete Proto50400306::default_instance_;
  delete Proto50400306_reflection_;
  delete Proto10400307::default_instance_;
  delete Proto10400307_reflection_;
  delete Proto50400307::default_instance_;
  delete Proto50400307_reflection_;
  delete Proto80400336::default_instance_;
  delete Proto80400336_reflection_;
  delete Proto80400906::default_instance_;
  delete Proto80400906_reflection_;
  delete Proto10400905::default_instance_;
  delete Proto10400905_reflection_;
  delete Proto80400337::default_instance_;
  delete Proto80400337_reflection_;
  delete Proto80400338::default_instance_;
  delete Proto80400338_reflection_;
  delete Proto50400308::default_instance_;
  delete Proto50400308_reflection_;
  delete Proto10100401::default_instance_;
  delete Proto10100401_reflection_;
  delete Proto10100701::default_instance_;
  delete Proto10100701_reflection_;
  delete Proto10100405::default_instance_;
  delete Proto10100405_reflection_;
  delete Proto50100701::default_instance_;
  delete Proto50100701_reflection_;
  delete Proto10100406::default_instance_;
  delete Proto10100406_reflection_;
  delete Proto10100407::default_instance_;
  delete Proto10100407_reflection_;
  delete Proto10100408::default_instance_;
  delete Proto10100408_reflection_;
  delete Proto50100408::default_instance_;
  delete Proto50100408_reflection_;
  delete Proto10100409::default_instance_;
  delete Proto10100409_reflection_;
  delete Proto10100413::default_instance_;
  delete Proto10100413_reflection_;
}

void protobuf_AddDesc_ProtoClient006_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient006.proto\032\021ProtoPublic.prot"
    "o\" \n\rProto50400002\022\017\n\007drop_id\030\001 \001(\003\"Y\n\rP"
    "roto51401301\022\021\n\tpre_stage\030\001 \001(\005\022\r\n\005stage"
    "\030\002 \001(\005\022\022\n\nlogin_time\030\003 \001(\003\022\022\n\naward_list"
    "\030\004 \003(\005\"\233\001\n\rProto51401302\022\026\n\016config_item_"
    "id\030\001 \003(\005\022\021\n\tleft_time\030\002 \001(\003\022\r\n\005stage\030\003 \001"
    "(\005\022\025\n\rreceived_mark\030\004 \001(\005\022\021\n\tpre_stage\030\005"
    " \001(\005\022\022\n\nlogin_time\030\006 \001(\003\022\022\n\naward_list\030\007"
    " \003(\005\"X\n\rProto81401301\022\022\n\nitem_count\030\001 \001("
    "\005\022\021\n\tleft_time\030\002 \001(\003\022\021\n\tpre_stage\030\003 \001(\005\022"
    "\r\n\005stage\030\004 \001(\005\"\323\001\n\rProto80400112\022\017\n\007drop"
    "_id\030\001 \001(\003\022\021\n\tdrop_type\030\002 \001(\005\022\017\n\007item_id\030"
    "\003 \001(\005\022\017\n\007pixel_x\030\004 \001(\005\022\017\n\007pixel_y\030\005 \001(\005\022"
    "\022\n\nviewer_set\030\006 \003(\003\022\026\n\016no_auto_pickup\030\007 "
    "\001(\005\022\016\n\006amount\030\010 \001(\005\022\030\n\020left_protect_sec\030"
    "\t \001(\005\022\025\n\rno_viewer_set\030\n \003(\003\"\"\n\rProto804"
    "00308\022\021\n\tquit_type\030\001 \001(\005\" \n\rProto8040031"
    "1\022\017\n\007role_id\030\001 \001(\003\"9\n\rProto80400333\022(\n\013f"
    "ighter_set\030\001 \003(\0132\023.ProtoLeagueFighter\"\'\n"
    "\rProto80400334\022\026\n\016fighting_state\030\001 \001(\005\"P"
    "\n\rProto80400335\022\025\n\ractivity_type\030\001 \001(\005\022\026"
    "\n\016activity_state\030\002 \001(\005\022\020\n\010is_first\030\003 \001(\005"
    "\"\231\001\n\rProto51401401\022\023\n\013award_index\030\001 \001(\005\022"
    "\026\n\016check_in_point\030\002 \001(\005\022\021\n\thas_award\030\003 \001"
    "(\005\022\027\n\017has_total_award\030\004 \001(\005\022\031\n\021check_tot"
    "al_index\030\005 \001(\005\022\024\n\014charge_money\030\006 \001(\005\"7\n\r"
    "Proto11401402\022\023\n\013award_index\030\001 \001(\005\022\021\n\tmo"
    "nth_day\030\002 \001(\005\"7\n\rProto51401402\022\016\n\006status"
    "\030\001 \001(\005\022\026\n\016check_in_point\030\002 \001(\005\"\230\001\n\rProto"
    "81401401\022\020\n\010check_in\030\001 \001(\005\022\026\n\016liveness_a"
    "ward\030\002 \001(\005\022\023\n\013exp_restore\030\003 \001(\005\022\026\n\016check"
    "_in_popup\030\004 \001(\005\022\033\n\023show_check_in_point\030\005"
    " \001(\005\022\023\n\013level_award\030\006 \001(\005\"\036\n\rProto114001"
    "13\022\r\n\005index\030\001 \001(\005\"f\n\rProto51400113\022\021\n\tma"
    "p_index\030\001 \001(\005\022\021\n\tmap_count\030\002 \001(\005\022\r\n\005stat"
    "e\030\003 \001(\005\022\017\n\007coord_x\030\004 \001(\005\022\017\n\007coord_y\030\005 \001("
    "\005\"1\n\rProto11400114\022\021\n\tcur_index\030\001 \003(\005\022\r\n"
    "\005index\030\002 \001(\005\"R\n\rProto10400305\022\r\n\005index\030\001"
    " \001(\005\022\020\n\010scene_id\030\002 \001(\005\022\017\n\007coord_x\030\003 \001(\005\022"
    "\017\n\007coord_y\030\004 \001(\005\"Y\n\rProto80400106\022\021\n\teff"
    "ect_id\030\001 \001(\005\022\023\n\013effect_sort\030\002 \001(\005\022\017\n\007pix"
    "el_x\030\003 \001(\005\022\017\n\007pixel_y\030\004 \001(\005\"7\n\rProto8040"
    "0107\022\021\n\teffect_id\030\001 \001(\005\022\023\n\013effect_sort\030\002"
    " \001(\005\"C\n\rProto50400501\022\020\n\010scene_id\030\001 \001(\005\022"
    "\017\n\007pixel_x\030\002 \001(\005\022\017\n\007pixel_y\030\003 \001(\005\"h\n\rPro"
    "to80400401\022\022\n\nfighter_id\030\001 \001(\003\022\r\n\005blood\030"
    "\002 \001(\005\022\021\n\tmax_blood\030\003 \001(\005\022!\n\nmount_info\030\004"
    " \003(\0132\r.ProtoPairObj\"O\n\rProto80400402\022\017\n\007"
    "role_id\030\001 \001(\003\022\016\n\006nearby\030\002 \001(\005\022\r\n\005alive\030\003"
    " \001(\005\022\016\n\006online\030\004 \001(\005\"3\n\rProto80200004\022\024\n"
    "\014chat_channel\030\001 \001(\005\022\014\n\004opra\030\002 \001(\005\":\n\rPro"
    "to11401412\022\023\n\013activity_id\030\001 \001(\005\022\024\n\014resto"
    "re_type\030\002 \001(\005\"%\n\rProto11401413\022\024\n\014restor"
    "e_type\030\001 \001(\005\"E\n\rProto51401412\022\020\n\010activit"
    "y\030\001 \001(\005\022\"\n\nother_info\030\002 \001(\0132\016.ProtoThree"
    "Obj\"7\n\rProto51401411\022&\n\014restore_info\030\001 \003"
    "(\0132\020.ProtoExpRestore\"F\n\rProto10100031\022\017\n"
    "\007role_id\030\001 \001(\003\022\020\n\010beast_id\030\002 \001(\003\022\022\n\nquer"
    "y_type\030\003 \001(\005\"\272\003\n\rProto50100031\022\017\n\007role_i"
    "d\030\001 \001(\003\022\020\n\010beast_id\030\002 \001(\003\022\022\n\nbeast_sort\030"
    "\003 \001(\005\022\022\n\nbeast_name\030\004 \001(\t\022\023\n\013beast_level"
    "\030\005 \001(\005\022\023\n\013beast_force\030\006 \001(\005\022\017\n\007ability\030\007"
    " \001(\005\022\016\n\006growth\030\010 \001(\005\022\016\n\006attack\030\t \001(\005\022\013\n\003"
    "hit\030\n \001(\005\022\014\n\004crit\030\013 \001(\005\022\020\n\010sky_soul\030\014 \001("
    "\005\022\022\n\nearth_soul\030\r \001(\005\022\021\n\tlife_soul\030\016 \001(\005"
    "\022#\n\tskill_set\030\017 \003(\0132\020.ProtoBeastSkill\022\023\n"
    "\013mount_grade\030\020 \001(\005\022\020\n\010on_mount\030\021 \001(\005\022\023\n\013"
    "mount_shape\030\022 \001(\005\022\021\n\tsky_value\030\023 \001(\005\022\023\n\013"
    "earth_value\030\024 \001(\005\022\022\n\nlife_value\030\025 \001(\005\022\022\n"
    "\nquery_type\030\026 \001(\005\"#\n\rProto10400306\022\022\n\npa"
    "ge_index\030\001 \001(\005\"x\n\rProto50400306\022\022\n\npage_"
    "index\030\001 \001(\005\022\022\n\ntotal_page\030\002 \001(\005\022\036\n\010role_"
    "set\030\003 \003(\0132\014.ProtoLMRole\022\037\n\tself_role\030\004 \001"
    "(\0132\014.ProtoLMRole\"#\n\rProto10400307\022\022\n\npag"
    "e_index\030\001 \001(\005\"\202\001\n\rProto50400307\022\022\n\npage_"
    "index\030\001 \001(\005\022\022\n\ntotal_page\030\002 \001(\005\022#\n\nleagu"
    "e_set\030\003 \003(\0132\017.ProtoMarLeague\022$\n\013self_lea"
    "gue\030\004 \001(\0132\017.ProtoMarLeague\"\223\001\n\rProto8040"
    "0336\022\016\n\006win_id\030\001 \001(\003\022\020\n\010win_name\030\002 \001(\t\022\022"
    "\n\nwin_league\030\003 \001(\t\022\017\n\007lose_id\030\004 \001(\003\022\021\n\tl"
    "ose_name\030\005 \001(\t\022\023\n\013lose_league\030\006 \001(\t\022\023\n\013f"
    "ight_state\030\007 \001(\005\"\302\002\n\rProto80400906\022\014\n\004fl"
    "ag\030\001 \001(\005\022\022\n\nscipt_sort\030\002 \001(\005\022\021\n\tused_tic"
    "k\030\003 \001(\005\022\013\n\003exp\030\004 \001(\005\022\016\n\006copper\030\005 \001(\005\022\030\n\004"
    "item\030\006 \003(\0132\n.ProtoItem\022\022\n\nstar_level\030\007 \003"
    "(\005\022\025\n\ris_first_pass\030\010 \001(\005\022\020\n\010ai_score\030\t "
    "\001(\005\022\025\n\rrescue_amount\030\n \001(\005\022\024\n\014present_so"
    "rt\030\013 \001(\005\022\021\n\tnext_sort\030\014 \001(\005\022\017\n\007no_card\030\r"
    " \001(\005\022\022\n\nbegin_wave\030\016 \001(\005\022\020\n\010end_wave\030\017 \001"
    "(\005\022\021\n\tcur_floor\030\020 \001(\005\"$\n\rProto10400905\022\023"
    "\n\013novice_step\030\001 \001(\005\"\226\001\n\rProto80400337\022\021\n"
    "\tleft_time\030\001 \001(\005\022\025\n\rmartial_state\030\002 \001(\005\022"
    "\022\n\ntotal_time\030\003 \001(\005\022\"\n\nfirst_role\030\004 \001(\0132"
    "\016.ProtoRoleInfo\022#\n\013second_role\030\005 \001(\0132\016.P"
    "rotoRoleInfo\"%\n\rProto80400338\022\024\n\014result_"
    "state\030\001 \001(\005\"J\n\rProto50400308\022\021\n\tsign_fla"
    "g\030\001 \001(\005\022\023\n\013reward_flag\030\002 \001(\005\022\021\n\tleft_tim"
    "e\030\003 \001(\005\"1\n\rProto10100401\022\r\n\005fb_id\030\001 \001(\005\022"
    "\021\n\tfb_degree\030\002 \001(\005\"5\n\rProto10100701\022\021\n\tr"
    "ank_type\030\001 \001(\005\022\021\n\tdata_type\030\002 \001(\005\"3\n\rPro"
    "to10100405\022\017\n\007role_id\030\001 \001(\003\022\021\n\tis_couple"
    "\030\002 \001(\005\"\237\001\n\rProto50100701\022\021\n\trank_type\030\001 "
    "\001(\005\022\021\n\tdata_type\030\002 \001(\005\022*\n\020rank_record_li"
    "st\030\003 \003(\0132\020.ProtoRankRecord\022(\n\016my_rank_re"
    "cord\030\004 \001(\0132\020.ProtoRankRecord\022\022\n\nis_worsh"
    "ip\030\005 \001(\005\"\"\n\rProto10100406\022\021\n\tleader_id\030\001"
    " \001(\003\"3\n\rProto10100407\022\017\n\007role_id\030\001 \003(\003\022\021"
    "\n\toper_type\030\002 \001(\005\"3\n\rProto10100408\022\017\n\007ro"
    "le_id\030\001 \003(\003\022\021\n\toper_type\030\002 \001(\005\" \n\rProto5"
    "0100408\022\017\n\007role_id\030\001 \003(\003\"$\n\rProto1010040"
    "9\022\023\n\013ready_state\030\001 \001(\010\"\036\n\rProto10100413\022"
    "\r\n\005fb_id\030\001 \001(\005", 4454);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient006.proto", &protobuf_RegisterTypes);
  Proto50400002::default_instance_ = new Proto50400002();
  Proto51401301::default_instance_ = new Proto51401301();
  Proto51401302::default_instance_ = new Proto51401302();
  Proto81401301::default_instance_ = new Proto81401301();
  Proto80400112::default_instance_ = new Proto80400112();
  Proto80400308::default_instance_ = new Proto80400308();
  Proto80400311::default_instance_ = new Proto80400311();
  Proto80400333::default_instance_ = new Proto80400333();
  Proto80400334::default_instance_ = new Proto80400334();
  Proto80400335::default_instance_ = new Proto80400335();
  Proto51401401::default_instance_ = new Proto51401401();
  Proto11401402::default_instance_ = new Proto11401402();
  Proto51401402::default_instance_ = new Proto51401402();
  Proto81401401::default_instance_ = new Proto81401401();
  Proto11400113::default_instance_ = new Proto11400113();
  Proto51400113::default_instance_ = new Proto51400113();
  Proto11400114::default_instance_ = new Proto11400114();
  Proto10400305::default_instance_ = new Proto10400305();
  Proto80400106::default_instance_ = new Proto80400106();
  Proto80400107::default_instance_ = new Proto80400107();
  Proto50400501::default_instance_ = new Proto50400501();
  Proto80400401::default_instance_ = new Proto80400401();
  Proto80400402::default_instance_ = new Proto80400402();
  Proto80200004::default_instance_ = new Proto80200004();
  Proto11401412::default_instance_ = new Proto11401412();
  Proto11401413::default_instance_ = new Proto11401413();
  Proto51401412::default_instance_ = new Proto51401412();
  Proto51401411::default_instance_ = new Proto51401411();
  Proto10100031::default_instance_ = new Proto10100031();
  Proto50100031::default_instance_ = new Proto50100031();
  Proto10400306::default_instance_ = new Proto10400306();
  Proto50400306::default_instance_ = new Proto50400306();
  Proto10400307::default_instance_ = new Proto10400307();
  Proto50400307::default_instance_ = new Proto50400307();
  Proto80400336::default_instance_ = new Proto80400336();
  Proto80400906::default_instance_ = new Proto80400906();
  Proto10400905::default_instance_ = new Proto10400905();
  Proto80400337::default_instance_ = new Proto80400337();
  Proto80400338::default_instance_ = new Proto80400338();
  Proto50400308::default_instance_ = new Proto50400308();
  Proto10100401::default_instance_ = new Proto10100401();
  Proto10100701::default_instance_ = new Proto10100701();
  Proto10100405::default_instance_ = new Proto10100405();
  Proto50100701::default_instance_ = new Proto50100701();
  Proto10100406::default_instance_ = new Proto10100406();
  Proto10100407::default_instance_ = new Proto10100407();
  Proto10100408::default_instance_ = new Proto10100408();
  Proto50100408::default_instance_ = new Proto50100408();
  Proto10100409::default_instance_ = new Proto10100409();
  Proto10100413::default_instance_ = new Proto10100413();
  Proto50400002::default_instance_->InitAsDefaultInstance();
  Proto51401301::default_instance_->InitAsDefaultInstance();
  Proto51401302::default_instance_->InitAsDefaultInstance();
  Proto81401301::default_instance_->InitAsDefaultInstance();
  Proto80400112::default_instance_->InitAsDefaultInstance();
  Proto80400308::default_instance_->InitAsDefaultInstance();
  Proto80400311::default_instance_->InitAsDefaultInstance();
  Proto80400333::default_instance_->InitAsDefaultInstance();
  Proto80400334::default_instance_->InitAsDefaultInstance();
  Proto80400335::default_instance_->InitAsDefaultInstance();
  Proto51401401::default_instance_->InitAsDefaultInstance();
  Proto11401402::default_instance_->InitAsDefaultInstance();
  Proto51401402::default_instance_->InitAsDefaultInstance();
  Proto81401401::default_instance_->InitAsDefaultInstance();
  Proto11400113::default_instance_->InitAsDefaultInstance();
  Proto51400113::default_instance_->InitAsDefaultInstance();
  Proto11400114::default_instance_->InitAsDefaultInstance();
  Proto10400305::default_instance_->InitAsDefaultInstance();
  Proto80400106::default_instance_->InitAsDefaultInstance();
  Proto80400107::default_instance_->InitAsDefaultInstance();
  Proto50400501::default_instance_->InitAsDefaultInstance();
  Proto80400401::default_instance_->InitAsDefaultInstance();
  Proto80400402::default_instance_->InitAsDefaultInstance();
  Proto80200004::default_instance_->InitAsDefaultInstance();
  Proto11401412::default_instance_->InitAsDefaultInstance();
  Proto11401413::default_instance_->InitAsDefaultInstance();
  Proto51401412::default_instance_->InitAsDefaultInstance();
  Proto51401411::default_instance_->InitAsDefaultInstance();
  Proto10100031::default_instance_->InitAsDefaultInstance();
  Proto50100031::default_instance_->InitAsDefaultInstance();
  Proto10400306::default_instance_->InitAsDefaultInstance();
  Proto50400306::default_instance_->InitAsDefaultInstance();
  Proto10400307::default_instance_->InitAsDefaultInstance();
  Proto50400307::default_instance_->InitAsDefaultInstance();
  Proto80400336::default_instance_->InitAsDefaultInstance();
  Proto80400906::default_instance_->InitAsDefaultInstance();
  Proto10400905::default_instance_->InitAsDefaultInstance();
  Proto80400337::default_instance_->InitAsDefaultInstance();
  Proto80400338::default_instance_->InitAsDefaultInstance();
  Proto50400308::default_instance_->InitAsDefaultInstance();
  Proto10100401::default_instance_->InitAsDefaultInstance();
  Proto10100701::default_instance_->InitAsDefaultInstance();
  Proto10100405::default_instance_->InitAsDefaultInstance();
  Proto50100701::default_instance_->InitAsDefaultInstance();
  Proto10100406::default_instance_->InitAsDefaultInstance();
  Proto10100407::default_instance_->InitAsDefaultInstance();
  Proto10100408::default_instance_->InitAsDefaultInstance();
  Proto50100408::default_instance_->InitAsDefaultInstance();
  Proto10100409::default_instance_->InitAsDefaultInstance();
  Proto10100413::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient006_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient006_2eproto {
  StaticDescriptorInitializer_ProtoClient006_2eproto() {
    protobuf_AddDesc_ProtoClient006_2eproto();
  }
} static_descriptor_initializer_ProtoClient006_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto50400002::kDropIdFieldNumber;
#endif  // !_MSC_VER

Proto50400002::Proto50400002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400002::InitAsDefaultInstance() {
}

Proto50400002::Proto50400002(const Proto50400002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400002::SharedCtor() {
  _cached_size_ = 0;
  drop_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400002::~Proto50400002() {
  SharedDtor();
}

void Proto50400002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400002_descriptor_;
}

const Proto50400002& Proto50400002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto50400002* Proto50400002::default_instance_ = NULL;

Proto50400002* Proto50400002::New() const {
  return new Proto50400002;
}

void Proto50400002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    drop_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 drop_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &drop_id_)));
          set_has_drop_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 drop_id = 1;
  if (has_drop_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->drop_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 drop_id = 1;
  if (has_drop_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->drop_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 drop_id = 1;
    if (has_drop_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->drop_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400002::MergeFrom(const Proto50400002& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_drop_id()) {
      set_drop_id(from.drop_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400002::CopyFrom(const Proto50400002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400002::IsInitialized() const {
  
  return true;
}

void Proto50400002::Swap(Proto50400002* other) {
  if (other != this) {
    std::swap(drop_id_, other->drop_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400002_descriptor_;
  metadata.reflection = Proto50400002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401301::kPreStageFieldNumber;
const int Proto51401301::kStageFieldNumber;
const int Proto51401301::kLoginTimeFieldNumber;
const int Proto51401301::kAwardListFieldNumber;
#endif  // !_MSC_VER

Proto51401301::Proto51401301()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401301::InitAsDefaultInstance() {
}

Proto51401301::Proto51401301(const Proto51401301& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401301::SharedCtor() {
  _cached_size_ = 0;
  pre_stage_ = 0;
  stage_ = 0;
  login_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401301::~Proto51401301() {
  SharedDtor();
}

void Proto51401301::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401301::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401301::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401301_descriptor_;
}

const Proto51401301& Proto51401301::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto51401301* Proto51401301::default_instance_ = NULL;

Proto51401301* Proto51401301::New() const {
  return new Proto51401301;
}

void Proto51401301::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    pre_stage_ = 0;
    stage_ = 0;
    login_time_ = GOOGLE_LONGLONG(0);
  }
  award_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401301::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 pre_stage = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pre_stage_)));
          set_has_pre_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_stage;
        break;
      }
      
      // optional int32 stage = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_)));
          set_has_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_login_time;
        break;
      }
      
      // optional int64 login_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_login_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &login_time_)));
          set_has_login_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_award_list;
        break;
      }
      
      // repeated int32 award_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_award_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_award_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_award_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_award_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401301::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 pre_stage = 1;
  if (has_pre_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->pre_stage(), output);
  }
  
  // optional int32 stage = 2;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stage(), output);
  }
  
  // optional int64 login_time = 3;
  if (has_login_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->login_time(), output);
  }
  
  // repeated int32 award_list = 4;
  for (int i = 0; i < this->award_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->award_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401301::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 pre_stage = 1;
  if (has_pre_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->pre_stage(), target);
  }
  
  // optional int32 stage = 2;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stage(), target);
  }
  
  // optional int64 login_time = 3;
  if (has_login_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->login_time(), target);
  }
  
  // repeated int32 award_list = 4;
  for (int i = 0; i < this->award_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->award_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401301::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 pre_stage = 1;
    if (has_pre_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pre_stage());
    }
    
    // optional int32 stage = 2;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stage());
    }
    
    // optional int64 login_time = 3;
    if (has_login_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->login_time());
    }
    
  }
  // repeated int32 award_list = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->award_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->award_list(i));
    }
    total_size += 1 * this->award_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401301::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401301* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401301*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401301::MergeFrom(const Proto51401301& from) {
  GOOGLE_CHECK_NE(&from, this);
  award_list_.MergeFrom(from.award_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pre_stage()) {
      set_pre_stage(from.pre_stage());
    }
    if (from.has_stage()) {
      set_stage(from.stage());
    }
    if (from.has_login_time()) {
      set_login_time(from.login_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401301::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401301::CopyFrom(const Proto51401301& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401301::IsInitialized() const {
  
  return true;
}

void Proto51401301::Swap(Proto51401301* other) {
  if (other != this) {
    std::swap(pre_stage_, other->pre_stage_);
    std::swap(stage_, other->stage_);
    std::swap(login_time_, other->login_time_);
    award_list_.Swap(&other->award_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401301::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401301_descriptor_;
  metadata.reflection = Proto51401301_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401302::kConfigItemIdFieldNumber;
const int Proto51401302::kLeftTimeFieldNumber;
const int Proto51401302::kStageFieldNumber;
const int Proto51401302::kReceivedMarkFieldNumber;
const int Proto51401302::kPreStageFieldNumber;
const int Proto51401302::kLoginTimeFieldNumber;
const int Proto51401302::kAwardListFieldNumber;
#endif  // !_MSC_VER

Proto51401302::Proto51401302()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401302::InitAsDefaultInstance() {
}

Proto51401302::Proto51401302(const Proto51401302& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401302::SharedCtor() {
  _cached_size_ = 0;
  left_time_ = GOOGLE_LONGLONG(0);
  stage_ = 0;
  received_mark_ = 0;
  pre_stage_ = 0;
  login_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401302::~Proto51401302() {
  SharedDtor();
}

void Proto51401302::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401302::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401302::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401302_descriptor_;
}

const Proto51401302& Proto51401302::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto51401302* Proto51401302::default_instance_ = NULL;

Proto51401302* Proto51401302::New() const {
  return new Proto51401302;
}

void Proto51401302::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    left_time_ = GOOGLE_LONGLONG(0);
    stage_ = 0;
    received_mark_ = 0;
    pre_stage_ = 0;
    login_time_ = GOOGLE_LONGLONG(0);
  }
  config_item_id_.Clear();
  award_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401302::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 config_item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_config_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_config_item_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_config_item_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_config_item_id;
        if (input->ExpectTag(16)) goto parse_left_time;
        break;
      }
      
      // optional int64 left_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_stage;
        break;
      }
      
      // optional int32 stage = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_)));
          set_has_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_received_mark;
        break;
      }
      
      // optional int32 received_mark = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_received_mark:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &received_mark_)));
          set_has_received_mark();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_pre_stage;
        break;
      }
      
      // optional int32 pre_stage = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pre_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pre_stage_)));
          set_has_pre_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_login_time;
        break;
      }
      
      // optional int64 login_time = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_login_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &login_time_)));
          set_has_login_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_award_list;
        break;
      }
      
      // repeated int32 award_list = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_award_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_award_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_award_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_award_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401302::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 config_item_id = 1;
  for (int i = 0; i < this->config_item_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->config_item_id(i), output);
  }
  
  // optional int64 left_time = 2;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->left_time(), output);
  }
  
  // optional int32 stage = 3;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->stage(), output);
  }
  
  // optional int32 received_mark = 4;
  if (has_received_mark()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->received_mark(), output);
  }
  
  // optional int32 pre_stage = 5;
  if (has_pre_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pre_stage(), output);
  }
  
  // optional int64 login_time = 6;
  if (has_login_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->login_time(), output);
  }
  
  // repeated int32 award_list = 7;
  for (int i = 0; i < this->award_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->award_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401302::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 config_item_id = 1;
  for (int i = 0; i < this->config_item_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->config_item_id(i), target);
  }
  
  // optional int64 left_time = 2;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->left_time(), target);
  }
  
  // optional int32 stage = 3;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->stage(), target);
  }
  
  // optional int32 received_mark = 4;
  if (has_received_mark()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->received_mark(), target);
  }
  
  // optional int32 pre_stage = 5;
  if (has_pre_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pre_stage(), target);
  }
  
  // optional int64 login_time = 6;
  if (has_login_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->login_time(), target);
  }
  
  // repeated int32 award_list = 7;
  for (int i = 0; i < this->award_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->award_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401302::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int64 left_time = 2;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->left_time());
    }
    
    // optional int32 stage = 3;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stage());
    }
    
    // optional int32 received_mark = 4;
    if (has_received_mark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->received_mark());
    }
    
    // optional int32 pre_stage = 5;
    if (has_pre_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pre_stage());
    }
    
    // optional int64 login_time = 6;
    if (has_login_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->login_time());
    }
    
  }
  // repeated int32 config_item_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->config_item_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->config_item_id(i));
    }
    total_size += 1 * this->config_item_id_size() + data_size;
  }
  
  // repeated int32 award_list = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->award_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->award_list(i));
    }
    total_size += 1 * this->award_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401302::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401302* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401302*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401302::MergeFrom(const Proto51401302& from) {
  GOOGLE_CHECK_NE(&from, this);
  config_item_id_.MergeFrom(from.config_item_id_);
  award_list_.MergeFrom(from.award_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_stage()) {
      set_stage(from.stage());
    }
    if (from.has_received_mark()) {
      set_received_mark(from.received_mark());
    }
    if (from.has_pre_stage()) {
      set_pre_stage(from.pre_stage());
    }
    if (from.has_login_time()) {
      set_login_time(from.login_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401302::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401302::CopyFrom(const Proto51401302& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401302::IsInitialized() const {
  
  return true;
}

void Proto51401302::Swap(Proto51401302* other) {
  if (other != this) {
    config_item_id_.Swap(&other->config_item_id_);
    std::swap(left_time_, other->left_time_);
    std::swap(stage_, other->stage_);
    std::swap(received_mark_, other->received_mark_);
    std::swap(pre_stage_, other->pre_stage_);
    std::swap(login_time_, other->login_time_);
    award_list_.Swap(&other->award_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401302::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401302_descriptor_;
  metadata.reflection = Proto51401302_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401301::kItemCountFieldNumber;
const int Proto81401301::kLeftTimeFieldNumber;
const int Proto81401301::kPreStageFieldNumber;
const int Proto81401301::kStageFieldNumber;
#endif  // !_MSC_VER

Proto81401301::Proto81401301()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401301::InitAsDefaultInstance() {
}

Proto81401301::Proto81401301(const Proto81401301& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401301::SharedCtor() {
  _cached_size_ = 0;
  item_count_ = 0;
  left_time_ = GOOGLE_LONGLONG(0);
  pre_stage_ = 0;
  stage_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401301::~Proto81401301() {
  SharedDtor();
}

void Proto81401301::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401301::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401301::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401301_descriptor_;
}

const Proto81401301& Proto81401301::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto81401301* Proto81401301::default_instance_ = NULL;

Proto81401301* Proto81401301::New() const {
  return new Proto81401301;
}

void Proto81401301::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    item_count_ = 0;
    left_time_ = GOOGLE_LONGLONG(0);
    pre_stage_ = 0;
    stage_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401301::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item_count = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_count_)));
          set_has_item_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_left_time;
        break;
      }
      
      // optional int64 left_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pre_stage;
        break;
      }
      
      // optional int32 pre_stage = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pre_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pre_stage_)));
          set_has_pre_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_stage;
        break;
      }
      
      // optional int32 stage = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_)));
          set_has_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401301::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 item_count = 1;
  if (has_item_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item_count(), output);
  }
  
  // optional int64 left_time = 2;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->left_time(), output);
  }
  
  // optional int32 pre_stage = 3;
  if (has_pre_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pre_stage(), output);
  }
  
  // optional int32 stage = 4;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->stage(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401301::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 item_count = 1;
  if (has_item_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item_count(), target);
  }
  
  // optional int64 left_time = 2;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->left_time(), target);
  }
  
  // optional int32 pre_stage = 3;
  if (has_pre_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pre_stage(), target);
  }
  
  // optional int32 stage = 4;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->stage(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401301::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 item_count = 1;
    if (has_item_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_count());
    }
    
    // optional int64 left_time = 2;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->left_time());
    }
    
    // optional int32 pre_stage = 3;
    if (has_pre_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pre_stage());
    }
    
    // optional int32 stage = 4;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stage());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401301::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401301* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401301*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401301::MergeFrom(const Proto81401301& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_count()) {
      set_item_count(from.item_count());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_pre_stage()) {
      set_pre_stage(from.pre_stage());
    }
    if (from.has_stage()) {
      set_stage(from.stage());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401301::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401301::CopyFrom(const Proto81401301& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401301::IsInitialized() const {
  
  return true;
}

void Proto81401301::Swap(Proto81401301* other) {
  if (other != this) {
    std::swap(item_count_, other->item_count_);
    std::swap(left_time_, other->left_time_);
    std::swap(pre_stage_, other->pre_stage_);
    std::swap(stage_, other->stage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401301::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401301_descriptor_;
  metadata.reflection = Proto81401301_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400112::kDropIdFieldNumber;
const int Proto80400112::kDropTypeFieldNumber;
const int Proto80400112::kItemIdFieldNumber;
const int Proto80400112::kPixelXFieldNumber;
const int Proto80400112::kPixelYFieldNumber;
const int Proto80400112::kViewerSetFieldNumber;
const int Proto80400112::kNoAutoPickupFieldNumber;
const int Proto80400112::kAmountFieldNumber;
const int Proto80400112::kLeftProtectSecFieldNumber;
const int Proto80400112::kNoViewerSetFieldNumber;
#endif  // !_MSC_VER

Proto80400112::Proto80400112()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400112::InitAsDefaultInstance() {
}

Proto80400112::Proto80400112(const Proto80400112& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400112::SharedCtor() {
  _cached_size_ = 0;
  drop_id_ = GOOGLE_LONGLONG(0);
  drop_type_ = 0;
  item_id_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  no_auto_pickup_ = 0;
  amount_ = 0;
  left_protect_sec_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400112::~Proto80400112() {
  SharedDtor();
}

void Proto80400112::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400112::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400112::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400112_descriptor_;
}

const Proto80400112& Proto80400112::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto80400112* Proto80400112::default_instance_ = NULL;

Proto80400112* Proto80400112::New() const {
  return new Proto80400112;
}

void Proto80400112::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    drop_id_ = GOOGLE_LONGLONG(0);
    drop_type_ = 0;
    item_id_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
    no_auto_pickup_ = 0;
    amount_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    left_protect_sec_ = 0;
  }
  viewer_set_.Clear();
  no_viewer_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400112::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 drop_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &drop_id_)));
          set_has_drop_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_drop_type;
        break;
      }
      
      // optional int32 drop_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_drop_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &drop_type_)));
          set_has_drop_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_item_id;
        break;
      }
      
      // optional int32 item_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_id_)));
          set_has_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_viewer_set;
        break;
      }
      
      // repeated int64 viewer_set = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_viewer_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 48, input, this->mutable_viewer_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_viewer_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_viewer_set;
        if (input->ExpectTag(56)) goto parse_no_auto_pickup;
        break;
      }
      
      // optional int32 no_auto_pickup = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_no_auto_pickup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &no_auto_pickup_)));
          set_has_no_auto_pickup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_left_protect_sec;
        break;
      }
      
      // optional int32 left_protect_sec = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_protect_sec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_protect_sec_)));
          set_has_left_protect_sec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_no_viewer_set;
        break;
      }
      
      // repeated int64 no_viewer_set = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_no_viewer_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 80, input, this->mutable_no_viewer_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_no_viewer_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_no_viewer_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400112::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 drop_id = 1;
  if (has_drop_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->drop_id(), output);
  }
  
  // optional int32 drop_type = 2;
  if (has_drop_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->drop_type(), output);
  }
  
  // optional int32 item_id = 3;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item_id(), output);
  }
  
  // optional int32 pixel_x = 4;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 5;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->pixel_y(), output);
  }
  
  // repeated int64 viewer_set = 6;
  for (int i = 0; i < this->viewer_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      6, this->viewer_set(i), output);
  }
  
  // optional int32 no_auto_pickup = 7;
  if (has_no_auto_pickup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->no_auto_pickup(), output);
  }
  
  // optional int32 amount = 8;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->amount(), output);
  }
  
  // optional int32 left_protect_sec = 9;
  if (has_left_protect_sec()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->left_protect_sec(), output);
  }
  
  // repeated int64 no_viewer_set = 10;
  for (int i = 0; i < this->no_viewer_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      10, this->no_viewer_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400112::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 drop_id = 1;
  if (has_drop_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->drop_id(), target);
  }
  
  // optional int32 drop_type = 2;
  if (has_drop_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->drop_type(), target);
  }
  
  // optional int32 item_id = 3;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item_id(), target);
  }
  
  // optional int32 pixel_x = 4;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 5;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->pixel_y(), target);
  }
  
  // repeated int64 viewer_set = 6;
  for (int i = 0; i < this->viewer_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(6, this->viewer_set(i), target);
  }
  
  // optional int32 no_auto_pickup = 7;
  if (has_no_auto_pickup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->no_auto_pickup(), target);
  }
  
  // optional int32 amount = 8;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->amount(), target);
  }
  
  // optional int32 left_protect_sec = 9;
  if (has_left_protect_sec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->left_protect_sec(), target);
  }
  
  // repeated int64 no_viewer_set = 10;
  for (int i = 0; i < this->no_viewer_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(10, this->no_viewer_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400112::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 drop_id = 1;
    if (has_drop_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->drop_id());
    }
    
    // optional int32 drop_type = 2;
    if (has_drop_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->drop_type());
    }
    
    // optional int32 item_id = 3;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_id());
    }
    
    // optional int32 pixel_x = 4;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 5;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
    // optional int32 no_auto_pickup = 7;
    if (has_no_auto_pickup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->no_auto_pickup());
    }
    
    // optional int32 amount = 8;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 left_protect_sec = 9;
    if (has_left_protect_sec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_protect_sec());
    }
    
  }
  // repeated int64 viewer_set = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->viewer_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->viewer_set(i));
    }
    total_size += 1 * this->viewer_set_size() + data_size;
  }
  
  // repeated int64 no_viewer_set = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->no_viewer_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->no_viewer_set(i));
    }
    total_size += 1 * this->no_viewer_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400112::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400112* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400112*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400112::MergeFrom(const Proto80400112& from) {
  GOOGLE_CHECK_NE(&from, this);
  viewer_set_.MergeFrom(from.viewer_set_);
  no_viewer_set_.MergeFrom(from.no_viewer_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_drop_id()) {
      set_drop_id(from.drop_id());
    }
    if (from.has_drop_type()) {
      set_drop_type(from.drop_type());
    }
    if (from.has_item_id()) {
      set_item_id(from.item_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
    if (from.has_no_auto_pickup()) {
      set_no_auto_pickup(from.no_auto_pickup());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_left_protect_sec()) {
      set_left_protect_sec(from.left_protect_sec());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400112::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400112::CopyFrom(const Proto80400112& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400112::IsInitialized() const {
  
  return true;
}

void Proto80400112::Swap(Proto80400112* other) {
  if (other != this) {
    std::swap(drop_id_, other->drop_id_);
    std::swap(drop_type_, other->drop_type_);
    std::swap(item_id_, other->item_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    viewer_set_.Swap(&other->viewer_set_);
    std::swap(no_auto_pickup_, other->no_auto_pickup_);
    std::swap(amount_, other->amount_);
    std::swap(left_protect_sec_, other->left_protect_sec_);
    no_viewer_set_.Swap(&other->no_viewer_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400112::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400112_descriptor_;
  metadata.reflection = Proto80400112_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400308::kQuitTypeFieldNumber;
#endif  // !_MSC_VER

Proto80400308::Proto80400308()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400308::InitAsDefaultInstance() {
}

Proto80400308::Proto80400308(const Proto80400308& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400308::SharedCtor() {
  _cached_size_ = 0;
  quit_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400308::~Proto80400308() {
  SharedDtor();
}

void Proto80400308::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400308::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400308::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400308_descriptor_;
}

const Proto80400308& Proto80400308::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto80400308* Proto80400308::default_instance_ = NULL;

Proto80400308* Proto80400308::New() const {
  return new Proto80400308;
}

void Proto80400308::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    quit_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400308::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 quit_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quit_type_)));
          set_has_quit_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400308::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 quit_type = 1;
  if (has_quit_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->quit_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400308::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 quit_type = 1;
  if (has_quit_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->quit_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400308::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 quit_type = 1;
    if (has_quit_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quit_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400308::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400308* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400308*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400308::MergeFrom(const Proto80400308& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_quit_type()) {
      set_quit_type(from.quit_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400308::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400308::CopyFrom(const Proto80400308& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400308::IsInitialized() const {
  
  return true;
}

void Proto80400308::Swap(Proto80400308* other) {
  if (other != this) {
    std::swap(quit_type_, other->quit_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400308::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400308_descriptor_;
  metadata.reflection = Proto80400308_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400311::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto80400311::Proto80400311()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400311::InitAsDefaultInstance() {
}

Proto80400311::Proto80400311(const Proto80400311& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400311::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400311::~Proto80400311() {
  SharedDtor();
}

void Proto80400311::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400311::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400311::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400311_descriptor_;
}

const Proto80400311& Proto80400311::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto80400311* Proto80400311::default_instance_ = NULL;

Proto80400311* Proto80400311::New() const {
  return new Proto80400311;
}

void Proto80400311::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400311::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400311::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400311::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400311::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400311::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400311* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400311*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400311::MergeFrom(const Proto80400311& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400311::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400311::CopyFrom(const Proto80400311& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400311::IsInitialized() const {
  
  return true;
}

void Proto80400311::Swap(Proto80400311* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400311::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400311_descriptor_;
  metadata.reflection = Proto80400311_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400333::kFighterSetFieldNumber;
#endif  // !_MSC_VER

Proto80400333::Proto80400333()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400333::InitAsDefaultInstance() {
}

Proto80400333::Proto80400333(const Proto80400333& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400333::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400333::~Proto80400333() {
  SharedDtor();
}

void Proto80400333::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400333::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400333::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400333_descriptor_;
}

const Proto80400333& Proto80400333::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto80400333* Proto80400333::default_instance_ = NULL;

Proto80400333* Proto80400333::New() const {
  return new Proto80400333;
}

void Proto80400333::Clear() {
  fighter_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400333::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoLeagueFighter fighter_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fighter_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fighter_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_fighter_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400333::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoLeagueFighter fighter_set = 1;
  for (int i = 0; i < this->fighter_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fighter_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400333::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoLeagueFighter fighter_set = 1;
  for (int i = 0; i < this->fighter_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->fighter_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400333::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoLeagueFighter fighter_set = 1;
  total_size += 1 * this->fighter_set_size();
  for (int i = 0; i < this->fighter_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fighter_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400333::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400333* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400333*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400333::MergeFrom(const Proto80400333& from) {
  GOOGLE_CHECK_NE(&from, this);
  fighter_set_.MergeFrom(from.fighter_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400333::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400333::CopyFrom(const Proto80400333& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400333::IsInitialized() const {
  
  return true;
}

void Proto80400333::Swap(Proto80400333* other) {
  if (other != this) {
    fighter_set_.Swap(&other->fighter_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400333::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400333_descriptor_;
  metadata.reflection = Proto80400333_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400334::kFightingStateFieldNumber;
#endif  // !_MSC_VER

Proto80400334::Proto80400334()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400334::InitAsDefaultInstance() {
}

Proto80400334::Proto80400334(const Proto80400334& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400334::SharedCtor() {
  _cached_size_ = 0;
  fighting_state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400334::~Proto80400334() {
  SharedDtor();
}

void Proto80400334::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400334::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400334::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400334_descriptor_;
}

const Proto80400334& Proto80400334::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto80400334* Proto80400334::default_instance_ = NULL;

Proto80400334* Proto80400334::New() const {
  return new Proto80400334;
}

void Proto80400334::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fighting_state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400334::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fighting_state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fighting_state_)));
          set_has_fighting_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400334::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fighting_state = 1;
  if (has_fighting_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fighting_state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400334::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fighting_state = 1;
  if (has_fighting_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fighting_state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400334::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fighting_state = 1;
    if (has_fighting_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fighting_state());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400334::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400334* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400334*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400334::MergeFrom(const Proto80400334& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fighting_state()) {
      set_fighting_state(from.fighting_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400334::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400334::CopyFrom(const Proto80400334& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400334::IsInitialized() const {
  
  return true;
}

void Proto80400334::Swap(Proto80400334* other) {
  if (other != this) {
    std::swap(fighting_state_, other->fighting_state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400334::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400334_descriptor_;
  metadata.reflection = Proto80400334_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400335::kActivityTypeFieldNumber;
const int Proto80400335::kActivityStateFieldNumber;
const int Proto80400335::kIsFirstFieldNumber;
#endif  // !_MSC_VER

Proto80400335::Proto80400335()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400335::InitAsDefaultInstance() {
}

Proto80400335::Proto80400335(const Proto80400335& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400335::SharedCtor() {
  _cached_size_ = 0;
  activity_type_ = 0;
  activity_state_ = 0;
  is_first_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400335::~Proto80400335() {
  SharedDtor();
}

void Proto80400335::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400335::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400335::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400335_descriptor_;
}

const Proto80400335& Proto80400335::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto80400335* Proto80400335::default_instance_ = NULL;

Proto80400335* Proto80400335::New() const {
  return new Proto80400335;
}

void Proto80400335::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_type_ = 0;
    activity_state_ = 0;
    is_first_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400335::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_type_)));
          set_has_activity_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_activity_state;
        break;
      }
      
      // optional int32 activity_state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_state_)));
          set_has_activity_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_first;
        break;
      }
      
      // optional int32 is_first = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_first:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_first_)));
          set_has_is_first();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400335::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_type = 1;
  if (has_activity_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_type(), output);
  }
  
  // optional int32 activity_state = 2;
  if (has_activity_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->activity_state(), output);
  }
  
  // optional int32 is_first = 3;
  if (has_is_first()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_first(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400335::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_type = 1;
  if (has_activity_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_type(), target);
  }
  
  // optional int32 activity_state = 2;
  if (has_activity_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->activity_state(), target);
  }
  
  // optional int32 is_first = 3;
  if (has_is_first()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_first(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400335::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_type = 1;
    if (has_activity_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_type());
    }
    
    // optional int32 activity_state = 2;
    if (has_activity_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_state());
    }
    
    // optional int32 is_first = 3;
    if (has_is_first()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_first());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400335::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400335* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400335*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400335::MergeFrom(const Proto80400335& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_type()) {
      set_activity_type(from.activity_type());
    }
    if (from.has_activity_state()) {
      set_activity_state(from.activity_state());
    }
    if (from.has_is_first()) {
      set_is_first(from.is_first());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400335::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400335::CopyFrom(const Proto80400335& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400335::IsInitialized() const {
  
  return true;
}

void Proto80400335::Swap(Proto80400335* other) {
  if (other != this) {
    std::swap(activity_type_, other->activity_type_);
    std::swap(activity_state_, other->activity_state_);
    std::swap(is_first_, other->is_first_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400335::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400335_descriptor_;
  metadata.reflection = Proto80400335_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401401::kAwardIndexFieldNumber;
const int Proto51401401::kCheckInPointFieldNumber;
const int Proto51401401::kHasAwardFieldNumber;
const int Proto51401401::kHasTotalAwardFieldNumber;
const int Proto51401401::kCheckTotalIndexFieldNumber;
const int Proto51401401::kChargeMoneyFieldNumber;
#endif  // !_MSC_VER

Proto51401401::Proto51401401()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401401::InitAsDefaultInstance() {
}

Proto51401401::Proto51401401(const Proto51401401& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401401::SharedCtor() {
  _cached_size_ = 0;
  award_index_ = 0;
  check_in_point_ = 0;
  has_award_ = 0;
  has_total_award_ = 0;
  check_total_index_ = 0;
  charge_money_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401401::~Proto51401401() {
  SharedDtor();
}

void Proto51401401::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401401::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401401::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401401_descriptor_;
}

const Proto51401401& Proto51401401::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto51401401* Proto51401401::default_instance_ = NULL;

Proto51401401* Proto51401401::New() const {
  return new Proto51401401;
}

void Proto51401401::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    award_index_ = 0;
    check_in_point_ = 0;
    has_award_ = 0;
    has_total_award_ = 0;
    check_total_index_ = 0;
    charge_money_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401401::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 award_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &award_index_)));
          set_has_award_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_check_in_point;
        break;
      }
      
      // optional int32 check_in_point = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_check_in_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &check_in_point_)));
          set_has_check_in_point();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_has_award;
        break;
      }
      
      // optional int32 has_award = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_has_award:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &has_award_)));
          set_has_has_award();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_has_total_award;
        break;
      }
      
      // optional int32 has_total_award = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_has_total_award:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &has_total_award_)));
          set_has_has_total_award();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_check_total_index;
        break;
      }
      
      // optional int32 check_total_index = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_check_total_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &check_total_index_)));
          set_has_check_total_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_charge_money;
        break;
      }
      
      // optional int32 charge_money = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_charge_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &charge_money_)));
          set_has_charge_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401401::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 award_index = 1;
  if (has_award_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->award_index(), output);
  }
  
  // optional int32 check_in_point = 2;
  if (has_check_in_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->check_in_point(), output);
  }
  
  // optional int32 has_award = 3;
  if (has_has_award()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->has_award(), output);
  }
  
  // optional int32 has_total_award = 4;
  if (has_has_total_award()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->has_total_award(), output);
  }
  
  // optional int32 check_total_index = 5;
  if (has_check_total_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->check_total_index(), output);
  }
  
  // optional int32 charge_money = 6;
  if (has_charge_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->charge_money(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401401::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 award_index = 1;
  if (has_award_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->award_index(), target);
  }
  
  // optional int32 check_in_point = 2;
  if (has_check_in_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->check_in_point(), target);
  }
  
  // optional int32 has_award = 3;
  if (has_has_award()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->has_award(), target);
  }
  
  // optional int32 has_total_award = 4;
  if (has_has_total_award()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->has_total_award(), target);
  }
  
  // optional int32 check_total_index = 5;
  if (has_check_total_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->check_total_index(), target);
  }
  
  // optional int32 charge_money = 6;
  if (has_charge_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->charge_money(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401401::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 award_index = 1;
    if (has_award_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->award_index());
    }
    
    // optional int32 check_in_point = 2;
    if (has_check_in_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->check_in_point());
    }
    
    // optional int32 has_award = 3;
    if (has_has_award()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->has_award());
    }
    
    // optional int32 has_total_award = 4;
    if (has_has_total_award()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->has_total_award());
    }
    
    // optional int32 check_total_index = 5;
    if (has_check_total_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->check_total_index());
    }
    
    // optional int32 charge_money = 6;
    if (has_charge_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->charge_money());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401401::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401401* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401401*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401401::MergeFrom(const Proto51401401& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_award_index()) {
      set_award_index(from.award_index());
    }
    if (from.has_check_in_point()) {
      set_check_in_point(from.check_in_point());
    }
    if (from.has_has_award()) {
      set_has_award(from.has_award());
    }
    if (from.has_has_total_award()) {
      set_has_total_award(from.has_total_award());
    }
    if (from.has_check_total_index()) {
      set_check_total_index(from.check_total_index());
    }
    if (from.has_charge_money()) {
      set_charge_money(from.charge_money());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401401::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401401::CopyFrom(const Proto51401401& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401401::IsInitialized() const {
  
  return true;
}

void Proto51401401::Swap(Proto51401401* other) {
  if (other != this) {
    std::swap(award_index_, other->award_index_);
    std::swap(check_in_point_, other->check_in_point_);
    std::swap(has_award_, other->has_award_);
    std::swap(has_total_award_, other->has_total_award_);
    std::swap(check_total_index_, other->check_total_index_);
    std::swap(charge_money_, other->charge_money_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401401::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401401_descriptor_;
  metadata.reflection = Proto51401401_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401402::kAwardIndexFieldNumber;
const int Proto11401402::kMonthDayFieldNumber;
#endif  // !_MSC_VER

Proto11401402::Proto11401402()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401402::InitAsDefaultInstance() {
}

Proto11401402::Proto11401402(const Proto11401402& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401402::SharedCtor() {
  _cached_size_ = 0;
  award_index_ = 0;
  month_day_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401402::~Proto11401402() {
  SharedDtor();
}

void Proto11401402::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401402::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401402::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401402_descriptor_;
}

const Proto11401402& Proto11401402::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto11401402* Proto11401402::default_instance_ = NULL;

Proto11401402* Proto11401402::New() const {
  return new Proto11401402;
}

void Proto11401402::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    award_index_ = 0;
    month_day_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401402::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 award_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &award_index_)));
          set_has_award_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_month_day;
        break;
      }
      
      // optional int32 month_day = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_month_day:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &month_day_)));
          set_has_month_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401402::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 award_index = 1;
  if (has_award_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->award_index(), output);
  }
  
  // optional int32 month_day = 2;
  if (has_month_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->month_day(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401402::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 award_index = 1;
  if (has_award_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->award_index(), target);
  }
  
  // optional int32 month_day = 2;
  if (has_month_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->month_day(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401402::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 award_index = 1;
    if (has_award_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->award_index());
    }
    
    // optional int32 month_day = 2;
    if (has_month_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->month_day());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401402::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401402* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401402*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401402::MergeFrom(const Proto11401402& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_award_index()) {
      set_award_index(from.award_index());
    }
    if (from.has_month_day()) {
      set_month_day(from.month_day());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401402::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401402::CopyFrom(const Proto11401402& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401402::IsInitialized() const {
  
  return true;
}

void Proto11401402::Swap(Proto11401402* other) {
  if (other != this) {
    std::swap(award_index_, other->award_index_);
    std::swap(month_day_, other->month_day_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401402::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401402_descriptor_;
  metadata.reflection = Proto11401402_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401402::kStatusFieldNumber;
const int Proto51401402::kCheckInPointFieldNumber;
#endif  // !_MSC_VER

Proto51401402::Proto51401402()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401402::InitAsDefaultInstance() {
}

Proto51401402::Proto51401402(const Proto51401402& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401402::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  check_in_point_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401402::~Proto51401402() {
  SharedDtor();
}

void Proto51401402::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401402::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401402::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401402_descriptor_;
}

const Proto51401402& Proto51401402::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto51401402* Proto51401402::default_instance_ = NULL;

Proto51401402* Proto51401402::New() const {
  return new Proto51401402;
}

void Proto51401402::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    status_ = 0;
    check_in_point_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401402::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_check_in_point;
        break;
      }
      
      // optional int32 check_in_point = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_check_in_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &check_in_point_)));
          set_has_check_in_point();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401402::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }
  
  // optional int32 check_in_point = 2;
  if (has_check_in_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->check_in_point(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401402::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }
  
  // optional int32 check_in_point = 2;
  if (has_check_in_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->check_in_point(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401402::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int32 check_in_point = 2;
    if (has_check_in_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->check_in_point());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401402::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401402* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401402*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401402::MergeFrom(const Proto51401402& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_check_in_point()) {
      set_check_in_point(from.check_in_point());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401402::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401402::CopyFrom(const Proto51401402& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401402::IsInitialized() const {
  
  return true;
}

void Proto51401402::Swap(Proto51401402* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(check_in_point_, other->check_in_point_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401402::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401402_descriptor_;
  metadata.reflection = Proto51401402_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401401::kCheckInFieldNumber;
const int Proto81401401::kLivenessAwardFieldNumber;
const int Proto81401401::kExpRestoreFieldNumber;
const int Proto81401401::kCheckInPopupFieldNumber;
const int Proto81401401::kShowCheckInPointFieldNumber;
const int Proto81401401::kLevelAwardFieldNumber;
#endif  // !_MSC_VER

Proto81401401::Proto81401401()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401401::InitAsDefaultInstance() {
}

Proto81401401::Proto81401401(const Proto81401401& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401401::SharedCtor() {
  _cached_size_ = 0;
  check_in_ = 0;
  liveness_award_ = 0;
  exp_restore_ = 0;
  check_in_popup_ = 0;
  show_check_in_point_ = 0;
  level_award_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401401::~Proto81401401() {
  SharedDtor();
}

void Proto81401401::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401401::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401401::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401401_descriptor_;
}

const Proto81401401& Proto81401401::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto81401401* Proto81401401::default_instance_ = NULL;

Proto81401401* Proto81401401::New() const {
  return new Proto81401401;
}

void Proto81401401::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    check_in_ = 0;
    liveness_award_ = 0;
    exp_restore_ = 0;
    check_in_popup_ = 0;
    show_check_in_point_ = 0;
    level_award_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401401::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 check_in = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &check_in_)));
          set_has_check_in();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_liveness_award;
        break;
      }
      
      // optional int32 liveness_award = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_liveness_award:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &liveness_award_)));
          set_has_liveness_award();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_exp_restore;
        break;
      }
      
      // optional int32 exp_restore = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp_restore:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_restore_)));
          set_has_exp_restore();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_check_in_popup;
        break;
      }
      
      // optional int32 check_in_popup = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_check_in_popup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &check_in_popup_)));
          set_has_check_in_popup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_show_check_in_point;
        break;
      }
      
      // optional int32 show_check_in_point = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_show_check_in_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &show_check_in_point_)));
          set_has_show_check_in_point();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_level_award;
        break;
      }
      
      // optional int32 level_award = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level_award:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_award_)));
          set_has_level_award();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401401::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 check_in = 1;
  if (has_check_in()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->check_in(), output);
  }
  
  // optional int32 liveness_award = 2;
  if (has_liveness_award()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->liveness_award(), output);
  }
  
  // optional int32 exp_restore = 3;
  if (has_exp_restore()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->exp_restore(), output);
  }
  
  // optional int32 check_in_popup = 4;
  if (has_check_in_popup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->check_in_popup(), output);
  }
  
  // optional int32 show_check_in_point = 5;
  if (has_show_check_in_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->show_check_in_point(), output);
  }
  
  // optional int32 level_award = 6;
  if (has_level_award()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->level_award(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401401::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 check_in = 1;
  if (has_check_in()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->check_in(), target);
  }
  
  // optional int32 liveness_award = 2;
  if (has_liveness_award()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->liveness_award(), target);
  }
  
  // optional int32 exp_restore = 3;
  if (has_exp_restore()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->exp_restore(), target);
  }
  
  // optional int32 check_in_popup = 4;
  if (has_check_in_popup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->check_in_popup(), target);
  }
  
  // optional int32 show_check_in_point = 5;
  if (has_show_check_in_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->show_check_in_point(), target);
  }
  
  // optional int32 level_award = 6;
  if (has_level_award()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->level_award(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401401::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 check_in = 1;
    if (has_check_in()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->check_in());
    }
    
    // optional int32 liveness_award = 2;
    if (has_liveness_award()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->liveness_award());
    }
    
    // optional int32 exp_restore = 3;
    if (has_exp_restore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp_restore());
    }
    
    // optional int32 check_in_popup = 4;
    if (has_check_in_popup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->check_in_popup());
    }
    
    // optional int32 show_check_in_point = 5;
    if (has_show_check_in_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->show_check_in_point());
    }
    
    // optional int32 level_award = 6;
    if (has_level_award()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level_award());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401401::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401401* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401401*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401401::MergeFrom(const Proto81401401& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_check_in()) {
      set_check_in(from.check_in());
    }
    if (from.has_liveness_award()) {
      set_liveness_award(from.liveness_award());
    }
    if (from.has_exp_restore()) {
      set_exp_restore(from.exp_restore());
    }
    if (from.has_check_in_popup()) {
      set_check_in_popup(from.check_in_popup());
    }
    if (from.has_show_check_in_point()) {
      set_show_check_in_point(from.show_check_in_point());
    }
    if (from.has_level_award()) {
      set_level_award(from.level_award());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401401::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401401::CopyFrom(const Proto81401401& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401401::IsInitialized() const {
  
  return true;
}

void Proto81401401::Swap(Proto81401401* other) {
  if (other != this) {
    std::swap(check_in_, other->check_in_);
    std::swap(liveness_award_, other->liveness_award_);
    std::swap(exp_restore_, other->exp_restore_);
    std::swap(check_in_popup_, other->check_in_popup_);
    std::swap(show_check_in_point_, other->show_check_in_point_);
    std::swap(level_award_, other->level_award_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401401::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401401_descriptor_;
  metadata.reflection = Proto81401401_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400113::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400113::Proto11400113()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400113::InitAsDefaultInstance() {
}

Proto11400113::Proto11400113(const Proto11400113& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400113::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400113::~Proto11400113() {
  SharedDtor();
}

void Proto11400113::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400113::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400113::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400113_descriptor_;
}

const Proto11400113& Proto11400113::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto11400113* Proto11400113::default_instance_ = NULL;

Proto11400113* Proto11400113::New() const {
  return new Proto11400113;
}

void Proto11400113::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400113::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400113::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400113::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400113::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400113::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400113* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400113*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400113::MergeFrom(const Proto11400113& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400113::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400113::CopyFrom(const Proto11400113& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400113::IsInitialized() const {
  
  return true;
}

void Proto11400113::Swap(Proto11400113* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400113::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400113_descriptor_;
  metadata.reflection = Proto11400113_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400113::kMapIndexFieldNumber;
const int Proto51400113::kMapCountFieldNumber;
const int Proto51400113::kStateFieldNumber;
const int Proto51400113::kCoordXFieldNumber;
const int Proto51400113::kCoordYFieldNumber;
#endif  // !_MSC_VER

Proto51400113::Proto51400113()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400113::InitAsDefaultInstance() {
}

Proto51400113::Proto51400113(const Proto51400113& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400113::SharedCtor() {
  _cached_size_ = 0;
  map_index_ = 0;
  map_count_ = 0;
  state_ = 0;
  coord_x_ = 0;
  coord_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400113::~Proto51400113() {
  SharedDtor();
}

void Proto51400113::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400113::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400113::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400113_descriptor_;
}

const Proto51400113& Proto51400113::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto51400113* Proto51400113::default_instance_ = NULL;

Proto51400113* Proto51400113::New() const {
  return new Proto51400113;
}

void Proto51400113::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    map_index_ = 0;
    map_count_ = 0;
    state_ = 0;
    coord_x_ = 0;
    coord_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400113::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 map_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_index_)));
          set_has_map_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_map_count;
        break;
      }
      
      // optional int32 map_count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_map_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_count_)));
          set_has_map_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_state;
        break;
      }
      
      // optional int32 state = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_coord_x;
        break;
      }
      
      // optional int32 coord_x = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_coord_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coord_x_)));
          set_has_coord_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_coord_y;
        break;
      }
      
      // optional int32 coord_y = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_coord_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coord_y_)));
          set_has_coord_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400113::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 map_index = 1;
  if (has_map_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->map_index(), output);
  }
  
  // optional int32 map_count = 2;
  if (has_map_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->map_count(), output);
  }
  
  // optional int32 state = 3;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->state(), output);
  }
  
  // optional int32 coord_x = 4;
  if (has_coord_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->coord_x(), output);
  }
  
  // optional int32 coord_y = 5;
  if (has_coord_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->coord_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400113::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 map_index = 1;
  if (has_map_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->map_index(), target);
  }
  
  // optional int32 map_count = 2;
  if (has_map_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->map_count(), target);
  }
  
  // optional int32 state = 3;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->state(), target);
  }
  
  // optional int32 coord_x = 4;
  if (has_coord_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->coord_x(), target);
  }
  
  // optional int32 coord_y = 5;
  if (has_coord_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->coord_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400113::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 map_index = 1;
    if (has_map_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->map_index());
    }
    
    // optional int32 map_count = 2;
    if (has_map_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->map_count());
    }
    
    // optional int32 state = 3;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
    // optional int32 coord_x = 4;
    if (has_coord_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coord_x());
    }
    
    // optional int32 coord_y = 5;
    if (has_coord_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coord_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400113::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400113* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400113*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400113::MergeFrom(const Proto51400113& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_map_index()) {
      set_map_index(from.map_index());
    }
    if (from.has_map_count()) {
      set_map_count(from.map_count());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_coord_x()) {
      set_coord_x(from.coord_x());
    }
    if (from.has_coord_y()) {
      set_coord_y(from.coord_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400113::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400113::CopyFrom(const Proto51400113& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400113::IsInitialized() const {
  
  return true;
}

void Proto51400113::Swap(Proto51400113* other) {
  if (other != this) {
    std::swap(map_index_, other->map_index_);
    std::swap(map_count_, other->map_count_);
    std::swap(state_, other->state_);
    std::swap(coord_x_, other->coord_x_);
    std::swap(coord_y_, other->coord_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400113::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400113_descriptor_;
  metadata.reflection = Proto51400113_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400114::kCurIndexFieldNumber;
const int Proto11400114::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400114::Proto11400114()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400114::InitAsDefaultInstance() {
}

Proto11400114::Proto11400114(const Proto11400114& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400114::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400114::~Proto11400114() {
  SharedDtor();
}

void Proto11400114::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400114::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400114::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400114_descriptor_;
}

const Proto11400114& Proto11400114::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto11400114* Proto11400114::default_instance_ = NULL;

Proto11400114* Proto11400114::New() const {
  return new Proto11400114;
}

void Proto11400114::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    index_ = 0;
  }
  cur_index_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400114::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 cur_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_cur_index())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cur_index())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_cur_index;
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }
      
      // optional int32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400114::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 cur_index = 1;
  for (int i = 0; i < this->cur_index_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->cur_index(i), output);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400114::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 cur_index = 1;
  for (int i = 0; i < this->cur_index_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->cur_index(i), target);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400114::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  // repeated int32 cur_index = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->cur_index_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->cur_index(i));
    }
    total_size += 1 * this->cur_index_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400114::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400114* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400114*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400114::MergeFrom(const Proto11400114& from) {
  GOOGLE_CHECK_NE(&from, this);
  cur_index_.MergeFrom(from.cur_index_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400114::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400114::CopyFrom(const Proto11400114& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400114::IsInitialized() const {
  
  return true;
}

void Proto11400114::Swap(Proto11400114* other) {
  if (other != this) {
    cur_index_.Swap(&other->cur_index_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400114::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400114_descriptor_;
  metadata.reflection = Proto11400114_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400305::kIndexFieldNumber;
const int Proto10400305::kSceneIdFieldNumber;
const int Proto10400305::kCoordXFieldNumber;
const int Proto10400305::kCoordYFieldNumber;
#endif  // !_MSC_VER

Proto10400305::Proto10400305()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400305::InitAsDefaultInstance() {
}

Proto10400305::Proto10400305(const Proto10400305& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400305::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  scene_id_ = 0;
  coord_x_ = 0;
  coord_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400305::~Proto10400305() {
  SharedDtor();
}

void Proto10400305::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400305::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400305::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400305_descriptor_;
}

const Proto10400305& Proto10400305::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto10400305* Proto10400305::default_instance_ = NULL;

Proto10400305* Proto10400305::New() const {
  return new Proto10400305;
}

void Proto10400305::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    scene_id_ = 0;
    coord_x_ = 0;
    coord_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400305::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_coord_x;
        break;
      }
      
      // optional int32 coord_x = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_coord_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coord_x_)));
          set_has_coord_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_coord_y;
        break;
      }
      
      // optional int32 coord_y = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_coord_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coord_y_)));
          set_has_coord_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400305::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional int32 scene_id = 2;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->scene_id(), output);
  }
  
  // optional int32 coord_x = 3;
  if (has_coord_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->coord_x(), output);
  }
  
  // optional int32 coord_y = 4;
  if (has_coord_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->coord_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400305::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional int32 scene_id = 2;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->scene_id(), target);
  }
  
  // optional int32 coord_x = 3;
  if (has_coord_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->coord_x(), target);
  }
  
  // optional int32 coord_y = 4;
  if (has_coord_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->coord_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400305::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 scene_id = 2;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 coord_x = 3;
    if (has_coord_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coord_x());
    }
    
    // optional int32 coord_y = 4;
    if (has_coord_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coord_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400305::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400305* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400305*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400305::MergeFrom(const Proto10400305& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_coord_x()) {
      set_coord_x(from.coord_x());
    }
    if (from.has_coord_y()) {
      set_coord_y(from.coord_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400305::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400305::CopyFrom(const Proto10400305& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400305::IsInitialized() const {
  
  return true;
}

void Proto10400305::Swap(Proto10400305* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(coord_x_, other->coord_x_);
    std::swap(coord_y_, other->coord_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400305::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400305_descriptor_;
  metadata.reflection = Proto10400305_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400106::kEffectIdFieldNumber;
const int Proto80400106::kEffectSortFieldNumber;
const int Proto80400106::kPixelXFieldNumber;
const int Proto80400106::kPixelYFieldNumber;
#endif  // !_MSC_VER

Proto80400106::Proto80400106()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400106::InitAsDefaultInstance() {
}

Proto80400106::Proto80400106(const Proto80400106& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400106::SharedCtor() {
  _cached_size_ = 0;
  effect_id_ = 0;
  effect_sort_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400106::~Proto80400106() {
  SharedDtor();
}

void Proto80400106::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400106::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400106::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400106_descriptor_;
}

const Proto80400106& Proto80400106::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto80400106* Proto80400106::default_instance_ = NULL;

Proto80400106* Proto80400106::New() const {
  return new Proto80400106;
}

void Proto80400106::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    effect_id_ = 0;
    effect_sort_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400106::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 effect_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effect_id_)));
          set_has_effect_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_effect_sort;
        break;
      }
      
      // optional int32 effect_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_effect_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effect_sort_)));
          set_has_effect_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400106::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 effect_id = 1;
  if (has_effect_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->effect_id(), output);
  }
  
  // optional int32 effect_sort = 2;
  if (has_effect_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->effect_sort(), output);
  }
  
  // optional int32 pixel_x = 3;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 4;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->pixel_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400106::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 effect_id = 1;
  if (has_effect_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->effect_id(), target);
  }
  
  // optional int32 effect_sort = 2;
  if (has_effect_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->effect_sort(), target);
  }
  
  // optional int32 pixel_x = 3;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 4;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->pixel_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400106::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 effect_id = 1;
    if (has_effect_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->effect_id());
    }
    
    // optional int32 effect_sort = 2;
    if (has_effect_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->effect_sort());
    }
    
    // optional int32 pixel_x = 3;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 4;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400106::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400106* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400106*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400106::MergeFrom(const Proto80400106& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_effect_id()) {
      set_effect_id(from.effect_id());
    }
    if (from.has_effect_sort()) {
      set_effect_sort(from.effect_sort());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400106::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400106::CopyFrom(const Proto80400106& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400106::IsInitialized() const {
  
  return true;
}

void Proto80400106::Swap(Proto80400106* other) {
  if (other != this) {
    std::swap(effect_id_, other->effect_id_);
    std::swap(effect_sort_, other->effect_sort_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400106::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400106_descriptor_;
  metadata.reflection = Proto80400106_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400107::kEffectIdFieldNumber;
const int Proto80400107::kEffectSortFieldNumber;
#endif  // !_MSC_VER

Proto80400107::Proto80400107()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400107::InitAsDefaultInstance() {
}

Proto80400107::Proto80400107(const Proto80400107& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400107::SharedCtor() {
  _cached_size_ = 0;
  effect_id_ = 0;
  effect_sort_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400107::~Proto80400107() {
  SharedDtor();
}

void Proto80400107::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400107::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400107::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400107_descriptor_;
}

const Proto80400107& Proto80400107::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto80400107* Proto80400107::default_instance_ = NULL;

Proto80400107* Proto80400107::New() const {
  return new Proto80400107;
}

void Proto80400107::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    effect_id_ = 0;
    effect_sort_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400107::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 effect_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effect_id_)));
          set_has_effect_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_effect_sort;
        break;
      }
      
      // optional int32 effect_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_effect_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &effect_sort_)));
          set_has_effect_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400107::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 effect_id = 1;
  if (has_effect_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->effect_id(), output);
  }
  
  // optional int32 effect_sort = 2;
  if (has_effect_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->effect_sort(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400107::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 effect_id = 1;
  if (has_effect_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->effect_id(), target);
  }
  
  // optional int32 effect_sort = 2;
  if (has_effect_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->effect_sort(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400107::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 effect_id = 1;
    if (has_effect_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->effect_id());
    }
    
    // optional int32 effect_sort = 2;
    if (has_effect_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->effect_sort());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400107::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400107* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400107*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400107::MergeFrom(const Proto80400107& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_effect_id()) {
      set_effect_id(from.effect_id());
    }
    if (from.has_effect_sort()) {
      set_effect_sort(from.effect_sort());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400107::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400107::CopyFrom(const Proto80400107& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400107::IsInitialized() const {
  
  return true;
}

void Proto80400107::Swap(Proto80400107* other) {
  if (other != this) {
    std::swap(effect_id_, other->effect_id_);
    std::swap(effect_sort_, other->effect_sort_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400107::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400107_descriptor_;
  metadata.reflection = Proto80400107_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400501::kSceneIdFieldNumber;
const int Proto50400501::kPixelXFieldNumber;
const int Proto50400501::kPixelYFieldNumber;
#endif  // !_MSC_VER

Proto50400501::Proto50400501()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400501::InitAsDefaultInstance() {
}

Proto50400501::Proto50400501(const Proto50400501& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400501::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  pixel_x_ = 0;
  pixel_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400501::~Proto50400501() {
  SharedDtor();
}

void Proto50400501::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400501::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400501::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400501_descriptor_;
}

const Proto50400501& Proto50400501::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto50400501* Proto50400501::default_instance_ = NULL;

Proto50400501* Proto50400501::New() const {
  return new Proto50400501;
}

void Proto50400501::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
    pixel_x_ = 0;
    pixel_y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400501::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pixel_x;
        break;
      }
      
      // optional int32 pixel_x = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_x_)));
          set_has_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pixel_y;
        break;
      }
      
      // optional int32 pixel_y = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pixel_y_)));
          set_has_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400501::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pixel_x(), output);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pixel_y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400501::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  // optional int32 pixel_x = 2;
  if (has_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pixel_x(), target);
  }
  
  // optional int32 pixel_y = 3;
  if (has_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pixel_y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400501::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 pixel_x = 2;
    if (has_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_x());
    }
    
    // optional int32 pixel_y = 3;
    if (has_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pixel_y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400501::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400501* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400501*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400501::MergeFrom(const Proto50400501& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_pixel_x()) {
      set_pixel_x(from.pixel_x());
    }
    if (from.has_pixel_y()) {
      set_pixel_y(from.pixel_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400501::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400501::CopyFrom(const Proto50400501& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400501::IsInitialized() const {
  
  return true;
}

void Proto50400501::Swap(Proto50400501* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(pixel_x_, other->pixel_x_);
    std::swap(pixel_y_, other->pixel_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400501::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400501_descriptor_;
  metadata.reflection = Proto50400501_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400401::kFighterIdFieldNumber;
const int Proto80400401::kBloodFieldNumber;
const int Proto80400401::kMaxBloodFieldNumber;
const int Proto80400401::kMountInfoFieldNumber;
#endif  // !_MSC_VER

Proto80400401::Proto80400401()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400401::InitAsDefaultInstance() {
}

Proto80400401::Proto80400401(const Proto80400401& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400401::SharedCtor() {
  _cached_size_ = 0;
  fighter_id_ = GOOGLE_LONGLONG(0);
  blood_ = 0;
  max_blood_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400401::~Proto80400401() {
  SharedDtor();
}

void Proto80400401::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400401::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400401::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400401_descriptor_;
}

const Proto80400401& Proto80400401::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto80400401* Proto80400401::default_instance_ = NULL;

Proto80400401* Proto80400401::New() const {
  return new Proto80400401;
}

void Proto80400401::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fighter_id_ = GOOGLE_LONGLONG(0);
    blood_ = 0;
    max_blood_ = 0;
  }
  mount_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400401::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 fighter_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fighter_id_)));
          set_has_fighter_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_blood;
        break;
      }
      
      // optional int32 blood = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blood_)));
          set_has_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_max_blood;
        break;
      }
      
      // optional int32 max_blood = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_blood_)));
          set_has_max_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_mount_info;
        break;
      }
      
      // repeated .ProtoPairObj mount_info = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mount_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mount_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_mount_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400401::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->fighter_id(), output);
  }
  
  // optional int32 blood = 2;
  if (has_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->blood(), output);
  }
  
  // optional int32 max_blood = 3;
  if (has_max_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_blood(), output);
  }
  
  // repeated .ProtoPairObj mount_info = 4;
  for (int i = 0; i < this->mount_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->mount_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400401::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->fighter_id(), target);
  }
  
  // optional int32 blood = 2;
  if (has_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->blood(), target);
  }
  
  // optional int32 max_blood = 3;
  if (has_max_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_blood(), target);
  }
  
  // repeated .ProtoPairObj mount_info = 4;
  for (int i = 0; i < this->mount_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->mount_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400401::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 fighter_id = 1;
    if (has_fighter_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fighter_id());
    }
    
    // optional int32 blood = 2;
    if (has_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->blood());
    }
    
    // optional int32 max_blood = 3;
    if (has_max_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_blood());
    }
    
  }
  // repeated .ProtoPairObj mount_info = 4;
  total_size += 1 * this->mount_info_size();
  for (int i = 0; i < this->mount_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mount_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400401::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400401* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400401*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400401::MergeFrom(const Proto80400401& from) {
  GOOGLE_CHECK_NE(&from, this);
  mount_info_.MergeFrom(from.mount_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fighter_id()) {
      set_fighter_id(from.fighter_id());
    }
    if (from.has_blood()) {
      set_blood(from.blood());
    }
    if (from.has_max_blood()) {
      set_max_blood(from.max_blood());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400401::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400401::CopyFrom(const Proto80400401& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400401::IsInitialized() const {
  
  return true;
}

void Proto80400401::Swap(Proto80400401* other) {
  if (other != this) {
    std::swap(fighter_id_, other->fighter_id_);
    std::swap(blood_, other->blood_);
    std::swap(max_blood_, other->max_blood_);
    mount_info_.Swap(&other->mount_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400401::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400401_descriptor_;
  metadata.reflection = Proto80400401_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400402::kRoleIdFieldNumber;
const int Proto80400402::kNearbyFieldNumber;
const int Proto80400402::kAliveFieldNumber;
const int Proto80400402::kOnlineFieldNumber;
#endif  // !_MSC_VER

Proto80400402::Proto80400402()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400402::InitAsDefaultInstance() {
}

Proto80400402::Proto80400402(const Proto80400402& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400402::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  nearby_ = 0;
  alive_ = 0;
  online_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400402::~Proto80400402() {
  SharedDtor();
}

void Proto80400402::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400402::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400402::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400402_descriptor_;
}

const Proto80400402& Proto80400402::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto80400402* Proto80400402::default_instance_ = NULL;

Proto80400402* Proto80400402::New() const {
  return new Proto80400402;
}

void Proto80400402::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    nearby_ = 0;
    alive_ = 0;
    online_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400402::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nearby;
        break;
      }
      
      // optional int32 nearby = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nearby:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nearby_)));
          set_has_nearby();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_alive;
        break;
      }
      
      // optional int32 alive = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_alive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &alive_)));
          set_has_alive();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_online;
        break;
      }
      
      // optional int32 online = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_online:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &online_)));
          set_has_online();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400402::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 nearby = 2;
  if (has_nearby()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nearby(), output);
  }
  
  // optional int32 alive = 3;
  if (has_alive()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->alive(), output);
  }
  
  // optional int32 online = 4;
  if (has_online()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->online(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400402::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 nearby = 2;
  if (has_nearby()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nearby(), target);
  }
  
  // optional int32 alive = 3;
  if (has_alive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->alive(), target);
  }
  
  // optional int32 online = 4;
  if (has_online()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->online(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400402::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 nearby = 2;
    if (has_nearby()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nearby());
    }
    
    // optional int32 alive = 3;
    if (has_alive()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->alive());
    }
    
    // optional int32 online = 4;
    if (has_online()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->online());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400402::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400402* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400402*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400402::MergeFrom(const Proto80400402& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_nearby()) {
      set_nearby(from.nearby());
    }
    if (from.has_alive()) {
      set_alive(from.alive());
    }
    if (from.has_online()) {
      set_online(from.online());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400402::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400402::CopyFrom(const Proto80400402& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400402::IsInitialized() const {
  
  return true;
}

void Proto80400402::Swap(Proto80400402* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(nearby_, other->nearby_);
    std::swap(alive_, other->alive_);
    std::swap(online_, other->online_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400402::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400402_descriptor_;
  metadata.reflection = Proto80400402_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80200004::kChatChannelFieldNumber;
const int Proto80200004::kOpraFieldNumber;
#endif  // !_MSC_VER

Proto80200004::Proto80200004()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80200004::InitAsDefaultInstance() {
}

Proto80200004::Proto80200004(const Proto80200004& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80200004::SharedCtor() {
  _cached_size_ = 0;
  chat_channel_ = 0;
  opra_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80200004::~Proto80200004() {
  SharedDtor();
}

void Proto80200004::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80200004::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80200004::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80200004_descriptor_;
}

const Proto80200004& Proto80200004::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto80200004* Proto80200004::default_instance_ = NULL;

Proto80200004* Proto80200004::New() const {
  return new Proto80200004;
}

void Proto80200004::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    chat_channel_ = 0;
    opra_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80200004::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 chat_channel = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chat_channel_)));
          set_has_chat_channel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_opra;
        break;
      }
      
      // optional int32 opra = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_opra:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &opra_)));
          set_has_opra();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80200004::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 chat_channel = 1;
  if (has_chat_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->chat_channel(), output);
  }
  
  // optional int32 opra = 2;
  if (has_opra()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->opra(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80200004::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 chat_channel = 1;
  if (has_chat_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->chat_channel(), target);
  }
  
  // optional int32 opra = 2;
  if (has_opra()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->opra(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80200004::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 chat_channel = 1;
    if (has_chat_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chat_channel());
    }
    
    // optional int32 opra = 2;
    if (has_opra()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->opra());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80200004::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80200004* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80200004*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80200004::MergeFrom(const Proto80200004& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_chat_channel()) {
      set_chat_channel(from.chat_channel());
    }
    if (from.has_opra()) {
      set_opra(from.opra());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80200004::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80200004::CopyFrom(const Proto80200004& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80200004::IsInitialized() const {
  
  return true;
}

void Proto80200004::Swap(Proto80200004* other) {
  if (other != this) {
    std::swap(chat_channel_, other->chat_channel_);
    std::swap(opra_, other->opra_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80200004::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80200004_descriptor_;
  metadata.reflection = Proto80200004_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401412::kActivityIdFieldNumber;
const int Proto11401412::kRestoreTypeFieldNumber;
#endif  // !_MSC_VER

Proto11401412::Proto11401412()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401412::InitAsDefaultInstance() {
}

Proto11401412::Proto11401412(const Proto11401412& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401412::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  restore_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401412::~Proto11401412() {
  SharedDtor();
}

void Proto11401412::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401412::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401412::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401412_descriptor_;
}

const Proto11401412& Proto11401412::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto11401412* Proto11401412::default_instance_ = NULL;

Proto11401412* Proto11401412::New() const {
  return new Proto11401412;
}

void Proto11401412::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    restore_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401412::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_restore_type;
        break;
      }
      
      // optional int32 restore_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_restore_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &restore_type_)));
          set_has_restore_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401412::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 restore_type = 2;
  if (has_restore_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->restore_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401412::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 restore_type = 2;
  if (has_restore_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->restore_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401412::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 restore_type = 2;
    if (has_restore_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->restore_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401412::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401412* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401412*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401412::MergeFrom(const Proto11401412& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_restore_type()) {
      set_restore_type(from.restore_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401412::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401412::CopyFrom(const Proto11401412& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401412::IsInitialized() const {
  
  return true;
}

void Proto11401412::Swap(Proto11401412* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(restore_type_, other->restore_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401412::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401412_descriptor_;
  metadata.reflection = Proto11401412_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401413::kRestoreTypeFieldNumber;
#endif  // !_MSC_VER

Proto11401413::Proto11401413()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401413::InitAsDefaultInstance() {
}

Proto11401413::Proto11401413(const Proto11401413& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401413::SharedCtor() {
  _cached_size_ = 0;
  restore_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401413::~Proto11401413() {
  SharedDtor();
}

void Proto11401413::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401413::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401413::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401413_descriptor_;
}

const Proto11401413& Proto11401413::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto11401413* Proto11401413::default_instance_ = NULL;

Proto11401413* Proto11401413::New() const {
  return new Proto11401413;
}

void Proto11401413::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    restore_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401413::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 restore_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &restore_type_)));
          set_has_restore_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401413::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 restore_type = 1;
  if (has_restore_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->restore_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401413::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 restore_type = 1;
  if (has_restore_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->restore_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401413::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 restore_type = 1;
    if (has_restore_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->restore_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401413::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401413* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401413*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401413::MergeFrom(const Proto11401413& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_restore_type()) {
      set_restore_type(from.restore_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401413::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401413::CopyFrom(const Proto11401413& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401413::IsInitialized() const {
  
  return true;
}

void Proto11401413::Swap(Proto11401413* other) {
  if (other != this) {
    std::swap(restore_type_, other->restore_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401413::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401413_descriptor_;
  metadata.reflection = Proto11401413_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401412::kActivityFieldNumber;
const int Proto51401412::kOtherInfoFieldNumber;
#endif  // !_MSC_VER

Proto51401412::Proto51401412()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401412::InitAsDefaultInstance() {
  other_info_ = const_cast< ::ProtoThreeObj*>(&::ProtoThreeObj::default_instance());
}

Proto51401412::Proto51401412(const Proto51401412& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401412::SharedCtor() {
  _cached_size_ = 0;
  activity_ = 0;
  other_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401412::~Proto51401412() {
  SharedDtor();
}

void Proto51401412::SharedDtor() {
  if (this != default_instance_) {
    delete other_info_;
  }
}

void Proto51401412::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401412::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401412_descriptor_;
}

const Proto51401412& Proto51401412::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto51401412* Proto51401412::default_instance_ = NULL;

Proto51401412* Proto51401412::New() const {
  return new Proto51401412;
}

void Proto51401412::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_ = 0;
    if (has_other_info()) {
      if (other_info_ != NULL) other_info_->::ProtoThreeObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401412::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_)));
          set_has_activity();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_other_info;
        break;
      }
      
      // optional .ProtoThreeObj other_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_other_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_other_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401412::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity = 1;
  if (has_activity()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity(), output);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->other_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401412::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity = 1;
  if (has_activity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity(), target);
  }
  
  // optional .ProtoThreeObj other_info = 2;
  if (has_other_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->other_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401412::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity = 1;
    if (has_activity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity());
    }
    
    // optional .ProtoThreeObj other_info = 2;
    if (has_other_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->other_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401412::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401412* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401412*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401412::MergeFrom(const Proto51401412& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity()) {
      set_activity(from.activity());
    }
    if (from.has_other_info()) {
      mutable_other_info()->::ProtoThreeObj::MergeFrom(from.other_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401412::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401412::CopyFrom(const Proto51401412& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401412::IsInitialized() const {
  
  return true;
}

void Proto51401412::Swap(Proto51401412* other) {
  if (other != this) {
    std::swap(activity_, other->activity_);
    std::swap(other_info_, other->other_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401412::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401412_descriptor_;
  metadata.reflection = Proto51401412_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401411::kRestoreInfoFieldNumber;
#endif  // !_MSC_VER

Proto51401411::Proto51401411()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401411::InitAsDefaultInstance() {
}

Proto51401411::Proto51401411(const Proto51401411& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401411::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401411::~Proto51401411() {
  SharedDtor();
}

void Proto51401411::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401411::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401411::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401411_descriptor_;
}

const Proto51401411& Proto51401411::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto51401411* Proto51401411::default_instance_ = NULL;

Proto51401411* Proto51401411::New() const {
  return new Proto51401411;
}

void Proto51401411::Clear() {
  restore_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401411::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoExpRestore restore_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_restore_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_restore_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_restore_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401411::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoExpRestore restore_info = 1;
  for (int i = 0; i < this->restore_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->restore_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401411::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoExpRestore restore_info = 1;
  for (int i = 0; i < this->restore_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->restore_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401411::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoExpRestore restore_info = 1;
  total_size += 1 * this->restore_info_size();
  for (int i = 0; i < this->restore_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->restore_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401411::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401411* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401411*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401411::MergeFrom(const Proto51401411& from) {
  GOOGLE_CHECK_NE(&from, this);
  restore_info_.MergeFrom(from.restore_info_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401411::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401411::CopyFrom(const Proto51401411& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401411::IsInitialized() const {
  
  return true;
}

void Proto51401411::Swap(Proto51401411* other) {
  if (other != this) {
    restore_info_.Swap(&other->restore_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401411::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401411_descriptor_;
  metadata.reflection = Proto51401411_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100031::kRoleIdFieldNumber;
const int Proto10100031::kBeastIdFieldNumber;
const int Proto10100031::kQueryTypeFieldNumber;
#endif  // !_MSC_VER

Proto10100031::Proto10100031()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100031::InitAsDefaultInstance() {
}

Proto10100031::Proto10100031(const Proto10100031& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100031::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  beast_id_ = GOOGLE_LONGLONG(0);
  query_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100031::~Proto10100031() {
  SharedDtor();
}

void Proto10100031::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100031::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100031::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100031_descriptor_;
}

const Proto10100031& Proto10100031::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto10100031* Proto10100031::default_instance_ = NULL;

Proto10100031* Proto10100031::New() const {
  return new Proto10100031;
}

void Proto10100031::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    beast_id_ = GOOGLE_LONGLONG(0);
    query_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100031::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_beast_id;
        break;
      }
      
      // optional int64 beast_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_query_type;
        break;
      }
      
      // optional int32 query_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_query_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &query_type_)));
          set_has_query_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100031::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int64 beast_id = 2;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->beast_id(), output);
  }
  
  // optional int32 query_type = 3;
  if (has_query_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->query_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100031::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int64 beast_id = 2;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->beast_id(), target);
  }
  
  // optional int32 query_type = 3;
  if (has_query_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->query_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100031::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int64 beast_id = 2;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
    // optional int32 query_type = 3;
    if (has_query_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->query_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100031::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100031* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100031*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100031::MergeFrom(const Proto10100031& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
    if (from.has_query_type()) {
      set_query_type(from.query_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100031::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100031::CopyFrom(const Proto10100031& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100031::IsInitialized() const {
  
  return true;
}

void Proto10100031::Swap(Proto10100031* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(beast_id_, other->beast_id_);
    std::swap(query_type_, other->query_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100031::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100031_descriptor_;
  metadata.reflection = Proto10100031_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100031::kRoleIdFieldNumber;
const int Proto50100031::kBeastIdFieldNumber;
const int Proto50100031::kBeastSortFieldNumber;
const int Proto50100031::kBeastNameFieldNumber;
const int Proto50100031::kBeastLevelFieldNumber;
const int Proto50100031::kBeastForceFieldNumber;
const int Proto50100031::kAbilityFieldNumber;
const int Proto50100031::kGrowthFieldNumber;
const int Proto50100031::kAttackFieldNumber;
const int Proto50100031::kHitFieldNumber;
const int Proto50100031::kCritFieldNumber;
const int Proto50100031::kSkySoulFieldNumber;
const int Proto50100031::kEarthSoulFieldNumber;
const int Proto50100031::kLifeSoulFieldNumber;
const int Proto50100031::kSkillSetFieldNumber;
const int Proto50100031::kMountGradeFieldNumber;
const int Proto50100031::kOnMountFieldNumber;
const int Proto50100031::kMountShapeFieldNumber;
const int Proto50100031::kSkyValueFieldNumber;
const int Proto50100031::kEarthValueFieldNumber;
const int Proto50100031::kLifeValueFieldNumber;
const int Proto50100031::kQueryTypeFieldNumber;
#endif  // !_MSC_VER

Proto50100031::Proto50100031()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100031::InitAsDefaultInstance() {
}

Proto50100031::Proto50100031(const Proto50100031& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100031::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  beast_id_ = GOOGLE_LONGLONG(0);
  beast_sort_ = 0;
  beast_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  beast_level_ = 0;
  beast_force_ = 0;
  ability_ = 0;
  growth_ = 0;
  attack_ = 0;
  hit_ = 0;
  crit_ = 0;
  sky_soul_ = 0;
  earth_soul_ = 0;
  life_soul_ = 0;
  mount_grade_ = 0;
  on_mount_ = 0;
  mount_shape_ = 0;
  sky_value_ = 0;
  earth_value_ = 0;
  life_value_ = 0;
  query_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100031::~Proto50100031() {
  SharedDtor();
}

void Proto50100031::SharedDtor() {
  if (beast_name_ != &::google::protobuf::internal::kEmptyString) {
    delete beast_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto50100031::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100031::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100031_descriptor_;
}

const Proto50100031& Proto50100031::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto50100031* Proto50100031::default_instance_ = NULL;

Proto50100031* Proto50100031::New() const {
  return new Proto50100031;
}

void Proto50100031::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    beast_id_ = GOOGLE_LONGLONG(0);
    beast_sort_ = 0;
    if (has_beast_name()) {
      if (beast_name_ != &::google::protobuf::internal::kEmptyString) {
        beast_name_->clear();
      }
    }
    beast_level_ = 0;
    beast_force_ = 0;
    ability_ = 0;
    growth_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    attack_ = 0;
    hit_ = 0;
    crit_ = 0;
    sky_soul_ = 0;
    earth_soul_ = 0;
    life_soul_ = 0;
    mount_grade_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    on_mount_ = 0;
    mount_shape_ = 0;
    sky_value_ = 0;
    earth_value_ = 0;
    life_value_ = 0;
    query_type_ = 0;
  }
  skill_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100031::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_beast_id;
        break;
      }
      
      // optional int64 beast_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_beast_sort;
        break;
      }
      
      // optional int32 beast_sort = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beast_sort_)));
          set_has_beast_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_beast_name;
        break;
      }
      
      // optional string beast_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_beast_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_beast_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->beast_name().data(), this->beast_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_beast_level;
        break;
      }
      
      // optional int32 beast_level = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beast_level_)));
          set_has_beast_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_beast_force;
        break;
      }
      
      // optional int32 beast_force = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beast_force_)));
          set_has_beast_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_ability;
        break;
      }
      
      // optional int32 ability = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ability:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ability_)));
          set_has_ability();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_growth;
        break;
      }
      
      // optional int32 growth = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_growth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &growth_)));
          set_has_growth();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_attack;
        break;
      }
      
      // optional int32 attack = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attack_)));
          set_has_attack();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_hit;
        break;
      }
      
      // optional int32 hit = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hit_)));
          set_has_hit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_crit;
        break;
      }
      
      // optional int32 crit = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_crit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crit_)));
          set_has_crit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_sky_soul;
        break;
      }
      
      // optional int32 sky_soul = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sky_soul:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sky_soul_)));
          set_has_sky_soul();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_earth_soul;
        break;
      }
      
      // optional int32 earth_soul = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_earth_soul:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &earth_soul_)));
          set_has_earth_soul();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_life_soul;
        break;
      }
      
      // optional int32 life_soul = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_life_soul:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &life_soul_)));
          set_has_life_soul();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_skill_set;
        break;
      }
      
      // repeated .ProtoBeastSkill skill_set = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_skill_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skill_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_skill_set;
        if (input->ExpectTag(128)) goto parse_mount_grade;
        break;
      }
      
      // optional int32 mount_grade = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mount_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mount_grade_)));
          set_has_mount_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_on_mount;
        break;
      }
      
      // optional int32 on_mount = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_on_mount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &on_mount_)));
          set_has_on_mount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_mount_shape;
        break;
      }
      
      // optional int32 mount_shape = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mount_shape:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mount_shape_)));
          set_has_mount_shape();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_sky_value;
        break;
      }
      
      // optional int32 sky_value = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sky_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sky_value_)));
          set_has_sky_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_earth_value;
        break;
      }
      
      // optional int32 earth_value = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_earth_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &earth_value_)));
          set_has_earth_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_life_value;
        break;
      }
      
      // optional int32 life_value = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_life_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &life_value_)));
          set_has_life_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_query_type;
        break;
      }
      
      // optional int32 query_type = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_query_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &query_type_)));
          set_has_query_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100031::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int64 beast_id = 2;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->beast_id(), output);
  }
  
  // optional int32 beast_sort = 3;
  if (has_beast_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->beast_sort(), output);
  }
  
  // optional string beast_name = 4;
  if (has_beast_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->beast_name().data(), this->beast_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->beast_name(), output);
  }
  
  // optional int32 beast_level = 5;
  if (has_beast_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->beast_level(), output);
  }
  
  // optional int32 beast_force = 6;
  if (has_beast_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->beast_force(), output);
  }
  
  // optional int32 ability = 7;
  if (has_ability()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->ability(), output);
  }
  
  // optional int32 growth = 8;
  if (has_growth()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->growth(), output);
  }
  
  // optional int32 attack = 9;
  if (has_attack()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->attack(), output);
  }
  
  // optional int32 hit = 10;
  if (has_hit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->hit(), output);
  }
  
  // optional int32 crit = 11;
  if (has_crit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->crit(), output);
  }
  
  // optional int32 sky_soul = 12;
  if (has_sky_soul()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->sky_soul(), output);
  }
  
  // optional int32 earth_soul = 13;
  if (has_earth_soul()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->earth_soul(), output);
  }
  
  // optional int32 life_soul = 14;
  if (has_life_soul()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->life_soul(), output);
  }
  
  // repeated .ProtoBeastSkill skill_set = 15;
  for (int i = 0; i < this->skill_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->skill_set(i), output);
  }
  
  // optional int32 mount_grade = 16;
  if (has_mount_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->mount_grade(), output);
  }
  
  // optional int32 on_mount = 17;
  if (has_on_mount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->on_mount(), output);
  }
  
  // optional int32 mount_shape = 18;
  if (has_mount_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->mount_shape(), output);
  }
  
  // optional int32 sky_value = 19;
  if (has_sky_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->sky_value(), output);
  }
  
  // optional int32 earth_value = 20;
  if (has_earth_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->earth_value(), output);
  }
  
  // optional int32 life_value = 21;
  if (has_life_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->life_value(), output);
  }
  
  // optional int32 query_type = 22;
  if (has_query_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->query_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100031::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int64 beast_id = 2;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->beast_id(), target);
  }
  
  // optional int32 beast_sort = 3;
  if (has_beast_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->beast_sort(), target);
  }
  
  // optional string beast_name = 4;
  if (has_beast_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->beast_name().data(), this->beast_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->beast_name(), target);
  }
  
  // optional int32 beast_level = 5;
  if (has_beast_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->beast_level(), target);
  }
  
  // optional int32 beast_force = 6;
  if (has_beast_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->beast_force(), target);
  }
  
  // optional int32 ability = 7;
  if (has_ability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->ability(), target);
  }
  
  // optional int32 growth = 8;
  if (has_growth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->growth(), target);
  }
  
  // optional int32 attack = 9;
  if (has_attack()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->attack(), target);
  }
  
  // optional int32 hit = 10;
  if (has_hit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->hit(), target);
  }
  
  // optional int32 crit = 11;
  if (has_crit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->crit(), target);
  }
  
  // optional int32 sky_soul = 12;
  if (has_sky_soul()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->sky_soul(), target);
  }
  
  // optional int32 earth_soul = 13;
  if (has_earth_soul()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->earth_soul(), target);
  }
  
  // optional int32 life_soul = 14;
  if (has_life_soul()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->life_soul(), target);
  }
  
  // repeated .ProtoBeastSkill skill_set = 15;
  for (int i = 0; i < this->skill_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->skill_set(i), target);
  }
  
  // optional int32 mount_grade = 16;
  if (has_mount_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->mount_grade(), target);
  }
  
  // optional int32 on_mount = 17;
  if (has_on_mount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->on_mount(), target);
  }
  
  // optional int32 mount_shape = 18;
  if (has_mount_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->mount_shape(), target);
  }
  
  // optional int32 sky_value = 19;
  if (has_sky_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->sky_value(), target);
  }
  
  // optional int32 earth_value = 20;
  if (has_earth_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->earth_value(), target);
  }
  
  // optional int32 life_value = 21;
  if (has_life_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->life_value(), target);
  }
  
  // optional int32 query_type = 22;
  if (has_query_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->query_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100031::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int64 beast_id = 2;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
    // optional int32 beast_sort = 3;
    if (has_beast_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->beast_sort());
    }
    
    // optional string beast_name = 4;
    if (has_beast_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->beast_name());
    }
    
    // optional int32 beast_level = 5;
    if (has_beast_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->beast_level());
    }
    
    // optional int32 beast_force = 6;
    if (has_beast_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->beast_force());
    }
    
    // optional int32 ability = 7;
    if (has_ability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ability());
    }
    
    // optional int32 growth = 8;
    if (has_growth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->growth());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 attack = 9;
    if (has_attack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attack());
    }
    
    // optional int32 hit = 10;
    if (has_hit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hit());
    }
    
    // optional int32 crit = 11;
    if (has_crit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crit());
    }
    
    // optional int32 sky_soul = 12;
    if (has_sky_soul()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sky_soul());
    }
    
    // optional int32 earth_soul = 13;
    if (has_earth_soul()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->earth_soul());
    }
    
    // optional int32 life_soul = 14;
    if (has_life_soul()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->life_soul());
    }
    
    // optional int32 mount_grade = 16;
    if (has_mount_grade()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mount_grade());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 on_mount = 17;
    if (has_on_mount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->on_mount());
    }
    
    // optional int32 mount_shape = 18;
    if (has_mount_shape()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mount_shape());
    }
    
    // optional int32 sky_value = 19;
    if (has_sky_value()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sky_value());
    }
    
    // optional int32 earth_value = 20;
    if (has_earth_value()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->earth_value());
    }
    
    // optional int32 life_value = 21;
    if (has_life_value()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->life_value());
    }
    
    // optional int32 query_type = 22;
    if (has_query_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->query_type());
    }
    
  }
  // repeated .ProtoBeastSkill skill_set = 15;
  total_size += 1 * this->skill_set_size();
  for (int i = 0; i < this->skill_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->skill_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100031::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100031* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100031*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100031::MergeFrom(const Proto50100031& from) {
  GOOGLE_CHECK_NE(&from, this);
  skill_set_.MergeFrom(from.skill_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
    if (from.has_beast_sort()) {
      set_beast_sort(from.beast_sort());
    }
    if (from.has_beast_name()) {
      set_beast_name(from.beast_name());
    }
    if (from.has_beast_level()) {
      set_beast_level(from.beast_level());
    }
    if (from.has_beast_force()) {
      set_beast_force(from.beast_force());
    }
    if (from.has_ability()) {
      set_ability(from.ability());
    }
    if (from.has_growth()) {
      set_growth(from.growth());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_attack()) {
      set_attack(from.attack());
    }
    if (from.has_hit()) {
      set_hit(from.hit());
    }
    if (from.has_crit()) {
      set_crit(from.crit());
    }
    if (from.has_sky_soul()) {
      set_sky_soul(from.sky_soul());
    }
    if (from.has_earth_soul()) {
      set_earth_soul(from.earth_soul());
    }
    if (from.has_life_soul()) {
      set_life_soul(from.life_soul());
    }
    if (from.has_mount_grade()) {
      set_mount_grade(from.mount_grade());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_on_mount()) {
      set_on_mount(from.on_mount());
    }
    if (from.has_mount_shape()) {
      set_mount_shape(from.mount_shape());
    }
    if (from.has_sky_value()) {
      set_sky_value(from.sky_value());
    }
    if (from.has_earth_value()) {
      set_earth_value(from.earth_value());
    }
    if (from.has_life_value()) {
      set_life_value(from.life_value());
    }
    if (from.has_query_type()) {
      set_query_type(from.query_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100031::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100031::CopyFrom(const Proto50100031& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100031::IsInitialized() const {
  
  return true;
}

void Proto50100031::Swap(Proto50100031* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(beast_id_, other->beast_id_);
    std::swap(beast_sort_, other->beast_sort_);
    std::swap(beast_name_, other->beast_name_);
    std::swap(beast_level_, other->beast_level_);
    std::swap(beast_force_, other->beast_force_);
    std::swap(ability_, other->ability_);
    std::swap(growth_, other->growth_);
    std::swap(attack_, other->attack_);
    std::swap(hit_, other->hit_);
    std::swap(crit_, other->crit_);
    std::swap(sky_soul_, other->sky_soul_);
    std::swap(earth_soul_, other->earth_soul_);
    std::swap(life_soul_, other->life_soul_);
    skill_set_.Swap(&other->skill_set_);
    std::swap(mount_grade_, other->mount_grade_);
    std::swap(on_mount_, other->on_mount_);
    std::swap(mount_shape_, other->mount_shape_);
    std::swap(sky_value_, other->sky_value_);
    std::swap(earth_value_, other->earth_value_);
    std::swap(life_value_, other->life_value_);
    std::swap(query_type_, other->query_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100031::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100031_descriptor_;
  metadata.reflection = Proto50100031_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400306::kPageIndexFieldNumber;
#endif  // !_MSC_VER

Proto10400306::Proto10400306()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400306::InitAsDefaultInstance() {
}

Proto10400306::Proto10400306(const Proto10400306& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400306::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400306::~Proto10400306() {
  SharedDtor();
}

void Proto10400306::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400306::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400306::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400306_descriptor_;
}

const Proto10400306& Proto10400306::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto10400306* Proto10400306::default_instance_ = NULL;

Proto10400306* Proto10400306::New() const {
  return new Proto10400306;
}

void Proto10400306::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400306::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400306::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400306::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400306::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400306::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400306* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400306*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400306::MergeFrom(const Proto10400306& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400306::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400306::CopyFrom(const Proto10400306& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400306::IsInitialized() const {
  
  return true;
}

void Proto10400306::Swap(Proto10400306* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400306::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400306_descriptor_;
  metadata.reflection = Proto10400306_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400306::kPageIndexFieldNumber;
const int Proto50400306::kTotalPageFieldNumber;
const int Proto50400306::kRoleSetFieldNumber;
const int Proto50400306::kSelfRoleFieldNumber;
#endif  // !_MSC_VER

Proto50400306::Proto50400306()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400306::InitAsDefaultInstance() {
  self_role_ = const_cast< ::ProtoLMRole*>(&::ProtoLMRole::default_instance());
}

Proto50400306::Proto50400306(const Proto50400306& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400306::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  total_page_ = 0;
  self_role_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400306::~Proto50400306() {
  SharedDtor();
}

void Proto50400306::SharedDtor() {
  if (this != default_instance_) {
    delete self_role_;
  }
}

void Proto50400306::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400306::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400306_descriptor_;
}

const Proto50400306& Proto50400306::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto50400306* Proto50400306::default_instance_ = NULL;

Proto50400306* Proto50400306::New() const {
  return new Proto50400306;
}

void Proto50400306::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
    total_page_ = 0;
    if (has_self_role()) {
      if (self_role_ != NULL) self_role_->::ProtoLMRole::Clear();
    }
  }
  role_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400306::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_role_set;
        break;
      }
      
      // repeated .ProtoLMRole role_set = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_role_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_role_set;
        if (input->ExpectTag(34)) goto parse_self_role;
        break;
      }
      
      // optional .ProtoLMRole self_role = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_self_role:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self_role()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400306::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  // optional int32 total_page = 2;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_page(), output);
  }
  
  // repeated .ProtoLMRole role_set = 3;
  for (int i = 0; i < this->role_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->role_set(i), output);
  }
  
  // optional .ProtoLMRole self_role = 4;
  if (has_self_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->self_role(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400306::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  // optional int32 total_page = 2;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_page(), target);
  }
  
  // repeated .ProtoLMRole role_set = 3;
  for (int i = 0; i < this->role_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->role_set(i), target);
  }
  
  // optional .ProtoLMRole self_role = 4;
  if (has_self_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->self_role(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400306::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
    // optional int32 total_page = 2;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
    // optional .ProtoLMRole self_role = 4;
    if (has_self_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->self_role());
    }
    
  }
  // repeated .ProtoLMRole role_set = 3;
  total_size += 1 * this->role_set_size();
  for (int i = 0; i < this->role_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400306::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400306* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400306*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400306::MergeFrom(const Proto50400306& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_set_.MergeFrom(from.role_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
    if (from.has_self_role()) {
      mutable_self_role()->::ProtoLMRole::MergeFrom(from.self_role());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400306::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400306::CopyFrom(const Proto50400306& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400306::IsInitialized() const {
  
  return true;
}

void Proto50400306::Swap(Proto50400306* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(total_page_, other->total_page_);
    role_set_.Swap(&other->role_set_);
    std::swap(self_role_, other->self_role_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400306::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400306_descriptor_;
  metadata.reflection = Proto50400306_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400307::kPageIndexFieldNumber;
#endif  // !_MSC_VER

Proto10400307::Proto10400307()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400307::InitAsDefaultInstance() {
}

Proto10400307::Proto10400307(const Proto10400307& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400307::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400307::~Proto10400307() {
  SharedDtor();
}

void Proto10400307::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400307::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400307::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400307_descriptor_;
}

const Proto10400307& Proto10400307::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto10400307* Proto10400307::default_instance_ = NULL;

Proto10400307* Proto10400307::New() const {
  return new Proto10400307;
}

void Proto10400307::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400307::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400307::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400307::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400307::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400307::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400307* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400307*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400307::MergeFrom(const Proto10400307& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400307::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400307::CopyFrom(const Proto10400307& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400307::IsInitialized() const {
  
  return true;
}

void Proto10400307::Swap(Proto10400307* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400307::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400307_descriptor_;
  metadata.reflection = Proto10400307_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400307::kPageIndexFieldNumber;
const int Proto50400307::kTotalPageFieldNumber;
const int Proto50400307::kLeagueSetFieldNumber;
const int Proto50400307::kSelfLeagueFieldNumber;
#endif  // !_MSC_VER

Proto50400307::Proto50400307()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400307::InitAsDefaultInstance() {
  self_league_ = const_cast< ::ProtoMarLeague*>(&::ProtoMarLeague::default_instance());
}

Proto50400307::Proto50400307(const Proto50400307& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400307::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  total_page_ = 0;
  self_league_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400307::~Proto50400307() {
  SharedDtor();
}

void Proto50400307::SharedDtor() {
  if (this != default_instance_) {
    delete self_league_;
  }
}

void Proto50400307::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400307::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400307_descriptor_;
}

const Proto50400307& Proto50400307::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto50400307* Proto50400307::default_instance_ = NULL;

Proto50400307* Proto50400307::New() const {
  return new Proto50400307;
}

void Proto50400307::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
    total_page_ = 0;
    if (has_self_league()) {
      if (self_league_ != NULL) self_league_->::ProtoMarLeague::Clear();
    }
  }
  league_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400307::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_league_set;
        break;
      }
      
      // repeated .ProtoMarLeague league_set = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_league_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_league_set;
        if (input->ExpectTag(34)) goto parse_self_league;
        break;
      }
      
      // optional .ProtoMarLeague self_league = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_self_league:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self_league()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400307::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  // optional int32 total_page = 2;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_page(), output);
  }
  
  // repeated .ProtoMarLeague league_set = 3;
  for (int i = 0; i < this->league_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->league_set(i), output);
  }
  
  // optional .ProtoMarLeague self_league = 4;
  if (has_self_league()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->self_league(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400307::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  // optional int32 total_page = 2;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_page(), target);
  }
  
  // repeated .ProtoMarLeague league_set = 3;
  for (int i = 0; i < this->league_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->league_set(i), target);
  }
  
  // optional .ProtoMarLeague self_league = 4;
  if (has_self_league()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->self_league(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400307::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
    // optional int32 total_page = 2;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
    // optional .ProtoMarLeague self_league = 4;
    if (has_self_league()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->self_league());
    }
    
  }
  // repeated .ProtoMarLeague league_set = 3;
  total_size += 1 * this->league_set_size();
  for (int i = 0; i < this->league_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->league_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400307::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400307* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400307*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400307::MergeFrom(const Proto50400307& from) {
  GOOGLE_CHECK_NE(&from, this);
  league_set_.MergeFrom(from.league_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
    if (from.has_self_league()) {
      mutable_self_league()->::ProtoMarLeague::MergeFrom(from.self_league());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400307::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400307::CopyFrom(const Proto50400307& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400307::IsInitialized() const {
  
  return true;
}

void Proto50400307::Swap(Proto50400307* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(total_page_, other->total_page_);
    league_set_.Swap(&other->league_set_);
    std::swap(self_league_, other->self_league_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400307::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400307_descriptor_;
  metadata.reflection = Proto50400307_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400336::kWinIdFieldNumber;
const int Proto80400336::kWinNameFieldNumber;
const int Proto80400336::kWinLeagueFieldNumber;
const int Proto80400336::kLoseIdFieldNumber;
const int Proto80400336::kLoseNameFieldNumber;
const int Proto80400336::kLoseLeagueFieldNumber;
const int Proto80400336::kFightStateFieldNumber;
#endif  // !_MSC_VER

Proto80400336::Proto80400336()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400336::InitAsDefaultInstance() {
}

Proto80400336::Proto80400336(const Proto80400336& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400336::SharedCtor() {
  _cached_size_ = 0;
  win_id_ = GOOGLE_LONGLONG(0);
  win_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  win_league_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  lose_id_ = GOOGLE_LONGLONG(0);
  lose_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  lose_league_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fight_state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400336::~Proto80400336() {
  SharedDtor();
}

void Proto80400336::SharedDtor() {
  if (win_name_ != &::google::protobuf::internal::kEmptyString) {
    delete win_name_;
  }
  if (win_league_ != &::google::protobuf::internal::kEmptyString) {
    delete win_league_;
  }
  if (lose_name_ != &::google::protobuf::internal::kEmptyString) {
    delete lose_name_;
  }
  if (lose_league_ != &::google::protobuf::internal::kEmptyString) {
    delete lose_league_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400336::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400336::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400336_descriptor_;
}

const Proto80400336& Proto80400336::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto80400336* Proto80400336::default_instance_ = NULL;

Proto80400336* Proto80400336::New() const {
  return new Proto80400336;
}

void Proto80400336::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    win_id_ = GOOGLE_LONGLONG(0);
    if (has_win_name()) {
      if (win_name_ != &::google::protobuf::internal::kEmptyString) {
        win_name_->clear();
      }
    }
    if (has_win_league()) {
      if (win_league_ != &::google::protobuf::internal::kEmptyString) {
        win_league_->clear();
      }
    }
    lose_id_ = GOOGLE_LONGLONG(0);
    if (has_lose_name()) {
      if (lose_name_ != &::google::protobuf::internal::kEmptyString) {
        lose_name_->clear();
      }
    }
    if (has_lose_league()) {
      if (lose_league_ != &::google::protobuf::internal::kEmptyString) {
        lose_league_->clear();
      }
    }
    fight_state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400336::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 win_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &win_id_)));
          set_has_win_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_win_name;
        break;
      }
      
      // optional string win_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_win_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_win_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->win_name().data(), this->win_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_win_league;
        break;
      }
      
      // optional string win_league = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_win_league:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_win_league()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->win_league().data(), this->win_league().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_lose_id;
        break;
      }
      
      // optional int64 lose_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lose_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lose_id_)));
          set_has_lose_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_lose_name;
        break;
      }
      
      // optional string lose_name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lose_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lose_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->lose_name().data(), this->lose_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_lose_league;
        break;
      }
      
      // optional string lose_league = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lose_league:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lose_league()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->lose_league().data(), this->lose_league().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_fight_state;
        break;
      }
      
      // optional int32 fight_state = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_state_)));
          set_has_fight_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400336::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 win_id = 1;
  if (has_win_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->win_id(), output);
  }
  
  // optional string win_name = 2;
  if (has_win_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->win_name().data(), this->win_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->win_name(), output);
  }
  
  // optional string win_league = 3;
  if (has_win_league()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->win_league().data(), this->win_league().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->win_league(), output);
  }
  
  // optional int64 lose_id = 4;
  if (has_lose_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->lose_id(), output);
  }
  
  // optional string lose_name = 5;
  if (has_lose_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lose_name().data(), this->lose_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->lose_name(), output);
  }
  
  // optional string lose_league = 6;
  if (has_lose_league()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lose_league().data(), this->lose_league().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->lose_league(), output);
  }
  
  // optional int32 fight_state = 7;
  if (has_fight_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->fight_state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400336::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 win_id = 1;
  if (has_win_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->win_id(), target);
  }
  
  // optional string win_name = 2;
  if (has_win_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->win_name().data(), this->win_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->win_name(), target);
  }
  
  // optional string win_league = 3;
  if (has_win_league()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->win_league().data(), this->win_league().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->win_league(), target);
  }
  
  // optional int64 lose_id = 4;
  if (has_lose_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->lose_id(), target);
  }
  
  // optional string lose_name = 5;
  if (has_lose_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lose_name().data(), this->lose_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->lose_name(), target);
  }
  
  // optional string lose_league = 6;
  if (has_lose_league()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lose_league().data(), this->lose_league().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->lose_league(), target);
  }
  
  // optional int32 fight_state = 7;
  if (has_fight_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->fight_state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400336::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 win_id = 1;
    if (has_win_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->win_id());
    }
    
    // optional string win_name = 2;
    if (has_win_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->win_name());
    }
    
    // optional string win_league = 3;
    if (has_win_league()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->win_league());
    }
    
    // optional int64 lose_id = 4;
    if (has_lose_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lose_id());
    }
    
    // optional string lose_name = 5;
    if (has_lose_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lose_name());
    }
    
    // optional string lose_league = 6;
    if (has_lose_league()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lose_league());
    }
    
    // optional int32 fight_state = 7;
    if (has_fight_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_state());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400336::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400336* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400336*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400336::MergeFrom(const Proto80400336& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_win_id()) {
      set_win_id(from.win_id());
    }
    if (from.has_win_name()) {
      set_win_name(from.win_name());
    }
    if (from.has_win_league()) {
      set_win_league(from.win_league());
    }
    if (from.has_lose_id()) {
      set_lose_id(from.lose_id());
    }
    if (from.has_lose_name()) {
      set_lose_name(from.lose_name());
    }
    if (from.has_lose_league()) {
      set_lose_league(from.lose_league());
    }
    if (from.has_fight_state()) {
      set_fight_state(from.fight_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400336::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400336::CopyFrom(const Proto80400336& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400336::IsInitialized() const {
  
  return true;
}

void Proto80400336::Swap(Proto80400336* other) {
  if (other != this) {
    std::swap(win_id_, other->win_id_);
    std::swap(win_name_, other->win_name_);
    std::swap(win_league_, other->win_league_);
    std::swap(lose_id_, other->lose_id_);
    std::swap(lose_name_, other->lose_name_);
    std::swap(lose_league_, other->lose_league_);
    std::swap(fight_state_, other->fight_state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400336::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400336_descriptor_;
  metadata.reflection = Proto80400336_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400906::kFlagFieldNumber;
const int Proto80400906::kSciptSortFieldNumber;
const int Proto80400906::kUsedTickFieldNumber;
const int Proto80400906::kExpFieldNumber;
const int Proto80400906::kCopperFieldNumber;
const int Proto80400906::kItemFieldNumber;
const int Proto80400906::kStarLevelFieldNumber;
const int Proto80400906::kIsFirstPassFieldNumber;
const int Proto80400906::kAiScoreFieldNumber;
const int Proto80400906::kRescueAmountFieldNumber;
const int Proto80400906::kPresentSortFieldNumber;
const int Proto80400906::kNextSortFieldNumber;
const int Proto80400906::kNoCardFieldNumber;
const int Proto80400906::kBeginWaveFieldNumber;
const int Proto80400906::kEndWaveFieldNumber;
const int Proto80400906::kCurFloorFieldNumber;
#endif  // !_MSC_VER

Proto80400906::Proto80400906()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400906::InitAsDefaultInstance() {
}

Proto80400906::Proto80400906(const Proto80400906& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400906::SharedCtor() {
  _cached_size_ = 0;
  flag_ = 0;
  scipt_sort_ = 0;
  used_tick_ = 0;
  exp_ = 0;
  copper_ = 0;
  is_first_pass_ = 0;
  ai_score_ = 0;
  rescue_amount_ = 0;
  present_sort_ = 0;
  next_sort_ = 0;
  no_card_ = 0;
  begin_wave_ = 0;
  end_wave_ = 0;
  cur_floor_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400906::~Proto80400906() {
  SharedDtor();
}

void Proto80400906::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400906::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400906::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400906_descriptor_;
}

const Proto80400906& Proto80400906::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto80400906* Proto80400906::default_instance_ = NULL;

Proto80400906* Proto80400906::New() const {
  return new Proto80400906;
}

void Proto80400906::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    flag_ = 0;
    scipt_sort_ = 0;
    used_tick_ = 0;
    exp_ = 0;
    copper_ = 0;
    is_first_pass_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    ai_score_ = 0;
    rescue_amount_ = 0;
    present_sort_ = 0;
    next_sort_ = 0;
    no_card_ = 0;
    begin_wave_ = 0;
    end_wave_ = 0;
    cur_floor_ = 0;
  }
  item_.Clear();
  star_level_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400906::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_scipt_sort;
        break;
      }
      
      // optional int32 scipt_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scipt_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scipt_sort_)));
          set_has_scipt_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_used_tick;
        break;
      }
      
      // optional int32 used_tick = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_used_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &used_tick_)));
          set_has_used_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_exp;
        break;
      }
      
      // optional int32 exp = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_copper;
        break;
      }
      
      // optional int32 copper = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_copper:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &copper_)));
          set_has_copper();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_item;
        break;
      }
      
      // repeated .ProtoItem item = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_item;
        if (input->ExpectTag(56)) goto parse_star_level;
        break;
      }
      
      // repeated int32 star_level = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_star_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_star_level())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_star_level())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_star_level;
        if (input->ExpectTag(64)) goto parse_is_first_pass;
        break;
      }
      
      // optional int32 is_first_pass = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_first_pass:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_first_pass_)));
          set_has_is_first_pass();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_ai_score;
        break;
      }
      
      // optional int32 ai_score = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ai_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ai_score_)));
          set_has_ai_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_rescue_amount;
        break;
      }
      
      // optional int32 rescue_amount = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rescue_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rescue_amount_)));
          set_has_rescue_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_present_sort;
        break;
      }
      
      // optional int32 present_sort = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_present_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &present_sort_)));
          set_has_present_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_next_sort;
        break;
      }
      
      // optional int32 next_sort = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_next_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &next_sort_)));
          set_has_next_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_no_card;
        break;
      }
      
      // optional int32 no_card = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_no_card:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &no_card_)));
          set_has_no_card();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_begin_wave;
        break;
      }
      
      // optional int32 begin_wave = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_begin_wave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &begin_wave_)));
          set_has_begin_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_end_wave;
        break;
      }
      
      // optional int32 end_wave = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_wave:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_wave_)));
          set_has_end_wave();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_cur_floor;
        break;
      }
      
      // optional int32 cur_floor = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_floor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_floor_)));
          set_has_cur_floor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400906::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 flag = 1;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag(), output);
  }
  
  // optional int32 scipt_sort = 2;
  if (has_scipt_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->scipt_sort(), output);
  }
  
  // optional int32 used_tick = 3;
  if (has_used_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->used_tick(), output);
  }
  
  // optional int32 exp = 4;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->exp(), output);
  }
  
  // optional int32 copper = 5;
  if (has_copper()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->copper(), output);
  }
  
  // repeated .ProtoItem item = 6;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->item(i), output);
  }
  
  // repeated int32 star_level = 7;
  for (int i = 0; i < this->star_level_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->star_level(i), output);
  }
  
  // optional int32 is_first_pass = 8;
  if (has_is_first_pass()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->is_first_pass(), output);
  }
  
  // optional int32 ai_score = 9;
  if (has_ai_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->ai_score(), output);
  }
  
  // optional int32 rescue_amount = 10;
  if (has_rescue_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->rescue_amount(), output);
  }
  
  // optional int32 present_sort = 11;
  if (has_present_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->present_sort(), output);
  }
  
  // optional int32 next_sort = 12;
  if (has_next_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->next_sort(), output);
  }
  
  // optional int32 no_card = 13;
  if (has_no_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->no_card(), output);
  }
  
  // optional int32 begin_wave = 14;
  if (has_begin_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->begin_wave(), output);
  }
  
  // optional int32 end_wave = 15;
  if (has_end_wave()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->end_wave(), output);
  }
  
  // optional int32 cur_floor = 16;
  if (has_cur_floor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->cur_floor(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400906::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 flag = 1;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag(), target);
  }
  
  // optional int32 scipt_sort = 2;
  if (has_scipt_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->scipt_sort(), target);
  }
  
  // optional int32 used_tick = 3;
  if (has_used_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->used_tick(), target);
  }
  
  // optional int32 exp = 4;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->exp(), target);
  }
  
  // optional int32 copper = 5;
  if (has_copper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->copper(), target);
  }
  
  // repeated .ProtoItem item = 6;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->item(i), target);
  }
  
  // repeated int32 star_level = 7;
  for (int i = 0; i < this->star_level_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->star_level(i), target);
  }
  
  // optional int32 is_first_pass = 8;
  if (has_is_first_pass()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->is_first_pass(), target);
  }
  
  // optional int32 ai_score = 9;
  if (has_ai_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->ai_score(), target);
  }
  
  // optional int32 rescue_amount = 10;
  if (has_rescue_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->rescue_amount(), target);
  }
  
  // optional int32 present_sort = 11;
  if (has_present_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->present_sort(), target);
  }
  
  // optional int32 next_sort = 12;
  if (has_next_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->next_sort(), target);
  }
  
  // optional int32 no_card = 13;
  if (has_no_card()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->no_card(), target);
  }
  
  // optional int32 begin_wave = 14;
  if (has_begin_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->begin_wave(), target);
  }
  
  // optional int32 end_wave = 15;
  if (has_end_wave()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->end_wave(), target);
  }
  
  // optional int32 cur_floor = 16;
  if (has_cur_floor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->cur_floor(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400906::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 flag = 1;
    if (has_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->flag());
    }
    
    // optional int32 scipt_sort = 2;
    if (has_scipt_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scipt_sort());
    }
    
    // optional int32 used_tick = 3;
    if (has_used_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->used_tick());
    }
    
    // optional int32 exp = 4;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }
    
    // optional int32 copper = 5;
    if (has_copper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->copper());
    }
    
    // optional int32 is_first_pass = 8;
    if (has_is_first_pass()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_first_pass());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 ai_score = 9;
    if (has_ai_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ai_score());
    }
    
    // optional int32 rescue_amount = 10;
    if (has_rescue_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rescue_amount());
    }
    
    // optional int32 present_sort = 11;
    if (has_present_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->present_sort());
    }
    
    // optional int32 next_sort = 12;
    if (has_next_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->next_sort());
    }
    
    // optional int32 no_card = 13;
    if (has_no_card()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->no_card());
    }
    
    // optional int32 begin_wave = 14;
    if (has_begin_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->begin_wave());
    }
    
    // optional int32 end_wave = 15;
    if (has_end_wave()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->end_wave());
    }
    
    // optional int32 cur_floor = 16;
    if (has_cur_floor()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_floor());
    }
    
  }
  // repeated .ProtoItem item = 6;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }
  
  // repeated int32 star_level = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->star_level_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->star_level(i));
    }
    total_size += 1 * this->star_level_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400906::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400906* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400906*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400906::MergeFrom(const Proto80400906& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  star_level_.MergeFrom(from.star_level_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_flag()) {
      set_flag(from.flag());
    }
    if (from.has_scipt_sort()) {
      set_scipt_sort(from.scipt_sort());
    }
    if (from.has_used_tick()) {
      set_used_tick(from.used_tick());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_copper()) {
      set_copper(from.copper());
    }
    if (from.has_is_first_pass()) {
      set_is_first_pass(from.is_first_pass());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_ai_score()) {
      set_ai_score(from.ai_score());
    }
    if (from.has_rescue_amount()) {
      set_rescue_amount(from.rescue_amount());
    }
    if (from.has_present_sort()) {
      set_present_sort(from.present_sort());
    }
    if (from.has_next_sort()) {
      set_next_sort(from.next_sort());
    }
    if (from.has_no_card()) {
      set_no_card(from.no_card());
    }
    if (from.has_begin_wave()) {
      set_begin_wave(from.begin_wave());
    }
    if (from.has_end_wave()) {
      set_end_wave(from.end_wave());
    }
    if (from.has_cur_floor()) {
      set_cur_floor(from.cur_floor());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400906::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400906::CopyFrom(const Proto80400906& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400906::IsInitialized() const {
  
  return true;
}

void Proto80400906::Swap(Proto80400906* other) {
  if (other != this) {
    std::swap(flag_, other->flag_);
    std::swap(scipt_sort_, other->scipt_sort_);
    std::swap(used_tick_, other->used_tick_);
    std::swap(exp_, other->exp_);
    std::swap(copper_, other->copper_);
    item_.Swap(&other->item_);
    star_level_.Swap(&other->star_level_);
    std::swap(is_first_pass_, other->is_first_pass_);
    std::swap(ai_score_, other->ai_score_);
    std::swap(rescue_amount_, other->rescue_amount_);
    std::swap(present_sort_, other->present_sort_);
    std::swap(next_sort_, other->next_sort_);
    std::swap(no_card_, other->no_card_);
    std::swap(begin_wave_, other->begin_wave_);
    std::swap(end_wave_, other->end_wave_);
    std::swap(cur_floor_, other->cur_floor_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400906::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400906_descriptor_;
  metadata.reflection = Proto80400906_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400905::kNoviceStepFieldNumber;
#endif  // !_MSC_VER

Proto10400905::Proto10400905()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400905::InitAsDefaultInstance() {
}

Proto10400905::Proto10400905(const Proto10400905& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400905::SharedCtor() {
  _cached_size_ = 0;
  novice_step_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400905::~Proto10400905() {
  SharedDtor();
}

void Proto10400905::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400905::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400905::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400905_descriptor_;
}

const Proto10400905& Proto10400905::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto10400905* Proto10400905::default_instance_ = NULL;

Proto10400905* Proto10400905::New() const {
  return new Proto10400905;
}

void Proto10400905::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    novice_step_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400905::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 novice_step = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &novice_step_)));
          set_has_novice_step();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400905::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 novice_step = 1;
  if (has_novice_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->novice_step(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400905::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 novice_step = 1;
  if (has_novice_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->novice_step(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400905::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 novice_step = 1;
    if (has_novice_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->novice_step());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400905::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400905* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400905*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400905::MergeFrom(const Proto10400905& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_novice_step()) {
      set_novice_step(from.novice_step());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400905::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400905::CopyFrom(const Proto10400905& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400905::IsInitialized() const {
  
  return true;
}

void Proto10400905::Swap(Proto10400905* other) {
  if (other != this) {
    std::swap(novice_step_, other->novice_step_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400905::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400905_descriptor_;
  metadata.reflection = Proto10400905_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400337::kLeftTimeFieldNumber;
const int Proto80400337::kMartialStateFieldNumber;
const int Proto80400337::kTotalTimeFieldNumber;
const int Proto80400337::kFirstRoleFieldNumber;
const int Proto80400337::kSecondRoleFieldNumber;
#endif  // !_MSC_VER

Proto80400337::Proto80400337()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400337::InitAsDefaultInstance() {
  first_role_ = const_cast< ::ProtoRoleInfo*>(&::ProtoRoleInfo::default_instance());
  second_role_ = const_cast< ::ProtoRoleInfo*>(&::ProtoRoleInfo::default_instance());
}

Proto80400337::Proto80400337(const Proto80400337& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400337::SharedCtor() {
  _cached_size_ = 0;
  left_time_ = 0;
  martial_state_ = 0;
  total_time_ = 0;
  first_role_ = NULL;
  second_role_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400337::~Proto80400337() {
  SharedDtor();
}

void Proto80400337::SharedDtor() {
  if (this != default_instance_) {
    delete first_role_;
    delete second_role_;
  }
}

void Proto80400337::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400337::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400337_descriptor_;
}

const Proto80400337& Proto80400337::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto80400337* Proto80400337::default_instance_ = NULL;

Proto80400337* Proto80400337::New() const {
  return new Proto80400337;
}

void Proto80400337::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_time_ = 0;
    martial_state_ = 0;
    total_time_ = 0;
    if (has_first_role()) {
      if (first_role_ != NULL) first_role_->::ProtoRoleInfo::Clear();
    }
    if (has_second_role()) {
      if (second_role_ != NULL) second_role_->::ProtoRoleInfo::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400337::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_martial_state;
        break;
      }
      
      // optional int32 martial_state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_martial_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &martial_state_)));
          set_has_martial_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_total_time;
        break;
      }
      
      // optional int32 total_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_time_)));
          set_has_total_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_first_role;
        break;
      }
      
      // optional .ProtoRoleInfo first_role = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_first_role:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_first_role()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_second_role;
        break;
      }
      
      // optional .ProtoRoleInfo second_role = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_second_role:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_second_role()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400337::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_time = 1;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_time(), output);
  }
  
  // optional int32 martial_state = 2;
  if (has_martial_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->martial_state(), output);
  }
  
  // optional int32 total_time = 3;
  if (has_total_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_time(), output);
  }
  
  // optional .ProtoRoleInfo first_role = 4;
  if (has_first_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->first_role(), output);
  }
  
  // optional .ProtoRoleInfo second_role = 5;
  if (has_second_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->second_role(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400337::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_time = 1;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_time(), target);
  }
  
  // optional int32 martial_state = 2;
  if (has_martial_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->martial_state(), target);
  }
  
  // optional int32 total_time = 3;
  if (has_total_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_time(), target);
  }
  
  // optional .ProtoRoleInfo first_role = 4;
  if (has_first_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->first_role(), target);
  }
  
  // optional .ProtoRoleInfo second_role = 5;
  if (has_second_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->second_role(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400337::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_time = 1;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 martial_state = 2;
    if (has_martial_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->martial_state());
    }
    
    // optional int32 total_time = 3;
    if (has_total_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_time());
    }
    
    // optional .ProtoRoleInfo first_role = 4;
    if (has_first_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->first_role());
    }
    
    // optional .ProtoRoleInfo second_role = 5;
    if (has_second_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->second_role());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400337::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400337* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400337*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400337::MergeFrom(const Proto80400337& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_martial_state()) {
      set_martial_state(from.martial_state());
    }
    if (from.has_total_time()) {
      set_total_time(from.total_time());
    }
    if (from.has_first_role()) {
      mutable_first_role()->::ProtoRoleInfo::MergeFrom(from.first_role());
    }
    if (from.has_second_role()) {
      mutable_second_role()->::ProtoRoleInfo::MergeFrom(from.second_role());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400337::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400337::CopyFrom(const Proto80400337& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400337::IsInitialized() const {
  
  return true;
}

void Proto80400337::Swap(Proto80400337* other) {
  if (other != this) {
    std::swap(left_time_, other->left_time_);
    std::swap(martial_state_, other->martial_state_);
    std::swap(total_time_, other->total_time_);
    std::swap(first_role_, other->first_role_);
    std::swap(second_role_, other->second_role_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400337::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400337_descriptor_;
  metadata.reflection = Proto80400337_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400338::kResultStateFieldNumber;
#endif  // !_MSC_VER

Proto80400338::Proto80400338()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400338::InitAsDefaultInstance() {
}

Proto80400338::Proto80400338(const Proto80400338& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400338::SharedCtor() {
  _cached_size_ = 0;
  result_state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400338::~Proto80400338() {
  SharedDtor();
}

void Proto80400338::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400338::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400338::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400338_descriptor_;
}

const Proto80400338& Proto80400338::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto80400338* Proto80400338::default_instance_ = NULL;

Proto80400338* Proto80400338::New() const {
  return new Proto80400338;
}

void Proto80400338::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_state_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400338::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result_state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_state_)));
          set_has_result_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400338::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result_state = 1;
  if (has_result_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result_state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400338::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result_state = 1;
  if (has_result_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result_state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400338::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result_state = 1;
    if (has_result_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result_state());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400338::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400338* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400338*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400338::MergeFrom(const Proto80400338& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result_state()) {
      set_result_state(from.result_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400338::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400338::CopyFrom(const Proto80400338& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400338::IsInitialized() const {
  
  return true;
}

void Proto80400338::Swap(Proto80400338* other) {
  if (other != this) {
    std::swap(result_state_, other->result_state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400338::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400338_descriptor_;
  metadata.reflection = Proto80400338_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400308::kSignFlagFieldNumber;
const int Proto50400308::kRewardFlagFieldNumber;
const int Proto50400308::kLeftTimeFieldNumber;
#endif  // !_MSC_VER

Proto50400308::Proto50400308()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400308::InitAsDefaultInstance() {
}

Proto50400308::Proto50400308(const Proto50400308& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400308::SharedCtor() {
  _cached_size_ = 0;
  sign_flag_ = 0;
  reward_flag_ = 0;
  left_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400308::~Proto50400308() {
  SharedDtor();
}

void Proto50400308::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400308::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400308::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400308_descriptor_;
}

const Proto50400308& Proto50400308::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto50400308* Proto50400308::default_instance_ = NULL;

Proto50400308* Proto50400308::New() const {
  return new Proto50400308;
}

void Proto50400308::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    sign_flag_ = 0;
    reward_flag_ = 0;
    left_time_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400308::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sign_flag = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sign_flag_)));
          set_has_sign_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_reward_flag;
        break;
      }
      
      // optional int32 reward_flag = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_flag_)));
          set_has_reward_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400308::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 sign_flag = 1;
  if (has_sign_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sign_flag(), output);
  }
  
  // optional int32 reward_flag = 2;
  if (has_reward_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reward_flag(), output);
  }
  
  // optional int32 left_time = 3;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400308::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 sign_flag = 1;
  if (has_sign_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sign_flag(), target);
  }
  
  // optional int32 reward_flag = 2;
  if (has_reward_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reward_flag(), target);
  }
  
  // optional int32 left_time = 3;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400308::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 sign_flag = 1;
    if (has_sign_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sign_flag());
    }
    
    // optional int32 reward_flag = 2;
    if (has_reward_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_flag());
    }
    
    // optional int32 left_time = 3;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400308::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400308* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400308*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400308::MergeFrom(const Proto50400308& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_sign_flag()) {
      set_sign_flag(from.sign_flag());
    }
    if (from.has_reward_flag()) {
      set_reward_flag(from.reward_flag());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400308::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400308::CopyFrom(const Proto50400308& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400308::IsInitialized() const {
  
  return true;
}

void Proto50400308::Swap(Proto50400308* other) {
  if (other != this) {
    std::swap(sign_flag_, other->sign_flag_);
    std::swap(reward_flag_, other->reward_flag_);
    std::swap(left_time_, other->left_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400308::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400308_descriptor_;
  metadata.reflection = Proto50400308_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100401::kFbIdFieldNumber;
const int Proto10100401::kFbDegreeFieldNumber;
#endif  // !_MSC_VER

Proto10100401::Proto10100401()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100401::InitAsDefaultInstance() {
}

Proto10100401::Proto10100401(const Proto10100401& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100401::SharedCtor() {
  _cached_size_ = 0;
  fb_id_ = 0;
  fb_degree_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100401::~Proto10100401() {
  SharedDtor();
}

void Proto10100401::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100401::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100401::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100401_descriptor_;
}

const Proto10100401& Proto10100401::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto10100401* Proto10100401::default_instance_ = NULL;

Proto10100401* Proto10100401::New() const {
  return new Proto10100401;
}

void Proto10100401::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fb_id_ = 0;
    fb_degree_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100401::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fb_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fb_id_)));
          set_has_fb_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_fb_degree;
        break;
      }
      
      // optional int32 fb_degree = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fb_degree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fb_degree_)));
          set_has_fb_degree();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100401::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fb_id = 1;
  if (has_fb_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fb_id(), output);
  }
  
  // optional int32 fb_degree = 2;
  if (has_fb_degree()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->fb_degree(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100401::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fb_id = 1;
  if (has_fb_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fb_id(), target);
  }
  
  // optional int32 fb_degree = 2;
  if (has_fb_degree()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->fb_degree(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100401::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fb_id = 1;
    if (has_fb_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fb_id());
    }
    
    // optional int32 fb_degree = 2;
    if (has_fb_degree()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fb_degree());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100401::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100401* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100401*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100401::MergeFrom(const Proto10100401& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fb_id()) {
      set_fb_id(from.fb_id());
    }
    if (from.has_fb_degree()) {
      set_fb_degree(from.fb_degree());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100401::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100401::CopyFrom(const Proto10100401& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100401::IsInitialized() const {
  
  return true;
}

void Proto10100401::Swap(Proto10100401* other) {
  if (other != this) {
    std::swap(fb_id_, other->fb_id_);
    std::swap(fb_degree_, other->fb_degree_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100401::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100401_descriptor_;
  metadata.reflection = Proto10100401_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100701::kRankTypeFieldNumber;
const int Proto10100701::kDataTypeFieldNumber;
#endif  // !_MSC_VER

Proto10100701::Proto10100701()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100701::InitAsDefaultInstance() {
}

Proto10100701::Proto10100701(const Proto10100701& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100701::SharedCtor() {
  _cached_size_ = 0;
  rank_type_ = 0;
  data_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100701::~Proto10100701() {
  SharedDtor();
}

void Proto10100701::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100701::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100701::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100701_descriptor_;
}

const Proto10100701& Proto10100701::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto10100701* Proto10100701::default_instance_ = NULL;

Proto10100701* Proto10100701::New() const {
  return new Proto10100701;
}

void Proto10100701::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rank_type_ = 0;
    data_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100701::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rank_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_type_)));
          set_has_rank_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_data_type;
        break;
      }
      
      // optional int32 data_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_data_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_type_)));
          set_has_data_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100701::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 rank_type = 1;
  if (has_rank_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank_type(), output);
  }
  
  // optional int32 data_type = 2;
  if (has_data_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->data_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100701::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 rank_type = 1;
  if (has_rank_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank_type(), target);
  }
  
  // optional int32 data_type = 2;
  if (has_data_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->data_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100701::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 rank_type = 1;
    if (has_rank_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_type());
    }
    
    // optional int32 data_type = 2;
    if (has_data_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100701::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100701* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100701*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100701::MergeFrom(const Proto10100701& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rank_type()) {
      set_rank_type(from.rank_type());
    }
    if (from.has_data_type()) {
      set_data_type(from.data_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100701::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100701::CopyFrom(const Proto10100701& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100701::IsInitialized() const {
  
  return true;
}

void Proto10100701::Swap(Proto10100701* other) {
  if (other != this) {
    std::swap(rank_type_, other->rank_type_);
    std::swap(data_type_, other->data_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100701::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100701_descriptor_;
  metadata.reflection = Proto10100701_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100405::kRoleIdFieldNumber;
const int Proto10100405::kIsCoupleFieldNumber;
#endif  // !_MSC_VER

Proto10100405::Proto10100405()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100405::InitAsDefaultInstance() {
}

Proto10100405::Proto10100405(const Proto10100405& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100405::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  is_couple_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100405::~Proto10100405() {
  SharedDtor();
}

void Proto10100405::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100405::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100405::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100405_descriptor_;
}

const Proto10100405& Proto10100405::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto10100405* Proto10100405::default_instance_ = NULL;

Proto10100405* Proto10100405::New() const {
  return new Proto10100405;
}

void Proto10100405::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    is_couple_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100405::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_couple;
        break;
      }
      
      // optional int32 is_couple = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_couple:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_couple_)));
          set_has_is_couple();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100405::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 is_couple = 2;
  if (has_is_couple()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_couple(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100405::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 is_couple = 2;
  if (has_is_couple()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_couple(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100405::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 is_couple = 2;
    if (has_is_couple()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_couple());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100405::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100405* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100405*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100405::MergeFrom(const Proto10100405& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_is_couple()) {
      set_is_couple(from.is_couple());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100405::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100405::CopyFrom(const Proto10100405& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100405::IsInitialized() const {
  
  return true;
}

void Proto10100405::Swap(Proto10100405* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(is_couple_, other->is_couple_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100405::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100405_descriptor_;
  metadata.reflection = Proto10100405_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100701::kRankTypeFieldNumber;
const int Proto50100701::kDataTypeFieldNumber;
const int Proto50100701::kRankRecordListFieldNumber;
const int Proto50100701::kMyRankRecordFieldNumber;
const int Proto50100701::kIsWorshipFieldNumber;
#endif  // !_MSC_VER

Proto50100701::Proto50100701()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100701::InitAsDefaultInstance() {
  my_rank_record_ = const_cast< ::ProtoRankRecord*>(&::ProtoRankRecord::default_instance());
}

Proto50100701::Proto50100701(const Proto50100701& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100701::SharedCtor() {
  _cached_size_ = 0;
  rank_type_ = 0;
  data_type_ = 0;
  my_rank_record_ = NULL;
  is_worship_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100701::~Proto50100701() {
  SharedDtor();
}

void Proto50100701::SharedDtor() {
  if (this != default_instance_) {
    delete my_rank_record_;
  }
}

void Proto50100701::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100701::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100701_descriptor_;
}

const Proto50100701& Proto50100701::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto50100701* Proto50100701::default_instance_ = NULL;

Proto50100701* Proto50100701::New() const {
  return new Proto50100701;
}

void Proto50100701::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    rank_type_ = 0;
    data_type_ = 0;
    if (has_my_rank_record()) {
      if (my_rank_record_ != NULL) my_rank_record_->::ProtoRankRecord::Clear();
    }
    is_worship_ = 0;
  }
  rank_record_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100701::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rank_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rank_type_)));
          set_has_rank_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_data_type;
        break;
      }
      
      // optional int32 data_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_data_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_type_)));
          set_has_data_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rank_record_list;
        break;
      }
      
      // repeated .ProtoRankRecord rank_record_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_record_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_record_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rank_record_list;
        if (input->ExpectTag(34)) goto parse_my_rank_record;
        break;
      }
      
      // optional .ProtoRankRecord my_rank_record = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_my_rank_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_my_rank_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_is_worship;
        break;
      }
      
      // optional int32 is_worship = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_worship:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_worship_)));
          set_has_is_worship();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100701::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 rank_type = 1;
  if (has_rank_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rank_type(), output);
  }
  
  // optional int32 data_type = 2;
  if (has_data_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->data_type(), output);
  }
  
  // repeated .ProtoRankRecord rank_record_list = 3;
  for (int i = 0; i < this->rank_record_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rank_record_list(i), output);
  }
  
  // optional .ProtoRankRecord my_rank_record = 4;
  if (has_my_rank_record()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->my_rank_record(), output);
  }
  
  // optional int32 is_worship = 5;
  if (has_is_worship()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->is_worship(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100701::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 rank_type = 1;
  if (has_rank_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rank_type(), target);
  }
  
  // optional int32 data_type = 2;
  if (has_data_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->data_type(), target);
  }
  
  // repeated .ProtoRankRecord rank_record_list = 3;
  for (int i = 0; i < this->rank_record_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rank_record_list(i), target);
  }
  
  // optional .ProtoRankRecord my_rank_record = 4;
  if (has_my_rank_record()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->my_rank_record(), target);
  }
  
  // optional int32 is_worship = 5;
  if (has_is_worship()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->is_worship(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100701::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 rank_type = 1;
    if (has_rank_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rank_type());
    }
    
    // optional int32 data_type = 2;
    if (has_data_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data_type());
    }
    
    // optional .ProtoRankRecord my_rank_record = 4;
    if (has_my_rank_record()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->my_rank_record());
    }
    
    // optional int32 is_worship = 5;
    if (has_is_worship()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_worship());
    }
    
  }
  // repeated .ProtoRankRecord rank_record_list = 3;
  total_size += 1 * this->rank_record_list_size();
  for (int i = 0; i < this->rank_record_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_record_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100701::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100701* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100701*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100701::MergeFrom(const Proto50100701& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_record_list_.MergeFrom(from.rank_record_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rank_type()) {
      set_rank_type(from.rank_type());
    }
    if (from.has_data_type()) {
      set_data_type(from.data_type());
    }
    if (from.has_my_rank_record()) {
      mutable_my_rank_record()->::ProtoRankRecord::MergeFrom(from.my_rank_record());
    }
    if (from.has_is_worship()) {
      set_is_worship(from.is_worship());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100701::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100701::CopyFrom(const Proto50100701& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100701::IsInitialized() const {
  
  return true;
}

void Proto50100701::Swap(Proto50100701* other) {
  if (other != this) {
    std::swap(rank_type_, other->rank_type_);
    std::swap(data_type_, other->data_type_);
    rank_record_list_.Swap(&other->rank_record_list_);
    std::swap(my_rank_record_, other->my_rank_record_);
    std::swap(is_worship_, other->is_worship_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100701::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100701_descriptor_;
  metadata.reflection = Proto50100701_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100406::kLeaderIdFieldNumber;
#endif  // !_MSC_VER

Proto10100406::Proto10100406()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100406::InitAsDefaultInstance() {
}

Proto10100406::Proto10100406(const Proto10100406& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100406::SharedCtor() {
  _cached_size_ = 0;
  leader_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100406::~Proto10100406() {
  SharedDtor();
}

void Proto10100406::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100406::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100406::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100406_descriptor_;
}

const Proto10100406& Proto10100406::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto10100406* Proto10100406::default_instance_ = NULL;

Proto10100406* Proto10100406::New() const {
  return new Proto10100406;
}

void Proto10100406::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    leader_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100406::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 leader_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &leader_id_)));
          set_has_leader_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100406::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 leader_id = 1;
  if (has_leader_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->leader_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100406::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 leader_id = 1;
  if (has_leader_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->leader_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100406::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 leader_id = 1;
    if (has_leader_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->leader_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100406::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100406* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100406*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100406::MergeFrom(const Proto10100406& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_leader_id()) {
      set_leader_id(from.leader_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100406::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100406::CopyFrom(const Proto10100406& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100406::IsInitialized() const {
  
  return true;
}

void Proto10100406::Swap(Proto10100406* other) {
  if (other != this) {
    std::swap(leader_id_, other->leader_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100406::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100406_descriptor_;
  metadata.reflection = Proto10100406_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100407::kRoleIdFieldNumber;
const int Proto10100407::kOperTypeFieldNumber;
#endif  // !_MSC_VER

Proto10100407::Proto10100407()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100407::InitAsDefaultInstance() {
}

Proto10100407::Proto10100407(const Proto10100407& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100407::SharedCtor() {
  _cached_size_ = 0;
  oper_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100407::~Proto10100407() {
  SharedDtor();
}

void Proto10100407::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100407::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100407::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100407_descriptor_;
}

const Proto10100407& Proto10100407::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto10100407* Proto10100407::default_instance_ = NULL;

Proto10100407* Proto10100407::New() const {
  return new Proto10100407;
}

void Proto10100407::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    oper_type_ = 0;
  }
  role_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100407::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_role_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_role_id;
        if (input->ExpectTag(16)) goto parse_oper_type;
        break;
      }
      
      // optional int32 oper_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_oper_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oper_type_)));
          set_has_oper_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100407::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 role_id = 1;
  for (int i = 0; i < this->role_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->role_id(i), output);
  }
  
  // optional int32 oper_type = 2;
  if (has_oper_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->oper_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100407::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 role_id = 1;
  for (int i = 0; i < this->role_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->role_id(i), target);
  }
  
  // optional int32 oper_type = 2;
  if (has_oper_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->oper_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100407::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 oper_type = 2;
    if (has_oper_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oper_type());
    }
    
  }
  // repeated int64 role_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_id(i));
    }
    total_size += 1 * this->role_id_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100407::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100407* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100407*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100407::MergeFrom(const Proto10100407& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_id_.MergeFrom(from.role_id_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_oper_type()) {
      set_oper_type(from.oper_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100407::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100407::CopyFrom(const Proto10100407& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100407::IsInitialized() const {
  
  return true;
}

void Proto10100407::Swap(Proto10100407* other) {
  if (other != this) {
    role_id_.Swap(&other->role_id_);
    std::swap(oper_type_, other->oper_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100407::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100407_descriptor_;
  metadata.reflection = Proto10100407_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100408::kRoleIdFieldNumber;
const int Proto10100408::kOperTypeFieldNumber;
#endif  // !_MSC_VER

Proto10100408::Proto10100408()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100408::InitAsDefaultInstance() {
}

Proto10100408::Proto10100408(const Proto10100408& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100408::SharedCtor() {
  _cached_size_ = 0;
  oper_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100408::~Proto10100408() {
  SharedDtor();
}

void Proto10100408::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100408::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100408::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100408_descriptor_;
}

const Proto10100408& Proto10100408::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto10100408* Proto10100408::default_instance_ = NULL;

Proto10100408* Proto10100408::New() const {
  return new Proto10100408;
}

void Proto10100408::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    oper_type_ = 0;
  }
  role_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100408::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_role_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_role_id;
        if (input->ExpectTag(16)) goto parse_oper_type;
        break;
      }
      
      // optional int32 oper_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_oper_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oper_type_)));
          set_has_oper_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100408::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 role_id = 1;
  for (int i = 0; i < this->role_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->role_id(i), output);
  }
  
  // optional int32 oper_type = 2;
  if (has_oper_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->oper_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100408::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 role_id = 1;
  for (int i = 0; i < this->role_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->role_id(i), target);
  }
  
  // optional int32 oper_type = 2;
  if (has_oper_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->oper_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100408::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 oper_type = 2;
    if (has_oper_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oper_type());
    }
    
  }
  // repeated int64 role_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_id(i));
    }
    total_size += 1 * this->role_id_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100408::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100408* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100408*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100408::MergeFrom(const Proto10100408& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_id_.MergeFrom(from.role_id_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_oper_type()) {
      set_oper_type(from.oper_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100408::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100408::CopyFrom(const Proto10100408& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100408::IsInitialized() const {
  
  return true;
}

void Proto10100408::Swap(Proto10100408* other) {
  if (other != this) {
    role_id_.Swap(&other->role_id_);
    std::swap(oper_type_, other->oper_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100408::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100408_descriptor_;
  metadata.reflection = Proto10100408_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100408::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto50100408::Proto50100408()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100408::InitAsDefaultInstance() {
}

Proto50100408::Proto50100408(const Proto50100408& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100408::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100408::~Proto50100408() {
  SharedDtor();
}

void Proto50100408::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100408::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100408::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100408_descriptor_;
}

const Proto50100408& Proto50100408::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto50100408* Proto50100408::default_instance_ = NULL;

Proto50100408* Proto50100408::New() const {
  return new Proto50100408;
}

void Proto50100408::Clear() {
  role_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100408::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_role_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_role_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_role_id;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100408::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int64 role_id = 1;
  for (int i = 0; i < this->role_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->role_id(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100408::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int64 role_id = 1;
  for (int i = 0; i < this->role_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->role_id(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100408::ByteSize() const {
  int total_size = 0;
  
  // repeated int64 role_id = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->role_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->role_id(i));
    }
    total_size += 1 * this->role_id_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100408::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100408* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100408*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100408::MergeFrom(const Proto50100408& from) {
  GOOGLE_CHECK_NE(&from, this);
  role_id_.MergeFrom(from.role_id_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100408::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100408::CopyFrom(const Proto50100408& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100408::IsInitialized() const {
  
  return true;
}

void Proto50100408::Swap(Proto50100408* other) {
  if (other != this) {
    role_id_.Swap(&other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100408::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100408_descriptor_;
  metadata.reflection = Proto50100408_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100409::kReadyStateFieldNumber;
#endif  // !_MSC_VER

Proto10100409::Proto10100409()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100409::InitAsDefaultInstance() {
}

Proto10100409::Proto10100409(const Proto10100409& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100409::SharedCtor() {
  _cached_size_ = 0;
  ready_state_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100409::~Proto10100409() {
  SharedDtor();
}

void Proto10100409::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100409::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100409::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100409_descriptor_;
}

const Proto10100409& Proto10100409::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto10100409* Proto10100409::default_instance_ = NULL;

Proto10100409* Proto10100409::New() const {
  return new Proto10100409;
}

void Proto10100409::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ready_state_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100409::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool ready_state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ready_state_)));
          set_has_ready_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100409::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool ready_state = 1;
  if (has_ready_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ready_state(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100409::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool ready_state = 1;
  if (has_ready_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ready_state(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100409::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool ready_state = 1;
    if (has_ready_state()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100409::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100409* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100409*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100409::MergeFrom(const Proto10100409& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ready_state()) {
      set_ready_state(from.ready_state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100409::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100409::CopyFrom(const Proto10100409& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100409::IsInitialized() const {
  
  return true;
}

void Proto10100409::Swap(Proto10100409* other) {
  if (other != this) {
    std::swap(ready_state_, other->ready_state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100409::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100409_descriptor_;
  metadata.reflection = Proto10100409_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100413::kFbIdFieldNumber;
#endif  // !_MSC_VER

Proto10100413::Proto10100413()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100413::InitAsDefaultInstance() {
}

Proto10100413::Proto10100413(const Proto10100413& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100413::SharedCtor() {
  _cached_size_ = 0;
  fb_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100413::~Proto10100413() {
  SharedDtor();
}

void Proto10100413::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100413::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100413::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100413_descriptor_;
}

const Proto10100413& Proto10100413::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient006_2eproto();  return *default_instance_;
}

Proto10100413* Proto10100413::default_instance_ = NULL;

Proto10100413* Proto10100413::New() const {
  return new Proto10100413;
}

void Proto10100413::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fb_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100413::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fb_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fb_id_)));
          set_has_fb_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100413::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fb_id = 1;
  if (has_fb_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fb_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100413::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fb_id = 1;
  if (has_fb_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fb_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100413::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fb_id = 1;
    if (has_fb_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fb_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100413::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100413* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100413*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100413::MergeFrom(const Proto10100413& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fb_id()) {
      set_fb_id(from.fb_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100413::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100413::CopyFrom(const Proto10100413& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100413::IsInitialized() const {
  
  return true;
}

void Proto10100413::Swap(Proto10100413* other) {
  if (other != this) {
    std::swap(fb_id_, other->fb_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100413::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100413_descriptor_;
  metadata.reflection = Proto10100413_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
