// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoInner004.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto30400112_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400112_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400126_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400126_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400306_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400306_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400022_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400022_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100701_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100701_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400905_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400905_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100702_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100702_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100901_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100901_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31401701_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31401701_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30200125_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30200125_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400906_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400906_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400437_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400437_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100226_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100226_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30101001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30101001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100703_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100703_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31401801_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31401801_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31401901_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31401901_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31401902_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31401902_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400402_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400402_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30200126_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30200126_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400202_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400202_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100227_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100227_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400502_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400502_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400601_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400601_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400253_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400253_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400127_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400127_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400438_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400438_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100233_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100233_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400307_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400307_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400308_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400308_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400309_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400309_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30101101_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30101101_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31402002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31402002_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400010_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400010_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400053_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400053_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30101110_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30101110_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto32101102_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto32101102_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto32101201_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto32101201_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30101102_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30101102_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30100228_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30100228_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400113_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400113_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30401301_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30401301_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30401105_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30401105_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400010_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400010_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400009_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400009_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto30400008_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto30400008_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400128_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400128_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400904_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400904_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400905_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400905_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto31400129_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto31400129_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoInner004_2eproto() {
  protobuf_AddDesc_ProtoInner004_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoInner004.proto");
  GOOGLE_CHECK(file != NULL);
  Proto30400112_descriptor_ = file->message_type(0);
  static const int Proto30400112_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400112, equip_shape_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400112, label_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400112, wing_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400112, wing_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400112, weapon_lvl_),
  };
  Proto30400112_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400112_descriptor_,
      Proto30400112::default_instance_,
      Proto30400112_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400112, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400112, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400112));
  Proto31400126_descriptor_ = file->message_type(1);
  static const int Proto31400126_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400126, system_setting_),
  };
  Proto31400126_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400126_descriptor_,
      Proto31400126::default_instance_,
      Proto31400126_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400126, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400126, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400126));
  Proto31400306_descriptor_ = file->message_type(2);
  static const int Proto31400306_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400306, error_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400306, use_type_),
  };
  Proto31400306_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400306_descriptor_,
      Proto31400306::default_instance_,
      Proto31400306_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400306, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400306, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400306));
  Proto31400022_descriptor_ = file->message_type(3);
  static const int Proto31400022_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400022, monster_set_),
  };
  Proto31400022_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400022_descriptor_,
      Proto31400022::default_instance_,
      Proto31400022_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400022, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400022, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400022));
  Proto30100701_descriptor_ = file->message_type(4);
  static const int Proto30100701_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100701, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100701, use_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100701, oper_type_),
  };
  Proto30100701_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100701_descriptor_,
      Proto30100701::default_instance_,
      Proto30100701_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100701, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100701, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100701));
  Proto30400905_descriptor_ = file->message_type(5);
  static const int Proto30400905_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400905, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400905, oper_type_),
  };
  Proto30400905_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400905_descriptor_,
      Proto30400905::default_instance_,
      Proto30400905_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400905, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400905, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400905));
  Proto30100702_descriptor_ = file->message_type(6);
  static const int Proto30100702_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100702, script_sort_),
  };
  Proto30100702_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100702_descriptor_,
      Proto30100702::default_instance_,
      Proto30100702_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100702, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100702, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100702));
  Proto30100901_descriptor_ = file->message_type(7);
  static const int Proto30100901_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100901, is_hooking_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100901, hook_detail_),
  };
  Proto30100901_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100901_descriptor_,
      Proto30100901::default_instance_,
      Proto30100901_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100901, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100901, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100901));
  Proto31401701_descriptor_ = file->message_type(8);
  static const int Proto31401701_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401701, label_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401701, type_),
  };
  Proto31401701_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31401701_descriptor_,
      Proto31401701::default_instance_,
      Proto31401701_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401701, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401701, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31401701));
  Proto30200125_descriptor_ = file->message_type(9);
  static const int Proto30200125_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200125, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200125, type_),
  };
  Proto30200125_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30200125_descriptor_,
      Proto30200125::default_instance_,
      Proto30200125_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200125, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200125, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30200125));
  Proto30400906_descriptor_ = file->message_type(10);
  static const int Proto30400906_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400906, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400906, chapter_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400906, item_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400906, is_first_pass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400906, floor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400906, reward_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400906, mult_),
  };
  Proto30400906_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400906_descriptor_,
      Proto30400906::default_instance_,
      Proto30400906_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400906, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400906, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400906));
  Proto30400437_descriptor_ = file->message_type(11);
  static const int Proto30400437_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400437, league_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400437, league_info_),
  };
  Proto30400437_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400437_descriptor_,
      Proto30400437::default_instance_,
      Proto30400437_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400437, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400437, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400437));
  Proto30100226_descriptor_ = file->message_type(12);
  static const int Proto30100226_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100226, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100226, new_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100226, src_id_),
  };
  Proto30100226_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100226_descriptor_,
      Proto30100226::default_instance_,
      Proto30100226_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100226, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100226, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100226));
  Proto30101001_descriptor_ = file->message_type(13);
  static const int Proto30101001_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101001, info_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101001, force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101001, kill_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101001, killing_value_),
  };
  Proto30101001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30101001_descriptor_,
      Proto30101001::default_instance_,
      Proto30101001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30101001));
  Proto30100703_descriptor_ = file->message_type(14);
  static const int Proto30100703_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100703, in_team_script_),
  };
  Proto30100703_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100703_descriptor_,
      Proto30100703::default_instance_,
      Proto30100703_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100703, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100703, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100703));
  Proto31401801_descriptor_ = file->message_type(15);
  static const int Proto31401801_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401801, recharge_order_),
  };
  Proto31401801_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31401801_descriptor_,
      Proto31401801::default_instance_,
      Proto31401801_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401801, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401801, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31401801));
  Proto31401901_descriptor_ = file->message_type(16);
  static const int Proto31401901_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401901, ach_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401901, ach_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401901, cur_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401901, special_value_),
  };
  Proto31401901_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31401901_descriptor_,
      Proto31401901::default_instance_,
      Proto31401901_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401901, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401901, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31401901));
  Proto31401902_descriptor_ = file->message_type(17);
  static const int Proto31401902_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401902, ach_list_),
  };
  Proto31401902_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31401902_descriptor_,
      Proto31401902::default_instance_,
      Proto31401902_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401902, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31401902, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31401902));
  Proto31400402_descriptor_ = file->message_type(18);
  static const int Proto31400402_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400402, event_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400402, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400402, times_),
  };
  Proto31400402_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400402_descriptor_,
      Proto31400402::default_instance_,
      Proto31400402_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400402, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400402, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400402));
  Proto30200126_descriptor_ = file->message_type(19);
  static const int Proto30200126_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200126, role_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200126, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200126, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200126, space_id_),
  };
  Proto30200126_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30200126_descriptor_,
      Proto30200126::default_instance_,
      Proto30200126_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200126, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30200126, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30200126));
  Proto30400202_descriptor_ = file->message_type(20);
  static const int Proto30400202_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400202, recogn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400202, serial_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400202, lock_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400202, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400202, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400202, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400202, relive_mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400202, auto_buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400202, from_),
  };
  Proto30400202_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400202_descriptor_,
      Proto30400202::default_instance_,
      Proto30400202_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400202, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400202, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400202));
  Proto30100227_descriptor_ = file->message_type(21);
  static const int Proto30100227_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100227, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100227, label_id_),
  };
  Proto30100227_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100227_descriptor_,
      Proto30100227::default_instance_,
      Proto30100227_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100227, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100227, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100227));
  Proto31400502_descriptor_ = file->message_type(22);
  static const int Proto31400502_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400502, task_id_),
  };
  Proto31400502_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400502_descriptor_,
      Proto31400502::default_instance_,
      Proto31400502_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400502, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400502, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400502));
  Proto31400601_descriptor_ = file->message_type(23);
  static const int Proto31400601_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400601, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400601, pass_piece_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400601, pass_chapter_),
  };
  Proto31400601_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400601_descriptor_,
      Proto31400601::default_instance_,
      Proto31400601_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400601, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400601, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400601));
  Proto31400253_descriptor_ = file->message_type(24);
  static const int Proto31400253_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400253, fashion_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400253, money_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400253, cur_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400253, shop_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400253, item_bind_),
  };
  Proto31400253_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400253_descriptor_,
      Proto31400253::default_instance_,
      Proto31400253_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400253, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400253, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400253));
  Proto31400127_descriptor_ = file->message_type(25);
  static const int Proto31400127_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400127, gift_use_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400127, gift_use_tags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400127, gift_use_tick_),
  };
  Proto31400127_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400127_descriptor_,
      Proto31400127::default_instance_,
      Proto31400127_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400127, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400127, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400127));
  Proto30400438_descriptor_ = file->message_type(26);
  static const int Proto30400438_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400438, first_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400438, second_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400438, area_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400438, first_role_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400438, second_role_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400438, fight_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400438, is_first_),
  };
  Proto30400438_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400438_descriptor_,
      Proto30400438::default_instance_,
      Proto30400438_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400438, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400438, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400438));
  Proto30100233_descriptor_ = file->message_type(27);
  static const int Proto30100233_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100233, area_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100233, lose_id_),
  };
  Proto30100233_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100233_descriptor_,
      Proto30100233::default_instance_,
      Proto30100233_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100233, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100233, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100233));
  Proto31400307_descriptor_ = file->message_type(28);
  static const int Proto31400307_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400307, add_anima_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400307, add_money_),
  };
  Proto31400307_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400307_descriptor_,
      Proto31400307::default_instance_,
      Proto31400307_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400307, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400307, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400307));
  Proto31400308_descriptor_ = file->message_type(29);
  static const int Proto31400308_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400308, need_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400308, oper_result_),
  };
  Proto31400308_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400308_descriptor_,
      Proto31400308::default_instance_,
      Proto31400308_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400308, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400308, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400308));
  Proto31400309_descriptor_ = file->message_type(30);
  static const int Proto31400309_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400309, need_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400309, oper_result_),
  };
  Proto31400309_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400309_descriptor_,
      Proto31400309::default_instance_,
      Proto31400309_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400309, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400309, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400309));
  Proto30101101_descriptor_ = file->message_type(31);
  static const int Proto30101101_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101101, acti_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101101, code_id_),
  };
  Proto30101101_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30101101_descriptor_,
      Proto30101101::default_instance_,
      Proto30101101_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101101, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101101, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30101101));
  Proto31402002_descriptor_ = file->message_type(32);
  static const int Proto31402002_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402002, code_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402002, query_ret_),
  };
  Proto31402002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31402002_descriptor_,
      Proto31402002::default_instance_,
      Proto31402002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31402002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31402002));
  Proto31400010_descriptor_ = file->message_type(33);
  static const int Proto31400010_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400010, add_anima_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400010, serial_obj_),
  };
  Proto31400010_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400010_descriptor_,
      Proto31400010::default_instance_,
      Proto31400010_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400010, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400010, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400010));
  Proto30400053_descriptor_ = file->message_type(34);
  static const int Proto30400053_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400053, role_id_),
  };
  Proto30400053_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400053_descriptor_,
      Proto30400053::default_instance_,
      Proto30400053_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400053, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400053, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400053));
  Proto30101110_descriptor_ = file->message_type(35);
  static const int Proto30101110_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101110, total_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101110, cur_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101110, day_total_gold_),
  };
  Proto30101110_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30101110_descriptor_,
      Proto30101110::default_instance_,
      Proto30101110_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101110, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101110, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30101110));
  Proto32101102_descriptor_ = file->message_type(36);
  static const int Proto32101102_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101102, channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101102, uc_sid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101102, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101102, role_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101102, role_level_),
  };
  Proto32101102_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto32101102_descriptor_,
      Proto32101102::default_instance_,
      Proto32101102_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101102, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101102, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto32101102));
  Proto32101201_descriptor_ = file->message_type(37);
  static const int Proto32101201_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101201, acti_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101201, code_id_),
  };
  Proto32101201_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto32101201_descriptor_,
      Proto32101201::default_instance_,
      Proto32101201_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101201, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto32101201, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto32101201));
  Proto30101102_descriptor_ = file->message_type(38);
  static const int Proto30101102_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101102, code_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101102, query_ret_),
  };
  Proto30101102_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30101102_descriptor_,
      Proto30101102::default_instance_,
      Proto30101102_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101102, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30101102, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30101102));
  Proto30100228_descriptor_ = file->message_type(39);
  static const int Proto30100228_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100228, weapon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100228, clothes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100228, fashion_weapon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100228, fashion_clothes_),
  };
  Proto30100228_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30100228_descriptor_,
      Proto30100228::default_instance_,
      Proto30100228_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100228, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30100228, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30100228));
  Proto30400113_descriptor_ = file->message_type(40);
  static const int Proto30400113_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400113, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400113, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400113, draw_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400113, win_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400113, get_exploit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400113, attend_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400113, draw_win_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400113, adjust_tick_),
  };
  Proto30400113_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400113_descriptor_,
      Proto30400113::default_instance_,
      Proto30400113_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400113, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400113, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400113));
  Proto30401301_descriptor_ = file->message_type(41);
  static const int Proto30401301_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401301, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401301, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401301, space_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401301, peer_id_),
  };
  Proto30401301_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30401301_descriptor_,
      Proto30401301::default_instance_,
      Proto30401301_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401301, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401301, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30401301));
  Proto30401105_descriptor_ = file->message_type(42);
  static const int Proto30401105_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401105, role_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401105, ori_scene_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401105, force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401105, camp_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401105, join_tick_),
  };
  Proto30401105_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30401105_descriptor_,
      Proto30401105::default_instance_,
      Proto30401105_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401105, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30401105, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30401105));
  Proto30400010_descriptor_ = file->message_type(43);
  static const int Proto30400010_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400010, percent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400010, last_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400010, id_),
  };
  Proto30400010_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400010_descriptor_,
      Proto30400010::default_instance_,
      Proto30400010_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400010, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400010, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400010));
  Proto30400009_descriptor_ = file->message_type(44);
  static const int Proto30400009_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400009, add_magic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400009, serial_obj_),
  };
  Proto30400009_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400009_descriptor_,
      Proto30400009::default_instance_,
      Proto30400009_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400009, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400009, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400009));
  Proto30400008_descriptor_ = file->message_type(45);
  static const int Proto30400008_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400008, type_),
  };
  Proto30400008_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto30400008_descriptor_,
      Proto30400008::default_instance_,
      Proto30400008_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400008, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto30400008, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto30400008));
  Proto31400128_descriptor_ = file->message_type(46);
  static const int Proto31400128_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400128, buff_status_set_),
  };
  Proto31400128_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400128_descriptor_,
      Proto31400128::default_instance_,
      Proto31400128_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400128, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400128, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400128));
  Proto31400904_descriptor_ = file->message_type(47);
  static const int Proto31400904_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400904, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400904, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400904, ret_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400904, inc_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400904, script_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400904, sort_set_),
  };
  Proto31400904_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400904_descriptor_,
      Proto31400904::default_instance_,
      Proto31400904_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400904, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400904, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400904));
  Proto31400905_descriptor_ = file->message_type(48);
  static const int Proto31400905_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400905, script_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400905, task_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400905, respond_to_logic_),
  };
  Proto31400905_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400905_descriptor_,
      Proto31400905::default_instance_,
      Proto31400905_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400905, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400905, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400905));
  Proto31400129_descriptor_ = file->message_type(49);
  static const int Proto31400129_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400129, recharge_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400129, recharge_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400129, last_recharge_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400129, feedback_awards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400129, recharge_awards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400129, order_fresh_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400129, latest_order_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400129, prev_order_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400129, first_recharge_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400129, recharge_map_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400129, recharge_type_),
  };
  Proto31400129_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto31400129_descriptor_,
      Proto31400129::default_instance_,
      Proto31400129_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400129, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto31400129, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto31400129));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoInner004_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400112_descriptor_, &Proto30400112::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400126_descriptor_, &Proto31400126::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400306_descriptor_, &Proto31400306::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400022_descriptor_, &Proto31400022::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100701_descriptor_, &Proto30100701::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400905_descriptor_, &Proto30400905::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100702_descriptor_, &Proto30100702::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100901_descriptor_, &Proto30100901::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31401701_descriptor_, &Proto31401701::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30200125_descriptor_, &Proto30200125::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400906_descriptor_, &Proto30400906::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400437_descriptor_, &Proto30400437::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100226_descriptor_, &Proto30100226::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30101001_descriptor_, &Proto30101001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100703_descriptor_, &Proto30100703::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31401801_descriptor_, &Proto31401801::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31401901_descriptor_, &Proto31401901::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31401902_descriptor_, &Proto31401902::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400402_descriptor_, &Proto31400402::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30200126_descriptor_, &Proto30200126::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400202_descriptor_, &Proto30400202::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100227_descriptor_, &Proto30100227::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400502_descriptor_, &Proto31400502::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400601_descriptor_, &Proto31400601::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400253_descriptor_, &Proto31400253::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400127_descriptor_, &Proto31400127::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400438_descriptor_, &Proto30400438::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100233_descriptor_, &Proto30100233::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400307_descriptor_, &Proto31400307::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400308_descriptor_, &Proto31400308::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400309_descriptor_, &Proto31400309::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30101101_descriptor_, &Proto30101101::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31402002_descriptor_, &Proto31402002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400010_descriptor_, &Proto31400010::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400053_descriptor_, &Proto30400053::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30101110_descriptor_, &Proto30101110::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto32101102_descriptor_, &Proto32101102::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto32101201_descriptor_, &Proto32101201::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30101102_descriptor_, &Proto30101102::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30100228_descriptor_, &Proto30100228::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400113_descriptor_, &Proto30400113::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30401301_descriptor_, &Proto30401301::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30401105_descriptor_, &Proto30401105::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400010_descriptor_, &Proto30400010::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400009_descriptor_, &Proto30400009::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto30400008_descriptor_, &Proto30400008::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400128_descriptor_, &Proto31400128::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400904_descriptor_, &Proto31400904::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400905_descriptor_, &Proto31400905::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto31400129_descriptor_, &Proto31400129::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoInner004_2eproto() {
  delete Proto30400112::default_instance_;
  delete Proto30400112_reflection_;
  delete Proto31400126::default_instance_;
  delete Proto31400126_reflection_;
  delete Proto31400306::default_instance_;
  delete Proto31400306_reflection_;
  delete Proto31400022::default_instance_;
  delete Proto31400022_reflection_;
  delete Proto30100701::default_instance_;
  delete Proto30100701_reflection_;
  delete Proto30400905::default_instance_;
  delete Proto30400905_reflection_;
  delete Proto30100702::default_instance_;
  delete Proto30100702_reflection_;
  delete Proto30100901::default_instance_;
  delete Proto30100901_reflection_;
  delete Proto31401701::default_instance_;
  delete Proto31401701_reflection_;
  delete Proto30200125::default_instance_;
  delete Proto30200125_reflection_;
  delete Proto30400906::default_instance_;
  delete Proto30400906_reflection_;
  delete Proto30400437::default_instance_;
  delete Proto30400437_reflection_;
  delete Proto30100226::default_instance_;
  delete Proto30100226_reflection_;
  delete Proto30101001::default_instance_;
  delete Proto30101001_reflection_;
  delete Proto30100703::default_instance_;
  delete Proto30100703_reflection_;
  delete Proto31401801::default_instance_;
  delete Proto31401801_reflection_;
  delete Proto31401901::default_instance_;
  delete Proto31401901_reflection_;
  delete Proto31401902::default_instance_;
  delete Proto31401902_reflection_;
  delete Proto31400402::default_instance_;
  delete Proto31400402_reflection_;
  delete Proto30200126::default_instance_;
  delete Proto30200126_reflection_;
  delete Proto30400202::default_instance_;
  delete Proto30400202_reflection_;
  delete Proto30100227::default_instance_;
  delete Proto30100227_reflection_;
  delete Proto31400502::default_instance_;
  delete Proto31400502_reflection_;
  delete Proto31400601::default_instance_;
  delete Proto31400601_reflection_;
  delete Proto31400253::default_instance_;
  delete Proto31400253_reflection_;
  delete Proto31400127::default_instance_;
  delete Proto31400127_reflection_;
  delete Proto30400438::default_instance_;
  delete Proto30400438_reflection_;
  delete Proto30100233::default_instance_;
  delete Proto30100233_reflection_;
  delete Proto31400307::default_instance_;
  delete Proto31400307_reflection_;
  delete Proto31400308::default_instance_;
  delete Proto31400308_reflection_;
  delete Proto31400309::default_instance_;
  delete Proto31400309_reflection_;
  delete Proto30101101::default_instance_;
  delete Proto30101101_reflection_;
  delete Proto31402002::default_instance_;
  delete Proto31402002_reflection_;
  delete Proto31400010::default_instance_;
  delete Proto31400010_reflection_;
  delete Proto30400053::default_instance_;
  delete Proto30400053_reflection_;
  delete Proto30101110::default_instance_;
  delete Proto30101110_reflection_;
  delete Proto32101102::default_instance_;
  delete Proto32101102_reflection_;
  delete Proto32101201::default_instance_;
  delete Proto32101201_reflection_;
  delete Proto30101102::default_instance_;
  delete Proto30101102_reflection_;
  delete Proto30100228::default_instance_;
  delete Proto30100228_reflection_;
  delete Proto30400113::default_instance_;
  delete Proto30400113_reflection_;
  delete Proto30401301::default_instance_;
  delete Proto30401301_reflection_;
  delete Proto30401105::default_instance_;
  delete Proto30401105_reflection_;
  delete Proto30400010::default_instance_;
  delete Proto30400010_reflection_;
  delete Proto30400009::default_instance_;
  delete Proto30400009_reflection_;
  delete Proto30400008::default_instance_;
  delete Proto30400008_reflection_;
  delete Proto31400128::default_instance_;
  delete Proto31400128_reflection_;
  delete Proto31400904::default_instance_;
  delete Proto31400904_reflection_;
  delete Proto31400905::default_instance_;
  delete Proto31400905_reflection_;
  delete Proto31400129::default_instance_;
  delete Proto31400129_reflection_;
}

void protobuf_AddDesc_ProtoInner004_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::protobuf_AddDesc_ProtoInnerPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023ProtoInner004.proto\032\021ProtoPublic.proto"
    "\032\026ProtoInnerPublic.proto\"\221\001\n\rProto304001"
    "12\022\"\n\013equip_shape\030\001 \003(\0132\r.ProtoPairObj\022#"
    "\n\nlabel_list\030\002 \003(\0132\017.ProtoSyncLabel\022\017\n\007w"
    "ing_id\030\003 \001(\005\022\022\n\nwing_level\030\004 \001(\005\022\022\n\nweap"
    "on_lvl\030\005 \001(\005\"9\n\rProto31400126\022(\n\016system_"
    "setting\030\001 \001(\0132\020.ProtoSysSetting\"3\n\rProto"
    "31400306\022\020\n\010error_no\030\001 \001(\005\022\020\n\010use_type\030\002"
    " \001(\005\"3\n\rProto31400022\022\"\n\013monster_set\030\001 \003"
    "(\0132\r.ProtoMonster\"J\n\rProto30100701\022\023\n\013sc"
    "ript_sort\030\001 \001(\005\022\021\n\tuse_times\030\002 \001(\005\022\021\n\top"
    "er_type\030\003 \001(\005\"7\n\rProto30400905\022\023\n\013script"
    "_sort\030\001 \001(\005\022\021\n\toper_type\030\002 \001(\005\"$\n\rProto3"
    "0100702\022\023\n\013script_sort\030\001 \001(\005\"J\n\rProto301"
    "00901\022\022\n\nis_hooking\030\001 \001(\005\022%\n\013hook_detail"
    "\030\002 \001(\0132\020.ProtoHookDetail\"/\n\rProto3140170"
    "1\022\020\n\010label_id\030\001 \001(\005\022\014\n\004type\030\002 \001(\005\".\n\rPro"
    "to30200125\022\017\n\007content\030\001 \001(\t\022\014\n\004type\030\002 \001("
    "\005\"\237\001\n\rProto30400906\022\023\n\013script_sort\030\001 \001(\005"
    "\022\023\n\013chapter_key\030\002 \001(\005\022\035\n\titem_list\030\003 \003(\013"
    "2\n.ProtoItem\022\025\n\ris_first_pass\030\004 \001(\005\022\r\n\005f"
    "loor\030\005 \001(\005\022\021\n\treward_id\030\006 \003(\005\022\014\n\004mult\030\007 "
    "\001(\005\"L\n\rProto30400437\022\024\n\014league_index\030\001 \001"
    "(\003\022%\n\013league_info\030\002 \001(\0132\020.ProtoSyncLeagu"
    "e\"@\n\rProto30100226\022\017\n\007team_id\030\001 \001(\005\022\016\n\006n"
    "ew_id\030\002 \001(\003\022\016\n\006src_id\030\003 \001(\003\"Z\n\rProto3010"
    "1001\022\021\n\tinfo_type\030\001 \003(\005\022\r\n\005force\030\002 \001(\005\022\020"
    "\n\010kill_num\030\003 \001(\005\022\025\n\rkilling_value\030\004 \001(\005\""
    "\'\n\rProto30100703\022\026\n\016in_team_script\030\001 \001(\005"
    "\";\n\rProto31401801\022*\n\016recharge_order\030\001 \001("
    "\0132\022.BackRechargeOrder\"^\n\rProto31401901\022\021"
    "\n\tach_index\030\001 \001(\005\022\020\n\010ach_type\030\002 \001(\005\022\021\n\tc"
    "ur_value\030\003 \001(\005\022\025\n\rspecial_value\030\004 \001(\003\"0\n"
    "\rProto31401902\022\037\n\010ach_list\030\001 \003(\0132\r.Proto"
    "PairObj\"\?\n\rProto31400402\022\020\n\010event_id\030\001 \001"
    "(\005\022\r\n\005value\030\002 \001(\005\022\r\n\005times\030\003 \001(\005\"X\n\rProt"
    "o30200126\022\022\n\nrole_level\030\001 \001(\005\022\017\n\007role_id"
    "\030\002 \001(\003\022\020\n\010scene_id\030\003 \001(\005\022\020\n\010space_id\030\004 \001"
    "(\005\"\256\001\n\rProto30400202\022\016\n\006recogn\030\001 \001(\005\022\016\n\006"
    "serial\030\002 \001(\005\022\021\n\tlock_type\030\003 \001(\005\022\r\n\005error"
    "\030\004 \001(\005\022\014\n\004type\030\005 \001(\005\022\030\n\004item\030\006 \003(\0132\n.Pro"
    "toItem\022\023\n\013relive_mode\030\007 \001(\005\022\020\n\010auto_buy\030"
    "\010 \001(\005\022\014\n\004from\030\t \001(\005\"2\n\rProto30100227\022\017\n\007"
    "role_id\030\001 \001(\003\022\020\n\010label_id\030\002 \001(\005\" \n\rProto"
    "31400502\022\017\n\007task_id\030\001 \001(\005\"N\n\rProto314006"
    "01\022\023\n\013script_sort\030\001 \001(\005\022\022\n\npass_piece\030\002 "
    "\001(\005\022\024\n\014pass_chapter\030\003 \001(\005\"p\n\rProto314002"
    "53\022\022\n\nfashion_id\030\001 \001(\005\022\022\n\nmoney_type\030\002 \001"
    "(\005\022\021\n\tcur_price\030\003 \001(\005\022\021\n\tshop_type\030\004 \001(\005"
    "\022\021\n\titem_bind\030\005 \001(\005\"\202\001\n\rProto31400127\022%\n"
    "\016gift_use_times\030\001 \003(\0132\r.ProtoPairObj\022$\n\r"
    "gift_use_tags\030\002 \003(\0132\r.ProtoPairObj\022$\n\rgi"
    "ft_use_tick\030\003 \003(\0132\r.ProtoPairObj\"\267\001\n\rPro"
    "to30400438\022\020\n\010first_id\030\001 \001(\003\022\021\n\tsecond_i"
    "d\030\002 \001(\003\022\022\n\narea_index\030\003 \001(\005\022\"\n\nfirst_rol"
    "e\030\004 \001(\0132\016.ProtoRoleInfo\022#\n\013second_role\030\005"
    " \001(\0132\016.ProtoRoleInfo\022\022\n\nfight_time\030\006 \001(\005"
    "\022\020\n\010is_first\030\007 \001(\005\"4\n\rProto30100233\022\022\n\na"
    "rea_index\030\001 \001(\005\022\017\n\007lose_id\030\002 \001(\003\"5\n\rProt"
    "o31400307\022\021\n\tadd_anima\030\001 \001(\005\022\021\n\tadd_mone"
    "y\030\002 \001(\005\"8\n\rProto31400308\022\022\n\nneed_money\030\001"
    " \001(\005\022\023\n\013oper_result\030\002 \001(\005\"8\n\rProto314003"
    "09\022\022\n\nneed_money\030\001 \001(\005\022\023\n\013oper_result\030\002 "
    "\001(\005\"3\n\rProto30101101\022\021\n\tacti_code\030\001 \001(\t\022"
    "\017\n\007code_id\030\002 \001(\003\"3\n\rProto31402002\022\017\n\007cod"
    "e_id\030\001 \001(\003\022\021\n\tquery_ret\030\002 \001(\005\"G\n\rProto31"
    "400010\022\021\n\tadd_anima\030\001 \001(\005\022#\n\nserial_obj\030"
    "\002 \001(\0132\017.ProtoSerialObj\" \n\rProto30400053\022"
    "\017\n\007role_id\030\001 \001(\003\"M\n\rProto30101110\022\022\n\ntot"
    "al_gold\030\001 \001(\005\022\020\n\010cur_gold\030\002 \001(\005\022\026\n\016day_t"
    "otal_gold\030\003 \001(\005\"h\n\rProto32101102\022\017\n\007chan"
    "nel\030\001 \001(\t\022\016\n\006uc_sid\030\002 \001(\t\022\017\n\007role_id\030\003 \001"
    "(\003\022\021\n\trole_name\030\004 \001(\t\022\022\n\nrole_level\030\005 \001("
    "\005\"3\n\rProto32101201\022\021\n\tacti_code\030\001 \001(\t\022\017\n"
    "\007code_id\030\002 \001(\003\"3\n\rProto30101102\022\017\n\007code_"
    "id\030\001 \001(\003\022\021\n\tquery_ret\030\002 \001(\005\"a\n\rProto3010"
    "0228\022\016\n\006weapon\030\001 \001(\005\022\017\n\007clothes\030\002 \001(\005\022\026\n"
    "\016fashion_weapon\030\003 \001(\005\022\027\n\017fashion_clothes"
    "\030\004 \001(\005\"\264\001\n\rProto30400113\022\r\n\005score\030\001 \001(\005\022"
    "\r\n\005stage\030\002 \001(\005\022\021\n\tdraw_flag\030\003 \001(\005\022\021\n\twin"
    "_times\030\004 \001(\005\022\023\n\013get_exploit\030\005 \001(\005\022\024\n\014att"
    "end_times\030\006 \001(\005\022\037\n\010draw_win\030\007 \001(\0132\r.Prot"
    "oPairMap\022\023\n\013adjust_tick\030\010 \001(\003\"Q\n\rProto30"
    "401301\022\017\n\007role_id\030\001 \001(\003\022\014\n\004type\030\002 \001(\005\022\020\n"
    "\010space_id\030\003 \001(\005\022\017\n\007peer_id\030\004 \001(\003\"f\n\rProt"
    "o30401105\022\017\n\007role_id\030\001 \001(\003\022\021\n\tori_scene\030"
    "\002 \001(\005\022\r\n\005force\030\003 \001(\005\022\017\n\007camp_id\030\004 \001(\005\022\021\n"
    "\tjoin_tick\030\005 \001(\005\":\n\rProto30400010\022\017\n\007per"
    "cent\030\001 \001(\005\022\014\n\004last\030\002 \001(\005\022\n\n\002id\030\003 \001(\005\"6\n\r"
    "Proto30400009\022\021\n\tadd_magic\030\001 \001(\005\022\022\n\nseri"
    "al_obj\030\002 \001(\005\"\035\n\rProto30400008\022\014\n\004type\030\001 "
    "\001(\005\":\n\rProto31400128\022)\n\017buff_status_set\030"
    "\001 \003(\0132\020.ProtoBuffStatus\"~\n\rProto31400904"
    "\022\023\n\013script_sort\030\001 \001(\005\022\014\n\004gold\030\002 \001(\005\022\020\n\010r"
    "et_code\030\003 \001(\005\022\021\n\tinc_times\030\004 \001(\005\022\023\n\013scri"
    "pt_type\030\005 \001(\005\022\020\n\010sort_set\030\006 \003(\005\"c\n\rProto"
    "31400905\022%\n\013script_list\030\001 \003(\0132\020.ProtoScr"
    "iptInfo\022\021\n\ttask_list\030\002 \003(\005\022\030\n\020respond_to"
    "_logic\030\003 \001(\010\"\264\002\n\rProto31400129\022\026\n\016rechar"
    "ge_money\030\001 \001(\005\022\026\n\016recharge_times\030\002 \001(\005\022\032"
    "\n\022last_recharge_time\030\003 \001(\005\022\027\n\017feedback_a"
    "wards\030\004 \001(\005\022\027\n\017recharge_awards\030\005 \003(\005\022\030\n\020"
    "order_fresh_tick\030\006 \001(\005\022\031\n\021latest_order_l"
    "ist\030\007 \003(\005\022\027\n\017prev_order_list\030\010 \003(\005\022\033\n\023fi"
    "rst_recharge_time\030\t \001(\003\022#\n\014recharge_map\030"
    "\n \001(\0132\r.ProtoPairMap\022\025\n\rrecharge_type\030\013 "
    "\001(\005", 4243);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoInner004.proto", &protobuf_RegisterTypes);
  Proto30400112::default_instance_ = new Proto30400112();
  Proto31400126::default_instance_ = new Proto31400126();
  Proto31400306::default_instance_ = new Proto31400306();
  Proto31400022::default_instance_ = new Proto31400022();
  Proto30100701::default_instance_ = new Proto30100701();
  Proto30400905::default_instance_ = new Proto30400905();
  Proto30100702::default_instance_ = new Proto30100702();
  Proto30100901::default_instance_ = new Proto30100901();
  Proto31401701::default_instance_ = new Proto31401701();
  Proto30200125::default_instance_ = new Proto30200125();
  Proto30400906::default_instance_ = new Proto30400906();
  Proto30400437::default_instance_ = new Proto30400437();
  Proto30100226::default_instance_ = new Proto30100226();
  Proto30101001::default_instance_ = new Proto30101001();
  Proto30100703::default_instance_ = new Proto30100703();
  Proto31401801::default_instance_ = new Proto31401801();
  Proto31401901::default_instance_ = new Proto31401901();
  Proto31401902::default_instance_ = new Proto31401902();
  Proto31400402::default_instance_ = new Proto31400402();
  Proto30200126::default_instance_ = new Proto30200126();
  Proto30400202::default_instance_ = new Proto30400202();
  Proto30100227::default_instance_ = new Proto30100227();
  Proto31400502::default_instance_ = new Proto31400502();
  Proto31400601::default_instance_ = new Proto31400601();
  Proto31400253::default_instance_ = new Proto31400253();
  Proto31400127::default_instance_ = new Proto31400127();
  Proto30400438::default_instance_ = new Proto30400438();
  Proto30100233::default_instance_ = new Proto30100233();
  Proto31400307::default_instance_ = new Proto31400307();
  Proto31400308::default_instance_ = new Proto31400308();
  Proto31400309::default_instance_ = new Proto31400309();
  Proto30101101::default_instance_ = new Proto30101101();
  Proto31402002::default_instance_ = new Proto31402002();
  Proto31400010::default_instance_ = new Proto31400010();
  Proto30400053::default_instance_ = new Proto30400053();
  Proto30101110::default_instance_ = new Proto30101110();
  Proto32101102::default_instance_ = new Proto32101102();
  Proto32101201::default_instance_ = new Proto32101201();
  Proto30101102::default_instance_ = new Proto30101102();
  Proto30100228::default_instance_ = new Proto30100228();
  Proto30400113::default_instance_ = new Proto30400113();
  Proto30401301::default_instance_ = new Proto30401301();
  Proto30401105::default_instance_ = new Proto30401105();
  Proto30400010::default_instance_ = new Proto30400010();
  Proto30400009::default_instance_ = new Proto30400009();
  Proto30400008::default_instance_ = new Proto30400008();
  Proto31400128::default_instance_ = new Proto31400128();
  Proto31400904::default_instance_ = new Proto31400904();
  Proto31400905::default_instance_ = new Proto31400905();
  Proto31400129::default_instance_ = new Proto31400129();
  Proto30400112::default_instance_->InitAsDefaultInstance();
  Proto31400126::default_instance_->InitAsDefaultInstance();
  Proto31400306::default_instance_->InitAsDefaultInstance();
  Proto31400022::default_instance_->InitAsDefaultInstance();
  Proto30100701::default_instance_->InitAsDefaultInstance();
  Proto30400905::default_instance_->InitAsDefaultInstance();
  Proto30100702::default_instance_->InitAsDefaultInstance();
  Proto30100901::default_instance_->InitAsDefaultInstance();
  Proto31401701::default_instance_->InitAsDefaultInstance();
  Proto30200125::default_instance_->InitAsDefaultInstance();
  Proto30400906::default_instance_->InitAsDefaultInstance();
  Proto30400437::default_instance_->InitAsDefaultInstance();
  Proto30100226::default_instance_->InitAsDefaultInstance();
  Proto30101001::default_instance_->InitAsDefaultInstance();
  Proto30100703::default_instance_->InitAsDefaultInstance();
  Proto31401801::default_instance_->InitAsDefaultInstance();
  Proto31401901::default_instance_->InitAsDefaultInstance();
  Proto31401902::default_instance_->InitAsDefaultInstance();
  Proto31400402::default_instance_->InitAsDefaultInstance();
  Proto30200126::default_instance_->InitAsDefaultInstance();
  Proto30400202::default_instance_->InitAsDefaultInstance();
  Proto30100227::default_instance_->InitAsDefaultInstance();
  Proto31400502::default_instance_->InitAsDefaultInstance();
  Proto31400601::default_instance_->InitAsDefaultInstance();
  Proto31400253::default_instance_->InitAsDefaultInstance();
  Proto31400127::default_instance_->InitAsDefaultInstance();
  Proto30400438::default_instance_->InitAsDefaultInstance();
  Proto30100233::default_instance_->InitAsDefaultInstance();
  Proto31400307::default_instance_->InitAsDefaultInstance();
  Proto31400308::default_instance_->InitAsDefaultInstance();
  Proto31400309::default_instance_->InitAsDefaultInstance();
  Proto30101101::default_instance_->InitAsDefaultInstance();
  Proto31402002::default_instance_->InitAsDefaultInstance();
  Proto31400010::default_instance_->InitAsDefaultInstance();
  Proto30400053::default_instance_->InitAsDefaultInstance();
  Proto30101110::default_instance_->InitAsDefaultInstance();
  Proto32101102::default_instance_->InitAsDefaultInstance();
  Proto32101201::default_instance_->InitAsDefaultInstance();
  Proto30101102::default_instance_->InitAsDefaultInstance();
  Proto30100228::default_instance_->InitAsDefaultInstance();
  Proto30400113::default_instance_->InitAsDefaultInstance();
  Proto30401301::default_instance_->InitAsDefaultInstance();
  Proto30401105::default_instance_->InitAsDefaultInstance();
  Proto30400010::default_instance_->InitAsDefaultInstance();
  Proto30400009::default_instance_->InitAsDefaultInstance();
  Proto30400008::default_instance_->InitAsDefaultInstance();
  Proto31400128::default_instance_->InitAsDefaultInstance();
  Proto31400904::default_instance_->InitAsDefaultInstance();
  Proto31400905::default_instance_->InitAsDefaultInstance();
  Proto31400129::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoInner004_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoInner004_2eproto {
  StaticDescriptorInitializer_ProtoInner004_2eproto() {
    protobuf_AddDesc_ProtoInner004_2eproto();
  }
} static_descriptor_initializer_ProtoInner004_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto30400112::kEquipShapeFieldNumber;
const int Proto30400112::kLabelListFieldNumber;
const int Proto30400112::kWingIdFieldNumber;
const int Proto30400112::kWingLevelFieldNumber;
const int Proto30400112::kWeaponLvlFieldNumber;
#endif  // !_MSC_VER

Proto30400112::Proto30400112()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400112::InitAsDefaultInstance() {
}

Proto30400112::Proto30400112(const Proto30400112& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400112::SharedCtor() {
  _cached_size_ = 0;
  wing_id_ = 0;
  wing_level_ = 0;
  weapon_lvl_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400112::~Proto30400112() {
  SharedDtor();
}

void Proto30400112::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400112::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400112::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400112_descriptor_;
}

const Proto30400112& Proto30400112::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30400112* Proto30400112::default_instance_ = NULL;

Proto30400112* Proto30400112::New() const {
  return new Proto30400112;
}

void Proto30400112::Clear() {
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    wing_id_ = 0;
    wing_level_ = 0;
    weapon_lvl_ = 0;
  }
  equip_shape_.Clear();
  label_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400112::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoPairObj equip_shape = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equip_shape:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equip_shape()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_equip_shape;
        if (input->ExpectTag(18)) goto parse_label_list;
        break;
      }
      
      // repeated .ProtoSyncLabel label_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_label_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_label_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_label_list;
        if (input->ExpectTag(24)) goto parse_wing_id;
        break;
      }
      
      // optional int32 wing_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wing_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wing_id_)));
          set_has_wing_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_wing_level;
        break;
      }
      
      // optional int32 wing_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_wing_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wing_level_)));
          set_has_wing_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_weapon_lvl;
        break;
      }
      
      // optional int32 weapon_lvl = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_weapon_lvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weapon_lvl_)));
          set_has_weapon_lvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400112::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoPairObj equip_shape = 1;
  for (int i = 0; i < this->equip_shape_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->equip_shape(i), output);
  }
  
  // repeated .ProtoSyncLabel label_list = 2;
  for (int i = 0; i < this->label_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->label_list(i), output);
  }
  
  // optional int32 wing_id = 3;
  if (has_wing_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->wing_id(), output);
  }
  
  // optional int32 wing_level = 4;
  if (has_wing_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->wing_level(), output);
  }
  
  // optional int32 weapon_lvl = 5;
  if (has_weapon_lvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->weapon_lvl(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400112::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoPairObj equip_shape = 1;
  for (int i = 0; i < this->equip_shape_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->equip_shape(i), target);
  }
  
  // repeated .ProtoSyncLabel label_list = 2;
  for (int i = 0; i < this->label_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->label_list(i), target);
  }
  
  // optional int32 wing_id = 3;
  if (has_wing_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->wing_id(), target);
  }
  
  // optional int32 wing_level = 4;
  if (has_wing_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->wing_level(), target);
  }
  
  // optional int32 weapon_lvl = 5;
  if (has_weapon_lvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->weapon_lvl(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400112::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional int32 wing_id = 3;
    if (has_wing_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wing_id());
    }
    
    // optional int32 wing_level = 4;
    if (has_wing_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->wing_level());
    }
    
    // optional int32 weapon_lvl = 5;
    if (has_weapon_lvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weapon_lvl());
    }
    
  }
  // repeated .ProtoPairObj equip_shape = 1;
  total_size += 1 * this->equip_shape_size();
  for (int i = 0; i < this->equip_shape_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equip_shape(i));
  }
  
  // repeated .ProtoSyncLabel label_list = 2;
  total_size += 1 * this->label_list_size();
  for (int i = 0; i < this->label_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->label_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400112::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400112* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400112*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400112::MergeFrom(const Proto30400112& from) {
  GOOGLE_CHECK_NE(&from, this);
  equip_shape_.MergeFrom(from.equip_shape_);
  label_list_.MergeFrom(from.label_list_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_wing_id()) {
      set_wing_id(from.wing_id());
    }
    if (from.has_wing_level()) {
      set_wing_level(from.wing_level());
    }
    if (from.has_weapon_lvl()) {
      set_weapon_lvl(from.weapon_lvl());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400112::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400112::CopyFrom(const Proto30400112& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400112::IsInitialized() const {
  
  return true;
}

void Proto30400112::Swap(Proto30400112* other) {
  if (other != this) {
    equip_shape_.Swap(&other->equip_shape_);
    label_list_.Swap(&other->label_list_);
    std::swap(wing_id_, other->wing_id_);
    std::swap(wing_level_, other->wing_level_);
    std::swap(weapon_lvl_, other->weapon_lvl_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400112::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400112_descriptor_;
  metadata.reflection = Proto30400112_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400126::kSystemSettingFieldNumber;
#endif  // !_MSC_VER

Proto31400126::Proto31400126()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400126::InitAsDefaultInstance() {
  system_setting_ = const_cast< ::ProtoSysSetting*>(&::ProtoSysSetting::default_instance());
}

Proto31400126::Proto31400126(const Proto31400126& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400126::SharedCtor() {
  _cached_size_ = 0;
  system_setting_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400126::~Proto31400126() {
  SharedDtor();
}

void Proto31400126::SharedDtor() {
  if (this != default_instance_) {
    delete system_setting_;
  }
}

void Proto31400126::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400126::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400126_descriptor_;
}

const Proto31400126& Proto31400126::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31400126* Proto31400126::default_instance_ = NULL;

Proto31400126* Proto31400126::New() const {
  return new Proto31400126;
}

void Proto31400126::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_system_setting()) {
      if (system_setting_ != NULL) system_setting_->::ProtoSysSetting::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400126::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoSysSetting system_setting = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_system_setting()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400126::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoSysSetting system_setting = 1;
  if (has_system_setting()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->system_setting(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400126::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoSysSetting system_setting = 1;
  if (has_system_setting()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->system_setting(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400126::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoSysSetting system_setting = 1;
    if (has_system_setting()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->system_setting());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400126::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400126* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400126*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400126::MergeFrom(const Proto31400126& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_system_setting()) {
      mutable_system_setting()->::ProtoSysSetting::MergeFrom(from.system_setting());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400126::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400126::CopyFrom(const Proto31400126& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400126::IsInitialized() const {
  
  return true;
}

void Proto31400126::Swap(Proto31400126* other) {
  if (other != this) {
    std::swap(system_setting_, other->system_setting_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400126::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400126_descriptor_;
  metadata.reflection = Proto31400126_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400306::kErrorNoFieldNumber;
const int Proto31400306::kUseTypeFieldNumber;
#endif  // !_MSC_VER

Proto31400306::Proto31400306()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400306::InitAsDefaultInstance() {
}

Proto31400306::Proto31400306(const Proto31400306& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400306::SharedCtor() {
  _cached_size_ = 0;
  error_no_ = 0;
  use_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400306::~Proto31400306() {
  SharedDtor();
}

void Proto31400306::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400306::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400306::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400306_descriptor_;
}

const Proto31400306& Proto31400306::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31400306* Proto31400306::default_instance_ = NULL;

Proto31400306* Proto31400306::New() const {
  return new Proto31400306;
}

void Proto31400306::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    error_no_ = 0;
    use_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400306::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 error_no = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_no_)));
          set_has_error_no();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_use_type;
        break;
      }
      
      // optional int32 use_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_use_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &use_type_)));
          set_has_use_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400306::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 error_no = 1;
  if (has_error_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error_no(), output);
  }
  
  // optional int32 use_type = 2;
  if (has_use_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->use_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400306::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 error_no = 1;
  if (has_error_no()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->error_no(), target);
  }
  
  // optional int32 use_type = 2;
  if (has_use_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->use_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400306::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 error_no = 1;
    if (has_error_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->error_no());
    }
    
    // optional int32 use_type = 2;
    if (has_use_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->use_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400306::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400306* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400306*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400306::MergeFrom(const Proto31400306& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error_no()) {
      set_error_no(from.error_no());
    }
    if (from.has_use_type()) {
      set_use_type(from.use_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400306::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400306::CopyFrom(const Proto31400306& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400306::IsInitialized() const {
  
  return true;
}

void Proto31400306::Swap(Proto31400306* other) {
  if (other != this) {
    std::swap(error_no_, other->error_no_);
    std::swap(use_type_, other->use_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400306::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400306_descriptor_;
  metadata.reflection = Proto31400306_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400022::kMonsterSetFieldNumber;
#endif  // !_MSC_VER

Proto31400022::Proto31400022()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400022::InitAsDefaultInstance() {
}

Proto31400022::Proto31400022(const Proto31400022& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400022::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400022::~Proto31400022() {
  SharedDtor();
}

void Proto31400022::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400022::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400022::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400022_descriptor_;
}

const Proto31400022& Proto31400022::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31400022* Proto31400022::default_instance_ = NULL;

Proto31400022* Proto31400022::New() const {
  return new Proto31400022;
}

void Proto31400022::Clear() {
  monster_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400022::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoMonster monster_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_monster_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_monster_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_monster_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400022::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoMonster monster_set = 1;
  for (int i = 0; i < this->monster_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->monster_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400022::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoMonster monster_set = 1;
  for (int i = 0; i < this->monster_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->monster_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400022::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoMonster monster_set = 1;
  total_size += 1 * this->monster_set_size();
  for (int i = 0; i < this->monster_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->monster_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400022::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400022* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400022*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400022::MergeFrom(const Proto31400022& from) {
  GOOGLE_CHECK_NE(&from, this);
  monster_set_.MergeFrom(from.monster_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400022::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400022::CopyFrom(const Proto31400022& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400022::IsInitialized() const {
  
  return true;
}

void Proto31400022::Swap(Proto31400022* other) {
  if (other != this) {
    monster_set_.Swap(&other->monster_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400022::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400022_descriptor_;
  metadata.reflection = Proto31400022_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100701::kScriptSortFieldNumber;
const int Proto30100701::kUseTimesFieldNumber;
const int Proto30100701::kOperTypeFieldNumber;
#endif  // !_MSC_VER

Proto30100701::Proto30100701()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100701::InitAsDefaultInstance() {
}

Proto30100701::Proto30100701(const Proto30100701& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100701::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  use_times_ = 0;
  oper_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100701::~Proto30100701() {
  SharedDtor();
}

void Proto30100701::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100701::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100701::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100701_descriptor_;
}

const Proto30100701& Proto30100701::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30100701* Proto30100701::default_instance_ = NULL;

Proto30100701* Proto30100701::New() const {
  return new Proto30100701;
}

void Proto30100701::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
    use_times_ = 0;
    oper_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100701::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_use_times;
        break;
      }
      
      // optional int32 use_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_use_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &use_times_)));
          set_has_use_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_oper_type;
        break;
      }
      
      // optional int32 oper_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_oper_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oper_type_)));
          set_has_oper_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100701::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  // optional int32 use_times = 2;
  if (has_use_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->use_times(), output);
  }
  
  // optional int32 oper_type = 3;
  if (has_oper_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->oper_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100701::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  // optional int32 use_times = 2;
  if (has_use_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->use_times(), target);
  }
  
  // optional int32 oper_type = 3;
  if (has_oper_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->oper_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100701::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 use_times = 2;
    if (has_use_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->use_times());
    }
    
    // optional int32 oper_type = 3;
    if (has_oper_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oper_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100701::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100701* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100701*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100701::MergeFrom(const Proto30100701& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_use_times()) {
      set_use_times(from.use_times());
    }
    if (from.has_oper_type()) {
      set_oper_type(from.oper_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100701::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100701::CopyFrom(const Proto30100701& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100701::IsInitialized() const {
  
  return true;
}

void Proto30100701::Swap(Proto30100701* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(use_times_, other->use_times_);
    std::swap(oper_type_, other->oper_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100701::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100701_descriptor_;
  metadata.reflection = Proto30100701_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400905::kScriptSortFieldNumber;
const int Proto30400905::kOperTypeFieldNumber;
#endif  // !_MSC_VER

Proto30400905::Proto30400905()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400905::InitAsDefaultInstance() {
}

Proto30400905::Proto30400905(const Proto30400905& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400905::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  oper_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400905::~Proto30400905() {
  SharedDtor();
}

void Proto30400905::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400905::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400905::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400905_descriptor_;
}

const Proto30400905& Proto30400905::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30400905* Proto30400905::default_instance_ = NULL;

Proto30400905* Proto30400905::New() const {
  return new Proto30400905;
}

void Proto30400905::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
    oper_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400905::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_oper_type;
        break;
      }
      
      // optional int32 oper_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_oper_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oper_type_)));
          set_has_oper_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400905::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  // optional int32 oper_type = 2;
  if (has_oper_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->oper_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400905::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  // optional int32 oper_type = 2;
  if (has_oper_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->oper_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400905::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 oper_type = 2;
    if (has_oper_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oper_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400905::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400905* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400905*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400905::MergeFrom(const Proto30400905& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_oper_type()) {
      set_oper_type(from.oper_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400905::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400905::CopyFrom(const Proto30400905& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400905::IsInitialized() const {
  
  return true;
}

void Proto30400905::Swap(Proto30400905* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(oper_type_, other->oper_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400905::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400905_descriptor_;
  metadata.reflection = Proto30400905_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100702::kScriptSortFieldNumber;
#endif  // !_MSC_VER

Proto30100702::Proto30100702()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100702::InitAsDefaultInstance() {
}

Proto30100702::Proto30100702(const Proto30100702& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100702::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100702::~Proto30100702() {
  SharedDtor();
}

void Proto30100702::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100702::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100702::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100702_descriptor_;
}

const Proto30100702& Proto30100702::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30100702* Proto30100702::default_instance_ = NULL;

Proto30100702* Proto30100702::New() const {
  return new Proto30100702;
}

void Proto30100702::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100702::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100702::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100702::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100702::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100702::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100702* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100702*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100702::MergeFrom(const Proto30100702& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100702::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100702::CopyFrom(const Proto30100702& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100702::IsInitialized() const {
  
  return true;
}

void Proto30100702::Swap(Proto30100702* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100702::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100702_descriptor_;
  metadata.reflection = Proto30100702_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100901::kIsHookingFieldNumber;
const int Proto30100901::kHookDetailFieldNumber;
#endif  // !_MSC_VER

Proto30100901::Proto30100901()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100901::InitAsDefaultInstance() {
  hook_detail_ = const_cast< ::ProtoHookDetail*>(&::ProtoHookDetail::default_instance());
}

Proto30100901::Proto30100901(const Proto30100901& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100901::SharedCtor() {
  _cached_size_ = 0;
  is_hooking_ = 0;
  hook_detail_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100901::~Proto30100901() {
  SharedDtor();
}

void Proto30100901::SharedDtor() {
  if (this != default_instance_) {
    delete hook_detail_;
  }
}

void Proto30100901::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100901::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100901_descriptor_;
}

const Proto30100901& Proto30100901::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30100901* Proto30100901::default_instance_ = NULL;

Proto30100901* Proto30100901::New() const {
  return new Proto30100901;
}

void Proto30100901::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_hooking_ = 0;
    if (has_hook_detail()) {
      if (hook_detail_ != NULL) hook_detail_->::ProtoHookDetail::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100901::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 is_hooking = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_hooking_)));
          set_has_is_hooking();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_hook_detail;
        break;
      }
      
      // optional .ProtoHookDetail hook_detail = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_hook_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hook_detail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100901::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 is_hooking = 1;
  if (has_is_hooking()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->is_hooking(), output);
  }
  
  // optional .ProtoHookDetail hook_detail = 2;
  if (has_hook_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->hook_detail(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100901::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 is_hooking = 1;
  if (has_is_hooking()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->is_hooking(), target);
  }
  
  // optional .ProtoHookDetail hook_detail = 2;
  if (has_hook_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->hook_detail(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100901::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 is_hooking = 1;
    if (has_is_hooking()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_hooking());
    }
    
    // optional .ProtoHookDetail hook_detail = 2;
    if (has_hook_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->hook_detail());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100901::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100901* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100901*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100901::MergeFrom(const Proto30100901& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_hooking()) {
      set_is_hooking(from.is_hooking());
    }
    if (from.has_hook_detail()) {
      mutable_hook_detail()->::ProtoHookDetail::MergeFrom(from.hook_detail());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100901::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100901::CopyFrom(const Proto30100901& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100901::IsInitialized() const {
  
  return true;
}

void Proto30100901::Swap(Proto30100901* other) {
  if (other != this) {
    std::swap(is_hooking_, other->is_hooking_);
    std::swap(hook_detail_, other->hook_detail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100901::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100901_descriptor_;
  metadata.reflection = Proto30100901_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31401701::kLabelIdFieldNumber;
const int Proto31401701::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto31401701::Proto31401701()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31401701::InitAsDefaultInstance() {
}

Proto31401701::Proto31401701(const Proto31401701& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31401701::SharedCtor() {
  _cached_size_ = 0;
  label_id_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31401701::~Proto31401701() {
  SharedDtor();
}

void Proto31401701::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31401701::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31401701::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31401701_descriptor_;
}

const Proto31401701& Proto31401701::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31401701* Proto31401701::default_instance_ = NULL;

Proto31401701* Proto31401701::New() const {
  return new Proto31401701;
}

void Proto31401701::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    label_id_ = 0;
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31401701::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 label_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_id_)));
          set_has_label_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31401701::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 label_id = 1;
  if (has_label_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->label_id(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31401701::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 label_id = 1;
  if (has_label_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->label_id(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31401701::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 label_id = 1;
    if (has_label_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_id());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31401701::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31401701* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31401701*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31401701::MergeFrom(const Proto31401701& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_label_id()) {
      set_label_id(from.label_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31401701::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31401701::CopyFrom(const Proto31401701& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31401701::IsInitialized() const {
  
  return true;
}

void Proto31401701::Swap(Proto31401701* other) {
  if (other != this) {
    std::swap(label_id_, other->label_id_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31401701::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31401701_descriptor_;
  metadata.reflection = Proto31401701_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30200125::kContentFieldNumber;
const int Proto30200125::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto30200125::Proto30200125()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30200125::InitAsDefaultInstance() {
}

Proto30200125::Proto30200125(const Proto30200125& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30200125::SharedCtor() {
  _cached_size_ = 0;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30200125::~Proto30200125() {
  SharedDtor();
}

void Proto30200125::SharedDtor() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void Proto30200125::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30200125::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30200125_descriptor_;
}

const Proto30200125& Proto30200125::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30200125* Proto30200125::default_instance_ = NULL;

Proto30200125* Proto30200125::New() const {
  return new Proto30200125;
}

void Proto30200125::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30200125::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string content = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30200125::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string content = 1;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->content(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30200125::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string content = 1;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30200125::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string content = 1;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30200125::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30200125* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30200125*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30200125::MergeFrom(const Proto30200125& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_content()) {
      set_content(from.content());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30200125::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30200125::CopyFrom(const Proto30200125& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30200125::IsInitialized() const {
  
  return true;
}

void Proto30200125::Swap(Proto30200125* other) {
  if (other != this) {
    std::swap(content_, other->content_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30200125::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30200125_descriptor_;
  metadata.reflection = Proto30200125_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400906::kScriptSortFieldNumber;
const int Proto30400906::kChapterKeyFieldNumber;
const int Proto30400906::kItemListFieldNumber;
const int Proto30400906::kIsFirstPassFieldNumber;
const int Proto30400906::kFloorFieldNumber;
const int Proto30400906::kRewardIdFieldNumber;
const int Proto30400906::kMultFieldNumber;
#endif  // !_MSC_VER

Proto30400906::Proto30400906()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400906::InitAsDefaultInstance() {
}

Proto30400906::Proto30400906(const Proto30400906& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400906::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  chapter_key_ = 0;
  is_first_pass_ = 0;
  floor_ = 0;
  mult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400906::~Proto30400906() {
  SharedDtor();
}

void Proto30400906::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400906::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400906::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400906_descriptor_;
}

const Proto30400906& Proto30400906::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30400906* Proto30400906::default_instance_ = NULL;

Proto30400906* Proto30400906::New() const {
  return new Proto30400906;
}

void Proto30400906::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
    chapter_key_ = 0;
    is_first_pass_ = 0;
    floor_ = 0;
    mult_ = 0;
  }
  item_list_.Clear();
  reward_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400906::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_chapter_key;
        break;
      }
      
      // optional int32 chapter_key = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_chapter_key:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chapter_key_)));
          set_has_chapter_key();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoItem item_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_item_list;
        if (input->ExpectTag(32)) goto parse_is_first_pass;
        break;
      }
      
      // optional int32 is_first_pass = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_first_pass:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_first_pass_)));
          set_has_is_first_pass();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_floor;
        break;
      }
      
      // optional int32 floor = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_floor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &floor_)));
          set_has_floor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_reward_id;
        break;
      }
      
      // repeated int32 reward_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_reward_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_reward_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_reward_id;
        if (input->ExpectTag(56)) goto parse_mult;
        break;
      }
      
      // optional int32 mult = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mult_)));
          set_has_mult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400906::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  // optional int32 chapter_key = 2;
  if (has_chapter_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->chapter_key(), output);
  }
  
  // repeated .ProtoItem item_list = 3;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->item_list(i), output);
  }
  
  // optional int32 is_first_pass = 4;
  if (has_is_first_pass()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->is_first_pass(), output);
  }
  
  // optional int32 floor = 5;
  if (has_floor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->floor(), output);
  }
  
  // repeated int32 reward_id = 6;
  for (int i = 0; i < this->reward_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->reward_id(i), output);
  }
  
  // optional int32 mult = 7;
  if (has_mult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->mult(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400906::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  // optional int32 chapter_key = 2;
  if (has_chapter_key()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->chapter_key(), target);
  }
  
  // repeated .ProtoItem item_list = 3;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->item_list(i), target);
  }
  
  // optional int32 is_first_pass = 4;
  if (has_is_first_pass()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->is_first_pass(), target);
  }
  
  // optional int32 floor = 5;
  if (has_floor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->floor(), target);
  }
  
  // repeated int32 reward_id = 6;
  for (int i = 0; i < this->reward_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->reward_id(i), target);
  }
  
  // optional int32 mult = 7;
  if (has_mult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->mult(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400906::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 chapter_key = 2;
    if (has_chapter_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->chapter_key());
    }
    
    // optional int32 is_first_pass = 4;
    if (has_is_first_pass()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_first_pass());
    }
    
    // optional int32 floor = 5;
    if (has_floor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->floor());
    }
    
    // optional int32 mult = 7;
    if (has_mult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mult());
    }
    
  }
  // repeated .ProtoItem item_list = 3;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  // repeated int32 reward_id = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->reward_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->reward_id(i));
    }
    total_size += 1 * this->reward_id_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400906::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400906* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400906*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400906::MergeFrom(const Proto30400906& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  reward_id_.MergeFrom(from.reward_id_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_chapter_key()) {
      set_chapter_key(from.chapter_key());
    }
    if (from.has_is_first_pass()) {
      set_is_first_pass(from.is_first_pass());
    }
    if (from.has_floor()) {
      set_floor(from.floor());
    }
    if (from.has_mult()) {
      set_mult(from.mult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400906::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400906::CopyFrom(const Proto30400906& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400906::IsInitialized() const {
  
  return true;
}

void Proto30400906::Swap(Proto30400906* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(chapter_key_, other->chapter_key_);
    item_list_.Swap(&other->item_list_);
    std::swap(is_first_pass_, other->is_first_pass_);
    std::swap(floor_, other->floor_);
    reward_id_.Swap(&other->reward_id_);
    std::swap(mult_, other->mult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400906::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400906_descriptor_;
  metadata.reflection = Proto30400906_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400437::kLeagueIndexFieldNumber;
const int Proto30400437::kLeagueInfoFieldNumber;
#endif  // !_MSC_VER

Proto30400437::Proto30400437()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400437::InitAsDefaultInstance() {
  league_info_ = const_cast< ::ProtoSyncLeague*>(&::ProtoSyncLeague::default_instance());
}

Proto30400437::Proto30400437(const Proto30400437& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400437::SharedCtor() {
  _cached_size_ = 0;
  league_index_ = GOOGLE_LONGLONG(0);
  league_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400437::~Proto30400437() {
  SharedDtor();
}

void Proto30400437::SharedDtor() {
  if (this != default_instance_) {
    delete league_info_;
  }
}

void Proto30400437::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400437::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400437_descriptor_;
}

const Proto30400437& Proto30400437::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30400437* Proto30400437::default_instance_ = NULL;

Proto30400437* Proto30400437::New() const {
  return new Proto30400437;
}

void Proto30400437::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    league_index_ = GOOGLE_LONGLONG(0);
    if (has_league_info()) {
      if (league_info_ != NULL) league_info_->::ProtoSyncLeague::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400437::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 league_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_index_)));
          set_has_league_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_league_info;
        break;
      }
      
      // optional .ProtoSyncLeague league_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_league_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_league_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400437::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->league_index(), output);
  }
  
  // optional .ProtoSyncLeague league_info = 2;
  if (has_league_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->league_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400437::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 league_index = 1;
  if (has_league_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->league_index(), target);
  }
  
  // optional .ProtoSyncLeague league_info = 2;
  if (has_league_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->league_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400437::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 league_index = 1;
    if (has_league_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_index());
    }
    
    // optional .ProtoSyncLeague league_info = 2;
    if (has_league_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->league_info());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400437::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400437* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400437*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400437::MergeFrom(const Proto30400437& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_league_index()) {
      set_league_index(from.league_index());
    }
    if (from.has_league_info()) {
      mutable_league_info()->::ProtoSyncLeague::MergeFrom(from.league_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400437::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400437::CopyFrom(const Proto30400437& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400437::IsInitialized() const {
  
  return true;
}

void Proto30400437::Swap(Proto30400437* other) {
  if (other != this) {
    std::swap(league_index_, other->league_index_);
    std::swap(league_info_, other->league_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400437::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400437_descriptor_;
  metadata.reflection = Proto30400437_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100226::kTeamIdFieldNumber;
const int Proto30100226::kNewIdFieldNumber;
const int Proto30100226::kSrcIdFieldNumber;
#endif  // !_MSC_VER

Proto30100226::Proto30100226()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100226::InitAsDefaultInstance() {
}

Proto30100226::Proto30100226(const Proto30100226& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100226::SharedCtor() {
  _cached_size_ = 0;
  team_id_ = 0;
  new_id_ = GOOGLE_LONGLONG(0);
  src_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100226::~Proto30100226() {
  SharedDtor();
}

void Proto30100226::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100226::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100226::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100226_descriptor_;
}

const Proto30100226& Proto30100226::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30100226* Proto30100226::default_instance_ = NULL;

Proto30100226* Proto30100226::New() const {
  return new Proto30100226;
}

void Proto30100226::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    team_id_ = 0;
    new_id_ = GOOGLE_LONGLONG(0);
    src_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100226::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 team_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_new_id;
        break;
      }
      
      // optional int64 new_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_new_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &new_id_)));
          set_has_new_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_src_id;
        break;
      }
      
      // optional int64 src_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_src_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &src_id_)));
          set_has_src_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100226::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 team_id = 1;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->team_id(), output);
  }
  
  // optional int64 new_id = 2;
  if (has_new_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->new_id(), output);
  }
  
  // optional int64 src_id = 3;
  if (has_src_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->src_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100226::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 team_id = 1;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->team_id(), target);
  }
  
  // optional int64 new_id = 2;
  if (has_new_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->new_id(), target);
  }
  
  // optional int64 src_id = 3;
  if (has_src_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->src_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100226::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 team_id = 1;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team_id());
    }
    
    // optional int64 new_id = 2;
    if (has_new_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->new_id());
    }
    
    // optional int64 src_id = 3;
    if (has_src_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->src_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100226::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100226* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100226*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100226::MergeFrom(const Proto30100226& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
    if (from.has_new_id()) {
      set_new_id(from.new_id());
    }
    if (from.has_src_id()) {
      set_src_id(from.src_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100226::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100226::CopyFrom(const Proto30100226& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100226::IsInitialized() const {
  
  return true;
}

void Proto30100226::Swap(Proto30100226* other) {
  if (other != this) {
    std::swap(team_id_, other->team_id_);
    std::swap(new_id_, other->new_id_);
    std::swap(src_id_, other->src_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100226::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100226_descriptor_;
  metadata.reflection = Proto30100226_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30101001::kInfoTypeFieldNumber;
const int Proto30101001::kForceFieldNumber;
const int Proto30101001::kKillNumFieldNumber;
const int Proto30101001::kKillingValueFieldNumber;
#endif  // !_MSC_VER

Proto30101001::Proto30101001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30101001::InitAsDefaultInstance() {
}

Proto30101001::Proto30101001(const Proto30101001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30101001::SharedCtor() {
  _cached_size_ = 0;
  force_ = 0;
  kill_num_ = 0;
  killing_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30101001::~Proto30101001() {
  SharedDtor();
}

void Proto30101001::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30101001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30101001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30101001_descriptor_;
}

const Proto30101001& Proto30101001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30101001* Proto30101001::default_instance_ = NULL;

Proto30101001* Proto30101001::New() const {
  return new Proto30101001;
}

void Proto30101001::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    force_ = 0;
    kill_num_ = 0;
    killing_value_ = 0;
  }
  info_type_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30101001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 info_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_info_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_info_type())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_info_type())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_info_type;
        if (input->ExpectTag(16)) goto parse_force;
        break;
      }
      
      // optional int32 force = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_kill_num;
        break;
      }
      
      // optional int32 kill_num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_kill_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kill_num_)));
          set_has_kill_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_killing_value;
        break;
      }
      
      // optional int32 killing_value = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_killing_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &killing_value_)));
          set_has_killing_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30101001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 info_type = 1;
  for (int i = 0; i < this->info_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->info_type(i), output);
  }
  
  // optional int32 force = 2;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->force(), output);
  }
  
  // optional int32 kill_num = 3;
  if (has_kill_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->kill_num(), output);
  }
  
  // optional int32 killing_value = 4;
  if (has_killing_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->killing_value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30101001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 info_type = 1;
  for (int i = 0; i < this->info_type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->info_type(i), target);
  }
  
  // optional int32 force = 2;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->force(), target);
  }
  
  // optional int32 kill_num = 3;
  if (has_kill_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->kill_num(), target);
  }
  
  // optional int32 killing_value = 4;
  if (has_killing_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->killing_value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30101001::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 force = 2;
    if (has_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->force());
    }
    
    // optional int32 kill_num = 3;
    if (has_kill_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->kill_num());
    }
    
    // optional int32 killing_value = 4;
    if (has_killing_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->killing_value());
    }
    
  }
  // repeated int32 info_type = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->info_type_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->info_type(i));
    }
    total_size += 1 * this->info_type_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30101001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30101001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30101001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30101001::MergeFrom(const Proto30101001& from) {
  GOOGLE_CHECK_NE(&from, this);
  info_type_.MergeFrom(from.info_type_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_force()) {
      set_force(from.force());
    }
    if (from.has_kill_num()) {
      set_kill_num(from.kill_num());
    }
    if (from.has_killing_value()) {
      set_killing_value(from.killing_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30101001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30101001::CopyFrom(const Proto30101001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30101001::IsInitialized() const {
  
  return true;
}

void Proto30101001::Swap(Proto30101001* other) {
  if (other != this) {
    info_type_.Swap(&other->info_type_);
    std::swap(force_, other->force_);
    std::swap(kill_num_, other->kill_num_);
    std::swap(killing_value_, other->killing_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30101001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30101001_descriptor_;
  metadata.reflection = Proto30101001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100703::kInTeamScriptFieldNumber;
#endif  // !_MSC_VER

Proto30100703::Proto30100703()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100703::InitAsDefaultInstance() {
}

Proto30100703::Proto30100703(const Proto30100703& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100703::SharedCtor() {
  _cached_size_ = 0;
  in_team_script_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100703::~Proto30100703() {
  SharedDtor();
}

void Proto30100703::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100703::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100703::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100703_descriptor_;
}

const Proto30100703& Proto30100703::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30100703* Proto30100703::default_instance_ = NULL;

Proto30100703* Proto30100703::New() const {
  return new Proto30100703;
}

void Proto30100703::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    in_team_script_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100703::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 in_team_script = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &in_team_script_)));
          set_has_in_team_script();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100703::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 in_team_script = 1;
  if (has_in_team_script()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->in_team_script(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100703::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 in_team_script = 1;
  if (has_in_team_script()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->in_team_script(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100703::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 in_team_script = 1;
    if (has_in_team_script()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->in_team_script());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100703::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100703* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100703*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100703::MergeFrom(const Proto30100703& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_in_team_script()) {
      set_in_team_script(from.in_team_script());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100703::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100703::CopyFrom(const Proto30100703& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100703::IsInitialized() const {
  
  return true;
}

void Proto30100703::Swap(Proto30100703* other) {
  if (other != this) {
    std::swap(in_team_script_, other->in_team_script_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100703::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100703_descriptor_;
  metadata.reflection = Proto30100703_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31401801::kRechargeOrderFieldNumber;
#endif  // !_MSC_VER

Proto31401801::Proto31401801()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31401801::InitAsDefaultInstance() {
  recharge_order_ = const_cast< ::BackRechargeOrder*>(&::BackRechargeOrder::default_instance());
}

Proto31401801::Proto31401801(const Proto31401801& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31401801::SharedCtor() {
  _cached_size_ = 0;
  recharge_order_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31401801::~Proto31401801() {
  SharedDtor();
}

void Proto31401801::SharedDtor() {
  if (this != default_instance_) {
    delete recharge_order_;
  }
}

void Proto31401801::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31401801::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31401801_descriptor_;
}

const Proto31401801& Proto31401801::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31401801* Proto31401801::default_instance_ = NULL;

Proto31401801* Proto31401801::New() const {
  return new Proto31401801;
}

void Proto31401801::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_recharge_order()) {
      if (recharge_order_ != NULL) recharge_order_->::BackRechargeOrder::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31401801::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .BackRechargeOrder recharge_order = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recharge_order()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31401801::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .BackRechargeOrder recharge_order = 1;
  if (has_recharge_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->recharge_order(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31401801::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .BackRechargeOrder recharge_order = 1;
  if (has_recharge_order()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->recharge_order(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31401801::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .BackRechargeOrder recharge_order = 1;
    if (has_recharge_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->recharge_order());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31401801::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31401801* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31401801*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31401801::MergeFrom(const Proto31401801& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recharge_order()) {
      mutable_recharge_order()->::BackRechargeOrder::MergeFrom(from.recharge_order());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31401801::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31401801::CopyFrom(const Proto31401801& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31401801::IsInitialized() const {
  
  return true;
}

void Proto31401801::Swap(Proto31401801* other) {
  if (other != this) {
    std::swap(recharge_order_, other->recharge_order_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31401801::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31401801_descriptor_;
  metadata.reflection = Proto31401801_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31401901::kAchIndexFieldNumber;
const int Proto31401901::kAchTypeFieldNumber;
const int Proto31401901::kCurValueFieldNumber;
const int Proto31401901::kSpecialValueFieldNumber;
#endif  // !_MSC_VER

Proto31401901::Proto31401901()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31401901::InitAsDefaultInstance() {
}

Proto31401901::Proto31401901(const Proto31401901& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31401901::SharedCtor() {
  _cached_size_ = 0;
  ach_index_ = 0;
  ach_type_ = 0;
  cur_value_ = 0;
  special_value_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31401901::~Proto31401901() {
  SharedDtor();
}

void Proto31401901::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31401901::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31401901::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31401901_descriptor_;
}

const Proto31401901& Proto31401901::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31401901* Proto31401901::default_instance_ = NULL;

Proto31401901* Proto31401901::New() const {
  return new Proto31401901;
}

void Proto31401901::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ach_index_ = 0;
    ach_type_ = 0;
    cur_value_ = 0;
    special_value_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31401901::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ach_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ach_index_)));
          set_has_ach_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ach_type;
        break;
      }
      
      // optional int32 ach_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ach_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ach_type_)));
          set_has_ach_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cur_value;
        break;
      }
      
      // optional int32 cur_value = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_value_)));
          set_has_cur_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_special_value;
        break;
      }
      
      // optional int64 special_value = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_special_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &special_value_)));
          set_has_special_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31401901::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ach_index = 1;
  if (has_ach_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ach_index(), output);
  }
  
  // optional int32 ach_type = 2;
  if (has_ach_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ach_type(), output);
  }
  
  // optional int32 cur_value = 3;
  if (has_cur_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cur_value(), output);
  }
  
  // optional int64 special_value = 4;
  if (has_special_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->special_value(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31401901::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ach_index = 1;
  if (has_ach_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ach_index(), target);
  }
  
  // optional int32 ach_type = 2;
  if (has_ach_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ach_type(), target);
  }
  
  // optional int32 cur_value = 3;
  if (has_cur_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cur_value(), target);
  }
  
  // optional int64 special_value = 4;
  if (has_special_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->special_value(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31401901::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ach_index = 1;
    if (has_ach_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ach_index());
    }
    
    // optional int32 ach_type = 2;
    if (has_ach_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ach_type());
    }
    
    // optional int32 cur_value = 3;
    if (has_cur_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_value());
    }
    
    // optional int64 special_value = 4;
    if (has_special_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->special_value());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31401901::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31401901* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31401901*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31401901::MergeFrom(const Proto31401901& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ach_index()) {
      set_ach_index(from.ach_index());
    }
    if (from.has_ach_type()) {
      set_ach_type(from.ach_type());
    }
    if (from.has_cur_value()) {
      set_cur_value(from.cur_value());
    }
    if (from.has_special_value()) {
      set_special_value(from.special_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31401901::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31401901::CopyFrom(const Proto31401901& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31401901::IsInitialized() const {
  
  return true;
}

void Proto31401901::Swap(Proto31401901* other) {
  if (other != this) {
    std::swap(ach_index_, other->ach_index_);
    std::swap(ach_type_, other->ach_type_);
    std::swap(cur_value_, other->cur_value_);
    std::swap(special_value_, other->special_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31401901::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31401901_descriptor_;
  metadata.reflection = Proto31401901_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31401902::kAchListFieldNumber;
#endif  // !_MSC_VER

Proto31401902::Proto31401902()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31401902::InitAsDefaultInstance() {
}

Proto31401902::Proto31401902(const Proto31401902& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31401902::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31401902::~Proto31401902() {
  SharedDtor();
}

void Proto31401902::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31401902::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31401902::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31401902_descriptor_;
}

const Proto31401902& Proto31401902::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31401902* Proto31401902::default_instance_ = NULL;

Proto31401902* Proto31401902::New() const {
  return new Proto31401902;
}

void Proto31401902::Clear() {
  ach_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31401902::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoPairObj ach_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ach_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ach_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_ach_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31401902::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoPairObj ach_list = 1;
  for (int i = 0; i < this->ach_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ach_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31401902::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoPairObj ach_list = 1;
  for (int i = 0; i < this->ach_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->ach_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31401902::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoPairObj ach_list = 1;
  total_size += 1 * this->ach_list_size();
  for (int i = 0; i < this->ach_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ach_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31401902::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31401902* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31401902*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31401902::MergeFrom(const Proto31401902& from) {
  GOOGLE_CHECK_NE(&from, this);
  ach_list_.MergeFrom(from.ach_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31401902::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31401902::CopyFrom(const Proto31401902& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31401902::IsInitialized() const {
  
  return true;
}

void Proto31401902::Swap(Proto31401902* other) {
  if (other != this) {
    ach_list_.Swap(&other->ach_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31401902::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31401902_descriptor_;
  metadata.reflection = Proto31401902_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400402::kEventIdFieldNumber;
const int Proto31400402::kValueFieldNumber;
const int Proto31400402::kTimesFieldNumber;
#endif  // !_MSC_VER

Proto31400402::Proto31400402()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400402::InitAsDefaultInstance() {
}

Proto31400402::Proto31400402(const Proto31400402& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400402::SharedCtor() {
  _cached_size_ = 0;
  event_id_ = 0;
  value_ = 0;
  times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400402::~Proto31400402() {
  SharedDtor();
}

void Proto31400402::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400402::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400402::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400402_descriptor_;
}

const Proto31400402& Proto31400402::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31400402* Proto31400402::default_instance_ = NULL;

Proto31400402* Proto31400402::New() const {
  return new Proto31400402;
}

void Proto31400402::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    event_id_ = 0;
    value_ = 0;
    times_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400402::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 event_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &event_id_)));
          set_has_event_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_value;
        break;
      }
      
      // optional int32 value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_times;
        break;
      }
      
      // optional int32 times = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &times_)));
          set_has_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400402::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 event_id = 1;
  if (has_event_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->event_id(), output);
  }
  
  // optional int32 value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->value(), output);
  }
  
  // optional int32 times = 3;
  if (has_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->times(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400402::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 event_id = 1;
  if (has_event_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->event_id(), target);
  }
  
  // optional int32 value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->value(), target);
  }
  
  // optional int32 times = 3;
  if (has_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->times(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400402::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 event_id = 1;
    if (has_event_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->event_id());
    }
    
    // optional int32 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }
    
    // optional int32 times = 3;
    if (has_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->times());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400402::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400402* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400402*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400402::MergeFrom(const Proto31400402& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_event_id()) {
      set_event_id(from.event_id());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_times()) {
      set_times(from.times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400402::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400402::CopyFrom(const Proto31400402& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400402::IsInitialized() const {
  
  return true;
}

void Proto31400402::Swap(Proto31400402* other) {
  if (other != this) {
    std::swap(event_id_, other->event_id_);
    std::swap(value_, other->value_);
    std::swap(times_, other->times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400402::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400402_descriptor_;
  metadata.reflection = Proto31400402_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30200126::kRoleLevelFieldNumber;
const int Proto30200126::kRoleIdFieldNumber;
const int Proto30200126::kSceneIdFieldNumber;
const int Proto30200126::kSpaceIdFieldNumber;
#endif  // !_MSC_VER

Proto30200126::Proto30200126()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30200126::InitAsDefaultInstance() {
}

Proto30200126::Proto30200126(const Proto30200126& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30200126::SharedCtor() {
  _cached_size_ = 0;
  role_level_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  scene_id_ = 0;
  space_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30200126::~Proto30200126() {
  SharedDtor();
}

void Proto30200126::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30200126::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30200126::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30200126_descriptor_;
}

const Proto30200126& Proto30200126::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30200126* Proto30200126::default_instance_ = NULL;

Proto30200126* Proto30200126::New() const {
  return new Proto30200126;
}

void Proto30200126::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_level_ = 0;
    role_id_ = GOOGLE_LONGLONG(0);
    scene_id_ = 0;
    space_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30200126::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 role_level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_level_)));
          set_has_role_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_scene_id;
        break;
      }
      
      // optional int32 scene_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_space_id;
        break;
      }
      
      // optional int32 space_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_space_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &space_id_)));
          set_has_space_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30200126::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 role_level = 1;
  if (has_role_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->role_level(), output);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->role_id(), output);
  }
  
  // optional int32 scene_id = 3;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->scene_id(), output);
  }
  
  // optional int32 space_id = 4;
  if (has_space_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->space_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30200126::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 role_level = 1;
  if (has_role_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->role_level(), target);
  }
  
  // optional int64 role_id = 2;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->role_id(), target);
  }
  
  // optional int32 scene_id = 3;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->scene_id(), target);
  }
  
  // optional int32 space_id = 4;
  if (has_space_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->space_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30200126::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 role_level = 1;
    if (has_role_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->role_level());
    }
    
    // optional int64 role_id = 2;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 scene_id = 3;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
    // optional int32 space_id = 4;
    if (has_space_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->space_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30200126::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30200126* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30200126*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30200126::MergeFrom(const Proto30200126& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_level()) {
      set_role_level(from.role_level());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_space_id()) {
      set_space_id(from.space_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30200126::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30200126::CopyFrom(const Proto30200126& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30200126::IsInitialized() const {
  
  return true;
}

void Proto30200126::Swap(Proto30200126* other) {
  if (other != this) {
    std::swap(role_level_, other->role_level_);
    std::swap(role_id_, other->role_id_);
    std::swap(scene_id_, other->scene_id_);
    std::swap(space_id_, other->space_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30200126::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30200126_descriptor_;
  metadata.reflection = Proto30200126_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400202::kRecognFieldNumber;
const int Proto30400202::kSerialFieldNumber;
const int Proto30400202::kLockTypeFieldNumber;
const int Proto30400202::kErrorFieldNumber;
const int Proto30400202::kTypeFieldNumber;
const int Proto30400202::kItemFieldNumber;
const int Proto30400202::kReliveModeFieldNumber;
const int Proto30400202::kAutoBuyFieldNumber;
const int Proto30400202::kFromFieldNumber;
#endif  // !_MSC_VER

Proto30400202::Proto30400202()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400202::InitAsDefaultInstance() {
}

Proto30400202::Proto30400202(const Proto30400202& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400202::SharedCtor() {
  _cached_size_ = 0;
  recogn_ = 0;
  serial_ = 0;
  lock_type_ = 0;
  error_ = 0;
  type_ = 0;
  relive_mode_ = 0;
  auto_buy_ = 0;
  from_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400202::~Proto30400202() {
  SharedDtor();
}

void Proto30400202::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400202::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400202::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400202_descriptor_;
}

const Proto30400202& Proto30400202::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30400202* Proto30400202::default_instance_ = NULL;

Proto30400202* Proto30400202::New() const {
  return new Proto30400202;
}

void Proto30400202::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    recogn_ = 0;
    serial_ = 0;
    lock_type_ = 0;
    error_ = 0;
    type_ = 0;
    relive_mode_ = 0;
    auto_buy_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    from_ = 0;
  }
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400202::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 recogn = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recogn_)));
          set_has_recogn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_serial;
        break;
      }
      
      // optional int32 serial = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_serial:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serial_)));
          set_has_serial();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_lock_type;
        break;
      }
      
      // optional int32 lock_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lock_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lock_type_)));
          set_has_lock_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_error;
        break;
      }
      
      // optional int32 error = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_error:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_)));
          set_has_error();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }
      
      // optional int32 type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_item;
        break;
      }
      
      // repeated .ProtoItem item = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_item;
        if (input->ExpectTag(56)) goto parse_relive_mode;
        break;
      }
      
      // optional int32 relive_mode = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_relive_mode:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &relive_mode_)));
          set_has_relive_mode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_auto_buy;
        break;
      }
      
      // optional int32 auto_buy = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_buy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_buy_)));
          set_has_auto_buy();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_from;
        break;
      }
      
      // optional int32 from = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_from:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &from_)));
          set_has_from();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400202::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 recogn = 1;
  if (has_recogn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->recogn(), output);
  }
  
  // optional int32 serial = 2;
  if (has_serial()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->serial(), output);
  }
  
  // optional int32 lock_type = 3;
  if (has_lock_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->lock_type(), output);
  }
  
  // optional int32 error = 4;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->error(), output);
  }
  
  // optional int32 type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }
  
  // repeated .ProtoItem item = 6;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->item(i), output);
  }
  
  // optional int32 relive_mode = 7;
  if (has_relive_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->relive_mode(), output);
  }
  
  // optional int32 auto_buy = 8;
  if (has_auto_buy()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->auto_buy(), output);
  }
  
  // optional int32 from = 9;
  if (has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->from(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400202::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 recogn = 1;
  if (has_recogn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->recogn(), target);
  }
  
  // optional int32 serial = 2;
  if (has_serial()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->serial(), target);
  }
  
  // optional int32 lock_type = 3;
  if (has_lock_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->lock_type(), target);
  }
  
  // optional int32 error = 4;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->error(), target);
  }
  
  // optional int32 type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }
  
  // repeated .ProtoItem item = 6;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->item(i), target);
  }
  
  // optional int32 relive_mode = 7;
  if (has_relive_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->relive_mode(), target);
  }
  
  // optional int32 auto_buy = 8;
  if (has_auto_buy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->auto_buy(), target);
  }
  
  // optional int32 from = 9;
  if (has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->from(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400202::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 recogn = 1;
    if (has_recogn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recogn());
    }
    
    // optional int32 serial = 2;
    if (has_serial()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serial());
    }
    
    // optional int32 lock_type = 3;
    if (has_lock_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lock_type());
    }
    
    // optional int32 error = 4;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->error());
    }
    
    // optional int32 type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 relive_mode = 7;
    if (has_relive_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->relive_mode());
    }
    
    // optional int32 auto_buy = 8;
    if (has_auto_buy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_buy());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 from = 9;
    if (has_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->from());
    }
    
  }
  // repeated .ProtoItem item = 6;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400202::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400202* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400202*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400202::MergeFrom(const Proto30400202& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recogn()) {
      set_recogn(from.recogn());
    }
    if (from.has_serial()) {
      set_serial(from.serial());
    }
    if (from.has_lock_type()) {
      set_lock_type(from.lock_type());
    }
    if (from.has_error()) {
      set_error(from.error());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_relive_mode()) {
      set_relive_mode(from.relive_mode());
    }
    if (from.has_auto_buy()) {
      set_auto_buy(from.auto_buy());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_from()) {
      set_from(from.from());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400202::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400202::CopyFrom(const Proto30400202& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400202::IsInitialized() const {
  
  return true;
}

void Proto30400202::Swap(Proto30400202* other) {
  if (other != this) {
    std::swap(recogn_, other->recogn_);
    std::swap(serial_, other->serial_);
    std::swap(lock_type_, other->lock_type_);
    std::swap(error_, other->error_);
    std::swap(type_, other->type_);
    item_.Swap(&other->item_);
    std::swap(relive_mode_, other->relive_mode_);
    std::swap(auto_buy_, other->auto_buy_);
    std::swap(from_, other->from_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400202::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400202_descriptor_;
  metadata.reflection = Proto30400202_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100227::kRoleIdFieldNumber;
const int Proto30100227::kLabelIdFieldNumber;
#endif  // !_MSC_VER

Proto30100227::Proto30100227()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100227::InitAsDefaultInstance() {
}

Proto30100227::Proto30100227(const Proto30100227& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100227::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  label_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100227::~Proto30100227() {
  SharedDtor();
}

void Proto30100227::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100227::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100227::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100227_descriptor_;
}

const Proto30100227& Proto30100227::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30100227* Proto30100227::default_instance_ = NULL;

Proto30100227* Proto30100227::New() const {
  return new Proto30100227;
}

void Proto30100227::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    label_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100227::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_label_id;
        break;
      }
      
      // optional int32 label_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_label_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &label_id_)));
          set_has_label_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100227::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 label_id = 2;
  if (has_label_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->label_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100227::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 label_id = 2;
  if (has_label_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->label_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100227::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 label_id = 2;
    if (has_label_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->label_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100227::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100227* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100227*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100227::MergeFrom(const Proto30100227& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_label_id()) {
      set_label_id(from.label_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100227::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100227::CopyFrom(const Proto30100227& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100227::IsInitialized() const {
  
  return true;
}

void Proto30100227::Swap(Proto30100227* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(label_id_, other->label_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100227::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100227_descriptor_;
  metadata.reflection = Proto30100227_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400502::kTaskIdFieldNumber;
#endif  // !_MSC_VER

Proto31400502::Proto31400502()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400502::InitAsDefaultInstance() {
}

Proto31400502::Proto31400502(const Proto31400502& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400502::SharedCtor() {
  _cached_size_ = 0;
  task_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400502::~Proto31400502() {
  SharedDtor();
}

void Proto31400502::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400502::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400502::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400502_descriptor_;
}

const Proto31400502& Proto31400502::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31400502* Proto31400502::default_instance_ = NULL;

Proto31400502* Proto31400502::New() const {
  return new Proto31400502;
}

void Proto31400502::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    task_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400502::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 task_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
          set_has_task_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400502::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->task_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400502::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 task_id = 1;
  if (has_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->task_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400502::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 task_id = 1;
    if (has_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400502::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400502* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400502*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400502::MergeFrom(const Proto31400502& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_task_id()) {
      set_task_id(from.task_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400502::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400502::CopyFrom(const Proto31400502& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400502::IsInitialized() const {
  
  return true;
}

void Proto31400502::Swap(Proto31400502* other) {
  if (other != this) {
    std::swap(task_id_, other->task_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400502::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400502_descriptor_;
  metadata.reflection = Proto31400502_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400601::kScriptSortFieldNumber;
const int Proto31400601::kPassPieceFieldNumber;
const int Proto31400601::kPassChapterFieldNumber;
#endif  // !_MSC_VER

Proto31400601::Proto31400601()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400601::InitAsDefaultInstance() {
}

Proto31400601::Proto31400601(const Proto31400601& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400601::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  pass_piece_ = 0;
  pass_chapter_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400601::~Proto31400601() {
  SharedDtor();
}

void Proto31400601::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400601::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400601::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400601_descriptor_;
}

const Proto31400601& Proto31400601::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31400601* Proto31400601::default_instance_ = NULL;

Proto31400601* Proto31400601::New() const {
  return new Proto31400601;
}

void Proto31400601::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
    pass_piece_ = 0;
    pass_chapter_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400601::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_pass_piece;
        break;
      }
      
      // optional int32 pass_piece = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pass_piece:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pass_piece_)));
          set_has_pass_piece();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pass_chapter;
        break;
      }
      
      // optional int32 pass_chapter = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pass_chapter:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pass_chapter_)));
          set_has_pass_chapter();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400601::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  // optional int32 pass_piece = 2;
  if (has_pass_piece()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pass_piece(), output);
  }
  
  // optional int32 pass_chapter = 3;
  if (has_pass_chapter()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pass_chapter(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400601::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  // optional int32 pass_piece = 2;
  if (has_pass_piece()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pass_piece(), target);
  }
  
  // optional int32 pass_chapter = 3;
  if (has_pass_chapter()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pass_chapter(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400601::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 pass_piece = 2;
    if (has_pass_piece()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pass_piece());
    }
    
    // optional int32 pass_chapter = 3;
    if (has_pass_chapter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pass_chapter());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400601::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400601* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400601*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400601::MergeFrom(const Proto31400601& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_pass_piece()) {
      set_pass_piece(from.pass_piece());
    }
    if (from.has_pass_chapter()) {
      set_pass_chapter(from.pass_chapter());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400601::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400601::CopyFrom(const Proto31400601& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400601::IsInitialized() const {
  
  return true;
}

void Proto31400601::Swap(Proto31400601* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(pass_piece_, other->pass_piece_);
    std::swap(pass_chapter_, other->pass_chapter_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400601::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400601_descriptor_;
  metadata.reflection = Proto31400601_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400253::kFashionIdFieldNumber;
const int Proto31400253::kMoneyTypeFieldNumber;
const int Proto31400253::kCurPriceFieldNumber;
const int Proto31400253::kShopTypeFieldNumber;
const int Proto31400253::kItemBindFieldNumber;
#endif  // !_MSC_VER

Proto31400253::Proto31400253()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400253::InitAsDefaultInstance() {
}

Proto31400253::Proto31400253(const Proto31400253& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400253::SharedCtor() {
  _cached_size_ = 0;
  fashion_id_ = 0;
  money_type_ = 0;
  cur_price_ = 0;
  shop_type_ = 0;
  item_bind_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400253::~Proto31400253() {
  SharedDtor();
}

void Proto31400253::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400253::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400253::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400253_descriptor_;
}

const Proto31400253& Proto31400253::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31400253* Proto31400253::default_instance_ = NULL;

Proto31400253* Proto31400253::New() const {
  return new Proto31400253;
}

void Proto31400253::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fashion_id_ = 0;
    money_type_ = 0;
    cur_price_ = 0;
    shop_type_ = 0;
    item_bind_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400253::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 fashion_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_id_)));
          set_has_fashion_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_money_type;
        break;
      }
      
      // optional int32 money_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_money_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_type_)));
          set_has_money_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cur_price;
        break;
      }
      
      // optional int32 cur_price = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_price_)));
          set_has_cur_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_shop_type;
        break;
      }
      
      // optional int32 shop_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shop_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_type_)));
          set_has_shop_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_item_bind;
        break;
      }
      
      // optional int32 item_bind = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_item_bind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item_bind_)));
          set_has_item_bind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400253::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->fashion_id(), output);
  }
  
  // optional int32 money_type = 2;
  if (has_money_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->money_type(), output);
  }
  
  // optional int32 cur_price = 3;
  if (has_cur_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cur_price(), output);
  }
  
  // optional int32 shop_type = 4;
  if (has_shop_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->shop_type(), output);
  }
  
  // optional int32 item_bind = 5;
  if (has_item_bind()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->item_bind(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400253::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 fashion_id = 1;
  if (has_fashion_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->fashion_id(), target);
  }
  
  // optional int32 money_type = 2;
  if (has_money_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->money_type(), target);
  }
  
  // optional int32 cur_price = 3;
  if (has_cur_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cur_price(), target);
  }
  
  // optional int32 shop_type = 4;
  if (has_shop_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->shop_type(), target);
  }
  
  // optional int32 item_bind = 5;
  if (has_item_bind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->item_bind(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400253::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 fashion_id = 1;
    if (has_fashion_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_id());
    }
    
    // optional int32 money_type = 2;
    if (has_money_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money_type());
    }
    
    // optional int32 cur_price = 3;
    if (has_cur_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_price());
    }
    
    // optional int32 shop_type = 4;
    if (has_shop_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop_type());
    }
    
    // optional int32 item_bind = 5;
    if (has_item_bind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->item_bind());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400253::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400253* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400253*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400253::MergeFrom(const Proto31400253& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fashion_id()) {
      set_fashion_id(from.fashion_id());
    }
    if (from.has_money_type()) {
      set_money_type(from.money_type());
    }
    if (from.has_cur_price()) {
      set_cur_price(from.cur_price());
    }
    if (from.has_shop_type()) {
      set_shop_type(from.shop_type());
    }
    if (from.has_item_bind()) {
      set_item_bind(from.item_bind());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400253::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400253::CopyFrom(const Proto31400253& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400253::IsInitialized() const {
  
  return true;
}

void Proto31400253::Swap(Proto31400253* other) {
  if (other != this) {
    std::swap(fashion_id_, other->fashion_id_);
    std::swap(money_type_, other->money_type_);
    std::swap(cur_price_, other->cur_price_);
    std::swap(shop_type_, other->shop_type_);
    std::swap(item_bind_, other->item_bind_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400253::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400253_descriptor_;
  metadata.reflection = Proto31400253_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400127::kGiftUseTimesFieldNumber;
const int Proto31400127::kGiftUseTagsFieldNumber;
const int Proto31400127::kGiftUseTickFieldNumber;
#endif  // !_MSC_VER

Proto31400127::Proto31400127()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400127::InitAsDefaultInstance() {
}

Proto31400127::Proto31400127(const Proto31400127& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400127::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400127::~Proto31400127() {
  SharedDtor();
}

void Proto31400127::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400127::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400127::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400127_descriptor_;
}

const Proto31400127& Proto31400127::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31400127* Proto31400127::default_instance_ = NULL;

Proto31400127* Proto31400127::New() const {
  return new Proto31400127;
}

void Proto31400127::Clear() {
  gift_use_times_.Clear();
  gift_use_tags_.Clear();
  gift_use_tick_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400127::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoPairObj gift_use_times = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gift_use_times:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gift_use_times()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_gift_use_times;
        if (input->ExpectTag(18)) goto parse_gift_use_tags;
        break;
      }
      
      // repeated .ProtoPairObj gift_use_tags = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gift_use_tags:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gift_use_tags()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_gift_use_tags;
        if (input->ExpectTag(26)) goto parse_gift_use_tick;
        break;
      }
      
      // repeated .ProtoPairObj gift_use_tick = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_gift_use_tick:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gift_use_tick()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_gift_use_tick;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400127::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoPairObj gift_use_times = 1;
  for (int i = 0; i < this->gift_use_times_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gift_use_times(i), output);
  }
  
  // repeated .ProtoPairObj gift_use_tags = 2;
  for (int i = 0; i < this->gift_use_tags_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->gift_use_tags(i), output);
  }
  
  // repeated .ProtoPairObj gift_use_tick = 3;
  for (int i = 0; i < this->gift_use_tick_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->gift_use_tick(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400127::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoPairObj gift_use_times = 1;
  for (int i = 0; i < this->gift_use_times_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->gift_use_times(i), target);
  }
  
  // repeated .ProtoPairObj gift_use_tags = 2;
  for (int i = 0; i < this->gift_use_tags_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->gift_use_tags(i), target);
  }
  
  // repeated .ProtoPairObj gift_use_tick = 3;
  for (int i = 0; i < this->gift_use_tick_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->gift_use_tick(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400127::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoPairObj gift_use_times = 1;
  total_size += 1 * this->gift_use_times_size();
  for (int i = 0; i < this->gift_use_times_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gift_use_times(i));
  }
  
  // repeated .ProtoPairObj gift_use_tags = 2;
  total_size += 1 * this->gift_use_tags_size();
  for (int i = 0; i < this->gift_use_tags_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gift_use_tags(i));
  }
  
  // repeated .ProtoPairObj gift_use_tick = 3;
  total_size += 1 * this->gift_use_tick_size();
  for (int i = 0; i < this->gift_use_tick_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->gift_use_tick(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400127::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400127* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400127*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400127::MergeFrom(const Proto31400127& from) {
  GOOGLE_CHECK_NE(&from, this);
  gift_use_times_.MergeFrom(from.gift_use_times_);
  gift_use_tags_.MergeFrom(from.gift_use_tags_);
  gift_use_tick_.MergeFrom(from.gift_use_tick_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400127::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400127::CopyFrom(const Proto31400127& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400127::IsInitialized() const {
  
  return true;
}

void Proto31400127::Swap(Proto31400127* other) {
  if (other != this) {
    gift_use_times_.Swap(&other->gift_use_times_);
    gift_use_tags_.Swap(&other->gift_use_tags_);
    gift_use_tick_.Swap(&other->gift_use_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400127::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400127_descriptor_;
  metadata.reflection = Proto31400127_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400438::kFirstIdFieldNumber;
const int Proto30400438::kSecondIdFieldNumber;
const int Proto30400438::kAreaIndexFieldNumber;
const int Proto30400438::kFirstRoleFieldNumber;
const int Proto30400438::kSecondRoleFieldNumber;
const int Proto30400438::kFightTimeFieldNumber;
const int Proto30400438::kIsFirstFieldNumber;
#endif  // !_MSC_VER

Proto30400438::Proto30400438()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400438::InitAsDefaultInstance() {
  first_role_ = const_cast< ::ProtoRoleInfo*>(&::ProtoRoleInfo::default_instance());
  second_role_ = const_cast< ::ProtoRoleInfo*>(&::ProtoRoleInfo::default_instance());
}

Proto30400438::Proto30400438(const Proto30400438& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400438::SharedCtor() {
  _cached_size_ = 0;
  first_id_ = GOOGLE_LONGLONG(0);
  second_id_ = GOOGLE_LONGLONG(0);
  area_index_ = 0;
  first_role_ = NULL;
  second_role_ = NULL;
  fight_time_ = 0;
  is_first_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400438::~Proto30400438() {
  SharedDtor();
}

void Proto30400438::SharedDtor() {
  if (this != default_instance_) {
    delete first_role_;
    delete second_role_;
  }
}

void Proto30400438::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400438::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400438_descriptor_;
}

const Proto30400438& Proto30400438::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30400438* Proto30400438::default_instance_ = NULL;

Proto30400438* Proto30400438::New() const {
  return new Proto30400438;
}

void Proto30400438::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    first_id_ = GOOGLE_LONGLONG(0);
    second_id_ = GOOGLE_LONGLONG(0);
    area_index_ = 0;
    if (has_first_role()) {
      if (first_role_ != NULL) first_role_->::ProtoRoleInfo::Clear();
    }
    if (has_second_role()) {
      if (second_role_ != NULL) second_role_->::ProtoRoleInfo::Clear();
    }
    fight_time_ = 0;
    is_first_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400438::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 first_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &first_id_)));
          set_has_first_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_second_id;
        break;
      }
      
      // optional int64 second_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &second_id_)));
          set_has_second_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_area_index;
        break;
      }
      
      // optional int32 area_index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_area_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &area_index_)));
          set_has_area_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_first_role;
        break;
      }
      
      // optional .ProtoRoleInfo first_role = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_first_role:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_first_role()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_second_role;
        break;
      }
      
      // optional .ProtoRoleInfo second_role = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_second_role:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_second_role()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_fight_time;
        break;
      }
      
      // optional int32 fight_time = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_time_)));
          set_has_fight_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_is_first;
        break;
      }
      
      // optional int32 is_first = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_first:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_first_)));
          set_has_is_first();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400438::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 first_id = 1;
  if (has_first_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->first_id(), output);
  }
  
  // optional int64 second_id = 2;
  if (has_second_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->second_id(), output);
  }
  
  // optional int32 area_index = 3;
  if (has_area_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->area_index(), output);
  }
  
  // optional .ProtoRoleInfo first_role = 4;
  if (has_first_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->first_role(), output);
  }
  
  // optional .ProtoRoleInfo second_role = 5;
  if (has_second_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->second_role(), output);
  }
  
  // optional int32 fight_time = 6;
  if (has_fight_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->fight_time(), output);
  }
  
  // optional int32 is_first = 7;
  if (has_is_first()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->is_first(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400438::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 first_id = 1;
  if (has_first_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->first_id(), target);
  }
  
  // optional int64 second_id = 2;
  if (has_second_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->second_id(), target);
  }
  
  // optional int32 area_index = 3;
  if (has_area_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->area_index(), target);
  }
  
  // optional .ProtoRoleInfo first_role = 4;
  if (has_first_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->first_role(), target);
  }
  
  // optional .ProtoRoleInfo second_role = 5;
  if (has_second_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->second_role(), target);
  }
  
  // optional int32 fight_time = 6;
  if (has_fight_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->fight_time(), target);
  }
  
  // optional int32 is_first = 7;
  if (has_is_first()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->is_first(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400438::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 first_id = 1;
    if (has_first_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->first_id());
    }
    
    // optional int64 second_id = 2;
    if (has_second_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->second_id());
    }
    
    // optional int32 area_index = 3;
    if (has_area_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->area_index());
    }
    
    // optional .ProtoRoleInfo first_role = 4;
    if (has_first_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->first_role());
    }
    
    // optional .ProtoRoleInfo second_role = 5;
    if (has_second_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->second_role());
    }
    
    // optional int32 fight_time = 6;
    if (has_fight_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_time());
    }
    
    // optional int32 is_first = 7;
    if (has_is_first()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_first());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400438::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400438* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400438*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400438::MergeFrom(const Proto30400438& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_first_id()) {
      set_first_id(from.first_id());
    }
    if (from.has_second_id()) {
      set_second_id(from.second_id());
    }
    if (from.has_area_index()) {
      set_area_index(from.area_index());
    }
    if (from.has_first_role()) {
      mutable_first_role()->::ProtoRoleInfo::MergeFrom(from.first_role());
    }
    if (from.has_second_role()) {
      mutable_second_role()->::ProtoRoleInfo::MergeFrom(from.second_role());
    }
    if (from.has_fight_time()) {
      set_fight_time(from.fight_time());
    }
    if (from.has_is_first()) {
      set_is_first(from.is_first());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400438::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400438::CopyFrom(const Proto30400438& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400438::IsInitialized() const {
  
  return true;
}

void Proto30400438::Swap(Proto30400438* other) {
  if (other != this) {
    std::swap(first_id_, other->first_id_);
    std::swap(second_id_, other->second_id_);
    std::swap(area_index_, other->area_index_);
    std::swap(first_role_, other->first_role_);
    std::swap(second_role_, other->second_role_);
    std::swap(fight_time_, other->fight_time_);
    std::swap(is_first_, other->is_first_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400438::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400438_descriptor_;
  metadata.reflection = Proto30400438_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100233::kAreaIndexFieldNumber;
const int Proto30100233::kLoseIdFieldNumber;
#endif  // !_MSC_VER

Proto30100233::Proto30100233()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100233::InitAsDefaultInstance() {
}

Proto30100233::Proto30100233(const Proto30100233& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100233::SharedCtor() {
  _cached_size_ = 0;
  area_index_ = 0;
  lose_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100233::~Proto30100233() {
  SharedDtor();
}

void Proto30100233::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100233::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100233::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100233_descriptor_;
}

const Proto30100233& Proto30100233::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30100233* Proto30100233::default_instance_ = NULL;

Proto30100233* Proto30100233::New() const {
  return new Proto30100233;
}

void Proto30100233::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    area_index_ = 0;
    lose_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100233::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 area_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &area_index_)));
          set_has_area_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_lose_id;
        break;
      }
      
      // optional int64 lose_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lose_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lose_id_)));
          set_has_lose_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100233::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 area_index = 1;
  if (has_area_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->area_index(), output);
  }
  
  // optional int64 lose_id = 2;
  if (has_lose_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->lose_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100233::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 area_index = 1;
  if (has_area_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->area_index(), target);
  }
  
  // optional int64 lose_id = 2;
  if (has_lose_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->lose_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100233::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 area_index = 1;
    if (has_area_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->area_index());
    }
    
    // optional int64 lose_id = 2;
    if (has_lose_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lose_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100233::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100233* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100233*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100233::MergeFrom(const Proto30100233& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_area_index()) {
      set_area_index(from.area_index());
    }
    if (from.has_lose_id()) {
      set_lose_id(from.lose_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100233::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100233::CopyFrom(const Proto30100233& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100233::IsInitialized() const {
  
  return true;
}

void Proto30100233::Swap(Proto30100233* other) {
  if (other != this) {
    std::swap(area_index_, other->area_index_);
    std::swap(lose_id_, other->lose_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100233::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100233_descriptor_;
  metadata.reflection = Proto30100233_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400307::kAddAnimaFieldNumber;
const int Proto31400307::kAddMoneyFieldNumber;
#endif  // !_MSC_VER

Proto31400307::Proto31400307()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400307::InitAsDefaultInstance() {
}

Proto31400307::Proto31400307(const Proto31400307& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400307::SharedCtor() {
  _cached_size_ = 0;
  add_anima_ = 0;
  add_money_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400307::~Proto31400307() {
  SharedDtor();
}

void Proto31400307::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400307::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400307::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400307_descriptor_;
}

const Proto31400307& Proto31400307::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31400307* Proto31400307::default_instance_ = NULL;

Proto31400307* Proto31400307::New() const {
  return new Proto31400307;
}

void Proto31400307::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    add_anima_ = 0;
    add_money_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400307::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 add_anima = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_anima_)));
          set_has_add_anima();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_add_money;
        break;
      }
      
      // optional int32 add_money = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_add_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_money_)));
          set_has_add_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400307::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 add_anima = 1;
  if (has_add_anima()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->add_anima(), output);
  }
  
  // optional int32 add_money = 2;
  if (has_add_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->add_money(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400307::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 add_anima = 1;
  if (has_add_anima()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->add_anima(), target);
  }
  
  // optional int32 add_money = 2;
  if (has_add_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->add_money(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400307::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 add_anima = 1;
    if (has_add_anima()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_anima());
    }
    
    // optional int32 add_money = 2;
    if (has_add_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_money());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400307::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400307* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400307*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400307::MergeFrom(const Proto31400307& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_add_anima()) {
      set_add_anima(from.add_anima());
    }
    if (from.has_add_money()) {
      set_add_money(from.add_money());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400307::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400307::CopyFrom(const Proto31400307& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400307::IsInitialized() const {
  
  return true;
}

void Proto31400307::Swap(Proto31400307* other) {
  if (other != this) {
    std::swap(add_anima_, other->add_anima_);
    std::swap(add_money_, other->add_money_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400307::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400307_descriptor_;
  metadata.reflection = Proto31400307_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400308::kNeedMoneyFieldNumber;
const int Proto31400308::kOperResultFieldNumber;
#endif  // !_MSC_VER

Proto31400308::Proto31400308()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400308::InitAsDefaultInstance() {
}

Proto31400308::Proto31400308(const Proto31400308& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400308::SharedCtor() {
  _cached_size_ = 0;
  need_money_ = 0;
  oper_result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400308::~Proto31400308() {
  SharedDtor();
}

void Proto31400308::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400308::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400308::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400308_descriptor_;
}

const Proto31400308& Proto31400308::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31400308* Proto31400308::default_instance_ = NULL;

Proto31400308* Proto31400308::New() const {
  return new Proto31400308;
}

void Proto31400308::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    need_money_ = 0;
    oper_result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400308::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 need_money = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_money_)));
          set_has_need_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_oper_result;
        break;
      }
      
      // optional int32 oper_result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_oper_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oper_result_)));
          set_has_oper_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400308::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 need_money = 1;
  if (has_need_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->need_money(), output);
  }
  
  // optional int32 oper_result = 2;
  if (has_oper_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->oper_result(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400308::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 need_money = 1;
  if (has_need_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->need_money(), target);
  }
  
  // optional int32 oper_result = 2;
  if (has_oper_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->oper_result(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400308::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 need_money = 1;
    if (has_need_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->need_money());
    }
    
    // optional int32 oper_result = 2;
    if (has_oper_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oper_result());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400308::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400308* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400308*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400308::MergeFrom(const Proto31400308& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_need_money()) {
      set_need_money(from.need_money());
    }
    if (from.has_oper_result()) {
      set_oper_result(from.oper_result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400308::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400308::CopyFrom(const Proto31400308& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400308::IsInitialized() const {
  
  return true;
}

void Proto31400308::Swap(Proto31400308* other) {
  if (other != this) {
    std::swap(need_money_, other->need_money_);
    std::swap(oper_result_, other->oper_result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400308::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400308_descriptor_;
  metadata.reflection = Proto31400308_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400309::kNeedMoneyFieldNumber;
const int Proto31400309::kOperResultFieldNumber;
#endif  // !_MSC_VER

Proto31400309::Proto31400309()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400309::InitAsDefaultInstance() {
}

Proto31400309::Proto31400309(const Proto31400309& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400309::SharedCtor() {
  _cached_size_ = 0;
  need_money_ = 0;
  oper_result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400309::~Proto31400309() {
  SharedDtor();
}

void Proto31400309::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400309::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400309::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400309_descriptor_;
}

const Proto31400309& Proto31400309::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31400309* Proto31400309::default_instance_ = NULL;

Proto31400309* Proto31400309::New() const {
  return new Proto31400309;
}

void Proto31400309::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    need_money_ = 0;
    oper_result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400309::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 need_money = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_money_)));
          set_has_need_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_oper_result;
        break;
      }
      
      // optional int32 oper_result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_oper_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oper_result_)));
          set_has_oper_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400309::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 need_money = 1;
  if (has_need_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->need_money(), output);
  }
  
  // optional int32 oper_result = 2;
  if (has_oper_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->oper_result(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400309::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 need_money = 1;
  if (has_need_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->need_money(), target);
  }
  
  // optional int32 oper_result = 2;
  if (has_oper_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->oper_result(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400309::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 need_money = 1;
    if (has_need_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->need_money());
    }
    
    // optional int32 oper_result = 2;
    if (has_oper_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oper_result());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400309::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400309* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400309*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400309::MergeFrom(const Proto31400309& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_need_money()) {
      set_need_money(from.need_money());
    }
    if (from.has_oper_result()) {
      set_oper_result(from.oper_result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400309::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400309::CopyFrom(const Proto31400309& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400309::IsInitialized() const {
  
  return true;
}

void Proto31400309::Swap(Proto31400309* other) {
  if (other != this) {
    std::swap(need_money_, other->need_money_);
    std::swap(oper_result_, other->oper_result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400309::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400309_descriptor_;
  metadata.reflection = Proto31400309_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30101101::kActiCodeFieldNumber;
const int Proto30101101::kCodeIdFieldNumber;
#endif  // !_MSC_VER

Proto30101101::Proto30101101()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30101101::InitAsDefaultInstance() {
}

Proto30101101::Proto30101101(const Proto30101101& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30101101::SharedCtor() {
  _cached_size_ = 0;
  acti_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  code_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30101101::~Proto30101101() {
  SharedDtor();
}

void Proto30101101::SharedDtor() {
  if (acti_code_ != &::google::protobuf::internal::kEmptyString) {
    delete acti_code_;
  }
  if (this != default_instance_) {
  }
}

void Proto30101101::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30101101::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30101101_descriptor_;
}

const Proto30101101& Proto30101101::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30101101* Proto30101101::default_instance_ = NULL;

Proto30101101* Proto30101101::New() const {
  return new Proto30101101;
}

void Proto30101101::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_acti_code()) {
      if (acti_code_ != &::google::protobuf::internal::kEmptyString) {
        acti_code_->clear();
      }
    }
    code_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30101101::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string acti_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_acti_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->acti_code().data(), this->acti_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_code_id;
        break;
      }
      
      // optional int64 code_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_code_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &code_id_)));
          set_has_code_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30101101::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string acti_code = 1;
  if (has_acti_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->acti_code().data(), this->acti_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->acti_code(), output);
  }
  
  // optional int64 code_id = 2;
  if (has_code_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->code_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30101101::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string acti_code = 1;
  if (has_acti_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->acti_code().data(), this->acti_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->acti_code(), target);
  }
  
  // optional int64 code_id = 2;
  if (has_code_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->code_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30101101::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string acti_code = 1;
    if (has_acti_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->acti_code());
    }
    
    // optional int64 code_id = 2;
    if (has_code_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->code_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30101101::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30101101* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30101101*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30101101::MergeFrom(const Proto30101101& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_acti_code()) {
      set_acti_code(from.acti_code());
    }
    if (from.has_code_id()) {
      set_code_id(from.code_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30101101::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30101101::CopyFrom(const Proto30101101& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30101101::IsInitialized() const {
  
  return true;
}

void Proto30101101::Swap(Proto30101101* other) {
  if (other != this) {
    std::swap(acti_code_, other->acti_code_);
    std::swap(code_id_, other->code_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30101101::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30101101_descriptor_;
  metadata.reflection = Proto30101101_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31402002::kCodeIdFieldNumber;
const int Proto31402002::kQueryRetFieldNumber;
#endif  // !_MSC_VER

Proto31402002::Proto31402002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31402002::InitAsDefaultInstance() {
}

Proto31402002::Proto31402002(const Proto31402002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31402002::SharedCtor() {
  _cached_size_ = 0;
  code_id_ = GOOGLE_LONGLONG(0);
  query_ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31402002::~Proto31402002() {
  SharedDtor();
}

void Proto31402002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31402002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31402002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31402002_descriptor_;
}

const Proto31402002& Proto31402002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31402002* Proto31402002::default_instance_ = NULL;

Proto31402002* Proto31402002::New() const {
  return new Proto31402002;
}

void Proto31402002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    code_id_ = GOOGLE_LONGLONG(0);
    query_ret_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31402002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 code_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &code_id_)));
          set_has_code_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_query_ret;
        break;
      }
      
      // optional int32 query_ret = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_query_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &query_ret_)));
          set_has_query_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31402002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 code_id = 1;
  if (has_code_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->code_id(), output);
  }
  
  // optional int32 query_ret = 2;
  if (has_query_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->query_ret(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31402002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 code_id = 1;
  if (has_code_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->code_id(), target);
  }
  
  // optional int32 query_ret = 2;
  if (has_query_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->query_ret(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31402002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 code_id = 1;
    if (has_code_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->code_id());
    }
    
    // optional int32 query_ret = 2;
    if (has_query_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->query_ret());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31402002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31402002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31402002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31402002::MergeFrom(const Proto31402002& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code_id()) {
      set_code_id(from.code_id());
    }
    if (from.has_query_ret()) {
      set_query_ret(from.query_ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31402002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31402002::CopyFrom(const Proto31402002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31402002::IsInitialized() const {
  
  return true;
}

void Proto31402002::Swap(Proto31402002* other) {
  if (other != this) {
    std::swap(code_id_, other->code_id_);
    std::swap(query_ret_, other->query_ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31402002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31402002_descriptor_;
  metadata.reflection = Proto31402002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400010::kAddAnimaFieldNumber;
const int Proto31400010::kSerialObjFieldNumber;
#endif  // !_MSC_VER

Proto31400010::Proto31400010()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400010::InitAsDefaultInstance() {
  serial_obj_ = const_cast< ::ProtoSerialObj*>(&::ProtoSerialObj::default_instance());
}

Proto31400010::Proto31400010(const Proto31400010& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400010::SharedCtor() {
  _cached_size_ = 0;
  add_anima_ = 0;
  serial_obj_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400010::~Proto31400010() {
  SharedDtor();
}

void Proto31400010::SharedDtor() {
  if (this != default_instance_) {
    delete serial_obj_;
  }
}

void Proto31400010::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400010::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400010_descriptor_;
}

const Proto31400010& Proto31400010::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31400010* Proto31400010::default_instance_ = NULL;

Proto31400010* Proto31400010::New() const {
  return new Proto31400010;
}

void Proto31400010::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    add_anima_ = 0;
    if (has_serial_obj()) {
      if (serial_obj_ != NULL) serial_obj_->::ProtoSerialObj::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400010::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 add_anima = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_anima_)));
          set_has_add_anima();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_serial_obj;
        break;
      }
      
      // optional .ProtoSerialObj serial_obj = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_serial_obj:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_serial_obj()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400010::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 add_anima = 1;
  if (has_add_anima()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->add_anima(), output);
  }
  
  // optional .ProtoSerialObj serial_obj = 2;
  if (has_serial_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->serial_obj(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400010::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 add_anima = 1;
  if (has_add_anima()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->add_anima(), target);
  }
  
  // optional .ProtoSerialObj serial_obj = 2;
  if (has_serial_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->serial_obj(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400010::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 add_anima = 1;
    if (has_add_anima()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_anima());
    }
    
    // optional .ProtoSerialObj serial_obj = 2;
    if (has_serial_obj()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->serial_obj());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400010::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400010* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400010*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400010::MergeFrom(const Proto31400010& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_add_anima()) {
      set_add_anima(from.add_anima());
    }
    if (from.has_serial_obj()) {
      mutable_serial_obj()->::ProtoSerialObj::MergeFrom(from.serial_obj());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400010::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400010::CopyFrom(const Proto31400010& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400010::IsInitialized() const {
  
  return true;
}

void Proto31400010::Swap(Proto31400010* other) {
  if (other != this) {
    std::swap(add_anima_, other->add_anima_);
    std::swap(serial_obj_, other->serial_obj_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400010::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400010_descriptor_;
  metadata.reflection = Proto31400010_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400053::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto30400053::Proto30400053()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400053::InitAsDefaultInstance() {
}

Proto30400053::Proto30400053(const Proto30400053& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400053::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400053::~Proto30400053() {
  SharedDtor();
}

void Proto30400053::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400053::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400053::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400053_descriptor_;
}

const Proto30400053& Proto30400053::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30400053* Proto30400053::default_instance_ = NULL;

Proto30400053* Proto30400053::New() const {
  return new Proto30400053;
}

void Proto30400053::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400053::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400053::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400053::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400053::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400053::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400053* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400053*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400053::MergeFrom(const Proto30400053& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400053::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400053::CopyFrom(const Proto30400053& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400053::IsInitialized() const {
  
  return true;
}

void Proto30400053::Swap(Proto30400053* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400053::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400053_descriptor_;
  metadata.reflection = Proto30400053_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30101110::kTotalGoldFieldNumber;
const int Proto30101110::kCurGoldFieldNumber;
const int Proto30101110::kDayTotalGoldFieldNumber;
#endif  // !_MSC_VER

Proto30101110::Proto30101110()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30101110::InitAsDefaultInstance() {
}

Proto30101110::Proto30101110(const Proto30101110& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30101110::SharedCtor() {
  _cached_size_ = 0;
  total_gold_ = 0;
  cur_gold_ = 0;
  day_total_gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30101110::~Proto30101110() {
  SharedDtor();
}

void Proto30101110::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30101110::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30101110::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30101110_descriptor_;
}

const Proto30101110& Proto30101110::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30101110* Proto30101110::default_instance_ = NULL;

Proto30101110* Proto30101110::New() const {
  return new Proto30101110;
}

void Proto30101110::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    total_gold_ = 0;
    cur_gold_ = 0;
    day_total_gold_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30101110::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 total_gold = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_gold_)));
          set_has_total_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_cur_gold;
        break;
      }
      
      // optional int32 cur_gold = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_gold_)));
          set_has_cur_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_day_total_gold;
        break;
      }
      
      // optional int32 day_total_gold = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_day_total_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_total_gold_)));
          set_has_day_total_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30101110::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 total_gold = 1;
  if (has_total_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->total_gold(), output);
  }
  
  // optional int32 cur_gold = 2;
  if (has_cur_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cur_gold(), output);
  }
  
  // optional int32 day_total_gold = 3;
  if (has_day_total_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->day_total_gold(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30101110::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 total_gold = 1;
  if (has_total_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->total_gold(), target);
  }
  
  // optional int32 cur_gold = 2;
  if (has_cur_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cur_gold(), target);
  }
  
  // optional int32 day_total_gold = 3;
  if (has_day_total_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->day_total_gold(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30101110::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 total_gold = 1;
    if (has_total_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_gold());
    }
    
    // optional int32 cur_gold = 2;
    if (has_cur_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_gold());
    }
    
    // optional int32 day_total_gold = 3;
    if (has_day_total_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->day_total_gold());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30101110::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30101110* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30101110*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30101110::MergeFrom(const Proto30101110& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_total_gold()) {
      set_total_gold(from.total_gold());
    }
    if (from.has_cur_gold()) {
      set_cur_gold(from.cur_gold());
    }
    if (from.has_day_total_gold()) {
      set_day_total_gold(from.day_total_gold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30101110::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30101110::CopyFrom(const Proto30101110& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30101110::IsInitialized() const {
  
  return true;
}

void Proto30101110::Swap(Proto30101110* other) {
  if (other != this) {
    std::swap(total_gold_, other->total_gold_);
    std::swap(cur_gold_, other->cur_gold_);
    std::swap(day_total_gold_, other->day_total_gold_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30101110::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30101110_descriptor_;
  metadata.reflection = Proto30101110_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto32101102::kChannelFieldNumber;
const int Proto32101102::kUcSidFieldNumber;
const int Proto32101102::kRoleIdFieldNumber;
const int Proto32101102::kRoleNameFieldNumber;
const int Proto32101102::kRoleLevelFieldNumber;
#endif  // !_MSC_VER

Proto32101102::Proto32101102()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto32101102::InitAsDefaultInstance() {
}

Proto32101102::Proto32101102(const Proto32101102& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto32101102::SharedCtor() {
  _cached_size_ = 0;
  channel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  uc_sid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  role_id_ = GOOGLE_LONGLONG(0);
  role_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  role_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto32101102::~Proto32101102() {
  SharedDtor();
}

void Proto32101102::SharedDtor() {
  if (channel_ != &::google::protobuf::internal::kEmptyString) {
    delete channel_;
  }
  if (uc_sid_ != &::google::protobuf::internal::kEmptyString) {
    delete uc_sid_;
  }
  if (role_name_ != &::google::protobuf::internal::kEmptyString) {
    delete role_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto32101102::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto32101102::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto32101102_descriptor_;
}

const Proto32101102& Proto32101102::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto32101102* Proto32101102::default_instance_ = NULL;

Proto32101102* Proto32101102::New() const {
  return new Proto32101102;
}

void Proto32101102::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_channel()) {
      if (channel_ != &::google::protobuf::internal::kEmptyString) {
        channel_->clear();
      }
    }
    if (has_uc_sid()) {
      if (uc_sid_ != &::google::protobuf::internal::kEmptyString) {
        uc_sid_->clear();
      }
    }
    role_id_ = GOOGLE_LONGLONG(0);
    if (has_role_name()) {
      if (role_name_ != &::google::protobuf::internal::kEmptyString) {
        role_name_->clear();
      }
    }
    role_level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto32101102::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string channel = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->channel().data(), this->channel().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_uc_sid;
        break;
      }
      
      // optional string uc_sid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_uc_sid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uc_sid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->uc_sid().data(), this->uc_sid().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_role_id;
        break;
      }
      
      // optional int64 role_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_role_name;
        break;
      }
      
      // optional string role_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_role_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->role_name().data(), this->role_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_role_level;
        break;
      }
      
      // optional int32 role_level = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_role_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &role_level_)));
          set_has_role_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto32101102::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string channel = 1;
  if (has_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->channel(), output);
  }
  
  // optional string uc_sid = 2;
  if (has_uc_sid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uc_sid().data(), this->uc_sid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->uc_sid(), output);
  }
  
  // optional int64 role_id = 3;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->role_id(), output);
  }
  
  // optional string role_name = 4;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->role_name(), output);
  }
  
  // optional int32 role_level = 5;
  if (has_role_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->role_level(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto32101102::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string channel = 1;
  if (has_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->channel().data(), this->channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->channel(), target);
  }
  
  // optional string uc_sid = 2;
  if (has_uc_sid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->uc_sid().data(), this->uc_sid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uc_sid(), target);
  }
  
  // optional int64 role_id = 3;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->role_id(), target);
  }
  
  // optional string role_name = 4;
  if (has_role_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->role_name().data(), this->role_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->role_name(), target);
  }
  
  // optional int32 role_level = 5;
  if (has_role_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->role_level(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto32101102::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string channel = 1;
    if (has_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->channel());
    }
    
    // optional string uc_sid = 2;
    if (has_uc_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uc_sid());
    }
    
    // optional int64 role_id = 3;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional string role_name = 4;
    if (has_role_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->role_name());
    }
    
    // optional int32 role_level = 5;
    if (has_role_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->role_level());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto32101102::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto32101102* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto32101102*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto32101102::MergeFrom(const Proto32101102& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_channel()) {
      set_channel(from.channel());
    }
    if (from.has_uc_sid()) {
      set_uc_sid(from.uc_sid());
    }
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_role_name()) {
      set_role_name(from.role_name());
    }
    if (from.has_role_level()) {
      set_role_level(from.role_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto32101102::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto32101102::CopyFrom(const Proto32101102& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto32101102::IsInitialized() const {
  
  return true;
}

void Proto32101102::Swap(Proto32101102* other) {
  if (other != this) {
    std::swap(channel_, other->channel_);
    std::swap(uc_sid_, other->uc_sid_);
    std::swap(role_id_, other->role_id_);
    std::swap(role_name_, other->role_name_);
    std::swap(role_level_, other->role_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto32101102::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto32101102_descriptor_;
  metadata.reflection = Proto32101102_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto32101201::kActiCodeFieldNumber;
const int Proto32101201::kCodeIdFieldNumber;
#endif  // !_MSC_VER

Proto32101201::Proto32101201()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto32101201::InitAsDefaultInstance() {
}

Proto32101201::Proto32101201(const Proto32101201& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto32101201::SharedCtor() {
  _cached_size_ = 0;
  acti_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  code_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto32101201::~Proto32101201() {
  SharedDtor();
}

void Proto32101201::SharedDtor() {
  if (acti_code_ != &::google::protobuf::internal::kEmptyString) {
    delete acti_code_;
  }
  if (this != default_instance_) {
  }
}

void Proto32101201::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto32101201::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto32101201_descriptor_;
}

const Proto32101201& Proto32101201::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto32101201* Proto32101201::default_instance_ = NULL;

Proto32101201* Proto32101201::New() const {
  return new Proto32101201;
}

void Proto32101201::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_acti_code()) {
      if (acti_code_ != &::google::protobuf::internal::kEmptyString) {
        acti_code_->clear();
      }
    }
    code_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto32101201::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string acti_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_acti_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->acti_code().data(), this->acti_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_code_id;
        break;
      }
      
      // optional int64 code_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_code_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &code_id_)));
          set_has_code_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto32101201::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string acti_code = 1;
  if (has_acti_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->acti_code().data(), this->acti_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->acti_code(), output);
  }
  
  // optional int64 code_id = 2;
  if (has_code_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->code_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto32101201::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string acti_code = 1;
  if (has_acti_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->acti_code().data(), this->acti_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->acti_code(), target);
  }
  
  // optional int64 code_id = 2;
  if (has_code_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->code_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto32101201::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string acti_code = 1;
    if (has_acti_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->acti_code());
    }
    
    // optional int64 code_id = 2;
    if (has_code_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->code_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto32101201::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto32101201* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto32101201*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto32101201::MergeFrom(const Proto32101201& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_acti_code()) {
      set_acti_code(from.acti_code());
    }
    if (from.has_code_id()) {
      set_code_id(from.code_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto32101201::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto32101201::CopyFrom(const Proto32101201& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto32101201::IsInitialized() const {
  
  return true;
}

void Proto32101201::Swap(Proto32101201* other) {
  if (other != this) {
    std::swap(acti_code_, other->acti_code_);
    std::swap(code_id_, other->code_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto32101201::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto32101201_descriptor_;
  metadata.reflection = Proto32101201_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30101102::kCodeIdFieldNumber;
const int Proto30101102::kQueryRetFieldNumber;
#endif  // !_MSC_VER

Proto30101102::Proto30101102()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30101102::InitAsDefaultInstance() {
}

Proto30101102::Proto30101102(const Proto30101102& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30101102::SharedCtor() {
  _cached_size_ = 0;
  code_id_ = GOOGLE_LONGLONG(0);
  query_ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30101102::~Proto30101102() {
  SharedDtor();
}

void Proto30101102::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30101102::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30101102::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30101102_descriptor_;
}

const Proto30101102& Proto30101102::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30101102* Proto30101102::default_instance_ = NULL;

Proto30101102* Proto30101102::New() const {
  return new Proto30101102;
}

void Proto30101102::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    code_id_ = GOOGLE_LONGLONG(0);
    query_ret_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30101102::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 code_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &code_id_)));
          set_has_code_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_query_ret;
        break;
      }
      
      // optional int32 query_ret = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_query_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &query_ret_)));
          set_has_query_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30101102::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 code_id = 1;
  if (has_code_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->code_id(), output);
  }
  
  // optional int32 query_ret = 2;
  if (has_query_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->query_ret(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30101102::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 code_id = 1;
  if (has_code_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->code_id(), target);
  }
  
  // optional int32 query_ret = 2;
  if (has_query_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->query_ret(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30101102::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 code_id = 1;
    if (has_code_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->code_id());
    }
    
    // optional int32 query_ret = 2;
    if (has_query_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->query_ret());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30101102::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30101102* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30101102*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30101102::MergeFrom(const Proto30101102& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_code_id()) {
      set_code_id(from.code_id());
    }
    if (from.has_query_ret()) {
      set_query_ret(from.query_ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30101102::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30101102::CopyFrom(const Proto30101102& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30101102::IsInitialized() const {
  
  return true;
}

void Proto30101102::Swap(Proto30101102* other) {
  if (other != this) {
    std::swap(code_id_, other->code_id_);
    std::swap(query_ret_, other->query_ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30101102::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30101102_descriptor_;
  metadata.reflection = Proto30101102_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30100228::kWeaponFieldNumber;
const int Proto30100228::kClothesFieldNumber;
const int Proto30100228::kFashionWeaponFieldNumber;
const int Proto30100228::kFashionClothesFieldNumber;
#endif  // !_MSC_VER

Proto30100228::Proto30100228()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30100228::InitAsDefaultInstance() {
}

Proto30100228::Proto30100228(const Proto30100228& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30100228::SharedCtor() {
  _cached_size_ = 0;
  weapon_ = 0;
  clothes_ = 0;
  fashion_weapon_ = 0;
  fashion_clothes_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30100228::~Proto30100228() {
  SharedDtor();
}

void Proto30100228::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30100228::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30100228::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30100228_descriptor_;
}

const Proto30100228& Proto30100228::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30100228* Proto30100228::default_instance_ = NULL;

Proto30100228* Proto30100228::New() const {
  return new Proto30100228;
}

void Proto30100228::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    weapon_ = 0;
    clothes_ = 0;
    fashion_weapon_ = 0;
    fashion_clothes_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30100228::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 weapon = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weapon_)));
          set_has_weapon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_clothes;
        break;
      }
      
      // optional int32 clothes = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_clothes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clothes_)));
          set_has_clothes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_fashion_weapon;
        break;
      }
      
      // optional int32 fashion_weapon = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_weapon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_weapon_)));
          set_has_fashion_weapon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_fashion_clothes;
        break;
      }
      
      // optional int32 fashion_clothes = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fashion_clothes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fashion_clothes_)));
          set_has_fashion_clothes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30100228::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 weapon = 1;
  if (has_weapon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->weapon(), output);
  }
  
  // optional int32 clothes = 2;
  if (has_clothes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->clothes(), output);
  }
  
  // optional int32 fashion_weapon = 3;
  if (has_fashion_weapon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->fashion_weapon(), output);
  }
  
  // optional int32 fashion_clothes = 4;
  if (has_fashion_clothes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->fashion_clothes(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30100228::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 weapon = 1;
  if (has_weapon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->weapon(), target);
  }
  
  // optional int32 clothes = 2;
  if (has_clothes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->clothes(), target);
  }
  
  // optional int32 fashion_weapon = 3;
  if (has_fashion_weapon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->fashion_weapon(), target);
  }
  
  // optional int32 fashion_clothes = 4;
  if (has_fashion_clothes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->fashion_clothes(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30100228::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 weapon = 1;
    if (has_weapon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->weapon());
    }
    
    // optional int32 clothes = 2;
    if (has_clothes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->clothes());
    }
    
    // optional int32 fashion_weapon = 3;
    if (has_fashion_weapon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_weapon());
    }
    
    // optional int32 fashion_clothes = 4;
    if (has_fashion_clothes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fashion_clothes());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30100228::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30100228* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30100228*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30100228::MergeFrom(const Proto30100228& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_weapon()) {
      set_weapon(from.weapon());
    }
    if (from.has_clothes()) {
      set_clothes(from.clothes());
    }
    if (from.has_fashion_weapon()) {
      set_fashion_weapon(from.fashion_weapon());
    }
    if (from.has_fashion_clothes()) {
      set_fashion_clothes(from.fashion_clothes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30100228::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30100228::CopyFrom(const Proto30100228& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30100228::IsInitialized() const {
  
  return true;
}

void Proto30100228::Swap(Proto30100228* other) {
  if (other != this) {
    std::swap(weapon_, other->weapon_);
    std::swap(clothes_, other->clothes_);
    std::swap(fashion_weapon_, other->fashion_weapon_);
    std::swap(fashion_clothes_, other->fashion_clothes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30100228::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30100228_descriptor_;
  metadata.reflection = Proto30100228_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400113::kScoreFieldNumber;
const int Proto30400113::kStageFieldNumber;
const int Proto30400113::kDrawFlagFieldNumber;
const int Proto30400113::kWinTimesFieldNumber;
const int Proto30400113::kGetExploitFieldNumber;
const int Proto30400113::kAttendTimesFieldNumber;
const int Proto30400113::kDrawWinFieldNumber;
const int Proto30400113::kAdjustTickFieldNumber;
#endif  // !_MSC_VER

Proto30400113::Proto30400113()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400113::InitAsDefaultInstance() {
  draw_win_ = const_cast< ::ProtoPairMap*>(&::ProtoPairMap::default_instance());
}

Proto30400113::Proto30400113(const Proto30400113& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400113::SharedCtor() {
  _cached_size_ = 0;
  score_ = 0;
  stage_ = 0;
  draw_flag_ = 0;
  win_times_ = 0;
  get_exploit_ = 0;
  attend_times_ = 0;
  draw_win_ = NULL;
  adjust_tick_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400113::~Proto30400113() {
  SharedDtor();
}

void Proto30400113::SharedDtor() {
  if (this != default_instance_) {
    delete draw_win_;
  }
}

void Proto30400113::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400113::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400113_descriptor_;
}

const Proto30400113& Proto30400113::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30400113* Proto30400113::default_instance_ = NULL;

Proto30400113* Proto30400113::New() const {
  return new Proto30400113;
}

void Proto30400113::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    score_ = 0;
    stage_ = 0;
    draw_flag_ = 0;
    win_times_ = 0;
    get_exploit_ = 0;
    attend_times_ = 0;
    if (has_draw_win()) {
      if (draw_win_ != NULL) draw_win_->::ProtoPairMap::Clear();
    }
    adjust_tick_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400113::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 score = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_stage;
        break;
      }
      
      // optional int32 stage = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_)));
          set_has_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_draw_flag;
        break;
      }
      
      // optional int32 draw_flag = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_draw_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &draw_flag_)));
          set_has_draw_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_win_times;
        break;
      }
      
      // optional int32 win_times = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_win_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &win_times_)));
          set_has_win_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_get_exploit;
        break;
      }
      
      // optional int32 get_exploit = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_get_exploit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &get_exploit_)));
          set_has_get_exploit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_attend_times;
        break;
      }
      
      // optional int32 attend_times = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attend_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attend_times_)));
          set_has_attend_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_draw_win;
        break;
      }
      
      // optional .ProtoPairMap draw_win = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_draw_win:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_draw_win()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_adjust_tick;
        break;
      }
      
      // optional int64 adjust_tick = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_adjust_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &adjust_tick_)));
          set_has_adjust_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400113::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 score = 1;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->score(), output);
  }
  
  // optional int32 stage = 2;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stage(), output);
  }
  
  // optional int32 draw_flag = 3;
  if (has_draw_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->draw_flag(), output);
  }
  
  // optional int32 win_times = 4;
  if (has_win_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->win_times(), output);
  }
  
  // optional int32 get_exploit = 5;
  if (has_get_exploit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->get_exploit(), output);
  }
  
  // optional int32 attend_times = 6;
  if (has_attend_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->attend_times(), output);
  }
  
  // optional .ProtoPairMap draw_win = 7;
  if (has_draw_win()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->draw_win(), output);
  }
  
  // optional int64 adjust_tick = 8;
  if (has_adjust_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->adjust_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400113::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 score = 1;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->score(), target);
  }
  
  // optional int32 stage = 2;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stage(), target);
  }
  
  // optional int32 draw_flag = 3;
  if (has_draw_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->draw_flag(), target);
  }
  
  // optional int32 win_times = 4;
  if (has_win_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->win_times(), target);
  }
  
  // optional int32 get_exploit = 5;
  if (has_get_exploit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->get_exploit(), target);
  }
  
  // optional int32 attend_times = 6;
  if (has_attend_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->attend_times(), target);
  }
  
  // optional .ProtoPairMap draw_win = 7;
  if (has_draw_win()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->draw_win(), target);
  }
  
  // optional int64 adjust_tick = 8;
  if (has_adjust_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->adjust_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400113::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 score = 1;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }
    
    // optional int32 stage = 2;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stage());
    }
    
    // optional int32 draw_flag = 3;
    if (has_draw_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->draw_flag());
    }
    
    // optional int32 win_times = 4;
    if (has_win_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->win_times());
    }
    
    // optional int32 get_exploit = 5;
    if (has_get_exploit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->get_exploit());
    }
    
    // optional int32 attend_times = 6;
    if (has_attend_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attend_times());
    }
    
    // optional .ProtoPairMap draw_win = 7;
    if (has_draw_win()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->draw_win());
    }
    
    // optional int64 adjust_tick = 8;
    if (has_adjust_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->adjust_tick());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400113::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400113* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400113*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400113::MergeFrom(const Proto30400113& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_stage()) {
      set_stage(from.stage());
    }
    if (from.has_draw_flag()) {
      set_draw_flag(from.draw_flag());
    }
    if (from.has_win_times()) {
      set_win_times(from.win_times());
    }
    if (from.has_get_exploit()) {
      set_get_exploit(from.get_exploit());
    }
    if (from.has_attend_times()) {
      set_attend_times(from.attend_times());
    }
    if (from.has_draw_win()) {
      mutable_draw_win()->::ProtoPairMap::MergeFrom(from.draw_win());
    }
    if (from.has_adjust_tick()) {
      set_adjust_tick(from.adjust_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400113::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400113::CopyFrom(const Proto30400113& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400113::IsInitialized() const {
  
  return true;
}

void Proto30400113::Swap(Proto30400113* other) {
  if (other != this) {
    std::swap(score_, other->score_);
    std::swap(stage_, other->stage_);
    std::swap(draw_flag_, other->draw_flag_);
    std::swap(win_times_, other->win_times_);
    std::swap(get_exploit_, other->get_exploit_);
    std::swap(attend_times_, other->attend_times_);
    std::swap(draw_win_, other->draw_win_);
    std::swap(adjust_tick_, other->adjust_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400113::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400113_descriptor_;
  metadata.reflection = Proto30400113_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30401301::kRoleIdFieldNumber;
const int Proto30401301::kTypeFieldNumber;
const int Proto30401301::kSpaceIdFieldNumber;
const int Proto30401301::kPeerIdFieldNumber;
#endif  // !_MSC_VER

Proto30401301::Proto30401301()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30401301::InitAsDefaultInstance() {
}

Proto30401301::Proto30401301(const Proto30401301& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30401301::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  type_ = 0;
  space_id_ = 0;
  peer_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30401301::~Proto30401301() {
  SharedDtor();
}

void Proto30401301::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30401301::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30401301::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30401301_descriptor_;
}

const Proto30401301& Proto30401301::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30401301* Proto30401301::default_instance_ = NULL;

Proto30401301* Proto30401301::New() const {
  return new Proto30401301;
}

void Proto30401301::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    type_ = 0;
    space_id_ = 0;
    peer_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30401301::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_space_id;
        break;
      }
      
      // optional int32 space_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_space_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &space_id_)));
          set_has_space_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_peer_id;
        break;
      }
      
      // optional int64 peer_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_peer_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &peer_id_)));
          set_has_peer_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30401301::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  // optional int32 space_id = 3;
  if (has_space_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->space_id(), output);
  }
  
  // optional int64 peer_id = 4;
  if (has_peer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->peer_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30401301::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  // optional int32 space_id = 3;
  if (has_space_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->space_id(), target);
  }
  
  // optional int64 peer_id = 4;
  if (has_peer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->peer_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30401301::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 space_id = 3;
    if (has_space_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->space_id());
    }
    
    // optional int64 peer_id = 4;
    if (has_peer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->peer_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30401301::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30401301* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30401301*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30401301::MergeFrom(const Proto30401301& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_space_id()) {
      set_space_id(from.space_id());
    }
    if (from.has_peer_id()) {
      set_peer_id(from.peer_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30401301::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30401301::CopyFrom(const Proto30401301& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30401301::IsInitialized() const {
  
  return true;
}

void Proto30401301::Swap(Proto30401301* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(type_, other->type_);
    std::swap(space_id_, other->space_id_);
    std::swap(peer_id_, other->peer_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30401301::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30401301_descriptor_;
  metadata.reflection = Proto30401301_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30401105::kRoleIdFieldNumber;
const int Proto30401105::kOriSceneFieldNumber;
const int Proto30401105::kForceFieldNumber;
const int Proto30401105::kCampIdFieldNumber;
const int Proto30401105::kJoinTickFieldNumber;
#endif  // !_MSC_VER

Proto30401105::Proto30401105()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30401105::InitAsDefaultInstance() {
}

Proto30401105::Proto30401105(const Proto30401105& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30401105::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ori_scene_ = 0;
  force_ = 0;
  camp_id_ = 0;
  join_tick_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30401105::~Proto30401105() {
  SharedDtor();
}

void Proto30401105::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30401105::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30401105::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30401105_descriptor_;
}

const Proto30401105& Proto30401105::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30401105* Proto30401105::default_instance_ = NULL;

Proto30401105* Proto30401105::New() const {
  return new Proto30401105;
}

void Proto30401105::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
    ori_scene_ = 0;
    force_ = 0;
    camp_id_ = 0;
    join_tick_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30401105::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_ori_scene;
        break;
      }
      
      // optional int32 ori_scene = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ori_scene:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ori_scene_)));
          set_has_ori_scene();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_force;
        break;
      }
      
      // optional int32 force = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &force_)));
          set_has_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_camp_id;
        break;
      }
      
      // optional int32 camp_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_camp_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &camp_id_)));
          set_has_camp_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_join_tick;
        break;
      }
      
      // optional int32 join_tick = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_join_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &join_tick_)));
          set_has_join_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30401105::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  // optional int32 ori_scene = 2;
  if (has_ori_scene()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ori_scene(), output);
  }
  
  // optional int32 force = 3;
  if (has_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->force(), output);
  }
  
  // optional int32 camp_id = 4;
  if (has_camp_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->camp_id(), output);
  }
  
  // optional int32 join_tick = 5;
  if (has_join_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->join_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30401105::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  // optional int32 ori_scene = 2;
  if (has_ori_scene()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ori_scene(), target);
  }
  
  // optional int32 force = 3;
  if (has_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->force(), target);
  }
  
  // optional int32 camp_id = 4;
  if (has_camp_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->camp_id(), target);
  }
  
  // optional int32 join_tick = 5;
  if (has_join_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->join_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30401105::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
    // optional int32 ori_scene = 2;
    if (has_ori_scene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ori_scene());
    }
    
    // optional int32 force = 3;
    if (has_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->force());
    }
    
    // optional int32 camp_id = 4;
    if (has_camp_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->camp_id());
    }
    
    // optional int32 join_tick = 5;
    if (has_join_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->join_tick());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30401105::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30401105* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30401105*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30401105::MergeFrom(const Proto30401105& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
    if (from.has_ori_scene()) {
      set_ori_scene(from.ori_scene());
    }
    if (from.has_force()) {
      set_force(from.force());
    }
    if (from.has_camp_id()) {
      set_camp_id(from.camp_id());
    }
    if (from.has_join_tick()) {
      set_join_tick(from.join_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30401105::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30401105::CopyFrom(const Proto30401105& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30401105::IsInitialized() const {
  
  return true;
}

void Proto30401105::Swap(Proto30401105* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(ori_scene_, other->ori_scene_);
    std::swap(force_, other->force_);
    std::swap(camp_id_, other->camp_id_);
    std::swap(join_tick_, other->join_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30401105::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30401105_descriptor_;
  metadata.reflection = Proto30401105_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400010::kPercentFieldNumber;
const int Proto30400010::kLastFieldNumber;
const int Proto30400010::kIdFieldNumber;
#endif  // !_MSC_VER

Proto30400010::Proto30400010()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400010::InitAsDefaultInstance() {
}

Proto30400010::Proto30400010(const Proto30400010& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400010::SharedCtor() {
  _cached_size_ = 0;
  percent_ = 0;
  last_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400010::~Proto30400010() {
  SharedDtor();
}

void Proto30400010::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400010::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400010::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400010_descriptor_;
}

const Proto30400010& Proto30400010::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30400010* Proto30400010::default_instance_ = NULL;

Proto30400010* Proto30400010::New() const {
  return new Proto30400010;
}

void Proto30400010::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    percent_ = 0;
    last_ = 0;
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400010::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 percent = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &percent_)));
          set_has_percent();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_last;
        break;
      }
      
      // optional int32 last = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_)));
          set_has_last();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_id;
        break;
      }
      
      // optional int32 id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400010::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 percent = 1;
  if (has_percent()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->percent(), output);
  }
  
  // optional int32 last = 2;
  if (has_last()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->last(), output);
  }
  
  // optional int32 id = 3;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400010::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 percent = 1;
  if (has_percent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->percent(), target);
  }
  
  // optional int32 last = 2;
  if (has_last()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->last(), target);
  }
  
  // optional int32 id = 3;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400010::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 percent = 1;
    if (has_percent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->percent());
    }
    
    // optional int32 last = 2;
    if (has_last()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last());
    }
    
    // optional int32 id = 3;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400010::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400010* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400010*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400010::MergeFrom(const Proto30400010& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_percent()) {
      set_percent(from.percent());
    }
    if (from.has_last()) {
      set_last(from.last());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400010::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400010::CopyFrom(const Proto30400010& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400010::IsInitialized() const {
  
  return true;
}

void Proto30400010::Swap(Proto30400010* other) {
  if (other != this) {
    std::swap(percent_, other->percent_);
    std::swap(last_, other->last_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400010::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400010_descriptor_;
  metadata.reflection = Proto30400010_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400009::kAddMagicFieldNumber;
const int Proto30400009::kSerialObjFieldNumber;
#endif  // !_MSC_VER

Proto30400009::Proto30400009()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400009::InitAsDefaultInstance() {
}

Proto30400009::Proto30400009(const Proto30400009& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400009::SharedCtor() {
  _cached_size_ = 0;
  add_magic_ = 0;
  serial_obj_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400009::~Proto30400009() {
  SharedDtor();
}

void Proto30400009::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400009::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400009::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400009_descriptor_;
}

const Proto30400009& Proto30400009::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30400009* Proto30400009::default_instance_ = NULL;

Proto30400009* Proto30400009::New() const {
  return new Proto30400009;
}

void Proto30400009::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    add_magic_ = 0;
    serial_obj_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400009::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 add_magic = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &add_magic_)));
          set_has_add_magic();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_serial_obj;
        break;
      }
      
      // optional int32 serial_obj = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_serial_obj:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serial_obj_)));
          set_has_serial_obj();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400009::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 add_magic = 1;
  if (has_add_magic()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->add_magic(), output);
  }
  
  // optional int32 serial_obj = 2;
  if (has_serial_obj()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->serial_obj(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400009::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 add_magic = 1;
  if (has_add_magic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->add_magic(), target);
  }
  
  // optional int32 serial_obj = 2;
  if (has_serial_obj()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->serial_obj(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400009::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 add_magic = 1;
    if (has_add_magic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->add_magic());
    }
    
    // optional int32 serial_obj = 2;
    if (has_serial_obj()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->serial_obj());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400009::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400009* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400009*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400009::MergeFrom(const Proto30400009& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_add_magic()) {
      set_add_magic(from.add_magic());
    }
    if (from.has_serial_obj()) {
      set_serial_obj(from.serial_obj());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400009::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400009::CopyFrom(const Proto30400009& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400009::IsInitialized() const {
  
  return true;
}

void Proto30400009::Swap(Proto30400009* other) {
  if (other != this) {
    std::swap(add_magic_, other->add_magic_);
    std::swap(serial_obj_, other->serial_obj_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400009::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400009_descriptor_;
  metadata.reflection = Proto30400009_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto30400008::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto30400008::Proto30400008()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto30400008::InitAsDefaultInstance() {
}

Proto30400008::Proto30400008(const Proto30400008& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto30400008::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto30400008::~Proto30400008() {
  SharedDtor();
}

void Proto30400008::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto30400008::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto30400008::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto30400008_descriptor_;
}

const Proto30400008& Proto30400008::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto30400008* Proto30400008::default_instance_ = NULL;

Proto30400008* Proto30400008::New() const {
  return new Proto30400008;
}

void Proto30400008::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto30400008::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto30400008::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto30400008::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto30400008::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto30400008::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto30400008* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto30400008*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto30400008::MergeFrom(const Proto30400008& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto30400008::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto30400008::CopyFrom(const Proto30400008& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto30400008::IsInitialized() const {
  
  return true;
}

void Proto30400008::Swap(Proto30400008* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto30400008::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto30400008_descriptor_;
  metadata.reflection = Proto30400008_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400128::kBuffStatusSetFieldNumber;
#endif  // !_MSC_VER

Proto31400128::Proto31400128()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400128::InitAsDefaultInstance() {
}

Proto31400128::Proto31400128(const Proto31400128& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400128::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400128::~Proto31400128() {
  SharedDtor();
}

void Proto31400128::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400128::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400128::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400128_descriptor_;
}

const Proto31400128& Proto31400128::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31400128* Proto31400128::default_instance_ = NULL;

Proto31400128* Proto31400128::New() const {
  return new Proto31400128;
}

void Proto31400128::Clear() {
  buff_status_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400128::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoBuffStatus buff_status_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buff_status_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buff_status_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_buff_status_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400128::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoBuffStatus buff_status_set = 1;
  for (int i = 0; i < this->buff_status_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->buff_status_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400128::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoBuffStatus buff_status_set = 1;
  for (int i = 0; i < this->buff_status_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->buff_status_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400128::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoBuffStatus buff_status_set = 1;
  total_size += 1 * this->buff_status_set_size();
  for (int i = 0; i < this->buff_status_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buff_status_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400128::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400128* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400128*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400128::MergeFrom(const Proto31400128& from) {
  GOOGLE_CHECK_NE(&from, this);
  buff_status_set_.MergeFrom(from.buff_status_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400128::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400128::CopyFrom(const Proto31400128& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400128::IsInitialized() const {
  
  return true;
}

void Proto31400128::Swap(Proto31400128* other) {
  if (other != this) {
    buff_status_set_.Swap(&other->buff_status_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400128::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400128_descriptor_;
  metadata.reflection = Proto31400128_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400904::kScriptSortFieldNumber;
const int Proto31400904::kGoldFieldNumber;
const int Proto31400904::kRetCodeFieldNumber;
const int Proto31400904::kIncTimesFieldNumber;
const int Proto31400904::kScriptTypeFieldNumber;
const int Proto31400904::kSortSetFieldNumber;
#endif  // !_MSC_VER

Proto31400904::Proto31400904()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400904::InitAsDefaultInstance() {
}

Proto31400904::Proto31400904(const Proto31400904& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400904::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  gold_ = 0;
  ret_code_ = 0;
  inc_times_ = 0;
  script_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400904::~Proto31400904() {
  SharedDtor();
}

void Proto31400904::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400904::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400904::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400904_descriptor_;
}

const Proto31400904& Proto31400904::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31400904* Proto31400904::default_instance_ = NULL;

Proto31400904* Proto31400904::New() const {
  return new Proto31400904;
}

void Proto31400904::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
    gold_ = 0;
    ret_code_ = 0;
    inc_times_ = 0;
    script_type_ = 0;
  }
  sort_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400904::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gold;
        break;
      }
      
      // optional int32 gold = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_ret_code;
        break;
      }
      
      // optional int32 ret_code = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ret_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_code_)));
          set_has_ret_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_inc_times;
        break;
      }
      
      // optional int32 inc_times = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_inc_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inc_times_)));
          set_has_inc_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_script_type;
        break;
      }
      
      // optional int32 script_type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_type_)));
          set_has_script_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_sort_set;
        break;
      }
      
      // repeated int32 sort_set = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sort_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_sort_set())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_sort_set())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_sort_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400904::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  // optional int32 gold = 2;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gold(), output);
  }
  
  // optional int32 ret_code = 3;
  if (has_ret_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ret_code(), output);
  }
  
  // optional int32 inc_times = 4;
  if (has_inc_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->inc_times(), output);
  }
  
  // optional int32 script_type = 5;
  if (has_script_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->script_type(), output);
  }
  
  // repeated int32 sort_set = 6;
  for (int i = 0; i < this->sort_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->sort_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400904::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  // optional int32 gold = 2;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gold(), target);
  }
  
  // optional int32 ret_code = 3;
  if (has_ret_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ret_code(), target);
  }
  
  // optional int32 inc_times = 4;
  if (has_inc_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->inc_times(), target);
  }
  
  // optional int32 script_type = 5;
  if (has_script_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->script_type(), target);
  }
  
  // repeated int32 sort_set = 6;
  for (int i = 0; i < this->sort_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->sort_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400904::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 gold = 2;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }
    
    // optional int32 ret_code = 3;
    if (has_ret_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret_code());
    }
    
    // optional int32 inc_times = 4;
    if (has_inc_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->inc_times());
    }
    
    // optional int32 script_type = 5;
    if (has_script_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_type());
    }
    
  }
  // repeated int32 sort_set = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->sort_set_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->sort_set(i));
    }
    total_size += 1 * this->sort_set_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400904::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400904* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400904*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400904::MergeFrom(const Proto31400904& from) {
  GOOGLE_CHECK_NE(&from, this);
  sort_set_.MergeFrom(from.sort_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_ret_code()) {
      set_ret_code(from.ret_code());
    }
    if (from.has_inc_times()) {
      set_inc_times(from.inc_times());
    }
    if (from.has_script_type()) {
      set_script_type(from.script_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400904::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400904::CopyFrom(const Proto31400904& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400904::IsInitialized() const {
  
  return true;
}

void Proto31400904::Swap(Proto31400904* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(gold_, other->gold_);
    std::swap(ret_code_, other->ret_code_);
    std::swap(inc_times_, other->inc_times_);
    std::swap(script_type_, other->script_type_);
    sort_set_.Swap(&other->sort_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400904::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400904_descriptor_;
  metadata.reflection = Proto31400904_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400905::kScriptListFieldNumber;
const int Proto31400905::kTaskListFieldNumber;
const int Proto31400905::kRespondToLogicFieldNumber;
#endif  // !_MSC_VER

Proto31400905::Proto31400905()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400905::InitAsDefaultInstance() {
}

Proto31400905::Proto31400905(const Proto31400905& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400905::SharedCtor() {
  _cached_size_ = 0;
  respond_to_logic_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400905::~Proto31400905() {
  SharedDtor();
}

void Proto31400905::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto31400905::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400905::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400905_descriptor_;
}

const Proto31400905& Proto31400905::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31400905* Proto31400905::default_instance_ = NULL;

Proto31400905* Proto31400905::New() const {
  return new Proto31400905;
}

void Proto31400905::Clear() {
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    respond_to_logic_ = false;
  }
  script_list_.Clear();
  task_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400905::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoScriptInfo script_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_script_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_script_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_script_list;
        if (input->ExpectTag(16)) goto parse_task_list;
        break;
      }
      
      // repeated int32 task_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_task_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_task_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_task_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_task_list;
        if (input->ExpectTag(24)) goto parse_respond_to_logic;
        break;
      }
      
      // optional bool respond_to_logic = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_respond_to_logic:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &respond_to_logic_)));
          set_has_respond_to_logic();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400905::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoScriptInfo script_list = 1;
  for (int i = 0; i < this->script_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->script_list(i), output);
  }
  
  // repeated int32 task_list = 2;
  for (int i = 0; i < this->task_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->task_list(i), output);
  }
  
  // optional bool respond_to_logic = 3;
  if (has_respond_to_logic()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->respond_to_logic(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400905::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoScriptInfo script_list = 1;
  for (int i = 0; i < this->script_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->script_list(i), target);
  }
  
  // repeated int32 task_list = 2;
  for (int i = 0; i < this->task_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->task_list(i), target);
  }
  
  // optional bool respond_to_logic = 3;
  if (has_respond_to_logic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->respond_to_logic(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400905::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional bool respond_to_logic = 3;
    if (has_respond_to_logic()) {
      total_size += 1 + 1;
    }
    
  }
  // repeated .ProtoScriptInfo script_list = 1;
  total_size += 1 * this->script_list_size();
  for (int i = 0; i < this->script_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->script_list(i));
  }
  
  // repeated int32 task_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->task_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->task_list(i));
    }
    total_size += 1 * this->task_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400905::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400905* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400905*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400905::MergeFrom(const Proto31400905& from) {
  GOOGLE_CHECK_NE(&from, this);
  script_list_.MergeFrom(from.script_list_);
  task_list_.MergeFrom(from.task_list_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_respond_to_logic()) {
      set_respond_to_logic(from.respond_to_logic());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400905::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400905::CopyFrom(const Proto31400905& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400905::IsInitialized() const {
  
  return true;
}

void Proto31400905::Swap(Proto31400905* other) {
  if (other != this) {
    script_list_.Swap(&other->script_list_);
    task_list_.Swap(&other->task_list_);
    std::swap(respond_to_logic_, other->respond_to_logic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400905::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400905_descriptor_;
  metadata.reflection = Proto31400905_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto31400129::kRechargeMoneyFieldNumber;
const int Proto31400129::kRechargeTimesFieldNumber;
const int Proto31400129::kLastRechargeTimeFieldNumber;
const int Proto31400129::kFeedbackAwardsFieldNumber;
const int Proto31400129::kRechargeAwardsFieldNumber;
const int Proto31400129::kOrderFreshTickFieldNumber;
const int Proto31400129::kLatestOrderListFieldNumber;
const int Proto31400129::kPrevOrderListFieldNumber;
const int Proto31400129::kFirstRechargeTimeFieldNumber;
const int Proto31400129::kRechargeMapFieldNumber;
const int Proto31400129::kRechargeTypeFieldNumber;
#endif  // !_MSC_VER

Proto31400129::Proto31400129()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto31400129::InitAsDefaultInstance() {
  recharge_map_ = const_cast< ::ProtoPairMap*>(&::ProtoPairMap::default_instance());
}

Proto31400129::Proto31400129(const Proto31400129& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto31400129::SharedCtor() {
  _cached_size_ = 0;
  recharge_money_ = 0;
  recharge_times_ = 0;
  last_recharge_time_ = 0;
  feedback_awards_ = 0;
  order_fresh_tick_ = 0;
  first_recharge_time_ = GOOGLE_LONGLONG(0);
  recharge_map_ = NULL;
  recharge_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto31400129::~Proto31400129() {
  SharedDtor();
}

void Proto31400129::SharedDtor() {
  if (this != default_instance_) {
    delete recharge_map_;
  }
}

void Proto31400129::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto31400129::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto31400129_descriptor_;
}

const Proto31400129& Proto31400129::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoInner004_2eproto();  return *default_instance_;
}

Proto31400129* Proto31400129::default_instance_ = NULL;

Proto31400129* Proto31400129::New() const {
  return new Proto31400129;
}

void Proto31400129::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    recharge_money_ = 0;
    recharge_times_ = 0;
    last_recharge_time_ = 0;
    feedback_awards_ = 0;
    order_fresh_tick_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    first_recharge_time_ = GOOGLE_LONGLONG(0);
    if (has_recharge_map()) {
      if (recharge_map_ != NULL) recharge_map_->::ProtoPairMap::Clear();
    }
    recharge_type_ = 0;
  }
  recharge_awards_.Clear();
  latest_order_list_.Clear();
  prev_order_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto31400129::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 recharge_money = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recharge_money_)));
          set_has_recharge_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_recharge_times;
        break;
      }
      
      // optional int32 recharge_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recharge_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recharge_times_)));
          set_has_recharge_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_last_recharge_time;
        break;
      }
      
      // optional int32 last_recharge_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last_recharge_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_recharge_time_)));
          set_has_last_recharge_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_feedback_awards;
        break;
      }
      
      // optional int32 feedback_awards = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_feedback_awards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &feedback_awards_)));
          set_has_feedback_awards();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_recharge_awards;
        break;
      }
      
      // repeated int32 recharge_awards = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recharge_awards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_recharge_awards())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_recharge_awards())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_recharge_awards;
        if (input->ExpectTag(48)) goto parse_order_fresh_tick;
        break;
      }
      
      // optional int32 order_fresh_tick = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_order_fresh_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_fresh_tick_)));
          set_has_order_fresh_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_latest_order_list;
        break;
      }
      
      // repeated int32 latest_order_list = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_latest_order_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_latest_order_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_latest_order_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_latest_order_list;
        if (input->ExpectTag(64)) goto parse_prev_order_list;
        break;
      }
      
      // repeated int32 prev_order_list = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_prev_order_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64, input, this->mutable_prev_order_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_prev_order_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_prev_order_list;
        if (input->ExpectTag(72)) goto parse_first_recharge_time;
        break;
      }
      
      // optional int64 first_recharge_time = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_recharge_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &first_recharge_time_)));
          set_has_first_recharge_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_recharge_map;
        break;
      }
      
      // optional .ProtoPairMap recharge_map = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_recharge_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recharge_map()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_recharge_type;
        break;
      }
      
      // optional int32 recharge_type = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recharge_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recharge_type_)));
          set_has_recharge_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto31400129::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 recharge_money = 1;
  if (has_recharge_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->recharge_money(), output);
  }
  
  // optional int32 recharge_times = 2;
  if (has_recharge_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->recharge_times(), output);
  }
  
  // optional int32 last_recharge_time = 3;
  if (has_last_recharge_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->last_recharge_time(), output);
  }
  
  // optional int32 feedback_awards = 4;
  if (has_feedback_awards()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->feedback_awards(), output);
  }
  
  // repeated int32 recharge_awards = 5;
  for (int i = 0; i < this->recharge_awards_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->recharge_awards(i), output);
  }
  
  // optional int32 order_fresh_tick = 6;
  if (has_order_fresh_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->order_fresh_tick(), output);
  }
  
  // repeated int32 latest_order_list = 7;
  for (int i = 0; i < this->latest_order_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->latest_order_list(i), output);
  }
  
  // repeated int32 prev_order_list = 8;
  for (int i = 0; i < this->prev_order_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->prev_order_list(i), output);
  }
  
  // optional int64 first_recharge_time = 9;
  if (has_first_recharge_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->first_recharge_time(), output);
  }
  
  // optional .ProtoPairMap recharge_map = 10;
  if (has_recharge_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->recharge_map(), output);
  }
  
  // optional int32 recharge_type = 11;
  if (has_recharge_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->recharge_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto31400129::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 recharge_money = 1;
  if (has_recharge_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->recharge_money(), target);
  }
  
  // optional int32 recharge_times = 2;
  if (has_recharge_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->recharge_times(), target);
  }
  
  // optional int32 last_recharge_time = 3;
  if (has_last_recharge_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->last_recharge_time(), target);
  }
  
  // optional int32 feedback_awards = 4;
  if (has_feedback_awards()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->feedback_awards(), target);
  }
  
  // repeated int32 recharge_awards = 5;
  for (int i = 0; i < this->recharge_awards_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->recharge_awards(i), target);
  }
  
  // optional int32 order_fresh_tick = 6;
  if (has_order_fresh_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->order_fresh_tick(), target);
  }
  
  // repeated int32 latest_order_list = 7;
  for (int i = 0; i < this->latest_order_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->latest_order_list(i), target);
  }
  
  // repeated int32 prev_order_list = 8;
  for (int i = 0; i < this->prev_order_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(8, this->prev_order_list(i), target);
  }
  
  // optional int64 first_recharge_time = 9;
  if (has_first_recharge_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->first_recharge_time(), target);
  }
  
  // optional .ProtoPairMap recharge_map = 10;
  if (has_recharge_map()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->recharge_map(), target);
  }
  
  // optional int32 recharge_type = 11;
  if (has_recharge_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->recharge_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto31400129::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 recharge_money = 1;
    if (has_recharge_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recharge_money());
    }
    
    // optional int32 recharge_times = 2;
    if (has_recharge_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recharge_times());
    }
    
    // optional int32 last_recharge_time = 3;
    if (has_last_recharge_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_recharge_time());
    }
    
    // optional int32 feedback_awards = 4;
    if (has_feedback_awards()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->feedback_awards());
    }
    
    // optional int32 order_fresh_tick = 6;
    if (has_order_fresh_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order_fresh_tick());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 first_recharge_time = 9;
    if (has_first_recharge_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->first_recharge_time());
    }
    
    // optional .ProtoPairMap recharge_map = 10;
    if (has_recharge_map()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->recharge_map());
    }
    
    // optional int32 recharge_type = 11;
    if (has_recharge_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recharge_type());
    }
    
  }
  // repeated int32 recharge_awards = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->recharge_awards_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->recharge_awards(i));
    }
    total_size += 1 * this->recharge_awards_size() + data_size;
  }
  
  // repeated int32 latest_order_list = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->latest_order_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->latest_order_list(i));
    }
    total_size += 1 * this->latest_order_list_size() + data_size;
  }
  
  // repeated int32 prev_order_list = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->prev_order_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->prev_order_list(i));
    }
    total_size += 1 * this->prev_order_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto31400129::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto31400129* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto31400129*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto31400129::MergeFrom(const Proto31400129& from) {
  GOOGLE_CHECK_NE(&from, this);
  recharge_awards_.MergeFrom(from.recharge_awards_);
  latest_order_list_.MergeFrom(from.latest_order_list_);
  prev_order_list_.MergeFrom(from.prev_order_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recharge_money()) {
      set_recharge_money(from.recharge_money());
    }
    if (from.has_recharge_times()) {
      set_recharge_times(from.recharge_times());
    }
    if (from.has_last_recharge_time()) {
      set_last_recharge_time(from.last_recharge_time());
    }
    if (from.has_feedback_awards()) {
      set_feedback_awards(from.feedback_awards());
    }
    if (from.has_order_fresh_tick()) {
      set_order_fresh_tick(from.order_fresh_tick());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_first_recharge_time()) {
      set_first_recharge_time(from.first_recharge_time());
    }
    if (from.has_recharge_map()) {
      mutable_recharge_map()->::ProtoPairMap::MergeFrom(from.recharge_map());
    }
    if (from.has_recharge_type()) {
      set_recharge_type(from.recharge_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto31400129::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto31400129::CopyFrom(const Proto31400129& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto31400129::IsInitialized() const {
  
  return true;
}

void Proto31400129::Swap(Proto31400129* other) {
  if (other != this) {
    std::swap(recharge_money_, other->recharge_money_);
    std::swap(recharge_times_, other->recharge_times_);
    std::swap(last_recharge_time_, other->last_recharge_time_);
    std::swap(feedback_awards_, other->feedback_awards_);
    recharge_awards_.Swap(&other->recharge_awards_);
    std::swap(order_fresh_tick_, other->order_fresh_tick_);
    latest_order_list_.Swap(&other->latest_order_list_);
    prev_order_list_.Swap(&other->prev_order_list_);
    std::swap(first_recharge_time_, other->first_recharge_time_);
    std::swap(recharge_map_, other->recharge_map_);
    std::swap(recharge_type_, other->recharge_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto31400129::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto31400129_descriptor_;
  metadata.reflection = Proto31400129_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
