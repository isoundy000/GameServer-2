// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient023.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto51400626_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400626_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400627_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400627_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400628_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400628_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400628_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400628_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400664_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400664_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400664_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400664_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100508_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100508_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100509_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100509_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400834_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400834_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400835_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400835_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400805_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400805_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400665_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400665_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101501_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101501_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101502_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101502_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400629_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400629_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100271_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100271_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100271_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100271_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101503_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101503_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101503_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101503_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101504_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101504_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101504_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101504_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80101509_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80101509_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101505_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101505_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101506_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101506_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101507_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101507_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101508_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101508_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101510_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101510_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50101510_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50101510_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101511_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101511_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80101501_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80101501_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101512_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101512_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102062_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102062_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102062_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102062_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102063_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102063_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102063_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102063_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101515_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101515_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10101516_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10101516_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102064_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102064_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102066_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102066_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102065_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102065_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102065_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102065_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102067_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102067_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102068_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102068_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102068_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102068_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102069_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102069_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102069_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102069_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400421_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400421_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102070_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102070_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102071_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102071_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102071_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102071_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient023_2eproto() {
  protobuf_AddDesc_ProtoClient023_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient023.proto");
  GOOGLE_CHECK(file != NULL);
  Proto51400626_descriptor_ = file->message_type(0);
  static const int Proto51400626_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400626, equip_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400626, result_),
  };
  Proto51400626_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400626_descriptor_,
      Proto51400626::default_instance_,
      Proto51400626_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400626, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400626, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400626));
  Proto51400627_descriptor_ = file->message_type(1);
  static const int Proto51400627_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400627, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400627, health_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400627, attack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400627, defense_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400627, attr_add_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400627, fight_force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400627, is_open_sublime_),
  };
  Proto51400627_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400627_descriptor_,
      Proto51400627::default_instance_,
      Proto51400627_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400627, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400627, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400627));
  Proto11400628_descriptor_ = file->message_type(2);
  static const int Proto11400628_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400628, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400628, equip_index_),
  };
  Proto11400628_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400628_descriptor_,
      Proto11400628::default_instance_,
      Proto11400628_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400628, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400628, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400628));
  Proto51400628_descriptor_ = file->message_type(3);
  static const int Proto51400628_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400628, equip_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400628, consume_gem_info_),
  };
  Proto51400628_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400628_descriptor_,
      Proto51400628::default_instance_,
      Proto51400628_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400628, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400628, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400628));
  Proto11400664_descriptor_ = file->message_type(4);
  static const int Proto11400664_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400664, index_),
  };
  Proto11400664_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400664_descriptor_,
      Proto11400664::default_instance_,
      Proto11400664_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400664, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400664, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400664));
  Proto51400664_descriptor_ = file->message_type(5);
  static const int Proto51400664_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400664, nature_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400664, index_),
  };
  Proto51400664_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400664_descriptor_,
      Proto51400664::default_instance_,
      Proto51400664_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400664, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400664, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400664));
  Proto80100508_descriptor_ = file->message_type(6);
  static const int Proto80100508_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100508, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100508, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100508, first_die_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100508, second_die_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100508, first_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100508, second_),
  };
  Proto80100508_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100508_descriptor_,
      Proto80100508::default_instance_,
      Proto80100508_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100508, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100508, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100508));
  Proto80100509_descriptor_ = file->message_type(7);
  static const int Proto80100509_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100509, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100509, win_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100509, lose_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100509, reward_),
  };
  Proto80100509_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100509_descriptor_,
      Proto80100509::default_instance_,
      Proto80100509_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100509, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100509, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100509));
  Proto50400834_descriptor_ = file->message_type(8);
  static const int Proto50400834_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400834, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400834, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400834, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400834, attends_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400834, max_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400834, max_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400834, win_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400834, lose_reward_),
  };
  Proto50400834_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400834_descriptor_,
      Proto50400834::default_instance_,
      Proto50400834_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400834, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400834, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400834));
  Proto50400835_descriptor_ = file->message_type(9);
  static const int Proto50400835_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400835, cur_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400835, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400835, self_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400835, rank_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400835, first_info_),
  };
  Proto50400835_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400835_descriptor_,
      Proto50400835::default_instance_,
      Proto50400835_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400835, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400835, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400835));
  Proto51400805_descriptor_ = file->message_type(10);
  static const int Proto51400805_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400805, des_content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400805, qq_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400805, is_open_),
  };
  Proto51400805_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400805_descriptor_,
      Proto51400805::default_instance_,
      Proto51400805_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400805, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400805, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400805));
  Proto51400665_descriptor_ = file->message_type(11);
  static const int Proto51400665_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400665, equip_info_),
  };
  Proto51400665_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400665_descriptor_,
      Proto51400665::default_instance_,
      Proto51400665_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400665, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400665, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400665));
  Proto50101501_descriptor_ = file->message_type(12);
  static const int Proto50101501_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101501, is_create_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101501, team_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101501, team_force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101501, leader_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101501, teamer_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101501, is_signup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101501, auto_signup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101501, auto_accept_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101501, win_teamer_),
  };
  Proto50101501_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101501_descriptor_,
      Proto50101501::default_instance_,
      Proto50101501_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101501, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101501, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101501));
  Proto10101502_descriptor_ = file->message_type(13);
  static const int Proto10101502_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101502, team_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101502, need_force_),
  };
  Proto10101502_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101502_descriptor_,
      Proto10101502::default_instance_,
      Proto10101502_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101502, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101502, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101502));
  Proto51400629_descriptor_ = file->message_type(14);
  static const int Proto51400629_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400629, result_),
  };
  Proto51400629_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400629_descriptor_,
      Proto51400629::default_instance_,
      Proto51400629_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400629, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400629, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400629));
  Proto10100271_descriptor_ = file->message_type(15);
  static const int Proto10100271_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100271, act_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100271, index_),
  };
  Proto10100271_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100271_descriptor_,
      Proto10100271::default_instance_,
      Proto10100271_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100271, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100271, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100271));
  Proto50100271_descriptor_ = file->message_type(16);
  static const int Proto50100271_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100271, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100271, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100271, act_id_),
  };
  Proto50100271_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100271_descriptor_,
      Proto50100271::default_instance_,
      Proto50100271_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100271, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100271, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100271));
  Proto10101503_descriptor_ = file->message_type(17);
  static const int Proto10101503_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101503, show_no_full_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101503, page_),
  };
  Proto10101503_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101503_descriptor_,
      Proto10101503::default_instance_,
      Proto10101503_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101503, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101503, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101503));
  Proto50101503_descriptor_ = file->message_type(18);
  static const int Proto50101503_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101503, team_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101503, cur_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101503, total_page_),
  };
  Proto50101503_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101503_descriptor_,
      Proto50101503::default_instance_,
      Proto50101503_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101503, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101503, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101503));
  Proto10101504_descriptor_ = file->message_type(19);
  static const int Proto10101504_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101504, team_id_),
  };
  Proto10101504_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101504_descriptor_,
      Proto10101504::default_instance_,
      Proto10101504_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101504, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101504, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101504));
  Proto50101504_descriptor_ = file->message_type(20);
  static const int Proto50101504_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101504, team_id_),
  };
  Proto50101504_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101504_descriptor_,
      Proto50101504::default_instance_,
      Proto50101504_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101504, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101504, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101504));
  Proto80101509_descriptor_ = file->message_type(21);
  static const int Proto80101509_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101509, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101509, team_name_),
  };
  Proto80101509_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80101509_descriptor_,
      Proto80101509::default_instance_,
      Proto80101509_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101509, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101509, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80101509));
  Proto50101505_descriptor_ = file->message_type(22);
  static const int Proto50101505_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101505, teamer_list_),
  };
  Proto50101505_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101505_descriptor_,
      Proto50101505::default_instance_,
      Proto50101505_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101505, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101505, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101505));
  Proto10101506_descriptor_ = file->message_type(23);
  static const int Proto10101506_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101506, apply_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101506, reply_),
  };
  Proto10101506_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101506_descriptor_,
      Proto10101506::default_instance_,
      Proto10101506_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101506, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101506, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101506));
  Proto10101507_descriptor_ = file->message_type(24);
  static const int Proto10101507_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101507, target_id_),
  };
  Proto10101507_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101507_descriptor_,
      Proto10101507::default_instance_,
      Proto10101507_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101507, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101507, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101507));
  Proto10101508_descriptor_ = file->message_type(25);
  static const int Proto10101508_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101508, teamer_id_),
  };
  Proto10101508_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101508_descriptor_,
      Proto10101508::default_instance_,
      Proto10101508_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101508, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101508, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101508));
  Proto10101510_descriptor_ = file->message_type(26);
  static const int Proto10101510_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101510, team_id_),
  };
  Proto10101510_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101510_descriptor_,
      Proto10101510::default_instance_,
      Proto10101510_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101510, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101510, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101510));
  Proto50101510_descriptor_ = file->message_type(27);
  static const int Proto50101510_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101510, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101510, team_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101510, server_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101510, teamer_list_),
  };
  Proto50101510_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50101510_descriptor_,
      Proto50101510::default_instance_,
      Proto50101510_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101510, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50101510, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50101510));
  Proto10101511_descriptor_ = file->message_type(28);
  static const int Proto10101511_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101511, role_id_),
  };
  Proto10101511_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101511_descriptor_,
      Proto10101511::default_instance_,
      Proto10101511_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101511, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101511, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101511));
  Proto80101501_descriptor_ = file->message_type(29);
  static const int Proto80101501_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101501, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101501, team_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101501, leader_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101501, leader_name_),
  };
  Proto80101501_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80101501_descriptor_,
      Proto80101501::default_instance_,
      Proto80101501_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101501, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80101501, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80101501));
  Proto10101512_descriptor_ = file->message_type(30);
  static const int Proto10101512_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101512, team_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101512, reply_type_),
  };
  Proto10101512_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101512_descriptor_,
      Proto10101512::default_instance_,
      Proto10101512_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101512, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101512, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101512));
  Proto10102062_descriptor_ = file->message_type(31);
  static const int Proto10102062_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102062, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102062, type_),
  };
  Proto10102062_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102062_descriptor_,
      Proto10102062::default_instance_,
      Proto10102062_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102062, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102062, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102062));
  Proto50102062_descriptor_ = file->message_type(32);
  static const int Proto50102062_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102062, fish_detail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102062, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102062, type_),
  };
  Proto50102062_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102062_descriptor_,
      Proto50102062::default_instance_,
      Proto50102062_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102062, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102062, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102062));
  Proto10102063_descriptor_ = file->message_type(33);
  static const int Proto10102063_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102063, fish_detail_),
  };
  Proto10102063_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102063_descriptor_,
      Proto10102063::default_instance_,
      Proto10102063_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102063, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102063, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102063));
  Proto50102063_descriptor_ = file->message_type(34);
  static const int Proto50102063_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102063, fish_detail_),
  };
  Proto50102063_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102063_descriptor_,
      Proto50102063::default_instance_,
      Proto50102063_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102063, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102063, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102063));
  Proto10101515_descriptor_ = file->message_type(35);
  static const int Proto10101515_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101515, need_force_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101515, name_),
  };
  Proto10101515_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101515_descriptor_,
      Proto10101515::default_instance_,
      Proto10101515_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101515, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101515, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101515));
  Proto10101516_descriptor_ = file->message_type(36);
  static const int Proto10101516_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101516, auto_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101516, is_auto_),
  };
  Proto10101516_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10101516_descriptor_,
      Proto10101516::default_instance_,
      Proto10101516_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101516, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10101516, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10101516));
  Proto50102064_descriptor_ = file->message_type(37);
  static const int Proto50102064_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102064, fish_detail_),
  };
  Proto50102064_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102064_descriptor_,
      Proto50102064::default_instance_,
      Proto50102064_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102064, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102064, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102064));
  Proto50102066_descriptor_ = file->message_type(38);
  static const int Proto50102066_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102066, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102066, arrive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102066, max_arrive_),
  };
  Proto50102066_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102066_descriptor_,
      Proto50102066::default_instance_,
      Proto50102066_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102066, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102066, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102066));
  Proto10102065_descriptor_ = file->message_type(39);
  static const int Proto10102065_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102065, index_),
  };
  Proto10102065_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102065_descriptor_,
      Proto10102065::default_instance_,
      Proto10102065_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102065, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102065, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102065));
  Proto50102065_descriptor_ = file->message_type(40);
  static const int Proto50102065_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102065, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102065, index_),
  };
  Proto50102065_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102065_descriptor_,
      Proto50102065::default_instance_,
      Proto50102065_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102065, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102065, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102065));
  Proto50102067_descriptor_ = file->message_type(41);
  static const int Proto50102067_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102067, bless_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102067, reward_record_all_server_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102067, reward_record_self_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102067, item_exchange_times_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102067, surplus_time_),
  };
  Proto50102067_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102067_descriptor_,
      Proto50102067::default_instance_,
      Proto50102067_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102067, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102067, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102067));
  Proto10102068_descriptor_ = file->message_type(42);
  static const int Proto10102068_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102068, bless_number_),
  };
  Proto10102068_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102068_descriptor_,
      Proto10102068::default_instance_,
      Proto10102068_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102068, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102068, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102068));
  Proto50102068_descriptor_ = file->message_type(43);
  static const int Proto50102068_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102068, result_),
  };
  Proto50102068_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102068_descriptor_,
      Proto50102068::default_instance_,
      Proto50102068_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102068, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102068, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102068));
  Proto10102069_descriptor_ = file->message_type(44);
  static const int Proto10102069_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102069, exchange_item_id_),
  };
  Proto10102069_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102069_descriptor_,
      Proto10102069::default_instance_,
      Proto10102069_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102069, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102069, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102069));
  Proto50102069_descriptor_ = file->message_type(45);
  static const int Proto50102069_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102069, result_),
  };
  Proto50102069_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102069_descriptor_,
      Proto50102069::default_instance_,
      Proto50102069_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102069, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102069, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102069));
  Proto51400421_descriptor_ = file->message_type(46);
  static const int Proto51400421_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400421, grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400421, prop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400421, open_),
  };
  Proto51400421_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400421_descriptor_,
      Proto51400421::default_instance_,
      Proto51400421_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400421, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400421, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400421));
  Proto10102070_descriptor_ = file->message_type(47);
  static const int Proto10102070_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102070, count_),
  };
  Proto10102070_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102070_descriptor_,
      Proto10102070::default_instance_,
      Proto10102070_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102070, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102070, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102070));
  Proto10102071_descriptor_ = file->message_type(48);
  static const int Proto10102071_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102071, type_),
  };
  Proto10102071_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102071_descriptor_,
      Proto10102071::default_instance_,
      Proto10102071_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102071, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102071, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102071));
  Proto50102071_descriptor_ = file->message_type(49);
  static const int Proto50102071_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102071, ret_),
  };
  Proto50102071_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102071_descriptor_,
      Proto50102071::default_instance_,
      Proto50102071_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102071, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102071, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102071));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient023_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400626_descriptor_, &Proto51400626::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400627_descriptor_, &Proto51400627::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400628_descriptor_, &Proto11400628::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400628_descriptor_, &Proto51400628::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400664_descriptor_, &Proto11400664::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400664_descriptor_, &Proto51400664::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100508_descriptor_, &Proto80100508::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100509_descriptor_, &Proto80100509::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400834_descriptor_, &Proto50400834::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400835_descriptor_, &Proto50400835::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400805_descriptor_, &Proto51400805::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400665_descriptor_, &Proto51400665::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101501_descriptor_, &Proto50101501::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101502_descriptor_, &Proto10101502::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400629_descriptor_, &Proto51400629::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100271_descriptor_, &Proto10100271::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100271_descriptor_, &Proto50100271::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101503_descriptor_, &Proto10101503::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101503_descriptor_, &Proto50101503::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101504_descriptor_, &Proto10101504::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101504_descriptor_, &Proto50101504::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80101509_descriptor_, &Proto80101509::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101505_descriptor_, &Proto50101505::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101506_descriptor_, &Proto10101506::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101507_descriptor_, &Proto10101507::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101508_descriptor_, &Proto10101508::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101510_descriptor_, &Proto10101510::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50101510_descriptor_, &Proto50101510::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101511_descriptor_, &Proto10101511::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80101501_descriptor_, &Proto80101501::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101512_descriptor_, &Proto10101512::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102062_descriptor_, &Proto10102062::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102062_descriptor_, &Proto50102062::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102063_descriptor_, &Proto10102063::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102063_descriptor_, &Proto50102063::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101515_descriptor_, &Proto10101515::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10101516_descriptor_, &Proto10101516::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102064_descriptor_, &Proto50102064::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102066_descriptor_, &Proto50102066::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102065_descriptor_, &Proto10102065::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102065_descriptor_, &Proto50102065::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102067_descriptor_, &Proto50102067::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102068_descriptor_, &Proto10102068::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102068_descriptor_, &Proto50102068::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102069_descriptor_, &Proto10102069::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102069_descriptor_, &Proto50102069::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400421_descriptor_, &Proto51400421::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102070_descriptor_, &Proto10102070::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102071_descriptor_, &Proto10102071::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102071_descriptor_, &Proto50102071::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient023_2eproto() {
  delete Proto51400626::default_instance_;
  delete Proto51400626_reflection_;
  delete Proto51400627::default_instance_;
  delete Proto51400627_reflection_;
  delete Proto11400628::default_instance_;
  delete Proto11400628_reflection_;
  delete Proto51400628::default_instance_;
  delete Proto51400628_reflection_;
  delete Proto11400664::default_instance_;
  delete Proto11400664_reflection_;
  delete Proto51400664::default_instance_;
  delete Proto51400664_reflection_;
  delete Proto80100508::default_instance_;
  delete Proto80100508_reflection_;
  delete Proto80100509::default_instance_;
  delete Proto80100509_reflection_;
  delete Proto50400834::default_instance_;
  delete Proto50400834_reflection_;
  delete Proto50400835::default_instance_;
  delete Proto50400835_reflection_;
  delete Proto51400805::default_instance_;
  delete Proto51400805_reflection_;
  delete Proto51400665::default_instance_;
  delete Proto51400665_reflection_;
  delete Proto50101501::default_instance_;
  delete Proto50101501_reflection_;
  delete Proto10101502::default_instance_;
  delete Proto10101502_reflection_;
  delete Proto51400629::default_instance_;
  delete Proto51400629_reflection_;
  delete Proto10100271::default_instance_;
  delete Proto10100271_reflection_;
  delete Proto50100271::default_instance_;
  delete Proto50100271_reflection_;
  delete Proto10101503::default_instance_;
  delete Proto10101503_reflection_;
  delete Proto50101503::default_instance_;
  delete Proto50101503_reflection_;
  delete Proto10101504::default_instance_;
  delete Proto10101504_reflection_;
  delete Proto50101504::default_instance_;
  delete Proto50101504_reflection_;
  delete Proto80101509::default_instance_;
  delete Proto80101509_reflection_;
  delete Proto50101505::default_instance_;
  delete Proto50101505_reflection_;
  delete Proto10101506::default_instance_;
  delete Proto10101506_reflection_;
  delete Proto10101507::default_instance_;
  delete Proto10101507_reflection_;
  delete Proto10101508::default_instance_;
  delete Proto10101508_reflection_;
  delete Proto10101510::default_instance_;
  delete Proto10101510_reflection_;
  delete Proto50101510::default_instance_;
  delete Proto50101510_reflection_;
  delete Proto10101511::default_instance_;
  delete Proto10101511_reflection_;
  delete Proto80101501::default_instance_;
  delete Proto80101501_reflection_;
  delete Proto10101512::default_instance_;
  delete Proto10101512_reflection_;
  delete Proto10102062::default_instance_;
  delete Proto10102062_reflection_;
  delete Proto50102062::default_instance_;
  delete Proto50102062_reflection_;
  delete Proto10102063::default_instance_;
  delete Proto10102063_reflection_;
  delete Proto50102063::default_instance_;
  delete Proto50102063_reflection_;
  delete Proto10101515::default_instance_;
  delete Proto10101515_reflection_;
  delete Proto10101516::default_instance_;
  delete Proto10101516_reflection_;
  delete Proto50102064::default_instance_;
  delete Proto50102064_reflection_;
  delete Proto50102066::default_instance_;
  delete Proto50102066_reflection_;
  delete Proto10102065::default_instance_;
  delete Proto10102065_reflection_;
  delete Proto50102065::default_instance_;
  delete Proto50102065_reflection_;
  delete Proto50102067::default_instance_;
  delete Proto50102067_reflection_;
  delete Proto10102068::default_instance_;
  delete Proto10102068_reflection_;
  delete Proto50102068::default_instance_;
  delete Proto50102068_reflection_;
  delete Proto10102069::default_instance_;
  delete Proto10102069_reflection_;
  delete Proto50102069::default_instance_;
  delete Proto50102069_reflection_;
  delete Proto51400421::default_instance_;
  delete Proto51400421_reflection_;
  delete Proto10102070::default_instance_;
  delete Proto10102070_reflection_;
  delete Proto10102071::default_instance_;
  delete Proto10102071_reflection_;
  delete Proto50102071::default_instance_;
  delete Proto50102071_reflection_;
}

void protobuf_AddDesc_ProtoClient023_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient023.proto\032\021ProtoPublic.prot"
    "o\"1\n\rProto51400626\022\020\n\010equip_id\030\001 \001(\005\022\016\n\006"
    "result\030\002 \001(\005\"\224\001\n\rProto51400627\022\r\n\005level\030"
    "\001 \001(\005\022\016\n\006health\030\002 \001(\005\022\016\n\006attack\030\003 \001(\005\022\017\n"
    "\007defense\030\004 \001(\005\022\025\n\rattr_add_rate\030\005 \001(\005\022\023\n"
    "\013fight_force\030\006 \001(\005\022\027\n\017is_open_sublime\030\007 "
    "\001(\005\"0\n\rProto11400628\022\n\n\002id\030\001 \001(\005\022\023\n\013equi"
    "p_index\030\002 \001(\005\"J\n\rProto51400628\022\020\n\010equip_"
    "id\030\001 \001(\005\022\'\n\020consume_gem_info\030\002 \003(\0132\r.Pro"
    "toGemInfo\"\036\n\rProto11400664\022\r\n\005index\030\001 \001("
    "\005\"B\n\rProto51400664\022\"\n\nnature_set\030\001 \003(\0132\016"
    ".MoldingNature\022\r\n\005index\030\002 \001(\005\"\237\001\n\rProto8"
    "0100508\022\021\n\tleft_time\030\001 \001(\005\022\r\n\005state\030\002 \001("
    "\005\022\027\n\017first_die_times\030\003 \001(\005\022\030\n\020second_die"
    "_times\030\004 \001(\005\022\033\n\005first\030\005 \003(\0132\014.ProtoLMRol"
    "e\022\034\n\006second\030\006 \003(\0132\014.ProtoLMRole\"f\n\rProto"
    "80100509\022\016\n\006result\030\001 \001(\005\022\031\n\003win\030\002 \003(\0132\014."
    "ProtoLMRole\022\032\n\004lose\030\003 \003(\0132\014.ProtoLMRole\022"
    "\016\n\006reward\030\004 \001(\005\"\237\001\n\rProto50400834\022\r\n\005sta"
    "te\030\001 \001(\005\022\021\n\tleft_time\030\002 \001(\005\022\r\n\005score\030\003 \001"
    "(\005\022\017\n\007attends\030\004 \001(\005\022\020\n\010max_name\030\005 \001(\t\022\021\n"
    "\tmax_score\030\006 \001(\005\022\022\n\nwin_reward\030\007 \001(\005\022\023\n\013"
    "lose_reward\030\010 \001(\005\"\233\001\n\rProto50400835\022\020\n\010c"
    "ur_page\030\001 \001(\005\022\022\n\ntotal_page\030\002 \001(\005\022\037\n\tsel"
    "f_info\030\003 \001(\0132\014.ProtoLMRole\022\037\n\trank_list\030"
    "\004 \003(\0132\014.ProtoLMRole\022\"\n\nfirst_info\030\005 \001(\0132"
    "\016.ProtoRoleInfo\"E\n\rProto51400805\022\023\n\013des_"
    "content\030\001 \001(\t\022\016\n\006qq_num\030\002 \001(\t\022\017\n\007is_open"
    "\030\003 \001(\005\"/\n\rProto51400665\022\036\n\nequip_info\030\001 "
    "\003(\0132\n.ProtoItem\"\342\001\n\rProto50101501\022\021\n\tis_"
    "create\030\001 \001(\005\022\021\n\tteam_name\030\002 \001(\t\022\022\n\nteam_"
    "force\030\003 \001(\005\022\021\n\tleader_id\030\004 \001(\003\022#\n\013teamer"
    "_info\030\005 \003(\0132\016.ProtoRoleInfo\022\021\n\tis_signup"
    "\030\006 \001(\005\022\023\n\013auto_signup\030\007 \001(\005\022\023\n\013auto_acce"
    "pt\030\010 \001(\005\022\"\n\nwin_teamer\030\t \003(\0132\016.ProtoRole"
    "Info\"6\n\rProto10101502\022\021\n\tteam_name\030\001 \001(\t"
    "\022\022\n\nneed_force\030\002 \001(\005\"\037\n\rProto51400629\022\016\n"
    "\006result\030\001 \001(\005\".\n\rProto10100271\022\016\n\006act_id"
    "\030\001 \001(\005\022\r\n\005index\030\002 \001(\005\";\n\rProto50100271\022\013"
    "\n\003ret\030\001 \001(\005\022\r\n\005index\030\002 \001(\005\022\016\n\006act_id\030\003 \001"
    "(\005\"3\n\rProto10101503\022\024\n\014show_no_full\030\001 \001("
    "\005\022\014\n\004page\030\002 \001(\005\"Z\n\rProto50101503\022#\n\tteam"
    "_list\030\001 \003(\0132\020.ProtoTravelTeam\022\020\n\010cur_pag"
    "e\030\002 \001(\005\022\022\n\ntotal_page\030\003 \001(\005\" \n\rProto1010"
    "1504\022\017\n\007team_id\030\001 \001(\003\" \n\rProto50101504\022\017"
    "\n\007team_id\030\001 \001(\003\"0\n\rProto80101509\022\014\n\004type"
    "\030\001 \001(\005\022\021\n\tteam_name\030\002 \001(\t\"2\n\rProto501015"
    "05\022!\n\013teamer_list\030\001 \003(\0132\014.ProtoTeamer\"0\n"
    "\rProto10101506\022\020\n\010apply_id\030\001 \001(\003\022\r\n\005repl"
    "y\030\002 \001(\005\"\"\n\rProto10101507\022\021\n\ttarget_id\030\001 "
    "\001(\003\"\"\n\rProto10101508\022\021\n\tteamer_id\030\001 \001(\003\""
    " \n\rProto10101510\022\017\n\007team_id\030\001 \001(\003\"k\n\rPro"
    "to50101510\022\017\n\007team_id\030\001 \001(\003\022\021\n\tteam_name"
    "\030\002 \001(\t\022\023\n\013server_name\030\003 \001(\t\022!\n\013teamer_li"
    "st\030\004 \003(\0132\014.ProtoTeamer\" \n\rProto10101511\022"
    "\017\n\007role_id\030\001 \001(\003\"[\n\rProto80101501\022\017\n\007tea"
    "m_id\030\001 \001(\003\022\021\n\tteam_name\030\002 \001(\t\022\021\n\tleader_"
    "id\030\003 \001(\003\022\023\n\013leader_name\030\004 \001(\t\"4\n\rProto10"
    "101512\022\017\n\007team_id\030\001 \001(\003\022\022\n\nreply_type\030\002 "
    "\001(\005\",\n\rProto10102062\022\r\n\005index\030\001 \003(\005\022\014\n\004t"
    "ype\030\002 \001(\005\"L\n\rProto50102062\022 \n\013fish_detai"
    "l\030\001 \003(\0132\013.FishDetail\022\013\n\003ret\030\002 \001(\005\022\014\n\004typ"
    "e\030\003 \001(\005\"1\n\rProto10102063\022 \n\013fish_detail\030"
    "\001 \003(\0132\013.FishDetail\"1\n\rProto50102063\022 \n\013f"
    "ish_detail\030\001 \003(\0132\013.FishDetail\"1\n\rProto10"
    "101515\022\022\n\nneed_force\030\001 \001(\005\022\014\n\004name\030\002 \001(\t"
    "\"3\n\rProto10101516\022\021\n\tauto_type\030\001 \001(\005\022\017\n\007"
    "is_auto\030\002 \001(\005\"1\n\rProto50102064\022 \n\013fish_d"
    "etail\030\001 \003(\0132\013.FishDetail\"O\n\rProto5010206"
    "6\022\032\n\004item\030\001 \003(\0132\014.ProtoItemId\022\016\n\006arrive\030"
    "\002 \003(\005\022\022\n\nmax_arrive\030\003 \003(\005\"\036\n\rProto101020"
    "65\022\r\n\005index\030\001 \001(\005\"+\n\rProto50102065\022\013\n\003re"
    "t\030\001 \001(\005\022\r\n\005index\030\002 \001(\005\"\337\001\n\rProto50102067"
    "\022\023\n\013bless_value\030\001 \001(\005\0229\n\035reward_record_a"
    "ll_server_list\030\002 \003(\0132\022.ProtoServerRecord"
    "\022-\n\027reward_record_self_list\030\003 \003(\0132\014.Prot"
    "oItemId\0229\n\030item_exchange_times_list\030\004 \003("
    "\0132\027.ProtoItemExchangeTimes\022\024\n\014surplus_ti"
    "me\030\005 \001(\005\"%\n\rProto10102068\022\024\n\014bless_numbe"
    "r\030\001 \001(\005\"\037\n\rProto50102068\022\016\n\006result\030\001 \001(\005"
    "\")\n\rProto10102069\022\030\n\020exchange_item_id\030\001 "
    "\001(\005\"\037\n\rProto50102069\022\016\n\006result\030\001 \001(\005\"J\n\r"
    "Proto51400421\022\r\n\005grade\030\001 \001(\005\022\034\n\004prop\030\002 \001"
    "(\0132\016.ProtoFightPro\022\014\n\004open\030\003 \001(\005\"\036\n\rProt"
    "o10102070\022\r\n\005count\030\001 \001(\005\"\035\n\rProto1010207"
    "1\022\014\n\004type\030\001 \001(\005\"\034\n\rProto50102071\022\013\n\003ret\030"
    "\001 \001(\005", 3445);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient023.proto", &protobuf_RegisterTypes);
  Proto51400626::default_instance_ = new Proto51400626();
  Proto51400627::default_instance_ = new Proto51400627();
  Proto11400628::default_instance_ = new Proto11400628();
  Proto51400628::default_instance_ = new Proto51400628();
  Proto11400664::default_instance_ = new Proto11400664();
  Proto51400664::default_instance_ = new Proto51400664();
  Proto80100508::default_instance_ = new Proto80100508();
  Proto80100509::default_instance_ = new Proto80100509();
  Proto50400834::default_instance_ = new Proto50400834();
  Proto50400835::default_instance_ = new Proto50400835();
  Proto51400805::default_instance_ = new Proto51400805();
  Proto51400665::default_instance_ = new Proto51400665();
  Proto50101501::default_instance_ = new Proto50101501();
  Proto10101502::default_instance_ = new Proto10101502();
  Proto51400629::default_instance_ = new Proto51400629();
  Proto10100271::default_instance_ = new Proto10100271();
  Proto50100271::default_instance_ = new Proto50100271();
  Proto10101503::default_instance_ = new Proto10101503();
  Proto50101503::default_instance_ = new Proto50101503();
  Proto10101504::default_instance_ = new Proto10101504();
  Proto50101504::default_instance_ = new Proto50101504();
  Proto80101509::default_instance_ = new Proto80101509();
  Proto50101505::default_instance_ = new Proto50101505();
  Proto10101506::default_instance_ = new Proto10101506();
  Proto10101507::default_instance_ = new Proto10101507();
  Proto10101508::default_instance_ = new Proto10101508();
  Proto10101510::default_instance_ = new Proto10101510();
  Proto50101510::default_instance_ = new Proto50101510();
  Proto10101511::default_instance_ = new Proto10101511();
  Proto80101501::default_instance_ = new Proto80101501();
  Proto10101512::default_instance_ = new Proto10101512();
  Proto10102062::default_instance_ = new Proto10102062();
  Proto50102062::default_instance_ = new Proto50102062();
  Proto10102063::default_instance_ = new Proto10102063();
  Proto50102063::default_instance_ = new Proto50102063();
  Proto10101515::default_instance_ = new Proto10101515();
  Proto10101516::default_instance_ = new Proto10101516();
  Proto50102064::default_instance_ = new Proto50102064();
  Proto50102066::default_instance_ = new Proto50102066();
  Proto10102065::default_instance_ = new Proto10102065();
  Proto50102065::default_instance_ = new Proto50102065();
  Proto50102067::default_instance_ = new Proto50102067();
  Proto10102068::default_instance_ = new Proto10102068();
  Proto50102068::default_instance_ = new Proto50102068();
  Proto10102069::default_instance_ = new Proto10102069();
  Proto50102069::default_instance_ = new Proto50102069();
  Proto51400421::default_instance_ = new Proto51400421();
  Proto10102070::default_instance_ = new Proto10102070();
  Proto10102071::default_instance_ = new Proto10102071();
  Proto50102071::default_instance_ = new Proto50102071();
  Proto51400626::default_instance_->InitAsDefaultInstance();
  Proto51400627::default_instance_->InitAsDefaultInstance();
  Proto11400628::default_instance_->InitAsDefaultInstance();
  Proto51400628::default_instance_->InitAsDefaultInstance();
  Proto11400664::default_instance_->InitAsDefaultInstance();
  Proto51400664::default_instance_->InitAsDefaultInstance();
  Proto80100508::default_instance_->InitAsDefaultInstance();
  Proto80100509::default_instance_->InitAsDefaultInstance();
  Proto50400834::default_instance_->InitAsDefaultInstance();
  Proto50400835::default_instance_->InitAsDefaultInstance();
  Proto51400805::default_instance_->InitAsDefaultInstance();
  Proto51400665::default_instance_->InitAsDefaultInstance();
  Proto50101501::default_instance_->InitAsDefaultInstance();
  Proto10101502::default_instance_->InitAsDefaultInstance();
  Proto51400629::default_instance_->InitAsDefaultInstance();
  Proto10100271::default_instance_->InitAsDefaultInstance();
  Proto50100271::default_instance_->InitAsDefaultInstance();
  Proto10101503::default_instance_->InitAsDefaultInstance();
  Proto50101503::default_instance_->InitAsDefaultInstance();
  Proto10101504::default_instance_->InitAsDefaultInstance();
  Proto50101504::default_instance_->InitAsDefaultInstance();
  Proto80101509::default_instance_->InitAsDefaultInstance();
  Proto50101505::default_instance_->InitAsDefaultInstance();
  Proto10101506::default_instance_->InitAsDefaultInstance();
  Proto10101507::default_instance_->InitAsDefaultInstance();
  Proto10101508::default_instance_->InitAsDefaultInstance();
  Proto10101510::default_instance_->InitAsDefaultInstance();
  Proto50101510::default_instance_->InitAsDefaultInstance();
  Proto10101511::default_instance_->InitAsDefaultInstance();
  Proto80101501::default_instance_->InitAsDefaultInstance();
  Proto10101512::default_instance_->InitAsDefaultInstance();
  Proto10102062::default_instance_->InitAsDefaultInstance();
  Proto50102062::default_instance_->InitAsDefaultInstance();
  Proto10102063::default_instance_->InitAsDefaultInstance();
  Proto50102063::default_instance_->InitAsDefaultInstance();
  Proto10101515::default_instance_->InitAsDefaultInstance();
  Proto10101516::default_instance_->InitAsDefaultInstance();
  Proto50102064::default_instance_->InitAsDefaultInstance();
  Proto50102066::default_instance_->InitAsDefaultInstance();
  Proto10102065::default_instance_->InitAsDefaultInstance();
  Proto50102065::default_instance_->InitAsDefaultInstance();
  Proto50102067::default_instance_->InitAsDefaultInstance();
  Proto10102068::default_instance_->InitAsDefaultInstance();
  Proto50102068::default_instance_->InitAsDefaultInstance();
  Proto10102069::default_instance_->InitAsDefaultInstance();
  Proto50102069::default_instance_->InitAsDefaultInstance();
  Proto51400421::default_instance_->InitAsDefaultInstance();
  Proto10102070::default_instance_->InitAsDefaultInstance();
  Proto10102071::default_instance_->InitAsDefaultInstance();
  Proto50102071::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient023_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient023_2eproto {
  StaticDescriptorInitializer_ProtoClient023_2eproto() {
    protobuf_AddDesc_ProtoClient023_2eproto();
  }
} static_descriptor_initializer_ProtoClient023_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto51400626::kEquipIdFieldNumber;
const int Proto51400626::kResultFieldNumber;
#endif  // !_MSC_VER

Proto51400626::Proto51400626()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400626::InitAsDefaultInstance() {
}

Proto51400626::Proto51400626(const Proto51400626& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400626::SharedCtor() {
  _cached_size_ = 0;
  equip_id_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400626::~Proto51400626() {
  SharedDtor();
}

void Proto51400626::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400626::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400626::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400626_descriptor_;
}

const Proto51400626& Proto51400626::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto51400626* Proto51400626::default_instance_ = NULL;

Proto51400626* Proto51400626::New() const {
  return new Proto51400626;
}

void Proto51400626::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    equip_id_ = 0;
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400626::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 equip_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equip_id_)));
          set_has_equip_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_result;
        break;
      }
      
      // optional int32 result = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400626::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 equip_id = 1;
  if (has_equip_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->equip_id(), output);
  }
  
  // optional int32 result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->result(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400626::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 equip_id = 1;
  if (has_equip_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->equip_id(), target);
  }
  
  // optional int32 result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->result(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400626::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 equip_id = 1;
    if (has_equip_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equip_id());
    }
    
    // optional int32 result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400626::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400626* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400626*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400626::MergeFrom(const Proto51400626& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equip_id()) {
      set_equip_id(from.equip_id());
    }
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400626::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400626::CopyFrom(const Proto51400626& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400626::IsInitialized() const {
  
  return true;
}

void Proto51400626::Swap(Proto51400626* other) {
  if (other != this) {
    std::swap(equip_id_, other->equip_id_);
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400626::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400626_descriptor_;
  metadata.reflection = Proto51400626_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400627::kLevelFieldNumber;
const int Proto51400627::kHealthFieldNumber;
const int Proto51400627::kAttackFieldNumber;
const int Proto51400627::kDefenseFieldNumber;
const int Proto51400627::kAttrAddRateFieldNumber;
const int Proto51400627::kFightForceFieldNumber;
const int Proto51400627::kIsOpenSublimeFieldNumber;
#endif  // !_MSC_VER

Proto51400627::Proto51400627()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400627::InitAsDefaultInstance() {
}

Proto51400627::Proto51400627(const Proto51400627& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400627::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  health_ = 0;
  attack_ = 0;
  defense_ = 0;
  attr_add_rate_ = 0;
  fight_force_ = 0;
  is_open_sublime_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400627::~Proto51400627() {
  SharedDtor();
}

void Proto51400627::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400627::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400627::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400627_descriptor_;
}

const Proto51400627& Proto51400627::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto51400627* Proto51400627::default_instance_ = NULL;

Proto51400627* Proto51400627::New() const {
  return new Proto51400627;
}

void Proto51400627::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    health_ = 0;
    attack_ = 0;
    defense_ = 0;
    attr_add_rate_ = 0;
    fight_force_ = 0;
    is_open_sublime_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400627::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_health;
        break;
      }
      
      // optional int32 health = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_health:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &health_)));
          set_has_health();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_attack;
        break;
      }
      
      // optional int32 attack = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attack_)));
          set_has_attack();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_defense;
        break;
      }
      
      // optional int32 defense = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_defense:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &defense_)));
          set_has_defense();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_attr_add_rate;
        break;
      }
      
      // optional int32 attr_add_rate = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attr_add_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attr_add_rate_)));
          set_has_attr_add_rate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_fight_force;
        break;
      }
      
      // optional int32 fight_force = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fight_force_)));
          set_has_fight_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_is_open_sublime;
        break;
      }
      
      // optional int32 is_open_sublime = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_open_sublime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_open_sublime_)));
          set_has_is_open_sublime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400627::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }
  
  // optional int32 health = 2;
  if (has_health()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->health(), output);
  }
  
  // optional int32 attack = 3;
  if (has_attack()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->attack(), output);
  }
  
  // optional int32 defense = 4;
  if (has_defense()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->defense(), output);
  }
  
  // optional int32 attr_add_rate = 5;
  if (has_attr_add_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->attr_add_rate(), output);
  }
  
  // optional int32 fight_force = 6;
  if (has_fight_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->fight_force(), output);
  }
  
  // optional int32 is_open_sublime = 7;
  if (has_is_open_sublime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->is_open_sublime(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400627::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }
  
  // optional int32 health = 2;
  if (has_health()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->health(), target);
  }
  
  // optional int32 attack = 3;
  if (has_attack()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->attack(), target);
  }
  
  // optional int32 defense = 4;
  if (has_defense()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->defense(), target);
  }
  
  // optional int32 attr_add_rate = 5;
  if (has_attr_add_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->attr_add_rate(), target);
  }
  
  // optional int32 fight_force = 6;
  if (has_fight_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->fight_force(), target);
  }
  
  // optional int32 is_open_sublime = 7;
  if (has_is_open_sublime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->is_open_sublime(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400627::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 health = 2;
    if (has_health()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->health());
    }
    
    // optional int32 attack = 3;
    if (has_attack()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attack());
    }
    
    // optional int32 defense = 4;
    if (has_defense()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->defense());
    }
    
    // optional int32 attr_add_rate = 5;
    if (has_attr_add_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attr_add_rate());
    }
    
    // optional int32 fight_force = 6;
    if (has_fight_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fight_force());
    }
    
    // optional int32 is_open_sublime = 7;
    if (has_is_open_sublime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_open_sublime());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400627::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400627* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400627*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400627::MergeFrom(const Proto51400627& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_health()) {
      set_health(from.health());
    }
    if (from.has_attack()) {
      set_attack(from.attack());
    }
    if (from.has_defense()) {
      set_defense(from.defense());
    }
    if (from.has_attr_add_rate()) {
      set_attr_add_rate(from.attr_add_rate());
    }
    if (from.has_fight_force()) {
      set_fight_force(from.fight_force());
    }
    if (from.has_is_open_sublime()) {
      set_is_open_sublime(from.is_open_sublime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400627::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400627::CopyFrom(const Proto51400627& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400627::IsInitialized() const {
  
  return true;
}

void Proto51400627::Swap(Proto51400627* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(health_, other->health_);
    std::swap(attack_, other->attack_);
    std::swap(defense_, other->defense_);
    std::swap(attr_add_rate_, other->attr_add_rate_);
    std::swap(fight_force_, other->fight_force_);
    std::swap(is_open_sublime_, other->is_open_sublime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400627::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400627_descriptor_;
  metadata.reflection = Proto51400627_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400628::kIdFieldNumber;
const int Proto11400628::kEquipIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400628::Proto11400628()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400628::InitAsDefaultInstance() {
}

Proto11400628::Proto11400628(const Proto11400628& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400628::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  equip_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400628::~Proto11400628() {
  SharedDtor();
}

void Proto11400628::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400628::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400628::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400628_descriptor_;
}

const Proto11400628& Proto11400628::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto11400628* Proto11400628::default_instance_ = NULL;

Proto11400628* Proto11400628::New() const {
  return new Proto11400628;
}

void Proto11400628::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    equip_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400628::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_equip_index;
        break;
      }
      
      // optional int32 equip_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_equip_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equip_index_)));
          set_has_equip_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400628::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional int32 equip_index = 2;
  if (has_equip_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->equip_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400628::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional int32 equip_index = 2;
  if (has_equip_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->equip_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400628::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional int32 equip_index = 2;
    if (has_equip_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equip_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400628::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400628* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400628*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400628::MergeFrom(const Proto11400628& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_equip_index()) {
      set_equip_index(from.equip_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400628::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400628::CopyFrom(const Proto11400628& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400628::IsInitialized() const {
  
  return true;
}

void Proto11400628::Swap(Proto11400628* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(equip_index_, other->equip_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400628::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400628_descriptor_;
  metadata.reflection = Proto11400628_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400628::kEquipIdFieldNumber;
const int Proto51400628::kConsumeGemInfoFieldNumber;
#endif  // !_MSC_VER

Proto51400628::Proto51400628()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400628::InitAsDefaultInstance() {
}

Proto51400628::Proto51400628(const Proto51400628& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400628::SharedCtor() {
  _cached_size_ = 0;
  equip_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400628::~Proto51400628() {
  SharedDtor();
}

void Proto51400628::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400628::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400628::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400628_descriptor_;
}

const Proto51400628& Proto51400628::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto51400628* Proto51400628::default_instance_ = NULL;

Proto51400628* Proto51400628::New() const {
  return new Proto51400628;
}

void Proto51400628::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    equip_id_ = 0;
  }
  consume_gem_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400628::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 equip_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equip_id_)));
          set_has_equip_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_consume_gem_info;
        break;
      }
      
      // repeated .ProtoGemInfo consume_gem_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_consume_gem_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_consume_gem_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_consume_gem_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400628::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 equip_id = 1;
  if (has_equip_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->equip_id(), output);
  }
  
  // repeated .ProtoGemInfo consume_gem_info = 2;
  for (int i = 0; i < this->consume_gem_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->consume_gem_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400628::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 equip_id = 1;
  if (has_equip_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->equip_id(), target);
  }
  
  // repeated .ProtoGemInfo consume_gem_info = 2;
  for (int i = 0; i < this->consume_gem_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->consume_gem_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400628::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 equip_id = 1;
    if (has_equip_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equip_id());
    }
    
  }
  // repeated .ProtoGemInfo consume_gem_info = 2;
  total_size += 1 * this->consume_gem_info_size();
  for (int i = 0; i < this->consume_gem_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->consume_gem_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400628::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400628* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400628*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400628::MergeFrom(const Proto51400628& from) {
  GOOGLE_CHECK_NE(&from, this);
  consume_gem_info_.MergeFrom(from.consume_gem_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equip_id()) {
      set_equip_id(from.equip_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400628::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400628::CopyFrom(const Proto51400628& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400628::IsInitialized() const {
  
  return true;
}

void Proto51400628::Swap(Proto51400628* other) {
  if (other != this) {
    std::swap(equip_id_, other->equip_id_);
    consume_gem_info_.Swap(&other->consume_gem_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400628::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400628_descriptor_;
  metadata.reflection = Proto51400628_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400664::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto11400664::Proto11400664()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400664::InitAsDefaultInstance() {
}

Proto11400664::Proto11400664(const Proto11400664& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400664::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400664::~Proto11400664() {
  SharedDtor();
}

void Proto11400664::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400664::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400664::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400664_descriptor_;
}

const Proto11400664& Proto11400664::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto11400664* Proto11400664::default_instance_ = NULL;

Proto11400664* Proto11400664::New() const {
  return new Proto11400664;
}

void Proto11400664::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400664::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400664::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400664::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400664::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400664::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400664* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400664*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400664::MergeFrom(const Proto11400664& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400664::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400664::CopyFrom(const Proto11400664& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400664::IsInitialized() const {
  
  return true;
}

void Proto11400664::Swap(Proto11400664* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400664::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400664_descriptor_;
  metadata.reflection = Proto11400664_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400664::kNatureSetFieldNumber;
const int Proto51400664::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto51400664::Proto51400664()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400664::InitAsDefaultInstance() {
}

Proto51400664::Proto51400664(const Proto51400664& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400664::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400664::~Proto51400664() {
  SharedDtor();
}

void Proto51400664::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400664::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400664::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400664_descriptor_;
}

const Proto51400664& Proto51400664::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto51400664* Proto51400664::default_instance_ = NULL;

Proto51400664* Proto51400664::New() const {
  return new Proto51400664;
}

void Proto51400664::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    index_ = 0;
  }
  nature_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400664::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MoldingNature nature_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nature_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nature_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_nature_set;
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }
      
      // optional int32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400664::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .MoldingNature nature_set = 1;
  for (int i = 0; i < this->nature_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nature_set(i), output);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400664::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .MoldingNature nature_set = 1;
  for (int i = 0; i < this->nature_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->nature_set(i), target);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400664::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  // repeated .MoldingNature nature_set = 1;
  total_size += 1 * this->nature_set_size();
  for (int i = 0; i < this->nature_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nature_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400664::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400664* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400664*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400664::MergeFrom(const Proto51400664& from) {
  GOOGLE_CHECK_NE(&from, this);
  nature_set_.MergeFrom(from.nature_set_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400664::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400664::CopyFrom(const Proto51400664& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400664::IsInitialized() const {
  
  return true;
}

void Proto51400664::Swap(Proto51400664* other) {
  if (other != this) {
    nature_set_.Swap(&other->nature_set_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400664::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400664_descriptor_;
  metadata.reflection = Proto51400664_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100508::kLeftTimeFieldNumber;
const int Proto80100508::kStateFieldNumber;
const int Proto80100508::kFirstDieTimesFieldNumber;
const int Proto80100508::kSecondDieTimesFieldNumber;
const int Proto80100508::kFirstFieldNumber;
const int Proto80100508::kSecondFieldNumber;
#endif  // !_MSC_VER

Proto80100508::Proto80100508()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100508::InitAsDefaultInstance() {
}

Proto80100508::Proto80100508(const Proto80100508& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100508::SharedCtor() {
  _cached_size_ = 0;
  left_time_ = 0;
  state_ = 0;
  first_die_times_ = 0;
  second_die_times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100508::~Proto80100508() {
  SharedDtor();
}

void Proto80100508::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80100508::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100508::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100508_descriptor_;
}

const Proto80100508& Proto80100508::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto80100508* Proto80100508::default_instance_ = NULL;

Proto80100508* Proto80100508::New() const {
  return new Proto80100508;
}

void Proto80100508::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_time_ = 0;
    state_ = 0;
    first_die_times_ = 0;
    second_die_times_ = 0;
  }
  first_.Clear();
  second_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100508::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }
      
      // optional int32 state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_first_die_times;
        break;
      }
      
      // optional int32 first_die_times = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_die_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_die_times_)));
          set_has_first_die_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_second_die_times;
        break;
      }
      
      // optional int32 second_die_times = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_die_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_die_times_)));
          set_has_second_die_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_first;
        break;
      }
      
      // repeated .ProtoLMRole first = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_first:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_first()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_first;
        if (input->ExpectTag(50)) goto parse_second;
        break;
      }
      
      // repeated .ProtoLMRole second = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_second:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_second()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_second;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100508::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_time = 1;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_time(), output);
  }
  
  // optional int32 state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->state(), output);
  }
  
  // optional int32 first_die_times = 3;
  if (has_first_die_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->first_die_times(), output);
  }
  
  // optional int32 second_die_times = 4;
  if (has_second_die_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->second_die_times(), output);
  }
  
  // repeated .ProtoLMRole first = 5;
  for (int i = 0; i < this->first_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->first(i), output);
  }
  
  // repeated .ProtoLMRole second = 6;
  for (int i = 0; i < this->second_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->second(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100508::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_time = 1;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_time(), target);
  }
  
  // optional int32 state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->state(), target);
  }
  
  // optional int32 first_die_times = 3;
  if (has_first_die_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->first_die_times(), target);
  }
  
  // optional int32 second_die_times = 4;
  if (has_second_die_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->second_die_times(), target);
  }
  
  // repeated .ProtoLMRole first = 5;
  for (int i = 0; i < this->first_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->first(i), target);
  }
  
  // repeated .ProtoLMRole second = 6;
  for (int i = 0; i < this->second_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->second(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100508::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_time = 1;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
    // optional int32 first_die_times = 3;
    if (has_first_die_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_die_times());
    }
    
    // optional int32 second_die_times = 4;
    if (has_second_die_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_die_times());
    }
    
  }
  // repeated .ProtoLMRole first = 5;
  total_size += 1 * this->first_size();
  for (int i = 0; i < this->first_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->first(i));
  }
  
  // repeated .ProtoLMRole second = 6;
  total_size += 1 * this->second_size();
  for (int i = 0; i < this->second_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->second(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100508::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100508* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100508*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100508::MergeFrom(const Proto80100508& from) {
  GOOGLE_CHECK_NE(&from, this);
  first_.MergeFrom(from.first_);
  second_.MergeFrom(from.second_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_first_die_times()) {
      set_first_die_times(from.first_die_times());
    }
    if (from.has_second_die_times()) {
      set_second_die_times(from.second_die_times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100508::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100508::CopyFrom(const Proto80100508& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100508::IsInitialized() const {
  
  return true;
}

void Proto80100508::Swap(Proto80100508* other) {
  if (other != this) {
    std::swap(left_time_, other->left_time_);
    std::swap(state_, other->state_);
    std::swap(first_die_times_, other->first_die_times_);
    std::swap(second_die_times_, other->second_die_times_);
    first_.Swap(&other->first_);
    second_.Swap(&other->second_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100508::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100508_descriptor_;
  metadata.reflection = Proto80100508_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100509::kResultFieldNumber;
const int Proto80100509::kWinFieldNumber;
const int Proto80100509::kLoseFieldNumber;
const int Proto80100509::kRewardFieldNumber;
#endif  // !_MSC_VER

Proto80100509::Proto80100509()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100509::InitAsDefaultInstance() {
}

Proto80100509::Proto80100509(const Proto80100509& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100509::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  reward_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100509::~Proto80100509() {
  SharedDtor();
}

void Proto80100509::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80100509::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100509::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100509_descriptor_;
}

const Proto80100509& Proto80100509::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto80100509* Proto80100509::default_instance_ = NULL;

Proto80100509* Proto80100509::New() const {
  return new Proto80100509;
}

void Proto80100509::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
    reward_ = 0;
  }
  win_.Clear();
  lose_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100509::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_win;
        break;
      }
      
      // repeated .ProtoLMRole win = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_win:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_win()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_win;
        if (input->ExpectTag(26)) goto parse_lose;
        break;
      }
      
      // repeated .ProtoLMRole lose = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lose:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lose()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_lose;
        if (input->ExpectTag(32)) goto parse_reward;
        break;
      }
      
      // optional int32 reward = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_)));
          set_has_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100509::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  // repeated .ProtoLMRole win = 2;
  for (int i = 0; i < this->win_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->win(i), output);
  }
  
  // repeated .ProtoLMRole lose = 3;
  for (int i = 0; i < this->lose_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->lose(i), output);
  }
  
  // optional int32 reward = 4;
  if (has_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->reward(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100509::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  // repeated .ProtoLMRole win = 2;
  for (int i = 0; i < this->win_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->win(i), target);
  }
  
  // repeated .ProtoLMRole lose = 3;
  for (int i = 0; i < this->lose_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->lose(i), target);
  }
  
  // optional int32 reward = 4;
  if (has_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->reward(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100509::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
    // optional int32 reward = 4;
    if (has_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward());
    }
    
  }
  // repeated .ProtoLMRole win = 2;
  total_size += 1 * this->win_size();
  for (int i = 0; i < this->win_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->win(i));
  }
  
  // repeated .ProtoLMRole lose = 3;
  total_size += 1 * this->lose_size();
  for (int i = 0; i < this->lose_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lose(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100509::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100509* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100509*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100509::MergeFrom(const Proto80100509& from) {
  GOOGLE_CHECK_NE(&from, this);
  win_.MergeFrom(from.win_);
  lose_.MergeFrom(from.lose_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_reward()) {
      set_reward(from.reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100509::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100509::CopyFrom(const Proto80100509& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100509::IsInitialized() const {
  
  return true;
}

void Proto80100509::Swap(Proto80100509* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    win_.Swap(&other->win_);
    lose_.Swap(&other->lose_);
    std::swap(reward_, other->reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100509::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100509_descriptor_;
  metadata.reflection = Proto80100509_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400834::kStateFieldNumber;
const int Proto50400834::kLeftTimeFieldNumber;
const int Proto50400834::kScoreFieldNumber;
const int Proto50400834::kAttendsFieldNumber;
const int Proto50400834::kMaxNameFieldNumber;
const int Proto50400834::kMaxScoreFieldNumber;
const int Proto50400834::kWinRewardFieldNumber;
const int Proto50400834::kLoseRewardFieldNumber;
#endif  // !_MSC_VER

Proto50400834::Proto50400834()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400834::InitAsDefaultInstance() {
}

Proto50400834::Proto50400834(const Proto50400834& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400834::SharedCtor() {
  _cached_size_ = 0;
  state_ = 0;
  left_time_ = 0;
  score_ = 0;
  attends_ = 0;
  max_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  max_score_ = 0;
  win_reward_ = 0;
  lose_reward_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400834::~Proto50400834() {
  SharedDtor();
}

void Proto50400834::SharedDtor() {
  if (max_name_ != &::google::protobuf::internal::kEmptyString) {
    delete max_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto50400834::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400834::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400834_descriptor_;
}

const Proto50400834& Proto50400834::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto50400834* Proto50400834::default_instance_ = NULL;

Proto50400834* Proto50400834::New() const {
  return new Proto50400834;
}

void Proto50400834::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    state_ = 0;
    left_time_ = 0;
    score_ = 0;
    attends_ = 0;
    if (has_max_name()) {
      if (max_name_ != &::google::protobuf::internal::kEmptyString) {
        max_name_->clear();
      }
    }
    max_score_ = 0;
    win_reward_ = 0;
    lose_reward_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400834::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 state = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_)));
          set_has_state();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_score;
        break;
      }
      
      // optional int32 score = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_attends;
        break;
      }
      
      // optional int32 attends = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_attends:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attends_)));
          set_has_attends();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_max_name;
        break;
      }
      
      // optional string max_name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_max_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_max_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->max_name().data(), this->max_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_max_score;
        break;
      }
      
      // optional int32 max_score = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_score_)));
          set_has_max_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_win_reward;
        break;
      }
      
      // optional int32 win_reward = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_win_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &win_reward_)));
          set_has_win_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_lose_reward;
        break;
      }
      
      // optional int32 lose_reward = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lose_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lose_reward_)));
          set_has_lose_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400834::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 state = 1;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->state(), output);
  }
  
  // optional int32 left_time = 2;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_time(), output);
  }
  
  // optional int32 score = 3;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->score(), output);
  }
  
  // optional int32 attends = 4;
  if (has_attends()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->attends(), output);
  }
  
  // optional string max_name = 5;
  if (has_max_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->max_name().data(), this->max_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->max_name(), output);
  }
  
  // optional int32 max_score = 6;
  if (has_max_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->max_score(), output);
  }
  
  // optional int32 win_reward = 7;
  if (has_win_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->win_reward(), output);
  }
  
  // optional int32 lose_reward = 8;
  if (has_lose_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->lose_reward(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400834::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 state = 1;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->state(), target);
  }
  
  // optional int32 left_time = 2;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_time(), target);
  }
  
  // optional int32 score = 3;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->score(), target);
  }
  
  // optional int32 attends = 4;
  if (has_attends()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->attends(), target);
  }
  
  // optional string max_name = 5;
  if (has_max_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->max_name().data(), this->max_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->max_name(), target);
  }
  
  // optional int32 max_score = 6;
  if (has_max_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->max_score(), target);
  }
  
  // optional int32 win_reward = 7;
  if (has_win_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->win_reward(), target);
  }
  
  // optional int32 lose_reward = 8;
  if (has_lose_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->lose_reward(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400834::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 state = 1;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->state());
    }
    
    // optional int32 left_time = 2;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 score = 3;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }
    
    // optional int32 attends = 4;
    if (has_attends()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->attends());
    }
    
    // optional string max_name = 5;
    if (has_max_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->max_name());
    }
    
    // optional int32 max_score = 6;
    if (has_max_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_score());
    }
    
    // optional int32 win_reward = 7;
    if (has_win_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->win_reward());
    }
    
    // optional int32 lose_reward = 8;
    if (has_lose_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lose_reward());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400834::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400834* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400834*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400834::MergeFrom(const Proto50400834& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_attends()) {
      set_attends(from.attends());
    }
    if (from.has_max_name()) {
      set_max_name(from.max_name());
    }
    if (from.has_max_score()) {
      set_max_score(from.max_score());
    }
    if (from.has_win_reward()) {
      set_win_reward(from.win_reward());
    }
    if (from.has_lose_reward()) {
      set_lose_reward(from.lose_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400834::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400834::CopyFrom(const Proto50400834& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400834::IsInitialized() const {
  
  return true;
}

void Proto50400834::Swap(Proto50400834* other) {
  if (other != this) {
    std::swap(state_, other->state_);
    std::swap(left_time_, other->left_time_);
    std::swap(score_, other->score_);
    std::swap(attends_, other->attends_);
    std::swap(max_name_, other->max_name_);
    std::swap(max_score_, other->max_score_);
    std::swap(win_reward_, other->win_reward_);
    std::swap(lose_reward_, other->lose_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400834::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400834_descriptor_;
  metadata.reflection = Proto50400834_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400835::kCurPageFieldNumber;
const int Proto50400835::kTotalPageFieldNumber;
const int Proto50400835::kSelfInfoFieldNumber;
const int Proto50400835::kRankListFieldNumber;
const int Proto50400835::kFirstInfoFieldNumber;
#endif  // !_MSC_VER

Proto50400835::Proto50400835()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400835::InitAsDefaultInstance() {
  self_info_ = const_cast< ::ProtoLMRole*>(&::ProtoLMRole::default_instance());
  first_info_ = const_cast< ::ProtoRoleInfo*>(&::ProtoRoleInfo::default_instance());
}

Proto50400835::Proto50400835(const Proto50400835& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400835::SharedCtor() {
  _cached_size_ = 0;
  cur_page_ = 0;
  total_page_ = 0;
  self_info_ = NULL;
  first_info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400835::~Proto50400835() {
  SharedDtor();
}

void Proto50400835::SharedDtor() {
  if (this != default_instance_) {
    delete self_info_;
    delete first_info_;
  }
}

void Proto50400835::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400835::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400835_descriptor_;
}

const Proto50400835& Proto50400835::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto50400835* Proto50400835::default_instance_ = NULL;

Proto50400835* Proto50400835::New() const {
  return new Proto50400835;
}

void Proto50400835::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cur_page_ = 0;
    total_page_ = 0;
    if (has_self_info()) {
      if (self_info_ != NULL) self_info_->::ProtoLMRole::Clear();
    }
    if (has_first_info()) {
      if (first_info_ != NULL) first_info_->::ProtoRoleInfo::Clear();
    }
  }
  rank_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400835::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cur_page = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_page_)));
          set_has_cur_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_self_info;
        break;
      }
      
      // optional .ProtoLMRole self_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_self_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_rank_list;
        break;
      }
      
      // repeated .ProtoLMRole rank_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_rank_list;
        if (input->ExpectTag(42)) goto parse_first_info;
        break;
      }
      
      // optional .ProtoRoleInfo first_info = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_first_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_first_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400835::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cur_page = 1;
  if (has_cur_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cur_page(), output);
  }
  
  // optional int32 total_page = 2;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_page(), output);
  }
  
  // optional .ProtoLMRole self_info = 3;
  if (has_self_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->self_info(), output);
  }
  
  // repeated .ProtoLMRole rank_list = 4;
  for (int i = 0; i < this->rank_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->rank_list(i), output);
  }
  
  // optional .ProtoRoleInfo first_info = 5;
  if (has_first_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->first_info(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400835::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cur_page = 1;
  if (has_cur_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cur_page(), target);
  }
  
  // optional int32 total_page = 2;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_page(), target);
  }
  
  // optional .ProtoLMRole self_info = 3;
  if (has_self_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->self_info(), target);
  }
  
  // repeated .ProtoLMRole rank_list = 4;
  for (int i = 0; i < this->rank_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->rank_list(i), target);
  }
  
  // optional .ProtoRoleInfo first_info = 5;
  if (has_first_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->first_info(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400835::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cur_page = 1;
    if (has_cur_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_page());
    }
    
    // optional int32 total_page = 2;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
    // optional .ProtoLMRole self_info = 3;
    if (has_self_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->self_info());
    }
    
    // optional .ProtoRoleInfo first_info = 5;
    if (has_first_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->first_info());
    }
    
  }
  // repeated .ProtoLMRole rank_list = 4;
  total_size += 1 * this->rank_list_size();
  for (int i = 0; i < this->rank_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400835::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400835* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400835*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400835::MergeFrom(const Proto50400835& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_list_.MergeFrom(from.rank_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_page()) {
      set_cur_page(from.cur_page());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
    if (from.has_self_info()) {
      mutable_self_info()->::ProtoLMRole::MergeFrom(from.self_info());
    }
    if (from.has_first_info()) {
      mutable_first_info()->::ProtoRoleInfo::MergeFrom(from.first_info());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400835::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400835::CopyFrom(const Proto50400835& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400835::IsInitialized() const {
  
  return true;
}

void Proto50400835::Swap(Proto50400835* other) {
  if (other != this) {
    std::swap(cur_page_, other->cur_page_);
    std::swap(total_page_, other->total_page_);
    std::swap(self_info_, other->self_info_);
    rank_list_.Swap(&other->rank_list_);
    std::swap(first_info_, other->first_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400835::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400835_descriptor_;
  metadata.reflection = Proto50400835_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400805::kDesContentFieldNumber;
const int Proto51400805::kQqNumFieldNumber;
const int Proto51400805::kIsOpenFieldNumber;
#endif  // !_MSC_VER

Proto51400805::Proto51400805()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400805::InitAsDefaultInstance() {
}

Proto51400805::Proto51400805(const Proto51400805& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400805::SharedCtor() {
  _cached_size_ = 0;
  des_content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  qq_num_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  is_open_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400805::~Proto51400805() {
  SharedDtor();
}

void Proto51400805::SharedDtor() {
  if (des_content_ != &::google::protobuf::internal::kEmptyString) {
    delete des_content_;
  }
  if (qq_num_ != &::google::protobuf::internal::kEmptyString) {
    delete qq_num_;
  }
  if (this != default_instance_) {
  }
}

void Proto51400805::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400805::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400805_descriptor_;
}

const Proto51400805& Proto51400805::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto51400805* Proto51400805::default_instance_ = NULL;

Proto51400805* Proto51400805::New() const {
  return new Proto51400805;
}

void Proto51400805::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_des_content()) {
      if (des_content_ != &::google::protobuf::internal::kEmptyString) {
        des_content_->clear();
      }
    }
    if (has_qq_num()) {
      if (qq_num_ != &::google::protobuf::internal::kEmptyString) {
        qq_num_->clear();
      }
    }
    is_open_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400805::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string des_content = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_des_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->des_content().data(), this->des_content().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_qq_num;
        break;
      }
      
      // optional string qq_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_qq_num:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_qq_num()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->qq_num().data(), this->qq_num().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_open;
        break;
      }
      
      // optional int32 is_open = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_open_)));
          set_has_is_open();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400805::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string des_content = 1;
  if (has_des_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->des_content().data(), this->des_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->des_content(), output);
  }
  
  // optional string qq_num = 2;
  if (has_qq_num()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->qq_num().data(), this->qq_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->qq_num(), output);
  }
  
  // optional int32 is_open = 3;
  if (has_is_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_open(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400805::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string des_content = 1;
  if (has_des_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->des_content().data(), this->des_content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->des_content(), target);
  }
  
  // optional string qq_num = 2;
  if (has_qq_num()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->qq_num().data(), this->qq_num().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->qq_num(), target);
  }
  
  // optional int32 is_open = 3;
  if (has_is_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_open(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400805::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string des_content = 1;
    if (has_des_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->des_content());
    }
    
    // optional string qq_num = 2;
    if (has_qq_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->qq_num());
    }
    
    // optional int32 is_open = 3;
    if (has_is_open()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_open());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400805::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400805* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400805*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400805::MergeFrom(const Proto51400805& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_des_content()) {
      set_des_content(from.des_content());
    }
    if (from.has_qq_num()) {
      set_qq_num(from.qq_num());
    }
    if (from.has_is_open()) {
      set_is_open(from.is_open());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400805::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400805::CopyFrom(const Proto51400805& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400805::IsInitialized() const {
  
  return true;
}

void Proto51400805::Swap(Proto51400805* other) {
  if (other != this) {
    std::swap(des_content_, other->des_content_);
    std::swap(qq_num_, other->qq_num_);
    std::swap(is_open_, other->is_open_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400805::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400805_descriptor_;
  metadata.reflection = Proto51400805_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400665::kEquipInfoFieldNumber;
#endif  // !_MSC_VER

Proto51400665::Proto51400665()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400665::InitAsDefaultInstance() {
}

Proto51400665::Proto51400665(const Proto51400665& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400665::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400665::~Proto51400665() {
  SharedDtor();
}

void Proto51400665::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400665::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400665::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400665_descriptor_;
}

const Proto51400665& Proto51400665::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto51400665* Proto51400665::default_instance_ = NULL;

Proto51400665* Proto51400665::New() const {
  return new Proto51400665;
}

void Proto51400665::Clear() {
  equip_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400665::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem equip_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equip_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equip_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_equip_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400665::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem equip_info = 1;
  for (int i = 0; i < this->equip_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->equip_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400665::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem equip_info = 1;
  for (int i = 0; i < this->equip_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->equip_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400665::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoItem equip_info = 1;
  total_size += 1 * this->equip_info_size();
  for (int i = 0; i < this->equip_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equip_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400665::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400665* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400665*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400665::MergeFrom(const Proto51400665& from) {
  GOOGLE_CHECK_NE(&from, this);
  equip_info_.MergeFrom(from.equip_info_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400665::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400665::CopyFrom(const Proto51400665& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400665::IsInitialized() const {
  
  return true;
}

void Proto51400665::Swap(Proto51400665* other) {
  if (other != this) {
    equip_info_.Swap(&other->equip_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400665::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400665_descriptor_;
  metadata.reflection = Proto51400665_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101501::kIsCreateFieldNumber;
const int Proto50101501::kTeamNameFieldNumber;
const int Proto50101501::kTeamForceFieldNumber;
const int Proto50101501::kLeaderIdFieldNumber;
const int Proto50101501::kTeamerInfoFieldNumber;
const int Proto50101501::kIsSignupFieldNumber;
const int Proto50101501::kAutoSignupFieldNumber;
const int Proto50101501::kAutoAcceptFieldNumber;
const int Proto50101501::kWinTeamerFieldNumber;
#endif  // !_MSC_VER

Proto50101501::Proto50101501()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101501::InitAsDefaultInstance() {
}

Proto50101501::Proto50101501(const Proto50101501& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101501::SharedCtor() {
  _cached_size_ = 0;
  is_create_ = 0;
  team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  team_force_ = 0;
  leader_id_ = GOOGLE_LONGLONG(0);
  is_signup_ = 0;
  auto_signup_ = 0;
  auto_accept_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101501::~Proto50101501() {
  SharedDtor();
}

void Proto50101501::SharedDtor() {
  if (team_name_ != &::google::protobuf::internal::kEmptyString) {
    delete team_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto50101501::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101501::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101501_descriptor_;
}

const Proto50101501& Proto50101501::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto50101501* Proto50101501::default_instance_ = NULL;

Proto50101501* Proto50101501::New() const {
  return new Proto50101501;
}

void Proto50101501::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_create_ = 0;
    if (has_team_name()) {
      if (team_name_ != &::google::protobuf::internal::kEmptyString) {
        team_name_->clear();
      }
    }
    team_force_ = 0;
    leader_id_ = GOOGLE_LONGLONG(0);
    is_signup_ = 0;
    auto_signup_ = 0;
    auto_accept_ = 0;
  }
  teamer_info_.Clear();
  win_teamer_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101501::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 is_create = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_create_)));
          set_has_is_create();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_team_name;
        break;
      }
      
      // optional string team_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_team_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_team_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->team_name().data(), this->team_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_team_force;
        break;
      }
      
      // optional int32 team_force = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_team_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &team_force_)));
          set_has_team_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_leader_id;
        break;
      }
      
      // optional int64 leader_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leader_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &leader_id_)));
          set_has_leader_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_teamer_info;
        break;
      }
      
      // repeated .ProtoRoleInfo teamer_info = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_teamer_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_teamer_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_teamer_info;
        if (input->ExpectTag(48)) goto parse_is_signup;
        break;
      }
      
      // optional int32 is_signup = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_signup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_signup_)));
          set_has_is_signup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_auto_signup;
        break;
      }
      
      // optional int32 auto_signup = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_signup:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_signup_)));
          set_has_auto_signup();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_auto_accept;
        break;
      }
      
      // optional int32 auto_accept = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_auto_accept:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_accept_)));
          set_has_auto_accept();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_win_teamer;
        break;
      }
      
      // repeated .ProtoRoleInfo win_teamer = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_win_teamer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_win_teamer()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_win_teamer;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101501::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 is_create = 1;
  if (has_is_create()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->is_create(), output);
  }
  
  // optional string team_name = 2;
  if (has_team_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->team_name().data(), this->team_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->team_name(), output);
  }
  
  // optional int32 team_force = 3;
  if (has_team_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->team_force(), output);
  }
  
  // optional int64 leader_id = 4;
  if (has_leader_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->leader_id(), output);
  }
  
  // repeated .ProtoRoleInfo teamer_info = 5;
  for (int i = 0; i < this->teamer_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->teamer_info(i), output);
  }
  
  // optional int32 is_signup = 6;
  if (has_is_signup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->is_signup(), output);
  }
  
  // optional int32 auto_signup = 7;
  if (has_auto_signup()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->auto_signup(), output);
  }
  
  // optional int32 auto_accept = 8;
  if (has_auto_accept()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->auto_accept(), output);
  }
  
  // repeated .ProtoRoleInfo win_teamer = 9;
  for (int i = 0; i < this->win_teamer_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->win_teamer(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101501::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 is_create = 1;
  if (has_is_create()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->is_create(), target);
  }
  
  // optional string team_name = 2;
  if (has_team_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->team_name().data(), this->team_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->team_name(), target);
  }
  
  // optional int32 team_force = 3;
  if (has_team_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->team_force(), target);
  }
  
  // optional int64 leader_id = 4;
  if (has_leader_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->leader_id(), target);
  }
  
  // repeated .ProtoRoleInfo teamer_info = 5;
  for (int i = 0; i < this->teamer_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->teamer_info(i), target);
  }
  
  // optional int32 is_signup = 6;
  if (has_is_signup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->is_signup(), target);
  }
  
  // optional int32 auto_signup = 7;
  if (has_auto_signup()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->auto_signup(), target);
  }
  
  // optional int32 auto_accept = 8;
  if (has_auto_accept()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->auto_accept(), target);
  }
  
  // repeated .ProtoRoleInfo win_teamer = 9;
  for (int i = 0; i < this->win_teamer_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->win_teamer(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101501::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 is_create = 1;
    if (has_is_create()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_create());
    }
    
    // optional string team_name = 2;
    if (has_team_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->team_name());
    }
    
    // optional int32 team_force = 3;
    if (has_team_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->team_force());
    }
    
    // optional int64 leader_id = 4;
    if (has_leader_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->leader_id());
    }
    
    // optional int32 is_signup = 6;
    if (has_is_signup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_signup());
    }
    
    // optional int32 auto_signup = 7;
    if (has_auto_signup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_signup());
    }
    
    // optional int32 auto_accept = 8;
    if (has_auto_accept()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_accept());
    }
    
  }
  // repeated .ProtoRoleInfo teamer_info = 5;
  total_size += 1 * this->teamer_info_size();
  for (int i = 0; i < this->teamer_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->teamer_info(i));
  }
  
  // repeated .ProtoRoleInfo win_teamer = 9;
  total_size += 1 * this->win_teamer_size();
  for (int i = 0; i < this->win_teamer_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->win_teamer(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101501::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101501* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101501*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101501::MergeFrom(const Proto50101501& from) {
  GOOGLE_CHECK_NE(&from, this);
  teamer_info_.MergeFrom(from.teamer_info_);
  win_teamer_.MergeFrom(from.win_teamer_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_create()) {
      set_is_create(from.is_create());
    }
    if (from.has_team_name()) {
      set_team_name(from.team_name());
    }
    if (from.has_team_force()) {
      set_team_force(from.team_force());
    }
    if (from.has_leader_id()) {
      set_leader_id(from.leader_id());
    }
    if (from.has_is_signup()) {
      set_is_signup(from.is_signup());
    }
    if (from.has_auto_signup()) {
      set_auto_signup(from.auto_signup());
    }
    if (from.has_auto_accept()) {
      set_auto_accept(from.auto_accept());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101501::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101501::CopyFrom(const Proto50101501& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101501::IsInitialized() const {
  
  return true;
}

void Proto50101501::Swap(Proto50101501* other) {
  if (other != this) {
    std::swap(is_create_, other->is_create_);
    std::swap(team_name_, other->team_name_);
    std::swap(team_force_, other->team_force_);
    std::swap(leader_id_, other->leader_id_);
    teamer_info_.Swap(&other->teamer_info_);
    std::swap(is_signup_, other->is_signup_);
    std::swap(auto_signup_, other->auto_signup_);
    std::swap(auto_accept_, other->auto_accept_);
    win_teamer_.Swap(&other->win_teamer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101501::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101501_descriptor_;
  metadata.reflection = Proto50101501_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101502::kTeamNameFieldNumber;
const int Proto10101502::kNeedForceFieldNumber;
#endif  // !_MSC_VER

Proto10101502::Proto10101502()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101502::InitAsDefaultInstance() {
}

Proto10101502::Proto10101502(const Proto10101502& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101502::SharedCtor() {
  _cached_size_ = 0;
  team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  need_force_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101502::~Proto10101502() {
  SharedDtor();
}

void Proto10101502::SharedDtor() {
  if (team_name_ != &::google::protobuf::internal::kEmptyString) {
    delete team_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto10101502::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101502::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101502_descriptor_;
}

const Proto10101502& Proto10101502::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10101502* Proto10101502::default_instance_ = NULL;

Proto10101502* Proto10101502::New() const {
  return new Proto10101502;
}

void Proto10101502::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_team_name()) {
      if (team_name_ != &::google::protobuf::internal::kEmptyString) {
        team_name_->clear();
      }
    }
    need_force_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101502::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string team_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_team_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->team_name().data(), this->team_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_need_force;
        break;
      }
      
      // optional int32 need_force = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_need_force:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_force_)));
          set_has_need_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101502::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string team_name = 1;
  if (has_team_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->team_name().data(), this->team_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->team_name(), output);
  }
  
  // optional int32 need_force = 2;
  if (has_need_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->need_force(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101502::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string team_name = 1;
  if (has_team_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->team_name().data(), this->team_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->team_name(), target);
  }
  
  // optional int32 need_force = 2;
  if (has_need_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->need_force(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101502::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string team_name = 1;
    if (has_team_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->team_name());
    }
    
    // optional int32 need_force = 2;
    if (has_need_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->need_force());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101502::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101502* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101502*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101502::MergeFrom(const Proto10101502& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_name()) {
      set_team_name(from.team_name());
    }
    if (from.has_need_force()) {
      set_need_force(from.need_force());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101502::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101502::CopyFrom(const Proto10101502& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101502::IsInitialized() const {
  
  return true;
}

void Proto10101502::Swap(Proto10101502* other) {
  if (other != this) {
    std::swap(team_name_, other->team_name_);
    std::swap(need_force_, other->need_force_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101502::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101502_descriptor_;
  metadata.reflection = Proto10101502_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400629::kResultFieldNumber;
#endif  // !_MSC_VER

Proto51400629::Proto51400629()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400629::InitAsDefaultInstance() {
}

Proto51400629::Proto51400629(const Proto51400629& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400629::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400629::~Proto51400629() {
  SharedDtor();
}

void Proto51400629::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400629::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400629::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400629_descriptor_;
}

const Proto51400629& Proto51400629::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto51400629* Proto51400629::default_instance_ = NULL;

Proto51400629* Proto51400629::New() const {
  return new Proto51400629;
}

void Proto51400629::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400629::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400629::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400629::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400629::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400629::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400629* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400629*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400629::MergeFrom(const Proto51400629& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400629::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400629::CopyFrom(const Proto51400629& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400629::IsInitialized() const {
  
  return true;
}

void Proto51400629::Swap(Proto51400629* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400629::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400629_descriptor_;
  metadata.reflection = Proto51400629_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100271::kActIdFieldNumber;
const int Proto10100271::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100271::Proto10100271()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100271::InitAsDefaultInstance() {
}

Proto10100271::Proto10100271(const Proto10100271& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100271::SharedCtor() {
  _cached_size_ = 0;
  act_id_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100271::~Proto10100271() {
  SharedDtor();
}

void Proto10100271::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100271::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100271::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100271_descriptor_;
}

const Proto10100271& Proto10100271::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10100271* Proto10100271::default_instance_ = NULL;

Proto10100271* Proto10100271::New() const {
  return new Proto10100271;
}

void Proto10100271::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    act_id_ = 0;
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100271::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 act_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_id_)));
          set_has_act_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }
      
      // optional int32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100271::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 act_id = 1;
  if (has_act_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->act_id(), output);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100271::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 act_id = 1;
  if (has_act_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->act_id(), target);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100271::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 act_id = 1;
    if (has_act_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_id());
    }
    
    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100271::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100271* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100271*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100271::MergeFrom(const Proto10100271& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_act_id()) {
      set_act_id(from.act_id());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100271::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100271::CopyFrom(const Proto10100271& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100271::IsInitialized() const {
  
  return true;
}

void Proto10100271::Swap(Proto10100271* other) {
  if (other != this) {
    std::swap(act_id_, other->act_id_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100271::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100271_descriptor_;
  metadata.reflection = Proto10100271_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100271::kRetFieldNumber;
const int Proto50100271::kIndexFieldNumber;
const int Proto50100271::kActIdFieldNumber;
#endif  // !_MSC_VER

Proto50100271::Proto50100271()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100271::InitAsDefaultInstance() {
}

Proto50100271::Proto50100271(const Proto50100271& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100271::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  index_ = 0;
  act_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100271::~Proto50100271() {
  SharedDtor();
}

void Proto50100271::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100271::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100271::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100271_descriptor_;
}

const Proto50100271& Proto50100271::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto50100271* Proto50100271::default_instance_ = NULL;

Proto50100271* Proto50100271::New() const {
  return new Proto50100271;
}

void Proto50100271::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    index_ = 0;
    act_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100271::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }
      
      // optional int32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_act_id;
        break;
      }
      
      // optional int32 act_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_id_)));
          set_has_act_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100271::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }
  
  // optional int32 act_id = 3;
  if (has_act_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->act_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100271::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }
  
  // optional int32 act_id = 3;
  if (has_act_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->act_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100271::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }
    
    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 act_id = 3;
    if (has_act_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100271::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100271* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100271*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100271::MergeFrom(const Proto50100271& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_act_id()) {
      set_act_id(from.act_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100271::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100271::CopyFrom(const Proto50100271& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100271::IsInitialized() const {
  
  return true;
}

void Proto50100271::Swap(Proto50100271* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(index_, other->index_);
    std::swap(act_id_, other->act_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100271::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100271_descriptor_;
  metadata.reflection = Proto50100271_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101503::kShowNoFullFieldNumber;
const int Proto10101503::kPageFieldNumber;
#endif  // !_MSC_VER

Proto10101503::Proto10101503()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101503::InitAsDefaultInstance() {
}

Proto10101503::Proto10101503(const Proto10101503& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101503::SharedCtor() {
  _cached_size_ = 0;
  show_no_full_ = 0;
  page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101503::~Proto10101503() {
  SharedDtor();
}

void Proto10101503::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101503::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101503::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101503_descriptor_;
}

const Proto10101503& Proto10101503::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10101503* Proto10101503::default_instance_ = NULL;

Proto10101503* Proto10101503::New() const {
  return new Proto10101503;
}

void Proto10101503::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    show_no_full_ = 0;
    page_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101503::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 show_no_full = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &show_no_full_)));
          set_has_show_no_full();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_page;
        break;
      }
      
      // optional int32 page = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
          set_has_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101503::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 show_no_full = 1;
  if (has_show_no_full()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->show_no_full(), output);
  }
  
  // optional int32 page = 2;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101503::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 show_no_full = 1;
  if (has_show_no_full()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->show_no_full(), target);
  }
  
  // optional int32 page = 2;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101503::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 show_no_full = 1;
    if (has_show_no_full()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->show_no_full());
    }
    
    // optional int32 page = 2;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101503::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101503* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101503*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101503::MergeFrom(const Proto10101503& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_show_no_full()) {
      set_show_no_full(from.show_no_full());
    }
    if (from.has_page()) {
      set_page(from.page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101503::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101503::CopyFrom(const Proto10101503& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101503::IsInitialized() const {
  
  return true;
}

void Proto10101503::Swap(Proto10101503* other) {
  if (other != this) {
    std::swap(show_no_full_, other->show_no_full_);
    std::swap(page_, other->page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101503::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101503_descriptor_;
  metadata.reflection = Proto10101503_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101503::kTeamListFieldNumber;
const int Proto50101503::kCurPageFieldNumber;
const int Proto50101503::kTotalPageFieldNumber;
#endif  // !_MSC_VER

Proto50101503::Proto50101503()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101503::InitAsDefaultInstance() {
}

Proto50101503::Proto50101503(const Proto50101503& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101503::SharedCtor() {
  _cached_size_ = 0;
  cur_page_ = 0;
  total_page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101503::~Proto50101503() {
  SharedDtor();
}

void Proto50101503::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50101503::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101503::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101503_descriptor_;
}

const Proto50101503& Proto50101503::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto50101503* Proto50101503::default_instance_ = NULL;

Proto50101503* Proto50101503::New() const {
  return new Proto50101503;
}

void Proto50101503::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    cur_page_ = 0;
    total_page_ = 0;
  }
  team_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101503::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoTravelTeam team_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_team_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_team_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_team_list;
        if (input->ExpectTag(16)) goto parse_cur_page;
        break;
      }
      
      // optional int32 cur_page = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_page_)));
          set_has_cur_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101503::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoTravelTeam team_list = 1;
  for (int i = 0; i < this->team_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->team_list(i), output);
  }
  
  // optional int32 cur_page = 2;
  if (has_cur_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cur_page(), output);
  }
  
  // optional int32 total_page = 3;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101503::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoTravelTeam team_list = 1;
  for (int i = 0; i < this->team_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->team_list(i), target);
  }
  
  // optional int32 cur_page = 2;
  if (has_cur_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cur_page(), target);
  }
  
  // optional int32 total_page = 3;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101503::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 cur_page = 2;
    if (has_cur_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_page());
    }
    
    // optional int32 total_page = 3;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
  }
  // repeated .ProtoTravelTeam team_list = 1;
  total_size += 1 * this->team_list_size();
  for (int i = 0; i < this->team_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->team_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101503::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101503* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101503*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101503::MergeFrom(const Proto50101503& from) {
  GOOGLE_CHECK_NE(&from, this);
  team_list_.MergeFrom(from.team_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_cur_page()) {
      set_cur_page(from.cur_page());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101503::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101503::CopyFrom(const Proto50101503& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101503::IsInitialized() const {
  
  return true;
}

void Proto50101503::Swap(Proto50101503* other) {
  if (other != this) {
    team_list_.Swap(&other->team_list_);
    std::swap(cur_page_, other->cur_page_);
    std::swap(total_page_, other->total_page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101503::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101503_descriptor_;
  metadata.reflection = Proto50101503_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101504::kTeamIdFieldNumber;
#endif  // !_MSC_VER

Proto10101504::Proto10101504()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101504::InitAsDefaultInstance() {
}

Proto10101504::Proto10101504(const Proto10101504& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101504::SharedCtor() {
  _cached_size_ = 0;
  team_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101504::~Proto10101504() {
  SharedDtor();
}

void Proto10101504::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101504::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101504::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101504_descriptor_;
}

const Proto10101504& Proto10101504::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10101504* Proto10101504::default_instance_ = NULL;

Proto10101504* Proto10101504::New() const {
  return new Proto10101504;
}

void Proto10101504::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    team_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101504::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 team_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101504::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->team_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101504::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->team_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101504::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 team_id = 1;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->team_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101504::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101504* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101504*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101504::MergeFrom(const Proto10101504& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101504::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101504::CopyFrom(const Proto10101504& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101504::IsInitialized() const {
  
  return true;
}

void Proto10101504::Swap(Proto10101504* other) {
  if (other != this) {
    std::swap(team_id_, other->team_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101504::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101504_descriptor_;
  metadata.reflection = Proto10101504_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101504::kTeamIdFieldNumber;
#endif  // !_MSC_VER

Proto50101504::Proto50101504()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101504::InitAsDefaultInstance() {
}

Proto50101504::Proto50101504(const Proto50101504& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101504::SharedCtor() {
  _cached_size_ = 0;
  team_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101504::~Proto50101504() {
  SharedDtor();
}

void Proto50101504::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50101504::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101504::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101504_descriptor_;
}

const Proto50101504& Proto50101504::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto50101504* Proto50101504::default_instance_ = NULL;

Proto50101504* Proto50101504::New() const {
  return new Proto50101504;
}

void Proto50101504::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    team_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101504::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 team_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101504::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->team_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101504::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->team_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101504::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 team_id = 1;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->team_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101504::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101504* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101504*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101504::MergeFrom(const Proto50101504& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101504::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101504::CopyFrom(const Proto50101504& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101504::IsInitialized() const {
  
  return true;
}

void Proto50101504::Swap(Proto50101504* other) {
  if (other != this) {
    std::swap(team_id_, other->team_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101504::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101504_descriptor_;
  metadata.reflection = Proto50101504_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80101509::kTypeFieldNumber;
const int Proto80101509::kTeamNameFieldNumber;
#endif  // !_MSC_VER

Proto80101509::Proto80101509()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80101509::InitAsDefaultInstance() {
}

Proto80101509::Proto80101509(const Proto80101509& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80101509::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80101509::~Proto80101509() {
  SharedDtor();
}

void Proto80101509::SharedDtor() {
  if (team_name_ != &::google::protobuf::internal::kEmptyString) {
    delete team_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80101509::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80101509::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80101509_descriptor_;
}

const Proto80101509& Proto80101509::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto80101509* Proto80101509::default_instance_ = NULL;

Proto80101509* Proto80101509::New() const {
  return new Proto80101509;
}

void Proto80101509::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_team_name()) {
      if (team_name_ != &::google::protobuf::internal::kEmptyString) {
        team_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80101509::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_team_name;
        break;
      }
      
      // optional string team_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_team_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_team_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->team_name().data(), this->team_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80101509::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  // optional string team_name = 2;
  if (has_team_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->team_name().data(), this->team_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->team_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80101509::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  // optional string team_name = 2;
  if (has_team_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->team_name().data(), this->team_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->team_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80101509::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional string team_name = 2;
    if (has_team_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->team_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80101509::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80101509* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80101509*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80101509::MergeFrom(const Proto80101509& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_team_name()) {
      set_team_name(from.team_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80101509::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80101509::CopyFrom(const Proto80101509& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80101509::IsInitialized() const {
  
  return true;
}

void Proto80101509::Swap(Proto80101509* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(team_name_, other->team_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80101509::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80101509_descriptor_;
  metadata.reflection = Proto80101509_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101505::kTeamerListFieldNumber;
#endif  // !_MSC_VER

Proto50101505::Proto50101505()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101505::InitAsDefaultInstance() {
}

Proto50101505::Proto50101505(const Proto50101505& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101505::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101505::~Proto50101505() {
  SharedDtor();
}

void Proto50101505::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50101505::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101505::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101505_descriptor_;
}

const Proto50101505& Proto50101505::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto50101505* Proto50101505::default_instance_ = NULL;

Proto50101505* Proto50101505::New() const {
  return new Proto50101505;
}

void Proto50101505::Clear() {
  teamer_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101505::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoTeamer teamer_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_teamer_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_teamer_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_teamer_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101505::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoTeamer teamer_list = 1;
  for (int i = 0; i < this->teamer_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->teamer_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101505::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoTeamer teamer_list = 1;
  for (int i = 0; i < this->teamer_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->teamer_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101505::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoTeamer teamer_list = 1;
  total_size += 1 * this->teamer_list_size();
  for (int i = 0; i < this->teamer_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->teamer_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101505::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101505* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101505*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101505::MergeFrom(const Proto50101505& from) {
  GOOGLE_CHECK_NE(&from, this);
  teamer_list_.MergeFrom(from.teamer_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101505::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101505::CopyFrom(const Proto50101505& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101505::IsInitialized() const {
  
  return true;
}

void Proto50101505::Swap(Proto50101505* other) {
  if (other != this) {
    teamer_list_.Swap(&other->teamer_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101505::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101505_descriptor_;
  metadata.reflection = Proto50101505_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101506::kApplyIdFieldNumber;
const int Proto10101506::kReplyFieldNumber;
#endif  // !_MSC_VER

Proto10101506::Proto10101506()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101506::InitAsDefaultInstance() {
}

Proto10101506::Proto10101506(const Proto10101506& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101506::SharedCtor() {
  _cached_size_ = 0;
  apply_id_ = GOOGLE_LONGLONG(0);
  reply_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101506::~Proto10101506() {
  SharedDtor();
}

void Proto10101506::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101506::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101506::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101506_descriptor_;
}

const Proto10101506& Proto10101506::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10101506* Proto10101506::default_instance_ = NULL;

Proto10101506* Proto10101506::New() const {
  return new Proto10101506;
}

void Proto10101506::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    apply_id_ = GOOGLE_LONGLONG(0);
    reply_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101506::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 apply_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &apply_id_)));
          set_has_apply_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_reply;
        break;
      }
      
      // optional int32 reply = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reply:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reply_)));
          set_has_reply();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101506::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 apply_id = 1;
  if (has_apply_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->apply_id(), output);
  }
  
  // optional int32 reply = 2;
  if (has_reply()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reply(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101506::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 apply_id = 1;
  if (has_apply_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->apply_id(), target);
  }
  
  // optional int32 reply = 2;
  if (has_reply()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reply(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101506::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 apply_id = 1;
    if (has_apply_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->apply_id());
    }
    
    // optional int32 reply = 2;
    if (has_reply()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reply());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101506::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101506* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101506*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101506::MergeFrom(const Proto10101506& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_apply_id()) {
      set_apply_id(from.apply_id());
    }
    if (from.has_reply()) {
      set_reply(from.reply());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101506::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101506::CopyFrom(const Proto10101506& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101506::IsInitialized() const {
  
  return true;
}

void Proto10101506::Swap(Proto10101506* other) {
  if (other != this) {
    std::swap(apply_id_, other->apply_id_);
    std::swap(reply_, other->reply_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101506::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101506_descriptor_;
  metadata.reflection = Proto10101506_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101507::kTargetIdFieldNumber;
#endif  // !_MSC_VER

Proto10101507::Proto10101507()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101507::InitAsDefaultInstance() {
}

Proto10101507::Proto10101507(const Proto10101507& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101507::SharedCtor() {
  _cached_size_ = 0;
  target_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101507::~Proto10101507() {
  SharedDtor();
}

void Proto10101507::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101507::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101507::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101507_descriptor_;
}

const Proto10101507& Proto10101507::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10101507* Proto10101507::default_instance_ = NULL;

Proto10101507* Proto10101507::New() const {
  return new Proto10101507;
}

void Proto10101507::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    target_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101507::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 target_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_id_)));
          set_has_target_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101507::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 target_id = 1;
  if (has_target_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->target_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101507::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 target_id = 1;
  if (has_target_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->target_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101507::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 target_id = 1;
    if (has_target_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->target_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101507::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101507* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101507*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101507::MergeFrom(const Proto10101507& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_target_id()) {
      set_target_id(from.target_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101507::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101507::CopyFrom(const Proto10101507& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101507::IsInitialized() const {
  
  return true;
}

void Proto10101507::Swap(Proto10101507* other) {
  if (other != this) {
    std::swap(target_id_, other->target_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101507::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101507_descriptor_;
  metadata.reflection = Proto10101507_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101508::kTeamerIdFieldNumber;
#endif  // !_MSC_VER

Proto10101508::Proto10101508()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101508::InitAsDefaultInstance() {
}

Proto10101508::Proto10101508(const Proto10101508& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101508::SharedCtor() {
  _cached_size_ = 0;
  teamer_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101508::~Proto10101508() {
  SharedDtor();
}

void Proto10101508::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101508::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101508::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101508_descriptor_;
}

const Proto10101508& Proto10101508::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10101508* Proto10101508::default_instance_ = NULL;

Proto10101508* Proto10101508::New() const {
  return new Proto10101508;
}

void Proto10101508::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    teamer_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101508::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 teamer_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &teamer_id_)));
          set_has_teamer_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101508::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 teamer_id = 1;
  if (has_teamer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->teamer_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101508::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 teamer_id = 1;
  if (has_teamer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->teamer_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101508::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 teamer_id = 1;
    if (has_teamer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->teamer_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101508::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101508* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101508*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101508::MergeFrom(const Proto10101508& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_teamer_id()) {
      set_teamer_id(from.teamer_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101508::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101508::CopyFrom(const Proto10101508& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101508::IsInitialized() const {
  
  return true;
}

void Proto10101508::Swap(Proto10101508* other) {
  if (other != this) {
    std::swap(teamer_id_, other->teamer_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101508::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101508_descriptor_;
  metadata.reflection = Proto10101508_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101510::kTeamIdFieldNumber;
#endif  // !_MSC_VER

Proto10101510::Proto10101510()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101510::InitAsDefaultInstance() {
}

Proto10101510::Proto10101510(const Proto10101510& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101510::SharedCtor() {
  _cached_size_ = 0;
  team_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101510::~Proto10101510() {
  SharedDtor();
}

void Proto10101510::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101510::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101510::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101510_descriptor_;
}

const Proto10101510& Proto10101510::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10101510* Proto10101510::default_instance_ = NULL;

Proto10101510* Proto10101510::New() const {
  return new Proto10101510;
}

void Proto10101510::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    team_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101510::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 team_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101510::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->team_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101510::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->team_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101510::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 team_id = 1;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->team_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101510::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101510* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101510*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101510::MergeFrom(const Proto10101510& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101510::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101510::CopyFrom(const Proto10101510& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101510::IsInitialized() const {
  
  return true;
}

void Proto10101510::Swap(Proto10101510* other) {
  if (other != this) {
    std::swap(team_id_, other->team_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101510::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101510_descriptor_;
  metadata.reflection = Proto10101510_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50101510::kTeamIdFieldNumber;
const int Proto50101510::kTeamNameFieldNumber;
const int Proto50101510::kServerNameFieldNumber;
const int Proto50101510::kTeamerListFieldNumber;
#endif  // !_MSC_VER

Proto50101510::Proto50101510()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50101510::InitAsDefaultInstance() {
}

Proto50101510::Proto50101510(const Proto50101510& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50101510::SharedCtor() {
  _cached_size_ = 0;
  team_id_ = GOOGLE_LONGLONG(0);
  team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  server_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50101510::~Proto50101510() {
  SharedDtor();
}

void Proto50101510::SharedDtor() {
  if (team_name_ != &::google::protobuf::internal::kEmptyString) {
    delete team_name_;
  }
  if (server_name_ != &::google::protobuf::internal::kEmptyString) {
    delete server_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto50101510::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50101510::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50101510_descriptor_;
}

const Proto50101510& Proto50101510::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto50101510* Proto50101510::default_instance_ = NULL;

Proto50101510* Proto50101510::New() const {
  return new Proto50101510;
}

void Proto50101510::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    team_id_ = GOOGLE_LONGLONG(0);
    if (has_team_name()) {
      if (team_name_ != &::google::protobuf::internal::kEmptyString) {
        team_name_->clear();
      }
    }
    if (has_server_name()) {
      if (server_name_ != &::google::protobuf::internal::kEmptyString) {
        server_name_->clear();
      }
    }
  }
  teamer_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50101510::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 team_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_team_name;
        break;
      }
      
      // optional string team_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_team_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_team_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->team_name().data(), this->team_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_server_name;
        break;
      }
      
      // optional string server_name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_server_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->server_name().data(), this->server_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_teamer_list;
        break;
      }
      
      // repeated .ProtoTeamer teamer_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_teamer_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_teamer_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_teamer_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50101510::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->team_id(), output);
  }
  
  // optional string team_name = 2;
  if (has_team_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->team_name().data(), this->team_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->team_name(), output);
  }
  
  // optional string server_name = 3;
  if (has_server_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_name().data(), this->server_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->server_name(), output);
  }
  
  // repeated .ProtoTeamer teamer_list = 4;
  for (int i = 0; i < this->teamer_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->teamer_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50101510::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->team_id(), target);
  }
  
  // optional string team_name = 2;
  if (has_team_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->team_name().data(), this->team_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->team_name(), target);
  }
  
  // optional string server_name = 3;
  if (has_server_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->server_name().data(), this->server_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->server_name(), target);
  }
  
  // repeated .ProtoTeamer teamer_list = 4;
  for (int i = 0; i < this->teamer_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->teamer_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50101510::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 team_id = 1;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->team_id());
    }
    
    // optional string team_name = 2;
    if (has_team_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->team_name());
    }
    
    // optional string server_name = 3;
    if (has_server_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->server_name());
    }
    
  }
  // repeated .ProtoTeamer teamer_list = 4;
  total_size += 1 * this->teamer_list_size();
  for (int i = 0; i < this->teamer_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->teamer_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50101510::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50101510* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50101510*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50101510::MergeFrom(const Proto50101510& from) {
  GOOGLE_CHECK_NE(&from, this);
  teamer_list_.MergeFrom(from.teamer_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
    if (from.has_team_name()) {
      set_team_name(from.team_name());
    }
    if (from.has_server_name()) {
      set_server_name(from.server_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50101510::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50101510::CopyFrom(const Proto50101510& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50101510::IsInitialized() const {
  
  return true;
}

void Proto50101510::Swap(Proto50101510* other) {
  if (other != this) {
    std::swap(team_id_, other->team_id_);
    std::swap(team_name_, other->team_name_);
    std::swap(server_name_, other->server_name_);
    teamer_list_.Swap(&other->teamer_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50101510::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50101510_descriptor_;
  metadata.reflection = Proto50101510_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101511::kRoleIdFieldNumber;
#endif  // !_MSC_VER

Proto10101511::Proto10101511()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101511::InitAsDefaultInstance() {
}

Proto10101511::Proto10101511(const Proto10101511& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101511::SharedCtor() {
  _cached_size_ = 0;
  role_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101511::~Proto10101511() {
  SharedDtor();
}

void Proto10101511::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101511::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101511::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101511_descriptor_;
}

const Proto10101511& Proto10101511::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10101511* Proto10101511::default_instance_ = NULL;

Proto10101511* Proto10101511::New() const {
  return new Proto10101511;
}

void Proto10101511::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    role_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101511::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 role_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &role_id_)));
          set_has_role_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101511::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->role_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101511::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 role_id = 1;
  if (has_role_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->role_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101511::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 role_id = 1;
    if (has_role_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->role_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101511::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101511* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101511*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101511::MergeFrom(const Proto10101511& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role_id()) {
      set_role_id(from.role_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101511::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101511::CopyFrom(const Proto10101511& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101511::IsInitialized() const {
  
  return true;
}

void Proto10101511::Swap(Proto10101511* other) {
  if (other != this) {
    std::swap(role_id_, other->role_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101511::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101511_descriptor_;
  metadata.reflection = Proto10101511_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80101501::kTeamIdFieldNumber;
const int Proto80101501::kTeamNameFieldNumber;
const int Proto80101501::kLeaderIdFieldNumber;
const int Proto80101501::kLeaderNameFieldNumber;
#endif  // !_MSC_VER

Proto80101501::Proto80101501()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80101501::InitAsDefaultInstance() {
}

Proto80101501::Proto80101501(const Proto80101501& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80101501::SharedCtor() {
  _cached_size_ = 0;
  team_id_ = GOOGLE_LONGLONG(0);
  team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  leader_id_ = GOOGLE_LONGLONG(0);
  leader_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80101501::~Proto80101501() {
  SharedDtor();
}

void Proto80101501::SharedDtor() {
  if (team_name_ != &::google::protobuf::internal::kEmptyString) {
    delete team_name_;
  }
  if (leader_name_ != &::google::protobuf::internal::kEmptyString) {
    delete leader_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80101501::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80101501::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80101501_descriptor_;
}

const Proto80101501& Proto80101501::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto80101501* Proto80101501::default_instance_ = NULL;

Proto80101501* Proto80101501::New() const {
  return new Proto80101501;
}

void Proto80101501::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    team_id_ = GOOGLE_LONGLONG(0);
    if (has_team_name()) {
      if (team_name_ != &::google::protobuf::internal::kEmptyString) {
        team_name_->clear();
      }
    }
    leader_id_ = GOOGLE_LONGLONG(0);
    if (has_leader_name()) {
      if (leader_name_ != &::google::protobuf::internal::kEmptyString) {
        leader_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80101501::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 team_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_team_name;
        break;
      }
      
      // optional string team_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_team_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_team_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->team_name().data(), this->team_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_leader_id;
        break;
      }
      
      // optional int64 leader_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_leader_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &leader_id_)));
          set_has_leader_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_leader_name;
        break;
      }
      
      // optional string leader_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_leader_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->leader_name().data(), this->leader_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80101501::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->team_id(), output);
  }
  
  // optional string team_name = 2;
  if (has_team_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->team_name().data(), this->team_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->team_name(), output);
  }
  
  // optional int64 leader_id = 3;
  if (has_leader_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->leader_id(), output);
  }
  
  // optional string leader_name = 4;
  if (has_leader_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leader_name().data(), this->leader_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->leader_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80101501::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->team_id(), target);
  }
  
  // optional string team_name = 2;
  if (has_team_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->team_name().data(), this->team_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->team_name(), target);
  }
  
  // optional int64 leader_id = 3;
  if (has_leader_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->leader_id(), target);
  }
  
  // optional string leader_name = 4;
  if (has_leader_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leader_name().data(), this->leader_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->leader_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80101501::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 team_id = 1;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->team_id());
    }
    
    // optional string team_name = 2;
    if (has_team_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->team_name());
    }
    
    // optional int64 leader_id = 3;
    if (has_leader_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->leader_id());
    }
    
    // optional string leader_name = 4;
    if (has_leader_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->leader_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80101501::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80101501* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80101501*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80101501::MergeFrom(const Proto80101501& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
    if (from.has_team_name()) {
      set_team_name(from.team_name());
    }
    if (from.has_leader_id()) {
      set_leader_id(from.leader_id());
    }
    if (from.has_leader_name()) {
      set_leader_name(from.leader_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80101501::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80101501::CopyFrom(const Proto80101501& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80101501::IsInitialized() const {
  
  return true;
}

void Proto80101501::Swap(Proto80101501* other) {
  if (other != this) {
    std::swap(team_id_, other->team_id_);
    std::swap(team_name_, other->team_name_);
    std::swap(leader_id_, other->leader_id_);
    std::swap(leader_name_, other->leader_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80101501::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80101501_descriptor_;
  metadata.reflection = Proto80101501_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101512::kTeamIdFieldNumber;
const int Proto10101512::kReplyTypeFieldNumber;
#endif  // !_MSC_VER

Proto10101512::Proto10101512()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101512::InitAsDefaultInstance() {
}

Proto10101512::Proto10101512(const Proto10101512& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101512::SharedCtor() {
  _cached_size_ = 0;
  team_id_ = GOOGLE_LONGLONG(0);
  reply_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101512::~Proto10101512() {
  SharedDtor();
}

void Proto10101512::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101512::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101512::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101512_descriptor_;
}

const Proto10101512& Proto10101512::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10101512* Proto10101512::default_instance_ = NULL;

Proto10101512* Proto10101512::New() const {
  return new Proto10101512;
}

void Proto10101512::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    team_id_ = GOOGLE_LONGLONG(0);
    reply_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101512::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 team_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &team_id_)));
          set_has_team_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_reply_type;
        break;
      }
      
      // optional int32 reply_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reply_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reply_type_)));
          set_has_reply_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101512::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->team_id(), output);
  }
  
  // optional int32 reply_type = 2;
  if (has_reply_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reply_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101512::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 team_id = 1;
  if (has_team_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->team_id(), target);
  }
  
  // optional int32 reply_type = 2;
  if (has_reply_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reply_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101512::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 team_id = 1;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->team_id());
    }
    
    // optional int32 reply_type = 2;
    if (has_reply_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reply_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101512::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101512* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101512*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101512::MergeFrom(const Proto10101512& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_team_id()) {
      set_team_id(from.team_id());
    }
    if (from.has_reply_type()) {
      set_reply_type(from.reply_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101512::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101512::CopyFrom(const Proto10101512& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101512::IsInitialized() const {
  
  return true;
}

void Proto10101512::Swap(Proto10101512* other) {
  if (other != this) {
    std::swap(team_id_, other->team_id_);
    std::swap(reply_type_, other->reply_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101512::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101512_descriptor_;
  metadata.reflection = Proto10101512_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102062::kIndexFieldNumber;
const int Proto10102062::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto10102062::Proto10102062()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102062::InitAsDefaultInstance() {
}

Proto10102062::Proto10102062(const Proto10102062& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102062::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102062::~Proto10102062() {
  SharedDtor();
}

void Proto10102062::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102062::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102062::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102062_descriptor_;
}

const Proto10102062& Proto10102062::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10102062* Proto10102062::default_instance_ = NULL;

Proto10102062* Proto10102062::New() const {
  return new Proto10102062;
}

void Proto10102062::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    type_ = 0;
  }
  index_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102062::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_index())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_index())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_index;
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102062::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 index = 1;
  for (int i = 0; i < this->index_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->index(i), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102062::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 index = 1;
  for (int i = 0; i < this->index_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->index(i), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102062::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  // repeated int32 index = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->index_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->index(i));
    }
    total_size += 1 * this->index_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102062::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102062* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102062*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102062::MergeFrom(const Proto10102062& from) {
  GOOGLE_CHECK_NE(&from, this);
  index_.MergeFrom(from.index_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102062::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102062::CopyFrom(const Proto10102062& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102062::IsInitialized() const {
  
  return true;
}

void Proto10102062::Swap(Proto10102062* other) {
  if (other != this) {
    index_.Swap(&other->index_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102062::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102062_descriptor_;
  metadata.reflection = Proto10102062_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102062::kFishDetailFieldNumber;
const int Proto50102062::kRetFieldNumber;
const int Proto50102062::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto50102062::Proto50102062()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102062::InitAsDefaultInstance() {
}

Proto50102062::Proto50102062(const Proto50102062& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102062::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102062::~Proto50102062() {
  SharedDtor();
}

void Proto50102062::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102062::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102062::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102062_descriptor_;
}

const Proto50102062& Proto50102062::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto50102062* Proto50102062::default_instance_ = NULL;

Proto50102062* Proto50102062::New() const {
  return new Proto50102062;
}

void Proto50102062::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    ret_ = 0;
    type_ = 0;
  }
  fish_detail_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102062::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .FishDetail fish_detail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fish_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fish_detail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_fish_detail;
        if (input->ExpectTag(16)) goto parse_ret;
        break;
      }
      
      // optional int32 ret = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ret:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }
      
      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102062::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .FishDetail fish_detail = 1;
  for (int i = 0; i < this->fish_detail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fish_detail(i), output);
  }
  
  // optional int32 ret = 2;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ret(), output);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102062::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .FishDetail fish_detail = 1;
  for (int i = 0; i < this->fish_detail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->fish_detail(i), target);
  }
  
  // optional int32 ret = 2;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ret(), target);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102062::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 ret = 2;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }
    
    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  // repeated .FishDetail fish_detail = 1;
  total_size += 1 * this->fish_detail_size();
  for (int i = 0; i < this->fish_detail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fish_detail(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102062::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102062* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102062*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102062::MergeFrom(const Proto50102062& from) {
  GOOGLE_CHECK_NE(&from, this);
  fish_detail_.MergeFrom(from.fish_detail_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102062::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102062::CopyFrom(const Proto50102062& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102062::IsInitialized() const {
  
  return true;
}

void Proto50102062::Swap(Proto50102062* other) {
  if (other != this) {
    fish_detail_.Swap(&other->fish_detail_);
    std::swap(ret_, other->ret_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102062::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102062_descriptor_;
  metadata.reflection = Proto50102062_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102063::kFishDetailFieldNumber;
#endif  // !_MSC_VER

Proto10102063::Proto10102063()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102063::InitAsDefaultInstance() {
}

Proto10102063::Proto10102063(const Proto10102063& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102063::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102063::~Proto10102063() {
  SharedDtor();
}

void Proto10102063::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102063::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102063::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102063_descriptor_;
}

const Proto10102063& Proto10102063::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10102063* Proto10102063::default_instance_ = NULL;

Proto10102063* Proto10102063::New() const {
  return new Proto10102063;
}

void Proto10102063::Clear() {
  fish_detail_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102063::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .FishDetail fish_detail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fish_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fish_detail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_fish_detail;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102063::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .FishDetail fish_detail = 1;
  for (int i = 0; i < this->fish_detail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fish_detail(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102063::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .FishDetail fish_detail = 1;
  for (int i = 0; i < this->fish_detail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->fish_detail(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102063::ByteSize() const {
  int total_size = 0;
  
  // repeated .FishDetail fish_detail = 1;
  total_size += 1 * this->fish_detail_size();
  for (int i = 0; i < this->fish_detail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fish_detail(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102063::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102063* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102063*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102063::MergeFrom(const Proto10102063& from) {
  GOOGLE_CHECK_NE(&from, this);
  fish_detail_.MergeFrom(from.fish_detail_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102063::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102063::CopyFrom(const Proto10102063& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102063::IsInitialized() const {
  
  return true;
}

void Proto10102063::Swap(Proto10102063* other) {
  if (other != this) {
    fish_detail_.Swap(&other->fish_detail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102063::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102063_descriptor_;
  metadata.reflection = Proto10102063_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102063::kFishDetailFieldNumber;
#endif  // !_MSC_VER

Proto50102063::Proto50102063()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102063::InitAsDefaultInstance() {
}

Proto50102063::Proto50102063(const Proto50102063& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102063::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102063::~Proto50102063() {
  SharedDtor();
}

void Proto50102063::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102063::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102063::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102063_descriptor_;
}

const Proto50102063& Proto50102063::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto50102063* Proto50102063::default_instance_ = NULL;

Proto50102063* Proto50102063::New() const {
  return new Proto50102063;
}

void Proto50102063::Clear() {
  fish_detail_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102063::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .FishDetail fish_detail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fish_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fish_detail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_fish_detail;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102063::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .FishDetail fish_detail = 1;
  for (int i = 0; i < this->fish_detail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fish_detail(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102063::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .FishDetail fish_detail = 1;
  for (int i = 0; i < this->fish_detail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->fish_detail(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102063::ByteSize() const {
  int total_size = 0;
  
  // repeated .FishDetail fish_detail = 1;
  total_size += 1 * this->fish_detail_size();
  for (int i = 0; i < this->fish_detail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fish_detail(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102063::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102063* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102063*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102063::MergeFrom(const Proto50102063& from) {
  GOOGLE_CHECK_NE(&from, this);
  fish_detail_.MergeFrom(from.fish_detail_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102063::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102063::CopyFrom(const Proto50102063& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102063::IsInitialized() const {
  
  return true;
}

void Proto50102063::Swap(Proto50102063* other) {
  if (other != this) {
    fish_detail_.Swap(&other->fish_detail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102063::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102063_descriptor_;
  metadata.reflection = Proto50102063_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101515::kNeedForceFieldNumber;
const int Proto10101515::kNameFieldNumber;
#endif  // !_MSC_VER

Proto10101515::Proto10101515()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101515::InitAsDefaultInstance() {
}

Proto10101515::Proto10101515(const Proto10101515& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101515::SharedCtor() {
  _cached_size_ = 0;
  need_force_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101515::~Proto10101515() {
  SharedDtor();
}

void Proto10101515::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Proto10101515::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101515::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101515_descriptor_;
}

const Proto10101515& Proto10101515::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10101515* Proto10101515::default_instance_ = NULL;

Proto10101515* Proto10101515::New() const {
  return new Proto10101515;
}

void Proto10101515::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    need_force_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101515::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 need_force = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_force_)));
          set_has_need_force();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101515::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 need_force = 1;
  if (has_need_force()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->need_force(), output);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101515::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 need_force = 1;
  if (has_need_force()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->need_force(), target);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101515::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 need_force = 1;
    if (has_need_force()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->need_force());
    }
    
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101515::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101515* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101515*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101515::MergeFrom(const Proto10101515& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_need_force()) {
      set_need_force(from.need_force());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101515::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101515::CopyFrom(const Proto10101515& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101515::IsInitialized() const {
  
  return true;
}

void Proto10101515::Swap(Proto10101515* other) {
  if (other != this) {
    std::swap(need_force_, other->need_force_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101515::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101515_descriptor_;
  metadata.reflection = Proto10101515_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10101516::kAutoTypeFieldNumber;
const int Proto10101516::kIsAutoFieldNumber;
#endif  // !_MSC_VER

Proto10101516::Proto10101516()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10101516::InitAsDefaultInstance() {
}

Proto10101516::Proto10101516(const Proto10101516& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10101516::SharedCtor() {
  _cached_size_ = 0;
  auto_type_ = 0;
  is_auto_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10101516::~Proto10101516() {
  SharedDtor();
}

void Proto10101516::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10101516::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10101516::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10101516_descriptor_;
}

const Proto10101516& Proto10101516::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10101516* Proto10101516::default_instance_ = NULL;

Proto10101516* Proto10101516::New() const {
  return new Proto10101516;
}

void Proto10101516::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    auto_type_ = 0;
    is_auto_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10101516::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 auto_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &auto_type_)));
          set_has_auto_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_is_auto;
        break;
      }
      
      // optional int32 is_auto = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_auto:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_auto_)));
          set_has_is_auto();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10101516::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 auto_type = 1;
  if (has_auto_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->auto_type(), output);
  }
  
  // optional int32 is_auto = 2;
  if (has_is_auto()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_auto(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10101516::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 auto_type = 1;
  if (has_auto_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->auto_type(), target);
  }
  
  // optional int32 is_auto = 2;
  if (has_is_auto()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_auto(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10101516::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 auto_type = 1;
    if (has_auto_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->auto_type());
    }
    
    // optional int32 is_auto = 2;
    if (has_is_auto()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_auto());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10101516::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10101516* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10101516*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10101516::MergeFrom(const Proto10101516& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_auto_type()) {
      set_auto_type(from.auto_type());
    }
    if (from.has_is_auto()) {
      set_is_auto(from.is_auto());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10101516::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10101516::CopyFrom(const Proto10101516& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10101516::IsInitialized() const {
  
  return true;
}

void Proto10101516::Swap(Proto10101516* other) {
  if (other != this) {
    std::swap(auto_type_, other->auto_type_);
    std::swap(is_auto_, other->is_auto_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10101516::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10101516_descriptor_;
  metadata.reflection = Proto10101516_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102064::kFishDetailFieldNumber;
#endif  // !_MSC_VER

Proto50102064::Proto50102064()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102064::InitAsDefaultInstance() {
}

Proto50102064::Proto50102064(const Proto50102064& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102064::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102064::~Proto50102064() {
  SharedDtor();
}

void Proto50102064::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102064::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102064::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102064_descriptor_;
}

const Proto50102064& Proto50102064::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto50102064* Proto50102064::default_instance_ = NULL;

Proto50102064* Proto50102064::New() const {
  return new Proto50102064;
}

void Proto50102064::Clear() {
  fish_detail_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102064::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .FishDetail fish_detail = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fish_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fish_detail()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_fish_detail;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102064::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .FishDetail fish_detail = 1;
  for (int i = 0; i < this->fish_detail_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fish_detail(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102064::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .FishDetail fish_detail = 1;
  for (int i = 0; i < this->fish_detail_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->fish_detail(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102064::ByteSize() const {
  int total_size = 0;
  
  // repeated .FishDetail fish_detail = 1;
  total_size += 1 * this->fish_detail_size();
  for (int i = 0; i < this->fish_detail_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fish_detail(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102064::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102064* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102064*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102064::MergeFrom(const Proto50102064& from) {
  GOOGLE_CHECK_NE(&from, this);
  fish_detail_.MergeFrom(from.fish_detail_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102064::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102064::CopyFrom(const Proto50102064& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102064::IsInitialized() const {
  
  return true;
}

void Proto50102064::Swap(Proto50102064* other) {
  if (other != this) {
    fish_detail_.Swap(&other->fish_detail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102064::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102064_descriptor_;
  metadata.reflection = Proto50102064_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102066::kItemFieldNumber;
const int Proto50102066::kArriveFieldNumber;
const int Proto50102066::kMaxArriveFieldNumber;
#endif  // !_MSC_VER

Proto50102066::Proto50102066()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102066::InitAsDefaultInstance() {
}

Proto50102066::Proto50102066(const Proto50102066& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102066::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102066::~Proto50102066() {
  SharedDtor();
}

void Proto50102066::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102066::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102066::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102066_descriptor_;
}

const Proto50102066& Proto50102066::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto50102066* Proto50102066::default_instance_ = NULL;

Proto50102066* Proto50102066::New() const {
  return new Proto50102066;
}

void Proto50102066::Clear() {
  item_.Clear();
  arrive_.Clear();
  max_arrive_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102066::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItemId item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_item;
        if (input->ExpectTag(16)) goto parse_arrive;
        break;
      }
      
      // repeated int32 arrive = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_arrive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_arrive())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_arrive())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_arrive;
        if (input->ExpectTag(24)) goto parse_max_arrive;
        break;
      }
      
      // repeated int32 max_arrive = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_arrive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_max_arrive())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_max_arrive())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_max_arrive;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102066::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItemId item = 1;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item(i), output);
  }
  
  // repeated int32 arrive = 2;
  for (int i = 0; i < this->arrive_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->arrive(i), output);
  }
  
  // repeated int32 max_arrive = 3;
  for (int i = 0; i < this->max_arrive_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->max_arrive(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102066::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItemId item = 1;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item(i), target);
  }
  
  // repeated int32 arrive = 2;
  for (int i = 0; i < this->arrive_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->arrive(i), target);
  }
  
  // repeated int32 max_arrive = 3;
  for (int i = 0; i < this->max_arrive_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->max_arrive(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102066::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoItemId item = 1;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }
  
  // repeated int32 arrive = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->arrive_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->arrive(i));
    }
    total_size += 1 * this->arrive_size() + data_size;
  }
  
  // repeated int32 max_arrive = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->max_arrive_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->max_arrive(i));
    }
    total_size += 1 * this->max_arrive_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102066::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102066* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102066*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102066::MergeFrom(const Proto50102066& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  arrive_.MergeFrom(from.arrive_);
  max_arrive_.MergeFrom(from.max_arrive_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102066::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102066::CopyFrom(const Proto50102066& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102066::IsInitialized() const {
  
  return true;
}

void Proto50102066::Swap(Proto50102066* other) {
  if (other != this) {
    item_.Swap(&other->item_);
    arrive_.Swap(&other->arrive_);
    max_arrive_.Swap(&other->max_arrive_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102066::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102066_descriptor_;
  metadata.reflection = Proto50102066_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102065::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto10102065::Proto10102065()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102065::InitAsDefaultInstance() {
}

Proto10102065::Proto10102065(const Proto10102065& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102065::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102065::~Proto10102065() {
  SharedDtor();
}

void Proto10102065::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102065::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102065::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102065_descriptor_;
}

const Proto10102065& Proto10102065::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10102065* Proto10102065::default_instance_ = NULL;

Proto10102065* Proto10102065::New() const {
  return new Proto10102065;
}

void Proto10102065::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102065::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102065::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102065::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102065::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102065::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102065* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102065*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102065::MergeFrom(const Proto10102065& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102065::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102065::CopyFrom(const Proto10102065& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102065::IsInitialized() const {
  
  return true;
}

void Proto10102065::Swap(Proto10102065* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102065::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102065_descriptor_;
  metadata.reflection = Proto10102065_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102065::kRetFieldNumber;
const int Proto50102065::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto50102065::Proto50102065()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102065::InitAsDefaultInstance() {
}

Proto50102065::Proto50102065(const Proto50102065& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102065::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102065::~Proto50102065() {
  SharedDtor();
}

void Proto50102065::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102065::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102065::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102065_descriptor_;
}

const Proto50102065& Proto50102065::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto50102065* Proto50102065::default_instance_ = NULL;

Proto50102065* Proto50102065::New() const {
  return new Proto50102065;
}

void Proto50102065::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102065::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }
      
      // optional int32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102065::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102065::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102065::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }
    
    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102065::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102065* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102065*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102065::MergeFrom(const Proto50102065& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102065::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102065::CopyFrom(const Proto50102065& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102065::IsInitialized() const {
  
  return true;
}

void Proto50102065::Swap(Proto50102065* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102065::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102065_descriptor_;
  metadata.reflection = Proto50102065_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102067::kBlessValueFieldNumber;
const int Proto50102067::kRewardRecordAllServerListFieldNumber;
const int Proto50102067::kRewardRecordSelfListFieldNumber;
const int Proto50102067::kItemExchangeTimesListFieldNumber;
const int Proto50102067::kSurplusTimeFieldNumber;
#endif  // !_MSC_VER

Proto50102067::Proto50102067()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102067::InitAsDefaultInstance() {
}

Proto50102067::Proto50102067(const Proto50102067& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102067::SharedCtor() {
  _cached_size_ = 0;
  bless_value_ = 0;
  surplus_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102067::~Proto50102067() {
  SharedDtor();
}

void Proto50102067::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102067::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102067::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102067_descriptor_;
}

const Proto50102067& Proto50102067::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto50102067* Proto50102067::default_instance_ = NULL;

Proto50102067* Proto50102067::New() const {
  return new Proto50102067;
}

void Proto50102067::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    bless_value_ = 0;
    surplus_time_ = 0;
  }
  reward_record_all_server_list_.Clear();
  reward_record_self_list_.Clear();
  item_exchange_times_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102067::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bless_value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bless_value_)));
          set_has_bless_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_reward_record_all_server_list;
        break;
      }
      
      // repeated .ProtoServerRecord reward_record_all_server_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_reward_record_all_server_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_record_all_server_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_reward_record_all_server_list;
        if (input->ExpectTag(26)) goto parse_reward_record_self_list;
        break;
      }
      
      // repeated .ProtoItemId reward_record_self_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_reward_record_self_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_record_self_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_reward_record_self_list;
        if (input->ExpectTag(34)) goto parse_item_exchange_times_list;
        break;
      }
      
      // repeated .ProtoItemExchangeTimes item_exchange_times_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_exchange_times_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_exchange_times_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_item_exchange_times_list;
        if (input->ExpectTag(40)) goto parse_surplus_time;
        break;
      }
      
      // optional int32 surplus_time = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_surplus_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &surplus_time_)));
          set_has_surplus_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102067::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 bless_value = 1;
  if (has_bless_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bless_value(), output);
  }
  
  // repeated .ProtoServerRecord reward_record_all_server_list = 2;
  for (int i = 0; i < this->reward_record_all_server_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->reward_record_all_server_list(i), output);
  }
  
  // repeated .ProtoItemId reward_record_self_list = 3;
  for (int i = 0; i < this->reward_record_self_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->reward_record_self_list(i), output);
  }
  
  // repeated .ProtoItemExchangeTimes item_exchange_times_list = 4;
  for (int i = 0; i < this->item_exchange_times_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->item_exchange_times_list(i), output);
  }
  
  // optional int32 surplus_time = 5;
  if (has_surplus_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->surplus_time(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102067::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 bless_value = 1;
  if (has_bless_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bless_value(), target);
  }
  
  // repeated .ProtoServerRecord reward_record_all_server_list = 2;
  for (int i = 0; i < this->reward_record_all_server_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->reward_record_all_server_list(i), target);
  }
  
  // repeated .ProtoItemId reward_record_self_list = 3;
  for (int i = 0; i < this->reward_record_self_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->reward_record_self_list(i), target);
  }
  
  // repeated .ProtoItemExchangeTimes item_exchange_times_list = 4;
  for (int i = 0; i < this->item_exchange_times_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->item_exchange_times_list(i), target);
  }
  
  // optional int32 surplus_time = 5;
  if (has_surplus_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->surplus_time(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102067::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 bless_value = 1;
    if (has_bless_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bless_value());
    }
    
    // optional int32 surplus_time = 5;
    if (has_surplus_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->surplus_time());
    }
    
  }
  // repeated .ProtoServerRecord reward_record_all_server_list = 2;
  total_size += 1 * this->reward_record_all_server_list_size();
  for (int i = 0; i < this->reward_record_all_server_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_record_all_server_list(i));
  }
  
  // repeated .ProtoItemId reward_record_self_list = 3;
  total_size += 1 * this->reward_record_self_list_size();
  for (int i = 0; i < this->reward_record_self_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_record_self_list(i));
  }
  
  // repeated .ProtoItemExchangeTimes item_exchange_times_list = 4;
  total_size += 1 * this->item_exchange_times_list_size();
  for (int i = 0; i < this->item_exchange_times_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_exchange_times_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102067::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102067* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102067*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102067::MergeFrom(const Proto50102067& from) {
  GOOGLE_CHECK_NE(&from, this);
  reward_record_all_server_list_.MergeFrom(from.reward_record_all_server_list_);
  reward_record_self_list_.MergeFrom(from.reward_record_self_list_);
  item_exchange_times_list_.MergeFrom(from.item_exchange_times_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bless_value()) {
      set_bless_value(from.bless_value());
    }
    if (from.has_surplus_time()) {
      set_surplus_time(from.surplus_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102067::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102067::CopyFrom(const Proto50102067& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102067::IsInitialized() const {
  
  return true;
}

void Proto50102067::Swap(Proto50102067* other) {
  if (other != this) {
    std::swap(bless_value_, other->bless_value_);
    reward_record_all_server_list_.Swap(&other->reward_record_all_server_list_);
    reward_record_self_list_.Swap(&other->reward_record_self_list_);
    item_exchange_times_list_.Swap(&other->item_exchange_times_list_);
    std::swap(surplus_time_, other->surplus_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102067::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102067_descriptor_;
  metadata.reflection = Proto50102067_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102068::kBlessNumberFieldNumber;
#endif  // !_MSC_VER

Proto10102068::Proto10102068()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102068::InitAsDefaultInstance() {
}

Proto10102068::Proto10102068(const Proto10102068& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102068::SharedCtor() {
  _cached_size_ = 0;
  bless_number_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102068::~Proto10102068() {
  SharedDtor();
}

void Proto10102068::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102068::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102068::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102068_descriptor_;
}

const Proto10102068& Proto10102068::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10102068* Proto10102068::default_instance_ = NULL;

Proto10102068* Proto10102068::New() const {
  return new Proto10102068;
}

void Proto10102068::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    bless_number_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102068::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bless_number = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bless_number_)));
          set_has_bless_number();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102068::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 bless_number = 1;
  if (has_bless_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bless_number(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102068::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 bless_number = 1;
  if (has_bless_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bless_number(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102068::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 bless_number = 1;
    if (has_bless_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bless_number());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102068::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102068* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102068*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102068::MergeFrom(const Proto10102068& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bless_number()) {
      set_bless_number(from.bless_number());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102068::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102068::CopyFrom(const Proto10102068& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102068::IsInitialized() const {
  
  return true;
}

void Proto10102068::Swap(Proto10102068* other) {
  if (other != this) {
    std::swap(bless_number_, other->bless_number_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102068::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102068_descriptor_;
  metadata.reflection = Proto10102068_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102068::kResultFieldNumber;
#endif  // !_MSC_VER

Proto50102068::Proto50102068()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102068::InitAsDefaultInstance() {
}

Proto50102068::Proto50102068(const Proto50102068& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102068::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102068::~Proto50102068() {
  SharedDtor();
}

void Proto50102068::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102068::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102068::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102068_descriptor_;
}

const Proto50102068& Proto50102068::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto50102068* Proto50102068::default_instance_ = NULL;

Proto50102068* Proto50102068::New() const {
  return new Proto50102068;
}

void Proto50102068::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102068::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102068::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102068::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102068::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102068::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102068* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102068*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102068::MergeFrom(const Proto50102068& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102068::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102068::CopyFrom(const Proto50102068& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102068::IsInitialized() const {
  
  return true;
}

void Proto50102068::Swap(Proto50102068* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102068::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102068_descriptor_;
  metadata.reflection = Proto50102068_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102069::kExchangeItemIdFieldNumber;
#endif  // !_MSC_VER

Proto10102069::Proto10102069()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102069::InitAsDefaultInstance() {
}

Proto10102069::Proto10102069(const Proto10102069& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102069::SharedCtor() {
  _cached_size_ = 0;
  exchange_item_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102069::~Proto10102069() {
  SharedDtor();
}

void Proto10102069::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102069::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102069::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102069_descriptor_;
}

const Proto10102069& Proto10102069::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10102069* Proto10102069::default_instance_ = NULL;

Proto10102069* Proto10102069::New() const {
  return new Proto10102069;
}

void Proto10102069::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    exchange_item_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102069::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 exchange_item_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exchange_item_id_)));
          set_has_exchange_item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102069::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 exchange_item_id = 1;
  if (has_exchange_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->exchange_item_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102069::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 exchange_item_id = 1;
  if (has_exchange_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->exchange_item_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102069::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 exchange_item_id = 1;
    if (has_exchange_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exchange_item_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102069::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102069* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102069*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102069::MergeFrom(const Proto10102069& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_exchange_item_id()) {
      set_exchange_item_id(from.exchange_item_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102069::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102069::CopyFrom(const Proto10102069& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102069::IsInitialized() const {
  
  return true;
}

void Proto10102069::Swap(Proto10102069* other) {
  if (other != this) {
    std::swap(exchange_item_id_, other->exchange_item_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102069::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102069_descriptor_;
  metadata.reflection = Proto10102069_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102069::kResultFieldNumber;
#endif  // !_MSC_VER

Proto50102069::Proto50102069()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102069::InitAsDefaultInstance() {
}

Proto50102069::Proto50102069(const Proto50102069& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102069::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102069::~Proto50102069() {
  SharedDtor();
}

void Proto50102069::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102069::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102069::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102069_descriptor_;
}

const Proto50102069& Proto50102069::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto50102069* Proto50102069::default_instance_ = NULL;

Proto50102069* Proto50102069::New() const {
  return new Proto50102069;
}

void Proto50102069::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    result_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102069::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102069::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 result = 1;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102069::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 result = 1;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102069::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 result = 1;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102069::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102069* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102069*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102069::MergeFrom(const Proto50102069& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102069::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102069::CopyFrom(const Proto50102069& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102069::IsInitialized() const {
  
  return true;
}

void Proto50102069::Swap(Proto50102069* other) {
  if (other != this) {
    std::swap(result_, other->result_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102069::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102069_descriptor_;
  metadata.reflection = Proto50102069_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400421::kGradeFieldNumber;
const int Proto51400421::kPropFieldNumber;
const int Proto51400421::kOpenFieldNumber;
#endif  // !_MSC_VER

Proto51400421::Proto51400421()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400421::InitAsDefaultInstance() {
  prop_ = const_cast< ::ProtoFightPro*>(&::ProtoFightPro::default_instance());
}

Proto51400421::Proto51400421(const Proto51400421& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400421::SharedCtor() {
  _cached_size_ = 0;
  grade_ = 0;
  prop_ = NULL;
  open_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400421::~Proto51400421() {
  SharedDtor();
}

void Proto51400421::SharedDtor() {
  if (this != default_instance_) {
    delete prop_;
  }
}

void Proto51400421::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400421::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400421_descriptor_;
}

const Proto51400421& Proto51400421::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto51400421* Proto51400421::default_instance_ = NULL;

Proto51400421* Proto51400421::New() const {
  return new Proto51400421;
}

void Proto51400421::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    grade_ = 0;
    if (has_prop()) {
      if (prop_ != NULL) prop_->::ProtoFightPro::Clear();
    }
    open_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400421::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 grade = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &grade_)));
          set_has_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_prop;
        break;
      }
      
      // optional .ProtoFightPro prop = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prop()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_open;
        break;
      }
      
      // optional int32 open = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_)));
          set_has_open();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400421::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 grade = 1;
  if (has_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->grade(), output);
  }
  
  // optional .ProtoFightPro prop = 2;
  if (has_prop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->prop(), output);
  }
  
  // optional int32 open = 3;
  if (has_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->open(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400421::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 grade = 1;
  if (has_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->grade(), target);
  }
  
  // optional .ProtoFightPro prop = 2;
  if (has_prop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->prop(), target);
  }
  
  // optional int32 open = 3;
  if (has_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->open(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400421::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 grade = 1;
    if (has_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->grade());
    }
    
    // optional .ProtoFightPro prop = 2;
    if (has_prop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prop());
    }
    
    // optional int32 open = 3;
    if (has_open()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400421::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400421* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400421*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400421::MergeFrom(const Proto51400421& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_grade()) {
      set_grade(from.grade());
    }
    if (from.has_prop()) {
      mutable_prop()->::ProtoFightPro::MergeFrom(from.prop());
    }
    if (from.has_open()) {
      set_open(from.open());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400421::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400421::CopyFrom(const Proto51400421& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400421::IsInitialized() const {
  
  return true;
}

void Proto51400421::Swap(Proto51400421* other) {
  if (other != this) {
    std::swap(grade_, other->grade_);
    std::swap(prop_, other->prop_);
    std::swap(open_, other->open_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400421::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400421_descriptor_;
  metadata.reflection = Proto51400421_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102070::kCountFieldNumber;
#endif  // !_MSC_VER

Proto10102070::Proto10102070()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102070::InitAsDefaultInstance() {
}

Proto10102070::Proto10102070(const Proto10102070& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102070::SharedCtor() {
  _cached_size_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102070::~Proto10102070() {
  SharedDtor();
}

void Proto10102070::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102070::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102070::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102070_descriptor_;
}

const Proto10102070& Proto10102070::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10102070* Proto10102070::default_instance_ = NULL;

Proto10102070* Proto10102070::New() const {
  return new Proto10102070;
}

void Proto10102070::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102070::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 count = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102070::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 count = 1;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->count(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102070::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 count = 1;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->count(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102070::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 count = 1;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102070::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102070* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102070*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102070::MergeFrom(const Proto10102070& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102070::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102070::CopyFrom(const Proto10102070& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102070::IsInitialized() const {
  
  return true;
}

void Proto10102070::Swap(Proto10102070* other) {
  if (other != this) {
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102070::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102070_descriptor_;
  metadata.reflection = Proto10102070_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102071::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto10102071::Proto10102071()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102071::InitAsDefaultInstance() {
}

Proto10102071::Proto10102071(const Proto10102071& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102071::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102071::~Proto10102071() {
  SharedDtor();
}

void Proto10102071::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102071::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102071::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102071_descriptor_;
}

const Proto10102071& Proto10102071::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto10102071* Proto10102071::default_instance_ = NULL;

Proto10102071* Proto10102071::New() const {
  return new Proto10102071;
}

void Proto10102071::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102071::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102071::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102071::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102071::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102071::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102071* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102071*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102071::MergeFrom(const Proto10102071& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102071::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102071::CopyFrom(const Proto10102071& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102071::IsInitialized() const {
  
  return true;
}

void Proto10102071::Swap(Proto10102071* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102071::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102071_descriptor_;
  metadata.reflection = Proto10102071_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102071::kRetFieldNumber;
#endif  // !_MSC_VER

Proto50102071::Proto50102071()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102071::InitAsDefaultInstance() {
}

Proto50102071::Proto50102071(const Proto50102071& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102071::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102071::~Proto50102071() {
  SharedDtor();
}

void Proto50102071::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102071::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102071::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102071_descriptor_;
}

const Proto50102071& Proto50102071::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient023_2eproto();  return *default_instance_;
}

Proto50102071* Proto50102071::default_instance_ = NULL;

Proto50102071* Proto50102071::New() const {
  return new Proto50102071;
}

void Proto50102071::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    ret_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102071::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102071::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102071::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102071::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102071::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102071* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102071*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102071::MergeFrom(const Proto50102071& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102071::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102071::CopyFrom(const Proto50102071& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102071::IsInitialized() const {
  
  return true;
}

void Proto50102071::Swap(Proto50102071* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102071::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102071_descriptor_;
  metadata.reflection = Proto50102071_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
