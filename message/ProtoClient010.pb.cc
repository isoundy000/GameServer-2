// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient010.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto80400348_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400348_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400349_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400349_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400350_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400350_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400351_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400351_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400803_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400803_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400803_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400803_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400602_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400602_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100906_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100906_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100906_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100906_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400203_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400203_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400919_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400919_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400919_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400919_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400920_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400920_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400920_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400920_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400703_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400703_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400705_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400705_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400705_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400705_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400109_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400109_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401801_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401801_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401801_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401801_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400150_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400150_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51400003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51400003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401803_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401803_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401804_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401804_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11400151_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11400151_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401452_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401452_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401452_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401452_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51401451_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51401451_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401406_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401406_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401407_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401407_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11401461_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11401461_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400915_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400915_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400930_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400930_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400932_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400932_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400931_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400931_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400931_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400931_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400932_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400932_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401901_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401901_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400933_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400933_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400933_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400933_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400934_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400934_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81401408_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81401408_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400916_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400916_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100645_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100645_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100646_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100646_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400322_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400322_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400322_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400322_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400323_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400323_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400223_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400223_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80400365_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80400365_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient010_2eproto() {
  protobuf_AddDesc_ProtoClient010_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient010.proto");
  GOOGLE_CHECK(file != NULL);
  Proto80400348_descriptor_ = file->message_type(0);
  static const int Proto80400348_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400348, win_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400348, lose_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400348, win_count_),
  };
  Proto80400348_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400348_descriptor_,
      Proto80400348::default_instance_,
      Proto80400348_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400348, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400348, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400348));
  Proto80400349_descriptor_ = file->message_type(1);
  static const int Proto80400349_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400349, win_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400349, lose_name_),
  };
  Proto80400349_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400349_descriptor_,
      Proto80400349::default_instance_,
      Proto80400349_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400349, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400349, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400349));
  Proto80400350_descriptor_ = file->message_type(2);
  static const int Proto80400350_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400350, first_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400350, first_cur_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400350, first_total_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400350, first_cur_magic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400350, first_total_magic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400350, second_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400350, second_cur_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400350, second_total_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400350, second_cur_magic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400350, second_total_magic_),
  };
  Proto80400350_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400350_descriptor_,
      Proto80400350::default_instance_,
      Proto80400350_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400350, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400350, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400350));
  Proto80400351_descriptor_ = file->message_type(3);
  static const int Proto80400351_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400351, first_role_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400351, second_role_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400351, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400351, is_first_),
  };
  Proto80400351_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400351_descriptor_,
      Proto80400351::default_instance_,
      Proto80400351_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400351, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400351, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400351));
  Proto10400803_descriptor_ = file->message_type(4);
  static const int Proto10400803_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400803, page_),
  };
  Proto10400803_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400803_descriptor_,
      Proto10400803::default_instance_,
      Proto10400803_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400803, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400803, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400803));
  Proto50400803_descriptor_ = file->message_type(5);
  static const int Proto50400803_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400803, self_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400803, rank_),
  };
  Proto50400803_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400803_descriptor_,
      Proto50400803::default_instance_,
      Proto50400803_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400803, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400803, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400803));
  Proto80400602_descriptor_ = file->message_type(6);
  static const int Proto80400602_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400602, master_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400602, beast_id_),
  };
  Proto80400602_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400602_descriptor_,
      Proto80400602::default_instance_,
      Proto80400602_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400602, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400602, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400602));
  Proto10100906_descriptor_ = file->message_type(7);
  static const int Proto10100906_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100906, evaluate_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100906, record_id_),
  };
  Proto10100906_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100906_descriptor_,
      Proto10100906::default_instance_,
      Proto10100906_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100906, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100906, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100906));
  Proto50100906_descriptor_ = file->message_type(8);
  static const int Proto50100906_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100906, evaluate_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100906, record_id_),
  };
  Proto50100906_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100906_descriptor_,
      Proto50100906::default_instance_,
      Proto50100906_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100906, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100906, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100906));
  Proto81400203_descriptor_ = file->message_type(9);
  static const int Proto81400203_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400203, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400203, task_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400203, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400203, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400203, cond_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400203, cond_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400203, cond_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400203, cur_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400203, final_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400203, routine_dice_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400203, is_first_routine_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400203, total_routine_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400203, routine_task_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400203, kill_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400203, range_level_),
  };
  Proto81400203_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400203_descriptor_,
      Proto81400203::default_instance_,
      Proto81400203_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400203, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400203, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400203));
  Proto10400919_descriptor_ = file->message_type(10);
  static const int Proto10400919_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400919, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400919, inc_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400919, cur_gold_),
  };
  Proto10400919_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400919_descriptor_,
      Proto10400919::default_instance_,
      Proto10400919_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400919, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400919, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400919));
  Proto50400919_descriptor_ = file->message_type(11);
  static const int Proto50400919_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400919, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400919, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400919, left_times_),
  };
  Proto50400919_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400919_descriptor_,
      Proto50400919::default_instance_,
      Proto50400919_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400919, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400919, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400919));
  Proto10400920_descriptor_ = file->message_type(12);
  static const int Proto10400920_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400920, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400920, inc_times_),
  };
  Proto10400920_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400920_descriptor_,
      Proto10400920::default_instance_,
      Proto10400920_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400920, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400920, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400920));
  Proto50400920_descriptor_ = file->message_type(13);
  static const int Proto50400920_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400920, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400920, left_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400920, left_buy_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400920, left_get_),
  };
  Proto50400920_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400920_descriptor_,
      Proto50400920::default_instance_,
      Proto50400920_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400920, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400920, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400920));
  Proto50400703_descriptor_ = file->message_type(14);
  static const int Proto50400703_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400703, scheme_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400703, scheme_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400703, scheme_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400703, cur_scheme_),
  };
  Proto50400703_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400703_descriptor_,
      Proto50400703::default_instance_,
      Proto50400703_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400703, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400703, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400703));
  Proto10400705_descriptor_ = file->message_type(15);
  static const int Proto10400705_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400705, skill_id_),
  };
  Proto10400705_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400705_descriptor_,
      Proto10400705::default_instance_,
      Proto10400705_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400705, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400705, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400705));
  Proto50400705_descriptor_ = file->message_type(16);
  static const int Proto50400705_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400705, skill_id_),
  };
  Proto50400705_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400705_descriptor_,
      Proto50400705::default_instance_,
      Proto50400705_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400705, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400705, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400705));
  Proto81400109_descriptor_ = file->message_type(17);
  static const int Proto81400109_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400109, lack_copper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400109, lack_bind_copper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400109, return_recogn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400109, need_gold_),
  };
  Proto81400109_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400109_descriptor_,
      Proto81400109::default_instance_,
      Proto81400109_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400109, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400109, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400109));
  Proto81401801_descriptor_ = file->message_type(18);
  static const int Proto81401801_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401801, is_start_),
  };
  Proto81401801_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401801_descriptor_,
      Proto81401801::default_instance_,
      Proto81401801_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401801, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401801, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401801));
  Proto51401801_descriptor_ = file->message_type(19);
  static const int Proto51401801_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401801, awards_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401801, display_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401801, has_awards_),
  };
  Proto51401801_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401801_descriptor_,
      Proto51401801::default_instance_,
      Proto51401801_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401801, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401801, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401801));
  Proto11400150_descriptor_ = file->message_type(20);
  static const int Proto11400150_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400150, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400150, money_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400150, recogn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400150, never_confirm_),
  };
  Proto11400150_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400150_descriptor_,
      Proto11400150::default_instance_,
      Proto11400150_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400150, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400150, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400150));
  Proto51400003_descriptor_ = file->message_type(21);
  static const int Proto51400003_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400003, buff_status_set_),
  };
  Proto51400003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51400003_descriptor_,
      Proto51400003::default_instance_,
      Proto51400003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51400003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51400003));
  Proto81401803_descriptor_ = file->message_type(22);
  static const int Proto81401803_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401803, today_recharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401803, rewards_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401803, reward_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401803, show_icon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401803, start_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401803, end_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401803, first_recharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401803, vip_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401803, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401803, first_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401803, total_gold_),
  };
  Proto81401803_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401803_descriptor_,
      Proto81401803::default_instance_,
      Proto81401803_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401803, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401803, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401803));
  Proto11401804_descriptor_ = file->message_type(23);
  static const int Proto11401804_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401804, reward_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401804, item_list_),
  };
  Proto11401804_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401804_descriptor_,
      Proto11401804::default_instance_,
      Proto11401804_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401804, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401804, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401804));
  Proto11400151_descriptor_ = file->message_type(24);
  static const int Proto11400151_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400151, scene_id_),
  };
  Proto11400151_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11400151_descriptor_,
      Proto11400151::default_instance_,
      Proto11400151_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400151, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11400151, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11400151));
  Proto11401452_descriptor_ = file->message_type(25);
  static const int Proto11401452_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401452, level_),
  };
  Proto11401452_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401452_descriptor_,
      Proto11401452::default_instance_,
      Proto11401452_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401452, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401452, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401452));
  Proto51401452_descriptor_ = file->message_type(26);
  static const int Proto51401452_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401452, level_),
  };
  Proto51401452_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401452_descriptor_,
      Proto51401452::default_instance_,
      Proto51401452_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401452, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401452, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401452));
  Proto51401451_descriptor_ = file->message_type(27);
  static const int Proto51401451_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401451, rewards_info_),
  };
  Proto51401451_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51401451_descriptor_,
      Proto51401451::default_instance_,
      Proto51401451_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401451, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51401451, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51401451));
  Proto81401406_descriptor_ = file->message_type(28);
  static const int Proto81401406_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401406, enable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401406, awrds_num_),
  };
  Proto81401406_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401406_descriptor_,
      Proto81401406::default_instance_,
      Proto81401406_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401406, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401406, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401406));
  Proto81401407_descriptor_ = file->message_type(29);
  static const int Proto81401407_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401407, records_),
  };
  Proto81401407_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401407_descriptor_,
      Proto81401407::default_instance_,
      Proto81401407_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401407, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401407, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401407));
  Proto11401461_descriptor_ = file->message_type(30);
  static const int Proto11401461_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401461, id_),
  };
  Proto11401461_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11401461_descriptor_,
      Proto11401461::default_instance_,
      Proto11401461_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401461, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11401461, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11401461));
  Proto80400915_descriptor_ = file->message_type(31);
  static const int Proto80400915_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400915, attackor_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400915, defender_id_),
  };
  Proto80400915_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400915_descriptor_,
      Proto80400915::default_instance_,
      Proto80400915_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400915, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400915, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400915));
  Proto10400930_descriptor_ = file->message_type(32);
  static const int Proto10400930_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400930, scene_id_),
  };
  Proto10400930_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400930_descriptor_,
      Proto10400930::default_instance_,
      Proto10400930_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400930, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400930, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400930));
  Proto50400932_descriptor_ = file->message_type(33);
  static const int Proto50400932_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400932, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400932, script_sort_),
  };
  Proto50400932_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400932_descriptor_,
      Proto50400932::default_instance_,
      Proto50400932_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400932, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400932, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400932));
  Proto50400931_descriptor_ = file->message_type(34);
  static const int Proto50400931_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400931, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400931, script_sort_),
  };
  Proto50400931_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400931_descriptor_,
      Proto50400931::default_instance_,
      Proto50400931_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400931, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400931, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400931));
  Proto10400931_descriptor_ = file->message_type(35);
  static const int Proto10400931_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400931, script_sort_),
  };
  Proto10400931_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400931_descriptor_,
      Proto10400931::default_instance_,
      Proto10400931_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400931, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400931, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400931));
  Proto10400932_descriptor_ = file->message_type(36);
  static const int Proto10400932_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400932, script_sort_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400932, stage_),
  };
  Proto10400932_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400932_descriptor_,
      Proto10400932::default_instance_,
      Proto10400932_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400932, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400932, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400932));
  Proto81401901_descriptor_ = file->message_type(37);
  static const int Proto81401901_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401901, equip_red_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401901, treasures_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401901, gift_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401901, market_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401901, shop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401901, transfer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401901, molding_spirit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401901, jewel_sublime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401901, special_box_),
  };
  Proto81401901_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401901_descriptor_,
      Proto81401901::default_instance_,
      Proto81401901_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401901, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401901, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401901));
  Proto10400933_descriptor_ = file->message_type(38);
  static const int Proto10400933_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400933, piece_),
  };
  Proto10400933_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400933_descriptor_,
      Proto10400933::default_instance_,
      Proto10400933_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400933, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400933, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400933));
  Proto50400933_descriptor_ = file->message_type(39);
  static const int Proto50400933_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400933, piece_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400933, total_star_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400933, drawed_star_),
  };
  Proto50400933_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400933_descriptor_,
      Proto50400933::default_instance_,
      Proto50400933_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400933, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400933, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400933));
  Proto10400934_descriptor_ = file->message_type(40);
  static const int Proto10400934_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400934, piece_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400934, award_star_),
  };
  Proto10400934_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400934_descriptor_,
      Proto10400934::default_instance_,
      Proto10400934_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400934, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400934, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400934));
  Proto81401408_descriptor_ = file->message_type(41);
  static const int Proto81401408_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401408, remain_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401408, reward_amount_),
  };
  Proto81401408_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81401408_descriptor_,
      Proto81401408::default_instance_,
      Proto81401408_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401408, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81401408, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81401408));
  Proto80400916_descriptor_ = file->message_type(42);
  static const int Proto80400916_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400916, compact_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400916, left_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400916, date_tick_),
  };
  Proto80400916_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400916_descriptor_,
      Proto80400916::default_instance_,
      Proto80400916_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400916, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400916, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400916));
  Proto10100645_descriptor_ = file->message_type(43);
  static const int Proto10100645_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100645, type_),
  };
  Proto10100645_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100645_descriptor_,
      Proto10100645::default_instance_,
      Proto10100645_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100645, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100645, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100645));
  Proto50100646_descriptor_ = file->message_type(44);
  static const int Proto50100646_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100646, left_times_),
  };
  Proto50100646_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100646_descriptor_,
      Proto50100646::default_instance_,
      Proto50100646_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100646, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100646, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100646));
  Proto10400322_descriptor_ = file->message_type(45);
  static const int Proto10400322_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400322, page_index_),
  };
  Proto10400322_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400322_descriptor_,
      Proto10400322::default_instance_,
      Proto10400322_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400322, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400322, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400322));
  Proto50400322_descriptor_ = file->message_type(46);
  static const int Proto50400322_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400322, page_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400322, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400322, rank_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400322, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400322, finish_percent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400322, self_item_),
  };
  Proto50400322_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400322_descriptor_,
      Proto50400322::default_instance_,
      Proto50400322_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400322, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400322, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400322));
  Proto50400323_descriptor_ = file->message_type(47);
  static const int Proto50400323_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400323, item_set_),
  };
  Proto50400323_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400323_descriptor_,
      Proto50400323::default_instance_,
      Proto50400323_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400323, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400323, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400323));
  Proto80400223_descriptor_ = file->message_type(48);
  static const int Proto80400223_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400223, fighter_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400223, skill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400223, skill_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400223, skill_pixel_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400223, skill_pixel_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400223, target_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400223, target_id_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400223, type_),
  };
  Proto80400223_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400223_descriptor_,
      Proto80400223::default_instance_,
      Proto80400223_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400223, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400223, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400223));
  Proto80400365_descriptor_ = file->message_type(49);
  static const int Proto80400365_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400365, rank_set_),
  };
  Proto80400365_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80400365_descriptor_,
      Proto80400365::default_instance_,
      Proto80400365_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400365, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80400365, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80400365));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient010_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400348_descriptor_, &Proto80400348::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400349_descriptor_, &Proto80400349::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400350_descriptor_, &Proto80400350::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400351_descriptor_, &Proto80400351::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400803_descriptor_, &Proto10400803::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400803_descriptor_, &Proto50400803::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400602_descriptor_, &Proto80400602::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100906_descriptor_, &Proto10100906::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100906_descriptor_, &Proto50100906::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400203_descriptor_, &Proto81400203::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400919_descriptor_, &Proto10400919::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400919_descriptor_, &Proto50400919::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400920_descriptor_, &Proto10400920::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400920_descriptor_, &Proto50400920::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400703_descriptor_, &Proto50400703::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400705_descriptor_, &Proto10400705::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400705_descriptor_, &Proto50400705::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400109_descriptor_, &Proto81400109::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401801_descriptor_, &Proto81401801::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401801_descriptor_, &Proto51401801::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400150_descriptor_, &Proto11400150::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51400003_descriptor_, &Proto51400003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401803_descriptor_, &Proto81401803::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401804_descriptor_, &Proto11401804::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11400151_descriptor_, &Proto11400151::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401452_descriptor_, &Proto11401452::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401452_descriptor_, &Proto51401452::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51401451_descriptor_, &Proto51401451::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401406_descriptor_, &Proto81401406::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401407_descriptor_, &Proto81401407::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11401461_descriptor_, &Proto11401461::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400915_descriptor_, &Proto80400915::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400930_descriptor_, &Proto10400930::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400932_descriptor_, &Proto50400932::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400931_descriptor_, &Proto50400931::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400931_descriptor_, &Proto10400931::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400932_descriptor_, &Proto10400932::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401901_descriptor_, &Proto81401901::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400933_descriptor_, &Proto10400933::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400933_descriptor_, &Proto50400933::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400934_descriptor_, &Proto10400934::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81401408_descriptor_, &Proto81401408::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400916_descriptor_, &Proto80400916::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100645_descriptor_, &Proto10100645::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100646_descriptor_, &Proto50100646::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400322_descriptor_, &Proto10400322::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400322_descriptor_, &Proto50400322::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400323_descriptor_, &Proto50400323::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400223_descriptor_, &Proto80400223::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80400365_descriptor_, &Proto80400365::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient010_2eproto() {
  delete Proto80400348::default_instance_;
  delete Proto80400348_reflection_;
  delete Proto80400349::default_instance_;
  delete Proto80400349_reflection_;
  delete Proto80400350::default_instance_;
  delete Proto80400350_reflection_;
  delete Proto80400351::default_instance_;
  delete Proto80400351_reflection_;
  delete Proto10400803::default_instance_;
  delete Proto10400803_reflection_;
  delete Proto50400803::default_instance_;
  delete Proto50400803_reflection_;
  delete Proto80400602::default_instance_;
  delete Proto80400602_reflection_;
  delete Proto10100906::default_instance_;
  delete Proto10100906_reflection_;
  delete Proto50100906::default_instance_;
  delete Proto50100906_reflection_;
  delete Proto81400203::default_instance_;
  delete Proto81400203_reflection_;
  delete Proto10400919::default_instance_;
  delete Proto10400919_reflection_;
  delete Proto50400919::default_instance_;
  delete Proto50400919_reflection_;
  delete Proto10400920::default_instance_;
  delete Proto10400920_reflection_;
  delete Proto50400920::default_instance_;
  delete Proto50400920_reflection_;
  delete Proto50400703::default_instance_;
  delete Proto50400703_reflection_;
  delete Proto10400705::default_instance_;
  delete Proto10400705_reflection_;
  delete Proto50400705::default_instance_;
  delete Proto50400705_reflection_;
  delete Proto81400109::default_instance_;
  delete Proto81400109_reflection_;
  delete Proto81401801::default_instance_;
  delete Proto81401801_reflection_;
  delete Proto51401801::default_instance_;
  delete Proto51401801_reflection_;
  delete Proto11400150::default_instance_;
  delete Proto11400150_reflection_;
  delete Proto51400003::default_instance_;
  delete Proto51400003_reflection_;
  delete Proto81401803::default_instance_;
  delete Proto81401803_reflection_;
  delete Proto11401804::default_instance_;
  delete Proto11401804_reflection_;
  delete Proto11400151::default_instance_;
  delete Proto11400151_reflection_;
  delete Proto11401452::default_instance_;
  delete Proto11401452_reflection_;
  delete Proto51401452::default_instance_;
  delete Proto51401452_reflection_;
  delete Proto51401451::default_instance_;
  delete Proto51401451_reflection_;
  delete Proto81401406::default_instance_;
  delete Proto81401406_reflection_;
  delete Proto81401407::default_instance_;
  delete Proto81401407_reflection_;
  delete Proto11401461::default_instance_;
  delete Proto11401461_reflection_;
  delete Proto80400915::default_instance_;
  delete Proto80400915_reflection_;
  delete Proto10400930::default_instance_;
  delete Proto10400930_reflection_;
  delete Proto50400932::default_instance_;
  delete Proto50400932_reflection_;
  delete Proto50400931::default_instance_;
  delete Proto50400931_reflection_;
  delete Proto10400931::default_instance_;
  delete Proto10400931_reflection_;
  delete Proto10400932::default_instance_;
  delete Proto10400932_reflection_;
  delete Proto81401901::default_instance_;
  delete Proto81401901_reflection_;
  delete Proto10400933::default_instance_;
  delete Proto10400933_reflection_;
  delete Proto50400933::default_instance_;
  delete Proto50400933_reflection_;
  delete Proto10400934::default_instance_;
  delete Proto10400934_reflection_;
  delete Proto81401408::default_instance_;
  delete Proto81401408_reflection_;
  delete Proto80400916::default_instance_;
  delete Proto80400916_reflection_;
  delete Proto10100645::default_instance_;
  delete Proto10100645_reflection_;
  delete Proto50100646::default_instance_;
  delete Proto50100646_reflection_;
  delete Proto10400322::default_instance_;
  delete Proto10400322_reflection_;
  delete Proto50400322::default_instance_;
  delete Proto50400322_reflection_;
  delete Proto50400323::default_instance_;
  delete Proto50400323_reflection_;
  delete Proto80400223::default_instance_;
  delete Proto80400223_reflection_;
  delete Proto80400365::default_instance_;
  delete Proto80400365_reflection_;
}

void protobuf_AddDesc_ProtoClient010_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient010.proto\032\021ProtoPublic.prot"
    "o\"G\n\rProto80400348\022\020\n\010win_name\030\001 \001(\t\022\021\n\t"
    "lose_name\030\002 \001(\t\022\021\n\twin_count\030\003 \001(\005\"4\n\rPr"
    "oto80400349\022\020\n\010win_name\030\001 \001(\t\022\021\n\tlose_na"
    "me\030\002 \001(\t\"\210\002\n\rProto80400350\022\020\n\010first_id\030\001"
    " \001(\003\022\027\n\017first_cur_blood\030\002 \001(\005\022\031\n\021first_t"
    "otal_blood\030\003 \001(\005\022\027\n\017first_cur_magic\030\004 \001("
    "\005\022\031\n\021first_total_magic\030\005 \001(\005\022\021\n\tsecond_i"
    "d\030\006 \001(\003\022\030\n\020second_cur_blood\030\007 \001(\005\022\032\n\022sec"
    "ond_total_blood\030\010 \001(\005\022\030\n\020second_cur_magi"
    "c\030\t \001(\005\022\032\n\022second_total_magic\030\n \001(\005\"}\n\rP"
    "roto80400351\022\"\n\nfirst_role\030\001 \001(\0132\016.Proto"
    "RoleInfo\022#\n\013second_role\030\002 \001(\0132\016.ProtoRol"
    "eInfo\022\021\n\tleft_time\030\003 \001(\005\022\020\n\010is_first\030\004 \001"
    "(\005\"\035\n\rProto10400803\022\014\n\004page\030\001 \001(\005\"Y\n\rPro"
    "to50400803\022#\n\004self\030\001 \001(\0132\025.ProtoSMBattle"
    "RankRec\022#\n\004rank\030\002 \003(\0132\025.ProtoSMBattleRan"
    "kRec\"4\n\rProto80400602\022\021\n\tmaster_id\030\001 \001(\003"
    "\022\020\n\010beast_id\030\002 \001(\003\":\n\rProto10100906\022\026\n\016e"
    "valuate_level\030\001 \001(\005\022\021\n\trecord_id\030\002 \001(\003\":"
    "\n\rProto50100906\022\026\n\016evaluate_level\030\001 \001(\005\022"
    "\021\n\trecord_id\030\002 \001(\003\"\273\002\n\rProto81400203\022\013\n\003"
    "cmd\030\001 \001(\005\022\017\n\007task_id\030\002 \001(\005\022\014\n\004type\030\003 \001(\005"
    "\022\016\n\006status\030\004 \001(\005\022\021\n\tcond_type\030\005 \001(\005\022\022\n\nc"
    "ond_index\030\006 \001(\005\022\017\n\007cond_id\030\007 \001(\005\022\021\n\tcur_"
    "value\030\010 \001(\005\022\023\n\013final_value\030\t \001(\005\022\024\n\014rout"
    "ine_dice\030\n \001(\005\022\030\n\020is_first_routine\030\013 \001(\005"
    "\022\032\n\022total_routine_size\030\014 \001(\005\022\032\n\022routine_"
    "task_index\030\r \001(\005\022\021\n\tkill_type\030\016 \001(\005\022\023\n\013r"
    "ange_level\030\017 \001(\005\"I\n\rProto10400919\022\023\n\013scr"
    "ipt_sort\030\001 \001(\005\022\021\n\tinc_times\030\002 \001(\005\022\020\n\010cur"
    "_gold\030\003 \001(\005\"F\n\rProto50400919\022\023\n\013script_s"
    "ort\030\001 \001(\005\022\014\n\004gold\030\002 \001(\005\022\022\n\nleft_times\030\003 "
    "\001(\005\"7\n\rProto10400920\022\023\n\013script_sort\030\001 \001("
    "\005\022\021\n\tinc_times\030\002 \001(\005\"b\n\rProto50400920\022\023\n"
    "\013script_sort\030\001 \001(\005\022\022\n\nleft_times\030\002 \001(\005\022\026"
    "\n\016left_buy_times\030\003 \001(\005\022\020\n\010left_get\030\004 \001(\005"
    "\"Y\n\rProto50400703\022\020\n\010scheme_1\030\001 \003(\005\022\020\n\010s"
    "cheme_2\030\002 \003(\005\022\020\n\010scheme_3\030\003 \003(\005\022\022\n\ncur_s"
    "cheme\030\004 \001(\005\"!\n\rProto10400705\022\020\n\010skill_id"
    "\030\001 \001(\005\"!\n\rProto50400705\022\020\n\010skill_id\030\001 \001("
    "\005\"h\n\rProto81400109\022\023\n\013lack_copper\030\001 \001(\005\022"
    "\030\n\020lack_bind_copper\030\002 \001(\005\022\025\n\rreturn_reco"
    "gn\030\003 \001(\005\022\021\n\tneed_gold\030\004 \001(\005\"!\n\rProto8140"
    "1801\022\020\n\010is_start\030\001 \001(\005\"f\n\rProto51401801\022"
    "\037\n\013awards_item\030\001 \003(\0132\n.ProtoItem\022 \n\014disp"
    "lay_item\030\002 \001(\0132\n.ProtoItem\022\022\n\nhas_awards"
    "\030\003 \001(\005\"X\n\rProto11400150\022\014\n\004gold\030\001 \001(\005\022\022\n"
    "\nmoney_type\030\002 \001(\005\022\016\n\006recogn\030\003 \001(\005\022\025\n\rnev"
    "er_confirm\030\004 \001(\005\":\n\rProto51400003\022)\n\017buf"
    "f_status_set\030\001 \003(\0132\020.ProtoBuffStatus\"\356\001\n"
    "\rProto81401803\022\026\n\016today_recharge\030\001 \001(\005\022\025"
    "\n\rrewards_state\030\002 \003(\005\022\023\n\013reward_list\030\003 \003"
    "(\005\022\021\n\tshow_icon\030\004 \001(\005\022\022\n\nstart_tick\030\005 \001("
    "\003\022\020\n\010end_tick\030\006 \001(\003\022\026\n\016first_recharge\030\007 "
    "\001(\005\022\021\n\tvip_level\030\010 \001(\005\022\r\n\005index\030\t \001(\005\022\022\n"
    "\nfirst_gold\030\n \001(\005\022\022\n\ntotal_gold\030\013 \001(\005\"D\n"
    "\rProto11401804\022\024\n\014reward_index\030\001 \001(\005\022\035\n\t"
    "item_list\030\002 \003(\0132\n.ProtoItem\"!\n\rProto1140"
    "0151\022\020\n\010scene_id\030\001 \001(\005\"\036\n\rProto11401452\022"
    "\r\n\005level\030\001 \001(\005\"\036\n\rProto51401452\022\r\n\005level"
    "\030\001 \001(\005\"6\n\rProto51401451\022%\n\014rewards_info\030"
    "\001 \003(\0132\017.ProtoLvlReward\"2\n\rProto81401406\022"
    "\016\n\006enable\030\001 \001(\005\022\021\n\tawrds_num\030\002 \001(\005\"3\n\rPr"
    "oto81401407\022\"\n\007records\030\001 \003(\0132\021.ProtoDail"
    "yRecord\"\033\n\rProto11401461\022\n\n\002id\030\001 \001(\005\"9\n\r"
    "Proto80400915\022\023\n\013attackor_id\030\001 \001(\003\022\023\n\013de"
    "fender_id\030\002 \001(\003\"!\n\rProto10400930\022\020\n\010scen"
    "e_id\030\001 \001(\005\"3\n\rProto50400932\022\r\n\005stage\030\001 \001"
    "(\005\022\023\n\013script_sort\030\002 \001(\005\"3\n\rProto50400931"
    "\022\r\n\005stage\030\001 \001(\005\022\023\n\013script_sort\030\002 \001(\005\"$\n\r"
    "Proto10400931\022\023\n\013script_sort\030\001 \001(\005\"3\n\rPr"
    "oto10400932\022\023\n\013script_sort\030\001 \001(\005\022\r\n\005stag"
    "e\030\002 \001(\005\"\267\001\n\rProto81401901\022\021\n\tequip_red\030\001"
    " \001(\005\022\021\n\ttreasures\030\002 \001(\005\022\014\n\004gift\030\003 \001(\005\022\016\n"
    "\006market\030\004 \001(\005\022\014\n\004shop\030\005 \001(\005\022\020\n\010transfer\030"
    "\006 \001(\005\022\026\n\016molding_spirit\030\007 \001(\005\022\025\n\rjewel_s"
    "ublime\030\010 \001(\005\022\023\n\013special_box\030\t \001(\005\"\036\n\rPro"
    "to10400933\022\r\n\005piece\030\001 \001(\005\"G\n\rProto504009"
    "33\022\r\n\005piece\030\001 \001(\005\022\022\n\ntotal_star\030\002 \001(\005\022\023\n"
    "\013drawed_star\030\003 \003(\005\"2\n\rProto10400934\022\r\n\005p"
    "iece\030\001 \001(\005\022\022\n\naward_star\030\002 \001(\005\";\n\rProto8"
    "1401408\022\023\n\013remain_tick\030\001 \001(\005\022\025\n\rreward_a"
    "mount\030\002 \001(\005\"K\n\rProto80400916\022\024\n\014compact_"
    "type\030\001 \001(\005\022\021\n\tleft_tick\030\002 \001(\005\022\021\n\tdate_ti"
    "ck\030\003 \001(\005\"\035\n\rProto10100645\022\014\n\004type\030\001 \001(\005\""
    "#\n\rProto50100646\022\022\n\nleft_times\030\001 \001(\005\"#\n\r"
    "Proto10400322\022\022\n\npage_index\030\001 \001(\005\"\247\001\n\rPr"
    "oto50400322\022\022\n\npage_index\030\001 \001(\005\022\022\n\ntotal"
    "_page\030\002 \001(\005\022 \n\010rank_set\030\003 \003(\0132\016.ProtoLWa"
    "rItem\022\021\n\tleft_time\030\004 \001(\005\022\026\n\016finish_perce"
    "nt\030\005 \001(\005\022!\n\tself_item\030\006 \001(\0132\016.ProtoLWarI"
    "tem\"6\n\rProto50400323\022%\n\010item_set\030\001 \001(\0132\023"
    ".ProtoEscortMapItem\"\306\001\n\rProto80400223\022\022\n"
    "\nfighter_id\030\001 \001(\003\022\020\n\010skill_id\030\002 \001(\005\022\023\n\013s"
    "kill_level\030\003 \001(\005\022\025\n\rskill_pixel_x\030\004 \001(\005\022"
    "\025\n\rskill_pixel_y\030\005 \001(\005\022&\n\013target_list\030\006 "
    "\003(\0132\021.ProtoSkillTarget\022\026\n\016target_id_list"
    "\030\007 \003(\003\022\014\n\004type\030\010 \001(\005\"1\n\rProto80400365\022 \n"
    "\010rank_set\030\001 \003(\0132\016.ProtoLWarItem", 3991);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient010.proto", &protobuf_RegisterTypes);
  Proto80400348::default_instance_ = new Proto80400348();
  Proto80400349::default_instance_ = new Proto80400349();
  Proto80400350::default_instance_ = new Proto80400350();
  Proto80400351::default_instance_ = new Proto80400351();
  Proto10400803::default_instance_ = new Proto10400803();
  Proto50400803::default_instance_ = new Proto50400803();
  Proto80400602::default_instance_ = new Proto80400602();
  Proto10100906::default_instance_ = new Proto10100906();
  Proto50100906::default_instance_ = new Proto50100906();
  Proto81400203::default_instance_ = new Proto81400203();
  Proto10400919::default_instance_ = new Proto10400919();
  Proto50400919::default_instance_ = new Proto50400919();
  Proto10400920::default_instance_ = new Proto10400920();
  Proto50400920::default_instance_ = new Proto50400920();
  Proto50400703::default_instance_ = new Proto50400703();
  Proto10400705::default_instance_ = new Proto10400705();
  Proto50400705::default_instance_ = new Proto50400705();
  Proto81400109::default_instance_ = new Proto81400109();
  Proto81401801::default_instance_ = new Proto81401801();
  Proto51401801::default_instance_ = new Proto51401801();
  Proto11400150::default_instance_ = new Proto11400150();
  Proto51400003::default_instance_ = new Proto51400003();
  Proto81401803::default_instance_ = new Proto81401803();
  Proto11401804::default_instance_ = new Proto11401804();
  Proto11400151::default_instance_ = new Proto11400151();
  Proto11401452::default_instance_ = new Proto11401452();
  Proto51401452::default_instance_ = new Proto51401452();
  Proto51401451::default_instance_ = new Proto51401451();
  Proto81401406::default_instance_ = new Proto81401406();
  Proto81401407::default_instance_ = new Proto81401407();
  Proto11401461::default_instance_ = new Proto11401461();
  Proto80400915::default_instance_ = new Proto80400915();
  Proto10400930::default_instance_ = new Proto10400930();
  Proto50400932::default_instance_ = new Proto50400932();
  Proto50400931::default_instance_ = new Proto50400931();
  Proto10400931::default_instance_ = new Proto10400931();
  Proto10400932::default_instance_ = new Proto10400932();
  Proto81401901::default_instance_ = new Proto81401901();
  Proto10400933::default_instance_ = new Proto10400933();
  Proto50400933::default_instance_ = new Proto50400933();
  Proto10400934::default_instance_ = new Proto10400934();
  Proto81401408::default_instance_ = new Proto81401408();
  Proto80400916::default_instance_ = new Proto80400916();
  Proto10100645::default_instance_ = new Proto10100645();
  Proto50100646::default_instance_ = new Proto50100646();
  Proto10400322::default_instance_ = new Proto10400322();
  Proto50400322::default_instance_ = new Proto50400322();
  Proto50400323::default_instance_ = new Proto50400323();
  Proto80400223::default_instance_ = new Proto80400223();
  Proto80400365::default_instance_ = new Proto80400365();
  Proto80400348::default_instance_->InitAsDefaultInstance();
  Proto80400349::default_instance_->InitAsDefaultInstance();
  Proto80400350::default_instance_->InitAsDefaultInstance();
  Proto80400351::default_instance_->InitAsDefaultInstance();
  Proto10400803::default_instance_->InitAsDefaultInstance();
  Proto50400803::default_instance_->InitAsDefaultInstance();
  Proto80400602::default_instance_->InitAsDefaultInstance();
  Proto10100906::default_instance_->InitAsDefaultInstance();
  Proto50100906::default_instance_->InitAsDefaultInstance();
  Proto81400203::default_instance_->InitAsDefaultInstance();
  Proto10400919::default_instance_->InitAsDefaultInstance();
  Proto50400919::default_instance_->InitAsDefaultInstance();
  Proto10400920::default_instance_->InitAsDefaultInstance();
  Proto50400920::default_instance_->InitAsDefaultInstance();
  Proto50400703::default_instance_->InitAsDefaultInstance();
  Proto10400705::default_instance_->InitAsDefaultInstance();
  Proto50400705::default_instance_->InitAsDefaultInstance();
  Proto81400109::default_instance_->InitAsDefaultInstance();
  Proto81401801::default_instance_->InitAsDefaultInstance();
  Proto51401801::default_instance_->InitAsDefaultInstance();
  Proto11400150::default_instance_->InitAsDefaultInstance();
  Proto51400003::default_instance_->InitAsDefaultInstance();
  Proto81401803::default_instance_->InitAsDefaultInstance();
  Proto11401804::default_instance_->InitAsDefaultInstance();
  Proto11400151::default_instance_->InitAsDefaultInstance();
  Proto11401452::default_instance_->InitAsDefaultInstance();
  Proto51401452::default_instance_->InitAsDefaultInstance();
  Proto51401451::default_instance_->InitAsDefaultInstance();
  Proto81401406::default_instance_->InitAsDefaultInstance();
  Proto81401407::default_instance_->InitAsDefaultInstance();
  Proto11401461::default_instance_->InitAsDefaultInstance();
  Proto80400915::default_instance_->InitAsDefaultInstance();
  Proto10400930::default_instance_->InitAsDefaultInstance();
  Proto50400932::default_instance_->InitAsDefaultInstance();
  Proto50400931::default_instance_->InitAsDefaultInstance();
  Proto10400931::default_instance_->InitAsDefaultInstance();
  Proto10400932::default_instance_->InitAsDefaultInstance();
  Proto81401901::default_instance_->InitAsDefaultInstance();
  Proto10400933::default_instance_->InitAsDefaultInstance();
  Proto50400933::default_instance_->InitAsDefaultInstance();
  Proto10400934::default_instance_->InitAsDefaultInstance();
  Proto81401408::default_instance_->InitAsDefaultInstance();
  Proto80400916::default_instance_->InitAsDefaultInstance();
  Proto10100645::default_instance_->InitAsDefaultInstance();
  Proto50100646::default_instance_->InitAsDefaultInstance();
  Proto10400322::default_instance_->InitAsDefaultInstance();
  Proto50400322::default_instance_->InitAsDefaultInstance();
  Proto50400323::default_instance_->InitAsDefaultInstance();
  Proto80400223::default_instance_->InitAsDefaultInstance();
  Proto80400365::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient010_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient010_2eproto {
  StaticDescriptorInitializer_ProtoClient010_2eproto() {
    protobuf_AddDesc_ProtoClient010_2eproto();
  }
} static_descriptor_initializer_ProtoClient010_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto80400348::kWinNameFieldNumber;
const int Proto80400348::kLoseNameFieldNumber;
const int Proto80400348::kWinCountFieldNumber;
#endif  // !_MSC_VER

Proto80400348::Proto80400348()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400348::InitAsDefaultInstance() {
}

Proto80400348::Proto80400348(const Proto80400348& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400348::SharedCtor() {
  _cached_size_ = 0;
  win_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  lose_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  win_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400348::~Proto80400348() {
  SharedDtor();
}

void Proto80400348::SharedDtor() {
  if (win_name_ != &::google::protobuf::internal::kEmptyString) {
    delete win_name_;
  }
  if (lose_name_ != &::google::protobuf::internal::kEmptyString) {
    delete lose_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400348::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400348::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400348_descriptor_;
}

const Proto80400348& Proto80400348::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto80400348* Proto80400348::default_instance_ = NULL;

Proto80400348* Proto80400348::New() const {
  return new Proto80400348;
}

void Proto80400348::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_win_name()) {
      if (win_name_ != &::google::protobuf::internal::kEmptyString) {
        win_name_->clear();
      }
    }
    if (has_lose_name()) {
      if (lose_name_ != &::google::protobuf::internal::kEmptyString) {
        lose_name_->clear();
      }
    }
    win_count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400348::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string win_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_win_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->win_name().data(), this->win_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_lose_name;
        break;
      }
      
      // optional string lose_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lose_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lose_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->lose_name().data(), this->lose_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_win_count;
        break;
      }
      
      // optional int32 win_count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_win_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &win_count_)));
          set_has_win_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400348::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string win_name = 1;
  if (has_win_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->win_name().data(), this->win_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->win_name(), output);
  }
  
  // optional string lose_name = 2;
  if (has_lose_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lose_name().data(), this->lose_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->lose_name(), output);
  }
  
  // optional int32 win_count = 3;
  if (has_win_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->win_count(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400348::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string win_name = 1;
  if (has_win_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->win_name().data(), this->win_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->win_name(), target);
  }
  
  // optional string lose_name = 2;
  if (has_lose_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lose_name().data(), this->lose_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->lose_name(), target);
  }
  
  // optional int32 win_count = 3;
  if (has_win_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->win_count(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400348::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string win_name = 1;
    if (has_win_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->win_name());
    }
    
    // optional string lose_name = 2;
    if (has_lose_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lose_name());
    }
    
    // optional int32 win_count = 3;
    if (has_win_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->win_count());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400348::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400348* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400348*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400348::MergeFrom(const Proto80400348& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_win_name()) {
      set_win_name(from.win_name());
    }
    if (from.has_lose_name()) {
      set_lose_name(from.lose_name());
    }
    if (from.has_win_count()) {
      set_win_count(from.win_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400348::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400348::CopyFrom(const Proto80400348& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400348::IsInitialized() const {
  
  return true;
}

void Proto80400348::Swap(Proto80400348* other) {
  if (other != this) {
    std::swap(win_name_, other->win_name_);
    std::swap(lose_name_, other->lose_name_);
    std::swap(win_count_, other->win_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400348::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400348_descriptor_;
  metadata.reflection = Proto80400348_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400349::kWinNameFieldNumber;
const int Proto80400349::kLoseNameFieldNumber;
#endif  // !_MSC_VER

Proto80400349::Proto80400349()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400349::InitAsDefaultInstance() {
}

Proto80400349::Proto80400349(const Proto80400349& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400349::SharedCtor() {
  _cached_size_ = 0;
  win_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  lose_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400349::~Proto80400349() {
  SharedDtor();
}

void Proto80400349::SharedDtor() {
  if (win_name_ != &::google::protobuf::internal::kEmptyString) {
    delete win_name_;
  }
  if (lose_name_ != &::google::protobuf::internal::kEmptyString) {
    delete lose_name_;
  }
  if (this != default_instance_) {
  }
}

void Proto80400349::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400349::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400349_descriptor_;
}

const Proto80400349& Proto80400349::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto80400349* Proto80400349::default_instance_ = NULL;

Proto80400349* Proto80400349::New() const {
  return new Proto80400349;
}

void Proto80400349::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_win_name()) {
      if (win_name_ != &::google::protobuf::internal::kEmptyString) {
        win_name_->clear();
      }
    }
    if (has_lose_name()) {
      if (lose_name_ != &::google::protobuf::internal::kEmptyString) {
        lose_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400349::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string win_name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_win_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->win_name().data(), this->win_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_lose_name;
        break;
      }
      
      // optional string lose_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lose_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lose_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->lose_name().data(), this->lose_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400349::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string win_name = 1;
  if (has_win_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->win_name().data(), this->win_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->win_name(), output);
  }
  
  // optional string lose_name = 2;
  if (has_lose_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lose_name().data(), this->lose_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->lose_name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400349::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string win_name = 1;
  if (has_win_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->win_name().data(), this->win_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->win_name(), target);
  }
  
  // optional string lose_name = 2;
  if (has_lose_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lose_name().data(), this->lose_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->lose_name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400349::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string win_name = 1;
    if (has_win_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->win_name());
    }
    
    // optional string lose_name = 2;
    if (has_lose_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lose_name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400349::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400349* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400349*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400349::MergeFrom(const Proto80400349& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_win_name()) {
      set_win_name(from.win_name());
    }
    if (from.has_lose_name()) {
      set_lose_name(from.lose_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400349::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400349::CopyFrom(const Proto80400349& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400349::IsInitialized() const {
  
  return true;
}

void Proto80400349::Swap(Proto80400349* other) {
  if (other != this) {
    std::swap(win_name_, other->win_name_);
    std::swap(lose_name_, other->lose_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400349::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400349_descriptor_;
  metadata.reflection = Proto80400349_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400350::kFirstIdFieldNumber;
const int Proto80400350::kFirstCurBloodFieldNumber;
const int Proto80400350::kFirstTotalBloodFieldNumber;
const int Proto80400350::kFirstCurMagicFieldNumber;
const int Proto80400350::kFirstTotalMagicFieldNumber;
const int Proto80400350::kSecondIdFieldNumber;
const int Proto80400350::kSecondCurBloodFieldNumber;
const int Proto80400350::kSecondTotalBloodFieldNumber;
const int Proto80400350::kSecondCurMagicFieldNumber;
const int Proto80400350::kSecondTotalMagicFieldNumber;
#endif  // !_MSC_VER

Proto80400350::Proto80400350()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400350::InitAsDefaultInstance() {
}

Proto80400350::Proto80400350(const Proto80400350& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400350::SharedCtor() {
  _cached_size_ = 0;
  first_id_ = GOOGLE_LONGLONG(0);
  first_cur_blood_ = 0;
  first_total_blood_ = 0;
  first_cur_magic_ = 0;
  first_total_magic_ = 0;
  second_id_ = GOOGLE_LONGLONG(0);
  second_cur_blood_ = 0;
  second_total_blood_ = 0;
  second_cur_magic_ = 0;
  second_total_magic_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400350::~Proto80400350() {
  SharedDtor();
}

void Proto80400350::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400350::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400350::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400350_descriptor_;
}

const Proto80400350& Proto80400350::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto80400350* Proto80400350::default_instance_ = NULL;

Proto80400350* Proto80400350::New() const {
  return new Proto80400350;
}

void Proto80400350::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    first_id_ = GOOGLE_LONGLONG(0);
    first_cur_blood_ = 0;
    first_total_blood_ = 0;
    first_cur_magic_ = 0;
    first_total_magic_ = 0;
    second_id_ = GOOGLE_LONGLONG(0);
    second_cur_blood_ = 0;
    second_total_blood_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    second_cur_magic_ = 0;
    second_total_magic_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400350::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 first_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &first_id_)));
          set_has_first_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_first_cur_blood;
        break;
      }
      
      // optional int32 first_cur_blood = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_cur_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_cur_blood_)));
          set_has_first_cur_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_first_total_blood;
        break;
      }
      
      // optional int32 first_total_blood = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_total_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_total_blood_)));
          set_has_first_total_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_first_cur_magic;
        break;
      }
      
      // optional int32 first_cur_magic = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_cur_magic:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_cur_magic_)));
          set_has_first_cur_magic();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_first_total_magic;
        break;
      }
      
      // optional int32 first_total_magic = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_total_magic:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_total_magic_)));
          set_has_first_total_magic();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_second_id;
        break;
      }
      
      // optional int64 second_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &second_id_)));
          set_has_second_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_second_cur_blood;
        break;
      }
      
      // optional int32 second_cur_blood = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_cur_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_cur_blood_)));
          set_has_second_cur_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_second_total_blood;
        break;
      }
      
      // optional int32 second_total_blood = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_total_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_total_blood_)));
          set_has_second_total_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_second_cur_magic;
        break;
      }
      
      // optional int32 second_cur_magic = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_cur_magic:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_cur_magic_)));
          set_has_second_cur_magic();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_second_total_magic;
        break;
      }
      
      // optional int32 second_total_magic = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_total_magic:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_total_magic_)));
          set_has_second_total_magic();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400350::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 first_id = 1;
  if (has_first_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->first_id(), output);
  }
  
  // optional int32 first_cur_blood = 2;
  if (has_first_cur_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->first_cur_blood(), output);
  }
  
  // optional int32 first_total_blood = 3;
  if (has_first_total_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->first_total_blood(), output);
  }
  
  // optional int32 first_cur_magic = 4;
  if (has_first_cur_magic()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->first_cur_magic(), output);
  }
  
  // optional int32 first_total_magic = 5;
  if (has_first_total_magic()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->first_total_magic(), output);
  }
  
  // optional int64 second_id = 6;
  if (has_second_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->second_id(), output);
  }
  
  // optional int32 second_cur_blood = 7;
  if (has_second_cur_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->second_cur_blood(), output);
  }
  
  // optional int32 second_total_blood = 8;
  if (has_second_total_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->second_total_blood(), output);
  }
  
  // optional int32 second_cur_magic = 9;
  if (has_second_cur_magic()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->second_cur_magic(), output);
  }
  
  // optional int32 second_total_magic = 10;
  if (has_second_total_magic()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->second_total_magic(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400350::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 first_id = 1;
  if (has_first_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->first_id(), target);
  }
  
  // optional int32 first_cur_blood = 2;
  if (has_first_cur_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->first_cur_blood(), target);
  }
  
  // optional int32 first_total_blood = 3;
  if (has_first_total_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->first_total_blood(), target);
  }
  
  // optional int32 first_cur_magic = 4;
  if (has_first_cur_magic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->first_cur_magic(), target);
  }
  
  // optional int32 first_total_magic = 5;
  if (has_first_total_magic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->first_total_magic(), target);
  }
  
  // optional int64 second_id = 6;
  if (has_second_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->second_id(), target);
  }
  
  // optional int32 second_cur_blood = 7;
  if (has_second_cur_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->second_cur_blood(), target);
  }
  
  // optional int32 second_total_blood = 8;
  if (has_second_total_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->second_total_blood(), target);
  }
  
  // optional int32 second_cur_magic = 9;
  if (has_second_cur_magic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->second_cur_magic(), target);
  }
  
  // optional int32 second_total_magic = 10;
  if (has_second_total_magic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->second_total_magic(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400350::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 first_id = 1;
    if (has_first_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->first_id());
    }
    
    // optional int32 first_cur_blood = 2;
    if (has_first_cur_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_cur_blood());
    }
    
    // optional int32 first_total_blood = 3;
    if (has_first_total_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_total_blood());
    }
    
    // optional int32 first_cur_magic = 4;
    if (has_first_cur_magic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_cur_magic());
    }
    
    // optional int32 first_total_magic = 5;
    if (has_first_total_magic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_total_magic());
    }
    
    // optional int64 second_id = 6;
    if (has_second_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->second_id());
    }
    
    // optional int32 second_cur_blood = 7;
    if (has_second_cur_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_cur_blood());
    }
    
    // optional int32 second_total_blood = 8;
    if (has_second_total_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_total_blood());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 second_cur_magic = 9;
    if (has_second_cur_magic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_cur_magic());
    }
    
    // optional int32 second_total_magic = 10;
    if (has_second_total_magic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_total_magic());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400350::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400350* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400350*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400350::MergeFrom(const Proto80400350& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_first_id()) {
      set_first_id(from.first_id());
    }
    if (from.has_first_cur_blood()) {
      set_first_cur_blood(from.first_cur_blood());
    }
    if (from.has_first_total_blood()) {
      set_first_total_blood(from.first_total_blood());
    }
    if (from.has_first_cur_magic()) {
      set_first_cur_magic(from.first_cur_magic());
    }
    if (from.has_first_total_magic()) {
      set_first_total_magic(from.first_total_magic());
    }
    if (from.has_second_id()) {
      set_second_id(from.second_id());
    }
    if (from.has_second_cur_blood()) {
      set_second_cur_blood(from.second_cur_blood());
    }
    if (from.has_second_total_blood()) {
      set_second_total_blood(from.second_total_blood());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_second_cur_magic()) {
      set_second_cur_magic(from.second_cur_magic());
    }
    if (from.has_second_total_magic()) {
      set_second_total_magic(from.second_total_magic());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400350::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400350::CopyFrom(const Proto80400350& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400350::IsInitialized() const {
  
  return true;
}

void Proto80400350::Swap(Proto80400350* other) {
  if (other != this) {
    std::swap(first_id_, other->first_id_);
    std::swap(first_cur_blood_, other->first_cur_blood_);
    std::swap(first_total_blood_, other->first_total_blood_);
    std::swap(first_cur_magic_, other->first_cur_magic_);
    std::swap(first_total_magic_, other->first_total_magic_);
    std::swap(second_id_, other->second_id_);
    std::swap(second_cur_blood_, other->second_cur_blood_);
    std::swap(second_total_blood_, other->second_total_blood_);
    std::swap(second_cur_magic_, other->second_cur_magic_);
    std::swap(second_total_magic_, other->second_total_magic_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400350::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400350_descriptor_;
  metadata.reflection = Proto80400350_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400351::kFirstRoleFieldNumber;
const int Proto80400351::kSecondRoleFieldNumber;
const int Proto80400351::kLeftTimeFieldNumber;
const int Proto80400351::kIsFirstFieldNumber;
#endif  // !_MSC_VER

Proto80400351::Proto80400351()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400351::InitAsDefaultInstance() {
  first_role_ = const_cast< ::ProtoRoleInfo*>(&::ProtoRoleInfo::default_instance());
  second_role_ = const_cast< ::ProtoRoleInfo*>(&::ProtoRoleInfo::default_instance());
}

Proto80400351::Proto80400351(const Proto80400351& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400351::SharedCtor() {
  _cached_size_ = 0;
  first_role_ = NULL;
  second_role_ = NULL;
  left_time_ = 0;
  is_first_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400351::~Proto80400351() {
  SharedDtor();
}

void Proto80400351::SharedDtor() {
  if (this != default_instance_) {
    delete first_role_;
    delete second_role_;
  }
}

void Proto80400351::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400351::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400351_descriptor_;
}

const Proto80400351& Proto80400351::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto80400351* Proto80400351::default_instance_ = NULL;

Proto80400351* Proto80400351::New() const {
  return new Proto80400351;
}

void Proto80400351::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_first_role()) {
      if (first_role_ != NULL) first_role_->::ProtoRoleInfo::Clear();
    }
    if (has_second_role()) {
      if (second_role_ != NULL) second_role_->::ProtoRoleInfo::Clear();
    }
    left_time_ = 0;
    is_first_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400351::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoRoleInfo first_role = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_first_role()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_second_role;
        break;
      }
      
      // optional .ProtoRoleInfo second_role = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_second_role:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_second_role()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_is_first;
        break;
      }
      
      // optional int32 is_first = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_first:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_first_)));
          set_has_is_first();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400351::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoRoleInfo first_role = 1;
  if (has_first_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->first_role(), output);
  }
  
  // optional .ProtoRoleInfo second_role = 2;
  if (has_second_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->second_role(), output);
  }
  
  // optional int32 left_time = 3;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_time(), output);
  }
  
  // optional int32 is_first = 4;
  if (has_is_first()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->is_first(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400351::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoRoleInfo first_role = 1;
  if (has_first_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->first_role(), target);
  }
  
  // optional .ProtoRoleInfo second_role = 2;
  if (has_second_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->second_role(), target);
  }
  
  // optional int32 left_time = 3;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_time(), target);
  }
  
  // optional int32 is_first = 4;
  if (has_is_first()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->is_first(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400351::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoRoleInfo first_role = 1;
    if (has_first_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->first_role());
    }
    
    // optional .ProtoRoleInfo second_role = 2;
    if (has_second_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->second_role());
    }
    
    // optional int32 left_time = 3;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 is_first = 4;
    if (has_is_first()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_first());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400351::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400351* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400351*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400351::MergeFrom(const Proto80400351& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_first_role()) {
      mutable_first_role()->::ProtoRoleInfo::MergeFrom(from.first_role());
    }
    if (from.has_second_role()) {
      mutable_second_role()->::ProtoRoleInfo::MergeFrom(from.second_role());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_is_first()) {
      set_is_first(from.is_first());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400351::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400351::CopyFrom(const Proto80400351& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400351::IsInitialized() const {
  
  return true;
}

void Proto80400351::Swap(Proto80400351* other) {
  if (other != this) {
    std::swap(first_role_, other->first_role_);
    std::swap(second_role_, other->second_role_);
    std::swap(left_time_, other->left_time_);
    std::swap(is_first_, other->is_first_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400351::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400351_descriptor_;
  metadata.reflection = Proto80400351_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400803::kPageFieldNumber;
#endif  // !_MSC_VER

Proto10400803::Proto10400803()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400803::InitAsDefaultInstance() {
}

Proto10400803::Proto10400803(const Proto10400803& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400803::SharedCtor() {
  _cached_size_ = 0;
  page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400803::~Proto10400803() {
  SharedDtor();
}

void Proto10400803::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400803::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400803::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400803_descriptor_;
}

const Proto10400803& Proto10400803::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto10400803* Proto10400803::default_instance_ = NULL;

Proto10400803* Proto10400803::New() const {
  return new Proto10400803;
}

void Proto10400803::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400803::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
          set_has_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400803::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page = 1;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400803::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page = 1;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400803::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page = 1;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400803::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400803* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400803*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400803::MergeFrom(const Proto10400803& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page()) {
      set_page(from.page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400803::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400803::CopyFrom(const Proto10400803& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400803::IsInitialized() const {
  
  return true;
}

void Proto10400803::Swap(Proto10400803* other) {
  if (other != this) {
    std::swap(page_, other->page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400803::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400803_descriptor_;
  metadata.reflection = Proto10400803_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400803::kSelfFieldNumber;
const int Proto50400803::kRankFieldNumber;
#endif  // !_MSC_VER

Proto50400803::Proto50400803()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400803::InitAsDefaultInstance() {
  self_ = const_cast< ::ProtoSMBattleRankRec*>(&::ProtoSMBattleRankRec::default_instance());
}

Proto50400803::Proto50400803(const Proto50400803& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400803::SharedCtor() {
  _cached_size_ = 0;
  self_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400803::~Proto50400803() {
  SharedDtor();
}

void Proto50400803::SharedDtor() {
  if (this != default_instance_) {
    delete self_;
  }
}

void Proto50400803::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400803::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400803_descriptor_;
}

const Proto50400803& Proto50400803::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto50400803* Proto50400803::default_instance_ = NULL;

Proto50400803* Proto50400803::New() const {
  return new Proto50400803;
}

void Proto50400803::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_self()) {
      if (self_ != NULL) self_->::ProtoSMBattleRankRec::Clear();
    }
  }
  rank_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400803::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoSMBattleRankRec self = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_rank;
        break;
      }
      
      // repeated .ProtoSMBattleRankRec rank = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_rank;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400803::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoSMBattleRankRec self = 1;
  if (has_self()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->self(), output);
  }
  
  // repeated .ProtoSMBattleRankRec rank = 2;
  for (int i = 0; i < this->rank_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rank(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400803::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoSMBattleRankRec self = 1;
  if (has_self()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->self(), target);
  }
  
  // repeated .ProtoSMBattleRankRec rank = 2;
  for (int i = 0; i < this->rank_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->rank(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400803::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoSMBattleRankRec self = 1;
    if (has_self()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->self());
    }
    
  }
  // repeated .ProtoSMBattleRankRec rank = 2;
  total_size += 1 * this->rank_size();
  for (int i = 0; i < this->rank_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400803::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400803* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400803*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400803::MergeFrom(const Proto50400803& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_.MergeFrom(from.rank_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_self()) {
      mutable_self()->::ProtoSMBattleRankRec::MergeFrom(from.self());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400803::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400803::CopyFrom(const Proto50400803& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400803::IsInitialized() const {
  
  return true;
}

void Proto50400803::Swap(Proto50400803* other) {
  if (other != this) {
    std::swap(self_, other->self_);
    rank_.Swap(&other->rank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400803::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400803_descriptor_;
  metadata.reflection = Proto50400803_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400602::kMasterIdFieldNumber;
const int Proto80400602::kBeastIdFieldNumber;
#endif  // !_MSC_VER

Proto80400602::Proto80400602()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400602::InitAsDefaultInstance() {
}

Proto80400602::Proto80400602(const Proto80400602& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400602::SharedCtor() {
  _cached_size_ = 0;
  master_id_ = GOOGLE_LONGLONG(0);
  beast_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400602::~Proto80400602() {
  SharedDtor();
}

void Proto80400602::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400602::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400602::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400602_descriptor_;
}

const Proto80400602& Proto80400602::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto80400602* Proto80400602::default_instance_ = NULL;

Proto80400602* Proto80400602::New() const {
  return new Proto80400602;
}

void Proto80400602::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    master_id_ = GOOGLE_LONGLONG(0);
    beast_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400602::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 master_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &master_id_)));
          set_has_master_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_beast_id;
        break;
      }
      
      // optional int64 beast_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_beast_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &beast_id_)));
          set_has_beast_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400602::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 master_id = 1;
  if (has_master_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->master_id(), output);
  }
  
  // optional int64 beast_id = 2;
  if (has_beast_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->beast_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400602::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 master_id = 1;
  if (has_master_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->master_id(), target);
  }
  
  // optional int64 beast_id = 2;
  if (has_beast_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->beast_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400602::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 master_id = 1;
    if (has_master_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->master_id());
    }
    
    // optional int64 beast_id = 2;
    if (has_beast_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->beast_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400602::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400602* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400602*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400602::MergeFrom(const Proto80400602& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_master_id()) {
      set_master_id(from.master_id());
    }
    if (from.has_beast_id()) {
      set_beast_id(from.beast_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400602::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400602::CopyFrom(const Proto80400602& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400602::IsInitialized() const {
  
  return true;
}

void Proto80400602::Swap(Proto80400602* other) {
  if (other != this) {
    std::swap(master_id_, other->master_id_);
    std::swap(beast_id_, other->beast_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400602::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400602_descriptor_;
  metadata.reflection = Proto80400602_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100906::kEvaluateLevelFieldNumber;
const int Proto10100906::kRecordIdFieldNumber;
#endif  // !_MSC_VER

Proto10100906::Proto10100906()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100906::InitAsDefaultInstance() {
}

Proto10100906::Proto10100906(const Proto10100906& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100906::SharedCtor() {
  _cached_size_ = 0;
  evaluate_level_ = 0;
  record_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100906::~Proto10100906() {
  SharedDtor();
}

void Proto10100906::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100906::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100906::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100906_descriptor_;
}

const Proto10100906& Proto10100906::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto10100906* Proto10100906::default_instance_ = NULL;

Proto10100906* Proto10100906::New() const {
  return new Proto10100906;
}

void Proto10100906::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    evaluate_level_ = 0;
    record_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100906::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 evaluate_level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &evaluate_level_)));
          set_has_evaluate_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_record_id;
        break;
      }
      
      // optional int64 record_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_record_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &record_id_)));
          set_has_record_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100906::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 evaluate_level = 1;
  if (has_evaluate_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->evaluate_level(), output);
  }
  
  // optional int64 record_id = 2;
  if (has_record_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->record_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100906::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 evaluate_level = 1;
  if (has_evaluate_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->evaluate_level(), target);
  }
  
  // optional int64 record_id = 2;
  if (has_record_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->record_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100906::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 evaluate_level = 1;
    if (has_evaluate_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->evaluate_level());
    }
    
    // optional int64 record_id = 2;
    if (has_record_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->record_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100906::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100906* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100906*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100906::MergeFrom(const Proto10100906& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_evaluate_level()) {
      set_evaluate_level(from.evaluate_level());
    }
    if (from.has_record_id()) {
      set_record_id(from.record_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100906::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100906::CopyFrom(const Proto10100906& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100906::IsInitialized() const {
  
  return true;
}

void Proto10100906::Swap(Proto10100906* other) {
  if (other != this) {
    std::swap(evaluate_level_, other->evaluate_level_);
    std::swap(record_id_, other->record_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100906::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100906_descriptor_;
  metadata.reflection = Proto10100906_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100906::kEvaluateLevelFieldNumber;
const int Proto50100906::kRecordIdFieldNumber;
#endif  // !_MSC_VER

Proto50100906::Proto50100906()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100906::InitAsDefaultInstance() {
}

Proto50100906::Proto50100906(const Proto50100906& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100906::SharedCtor() {
  _cached_size_ = 0;
  evaluate_level_ = 0;
  record_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100906::~Proto50100906() {
  SharedDtor();
}

void Proto50100906::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100906::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100906::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100906_descriptor_;
}

const Proto50100906& Proto50100906::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto50100906* Proto50100906::default_instance_ = NULL;

Proto50100906* Proto50100906::New() const {
  return new Proto50100906;
}

void Proto50100906::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    evaluate_level_ = 0;
    record_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100906::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 evaluate_level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &evaluate_level_)));
          set_has_evaluate_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_record_id;
        break;
      }
      
      // optional int64 record_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_record_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &record_id_)));
          set_has_record_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100906::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 evaluate_level = 1;
  if (has_evaluate_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->evaluate_level(), output);
  }
  
  // optional int64 record_id = 2;
  if (has_record_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->record_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100906::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 evaluate_level = 1;
  if (has_evaluate_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->evaluate_level(), target);
  }
  
  // optional int64 record_id = 2;
  if (has_record_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->record_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100906::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 evaluate_level = 1;
    if (has_evaluate_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->evaluate_level());
    }
    
    // optional int64 record_id = 2;
    if (has_record_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->record_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100906::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100906* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100906*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100906::MergeFrom(const Proto50100906& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_evaluate_level()) {
      set_evaluate_level(from.evaluate_level());
    }
    if (from.has_record_id()) {
      set_record_id(from.record_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100906::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100906::CopyFrom(const Proto50100906& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100906::IsInitialized() const {
  
  return true;
}

void Proto50100906::Swap(Proto50100906* other) {
  if (other != this) {
    std::swap(evaluate_level_, other->evaluate_level_);
    std::swap(record_id_, other->record_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100906::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100906_descriptor_;
  metadata.reflection = Proto50100906_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400203::kCmdFieldNumber;
const int Proto81400203::kTaskIdFieldNumber;
const int Proto81400203::kTypeFieldNumber;
const int Proto81400203::kStatusFieldNumber;
const int Proto81400203::kCondTypeFieldNumber;
const int Proto81400203::kCondIndexFieldNumber;
const int Proto81400203::kCondIdFieldNumber;
const int Proto81400203::kCurValueFieldNumber;
const int Proto81400203::kFinalValueFieldNumber;
const int Proto81400203::kRoutineDiceFieldNumber;
const int Proto81400203::kIsFirstRoutineFieldNumber;
const int Proto81400203::kTotalRoutineSizeFieldNumber;
const int Proto81400203::kRoutineTaskIndexFieldNumber;
const int Proto81400203::kKillTypeFieldNumber;
const int Proto81400203::kRangeLevelFieldNumber;
#endif  // !_MSC_VER

Proto81400203::Proto81400203()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400203::InitAsDefaultInstance() {
}

Proto81400203::Proto81400203(const Proto81400203& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400203::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 0;
  task_id_ = 0;
  type_ = 0;
  status_ = 0;
  cond_type_ = 0;
  cond_index_ = 0;
  cond_id_ = 0;
  cur_value_ = 0;
  final_value_ = 0;
  routine_dice_ = 0;
  is_first_routine_ = 0;
  total_routine_size_ = 0;
  routine_task_index_ = 0;
  kill_type_ = 0;
  range_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400203::~Proto81400203() {
  SharedDtor();
}

void Proto81400203::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400203::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400203::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400203_descriptor_;
}

const Proto81400203& Proto81400203::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto81400203* Proto81400203::default_instance_ = NULL;

Proto81400203* Proto81400203::New() const {
  return new Proto81400203;
}

void Proto81400203::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cmd_ = 0;
    task_id_ = 0;
    type_ = 0;
    status_ = 0;
    cond_type_ = 0;
    cond_index_ = 0;
    cond_id_ = 0;
    cur_value_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    final_value_ = 0;
    routine_dice_ = 0;
    is_first_routine_ = 0;
    total_routine_size_ = 0;
    routine_task_index_ = 0;
    kill_type_ = 0;
    range_level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400203::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cmd = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_)));
          set_has_cmd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_task_id;
        break;
      }
      
      // optional int32 task_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_task_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_id_)));
          set_has_task_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }
      
      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_status;
        break;
      }
      
      // optional int32 status = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_cond_type;
        break;
      }
      
      // optional int32 cond_type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cond_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cond_type_)));
          set_has_cond_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_cond_index;
        break;
      }
      
      // optional int32 cond_index = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cond_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cond_index_)));
          set_has_cond_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_cond_id;
        break;
      }
      
      // optional int32 cond_id = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cond_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cond_id_)));
          set_has_cond_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_cur_value;
        break;
      }
      
      // optional int32 cur_value = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_value_)));
          set_has_cur_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_final_value;
        break;
      }
      
      // optional int32 final_value = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_final_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &final_value_)));
          set_has_final_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_routine_dice;
        break;
      }
      
      // optional int32 routine_dice = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_routine_dice:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &routine_dice_)));
          set_has_routine_dice();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_is_first_routine;
        break;
      }
      
      // optional int32 is_first_routine = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_first_routine:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_first_routine_)));
          set_has_is_first_routine();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_total_routine_size;
        break;
      }
      
      // optional int32 total_routine_size = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_routine_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_routine_size_)));
          set_has_total_routine_size();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_routine_task_index;
        break;
      }
      
      // optional int32 routine_task_index = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_routine_task_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &routine_task_index_)));
          set_has_routine_task_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_kill_type;
        break;
      }
      
      // optional int32 kill_type = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_kill_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &kill_type_)));
          set_has_kill_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_range_level;
        break;
      }
      
      // optional int32 range_level = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_range_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &range_level_)));
          set_has_range_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400203::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 cmd = 1;
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cmd(), output);
  }
  
  // optional int32 task_id = 2;
  if (has_task_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->task_id(), output);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }
  
  // optional int32 status = 4;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->status(), output);
  }
  
  // optional int32 cond_type = 5;
  if (has_cond_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->cond_type(), output);
  }
  
  // optional int32 cond_index = 6;
  if (has_cond_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->cond_index(), output);
  }
  
  // optional int32 cond_id = 7;
  if (has_cond_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->cond_id(), output);
  }
  
  // optional int32 cur_value = 8;
  if (has_cur_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->cur_value(), output);
  }
  
  // optional int32 final_value = 9;
  if (has_final_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->final_value(), output);
  }
  
  // optional int32 routine_dice = 10;
  if (has_routine_dice()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->routine_dice(), output);
  }
  
  // optional int32 is_first_routine = 11;
  if (has_is_first_routine()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->is_first_routine(), output);
  }
  
  // optional int32 total_routine_size = 12;
  if (has_total_routine_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->total_routine_size(), output);
  }
  
  // optional int32 routine_task_index = 13;
  if (has_routine_task_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->routine_task_index(), output);
  }
  
  // optional int32 kill_type = 14;
  if (has_kill_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->kill_type(), output);
  }
  
  // optional int32 range_level = 15;
  if (has_range_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->range_level(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400203::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 cmd = 1;
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cmd(), target);
  }
  
  // optional int32 task_id = 2;
  if (has_task_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->task_id(), target);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }
  
  // optional int32 status = 4;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->status(), target);
  }
  
  // optional int32 cond_type = 5;
  if (has_cond_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->cond_type(), target);
  }
  
  // optional int32 cond_index = 6;
  if (has_cond_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->cond_index(), target);
  }
  
  // optional int32 cond_id = 7;
  if (has_cond_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->cond_id(), target);
  }
  
  // optional int32 cur_value = 8;
  if (has_cur_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->cur_value(), target);
  }
  
  // optional int32 final_value = 9;
  if (has_final_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->final_value(), target);
  }
  
  // optional int32 routine_dice = 10;
  if (has_routine_dice()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->routine_dice(), target);
  }
  
  // optional int32 is_first_routine = 11;
  if (has_is_first_routine()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->is_first_routine(), target);
  }
  
  // optional int32 total_routine_size = 12;
  if (has_total_routine_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->total_routine_size(), target);
  }
  
  // optional int32 routine_task_index = 13;
  if (has_routine_task_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->routine_task_index(), target);
  }
  
  // optional int32 kill_type = 14;
  if (has_kill_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->kill_type(), target);
  }
  
  // optional int32 range_level = 15;
  if (has_range_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->range_level(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400203::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 cmd = 1;
    if (has_cmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cmd());
    }
    
    // optional int32 task_id = 2;
    if (has_task_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task_id());
    }
    
    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 status = 4;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }
    
    // optional int32 cond_type = 5;
    if (has_cond_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cond_type());
    }
    
    // optional int32 cond_index = 6;
    if (has_cond_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cond_index());
    }
    
    // optional int32 cond_id = 7;
    if (has_cond_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cond_id());
    }
    
    // optional int32 cur_value = 8;
    if (has_cur_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_value());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 final_value = 9;
    if (has_final_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->final_value());
    }
    
    // optional int32 routine_dice = 10;
    if (has_routine_dice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->routine_dice());
    }
    
    // optional int32 is_first_routine = 11;
    if (has_is_first_routine()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_first_routine());
    }
    
    // optional int32 total_routine_size = 12;
    if (has_total_routine_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_routine_size());
    }
    
    // optional int32 routine_task_index = 13;
    if (has_routine_task_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->routine_task_index());
    }
    
    // optional int32 kill_type = 14;
    if (has_kill_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->kill_type());
    }
    
    // optional int32 range_level = 15;
    if (has_range_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->range_level());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400203::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400203* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400203*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400203::MergeFrom(const Proto81400203& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_task_id()) {
      set_task_id(from.task_id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_cond_type()) {
      set_cond_type(from.cond_type());
    }
    if (from.has_cond_index()) {
      set_cond_index(from.cond_index());
    }
    if (from.has_cond_id()) {
      set_cond_id(from.cond_id());
    }
    if (from.has_cur_value()) {
      set_cur_value(from.cur_value());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_final_value()) {
      set_final_value(from.final_value());
    }
    if (from.has_routine_dice()) {
      set_routine_dice(from.routine_dice());
    }
    if (from.has_is_first_routine()) {
      set_is_first_routine(from.is_first_routine());
    }
    if (from.has_total_routine_size()) {
      set_total_routine_size(from.total_routine_size());
    }
    if (from.has_routine_task_index()) {
      set_routine_task_index(from.routine_task_index());
    }
    if (from.has_kill_type()) {
      set_kill_type(from.kill_type());
    }
    if (from.has_range_level()) {
      set_range_level(from.range_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400203::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400203::CopyFrom(const Proto81400203& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400203::IsInitialized() const {
  
  return true;
}

void Proto81400203::Swap(Proto81400203* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(task_id_, other->task_id_);
    std::swap(type_, other->type_);
    std::swap(status_, other->status_);
    std::swap(cond_type_, other->cond_type_);
    std::swap(cond_index_, other->cond_index_);
    std::swap(cond_id_, other->cond_id_);
    std::swap(cur_value_, other->cur_value_);
    std::swap(final_value_, other->final_value_);
    std::swap(routine_dice_, other->routine_dice_);
    std::swap(is_first_routine_, other->is_first_routine_);
    std::swap(total_routine_size_, other->total_routine_size_);
    std::swap(routine_task_index_, other->routine_task_index_);
    std::swap(kill_type_, other->kill_type_);
    std::swap(range_level_, other->range_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400203::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400203_descriptor_;
  metadata.reflection = Proto81400203_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400919::kScriptSortFieldNumber;
const int Proto10400919::kIncTimesFieldNumber;
const int Proto10400919::kCurGoldFieldNumber;
#endif  // !_MSC_VER

Proto10400919::Proto10400919()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400919::InitAsDefaultInstance() {
}

Proto10400919::Proto10400919(const Proto10400919& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400919::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  inc_times_ = 0;
  cur_gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400919::~Proto10400919() {
  SharedDtor();
}

void Proto10400919::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400919::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400919::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400919_descriptor_;
}

const Proto10400919& Proto10400919::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto10400919* Proto10400919::default_instance_ = NULL;

Proto10400919* Proto10400919::New() const {
  return new Proto10400919;
}

void Proto10400919::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
    inc_times_ = 0;
    cur_gold_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400919::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_inc_times;
        break;
      }
      
      // optional int32 inc_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_inc_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inc_times_)));
          set_has_inc_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_cur_gold;
        break;
      }
      
      // optional int32 cur_gold = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_gold_)));
          set_has_cur_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400919::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  // optional int32 inc_times = 2;
  if (has_inc_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->inc_times(), output);
  }
  
  // optional int32 cur_gold = 3;
  if (has_cur_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->cur_gold(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400919::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  // optional int32 inc_times = 2;
  if (has_inc_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->inc_times(), target);
  }
  
  // optional int32 cur_gold = 3;
  if (has_cur_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->cur_gold(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400919::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 inc_times = 2;
    if (has_inc_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->inc_times());
    }
    
    // optional int32 cur_gold = 3;
    if (has_cur_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_gold());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400919::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400919* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400919*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400919::MergeFrom(const Proto10400919& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_inc_times()) {
      set_inc_times(from.inc_times());
    }
    if (from.has_cur_gold()) {
      set_cur_gold(from.cur_gold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400919::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400919::CopyFrom(const Proto10400919& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400919::IsInitialized() const {
  
  return true;
}

void Proto10400919::Swap(Proto10400919* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(inc_times_, other->inc_times_);
    std::swap(cur_gold_, other->cur_gold_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400919::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400919_descriptor_;
  metadata.reflection = Proto10400919_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400919::kScriptSortFieldNumber;
const int Proto50400919::kGoldFieldNumber;
const int Proto50400919::kLeftTimesFieldNumber;
#endif  // !_MSC_VER

Proto50400919::Proto50400919()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400919::InitAsDefaultInstance() {
}

Proto50400919::Proto50400919(const Proto50400919& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400919::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  gold_ = 0;
  left_times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400919::~Proto50400919() {
  SharedDtor();
}

void Proto50400919::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400919::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400919::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400919_descriptor_;
}

const Proto50400919& Proto50400919::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto50400919* Proto50400919::default_instance_ = NULL;

Proto50400919* Proto50400919::New() const {
  return new Proto50400919;
}

void Proto50400919::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
    gold_ = 0;
    left_times_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400919::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_gold;
        break;
      }
      
      // optional int32 gold = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left_times;
        break;
      }
      
      // optional int32 left_times = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_times_)));
          set_has_left_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400919::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  // optional int32 gold = 2;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gold(), output);
  }
  
  // optional int32 left_times = 3;
  if (has_left_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_times(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400919::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  // optional int32 gold = 2;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gold(), target);
  }
  
  // optional int32 left_times = 3;
  if (has_left_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_times(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400919::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 gold = 2;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }
    
    // optional int32 left_times = 3;
    if (has_left_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_times());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400919::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400919* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400919*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400919::MergeFrom(const Proto50400919& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_left_times()) {
      set_left_times(from.left_times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400919::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400919::CopyFrom(const Proto50400919& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400919::IsInitialized() const {
  
  return true;
}

void Proto50400919::Swap(Proto50400919* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(gold_, other->gold_);
    std::swap(left_times_, other->left_times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400919::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400919_descriptor_;
  metadata.reflection = Proto50400919_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400920::kScriptSortFieldNumber;
const int Proto10400920::kIncTimesFieldNumber;
#endif  // !_MSC_VER

Proto10400920::Proto10400920()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400920::InitAsDefaultInstance() {
}

Proto10400920::Proto10400920(const Proto10400920& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400920::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  inc_times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400920::~Proto10400920() {
  SharedDtor();
}

void Proto10400920::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400920::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400920::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400920_descriptor_;
}

const Proto10400920& Proto10400920::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto10400920* Proto10400920::default_instance_ = NULL;

Proto10400920* Proto10400920::New() const {
  return new Proto10400920;
}

void Proto10400920::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
    inc_times_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400920::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_inc_times;
        break;
      }
      
      // optional int32 inc_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_inc_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inc_times_)));
          set_has_inc_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400920::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  // optional int32 inc_times = 2;
  if (has_inc_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->inc_times(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400920::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  // optional int32 inc_times = 2;
  if (has_inc_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->inc_times(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400920::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 inc_times = 2;
    if (has_inc_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->inc_times());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400920::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400920* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400920*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400920::MergeFrom(const Proto10400920& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_inc_times()) {
      set_inc_times(from.inc_times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400920::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400920::CopyFrom(const Proto10400920& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400920::IsInitialized() const {
  
  return true;
}

void Proto10400920::Swap(Proto10400920* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(inc_times_, other->inc_times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400920::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400920_descriptor_;
  metadata.reflection = Proto10400920_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400920::kScriptSortFieldNumber;
const int Proto50400920::kLeftTimesFieldNumber;
const int Proto50400920::kLeftBuyTimesFieldNumber;
const int Proto50400920::kLeftGetFieldNumber;
#endif  // !_MSC_VER

Proto50400920::Proto50400920()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400920::InitAsDefaultInstance() {
}

Proto50400920::Proto50400920(const Proto50400920& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400920::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  left_times_ = 0;
  left_buy_times_ = 0;
  left_get_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400920::~Proto50400920() {
  SharedDtor();
}

void Proto50400920::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400920::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400920::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400920_descriptor_;
}

const Proto50400920& Proto50400920::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto50400920* Proto50400920::default_instance_ = NULL;

Proto50400920* Proto50400920::New() const {
  return new Proto50400920;
}

void Proto50400920::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
    left_times_ = 0;
    left_buy_times_ = 0;
    left_get_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400920::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_left_times;
        break;
      }
      
      // optional int32 left_times = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_times_)));
          set_has_left_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left_buy_times;
        break;
      }
      
      // optional int32 left_buy_times = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_buy_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_buy_times_)));
          set_has_left_buy_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_left_get;
        break;
      }
      
      // optional int32 left_get = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_get:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_get_)));
          set_has_left_get();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400920::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  // optional int32 left_times = 2;
  if (has_left_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_times(), output);
  }
  
  // optional int32 left_buy_times = 3;
  if (has_left_buy_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left_buy_times(), output);
  }
  
  // optional int32 left_get = 4;
  if (has_left_get()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->left_get(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400920::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  // optional int32 left_times = 2;
  if (has_left_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_times(), target);
  }
  
  // optional int32 left_buy_times = 3;
  if (has_left_buy_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left_buy_times(), target);
  }
  
  // optional int32 left_get = 4;
  if (has_left_get()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->left_get(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400920::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 left_times = 2;
    if (has_left_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_times());
    }
    
    // optional int32 left_buy_times = 3;
    if (has_left_buy_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_buy_times());
    }
    
    // optional int32 left_get = 4;
    if (has_left_get()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_get());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400920::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400920* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400920*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400920::MergeFrom(const Proto50400920& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_left_times()) {
      set_left_times(from.left_times());
    }
    if (from.has_left_buy_times()) {
      set_left_buy_times(from.left_buy_times());
    }
    if (from.has_left_get()) {
      set_left_get(from.left_get());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400920::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400920::CopyFrom(const Proto50400920& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400920::IsInitialized() const {
  
  return true;
}

void Proto50400920::Swap(Proto50400920* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(left_times_, other->left_times_);
    std::swap(left_buy_times_, other->left_buy_times_);
    std::swap(left_get_, other->left_get_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400920::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400920_descriptor_;
  metadata.reflection = Proto50400920_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400703::kScheme1FieldNumber;
const int Proto50400703::kScheme2FieldNumber;
const int Proto50400703::kScheme3FieldNumber;
const int Proto50400703::kCurSchemeFieldNumber;
#endif  // !_MSC_VER

Proto50400703::Proto50400703()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400703::InitAsDefaultInstance() {
}

Proto50400703::Proto50400703(const Proto50400703& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400703::SharedCtor() {
  _cached_size_ = 0;
  cur_scheme_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400703::~Proto50400703() {
  SharedDtor();
}

void Proto50400703::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400703::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400703::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400703_descriptor_;
}

const Proto50400703& Proto50400703::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto50400703* Proto50400703::default_instance_ = NULL;

Proto50400703* Proto50400703::New() const {
  return new Proto50400703;
}

void Proto50400703::Clear() {
  if (_has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    cur_scheme_ = 0;
  }
  scheme_1_.Clear();
  scheme_2_.Clear();
  scheme_3_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400703::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 scheme_1 = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scheme_1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_scheme_1())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_scheme_1())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_scheme_1;
        if (input->ExpectTag(16)) goto parse_scheme_2;
        break;
      }
      
      // repeated int32 scheme_2 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scheme_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_scheme_2())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_scheme_2())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_scheme_2;
        if (input->ExpectTag(24)) goto parse_scheme_3;
        break;
      }
      
      // repeated int32 scheme_3 = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scheme_3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_scheme_3())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_scheme_3())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_scheme_3;
        if (input->ExpectTag(32)) goto parse_cur_scheme;
        break;
      }
      
      // optional int32 cur_scheme = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_scheme:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_scheme_)));
          set_has_cur_scheme();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400703::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 scheme_1 = 1;
  for (int i = 0; i < this->scheme_1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->scheme_1(i), output);
  }
  
  // repeated int32 scheme_2 = 2;
  for (int i = 0; i < this->scheme_2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->scheme_2(i), output);
  }
  
  // repeated int32 scheme_3 = 3;
  for (int i = 0; i < this->scheme_3_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->scheme_3(i), output);
  }
  
  // optional int32 cur_scheme = 4;
  if (has_cur_scheme()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cur_scheme(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400703::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 scheme_1 = 1;
  for (int i = 0; i < this->scheme_1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->scheme_1(i), target);
  }
  
  // repeated int32 scheme_2 = 2;
  for (int i = 0; i < this->scheme_2_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->scheme_2(i), target);
  }
  
  // repeated int32 scheme_3 = 3;
  for (int i = 0; i < this->scheme_3_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->scheme_3(i), target);
  }
  
  // optional int32 cur_scheme = 4;
  if (has_cur_scheme()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cur_scheme(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400703::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    // optional int32 cur_scheme = 4;
    if (has_cur_scheme()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_scheme());
    }
    
  }
  // repeated int32 scheme_1 = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->scheme_1_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->scheme_1(i));
    }
    total_size += 1 * this->scheme_1_size() + data_size;
  }
  
  // repeated int32 scheme_2 = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->scheme_2_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->scheme_2(i));
    }
    total_size += 1 * this->scheme_2_size() + data_size;
  }
  
  // repeated int32 scheme_3 = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->scheme_3_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->scheme_3(i));
    }
    total_size += 1 * this->scheme_3_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400703::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400703* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400703*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400703::MergeFrom(const Proto50400703& from) {
  GOOGLE_CHECK_NE(&from, this);
  scheme_1_.MergeFrom(from.scheme_1_);
  scheme_2_.MergeFrom(from.scheme_2_);
  scheme_3_.MergeFrom(from.scheme_3_);
  if (from._has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    if (from.has_cur_scheme()) {
      set_cur_scheme(from.cur_scheme());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400703::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400703::CopyFrom(const Proto50400703& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400703::IsInitialized() const {
  
  return true;
}

void Proto50400703::Swap(Proto50400703* other) {
  if (other != this) {
    scheme_1_.Swap(&other->scheme_1_);
    scheme_2_.Swap(&other->scheme_2_);
    scheme_3_.Swap(&other->scheme_3_);
    std::swap(cur_scheme_, other->cur_scheme_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400703::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400703_descriptor_;
  metadata.reflection = Proto50400703_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400705::kSkillIdFieldNumber;
#endif  // !_MSC_VER

Proto10400705::Proto10400705()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400705::InitAsDefaultInstance() {
}

Proto10400705::Proto10400705(const Proto10400705& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400705::SharedCtor() {
  _cached_size_ = 0;
  skill_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400705::~Proto10400705() {
  SharedDtor();
}

void Proto10400705::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400705::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400705::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400705_descriptor_;
}

const Proto10400705& Proto10400705::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto10400705* Proto10400705::default_instance_ = NULL;

Proto10400705* Proto10400705::New() const {
  return new Proto10400705;
}

void Proto10400705::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skill_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400705::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 skill_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400705::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skill_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400705::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skill_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400705::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 skill_id = 1;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400705::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400705* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400705*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400705::MergeFrom(const Proto10400705& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400705::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400705::CopyFrom(const Proto10400705& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400705::IsInitialized() const {
  
  return true;
}

void Proto10400705::Swap(Proto10400705* other) {
  if (other != this) {
    std::swap(skill_id_, other->skill_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400705::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400705_descriptor_;
  metadata.reflection = Proto10400705_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400705::kSkillIdFieldNumber;
#endif  // !_MSC_VER

Proto50400705::Proto50400705()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400705::InitAsDefaultInstance() {
}

Proto50400705::Proto50400705(const Proto50400705& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400705::SharedCtor() {
  _cached_size_ = 0;
  skill_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400705::~Proto50400705() {
  SharedDtor();
}

void Proto50400705::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400705::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400705::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400705_descriptor_;
}

const Proto50400705& Proto50400705::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto50400705* Proto50400705::default_instance_ = NULL;

Proto50400705* Proto50400705::New() const {
  return new Proto50400705;
}

void Proto50400705::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    skill_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400705::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 skill_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400705::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->skill_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400705::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 skill_id = 1;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->skill_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400705::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 skill_id = 1;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400705::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400705* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400705*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400705::MergeFrom(const Proto50400705& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400705::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400705::CopyFrom(const Proto50400705& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400705::IsInitialized() const {
  
  return true;
}

void Proto50400705::Swap(Proto50400705* other) {
  if (other != this) {
    std::swap(skill_id_, other->skill_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400705::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400705_descriptor_;
  metadata.reflection = Proto50400705_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400109::kLackCopperFieldNumber;
const int Proto81400109::kLackBindCopperFieldNumber;
const int Proto81400109::kReturnRecognFieldNumber;
const int Proto81400109::kNeedGoldFieldNumber;
#endif  // !_MSC_VER

Proto81400109::Proto81400109()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400109::InitAsDefaultInstance() {
}

Proto81400109::Proto81400109(const Proto81400109& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400109::SharedCtor() {
  _cached_size_ = 0;
  lack_copper_ = 0;
  lack_bind_copper_ = 0;
  return_recogn_ = 0;
  need_gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400109::~Proto81400109() {
  SharedDtor();
}

void Proto81400109::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400109::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400109::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400109_descriptor_;
}

const Proto81400109& Proto81400109::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto81400109* Proto81400109::default_instance_ = NULL;

Proto81400109* Proto81400109::New() const {
  return new Proto81400109;
}

void Proto81400109::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    lack_copper_ = 0;
    lack_bind_copper_ = 0;
    return_recogn_ = 0;
    need_gold_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400109::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 lack_copper = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lack_copper_)));
          set_has_lack_copper();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_lack_bind_copper;
        break;
      }
      
      // optional int32 lack_bind_copper = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lack_bind_copper:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lack_bind_copper_)));
          set_has_lack_bind_copper();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_return_recogn;
        break;
      }
      
      // optional int32 return_recogn = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_return_recogn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &return_recogn_)));
          set_has_return_recogn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_need_gold;
        break;
      }
      
      // optional int32 need_gold = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_need_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &need_gold_)));
          set_has_need_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400109::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 lack_copper = 1;
  if (has_lack_copper()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->lack_copper(), output);
  }
  
  // optional int32 lack_bind_copper = 2;
  if (has_lack_bind_copper()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->lack_bind_copper(), output);
  }
  
  // optional int32 return_recogn = 3;
  if (has_return_recogn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->return_recogn(), output);
  }
  
  // optional int32 need_gold = 4;
  if (has_need_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->need_gold(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400109::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 lack_copper = 1;
  if (has_lack_copper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->lack_copper(), target);
  }
  
  // optional int32 lack_bind_copper = 2;
  if (has_lack_bind_copper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->lack_bind_copper(), target);
  }
  
  // optional int32 return_recogn = 3;
  if (has_return_recogn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->return_recogn(), target);
  }
  
  // optional int32 need_gold = 4;
  if (has_need_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->need_gold(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400109::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 lack_copper = 1;
    if (has_lack_copper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lack_copper());
    }
    
    // optional int32 lack_bind_copper = 2;
    if (has_lack_bind_copper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lack_bind_copper());
    }
    
    // optional int32 return_recogn = 3;
    if (has_return_recogn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->return_recogn());
    }
    
    // optional int32 need_gold = 4;
    if (has_need_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->need_gold());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400109::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400109* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400109*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400109::MergeFrom(const Proto81400109& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lack_copper()) {
      set_lack_copper(from.lack_copper());
    }
    if (from.has_lack_bind_copper()) {
      set_lack_bind_copper(from.lack_bind_copper());
    }
    if (from.has_return_recogn()) {
      set_return_recogn(from.return_recogn());
    }
    if (from.has_need_gold()) {
      set_need_gold(from.need_gold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400109::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400109::CopyFrom(const Proto81400109& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400109::IsInitialized() const {
  
  return true;
}

void Proto81400109::Swap(Proto81400109* other) {
  if (other != this) {
    std::swap(lack_copper_, other->lack_copper_);
    std::swap(lack_bind_copper_, other->lack_bind_copper_);
    std::swap(return_recogn_, other->return_recogn_);
    std::swap(need_gold_, other->need_gold_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400109::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400109_descriptor_;
  metadata.reflection = Proto81400109_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401801::kIsStartFieldNumber;
#endif  // !_MSC_VER

Proto81401801::Proto81401801()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401801::InitAsDefaultInstance() {
}

Proto81401801::Proto81401801(const Proto81401801& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401801::SharedCtor() {
  _cached_size_ = 0;
  is_start_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401801::~Proto81401801() {
  SharedDtor();
}

void Proto81401801::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401801::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401801::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401801_descriptor_;
}

const Proto81401801& Proto81401801::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto81401801* Proto81401801::default_instance_ = NULL;

Proto81401801* Proto81401801::New() const {
  return new Proto81401801;
}

void Proto81401801::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    is_start_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401801::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 is_start = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_start_)));
          set_has_is_start();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401801::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 is_start = 1;
  if (has_is_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->is_start(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401801::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 is_start = 1;
  if (has_is_start()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->is_start(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401801::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 is_start = 1;
    if (has_is_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_start());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401801::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401801* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401801*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401801::MergeFrom(const Proto81401801& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_is_start()) {
      set_is_start(from.is_start());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401801::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401801::CopyFrom(const Proto81401801& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401801::IsInitialized() const {
  
  return true;
}

void Proto81401801::Swap(Proto81401801* other) {
  if (other != this) {
    std::swap(is_start_, other->is_start_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401801::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401801_descriptor_;
  metadata.reflection = Proto81401801_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401801::kAwardsItemFieldNumber;
const int Proto51401801::kDisplayItemFieldNumber;
const int Proto51401801::kHasAwardsFieldNumber;
#endif  // !_MSC_VER

Proto51401801::Proto51401801()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401801::InitAsDefaultInstance() {
  display_item_ = const_cast< ::ProtoItem*>(&::ProtoItem::default_instance());
}

Proto51401801::Proto51401801(const Proto51401801& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401801::SharedCtor() {
  _cached_size_ = 0;
  display_item_ = NULL;
  has_awards_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401801::~Proto51401801() {
  SharedDtor();
}

void Proto51401801::SharedDtor() {
  if (this != default_instance_) {
    delete display_item_;
  }
}

void Proto51401801::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401801::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401801_descriptor_;
}

const Proto51401801& Proto51401801::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto51401801* Proto51401801::default_instance_ = NULL;

Proto51401801* Proto51401801::New() const {
  return new Proto51401801;
}

void Proto51401801::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_display_item()) {
      if (display_item_ != NULL) display_item_->::ProtoItem::Clear();
    }
    has_awards_ = 0;
  }
  awards_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401801::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoItem awards_item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_awards_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_awards_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_awards_item;
        if (input->ExpectTag(18)) goto parse_display_item;
        break;
      }
      
      // optional .ProtoItem display_item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_display_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_display_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_has_awards;
        break;
      }
      
      // optional int32 has_awards = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_has_awards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &has_awards_)));
          set_has_has_awards();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401801::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoItem awards_item = 1;
  for (int i = 0; i < this->awards_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->awards_item(i), output);
  }
  
  // optional .ProtoItem display_item = 2;
  if (has_display_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->display_item(), output);
  }
  
  // optional int32 has_awards = 3;
  if (has_has_awards()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->has_awards(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401801::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoItem awards_item = 1;
  for (int i = 0; i < this->awards_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->awards_item(i), target);
  }
  
  // optional .ProtoItem display_item = 2;
  if (has_display_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->display_item(), target);
  }
  
  // optional int32 has_awards = 3;
  if (has_has_awards()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->has_awards(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401801::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .ProtoItem display_item = 2;
    if (has_display_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->display_item());
    }
    
    // optional int32 has_awards = 3;
    if (has_has_awards()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->has_awards());
    }
    
  }
  // repeated .ProtoItem awards_item = 1;
  total_size += 1 * this->awards_item_size();
  for (int i = 0; i < this->awards_item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->awards_item(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401801::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401801* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401801*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401801::MergeFrom(const Proto51401801& from) {
  GOOGLE_CHECK_NE(&from, this);
  awards_item_.MergeFrom(from.awards_item_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_display_item()) {
      mutable_display_item()->::ProtoItem::MergeFrom(from.display_item());
    }
    if (from.has_has_awards()) {
      set_has_awards(from.has_awards());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401801::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401801::CopyFrom(const Proto51401801& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401801::IsInitialized() const {
  
  return true;
}

void Proto51401801::Swap(Proto51401801* other) {
  if (other != this) {
    awards_item_.Swap(&other->awards_item_);
    std::swap(display_item_, other->display_item_);
    std::swap(has_awards_, other->has_awards_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401801::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401801_descriptor_;
  metadata.reflection = Proto51401801_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400150::kGoldFieldNumber;
const int Proto11400150::kMoneyTypeFieldNumber;
const int Proto11400150::kRecognFieldNumber;
const int Proto11400150::kNeverConfirmFieldNumber;
#endif  // !_MSC_VER

Proto11400150::Proto11400150()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400150::InitAsDefaultInstance() {
}

Proto11400150::Proto11400150(const Proto11400150& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400150::SharedCtor() {
  _cached_size_ = 0;
  gold_ = 0;
  money_type_ = 0;
  recogn_ = 0;
  never_confirm_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400150::~Proto11400150() {
  SharedDtor();
}

void Proto11400150::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400150::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400150::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400150_descriptor_;
}

const Proto11400150& Proto11400150::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto11400150* Proto11400150::default_instance_ = NULL;

Proto11400150* Proto11400150::New() const {
  return new Proto11400150;
}

void Proto11400150::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gold_ = 0;
    money_type_ = 0;
    recogn_ = 0;
    never_confirm_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400150::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 gold = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_money_type;
        break;
      }
      
      // optional int32 money_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_money_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_type_)));
          set_has_money_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_recogn;
        break;
      }
      
      // optional int32 recogn = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recogn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recogn_)));
          set_has_recogn();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_never_confirm;
        break;
      }
      
      // optional int32 never_confirm = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_never_confirm:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &never_confirm_)));
          set_has_never_confirm();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400150::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 gold = 1;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->gold(), output);
  }
  
  // optional int32 money_type = 2;
  if (has_money_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->money_type(), output);
  }
  
  // optional int32 recogn = 3;
  if (has_recogn()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->recogn(), output);
  }
  
  // optional int32 never_confirm = 4;
  if (has_never_confirm()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->never_confirm(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400150::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 gold = 1;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->gold(), target);
  }
  
  // optional int32 money_type = 2;
  if (has_money_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->money_type(), target);
  }
  
  // optional int32 recogn = 3;
  if (has_recogn()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->recogn(), target);
  }
  
  // optional int32 never_confirm = 4;
  if (has_never_confirm()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->never_confirm(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400150::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 gold = 1;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold());
    }
    
    // optional int32 money_type = 2;
    if (has_money_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money_type());
    }
    
    // optional int32 recogn = 3;
    if (has_recogn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recogn());
    }
    
    // optional int32 never_confirm = 4;
    if (has_never_confirm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->never_confirm());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400150::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400150* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400150*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400150::MergeFrom(const Proto11400150& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_money_type()) {
      set_money_type(from.money_type());
    }
    if (from.has_recogn()) {
      set_recogn(from.recogn());
    }
    if (from.has_never_confirm()) {
      set_never_confirm(from.never_confirm());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400150::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400150::CopyFrom(const Proto11400150& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400150::IsInitialized() const {
  
  return true;
}

void Proto11400150::Swap(Proto11400150* other) {
  if (other != this) {
    std::swap(gold_, other->gold_);
    std::swap(money_type_, other->money_type_);
    std::swap(recogn_, other->recogn_);
    std::swap(never_confirm_, other->never_confirm_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400150::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400150_descriptor_;
  metadata.reflection = Proto11400150_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51400003::kBuffStatusSetFieldNumber;
#endif  // !_MSC_VER

Proto51400003::Proto51400003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51400003::InitAsDefaultInstance() {
}

Proto51400003::Proto51400003(const Proto51400003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51400003::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51400003::~Proto51400003() {
  SharedDtor();
}

void Proto51400003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51400003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51400003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51400003_descriptor_;
}

const Proto51400003& Proto51400003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto51400003* Proto51400003::default_instance_ = NULL;

Proto51400003* Proto51400003::New() const {
  return new Proto51400003;
}

void Proto51400003::Clear() {
  buff_status_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51400003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoBuffStatus buff_status_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buff_status_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buff_status_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_buff_status_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51400003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoBuffStatus buff_status_set = 1;
  for (int i = 0; i < this->buff_status_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->buff_status_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51400003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoBuffStatus buff_status_set = 1;
  for (int i = 0; i < this->buff_status_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->buff_status_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51400003::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoBuffStatus buff_status_set = 1;
  total_size += 1 * this->buff_status_set_size();
  for (int i = 0; i < this->buff_status_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buff_status_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51400003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51400003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51400003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51400003::MergeFrom(const Proto51400003& from) {
  GOOGLE_CHECK_NE(&from, this);
  buff_status_set_.MergeFrom(from.buff_status_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51400003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51400003::CopyFrom(const Proto51400003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51400003::IsInitialized() const {
  
  return true;
}

void Proto51400003::Swap(Proto51400003* other) {
  if (other != this) {
    buff_status_set_.Swap(&other->buff_status_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51400003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51400003_descriptor_;
  metadata.reflection = Proto51400003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401803::kTodayRechargeFieldNumber;
const int Proto81401803::kRewardsStateFieldNumber;
const int Proto81401803::kRewardListFieldNumber;
const int Proto81401803::kShowIconFieldNumber;
const int Proto81401803::kStartTickFieldNumber;
const int Proto81401803::kEndTickFieldNumber;
const int Proto81401803::kFirstRechargeFieldNumber;
const int Proto81401803::kVipLevelFieldNumber;
const int Proto81401803::kIndexFieldNumber;
const int Proto81401803::kFirstGoldFieldNumber;
const int Proto81401803::kTotalGoldFieldNumber;
#endif  // !_MSC_VER

Proto81401803::Proto81401803()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401803::InitAsDefaultInstance() {
}

Proto81401803::Proto81401803(const Proto81401803& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401803::SharedCtor() {
  _cached_size_ = 0;
  today_recharge_ = 0;
  show_icon_ = 0;
  start_tick_ = GOOGLE_LONGLONG(0);
  end_tick_ = GOOGLE_LONGLONG(0);
  first_recharge_ = 0;
  vip_level_ = 0;
  index_ = 0;
  first_gold_ = 0;
  total_gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401803::~Proto81401803() {
  SharedDtor();
}

void Proto81401803::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401803::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401803::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401803_descriptor_;
}

const Proto81401803& Proto81401803::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto81401803* Proto81401803::default_instance_ = NULL;

Proto81401803* Proto81401803::New() const {
  return new Proto81401803;
}

void Proto81401803::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    today_recharge_ = 0;
    show_icon_ = 0;
    start_tick_ = GOOGLE_LONGLONG(0);
    end_tick_ = GOOGLE_LONGLONG(0);
    first_recharge_ = 0;
    vip_level_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    index_ = 0;
    first_gold_ = 0;
    total_gold_ = 0;
  }
  rewards_state_.Clear();
  reward_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401803::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 today_recharge = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &today_recharge_)));
          set_has_today_recharge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_rewards_state;
        break;
      }
      
      // repeated int32 rewards_state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rewards_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_rewards_state())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_rewards_state())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_rewards_state;
        if (input->ExpectTag(24)) goto parse_reward_list;
        break;
      }
      
      // repeated int32 reward_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_reward_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_reward_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_reward_list;
        if (input->ExpectTag(32)) goto parse_show_icon;
        break;
      }
      
      // optional int32 show_icon = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_show_icon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &show_icon_)));
          set_has_show_icon();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_start_tick;
        break;
      }
      
      // optional int64 start_tick = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_tick_)));
          set_has_start_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_end_tick;
        break;
      }
      
      // optional int64 end_tick = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_tick_)));
          set_has_end_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_first_recharge;
        break;
      }
      
      // optional int32 first_recharge = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_recharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_recharge_)));
          set_has_first_recharge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_vip_level;
        break;
      }
      
      // optional int32 vip_level = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_level_)));
          set_has_vip_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_index;
        break;
      }
      
      // optional int32 index = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_first_gold;
        break;
      }
      
      // optional int32 first_gold = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_gold_)));
          set_has_first_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_total_gold;
        break;
      }
      
      // optional int32 total_gold = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_gold_)));
          set_has_total_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401803::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 today_recharge = 1;
  if (has_today_recharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->today_recharge(), output);
  }
  
  // repeated int32 rewards_state = 2;
  for (int i = 0; i < this->rewards_state_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->rewards_state(i), output);
  }
  
  // repeated int32 reward_list = 3;
  for (int i = 0; i < this->reward_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->reward_list(i), output);
  }
  
  // optional int32 show_icon = 4;
  if (has_show_icon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->show_icon(), output);
  }
  
  // optional int64 start_tick = 5;
  if (has_start_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->start_tick(), output);
  }
  
  // optional int64 end_tick = 6;
  if (has_end_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->end_tick(), output);
  }
  
  // optional int32 first_recharge = 7;
  if (has_first_recharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->first_recharge(), output);
  }
  
  // optional int32 vip_level = 8;
  if (has_vip_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->vip_level(), output);
  }
  
  // optional int32 index = 9;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->index(), output);
  }
  
  // optional int32 first_gold = 10;
  if (has_first_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->first_gold(), output);
  }
  
  // optional int32 total_gold = 11;
  if (has_total_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->total_gold(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401803::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 today_recharge = 1;
  if (has_today_recharge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->today_recharge(), target);
  }
  
  // repeated int32 rewards_state = 2;
  for (int i = 0; i < this->rewards_state_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->rewards_state(i), target);
  }
  
  // repeated int32 reward_list = 3;
  for (int i = 0; i < this->reward_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->reward_list(i), target);
  }
  
  // optional int32 show_icon = 4;
  if (has_show_icon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->show_icon(), target);
  }
  
  // optional int64 start_tick = 5;
  if (has_start_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->start_tick(), target);
  }
  
  // optional int64 end_tick = 6;
  if (has_end_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->end_tick(), target);
  }
  
  // optional int32 first_recharge = 7;
  if (has_first_recharge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->first_recharge(), target);
  }
  
  // optional int32 vip_level = 8;
  if (has_vip_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->vip_level(), target);
  }
  
  // optional int32 index = 9;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->index(), target);
  }
  
  // optional int32 first_gold = 10;
  if (has_first_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->first_gold(), target);
  }
  
  // optional int32 total_gold = 11;
  if (has_total_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->total_gold(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401803::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 today_recharge = 1;
    if (has_today_recharge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->today_recharge());
    }
    
    // optional int32 show_icon = 4;
    if (has_show_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->show_icon());
    }
    
    // optional int64 start_tick = 5;
    if (has_start_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_tick());
    }
    
    // optional int64 end_tick = 6;
    if (has_end_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_tick());
    }
    
    // optional int32 first_recharge = 7;
    if (has_first_recharge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_recharge());
    }
    
    // optional int32 vip_level = 8;
    if (has_vip_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_level());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 index = 9;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 first_gold = 10;
    if (has_first_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_gold());
    }
    
    // optional int32 total_gold = 11;
    if (has_total_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_gold());
    }
    
  }
  // repeated int32 rewards_state = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->rewards_state_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->rewards_state(i));
    }
    total_size += 1 * this->rewards_state_size() + data_size;
  }
  
  // repeated int32 reward_list = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->reward_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->reward_list(i));
    }
    total_size += 1 * this->reward_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401803::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401803* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401803*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401803::MergeFrom(const Proto81401803& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewards_state_.MergeFrom(from.rewards_state_);
  reward_list_.MergeFrom(from.reward_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_today_recharge()) {
      set_today_recharge(from.today_recharge());
    }
    if (from.has_show_icon()) {
      set_show_icon(from.show_icon());
    }
    if (from.has_start_tick()) {
      set_start_tick(from.start_tick());
    }
    if (from.has_end_tick()) {
      set_end_tick(from.end_tick());
    }
    if (from.has_first_recharge()) {
      set_first_recharge(from.first_recharge());
    }
    if (from.has_vip_level()) {
      set_vip_level(from.vip_level());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_first_gold()) {
      set_first_gold(from.first_gold());
    }
    if (from.has_total_gold()) {
      set_total_gold(from.total_gold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401803::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401803::CopyFrom(const Proto81401803& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401803::IsInitialized() const {
  
  return true;
}

void Proto81401803::Swap(Proto81401803* other) {
  if (other != this) {
    std::swap(today_recharge_, other->today_recharge_);
    rewards_state_.Swap(&other->rewards_state_);
    reward_list_.Swap(&other->reward_list_);
    std::swap(show_icon_, other->show_icon_);
    std::swap(start_tick_, other->start_tick_);
    std::swap(end_tick_, other->end_tick_);
    std::swap(first_recharge_, other->first_recharge_);
    std::swap(vip_level_, other->vip_level_);
    std::swap(index_, other->index_);
    std::swap(first_gold_, other->first_gold_);
    std::swap(total_gold_, other->total_gold_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401803::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401803_descriptor_;
  metadata.reflection = Proto81401803_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401804::kRewardIndexFieldNumber;
const int Proto11401804::kItemListFieldNumber;
#endif  // !_MSC_VER

Proto11401804::Proto11401804()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401804::InitAsDefaultInstance() {
}

Proto11401804::Proto11401804(const Proto11401804& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401804::SharedCtor() {
  _cached_size_ = 0;
  reward_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401804::~Proto11401804() {
  SharedDtor();
}

void Proto11401804::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401804::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401804::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401804_descriptor_;
}

const Proto11401804& Proto11401804::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto11401804* Proto11401804::default_instance_ = NULL;

Proto11401804* Proto11401804::New() const {
  return new Proto11401804;
}

void Proto11401804::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    reward_index_ = 0;
  }
  item_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401804::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 reward_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_index_)));
          set_has_reward_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item_list;
        break;
      }
      
      // repeated .ProtoItem item_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401804::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 reward_index = 1;
  if (has_reward_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reward_index(), output);
  }
  
  // repeated .ProtoItem item_list = 2;
  for (int i = 0; i < this->item_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401804::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 reward_index = 1;
  if (has_reward_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reward_index(), target);
  }
  
  // repeated .ProtoItem item_list = 2;
  for (int i = 0; i < this->item_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401804::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 reward_index = 1;
    if (has_reward_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_index());
    }
    
  }
  // repeated .ProtoItem item_list = 2;
  total_size += 1 * this->item_list_size();
  for (int i = 0; i < this->item_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401804::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401804* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401804*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401804::MergeFrom(const Proto11401804& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_list_.MergeFrom(from.item_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reward_index()) {
      set_reward_index(from.reward_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401804::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401804::CopyFrom(const Proto11401804& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401804::IsInitialized() const {
  
  return true;
}

void Proto11401804::Swap(Proto11401804* other) {
  if (other != this) {
    std::swap(reward_index_, other->reward_index_);
    item_list_.Swap(&other->item_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401804::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401804_descriptor_;
  metadata.reflection = Proto11401804_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11400151::kSceneIdFieldNumber;
#endif  // !_MSC_VER

Proto11400151::Proto11400151()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11400151::InitAsDefaultInstance() {
}

Proto11400151::Proto11400151(const Proto11400151& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11400151::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11400151::~Proto11400151() {
  SharedDtor();
}

void Proto11400151::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11400151::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11400151::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11400151_descriptor_;
}

const Proto11400151& Proto11400151::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto11400151* Proto11400151::default_instance_ = NULL;

Proto11400151* Proto11400151::New() const {
  return new Proto11400151;
}

void Proto11400151::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11400151::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11400151::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11400151::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11400151::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11400151::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11400151* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11400151*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11400151::MergeFrom(const Proto11400151& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11400151::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11400151::CopyFrom(const Proto11400151& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11400151::IsInitialized() const {
  
  return true;
}

void Proto11400151::Swap(Proto11400151* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11400151::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11400151_descriptor_;
  metadata.reflection = Proto11400151_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401452::kLevelFieldNumber;
#endif  // !_MSC_VER

Proto11401452::Proto11401452()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401452::InitAsDefaultInstance() {
}

Proto11401452::Proto11401452(const Proto11401452& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401452::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401452::~Proto11401452() {
  SharedDtor();
}

void Proto11401452::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401452::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401452::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401452_descriptor_;
}

const Proto11401452& Proto11401452::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto11401452* Proto11401452::default_instance_ = NULL;

Proto11401452* Proto11401452::New() const {
  return new Proto11401452;
}

void Proto11401452::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401452::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401452::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401452::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401452::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401452::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401452* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401452*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401452::MergeFrom(const Proto11401452& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401452::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401452::CopyFrom(const Proto11401452& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401452::IsInitialized() const {
  
  return true;
}

void Proto11401452::Swap(Proto11401452* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401452::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401452_descriptor_;
  metadata.reflection = Proto11401452_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401452::kLevelFieldNumber;
#endif  // !_MSC_VER

Proto51401452::Proto51401452()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401452::InitAsDefaultInstance() {
}

Proto51401452::Proto51401452(const Proto51401452& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401452::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401452::~Proto51401452() {
  SharedDtor();
}

void Proto51401452::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401452::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401452::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401452_descriptor_;
}

const Proto51401452& Proto51401452::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto51401452* Proto51401452::default_instance_ = NULL;

Proto51401452* Proto51401452::New() const {
  return new Proto51401452;
}

void Proto51401452::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401452::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401452::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401452::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401452::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401452::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401452* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401452*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401452::MergeFrom(const Proto51401452& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401452::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401452::CopyFrom(const Proto51401452& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401452::IsInitialized() const {
  
  return true;
}

void Proto51401452::Swap(Proto51401452* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401452::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401452_descriptor_;
  metadata.reflection = Proto51401452_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51401451::kRewardsInfoFieldNumber;
#endif  // !_MSC_VER

Proto51401451::Proto51401451()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51401451::InitAsDefaultInstance() {
}

Proto51401451::Proto51401451(const Proto51401451& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51401451::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51401451::~Proto51401451() {
  SharedDtor();
}

void Proto51401451::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51401451::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51401451::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51401451_descriptor_;
}

const Proto51401451& Proto51401451::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto51401451* Proto51401451::default_instance_ = NULL;

Proto51401451* Proto51401451::New() const {
  return new Proto51401451;
}

void Proto51401451::Clear() {
  rewards_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51401451::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoLvlReward rewards_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rewards_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rewards_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rewards_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51401451::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoLvlReward rewards_info = 1;
  for (int i = 0; i < this->rewards_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewards_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51401451::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoLvlReward rewards_info = 1;
  for (int i = 0; i < this->rewards_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rewards_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51401451::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoLvlReward rewards_info = 1;
  total_size += 1 * this->rewards_info_size();
  for (int i = 0; i < this->rewards_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rewards_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51401451::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51401451* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51401451*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51401451::MergeFrom(const Proto51401451& from) {
  GOOGLE_CHECK_NE(&from, this);
  rewards_info_.MergeFrom(from.rewards_info_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51401451::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51401451::CopyFrom(const Proto51401451& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51401451::IsInitialized() const {
  
  return true;
}

void Proto51401451::Swap(Proto51401451* other) {
  if (other != this) {
    rewards_info_.Swap(&other->rewards_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51401451::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51401451_descriptor_;
  metadata.reflection = Proto51401451_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401406::kEnableFieldNumber;
const int Proto81401406::kAwrdsNumFieldNumber;
#endif  // !_MSC_VER

Proto81401406::Proto81401406()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401406::InitAsDefaultInstance() {
}

Proto81401406::Proto81401406(const Proto81401406& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401406::SharedCtor() {
  _cached_size_ = 0;
  enable_ = 0;
  awrds_num_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401406::~Proto81401406() {
  SharedDtor();
}

void Proto81401406::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401406::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401406::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401406_descriptor_;
}

const Proto81401406& Proto81401406::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto81401406* Proto81401406::default_instance_ = NULL;

Proto81401406* Proto81401406::New() const {
  return new Proto81401406;
}

void Proto81401406::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    enable_ = 0;
    awrds_num_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401406::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 enable = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enable_)));
          set_has_enable();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_awrds_num;
        break;
      }
      
      // optional int32 awrds_num = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_awrds_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &awrds_num_)));
          set_has_awrds_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401406::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 enable = 1;
  if (has_enable()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->enable(), output);
  }
  
  // optional int32 awrds_num = 2;
  if (has_awrds_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->awrds_num(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401406::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 enable = 1;
  if (has_enable()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->enable(), target);
  }
  
  // optional int32 awrds_num = 2;
  if (has_awrds_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->awrds_num(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401406::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 enable = 1;
    if (has_enable()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->enable());
    }
    
    // optional int32 awrds_num = 2;
    if (has_awrds_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->awrds_num());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401406::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401406* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401406*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401406::MergeFrom(const Proto81401406& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_enable()) {
      set_enable(from.enable());
    }
    if (from.has_awrds_num()) {
      set_awrds_num(from.awrds_num());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401406::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401406::CopyFrom(const Proto81401406& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401406::IsInitialized() const {
  
  return true;
}

void Proto81401406::Swap(Proto81401406* other) {
  if (other != this) {
    std::swap(enable_, other->enable_);
    std::swap(awrds_num_, other->awrds_num_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401406::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401406_descriptor_;
  metadata.reflection = Proto81401406_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401407::kRecordsFieldNumber;
#endif  // !_MSC_VER

Proto81401407::Proto81401407()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401407::InitAsDefaultInstance() {
}

Proto81401407::Proto81401407(const Proto81401407& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401407::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401407::~Proto81401407() {
  SharedDtor();
}

void Proto81401407::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401407::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401407::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401407_descriptor_;
}

const Proto81401407& Proto81401407::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto81401407* Proto81401407::default_instance_ = NULL;

Proto81401407* Proto81401407::New() const {
  return new Proto81401407;
}

void Proto81401407::Clear() {
  records_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401407::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoDailyRecord records = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_records:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_records()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_records;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401407::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoDailyRecord records = 1;
  for (int i = 0; i < this->records_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->records(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401407::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoDailyRecord records = 1;
  for (int i = 0; i < this->records_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->records(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401407::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoDailyRecord records = 1;
  total_size += 1 * this->records_size();
  for (int i = 0; i < this->records_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->records(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401407::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401407* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401407*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401407::MergeFrom(const Proto81401407& from) {
  GOOGLE_CHECK_NE(&from, this);
  records_.MergeFrom(from.records_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401407::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401407::CopyFrom(const Proto81401407& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401407::IsInitialized() const {
  
  return true;
}

void Proto81401407::Swap(Proto81401407* other) {
  if (other != this) {
    records_.Swap(&other->records_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401407::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401407_descriptor_;
  metadata.reflection = Proto81401407_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11401461::kIdFieldNumber;
#endif  // !_MSC_VER

Proto11401461::Proto11401461()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11401461::InitAsDefaultInstance() {
}

Proto11401461::Proto11401461(const Proto11401461& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11401461::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11401461::~Proto11401461() {
  SharedDtor();
}

void Proto11401461::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11401461::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11401461::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11401461_descriptor_;
}

const Proto11401461& Proto11401461::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto11401461* Proto11401461::default_instance_ = NULL;

Proto11401461* Proto11401461::New() const {
  return new Proto11401461;
}

void Proto11401461::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11401461::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11401461::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11401461::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11401461::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11401461::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11401461* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11401461*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11401461::MergeFrom(const Proto11401461& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11401461::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11401461::CopyFrom(const Proto11401461& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11401461::IsInitialized() const {
  
  return true;
}

void Proto11401461::Swap(Proto11401461* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11401461::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11401461_descriptor_;
  metadata.reflection = Proto11401461_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400915::kAttackorIdFieldNumber;
const int Proto80400915::kDefenderIdFieldNumber;
#endif  // !_MSC_VER

Proto80400915::Proto80400915()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400915::InitAsDefaultInstance() {
}

Proto80400915::Proto80400915(const Proto80400915& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400915::SharedCtor() {
  _cached_size_ = 0;
  attackor_id_ = GOOGLE_LONGLONG(0);
  defender_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400915::~Proto80400915() {
  SharedDtor();
}

void Proto80400915::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400915::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400915::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400915_descriptor_;
}

const Proto80400915& Proto80400915::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto80400915* Proto80400915::default_instance_ = NULL;

Proto80400915* Proto80400915::New() const {
  return new Proto80400915;
}

void Proto80400915::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    attackor_id_ = GOOGLE_LONGLONG(0);
    defender_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400915::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 attackor_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &attackor_id_)));
          set_has_attackor_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_defender_id;
        break;
      }
      
      // optional int64 defender_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_defender_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &defender_id_)));
          set_has_defender_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400915::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 attackor_id = 1;
  if (has_attackor_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->attackor_id(), output);
  }
  
  // optional int64 defender_id = 2;
  if (has_defender_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->defender_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400915::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 attackor_id = 1;
  if (has_attackor_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->attackor_id(), target);
  }
  
  // optional int64 defender_id = 2;
  if (has_defender_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->defender_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400915::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 attackor_id = 1;
    if (has_attackor_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->attackor_id());
    }
    
    // optional int64 defender_id = 2;
    if (has_defender_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->defender_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400915::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400915* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400915*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400915::MergeFrom(const Proto80400915& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_attackor_id()) {
      set_attackor_id(from.attackor_id());
    }
    if (from.has_defender_id()) {
      set_defender_id(from.defender_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400915::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400915::CopyFrom(const Proto80400915& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400915::IsInitialized() const {
  
  return true;
}

void Proto80400915::Swap(Proto80400915* other) {
  if (other != this) {
    std::swap(attackor_id_, other->attackor_id_);
    std::swap(defender_id_, other->defender_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400915::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400915_descriptor_;
  metadata.reflection = Proto80400915_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400930::kSceneIdFieldNumber;
#endif  // !_MSC_VER

Proto10400930::Proto10400930()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400930::InitAsDefaultInstance() {
}

Proto10400930::Proto10400930(const Proto10400930& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400930::SharedCtor() {
  _cached_size_ = 0;
  scene_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400930::~Proto10400930() {
  SharedDtor();
}

void Proto10400930::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400930::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400930::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400930_descriptor_;
}

const Proto10400930& Proto10400930::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto10400930* Proto10400930::default_instance_ = NULL;

Proto10400930* Proto10400930::New() const {
  return new Proto10400930;
}

void Proto10400930::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    scene_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400930::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 scene_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400930::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400930::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 scene_id = 1;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400930::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 scene_id = 1;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400930::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400930* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400930*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400930::MergeFrom(const Proto10400930& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400930::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400930::CopyFrom(const Proto10400930& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400930::IsInitialized() const {
  
  return true;
}

void Proto10400930::Swap(Proto10400930* other) {
  if (other != this) {
    std::swap(scene_id_, other->scene_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400930::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400930_descriptor_;
  metadata.reflection = Proto10400930_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400932::kStageFieldNumber;
const int Proto50400932::kScriptSortFieldNumber;
#endif  // !_MSC_VER

Proto50400932::Proto50400932()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400932::InitAsDefaultInstance() {
}

Proto50400932::Proto50400932(const Proto50400932& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400932::SharedCtor() {
  _cached_size_ = 0;
  stage_ = 0;
  script_sort_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400932::~Proto50400932() {
  SharedDtor();
}

void Proto50400932::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400932::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400932::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400932_descriptor_;
}

const Proto50400932& Proto50400932::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto50400932* Proto50400932::default_instance_ = NULL;

Proto50400932* Proto50400932::New() const {
  return new Proto50400932;
}

void Proto50400932::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stage_ = 0;
    script_sort_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400932::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 stage = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_)));
          set_has_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_script_sort;
        break;
      }
      
      // optional int32 script_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400932::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 stage = 1;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stage(), output);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->script_sort(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400932::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 stage = 1;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stage(), target);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->script_sort(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400932::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 stage = 1;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stage());
    }
    
    // optional int32 script_sort = 2;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400932::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400932* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400932*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400932::MergeFrom(const Proto50400932& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stage()) {
      set_stage(from.stage());
    }
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400932::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400932::CopyFrom(const Proto50400932& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400932::IsInitialized() const {
  
  return true;
}

void Proto50400932::Swap(Proto50400932* other) {
  if (other != this) {
    std::swap(stage_, other->stage_);
    std::swap(script_sort_, other->script_sort_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400932::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400932_descriptor_;
  metadata.reflection = Proto50400932_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400931::kStageFieldNumber;
const int Proto50400931::kScriptSortFieldNumber;
#endif  // !_MSC_VER

Proto50400931::Proto50400931()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400931::InitAsDefaultInstance() {
}

Proto50400931::Proto50400931(const Proto50400931& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400931::SharedCtor() {
  _cached_size_ = 0;
  stage_ = 0;
  script_sort_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400931::~Proto50400931() {
  SharedDtor();
}

void Proto50400931::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400931::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400931::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400931_descriptor_;
}

const Proto50400931& Proto50400931::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto50400931* Proto50400931::default_instance_ = NULL;

Proto50400931* Proto50400931::New() const {
  return new Proto50400931;
}

void Proto50400931::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stage_ = 0;
    script_sort_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400931::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 stage = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_)));
          set_has_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_script_sort;
        break;
      }
      
      // optional int32 script_sort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_script_sort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400931::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 stage = 1;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stage(), output);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->script_sort(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400931::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 stage = 1;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stage(), target);
  }
  
  // optional int32 script_sort = 2;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->script_sort(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400931::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 stage = 1;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stage());
    }
    
    // optional int32 script_sort = 2;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400931::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400931* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400931*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400931::MergeFrom(const Proto50400931& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stage()) {
      set_stage(from.stage());
    }
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400931::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400931::CopyFrom(const Proto50400931& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400931::IsInitialized() const {
  
  return true;
}

void Proto50400931::Swap(Proto50400931* other) {
  if (other != this) {
    std::swap(stage_, other->stage_);
    std::swap(script_sort_, other->script_sort_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400931::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400931_descriptor_;
  metadata.reflection = Proto50400931_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400931::kScriptSortFieldNumber;
#endif  // !_MSC_VER

Proto10400931::Proto10400931()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400931::InitAsDefaultInstance() {
}

Proto10400931::Proto10400931(const Proto10400931& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400931::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400931::~Proto10400931() {
  SharedDtor();
}

void Proto10400931::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400931::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400931::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400931_descriptor_;
}

const Proto10400931& Proto10400931::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto10400931* Proto10400931::default_instance_ = NULL;

Proto10400931* Proto10400931::New() const {
  return new Proto10400931;
}

void Proto10400931::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400931::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400931::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400931::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400931::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400931::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400931* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400931*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400931::MergeFrom(const Proto10400931& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400931::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400931::CopyFrom(const Proto10400931& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400931::IsInitialized() const {
  
  return true;
}

void Proto10400931::Swap(Proto10400931* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400931::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400931_descriptor_;
  metadata.reflection = Proto10400931_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400932::kScriptSortFieldNumber;
const int Proto10400932::kStageFieldNumber;
#endif  // !_MSC_VER

Proto10400932::Proto10400932()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400932::InitAsDefaultInstance() {
}

Proto10400932::Proto10400932(const Proto10400932& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400932::SharedCtor() {
  _cached_size_ = 0;
  script_sort_ = 0;
  stage_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400932::~Proto10400932() {
  SharedDtor();
}

void Proto10400932::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400932::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400932::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400932_descriptor_;
}

const Proto10400932& Proto10400932::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto10400932* Proto10400932::default_instance_ = NULL;

Proto10400932* Proto10400932::New() const {
  return new Proto10400932;
}

void Proto10400932::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_sort_ = 0;
    stage_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400932::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_sort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_sort_)));
          set_has_script_sort();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_stage;
        break;
      }
      
      // optional int32 stage = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_)));
          set_has_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400932::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_sort(), output);
  }
  
  // optional int32 stage = 2;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->stage(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400932::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_sort = 1;
  if (has_script_sort()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_sort(), target);
  }
  
  // optional int32 stage = 2;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->stage(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400932::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_sort = 1;
    if (has_script_sort()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_sort());
    }
    
    // optional int32 stage = 2;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stage());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400932::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400932* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400932*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400932::MergeFrom(const Proto10400932& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_sort()) {
      set_script_sort(from.script_sort());
    }
    if (from.has_stage()) {
      set_stage(from.stage());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400932::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400932::CopyFrom(const Proto10400932& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400932::IsInitialized() const {
  
  return true;
}

void Proto10400932::Swap(Proto10400932* other) {
  if (other != this) {
    std::swap(script_sort_, other->script_sort_);
    std::swap(stage_, other->stage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400932::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400932_descriptor_;
  metadata.reflection = Proto10400932_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401901::kEquipRedFieldNumber;
const int Proto81401901::kTreasuresFieldNumber;
const int Proto81401901::kGiftFieldNumber;
const int Proto81401901::kMarketFieldNumber;
const int Proto81401901::kShopFieldNumber;
const int Proto81401901::kTransferFieldNumber;
const int Proto81401901::kMoldingSpiritFieldNumber;
const int Proto81401901::kJewelSublimeFieldNumber;
const int Proto81401901::kSpecialBoxFieldNumber;
#endif  // !_MSC_VER

Proto81401901::Proto81401901()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401901::InitAsDefaultInstance() {
}

Proto81401901::Proto81401901(const Proto81401901& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401901::SharedCtor() {
  _cached_size_ = 0;
  equip_red_ = 0;
  treasures_ = 0;
  gift_ = 0;
  market_ = 0;
  shop_ = 0;
  transfer_ = 0;
  molding_spirit_ = 0;
  jewel_sublime_ = 0;
  special_box_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401901::~Proto81401901() {
  SharedDtor();
}

void Proto81401901::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401901::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401901::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401901_descriptor_;
}

const Proto81401901& Proto81401901::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto81401901* Proto81401901::default_instance_ = NULL;

Proto81401901* Proto81401901::New() const {
  return new Proto81401901;
}

void Proto81401901::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    equip_red_ = 0;
    treasures_ = 0;
    gift_ = 0;
    market_ = 0;
    shop_ = 0;
    transfer_ = 0;
    molding_spirit_ = 0;
    jewel_sublime_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    special_box_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401901::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 equip_red = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &equip_red_)));
          set_has_equip_red();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_treasures;
        break;
      }
      
      // optional int32 treasures = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_treasures:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &treasures_)));
          set_has_treasures();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_gift;
        break;
      }
      
      // optional int32 gift = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gift:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gift_)));
          set_has_gift();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_market;
        break;
      }
      
      // optional int32 market = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_market:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &market_)));
          set_has_market();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_shop;
        break;
      }
      
      // optional int32 shop = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shop:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_)));
          set_has_shop();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_transfer;
        break;
      }
      
      // optional int32 transfer = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_transfer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transfer_)));
          set_has_transfer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_molding_spirit;
        break;
      }
      
      // optional int32 molding_spirit = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_molding_spirit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &molding_spirit_)));
          set_has_molding_spirit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_jewel_sublime;
        break;
      }
      
      // optional int32 jewel_sublime = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jewel_sublime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jewel_sublime_)));
          set_has_jewel_sublime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_special_box;
        break;
      }
      
      // optional int32 special_box = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_special_box:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &special_box_)));
          set_has_special_box();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401901::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 equip_red = 1;
  if (has_equip_red()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->equip_red(), output);
  }
  
  // optional int32 treasures = 2;
  if (has_treasures()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->treasures(), output);
  }
  
  // optional int32 gift = 3;
  if (has_gift()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gift(), output);
  }
  
  // optional int32 market = 4;
  if (has_market()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->market(), output);
  }
  
  // optional int32 shop = 5;
  if (has_shop()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->shop(), output);
  }
  
  // optional int32 transfer = 6;
  if (has_transfer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->transfer(), output);
  }
  
  // optional int32 molding_spirit = 7;
  if (has_molding_spirit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->molding_spirit(), output);
  }
  
  // optional int32 jewel_sublime = 8;
  if (has_jewel_sublime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->jewel_sublime(), output);
  }
  
  // optional int32 special_box = 9;
  if (has_special_box()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->special_box(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401901::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 equip_red = 1;
  if (has_equip_red()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->equip_red(), target);
  }
  
  // optional int32 treasures = 2;
  if (has_treasures()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->treasures(), target);
  }
  
  // optional int32 gift = 3;
  if (has_gift()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gift(), target);
  }
  
  // optional int32 market = 4;
  if (has_market()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->market(), target);
  }
  
  // optional int32 shop = 5;
  if (has_shop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->shop(), target);
  }
  
  // optional int32 transfer = 6;
  if (has_transfer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->transfer(), target);
  }
  
  // optional int32 molding_spirit = 7;
  if (has_molding_spirit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->molding_spirit(), target);
  }
  
  // optional int32 jewel_sublime = 8;
  if (has_jewel_sublime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->jewel_sublime(), target);
  }
  
  // optional int32 special_box = 9;
  if (has_special_box()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->special_box(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401901::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 equip_red = 1;
    if (has_equip_red()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->equip_red());
    }
    
    // optional int32 treasures = 2;
    if (has_treasures()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->treasures());
    }
    
    // optional int32 gift = 3;
    if (has_gift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gift());
    }
    
    // optional int32 market = 4;
    if (has_market()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->market());
    }
    
    // optional int32 shop = 5;
    if (has_shop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop());
    }
    
    // optional int32 transfer = 6;
    if (has_transfer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transfer());
    }
    
    // optional int32 molding_spirit = 7;
    if (has_molding_spirit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->molding_spirit());
    }
    
    // optional int32 jewel_sublime = 8;
    if (has_jewel_sublime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jewel_sublime());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 special_box = 9;
    if (has_special_box()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->special_box());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401901::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401901* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401901*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401901::MergeFrom(const Proto81401901& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_equip_red()) {
      set_equip_red(from.equip_red());
    }
    if (from.has_treasures()) {
      set_treasures(from.treasures());
    }
    if (from.has_gift()) {
      set_gift(from.gift());
    }
    if (from.has_market()) {
      set_market(from.market());
    }
    if (from.has_shop()) {
      set_shop(from.shop());
    }
    if (from.has_transfer()) {
      set_transfer(from.transfer());
    }
    if (from.has_molding_spirit()) {
      set_molding_spirit(from.molding_spirit());
    }
    if (from.has_jewel_sublime()) {
      set_jewel_sublime(from.jewel_sublime());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_special_box()) {
      set_special_box(from.special_box());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401901::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401901::CopyFrom(const Proto81401901& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401901::IsInitialized() const {
  
  return true;
}

void Proto81401901::Swap(Proto81401901* other) {
  if (other != this) {
    std::swap(equip_red_, other->equip_red_);
    std::swap(treasures_, other->treasures_);
    std::swap(gift_, other->gift_);
    std::swap(market_, other->market_);
    std::swap(shop_, other->shop_);
    std::swap(transfer_, other->transfer_);
    std::swap(molding_spirit_, other->molding_spirit_);
    std::swap(jewel_sublime_, other->jewel_sublime_);
    std::swap(special_box_, other->special_box_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401901::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401901_descriptor_;
  metadata.reflection = Proto81401901_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400933::kPieceFieldNumber;
#endif  // !_MSC_VER

Proto10400933::Proto10400933()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400933::InitAsDefaultInstance() {
}

Proto10400933::Proto10400933(const Proto10400933& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400933::SharedCtor() {
  _cached_size_ = 0;
  piece_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400933::~Proto10400933() {
  SharedDtor();
}

void Proto10400933::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400933::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400933::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400933_descriptor_;
}

const Proto10400933& Proto10400933::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto10400933* Proto10400933::default_instance_ = NULL;

Proto10400933* Proto10400933::New() const {
  return new Proto10400933;
}

void Proto10400933::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    piece_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400933::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 piece = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &piece_)));
          set_has_piece();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400933::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 piece = 1;
  if (has_piece()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->piece(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400933::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 piece = 1;
  if (has_piece()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->piece(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400933::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 piece = 1;
    if (has_piece()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->piece());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400933::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400933* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400933*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400933::MergeFrom(const Proto10400933& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_piece()) {
      set_piece(from.piece());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400933::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400933::CopyFrom(const Proto10400933& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400933::IsInitialized() const {
  
  return true;
}

void Proto10400933::Swap(Proto10400933* other) {
  if (other != this) {
    std::swap(piece_, other->piece_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400933::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400933_descriptor_;
  metadata.reflection = Proto10400933_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400933::kPieceFieldNumber;
const int Proto50400933::kTotalStarFieldNumber;
const int Proto50400933::kDrawedStarFieldNumber;
#endif  // !_MSC_VER

Proto50400933::Proto50400933()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400933::InitAsDefaultInstance() {
}

Proto50400933::Proto50400933(const Proto50400933& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400933::SharedCtor() {
  _cached_size_ = 0;
  piece_ = 0;
  total_star_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400933::~Proto50400933() {
  SharedDtor();
}

void Proto50400933::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400933::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400933::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400933_descriptor_;
}

const Proto50400933& Proto50400933::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto50400933* Proto50400933::default_instance_ = NULL;

Proto50400933* Proto50400933::New() const {
  return new Proto50400933;
}

void Proto50400933::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    piece_ = 0;
    total_star_ = 0;
  }
  drawed_star_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400933::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 piece = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &piece_)));
          set_has_piece();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_star;
        break;
      }
      
      // optional int32 total_star = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_star_)));
          set_has_total_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_drawed_star;
        break;
      }
      
      // repeated int32 drawed_star = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_drawed_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_drawed_star())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_drawed_star())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_drawed_star;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400933::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 piece = 1;
  if (has_piece()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->piece(), output);
  }
  
  // optional int32 total_star = 2;
  if (has_total_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_star(), output);
  }
  
  // repeated int32 drawed_star = 3;
  for (int i = 0; i < this->drawed_star_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->drawed_star(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400933::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 piece = 1;
  if (has_piece()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->piece(), target);
  }
  
  // optional int32 total_star = 2;
  if (has_total_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_star(), target);
  }
  
  // repeated int32 drawed_star = 3;
  for (int i = 0; i < this->drawed_star_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->drawed_star(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400933::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 piece = 1;
    if (has_piece()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->piece());
    }
    
    // optional int32 total_star = 2;
    if (has_total_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_star());
    }
    
  }
  // repeated int32 drawed_star = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->drawed_star_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->drawed_star(i));
    }
    total_size += 1 * this->drawed_star_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400933::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400933* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400933*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400933::MergeFrom(const Proto50400933& from) {
  GOOGLE_CHECK_NE(&from, this);
  drawed_star_.MergeFrom(from.drawed_star_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_piece()) {
      set_piece(from.piece());
    }
    if (from.has_total_star()) {
      set_total_star(from.total_star());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400933::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400933::CopyFrom(const Proto50400933& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400933::IsInitialized() const {
  
  return true;
}

void Proto50400933::Swap(Proto50400933* other) {
  if (other != this) {
    std::swap(piece_, other->piece_);
    std::swap(total_star_, other->total_star_);
    drawed_star_.Swap(&other->drawed_star_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400933::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400933_descriptor_;
  metadata.reflection = Proto50400933_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400934::kPieceFieldNumber;
const int Proto10400934::kAwardStarFieldNumber;
#endif  // !_MSC_VER

Proto10400934::Proto10400934()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400934::InitAsDefaultInstance() {
}

Proto10400934::Proto10400934(const Proto10400934& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400934::SharedCtor() {
  _cached_size_ = 0;
  piece_ = 0;
  award_star_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400934::~Proto10400934() {
  SharedDtor();
}

void Proto10400934::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400934::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400934::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400934_descriptor_;
}

const Proto10400934& Proto10400934::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto10400934* Proto10400934::default_instance_ = NULL;

Proto10400934* Proto10400934::New() const {
  return new Proto10400934;
}

void Proto10400934::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    piece_ = 0;
    award_star_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400934::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 piece = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &piece_)));
          set_has_piece();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_award_star;
        break;
      }
      
      // optional int32 award_star = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_award_star:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &award_star_)));
          set_has_award_star();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400934::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 piece = 1;
  if (has_piece()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->piece(), output);
  }
  
  // optional int32 award_star = 2;
  if (has_award_star()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->award_star(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400934::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 piece = 1;
  if (has_piece()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->piece(), target);
  }
  
  // optional int32 award_star = 2;
  if (has_award_star()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->award_star(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400934::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 piece = 1;
    if (has_piece()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->piece());
    }
    
    // optional int32 award_star = 2;
    if (has_award_star()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->award_star());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400934::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400934* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400934*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400934::MergeFrom(const Proto10400934& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_piece()) {
      set_piece(from.piece());
    }
    if (from.has_award_star()) {
      set_award_star(from.award_star());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400934::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400934::CopyFrom(const Proto10400934& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400934::IsInitialized() const {
  
  return true;
}

void Proto10400934::Swap(Proto10400934* other) {
  if (other != this) {
    std::swap(piece_, other->piece_);
    std::swap(award_star_, other->award_star_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400934::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400934_descriptor_;
  metadata.reflection = Proto10400934_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81401408::kRemainTickFieldNumber;
const int Proto81401408::kRewardAmountFieldNumber;
#endif  // !_MSC_VER

Proto81401408::Proto81401408()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81401408::InitAsDefaultInstance() {
}

Proto81401408::Proto81401408(const Proto81401408& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81401408::SharedCtor() {
  _cached_size_ = 0;
  remain_tick_ = 0;
  reward_amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81401408::~Proto81401408() {
  SharedDtor();
}

void Proto81401408::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81401408::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81401408::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81401408_descriptor_;
}

const Proto81401408& Proto81401408::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto81401408* Proto81401408::default_instance_ = NULL;

Proto81401408* Proto81401408::New() const {
  return new Proto81401408;
}

void Proto81401408::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    remain_tick_ = 0;
    reward_amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81401408::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 remain_tick = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &remain_tick_)));
          set_has_remain_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_reward_amount;
        break;
      }
      
      // optional int32 reward_amount = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_amount_)));
          set_has_reward_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81401408::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 remain_tick = 1;
  if (has_remain_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->remain_tick(), output);
  }
  
  // optional int32 reward_amount = 2;
  if (has_reward_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reward_amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81401408::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 remain_tick = 1;
  if (has_remain_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->remain_tick(), target);
  }
  
  // optional int32 reward_amount = 2;
  if (has_reward_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reward_amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81401408::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 remain_tick = 1;
    if (has_remain_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->remain_tick());
    }
    
    // optional int32 reward_amount = 2;
    if (has_reward_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81401408::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81401408* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81401408*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81401408::MergeFrom(const Proto81401408& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_remain_tick()) {
      set_remain_tick(from.remain_tick());
    }
    if (from.has_reward_amount()) {
      set_reward_amount(from.reward_amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81401408::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81401408::CopyFrom(const Proto81401408& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81401408::IsInitialized() const {
  
  return true;
}

void Proto81401408::Swap(Proto81401408* other) {
  if (other != this) {
    std::swap(remain_tick_, other->remain_tick_);
    std::swap(reward_amount_, other->reward_amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81401408::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81401408_descriptor_;
  metadata.reflection = Proto81401408_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400916::kCompactTypeFieldNumber;
const int Proto80400916::kLeftTickFieldNumber;
const int Proto80400916::kDateTickFieldNumber;
#endif  // !_MSC_VER

Proto80400916::Proto80400916()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400916::InitAsDefaultInstance() {
}

Proto80400916::Proto80400916(const Proto80400916& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400916::SharedCtor() {
  _cached_size_ = 0;
  compact_type_ = 0;
  left_tick_ = 0;
  date_tick_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400916::~Proto80400916() {
  SharedDtor();
}

void Proto80400916::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400916::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400916::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400916_descriptor_;
}

const Proto80400916& Proto80400916::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto80400916* Proto80400916::default_instance_ = NULL;

Proto80400916* Proto80400916::New() const {
  return new Proto80400916;
}

void Proto80400916::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    compact_type_ = 0;
    left_tick_ = 0;
    date_tick_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400916::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 compact_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &compact_type_)));
          set_has_compact_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_left_tick;
        break;
      }
      
      // optional int32 left_tick = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_tick_)));
          set_has_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_date_tick;
        break;
      }
      
      // optional int32 date_tick = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_date_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &date_tick_)));
          set_has_date_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400916::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 compact_type = 1;
  if (has_compact_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->compact_type(), output);
  }
  
  // optional int32 left_tick = 2;
  if (has_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_tick(), output);
  }
  
  // optional int32 date_tick = 3;
  if (has_date_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->date_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400916::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 compact_type = 1;
  if (has_compact_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->compact_type(), target);
  }
  
  // optional int32 left_tick = 2;
  if (has_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_tick(), target);
  }
  
  // optional int32 date_tick = 3;
  if (has_date_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->date_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400916::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 compact_type = 1;
    if (has_compact_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->compact_type());
    }
    
    // optional int32 left_tick = 2;
    if (has_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_tick());
    }
    
    // optional int32 date_tick = 3;
    if (has_date_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->date_tick());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400916::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400916* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400916*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400916::MergeFrom(const Proto80400916& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_compact_type()) {
      set_compact_type(from.compact_type());
    }
    if (from.has_left_tick()) {
      set_left_tick(from.left_tick());
    }
    if (from.has_date_tick()) {
      set_date_tick(from.date_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400916::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400916::CopyFrom(const Proto80400916& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400916::IsInitialized() const {
  
  return true;
}

void Proto80400916::Swap(Proto80400916* other) {
  if (other != this) {
    std::swap(compact_type_, other->compact_type_);
    std::swap(left_tick_, other->left_tick_);
    std::swap(date_tick_, other->date_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400916::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400916_descriptor_;
  metadata.reflection = Proto80400916_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100645::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto10100645::Proto10100645()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100645::InitAsDefaultInstance() {
}

Proto10100645::Proto10100645(const Proto10100645& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100645::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100645::~Proto10100645() {
  SharedDtor();
}

void Proto10100645::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100645::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100645::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100645_descriptor_;
}

const Proto10100645& Proto10100645::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto10100645* Proto10100645::default_instance_ = NULL;

Proto10100645* Proto10100645::New() const {
  return new Proto10100645;
}

void Proto10100645::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100645::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100645::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100645::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100645::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100645::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100645* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100645*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100645::MergeFrom(const Proto10100645& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100645::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100645::CopyFrom(const Proto10100645& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100645::IsInitialized() const {
  
  return true;
}

void Proto10100645::Swap(Proto10100645* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100645::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100645_descriptor_;
  metadata.reflection = Proto10100645_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100646::kLeftTimesFieldNumber;
#endif  // !_MSC_VER

Proto50100646::Proto50100646()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100646::InitAsDefaultInstance() {
}

Proto50100646::Proto50100646(const Proto50100646& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100646::SharedCtor() {
  _cached_size_ = 0;
  left_times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100646::~Proto50100646() {
  SharedDtor();
}

void Proto50100646::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100646::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100646::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100646_descriptor_;
}

const Proto50100646& Proto50100646::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto50100646* Proto50100646::default_instance_ = NULL;

Proto50100646* Proto50100646::New() const {
  return new Proto50100646;
}

void Proto50100646::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_times_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100646::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_times = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_times_)));
          set_has_left_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100646::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_times = 1;
  if (has_left_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_times(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100646::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_times = 1;
  if (has_left_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_times(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100646::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_times = 1;
    if (has_left_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_times());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100646::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100646* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100646*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100646::MergeFrom(const Proto50100646& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_times()) {
      set_left_times(from.left_times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100646::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100646::CopyFrom(const Proto50100646& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100646::IsInitialized() const {
  
  return true;
}

void Proto50100646::Swap(Proto50100646* other) {
  if (other != this) {
    std::swap(left_times_, other->left_times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100646::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100646_descriptor_;
  metadata.reflection = Proto50100646_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400322::kPageIndexFieldNumber;
#endif  // !_MSC_VER

Proto10400322::Proto10400322()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400322::InitAsDefaultInstance() {
}

Proto10400322::Proto10400322(const Proto10400322& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400322::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400322::~Proto10400322() {
  SharedDtor();
}

void Proto10400322::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400322::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400322::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400322_descriptor_;
}

const Proto10400322& Proto10400322::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto10400322* Proto10400322::default_instance_ = NULL;

Proto10400322* Proto10400322::New() const {
  return new Proto10400322;
}

void Proto10400322::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400322::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400322::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400322::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400322::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400322::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400322* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400322*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400322::MergeFrom(const Proto10400322& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400322::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400322::CopyFrom(const Proto10400322& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400322::IsInitialized() const {
  
  return true;
}

void Proto10400322::Swap(Proto10400322* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400322::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400322_descriptor_;
  metadata.reflection = Proto10400322_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400322::kPageIndexFieldNumber;
const int Proto50400322::kTotalPageFieldNumber;
const int Proto50400322::kRankSetFieldNumber;
const int Proto50400322::kLeftTimeFieldNumber;
const int Proto50400322::kFinishPercentFieldNumber;
const int Proto50400322::kSelfItemFieldNumber;
#endif  // !_MSC_VER

Proto50400322::Proto50400322()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400322::InitAsDefaultInstance() {
  self_item_ = const_cast< ::ProtoLWarItem*>(&::ProtoLWarItem::default_instance());
}

Proto50400322::Proto50400322(const Proto50400322& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400322::SharedCtor() {
  _cached_size_ = 0;
  page_index_ = 0;
  total_page_ = 0;
  left_time_ = 0;
  finish_percent_ = 0;
  self_item_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400322::~Proto50400322() {
  SharedDtor();
}

void Proto50400322::SharedDtor() {
  if (this != default_instance_) {
    delete self_item_;
  }
}

void Proto50400322::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400322::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400322_descriptor_;
}

const Proto50400322& Proto50400322::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto50400322* Proto50400322::default_instance_ = NULL;

Proto50400322* Proto50400322::New() const {
  return new Proto50400322;
}

void Proto50400322::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    page_index_ = 0;
    total_page_ = 0;
    left_time_ = 0;
    finish_percent_ = 0;
    if (has_self_item()) {
      if (self_item_ != NULL) self_item_->::ProtoLWarItem::Clear();
    }
  }
  rank_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400322::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_index_)));
          set_has_page_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rank_set;
        break;
      }
      
      // repeated .ProtoLWarItem rank_set = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rank_set;
        if (input->ExpectTag(32)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_finish_percent;
        break;
      }
      
      // optional int32 finish_percent = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_finish_percent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &finish_percent_)));
          set_has_finish_percent();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_self_item;
        break;
      }
      
      // optional .ProtoLWarItem self_item = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_self_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_self_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400322::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_index(), output);
  }
  
  // optional int32 total_page = 2;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_page(), output);
  }
  
  // repeated .ProtoLWarItem rank_set = 3;
  for (int i = 0; i < this->rank_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rank_set(i), output);
  }
  
  // optional int32 left_time = 4;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->left_time(), output);
  }
  
  // optional int32 finish_percent = 5;
  if (has_finish_percent()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->finish_percent(), output);
  }
  
  // optional .ProtoLWarItem self_item = 6;
  if (has_self_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->self_item(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400322::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 page_index = 1;
  if (has_page_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_index(), target);
  }
  
  // optional int32 total_page = 2;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_page(), target);
  }
  
  // repeated .ProtoLWarItem rank_set = 3;
  for (int i = 0; i < this->rank_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rank_set(i), target);
  }
  
  // optional int32 left_time = 4;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->left_time(), target);
  }
  
  // optional int32 finish_percent = 5;
  if (has_finish_percent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->finish_percent(), target);
  }
  
  // optional .ProtoLWarItem self_item = 6;
  if (has_self_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->self_item(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400322::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 page_index = 1;
    if (has_page_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_index());
    }
    
    // optional int32 total_page = 2;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
    // optional int32 left_time = 4;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 finish_percent = 5;
    if (has_finish_percent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->finish_percent());
    }
    
    // optional .ProtoLWarItem self_item = 6;
    if (has_self_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->self_item());
    }
    
  }
  // repeated .ProtoLWarItem rank_set = 3;
  total_size += 1 * this->rank_set_size();
  for (int i = 0; i < this->rank_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400322::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400322* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400322*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400322::MergeFrom(const Proto50400322& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_set_.MergeFrom(from.rank_set_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_page_index()) {
      set_page_index(from.page_index());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_finish_percent()) {
      set_finish_percent(from.finish_percent());
    }
    if (from.has_self_item()) {
      mutable_self_item()->::ProtoLWarItem::MergeFrom(from.self_item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400322::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400322::CopyFrom(const Proto50400322& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400322::IsInitialized() const {
  
  return true;
}

void Proto50400322::Swap(Proto50400322* other) {
  if (other != this) {
    std::swap(page_index_, other->page_index_);
    std::swap(total_page_, other->total_page_);
    rank_set_.Swap(&other->rank_set_);
    std::swap(left_time_, other->left_time_);
    std::swap(finish_percent_, other->finish_percent_);
    std::swap(self_item_, other->self_item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400322::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400322_descriptor_;
  metadata.reflection = Proto50400322_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400323::kItemSetFieldNumber;
#endif  // !_MSC_VER

Proto50400323::Proto50400323()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400323::InitAsDefaultInstance() {
  item_set_ = const_cast< ::ProtoEscortMapItem*>(&::ProtoEscortMapItem::default_instance());
}

Proto50400323::Proto50400323(const Proto50400323& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400323::SharedCtor() {
  _cached_size_ = 0;
  item_set_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400323::~Proto50400323() {
  SharedDtor();
}

void Proto50400323::SharedDtor() {
  if (this != default_instance_) {
    delete item_set_;
  }
}

void Proto50400323::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400323::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400323_descriptor_;
}

const Proto50400323& Proto50400323::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto50400323* Proto50400323::default_instance_ = NULL;

Proto50400323* Proto50400323::New() const {
  return new Proto50400323;
}

void Proto50400323::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_item_set()) {
      if (item_set_ != NULL) item_set_->::ProtoEscortMapItem::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400323::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ProtoEscortMapItem item_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400323::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .ProtoEscortMapItem item_set = 1;
  if (has_item_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_set(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400323::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .ProtoEscortMapItem item_set = 1;
  if (has_item_set()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item_set(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400323::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .ProtoEscortMapItem item_set = 1;
    if (has_item_set()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_set());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400323::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400323* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400323*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400323::MergeFrom(const Proto50400323& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item_set()) {
      mutable_item_set()->::ProtoEscortMapItem::MergeFrom(from.item_set());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400323::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400323::CopyFrom(const Proto50400323& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400323::IsInitialized() const {
  
  return true;
}

void Proto50400323::Swap(Proto50400323* other) {
  if (other != this) {
    std::swap(item_set_, other->item_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400323::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400323_descriptor_;
  metadata.reflection = Proto50400323_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400223::kFighterIdFieldNumber;
const int Proto80400223::kSkillIdFieldNumber;
const int Proto80400223::kSkillLevelFieldNumber;
const int Proto80400223::kSkillPixelXFieldNumber;
const int Proto80400223::kSkillPixelYFieldNumber;
const int Proto80400223::kTargetListFieldNumber;
const int Proto80400223::kTargetIdListFieldNumber;
const int Proto80400223::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto80400223::Proto80400223()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400223::InitAsDefaultInstance() {
}

Proto80400223::Proto80400223(const Proto80400223& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400223::SharedCtor() {
  _cached_size_ = 0;
  fighter_id_ = GOOGLE_LONGLONG(0);
  skill_id_ = 0;
  skill_level_ = 0;
  skill_pixel_x_ = 0;
  skill_pixel_y_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400223::~Proto80400223() {
  SharedDtor();
}

void Proto80400223::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400223::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400223::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400223_descriptor_;
}

const Proto80400223& Proto80400223::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto80400223* Proto80400223::default_instance_ = NULL;

Proto80400223* Proto80400223::New() const {
  return new Proto80400223;
}

void Proto80400223::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    fighter_id_ = GOOGLE_LONGLONG(0);
    skill_id_ = 0;
    skill_level_ = 0;
    skill_pixel_x_ = 0;
    skill_pixel_y_ = 0;
    type_ = 0;
  }
  target_list_.Clear();
  target_id_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400223::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 fighter_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fighter_id_)));
          set_has_fighter_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_skill_id;
        break;
      }
      
      // optional int32 skill_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_id_)));
          set_has_skill_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_skill_level;
        break;
      }
      
      // optional int32 skill_level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_level_)));
          set_has_skill_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_skill_pixel_x;
        break;
      }
      
      // optional int32 skill_pixel_x = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_pixel_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_pixel_x_)));
          set_has_skill_pixel_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_skill_pixel_y;
        break;
      }
      
      // optional int32 skill_pixel_y = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_skill_pixel_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skill_pixel_y_)));
          set_has_skill_pixel_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_target_list;
        break;
      }
      
      // repeated .ProtoSkillTarget target_list = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_target_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_target_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_target_list;
        if (input->ExpectTag(56)) goto parse_target_id_list;
        break;
      }
      
      // repeated int64 target_id_list = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_target_id_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 56, input, this->mutable_target_id_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_target_id_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_target_id_list;
        if (input->ExpectTag(64)) goto parse_type;
        break;
      }
      
      // optional int32 type = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400223::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->fighter_id(), output);
  }
  
  // optional int32 skill_id = 2;
  if (has_skill_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skill_id(), output);
  }
  
  // optional int32 skill_level = 3;
  if (has_skill_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->skill_level(), output);
  }
  
  // optional int32 skill_pixel_x = 4;
  if (has_skill_pixel_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->skill_pixel_x(), output);
  }
  
  // optional int32 skill_pixel_y = 5;
  if (has_skill_pixel_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->skill_pixel_y(), output);
  }
  
  // repeated .ProtoSkillTarget target_list = 6;
  for (int i = 0; i < this->target_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->target_list(i), output);
  }
  
  // repeated int64 target_id_list = 7;
  for (int i = 0; i < this->target_id_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      7, this->target_id_list(i), output);
  }
  
  // optional int32 type = 8;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400223::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 fighter_id = 1;
  if (has_fighter_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->fighter_id(), target);
  }
  
  // optional int32 skill_id = 2;
  if (has_skill_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skill_id(), target);
  }
  
  // optional int32 skill_level = 3;
  if (has_skill_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->skill_level(), target);
  }
  
  // optional int32 skill_pixel_x = 4;
  if (has_skill_pixel_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->skill_pixel_x(), target);
  }
  
  // optional int32 skill_pixel_y = 5;
  if (has_skill_pixel_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->skill_pixel_y(), target);
  }
  
  // repeated .ProtoSkillTarget target_list = 6;
  for (int i = 0; i < this->target_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->target_list(i), target);
  }
  
  // repeated int64 target_id_list = 7;
  for (int i = 0; i < this->target_id_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(7, this->target_id_list(i), target);
  }
  
  // optional int32 type = 8;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400223::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 fighter_id = 1;
    if (has_fighter_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fighter_id());
    }
    
    // optional int32 skill_id = 2;
    if (has_skill_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_id());
    }
    
    // optional int32 skill_level = 3;
    if (has_skill_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_level());
    }
    
    // optional int32 skill_pixel_x = 4;
    if (has_skill_pixel_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_pixel_x());
    }
    
    // optional int32 skill_pixel_y = 5;
    if (has_skill_pixel_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->skill_pixel_y());
    }
    
    // optional int32 type = 8;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  // repeated .ProtoSkillTarget target_list = 6;
  total_size += 1 * this->target_list_size();
  for (int i = 0; i < this->target_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->target_list(i));
  }
  
  // repeated int64 target_id_list = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->target_id_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->target_id_list(i));
    }
    total_size += 1 * this->target_id_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400223::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400223* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400223*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400223::MergeFrom(const Proto80400223& from) {
  GOOGLE_CHECK_NE(&from, this);
  target_list_.MergeFrom(from.target_list_);
  target_id_list_.MergeFrom(from.target_id_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_fighter_id()) {
      set_fighter_id(from.fighter_id());
    }
    if (from.has_skill_id()) {
      set_skill_id(from.skill_id());
    }
    if (from.has_skill_level()) {
      set_skill_level(from.skill_level());
    }
    if (from.has_skill_pixel_x()) {
      set_skill_pixel_x(from.skill_pixel_x());
    }
    if (from.has_skill_pixel_y()) {
      set_skill_pixel_y(from.skill_pixel_y());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400223::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400223::CopyFrom(const Proto80400223& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400223::IsInitialized() const {
  
  return true;
}

void Proto80400223::Swap(Proto80400223* other) {
  if (other != this) {
    std::swap(fighter_id_, other->fighter_id_);
    std::swap(skill_id_, other->skill_id_);
    std::swap(skill_level_, other->skill_level_);
    std::swap(skill_pixel_x_, other->skill_pixel_x_);
    std::swap(skill_pixel_y_, other->skill_pixel_y_);
    target_list_.Swap(&other->target_list_);
    target_id_list_.Swap(&other->target_id_list_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400223::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400223_descriptor_;
  metadata.reflection = Proto80400223_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80400365::kRankSetFieldNumber;
#endif  // !_MSC_VER

Proto80400365::Proto80400365()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80400365::InitAsDefaultInstance() {
}

Proto80400365::Proto80400365(const Proto80400365& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80400365::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80400365::~Proto80400365() {
  SharedDtor();
}

void Proto80400365::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80400365::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80400365::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80400365_descriptor_;
}

const Proto80400365& Proto80400365::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient010_2eproto();  return *default_instance_;
}

Proto80400365* Proto80400365::default_instance_ = NULL;

Proto80400365* Proto80400365::New() const {
  return new Proto80400365;
}

void Proto80400365::Clear() {
  rank_set_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80400365::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoLWarItem rank_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_set()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rank_set;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80400365::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoLWarItem rank_set = 1;
  for (int i = 0; i < this->rank_set_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rank_set(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80400365::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoLWarItem rank_set = 1;
  for (int i = 0; i < this->rank_set_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rank_set(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80400365::ByteSize() const {
  int total_size = 0;
  
  // repeated .ProtoLWarItem rank_set = 1;
  total_size += 1 * this->rank_set_size();
  for (int i = 0; i < this->rank_set_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_set(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80400365::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80400365* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80400365*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80400365::MergeFrom(const Proto80400365& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_set_.MergeFrom(from.rank_set_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80400365::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80400365::CopyFrom(const Proto80400365& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80400365::IsInitialized() const {
  
  return true;
}

void Proto80400365::Swap(Proto80400365* other) {
  if (other != this) {
    rank_set_.Swap(&other->rank_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80400365::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80400365_descriptor_;
  metadata.reflection = Proto80400365_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
