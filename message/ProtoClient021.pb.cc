// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ProtoClient021.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Proto10404003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10404003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102060_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102060_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10102061_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10102061_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102060_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102060_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50102061_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50102061_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51403001_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51403001_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11403002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11403002_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51403002_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51403002_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51403003_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51403003_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10400921_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10400921_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50400921_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50400921_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100217_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100217_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100217_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100217_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100218_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100218_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100218_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100218_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100219_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100219_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80100201_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80100201_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51403004_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51403004_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100636_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100636_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11403005_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11403005_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51403005_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51403005_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51403006_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51403006_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100220_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100220_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100220_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100220_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100221_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100221_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10404005_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10404005_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto80404006_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto80404006_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto81400801_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto81400801_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50404006_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50404006_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51403007_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51403007_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto11403008_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto11403008_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto51403008_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto51403008_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100222_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100222_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100222_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100222_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100251_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100251_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100252_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100252_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100252_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100252_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100253_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100253_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100253_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100253_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100254_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100254_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100254_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100254_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100255_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100255_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100255_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100255_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100256_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100256_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100256_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100256_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100257_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100257_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100258_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100258_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100257_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100257_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto50100258_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto50100258_reflection_ = NULL;
const ::google::protobuf::Descriptor* Proto10100259_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Proto10100259_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ProtoClient021_2eproto() {
  protobuf_AddDesc_ProtoClient021_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ProtoClient021.proto");
  GOOGLE_CHECK(file != NULL);
  Proto10404003_descriptor_ = file->message_type(0);
  static const int Proto10404003_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10404003, support_league_id_),
  };
  Proto10404003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10404003_descriptor_,
      Proto10404003::default_instance_,
      Proto10404003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10404003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10404003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10404003));
  Proto10102060_descriptor_ = file->message_type(1);
  static const int Proto10102060_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102060, activity_id_),
  };
  Proto10102060_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102060_descriptor_,
      Proto10102060::default_instance_,
      Proto10102060_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102060, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102060, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102060));
  Proto10102061_descriptor_ = file->message_type(2);
  static const int Proto10102061_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102061, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102061, count_),
  };
  Proto10102061_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10102061_descriptor_,
      Proto10102061::default_instance_,
      Proto10102061_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102061, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10102061, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10102061));
  Proto50102060_descriptor_ = file->message_type(3);
  static const int Proto50102060_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102060, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102060, server_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102060, person_record_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102060, left_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102060, draw_free_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102060, today_buy_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102060, today_recharge_gold_),
  };
  Proto50102060_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102060_descriptor_,
      Proto50102060::default_instance_,
      Proto50102060_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102060, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102060, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102060));
  Proto50102061_descriptor_ = file->message_type(4);
  static const int Proto50102061_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102061, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102061, item_),
  };
  Proto50102061_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50102061_descriptor_,
      Proto50102061::default_instance_,
      Proto50102061_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102061, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50102061, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50102061));
  Proto51403001_descriptor_ = file->message_type(5);
  static const int Proto51403001_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403001, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403001, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403001, stage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403001, gold_times_),
  };
  Proto51403001_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51403001_descriptor_,
      Proto51403001::default_instance_,
      Proto51403001_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403001, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403001, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51403001));
  Proto11403002_descriptor_ = file->message_type(6);
  static const int Proto11403002_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11403002, type_),
  };
  Proto11403002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11403002_descriptor_,
      Proto11403002::default_instance_,
      Proto11403002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11403002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11403002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11403002));
  Proto51403002_descriptor_ = file->message_type(7);
  static const int Proto51403002_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403002, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403002, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403002, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403002, gold_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403002, mult_),
  };
  Proto51403002_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51403002_descriptor_,
      Proto51403002::default_instance_,
      Proto51403002_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403002, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403002, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51403002));
  Proto51403003_descriptor_ = file->message_type(8);
  static const int Proto51403003_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403003, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403003, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403003, stage_),
  };
  Proto51403003_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51403003_descriptor_,
      Proto51403003::default_instance_,
      Proto51403003_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403003, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403003, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51403003));
  Proto10400921_descriptor_ = file->message_type(9);
  static const int Proto10400921_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400921, script_type_),
  };
  Proto10400921_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10400921_descriptor_,
      Proto10400921::default_instance_,
      Proto10400921_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400921, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10400921, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10400921));
  Proto50400921_descriptor_ = file->message_type(10);
  static const int Proto50400921_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400921, script_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400921, reset_info_),
  };
  Proto50400921_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50400921_descriptor_,
      Proto50400921::default_instance_,
      Proto50400921_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400921, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50400921, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50400921));
  Proto10100217_descriptor_ = file->message_type(11);
  static const int Proto10100217_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100217, first_type_),
  };
  Proto10100217_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100217_descriptor_,
      Proto10100217::default_instance_,
      Proto10100217_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100217, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100217, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100217));
  Proto50100217_descriptor_ = file->message_type(12);
  static const int Proto50100217_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100217, first_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100217, act_name_list_),
  };
  Proto50100217_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100217_descriptor_,
      Proto50100217::default_instance_,
      Proto50100217_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100217, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100217, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100217));
  Proto10100218_descriptor_ = file->message_type(13);
  static const int Proto10100218_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100218, act_id_),
  };
  Proto10100218_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100218_descriptor_,
      Proto10100218::default_instance_,
      Proto10100218_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100218, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100218, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100218));
  Proto50100218_descriptor_ = file->message_type(14);
  static const int Proto50100218_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100218, act_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100218, system_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100218, act_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100218, accu_recharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100218, accu_consum_),
  };
  Proto50100218_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100218_descriptor_,
      Proto50100218::default_instance_,
      Proto50100218_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100218, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100218, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100218));
  Proto10100219_descriptor_ = file->message_type(15);
  static const int Proto10100219_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100219, act_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100219, reward_id_),
  };
  Proto10100219_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100219_descriptor_,
      Proto10100219::default_instance_,
      Proto10100219_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100219, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100219, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100219));
  Proto80100201_descriptor_ = file->message_type(16);
  static const int Proto80100201_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100201, show_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100201, reward_show_type_),
  };
  Proto80100201_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80100201_descriptor_,
      Proto80100201::default_instance_,
      Proto80100201_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100201, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80100201, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80100201));
  Proto51403004_descriptor_ = file->message_type(17);
  static const int Proto51403004_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403004, transfer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403004, select_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403004, is_in_cool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403004, is_in_transfer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403004, transfer_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403004, last_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403004, cool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403004, open_reward_),
  };
  Proto51403004_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51403004_descriptor_,
      Proto51403004::default_instance_,
      Proto51403004_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403004, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403004, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51403004));
  Proto50100636_descriptor_ = file->message_type(18);
  static const int Proto50100636_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100636, left_tick_),
  };
  Proto50100636_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100636_descriptor_,
      Proto50100636::default_instance_,
      Proto50100636_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100636, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100636, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100636));
  Proto11403005_descriptor_ = file->message_type(19);
  static const int Proto11403005_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11403005, transfer_id_),
  };
  Proto11403005_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11403005_descriptor_,
      Proto11403005::default_instance_,
      Proto11403005_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11403005, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11403005, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11403005));
  Proto51403005_descriptor_ = file->message_type(20);
  static const int Proto51403005_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403005, tansfer_id_),
  };
  Proto51403005_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51403005_descriptor_,
      Proto51403005::default_instance_,
      Proto51403005_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403005, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403005, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51403005));
  Proto51403006_descriptor_ = file->message_type(21);
  static const int Proto51403006_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403006, transfer_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403006, last_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403006, transfer_id_),
  };
  Proto51403006_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51403006_descriptor_,
      Proto51403006::default_instance_,
      Proto51403006_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403006, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403006, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51403006));
  Proto10100220_descriptor_ = file->message_type(22);
  static const int Proto10100220_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100220, activity_id_),
  };
  Proto10100220_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100220_descriptor_,
      Proto10100220::default_instance_,
      Proto10100220_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100220, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100220, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100220));
  Proto50100220_descriptor_ = file->message_type(23);
  static const int Proto50100220_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100220, task_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100220, person_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100220, server_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100220, activity_left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100220, today_left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100220, person_gold_plus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100220, act_reward_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100220, is_open_),
  };
  Proto50100220_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100220_descriptor_,
      Proto50100220::default_instance_,
      Proto50100220_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100220, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100220, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100220));
  Proto10100221_descriptor_ = file->message_type(24);
  static const int Proto10100221_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100221, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100221, index_),
  };
  Proto10100221_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100221_descriptor_,
      Proto10100221::default_instance_,
      Proto10100221_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100221, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100221, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100221));
  Proto10404005_descriptor_ = file->message_type(25);
  static const int Proto10404005_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10404005, buy_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10404005, hickty_id_),
  };
  Proto10404005_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10404005_descriptor_,
      Proto10404005::default_instance_,
      Proto10404005_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10404005, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10404005, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10404005));
  Proto80404006_descriptor_ = file->message_type(26);
  static const int Proto80404006_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404006, player_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404006, my_league_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404006, league_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404006, my_res_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404006, crt_hickty_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404006, center_relive_belongto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404006, center_relive_crt_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404006, enemy_league_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404006, enemy_league_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404006, flags_crt_blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404006, tower_surplus_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404006, left_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404006, camp_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404006, reward_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404006, arrive_score_),
  };
  Proto80404006_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto80404006_descriptor_,
      Proto80404006::default_instance_,
      Proto80404006_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404006, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto80404006, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto80404006));
  Proto81400801_descriptor_ = file->message_type(27);
  static const int Proto81400801_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400801, transfer_id_),
  };
  Proto81400801_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto81400801_descriptor_,
      Proto81400801::default_instance_,
      Proto81400801_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400801, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto81400801, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto81400801));
  Proto50404006_descriptor_ = file->message_type(28);
  static const int Proto50404006_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404006, reply_),
  };
  Proto50404006_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50404006_descriptor_,
      Proto50404006::default_instance_,
      Proto50404006_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404006, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50404006, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50404006));
  Proto51403007_descriptor_ = file->message_type(29);
  static const int Proto51403007_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403007, open_reward_),
  };
  Proto51403007_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51403007_descriptor_,
      Proto51403007::default_instance_,
      Proto51403007_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403007, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403007, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51403007));
  Proto11403008_descriptor_ = file->message_type(30);
  static const int Proto11403008_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11403008, transfer_id_),
  };
  Proto11403008_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto11403008_descriptor_,
      Proto11403008::default_instance_,
      Proto11403008_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11403008, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto11403008, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto11403008));
  Proto51403008_descriptor_ = file->message_type(31);
  static const int Proto51403008_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403008, transfer_id_),
  };
  Proto51403008_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto51403008_descriptor_,
      Proto51403008::default_instance_,
      Proto51403008_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403008, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto51403008, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto51403008));
  Proto10100222_descriptor_ = file->message_type(32);
  static const int Proto10100222_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100222, act_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100222, page_),
  };
  Proto10100222_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100222_descriptor_,
      Proto10100222::default_instance_,
      Proto10100222_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100222, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100222, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100222));
  Proto50100222_descriptor_ = file->message_type(33);
  static const int Proto50100222_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100222, first_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100222, system_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100222, act_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100222, rank_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100222, my_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100222, cur_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100222, total_page_),
  };
  Proto50100222_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100222_descriptor_,
      Proto50100222::default_instance_,
      Proto50100222_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100222, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100222, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100222));
  Proto50100251_descriptor_ = file->message_type(34);
  static const int Proto50100251_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100251, act_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100251, type_),
  };
  Proto50100251_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100251_descriptor_,
      Proto50100251::default_instance_,
      Proto50100251_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100251, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100251, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100251));
  Proto50100252_descriptor_ = file->message_type(35);
  static const int Proto50100252_offsets_[22] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, left_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, night_tick_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, first_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, second_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, start_cond_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, limit_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, reward_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, open_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, act_open_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, continuity_login_day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, sub_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, second_sub_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, third_sub_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, role_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, all_red_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, daily_cumulative_recharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, act_fashion_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, task_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, reward_show_id_),
  };
  Proto50100252_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100252_descriptor_,
      Proto50100252::default_instance_,
      Proto50100252_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100252, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100252));
  Proto10100252_descriptor_ = file->message_type(36);
  static const int Proto10100252_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100252, index_),
  };
  Proto10100252_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100252_descriptor_,
      Proto10100252::default_instance_,
      Proto10100252_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100252, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100252, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100252));
  Proto10100253_descriptor_ = file->message_type(37);
  static const int Proto10100253_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100253, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100253, reward_index_),
  };
  Proto10100253_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100253_descriptor_,
      Proto10100253::default_instance_,
      Proto10100253_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100253, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100253, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100253));
  Proto50100253_descriptor_ = file->message_type(38);
  static const int Proto50100253_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100253, type_),
  };
  Proto50100253_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100253_descriptor_,
      Proto50100253::default_instance_,
      Proto50100253_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100253, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100253, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100253));
  Proto10100254_descriptor_ = file->message_type(39);
  static const int Proto10100254_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100254, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100254, buy_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100254, amount_),
  };
  Proto10100254_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100254_descriptor_,
      Proto10100254::default_instance_,
      Proto10100254_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100254, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100254, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100254));
  Proto50100254_descriptor_ = file->message_type(40);
  static const int Proto50100254_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100254, index_),
  };
  Proto50100254_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100254_descriptor_,
      Proto50100254::default_instance_,
      Proto50100254_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100254, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100254, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100254));
  Proto50100255_descriptor_ = file->message_type(41);
  static const int Proto50100255_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100255, red_packet_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100255, person_count_),
  };
  Proto50100255_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100255_descriptor_,
      Proto50100255::default_instance_,
      Proto50100255_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100255, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100255, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100255));
  Proto10100255_descriptor_ = file->message_type(42);
  static const int Proto10100255_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100255, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100255, index_),
  };
  Proto10100255_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100255_descriptor_,
      Proto10100255::default_instance_,
      Proto10100255_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100255, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100255, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100255));
  Proto10100256_descriptor_ = file->message_type(43);
  static const int Proto10100256_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100256, index_),
  };
  Proto10100256_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100256_descriptor_,
      Proto10100256::default_instance_,
      Proto10100256_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100256, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100256, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100256));
  Proto50100256_descriptor_ = file->message_type(44);
  static const int Proto50100256_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100256, red_packet_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100256, red_packet_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100256, bing_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100256, self_money_),
  };
  Proto50100256_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100256_descriptor_,
      Proto50100256::default_instance_,
      Proto50100256_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100256, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100256, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100256));
  Proto10100257_descriptor_ = file->message_type(45);
  static const int Proto10100257_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100257, activity_id_),
  };
  Proto10100257_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100257_descriptor_,
      Proto10100257::default_instance_,
      Proto10100257_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100257, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100257, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100257));
  Proto10100258_descriptor_ = file->message_type(46);
  static const int Proto10100258_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100258, type_),
  };
  Proto10100258_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100258_descriptor_,
      Proto10100258::default_instance_,
      Proto10100258_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100258, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100258, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100258));
  Proto50100257_descriptor_ = file->message_type(47);
  static const int Proto50100257_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100257, login_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100257, continuity_login_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100257, continuity_login_day_),
  };
  Proto50100257_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100257_descriptor_,
      Proto50100257::default_instance_,
      Proto50100257_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100257, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100257, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100257));
  Proto50100258_descriptor_ = file->message_type(48);
  static const int Proto50100258_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100258, login_reward_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100258, continuity_login_reward_),
  };
  Proto50100258_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto50100258_descriptor_,
      Proto50100258::default_instance_,
      Proto50100258_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100258, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto50100258, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto50100258));
  Proto10100259_descriptor_ = file->message_type(49);
  static const int Proto10100259_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100259, activity_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100259, index_),
  };
  Proto10100259_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Proto10100259_descriptor_,
      Proto10100259::default_instance_,
      Proto10100259_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100259, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Proto10100259, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Proto10100259));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ProtoClient021_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10404003_descriptor_, &Proto10404003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102060_descriptor_, &Proto10102060::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10102061_descriptor_, &Proto10102061::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102060_descriptor_, &Proto50102060::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50102061_descriptor_, &Proto50102061::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51403001_descriptor_, &Proto51403001::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11403002_descriptor_, &Proto11403002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51403002_descriptor_, &Proto51403002::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51403003_descriptor_, &Proto51403003::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10400921_descriptor_, &Proto10400921::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50400921_descriptor_, &Proto50400921::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100217_descriptor_, &Proto10100217::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100217_descriptor_, &Proto50100217::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100218_descriptor_, &Proto10100218::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100218_descriptor_, &Proto50100218::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100219_descriptor_, &Proto10100219::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80100201_descriptor_, &Proto80100201::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51403004_descriptor_, &Proto51403004::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100636_descriptor_, &Proto50100636::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11403005_descriptor_, &Proto11403005::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51403005_descriptor_, &Proto51403005::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51403006_descriptor_, &Proto51403006::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100220_descriptor_, &Proto10100220::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100220_descriptor_, &Proto50100220::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100221_descriptor_, &Proto10100221::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10404005_descriptor_, &Proto10404005::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto80404006_descriptor_, &Proto80404006::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto81400801_descriptor_, &Proto81400801::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50404006_descriptor_, &Proto50404006::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51403007_descriptor_, &Proto51403007::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto11403008_descriptor_, &Proto11403008::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto51403008_descriptor_, &Proto51403008::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100222_descriptor_, &Proto10100222::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100222_descriptor_, &Proto50100222::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100251_descriptor_, &Proto50100251::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100252_descriptor_, &Proto50100252::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100252_descriptor_, &Proto10100252::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100253_descriptor_, &Proto10100253::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100253_descriptor_, &Proto50100253::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100254_descriptor_, &Proto10100254::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100254_descriptor_, &Proto50100254::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100255_descriptor_, &Proto50100255::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100255_descriptor_, &Proto10100255::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100256_descriptor_, &Proto10100256::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100256_descriptor_, &Proto50100256::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100257_descriptor_, &Proto10100257::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100258_descriptor_, &Proto10100258::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100257_descriptor_, &Proto50100257::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto50100258_descriptor_, &Proto50100258::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Proto10100259_descriptor_, &Proto10100259::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ProtoClient021_2eproto() {
  delete Proto10404003::default_instance_;
  delete Proto10404003_reflection_;
  delete Proto10102060::default_instance_;
  delete Proto10102060_reflection_;
  delete Proto10102061::default_instance_;
  delete Proto10102061_reflection_;
  delete Proto50102060::default_instance_;
  delete Proto50102060_reflection_;
  delete Proto50102061::default_instance_;
  delete Proto50102061_reflection_;
  delete Proto51403001::default_instance_;
  delete Proto51403001_reflection_;
  delete Proto11403002::default_instance_;
  delete Proto11403002_reflection_;
  delete Proto51403002::default_instance_;
  delete Proto51403002_reflection_;
  delete Proto51403003::default_instance_;
  delete Proto51403003_reflection_;
  delete Proto10400921::default_instance_;
  delete Proto10400921_reflection_;
  delete Proto50400921::default_instance_;
  delete Proto50400921_reflection_;
  delete Proto10100217::default_instance_;
  delete Proto10100217_reflection_;
  delete Proto50100217::default_instance_;
  delete Proto50100217_reflection_;
  delete Proto10100218::default_instance_;
  delete Proto10100218_reflection_;
  delete Proto50100218::default_instance_;
  delete Proto50100218_reflection_;
  delete Proto10100219::default_instance_;
  delete Proto10100219_reflection_;
  delete Proto80100201::default_instance_;
  delete Proto80100201_reflection_;
  delete Proto51403004::default_instance_;
  delete Proto51403004_reflection_;
  delete Proto50100636::default_instance_;
  delete Proto50100636_reflection_;
  delete Proto11403005::default_instance_;
  delete Proto11403005_reflection_;
  delete Proto51403005::default_instance_;
  delete Proto51403005_reflection_;
  delete Proto51403006::default_instance_;
  delete Proto51403006_reflection_;
  delete Proto10100220::default_instance_;
  delete Proto10100220_reflection_;
  delete Proto50100220::default_instance_;
  delete Proto50100220_reflection_;
  delete Proto10100221::default_instance_;
  delete Proto10100221_reflection_;
  delete Proto10404005::default_instance_;
  delete Proto10404005_reflection_;
  delete Proto80404006::default_instance_;
  delete Proto80404006_reflection_;
  delete Proto81400801::default_instance_;
  delete Proto81400801_reflection_;
  delete Proto50404006::default_instance_;
  delete Proto50404006_reflection_;
  delete Proto51403007::default_instance_;
  delete Proto51403007_reflection_;
  delete Proto11403008::default_instance_;
  delete Proto11403008_reflection_;
  delete Proto51403008::default_instance_;
  delete Proto51403008_reflection_;
  delete Proto10100222::default_instance_;
  delete Proto10100222_reflection_;
  delete Proto50100222::default_instance_;
  delete Proto50100222_reflection_;
  delete Proto50100251::default_instance_;
  delete Proto50100251_reflection_;
  delete Proto50100252::default_instance_;
  delete Proto50100252_reflection_;
  delete Proto10100252::default_instance_;
  delete Proto10100252_reflection_;
  delete Proto10100253::default_instance_;
  delete Proto10100253_reflection_;
  delete Proto50100253::default_instance_;
  delete Proto50100253_reflection_;
  delete Proto10100254::default_instance_;
  delete Proto10100254_reflection_;
  delete Proto50100254::default_instance_;
  delete Proto50100254_reflection_;
  delete Proto50100255::default_instance_;
  delete Proto50100255_reflection_;
  delete Proto10100255::default_instance_;
  delete Proto10100255_reflection_;
  delete Proto10100256::default_instance_;
  delete Proto10100256_reflection_;
  delete Proto50100256::default_instance_;
  delete Proto50100256_reflection_;
  delete Proto10100257::default_instance_;
  delete Proto10100257_reflection_;
  delete Proto10100258::default_instance_;
  delete Proto10100258_reflection_;
  delete Proto50100257::default_instance_;
  delete Proto50100257_reflection_;
  delete Proto50100258::default_instance_;
  delete Proto50100258_reflection_;
  delete Proto10100259::default_instance_;
  delete Proto10100259_reflection_;
}

void protobuf_AddDesc_ProtoClient021_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProtoPublic_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024ProtoClient021.proto\032\021ProtoPublic.prot"
    "o\"*\n\rProto10404003\022\031\n\021support_league_id\030"
    "\001 \001(\003\"$\n\rProto10102060\022\023\n\013activity_id\030\001 "
    "\001(\005\"3\n\rProto10102061\022\023\n\013activity_id\030\001 \001("
    "\005\022\r\n\005count\030\002 \001(\005\"\334\001\n\rProto50102060\022\023\n\013ac"
    "tivity_id\030\001 \001(\005\022)\n\rserver_record\030\002 \003(\0132\022"
    ".ProtoServerRecord\022)\n\rperson_record\030\003 \003("
    "\0132\022.ProtoPersonRecord\022\021\n\tleft_tick\030\004 \001(\005"
    "\022\027\n\017draw_free_times\030\005 \001(\005\022\027\n\017today_buy_t"
    "imes\030\006 \001(\005\022\033\n\023today_recharge_gold\030\007 \001(\005\""
    ">\n\rProto50102061\022\023\n\013activity_id\030\001 \001(\005\022\030\n"
    "\004item\030\002 \003(\0132\n.ProtoItem\"N\n\rProto51403001"
    "\022\r\n\005level\030\001 \001(\005\022\013\n\003exp\030\002 \001(\005\022\r\n\005stage\030\003 "
    "\001(\005\022\022\n\ngold_times\030\004 \001(\005\"\035\n\rProto11403002"
    "\022\014\n\004type\030\001 \001(\005\"[\n\rProto51403002\022\r\n\005level"
    "\030\001 \001(\005\022\013\n\003exp\030\002 \001(\005\022\014\n\004type\030\003 \001(\005\022\022\n\ngol"
    "d_times\030\004 \001(\005\022\014\n\004mult\030\005 \001(\005\":\n\rProto5140"
    "3003\022\r\n\005level\030\001 \001(\005\022\013\n\003exp\030\002 \001(\005\022\r\n\005stag"
    "e\030\003 \001(\005\"$\n\rProto10400921\022\023\n\013script_type\030"
    "\001 \001(\005\"K\n\rProto50400921\022\023\n\013script_type\030\001 "
    "\001(\005\022%\n\nreset_info\030\002 \003(\0132\021.ProtoScriptRes"
    "et\"#\n\rProto10100217\022\022\n\nfirst_type\030\001 \001(\005\""
    "M\n\rProto50100217\022\022\n\nfirst_type\030\001 \001(\005\022(\n\r"
    "act_name_list\030\002 \003(\0132\021.ProtoBackActName\"\037"
    "\n\rProto10100218\022\016\n\006act_id\030\001 \001(\005\"\205\001\n\rProt"
    "o50100218\022\016\n\006act_id\030\001 \001(\005\022\023\n\013system_tick"
    "\030\002 \001(\005\022#\n\010act_info\030\003 \001(\0132\021.ProtoBackActI"
    "nfo\022\025\n\raccu_recharge\030\004 \001(\005\022\023\n\013accu_consu"
    "m\030\005 \001(\005\"2\n\rProto10100219\022\016\n\006act_id\030\001 \001(\005"
    "\022\021\n\treward_id\030\002 \001(\005\"<\n\rProto80100201\022\021\n\t"
    "show_type\030\001 \003(\005\022\030\n\020reward_show_type\030\002 \003("
    "\005\"\276\001\n\rProto51403004\022&\n\010transfer\030\001 \003(\0132\024."
    "ProtoTransferClient\022\021\n\tselect_id\030\002 \001(\005\022\022"
    "\n\nis_in_cool\030\003 \001(\005\022\026\n\016is_in_transfer\030\004 \001"
    "(\005\022\025\n\rtransfer_tick\030\005 \001(\003\022\014\n\004last\030\006 \001(\005\022"
    "\014\n\004cool\030\007 \001(\005\022\023\n\013open_reward\030\010 \001(\005\"\"\n\rPr"
    "oto50100636\022\021\n\tleft_tick\030\001 \001(\005\"$\n\rProto1"
    "1403005\022\023\n\013transfer_id\030\001 \001(\005\"#\n\rProto514"
    "03005\022\022\n\ntansfer_id\030\001 \001(\005\"I\n\rProto514030"
    "06\022\025\n\rtransfer_tick\030\001 \001(\003\022\014\n\004last\030\002 \001(\005\022"
    "\023\n\013transfer_id\030\003 \001(\005\"$\n\rProto10100220\022\023\n"
    "\013activity_id\030\001 \001(\005\"\324\001\n\rProto50100220\022 \n\t"
    "task_list\030\001 \003(\0132\r.PActTastList\022\023\n\013person"
    "_gold\030\002 \001(\005\022\023\n\013server_gold\030\003 \001(\005\022\032\n\022acti"
    "vity_left_time\030\004 \001(\005\022\027\n\017today_left_time\030"
    "\005 \001(\005\022\030\n\020person_gold_plus\030\006 \001(\005\022\027\n\017act_r"
    "eward_item\030\007 \003(\005\022\017\n\007is_open\030\010 \001(\005\"3\n\rPro"
    "to10100221\022\023\n\013activity_id\030\001 \001(\005\022\r\n\005index"
    "\030\002 \001(\005\"4\n\rProto10404005\022\020\n\010buy_type\030\001 \001("
    "\005\022\021\n\thickty_id\030\002 \001(\005\"\362\002\n\rProto80404006\022\024"
    "\n\014player_score\030\001 \001(\003\022\021\n\tmy_league\030\002 \001(\t\022"
    "\024\n\014league_score\030\003 \001(\003\022\024\n\014my_res_score\030\004 "
    "\001(\003\022\030\n\020crt_hickty_level\030\005 \001(\005\022\036\n\026center_"
    "relive_belongto\030\006 \001(\003\022\037\n\027center_relive_c"
    "rt_blood\030\007 \001(\003\022\024\n\014enemy_league\030\010 \001(\t\022\032\n\022"
    "enemy_league_score\030\t \001(\003\022\027\n\017flags_crt_bl"
    "ood\030\n \003(\003\022\031\n\021tower_surplus_num\030\013 \003(\003\022\021\n\t"
    "left_time\030\014 \001(\005\022\017\n\007camp_id\030\r \001(\005\022\021\n\trewa"
    "rd_id\030\016 \001(\005\022\024\n\014arrive_score\030\017 \001(\005\"$\n\rPro"
    "to81400801\022\023\n\013transfer_id\030\001 \001(\005\"\036\n\rProto"
    "50404006\022\r\n\005reply\030\001 \001(\005\"$\n\rProto51403007"
    "\022\023\n\013open_reward\030\001 \001(\005\"$\n\rProto11403008\022\023"
    "\n\013transfer_id\030\001 \001(\005\"$\n\rProto51403008\022\023\n\013"
    "transfer_id\030\001 \001(\005\"-\n\rProto10100222\022\016\n\006ac"
    "t_id\030\001 \001(\005\022\014\n\004page\030\002 \001(\005\"\317\001\n\rProto501002"
    "22\022\022\n\nfirst_type\030\001 \001(\005\022\023\n\013system_tick\030\002 "
    "\001(\005\022#\n\010act_info\030\003 \001(\0132\021.ProtoBackActInfo"
    "\022%\n\trank_info\030\004 \003(\0132\022.ProtoRechargeRank\022"
    "#\n\007my_rank\030\005 \001(\0132\022.ProtoRechargeRank\022\020\n\010"
    "cur_page\030\006 \001(\005\022\022\n\ntotal_page\030\007 \001(\005\"/\n\rPr"
    "oto50100251\022\020\n\010act_list\030\001 \003(\005\022\014\n\004type\030\002 "
    "\001(\005\"\333\004\n\rProto50100252\022\r\n\005index\030\001 \001(\005\022\021\n\t"
    "left_tick\030\002 \001(\005\022\022\n\nnight_tick\030\003 \001(\005\022\014\n\004n"
    "ame\030\004 \001(\t\022\r\n\005title\030\005 \001(\t\022\022\n\nfirst_type\030\006"
    " \001(\005\022\023\n\013second_type\030\007 \001(\005\022\022\n\nstart_cond\030"
    "\010 \001(\005\022%\n\013limit_value\030\t \001(\0132\020.ProtoLimitV"
    "alue\022#\n\013reward_info\030\n \003(\0132\016.MayRewardInf"
    "o\022$\n\topen_time\030\013 \003(\0132\021.ActOpenLimitTime\022"
    "\026\n\016act_open_times\030\014 \003(\005\022\034\n\024continuity_lo"
    "gin_day\030\r \001(\005\022\021\n\tsub_value\030\016 \001(\005\022\022\n\nseco"
    "nd_sub\030\017 \001(\005\022\021\n\tthird_sub\030\020 \001(\005\022 \n\trole_"
    "info\030\021 \003(\0132\r.ProtoRunRole\022)\n\014all_red_inf"
    "o\030\022 \003(\0132\023.ProtoAllRedActInfo\022!\n\031daily_cu"
    "mulative_recharge\030\023 \001(\005\022.\n\020act_fashion_i"
    "nfo\030\024 \001(\0132\024.ProtoMayFashionInfo\022 \n\ttask_"
    "info\030\025 \003(\0132\r.PActTastList\022\026\n\016reward_show"
    "_id\030\026 \001(\005\"\036\n\rProto10100252\022\r\n\005index\030\001 \001("
    "\005\"4\n\rProto10100253\022\r\n\005index\030\001 \001(\005\022\024\n\014rew"
    "ard_index\030\002 \001(\005\"\035\n\rProto50100253\022\014\n\004type"
    "\030\001 \001(\005\"A\n\rProto10100254\022\r\n\005index\030\001 \001(\005\022\021"
    "\n\tbuy_index\030\002 \001(\005\022\016\n\006amount\030\003 \001(\005\"\036\n\rPro"
    "to50100254\022\r\n\005index\030\001 \001(\005\"\?\n\rProto501002"
    "55\022\030\n\020red_packet_money\030\001 \001(\005\022\024\n\014person_c"
    "ount\030\002 \001(\005\"3\n\rProto10100255\022\023\n\013activity_"
    "id\030\001 \001(\005\022\r\n\005index\030\002 \001(\005\"\036\n\rProto10100256"
    "\022\r\n\005index\030\001 \001(\005\"}\n\rProto50100256\022,\n\017red_"
    "packet_info\030\001 \003(\0132\023.ProtoRedPacketInfo\022\026"
    "\n\016red_packet_max\030\002 \001(\005\022\022\n\nbing_money\030\003 \001"
    "(\005\022\022\n\nself_money\030\004 \001(\005\"$\n\rProto10100257\022"
    "\023\n\013activity_id\030\001 \001(\005\"\035\n\rProto10100258\022\014\n"
    "\004type\030\001 \001(\005\"d\n\rProto50100257\022\024\n\014login_re"
    "ward\030\001 \002(\005\022\037\n\027continuity_login_reward\030\002 "
    "\002(\005\022\034\n\024continuity_login_day\030\003 \002(\005\"F\n\rPro"
    "to50100258\022\024\n\014login_reward\030\001 \002(\005\022\037\n\027cont"
    "inuity_login_reward\030\002 \002(\005\"3\n\rProto101002"
    "59\022\023\n\013activity_id\030\001 \001(\005\022\r\n\005index\030\002 \001(\005", 4238);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoClient021.proto", &protobuf_RegisterTypes);
  Proto10404003::default_instance_ = new Proto10404003();
  Proto10102060::default_instance_ = new Proto10102060();
  Proto10102061::default_instance_ = new Proto10102061();
  Proto50102060::default_instance_ = new Proto50102060();
  Proto50102061::default_instance_ = new Proto50102061();
  Proto51403001::default_instance_ = new Proto51403001();
  Proto11403002::default_instance_ = new Proto11403002();
  Proto51403002::default_instance_ = new Proto51403002();
  Proto51403003::default_instance_ = new Proto51403003();
  Proto10400921::default_instance_ = new Proto10400921();
  Proto50400921::default_instance_ = new Proto50400921();
  Proto10100217::default_instance_ = new Proto10100217();
  Proto50100217::default_instance_ = new Proto50100217();
  Proto10100218::default_instance_ = new Proto10100218();
  Proto50100218::default_instance_ = new Proto50100218();
  Proto10100219::default_instance_ = new Proto10100219();
  Proto80100201::default_instance_ = new Proto80100201();
  Proto51403004::default_instance_ = new Proto51403004();
  Proto50100636::default_instance_ = new Proto50100636();
  Proto11403005::default_instance_ = new Proto11403005();
  Proto51403005::default_instance_ = new Proto51403005();
  Proto51403006::default_instance_ = new Proto51403006();
  Proto10100220::default_instance_ = new Proto10100220();
  Proto50100220::default_instance_ = new Proto50100220();
  Proto10100221::default_instance_ = new Proto10100221();
  Proto10404005::default_instance_ = new Proto10404005();
  Proto80404006::default_instance_ = new Proto80404006();
  Proto81400801::default_instance_ = new Proto81400801();
  Proto50404006::default_instance_ = new Proto50404006();
  Proto51403007::default_instance_ = new Proto51403007();
  Proto11403008::default_instance_ = new Proto11403008();
  Proto51403008::default_instance_ = new Proto51403008();
  Proto10100222::default_instance_ = new Proto10100222();
  Proto50100222::default_instance_ = new Proto50100222();
  Proto50100251::default_instance_ = new Proto50100251();
  Proto50100252::default_instance_ = new Proto50100252();
  Proto10100252::default_instance_ = new Proto10100252();
  Proto10100253::default_instance_ = new Proto10100253();
  Proto50100253::default_instance_ = new Proto50100253();
  Proto10100254::default_instance_ = new Proto10100254();
  Proto50100254::default_instance_ = new Proto50100254();
  Proto50100255::default_instance_ = new Proto50100255();
  Proto10100255::default_instance_ = new Proto10100255();
  Proto10100256::default_instance_ = new Proto10100256();
  Proto50100256::default_instance_ = new Proto50100256();
  Proto10100257::default_instance_ = new Proto10100257();
  Proto10100258::default_instance_ = new Proto10100258();
  Proto50100257::default_instance_ = new Proto50100257();
  Proto50100258::default_instance_ = new Proto50100258();
  Proto10100259::default_instance_ = new Proto10100259();
  Proto10404003::default_instance_->InitAsDefaultInstance();
  Proto10102060::default_instance_->InitAsDefaultInstance();
  Proto10102061::default_instance_->InitAsDefaultInstance();
  Proto50102060::default_instance_->InitAsDefaultInstance();
  Proto50102061::default_instance_->InitAsDefaultInstance();
  Proto51403001::default_instance_->InitAsDefaultInstance();
  Proto11403002::default_instance_->InitAsDefaultInstance();
  Proto51403002::default_instance_->InitAsDefaultInstance();
  Proto51403003::default_instance_->InitAsDefaultInstance();
  Proto10400921::default_instance_->InitAsDefaultInstance();
  Proto50400921::default_instance_->InitAsDefaultInstance();
  Proto10100217::default_instance_->InitAsDefaultInstance();
  Proto50100217::default_instance_->InitAsDefaultInstance();
  Proto10100218::default_instance_->InitAsDefaultInstance();
  Proto50100218::default_instance_->InitAsDefaultInstance();
  Proto10100219::default_instance_->InitAsDefaultInstance();
  Proto80100201::default_instance_->InitAsDefaultInstance();
  Proto51403004::default_instance_->InitAsDefaultInstance();
  Proto50100636::default_instance_->InitAsDefaultInstance();
  Proto11403005::default_instance_->InitAsDefaultInstance();
  Proto51403005::default_instance_->InitAsDefaultInstance();
  Proto51403006::default_instance_->InitAsDefaultInstance();
  Proto10100220::default_instance_->InitAsDefaultInstance();
  Proto50100220::default_instance_->InitAsDefaultInstance();
  Proto10100221::default_instance_->InitAsDefaultInstance();
  Proto10404005::default_instance_->InitAsDefaultInstance();
  Proto80404006::default_instance_->InitAsDefaultInstance();
  Proto81400801::default_instance_->InitAsDefaultInstance();
  Proto50404006::default_instance_->InitAsDefaultInstance();
  Proto51403007::default_instance_->InitAsDefaultInstance();
  Proto11403008::default_instance_->InitAsDefaultInstance();
  Proto51403008::default_instance_->InitAsDefaultInstance();
  Proto10100222::default_instance_->InitAsDefaultInstance();
  Proto50100222::default_instance_->InitAsDefaultInstance();
  Proto50100251::default_instance_->InitAsDefaultInstance();
  Proto50100252::default_instance_->InitAsDefaultInstance();
  Proto10100252::default_instance_->InitAsDefaultInstance();
  Proto10100253::default_instance_->InitAsDefaultInstance();
  Proto50100253::default_instance_->InitAsDefaultInstance();
  Proto10100254::default_instance_->InitAsDefaultInstance();
  Proto50100254::default_instance_->InitAsDefaultInstance();
  Proto50100255::default_instance_->InitAsDefaultInstance();
  Proto10100255::default_instance_->InitAsDefaultInstance();
  Proto10100256::default_instance_->InitAsDefaultInstance();
  Proto50100256::default_instance_->InitAsDefaultInstance();
  Proto10100257::default_instance_->InitAsDefaultInstance();
  Proto10100258::default_instance_->InitAsDefaultInstance();
  Proto50100257::default_instance_->InitAsDefaultInstance();
  Proto50100258::default_instance_->InitAsDefaultInstance();
  Proto10100259::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ProtoClient021_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ProtoClient021_2eproto {
  StaticDescriptorInitializer_ProtoClient021_2eproto() {
    protobuf_AddDesc_ProtoClient021_2eproto();
  }
} static_descriptor_initializer_ProtoClient021_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Proto10404003::kSupportLeagueIdFieldNumber;
#endif  // !_MSC_VER

Proto10404003::Proto10404003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10404003::InitAsDefaultInstance() {
}

Proto10404003::Proto10404003(const Proto10404003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10404003::SharedCtor() {
  _cached_size_ = 0;
  support_league_id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10404003::~Proto10404003() {
  SharedDtor();
}

void Proto10404003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10404003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10404003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10404003_descriptor_;
}

const Proto10404003& Proto10404003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10404003* Proto10404003::default_instance_ = NULL;

Proto10404003* Proto10404003::New() const {
  return new Proto10404003;
}

void Proto10404003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    support_league_id_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10404003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 support_league_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &support_league_id_)));
          set_has_support_league_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10404003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 support_league_id = 1;
  if (has_support_league_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->support_league_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10404003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 support_league_id = 1;
  if (has_support_league_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->support_league_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10404003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 support_league_id = 1;
    if (has_support_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->support_league_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10404003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10404003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10404003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10404003::MergeFrom(const Proto10404003& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_support_league_id()) {
      set_support_league_id(from.support_league_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10404003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10404003::CopyFrom(const Proto10404003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10404003::IsInitialized() const {
  
  return true;
}

void Proto10404003::Swap(Proto10404003* other) {
  if (other != this) {
    std::swap(support_league_id_, other->support_league_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10404003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10404003_descriptor_;
  metadata.reflection = Proto10404003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102060::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto10102060::Proto10102060()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102060::InitAsDefaultInstance() {
}

Proto10102060::Proto10102060(const Proto10102060& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102060::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102060::~Proto10102060() {
  SharedDtor();
}

void Proto10102060::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102060::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102060::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102060_descriptor_;
}

const Proto10102060& Proto10102060::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10102060* Proto10102060::default_instance_ = NULL;

Proto10102060* Proto10102060::New() const {
  return new Proto10102060;
}

void Proto10102060::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102060::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102060::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102060::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102060::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102060::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102060* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102060*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102060::MergeFrom(const Proto10102060& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102060::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102060::CopyFrom(const Proto10102060& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102060::IsInitialized() const {
  
  return true;
}

void Proto10102060::Swap(Proto10102060* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102060::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102060_descriptor_;
  metadata.reflection = Proto10102060_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10102061::kActivityIdFieldNumber;
const int Proto10102061::kCountFieldNumber;
#endif  // !_MSC_VER

Proto10102061::Proto10102061()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10102061::InitAsDefaultInstance() {
}

Proto10102061::Proto10102061(const Proto10102061& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10102061::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10102061::~Proto10102061() {
  SharedDtor();
}

void Proto10102061::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10102061::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10102061::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10102061_descriptor_;
}

const Proto10102061& Proto10102061::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10102061* Proto10102061::default_instance_ = NULL;

Proto10102061* Proto10102061::New() const {
  return new Proto10102061;
}

void Proto10102061::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10102061::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }
      
      // optional int32 count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10102061::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10102061::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10102061::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10102061::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10102061* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10102061*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10102061::MergeFrom(const Proto10102061& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10102061::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10102061::CopyFrom(const Proto10102061& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10102061::IsInitialized() const {
  
  return true;
}

void Proto10102061::Swap(Proto10102061* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(count_, other->count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10102061::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10102061_descriptor_;
  metadata.reflection = Proto10102061_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102060::kActivityIdFieldNumber;
const int Proto50102060::kServerRecordFieldNumber;
const int Proto50102060::kPersonRecordFieldNumber;
const int Proto50102060::kLeftTickFieldNumber;
const int Proto50102060::kDrawFreeTimesFieldNumber;
const int Proto50102060::kTodayBuyTimesFieldNumber;
const int Proto50102060::kTodayRechargeGoldFieldNumber;
#endif  // !_MSC_VER

Proto50102060::Proto50102060()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102060::InitAsDefaultInstance() {
}

Proto50102060::Proto50102060(const Proto50102060& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102060::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  left_tick_ = 0;
  draw_free_times_ = 0;
  today_buy_times_ = 0;
  today_recharge_gold_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102060::~Proto50102060() {
  SharedDtor();
}

void Proto50102060::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102060::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102060::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102060_descriptor_;
}

const Proto50102060& Proto50102060::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto50102060* Proto50102060::default_instance_ = NULL;

Proto50102060* Proto50102060::New() const {
  return new Proto50102060;
}

void Proto50102060::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    left_tick_ = 0;
    draw_free_times_ = 0;
    today_buy_times_ = 0;
    today_recharge_gold_ = 0;
  }
  server_record_.Clear();
  person_record_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102060::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_server_record;
        break;
      }
      
      // repeated .ProtoServerRecord server_record = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_server_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_server_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_server_record;
        if (input->ExpectTag(26)) goto parse_person_record;
        break;
      }
      
      // repeated .ProtoPersonRecord person_record = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_person_record:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_person_record()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_person_record;
        if (input->ExpectTag(32)) goto parse_left_tick;
        break;
      }
      
      // optional int32 left_tick = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_tick_)));
          set_has_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_draw_free_times;
        break;
      }
      
      // optional int32 draw_free_times = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_draw_free_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &draw_free_times_)));
          set_has_draw_free_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_today_buy_times;
        break;
      }
      
      // optional int32 today_buy_times = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_today_buy_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &today_buy_times_)));
          set_has_today_buy_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_today_recharge_gold;
        break;
      }
      
      // optional int32 today_recharge_gold = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_today_recharge_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &today_recharge_gold_)));
          set_has_today_recharge_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102060::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // repeated .ProtoServerRecord server_record = 2;
  for (int i = 0; i < this->server_record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->server_record(i), output);
  }
  
  // repeated .ProtoPersonRecord person_record = 3;
  for (int i = 0; i < this->person_record_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->person_record(i), output);
  }
  
  // optional int32 left_tick = 4;
  if (has_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->left_tick(), output);
  }
  
  // optional int32 draw_free_times = 5;
  if (has_draw_free_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->draw_free_times(), output);
  }
  
  // optional int32 today_buy_times = 6;
  if (has_today_buy_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->today_buy_times(), output);
  }
  
  // optional int32 today_recharge_gold = 7;
  if (has_today_recharge_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->today_recharge_gold(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102060::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // repeated .ProtoServerRecord server_record = 2;
  for (int i = 0; i < this->server_record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->server_record(i), target);
  }
  
  // repeated .ProtoPersonRecord person_record = 3;
  for (int i = 0; i < this->person_record_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->person_record(i), target);
  }
  
  // optional int32 left_tick = 4;
  if (has_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->left_tick(), target);
  }
  
  // optional int32 draw_free_times = 5;
  if (has_draw_free_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->draw_free_times(), target);
  }
  
  // optional int32 today_buy_times = 6;
  if (has_today_buy_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->today_buy_times(), target);
  }
  
  // optional int32 today_recharge_gold = 7;
  if (has_today_recharge_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->today_recharge_gold(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102060::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 left_tick = 4;
    if (has_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_tick());
    }
    
    // optional int32 draw_free_times = 5;
    if (has_draw_free_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->draw_free_times());
    }
    
    // optional int32 today_buy_times = 6;
    if (has_today_buy_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->today_buy_times());
    }
    
    // optional int32 today_recharge_gold = 7;
    if (has_today_recharge_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->today_recharge_gold());
    }
    
  }
  // repeated .ProtoServerRecord server_record = 2;
  total_size += 1 * this->server_record_size();
  for (int i = 0; i < this->server_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->server_record(i));
  }
  
  // repeated .ProtoPersonRecord person_record = 3;
  total_size += 1 * this->person_record_size();
  for (int i = 0; i < this->person_record_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->person_record(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102060::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102060* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102060*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102060::MergeFrom(const Proto50102060& from) {
  GOOGLE_CHECK_NE(&from, this);
  server_record_.MergeFrom(from.server_record_);
  person_record_.MergeFrom(from.person_record_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_left_tick()) {
      set_left_tick(from.left_tick());
    }
    if (from.has_draw_free_times()) {
      set_draw_free_times(from.draw_free_times());
    }
    if (from.has_today_buy_times()) {
      set_today_buy_times(from.today_buy_times());
    }
    if (from.has_today_recharge_gold()) {
      set_today_recharge_gold(from.today_recharge_gold());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102060::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102060::CopyFrom(const Proto50102060& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102060::IsInitialized() const {
  
  return true;
}

void Proto50102060::Swap(Proto50102060* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    server_record_.Swap(&other->server_record_);
    person_record_.Swap(&other->person_record_);
    std::swap(left_tick_, other->left_tick_);
    std::swap(draw_free_times_, other->draw_free_times_);
    std::swap(today_buy_times_, other->today_buy_times_);
    std::swap(today_recharge_gold_, other->today_recharge_gold_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102060::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102060_descriptor_;
  metadata.reflection = Proto50102060_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50102061::kActivityIdFieldNumber;
const int Proto50102061::kItemFieldNumber;
#endif  // !_MSC_VER

Proto50102061::Proto50102061()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50102061::InitAsDefaultInstance() {
}

Proto50102061::Proto50102061(const Proto50102061& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50102061::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50102061::~Proto50102061() {
  SharedDtor();
}

void Proto50102061::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50102061::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50102061::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50102061_descriptor_;
}

const Proto50102061& Proto50102061::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto50102061* Proto50102061::default_instance_ = NULL;

Proto50102061* Proto50102061::New() const {
  return new Proto50102061;
}

void Proto50102061::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
  }
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50102061::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item;
        break;
      }
      
      // repeated .ProtoItem item = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50102061::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // repeated .ProtoItem item = 2;
  for (int i = 0; i < this->item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50102061::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // repeated .ProtoItem item = 2;
  for (int i = 0; i < this->item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->item(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50102061::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  // repeated .ProtoItem item = 2;
  total_size += 1 * this->item_size();
  for (int i = 0; i < this->item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->item(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50102061::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50102061* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50102061*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50102061::MergeFrom(const Proto50102061& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50102061::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50102061::CopyFrom(const Proto50102061& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50102061::IsInitialized() const {
  
  return true;
}

void Proto50102061::Swap(Proto50102061* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    item_.Swap(&other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50102061::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50102061_descriptor_;
  metadata.reflection = Proto50102061_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51403001::kLevelFieldNumber;
const int Proto51403001::kExpFieldNumber;
const int Proto51403001::kStageFieldNumber;
const int Proto51403001::kGoldTimesFieldNumber;
#endif  // !_MSC_VER

Proto51403001::Proto51403001()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51403001::InitAsDefaultInstance() {
}

Proto51403001::Proto51403001(const Proto51403001& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51403001::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  exp_ = 0;
  stage_ = 0;
  gold_times_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51403001::~Proto51403001() {
  SharedDtor();
}

void Proto51403001::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51403001::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51403001::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51403001_descriptor_;
}

const Proto51403001& Proto51403001::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto51403001* Proto51403001::default_instance_ = NULL;

Proto51403001* Proto51403001::New() const {
  return new Proto51403001;
}

void Proto51403001::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    exp_ = 0;
    stage_ = 0;
    gold_times_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51403001::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exp;
        break;
      }
      
      // optional int32 exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_stage;
        break;
      }
      
      // optional int32 stage = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_)));
          set_has_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_gold_times;
        break;
      }
      
      // optional int32 gold_times = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_times_)));
          set_has_gold_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51403001::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exp(), output);
  }
  
  // optional int32 stage = 3;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->stage(), output);
  }
  
  // optional int32 gold_times = 4;
  if (has_gold_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->gold_times(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51403001::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exp(), target);
  }
  
  // optional int32 stage = 3;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->stage(), target);
  }
  
  // optional int32 gold_times = 4;
  if (has_gold_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->gold_times(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51403001::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 exp = 2;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }
    
    // optional int32 stage = 3;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stage());
    }
    
    // optional int32 gold_times = 4;
    if (has_gold_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold_times());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51403001::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51403001* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51403001*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51403001::MergeFrom(const Proto51403001& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_stage()) {
      set_stage(from.stage());
    }
    if (from.has_gold_times()) {
      set_gold_times(from.gold_times());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51403001::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51403001::CopyFrom(const Proto51403001& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51403001::IsInitialized() const {
  
  return true;
}

void Proto51403001::Swap(Proto51403001* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(exp_, other->exp_);
    std::swap(stage_, other->stage_);
    std::swap(gold_times_, other->gold_times_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51403001::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51403001_descriptor_;
  metadata.reflection = Proto51403001_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11403002::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto11403002::Proto11403002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11403002::InitAsDefaultInstance() {
}

Proto11403002::Proto11403002(const Proto11403002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11403002::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11403002::~Proto11403002() {
  SharedDtor();
}

void Proto11403002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11403002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11403002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11403002_descriptor_;
}

const Proto11403002& Proto11403002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto11403002* Proto11403002::default_instance_ = NULL;

Proto11403002* Proto11403002::New() const {
  return new Proto11403002;
}

void Proto11403002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11403002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11403002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11403002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11403002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11403002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11403002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11403002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11403002::MergeFrom(const Proto11403002& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11403002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11403002::CopyFrom(const Proto11403002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11403002::IsInitialized() const {
  
  return true;
}

void Proto11403002::Swap(Proto11403002* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11403002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11403002_descriptor_;
  metadata.reflection = Proto11403002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51403002::kLevelFieldNumber;
const int Proto51403002::kExpFieldNumber;
const int Proto51403002::kTypeFieldNumber;
const int Proto51403002::kGoldTimesFieldNumber;
const int Proto51403002::kMultFieldNumber;
#endif  // !_MSC_VER

Proto51403002::Proto51403002()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51403002::InitAsDefaultInstance() {
}

Proto51403002::Proto51403002(const Proto51403002& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51403002::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  exp_ = 0;
  type_ = 0;
  gold_times_ = 0;
  mult_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51403002::~Proto51403002() {
  SharedDtor();
}

void Proto51403002::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51403002::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51403002::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51403002_descriptor_;
}

const Proto51403002& Proto51403002::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto51403002* Proto51403002::default_instance_ = NULL;

Proto51403002* Proto51403002::New() const {
  return new Proto51403002;
}

void Proto51403002::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    exp_ = 0;
    type_ = 0;
    gold_times_ = 0;
    mult_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51403002::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exp;
        break;
      }
      
      // optional int32 exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }
      
      // optional int32 type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_gold_times;
        break;
      }
      
      // optional int32 gold_times = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gold_times_)));
          set_has_gold_times();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_mult;
        break;
      }
      
      // optional int32 mult = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mult_)));
          set_has_mult();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51403002::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exp(), output);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }
  
  // optional int32 gold_times = 4;
  if (has_gold_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->gold_times(), output);
  }
  
  // optional int32 mult = 5;
  if (has_mult()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->mult(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51403002::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exp(), target);
  }
  
  // optional int32 type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }
  
  // optional int32 gold_times = 4;
  if (has_gold_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->gold_times(), target);
  }
  
  // optional int32 mult = 5;
  if (has_mult()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->mult(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51403002::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 exp = 2;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }
    
    // optional int32 type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
    // optional int32 gold_times = 4;
    if (has_gold_times()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gold_times());
    }
    
    // optional int32 mult = 5;
    if (has_mult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mult());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51403002::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51403002* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51403002*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51403002::MergeFrom(const Proto51403002& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_gold_times()) {
      set_gold_times(from.gold_times());
    }
    if (from.has_mult()) {
      set_mult(from.mult());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51403002::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51403002::CopyFrom(const Proto51403002& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51403002::IsInitialized() const {
  
  return true;
}

void Proto51403002::Swap(Proto51403002* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(exp_, other->exp_);
    std::swap(type_, other->type_);
    std::swap(gold_times_, other->gold_times_);
    std::swap(mult_, other->mult_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51403002::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51403002_descriptor_;
  metadata.reflection = Proto51403002_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51403003::kLevelFieldNumber;
const int Proto51403003::kExpFieldNumber;
const int Proto51403003::kStageFieldNumber;
#endif  // !_MSC_VER

Proto51403003::Proto51403003()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51403003::InitAsDefaultInstance() {
}

Proto51403003::Proto51403003(const Proto51403003& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51403003::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  exp_ = 0;
  stage_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51403003::~Proto51403003() {
  SharedDtor();
}

void Proto51403003::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51403003::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51403003::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51403003_descriptor_;
}

const Proto51403003& Proto51403003::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto51403003* Proto51403003::default_instance_ = NULL;

Proto51403003* Proto51403003::New() const {
  return new Proto51403003;
}

void Proto51403003::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    exp_ = 0;
    stage_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51403003::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_exp;
        break;
      }
      
      // optional int32 exp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_stage;
        break;
      }
      
      // optional int32 stage = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_)));
          set_has_stage();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51403003::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->exp(), output);
  }
  
  // optional int32 stage = 3;
  if (has_stage()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->stage(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51403003::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }
  
  // optional int32 exp = 2;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->exp(), target);
  }
  
  // optional int32 stage = 3;
  if (has_stage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->stage(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51403003::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 exp = 2;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }
    
    // optional int32 stage = 3;
    if (has_stage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stage());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51403003::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51403003* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51403003*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51403003::MergeFrom(const Proto51403003& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_stage()) {
      set_stage(from.stage());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51403003::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51403003::CopyFrom(const Proto51403003& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51403003::IsInitialized() const {
  
  return true;
}

void Proto51403003::Swap(Proto51403003* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(exp_, other->exp_);
    std::swap(stage_, other->stage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51403003::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51403003_descriptor_;
  metadata.reflection = Proto51403003_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10400921::kScriptTypeFieldNumber;
#endif  // !_MSC_VER

Proto10400921::Proto10400921()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10400921::InitAsDefaultInstance() {
}

Proto10400921::Proto10400921(const Proto10400921& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10400921::SharedCtor() {
  _cached_size_ = 0;
  script_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10400921::~Proto10400921() {
  SharedDtor();
}

void Proto10400921::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10400921::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10400921::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10400921_descriptor_;
}

const Proto10400921& Proto10400921::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10400921* Proto10400921::default_instance_ = NULL;

Proto10400921* Proto10400921::New() const {
  return new Proto10400921;
}

void Proto10400921::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10400921::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_type_)));
          set_has_script_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10400921::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_type = 1;
  if (has_script_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10400921::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_type = 1;
  if (has_script_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10400921::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_type = 1;
    if (has_script_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10400921::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10400921* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10400921*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10400921::MergeFrom(const Proto10400921& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_type()) {
      set_script_type(from.script_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10400921::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10400921::CopyFrom(const Proto10400921& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10400921::IsInitialized() const {
  
  return true;
}

void Proto10400921::Swap(Proto10400921* other) {
  if (other != this) {
    std::swap(script_type_, other->script_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10400921::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10400921_descriptor_;
  metadata.reflection = Proto10400921_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50400921::kScriptTypeFieldNumber;
const int Proto50400921::kResetInfoFieldNumber;
#endif  // !_MSC_VER

Proto50400921::Proto50400921()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50400921::InitAsDefaultInstance() {
}

Proto50400921::Proto50400921(const Proto50400921& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50400921::SharedCtor() {
  _cached_size_ = 0;
  script_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50400921::~Proto50400921() {
  SharedDtor();
}

void Proto50400921::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50400921::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50400921::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50400921_descriptor_;
}

const Proto50400921& Proto50400921::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto50400921* Proto50400921::default_instance_ = NULL;

Proto50400921* Proto50400921::New() const {
  return new Proto50400921;
}

void Proto50400921::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    script_type_ = 0;
  }
  reset_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50400921::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 script_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &script_type_)));
          set_has_script_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_reset_info;
        break;
      }
      
      // repeated .ProtoScriptReset reset_info = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_reset_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reset_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_reset_info;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50400921::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 script_type = 1;
  if (has_script_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->script_type(), output);
  }
  
  // repeated .ProtoScriptReset reset_info = 2;
  for (int i = 0; i < this->reset_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->reset_info(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50400921::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 script_type = 1;
  if (has_script_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->script_type(), target);
  }
  
  // repeated .ProtoScriptReset reset_info = 2;
  for (int i = 0; i < this->reset_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->reset_info(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50400921::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 script_type = 1;
    if (has_script_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->script_type());
    }
    
  }
  // repeated .ProtoScriptReset reset_info = 2;
  total_size += 1 * this->reset_info_size();
  for (int i = 0; i < this->reset_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reset_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50400921::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50400921* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50400921*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50400921::MergeFrom(const Proto50400921& from) {
  GOOGLE_CHECK_NE(&from, this);
  reset_info_.MergeFrom(from.reset_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_script_type()) {
      set_script_type(from.script_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50400921::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50400921::CopyFrom(const Proto50400921& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50400921::IsInitialized() const {
  
  return true;
}

void Proto50400921::Swap(Proto50400921* other) {
  if (other != this) {
    std::swap(script_type_, other->script_type_);
    reset_info_.Swap(&other->reset_info_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50400921::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50400921_descriptor_;
  metadata.reflection = Proto50400921_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100217::kFirstTypeFieldNumber;
#endif  // !_MSC_VER

Proto10100217::Proto10100217()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100217::InitAsDefaultInstance() {
}

Proto10100217::Proto10100217(const Proto10100217& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100217::SharedCtor() {
  _cached_size_ = 0;
  first_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100217::~Proto10100217() {
  SharedDtor();
}

void Proto10100217::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100217::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100217::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100217_descriptor_;
}

const Proto10100217& Proto10100217::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10100217* Proto10100217::default_instance_ = NULL;

Proto10100217* Proto10100217::New() const {
  return new Proto10100217;
}

void Proto10100217::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    first_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100217::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 first_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_type_)));
          set_has_first_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100217::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 first_type = 1;
  if (has_first_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->first_type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100217::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 first_type = 1;
  if (has_first_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->first_type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100217::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 first_type = 1;
    if (has_first_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100217::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100217* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100217*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100217::MergeFrom(const Proto10100217& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_first_type()) {
      set_first_type(from.first_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100217::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100217::CopyFrom(const Proto10100217& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100217::IsInitialized() const {
  
  return true;
}

void Proto10100217::Swap(Proto10100217* other) {
  if (other != this) {
    std::swap(first_type_, other->first_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100217::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100217_descriptor_;
  metadata.reflection = Proto10100217_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100217::kFirstTypeFieldNumber;
const int Proto50100217::kActNameListFieldNumber;
#endif  // !_MSC_VER

Proto50100217::Proto50100217()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100217::InitAsDefaultInstance() {
}

Proto50100217::Proto50100217(const Proto50100217& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100217::SharedCtor() {
  _cached_size_ = 0;
  first_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100217::~Proto50100217() {
  SharedDtor();
}

void Proto50100217::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100217::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100217::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100217_descriptor_;
}

const Proto50100217& Proto50100217::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto50100217* Proto50100217::default_instance_ = NULL;

Proto50100217* Proto50100217::New() const {
  return new Proto50100217;
}

void Proto50100217::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    first_type_ = 0;
  }
  act_name_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100217::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 first_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_type_)));
          set_has_first_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_act_name_list;
        break;
      }
      
      // repeated .ProtoBackActName act_name_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_name_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_act_name_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_act_name_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100217::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 first_type = 1;
  if (has_first_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->first_type(), output);
  }
  
  // repeated .ProtoBackActName act_name_list = 2;
  for (int i = 0; i < this->act_name_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->act_name_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100217::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 first_type = 1;
  if (has_first_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->first_type(), target);
  }
  
  // repeated .ProtoBackActName act_name_list = 2;
  for (int i = 0; i < this->act_name_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->act_name_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100217::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 first_type = 1;
    if (has_first_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_type());
    }
    
  }
  // repeated .ProtoBackActName act_name_list = 2;
  total_size += 1 * this->act_name_list_size();
  for (int i = 0; i < this->act_name_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->act_name_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100217::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100217* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100217*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100217::MergeFrom(const Proto50100217& from) {
  GOOGLE_CHECK_NE(&from, this);
  act_name_list_.MergeFrom(from.act_name_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_first_type()) {
      set_first_type(from.first_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100217::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100217::CopyFrom(const Proto50100217& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100217::IsInitialized() const {
  
  return true;
}

void Proto50100217::Swap(Proto50100217* other) {
  if (other != this) {
    std::swap(first_type_, other->first_type_);
    act_name_list_.Swap(&other->act_name_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100217::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100217_descriptor_;
  metadata.reflection = Proto50100217_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100218::kActIdFieldNumber;
#endif  // !_MSC_VER

Proto10100218::Proto10100218()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100218::InitAsDefaultInstance() {
}

Proto10100218::Proto10100218(const Proto10100218& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100218::SharedCtor() {
  _cached_size_ = 0;
  act_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100218::~Proto10100218() {
  SharedDtor();
}

void Proto10100218::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100218::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100218::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100218_descriptor_;
}

const Proto10100218& Proto10100218::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10100218* Proto10100218::default_instance_ = NULL;

Proto10100218* Proto10100218::New() const {
  return new Proto10100218;
}

void Proto10100218::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    act_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100218::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 act_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_id_)));
          set_has_act_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100218::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 act_id = 1;
  if (has_act_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->act_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100218::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 act_id = 1;
  if (has_act_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->act_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100218::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 act_id = 1;
    if (has_act_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100218::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100218* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100218*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100218::MergeFrom(const Proto10100218& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_act_id()) {
      set_act_id(from.act_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100218::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100218::CopyFrom(const Proto10100218& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100218::IsInitialized() const {
  
  return true;
}

void Proto10100218::Swap(Proto10100218* other) {
  if (other != this) {
    std::swap(act_id_, other->act_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100218::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100218_descriptor_;
  metadata.reflection = Proto10100218_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100218::kActIdFieldNumber;
const int Proto50100218::kSystemTickFieldNumber;
const int Proto50100218::kActInfoFieldNumber;
const int Proto50100218::kAccuRechargeFieldNumber;
const int Proto50100218::kAccuConsumFieldNumber;
#endif  // !_MSC_VER

Proto50100218::Proto50100218()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100218::InitAsDefaultInstance() {
  act_info_ = const_cast< ::ProtoBackActInfo*>(&::ProtoBackActInfo::default_instance());
}

Proto50100218::Proto50100218(const Proto50100218& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100218::SharedCtor() {
  _cached_size_ = 0;
  act_id_ = 0;
  system_tick_ = 0;
  act_info_ = NULL;
  accu_recharge_ = 0;
  accu_consum_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100218::~Proto50100218() {
  SharedDtor();
}

void Proto50100218::SharedDtor() {
  if (this != default_instance_) {
    delete act_info_;
  }
}

void Proto50100218::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100218::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100218_descriptor_;
}

const Proto50100218& Proto50100218::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto50100218* Proto50100218::default_instance_ = NULL;

Proto50100218* Proto50100218::New() const {
  return new Proto50100218;
}

void Proto50100218::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    act_id_ = 0;
    system_tick_ = 0;
    if (has_act_info()) {
      if (act_info_ != NULL) act_info_->::ProtoBackActInfo::Clear();
    }
    accu_recharge_ = 0;
    accu_consum_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100218::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 act_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_id_)));
          set_has_act_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_system_tick;
        break;
      }
      
      // optional int32 system_tick = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_system_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &system_tick_)));
          set_has_system_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_act_info;
        break;
      }
      
      // optional .ProtoBackActInfo act_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_act_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_accu_recharge;
        break;
      }
      
      // optional int32 accu_recharge = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_accu_recharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &accu_recharge_)));
          set_has_accu_recharge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_accu_consum;
        break;
      }
      
      // optional int32 accu_consum = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_accu_consum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &accu_consum_)));
          set_has_accu_consum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100218::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 act_id = 1;
  if (has_act_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->act_id(), output);
  }
  
  // optional int32 system_tick = 2;
  if (has_system_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->system_tick(), output);
  }
  
  // optional .ProtoBackActInfo act_info = 3;
  if (has_act_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->act_info(), output);
  }
  
  // optional int32 accu_recharge = 4;
  if (has_accu_recharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->accu_recharge(), output);
  }
  
  // optional int32 accu_consum = 5;
  if (has_accu_consum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->accu_consum(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100218::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 act_id = 1;
  if (has_act_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->act_id(), target);
  }
  
  // optional int32 system_tick = 2;
  if (has_system_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->system_tick(), target);
  }
  
  // optional .ProtoBackActInfo act_info = 3;
  if (has_act_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->act_info(), target);
  }
  
  // optional int32 accu_recharge = 4;
  if (has_accu_recharge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->accu_recharge(), target);
  }
  
  // optional int32 accu_consum = 5;
  if (has_accu_consum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->accu_consum(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100218::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 act_id = 1;
    if (has_act_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_id());
    }
    
    // optional int32 system_tick = 2;
    if (has_system_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->system_tick());
    }
    
    // optional .ProtoBackActInfo act_info = 3;
    if (has_act_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->act_info());
    }
    
    // optional int32 accu_recharge = 4;
    if (has_accu_recharge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->accu_recharge());
    }
    
    // optional int32 accu_consum = 5;
    if (has_accu_consum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->accu_consum());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100218::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100218* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100218*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100218::MergeFrom(const Proto50100218& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_act_id()) {
      set_act_id(from.act_id());
    }
    if (from.has_system_tick()) {
      set_system_tick(from.system_tick());
    }
    if (from.has_act_info()) {
      mutable_act_info()->::ProtoBackActInfo::MergeFrom(from.act_info());
    }
    if (from.has_accu_recharge()) {
      set_accu_recharge(from.accu_recharge());
    }
    if (from.has_accu_consum()) {
      set_accu_consum(from.accu_consum());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100218::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100218::CopyFrom(const Proto50100218& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100218::IsInitialized() const {
  
  return true;
}

void Proto50100218::Swap(Proto50100218* other) {
  if (other != this) {
    std::swap(act_id_, other->act_id_);
    std::swap(system_tick_, other->system_tick_);
    std::swap(act_info_, other->act_info_);
    std::swap(accu_recharge_, other->accu_recharge_);
    std::swap(accu_consum_, other->accu_consum_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100218::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100218_descriptor_;
  metadata.reflection = Proto50100218_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100219::kActIdFieldNumber;
const int Proto10100219::kRewardIdFieldNumber;
#endif  // !_MSC_VER

Proto10100219::Proto10100219()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100219::InitAsDefaultInstance() {
}

Proto10100219::Proto10100219(const Proto10100219& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100219::SharedCtor() {
  _cached_size_ = 0;
  act_id_ = 0;
  reward_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100219::~Proto10100219() {
  SharedDtor();
}

void Proto10100219::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100219::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100219::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100219_descriptor_;
}

const Proto10100219& Proto10100219::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10100219* Proto10100219::default_instance_ = NULL;

Proto10100219* Proto10100219::New() const {
  return new Proto10100219;
}

void Proto10100219::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    act_id_ = 0;
    reward_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100219::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 act_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_id_)));
          set_has_act_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_reward_id;
        break;
      }
      
      // optional int32 reward_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_id_)));
          set_has_reward_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100219::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 act_id = 1;
  if (has_act_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->act_id(), output);
  }
  
  // optional int32 reward_id = 2;
  if (has_reward_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reward_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100219::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 act_id = 1;
  if (has_act_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->act_id(), target);
  }
  
  // optional int32 reward_id = 2;
  if (has_reward_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reward_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100219::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 act_id = 1;
    if (has_act_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_id());
    }
    
    // optional int32 reward_id = 2;
    if (has_reward_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100219::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100219* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100219*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100219::MergeFrom(const Proto10100219& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_act_id()) {
      set_act_id(from.act_id());
    }
    if (from.has_reward_id()) {
      set_reward_id(from.reward_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100219::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100219::CopyFrom(const Proto10100219& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100219::IsInitialized() const {
  
  return true;
}

void Proto10100219::Swap(Proto10100219* other) {
  if (other != this) {
    std::swap(act_id_, other->act_id_);
    std::swap(reward_id_, other->reward_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100219::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100219_descriptor_;
  metadata.reflection = Proto10100219_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80100201::kShowTypeFieldNumber;
const int Proto80100201::kRewardShowTypeFieldNumber;
#endif  // !_MSC_VER

Proto80100201::Proto80100201()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80100201::InitAsDefaultInstance() {
}

Proto80100201::Proto80100201(const Proto80100201& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80100201::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80100201::~Proto80100201() {
  SharedDtor();
}

void Proto80100201::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto80100201::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80100201::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80100201_descriptor_;
}

const Proto80100201& Proto80100201::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto80100201* Proto80100201::default_instance_ = NULL;

Proto80100201* Proto80100201::New() const {
  return new Proto80100201;
}

void Proto80100201::Clear() {
  show_type_.Clear();
  reward_show_type_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80100201::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 show_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_show_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_show_type())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_show_type())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_show_type;
        if (input->ExpectTag(16)) goto parse_reward_show_type;
        break;
      }
      
      // repeated int32 reward_show_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_show_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_reward_show_type())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_reward_show_type())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_reward_show_type;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80100201::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 show_type = 1;
  for (int i = 0; i < this->show_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->show_type(i), output);
  }
  
  // repeated int32 reward_show_type = 2;
  for (int i = 0; i < this->reward_show_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->reward_show_type(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80100201::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 show_type = 1;
  for (int i = 0; i < this->show_type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->show_type(i), target);
  }
  
  // repeated int32 reward_show_type = 2;
  for (int i = 0; i < this->reward_show_type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->reward_show_type(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80100201::ByteSize() const {
  int total_size = 0;
  
  // repeated int32 show_type = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->show_type_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->show_type(i));
    }
    total_size += 1 * this->show_type_size() + data_size;
  }
  
  // repeated int32 reward_show_type = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->reward_show_type_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->reward_show_type(i));
    }
    total_size += 1 * this->reward_show_type_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80100201::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80100201* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80100201*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80100201::MergeFrom(const Proto80100201& from) {
  GOOGLE_CHECK_NE(&from, this);
  show_type_.MergeFrom(from.show_type_);
  reward_show_type_.MergeFrom(from.reward_show_type_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80100201::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80100201::CopyFrom(const Proto80100201& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80100201::IsInitialized() const {
  
  return true;
}

void Proto80100201::Swap(Proto80100201* other) {
  if (other != this) {
    show_type_.Swap(&other->show_type_);
    reward_show_type_.Swap(&other->reward_show_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80100201::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80100201_descriptor_;
  metadata.reflection = Proto80100201_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51403004::kTransferFieldNumber;
const int Proto51403004::kSelectIdFieldNumber;
const int Proto51403004::kIsInCoolFieldNumber;
const int Proto51403004::kIsInTransferFieldNumber;
const int Proto51403004::kTransferTickFieldNumber;
const int Proto51403004::kLastFieldNumber;
const int Proto51403004::kCoolFieldNumber;
const int Proto51403004::kOpenRewardFieldNumber;
#endif  // !_MSC_VER

Proto51403004::Proto51403004()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51403004::InitAsDefaultInstance() {
}

Proto51403004::Proto51403004(const Proto51403004& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51403004::SharedCtor() {
  _cached_size_ = 0;
  select_id_ = 0;
  is_in_cool_ = 0;
  is_in_transfer_ = 0;
  transfer_tick_ = GOOGLE_LONGLONG(0);
  last_ = 0;
  cool_ = 0;
  open_reward_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51403004::~Proto51403004() {
  SharedDtor();
}

void Proto51403004::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51403004::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51403004::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51403004_descriptor_;
}

const Proto51403004& Proto51403004::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto51403004* Proto51403004::default_instance_ = NULL;

Proto51403004* Proto51403004::New() const {
  return new Proto51403004;
}

void Proto51403004::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    select_id_ = 0;
    is_in_cool_ = 0;
    is_in_transfer_ = 0;
    transfer_tick_ = GOOGLE_LONGLONG(0);
    last_ = 0;
    cool_ = 0;
    open_reward_ = 0;
  }
  transfer_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51403004::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoTransferClient transfer = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_transfer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_transfer()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_transfer;
        if (input->ExpectTag(16)) goto parse_select_id;
        break;
      }
      
      // optional int32 select_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_select_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &select_id_)));
          set_has_select_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_is_in_cool;
        break;
      }
      
      // optional int32 is_in_cool = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_in_cool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_in_cool_)));
          set_has_is_in_cool();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_is_in_transfer;
        break;
      }
      
      // optional int32 is_in_transfer = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_in_transfer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_in_transfer_)));
          set_has_is_in_transfer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_transfer_tick;
        break;
      }
      
      // optional int64 transfer_tick = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_transfer_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &transfer_tick_)));
          set_has_transfer_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_last;
        break;
      }
      
      // optional int32 last = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_)));
          set_has_last();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_cool;
        break;
      }
      
      // optional int32 cool = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cool_)));
          set_has_cool();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_open_reward;
        break;
      }
      
      // optional int32 open_reward = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_open_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_reward_)));
          set_has_open_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51403004::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoTransferClient transfer = 1;
  for (int i = 0; i < this->transfer_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->transfer(i), output);
  }
  
  // optional int32 select_id = 2;
  if (has_select_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->select_id(), output);
  }
  
  // optional int32 is_in_cool = 3;
  if (has_is_in_cool()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->is_in_cool(), output);
  }
  
  // optional int32 is_in_transfer = 4;
  if (has_is_in_transfer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->is_in_transfer(), output);
  }
  
  // optional int64 transfer_tick = 5;
  if (has_transfer_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->transfer_tick(), output);
  }
  
  // optional int32 last = 6;
  if (has_last()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->last(), output);
  }
  
  // optional int32 cool = 7;
  if (has_cool()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->cool(), output);
  }
  
  // optional int32 open_reward = 8;
  if (has_open_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->open_reward(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51403004::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoTransferClient transfer = 1;
  for (int i = 0; i < this->transfer_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->transfer(i), target);
  }
  
  // optional int32 select_id = 2;
  if (has_select_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->select_id(), target);
  }
  
  // optional int32 is_in_cool = 3;
  if (has_is_in_cool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->is_in_cool(), target);
  }
  
  // optional int32 is_in_transfer = 4;
  if (has_is_in_transfer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->is_in_transfer(), target);
  }
  
  // optional int64 transfer_tick = 5;
  if (has_transfer_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->transfer_tick(), target);
  }
  
  // optional int32 last = 6;
  if (has_last()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->last(), target);
  }
  
  // optional int32 cool = 7;
  if (has_cool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->cool(), target);
  }
  
  // optional int32 open_reward = 8;
  if (has_open_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->open_reward(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51403004::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 select_id = 2;
    if (has_select_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->select_id());
    }
    
    // optional int32 is_in_cool = 3;
    if (has_is_in_cool()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_in_cool());
    }
    
    // optional int32 is_in_transfer = 4;
    if (has_is_in_transfer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_in_transfer());
    }
    
    // optional int64 transfer_tick = 5;
    if (has_transfer_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->transfer_tick());
    }
    
    // optional int32 last = 6;
    if (has_last()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last());
    }
    
    // optional int32 cool = 7;
    if (has_cool()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cool());
    }
    
    // optional int32 open_reward = 8;
    if (has_open_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open_reward());
    }
    
  }
  // repeated .ProtoTransferClient transfer = 1;
  total_size += 1 * this->transfer_size();
  for (int i = 0; i < this->transfer_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->transfer(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51403004::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51403004* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51403004*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51403004::MergeFrom(const Proto51403004& from) {
  GOOGLE_CHECK_NE(&from, this);
  transfer_.MergeFrom(from.transfer_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_select_id()) {
      set_select_id(from.select_id());
    }
    if (from.has_is_in_cool()) {
      set_is_in_cool(from.is_in_cool());
    }
    if (from.has_is_in_transfer()) {
      set_is_in_transfer(from.is_in_transfer());
    }
    if (from.has_transfer_tick()) {
      set_transfer_tick(from.transfer_tick());
    }
    if (from.has_last()) {
      set_last(from.last());
    }
    if (from.has_cool()) {
      set_cool(from.cool());
    }
    if (from.has_open_reward()) {
      set_open_reward(from.open_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51403004::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51403004::CopyFrom(const Proto51403004& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51403004::IsInitialized() const {
  
  return true;
}

void Proto51403004::Swap(Proto51403004* other) {
  if (other != this) {
    transfer_.Swap(&other->transfer_);
    std::swap(select_id_, other->select_id_);
    std::swap(is_in_cool_, other->is_in_cool_);
    std::swap(is_in_transfer_, other->is_in_transfer_);
    std::swap(transfer_tick_, other->transfer_tick_);
    std::swap(last_, other->last_);
    std::swap(cool_, other->cool_);
    std::swap(open_reward_, other->open_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51403004::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51403004_descriptor_;
  metadata.reflection = Proto51403004_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100636::kLeftTickFieldNumber;
#endif  // !_MSC_VER

Proto50100636::Proto50100636()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100636::InitAsDefaultInstance() {
}

Proto50100636::Proto50100636(const Proto50100636& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100636::SharedCtor() {
  _cached_size_ = 0;
  left_tick_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100636::~Proto50100636() {
  SharedDtor();
}

void Proto50100636::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100636::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100636::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100636_descriptor_;
}

const Proto50100636& Proto50100636::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto50100636* Proto50100636::default_instance_ = NULL;

Proto50100636* Proto50100636::New() const {
  return new Proto50100636;
}

void Proto50100636::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    left_tick_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100636::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 left_tick = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_tick_)));
          set_has_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100636::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 left_tick = 1;
  if (has_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_tick(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100636::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 left_tick = 1;
  if (has_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_tick(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100636::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 left_tick = 1;
    if (has_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_tick());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100636::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100636* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100636*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100636::MergeFrom(const Proto50100636& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left_tick()) {
      set_left_tick(from.left_tick());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100636::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100636::CopyFrom(const Proto50100636& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100636::IsInitialized() const {
  
  return true;
}

void Proto50100636::Swap(Proto50100636* other) {
  if (other != this) {
    std::swap(left_tick_, other->left_tick_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100636::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100636_descriptor_;
  metadata.reflection = Proto50100636_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11403005::kTransferIdFieldNumber;
#endif  // !_MSC_VER

Proto11403005::Proto11403005()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11403005::InitAsDefaultInstance() {
}

Proto11403005::Proto11403005(const Proto11403005& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11403005::SharedCtor() {
  _cached_size_ = 0;
  transfer_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11403005::~Proto11403005() {
  SharedDtor();
}

void Proto11403005::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11403005::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11403005::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11403005_descriptor_;
}

const Proto11403005& Proto11403005::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto11403005* Proto11403005::default_instance_ = NULL;

Proto11403005* Proto11403005::New() const {
  return new Proto11403005;
}

void Proto11403005::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    transfer_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11403005::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 transfer_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transfer_id_)));
          set_has_transfer_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11403005::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 transfer_id = 1;
  if (has_transfer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->transfer_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11403005::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 transfer_id = 1;
  if (has_transfer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->transfer_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11403005::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 transfer_id = 1;
    if (has_transfer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transfer_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11403005::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11403005* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11403005*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11403005::MergeFrom(const Proto11403005& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_transfer_id()) {
      set_transfer_id(from.transfer_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11403005::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11403005::CopyFrom(const Proto11403005& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11403005::IsInitialized() const {
  
  return true;
}

void Proto11403005::Swap(Proto11403005* other) {
  if (other != this) {
    std::swap(transfer_id_, other->transfer_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11403005::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11403005_descriptor_;
  metadata.reflection = Proto11403005_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51403005::kTansferIdFieldNumber;
#endif  // !_MSC_VER

Proto51403005::Proto51403005()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51403005::InitAsDefaultInstance() {
}

Proto51403005::Proto51403005(const Proto51403005& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51403005::SharedCtor() {
  _cached_size_ = 0;
  tansfer_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51403005::~Proto51403005() {
  SharedDtor();
}

void Proto51403005::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51403005::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51403005::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51403005_descriptor_;
}

const Proto51403005& Proto51403005::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto51403005* Proto51403005::default_instance_ = NULL;

Proto51403005* Proto51403005::New() const {
  return new Proto51403005;
}

void Proto51403005::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tansfer_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51403005::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tansfer_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tansfer_id_)));
          set_has_tansfer_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51403005::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 tansfer_id = 1;
  if (has_tansfer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tansfer_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51403005::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 tansfer_id = 1;
  if (has_tansfer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tansfer_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51403005::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 tansfer_id = 1;
    if (has_tansfer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tansfer_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51403005::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51403005* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51403005*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51403005::MergeFrom(const Proto51403005& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tansfer_id()) {
      set_tansfer_id(from.tansfer_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51403005::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51403005::CopyFrom(const Proto51403005& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51403005::IsInitialized() const {
  
  return true;
}

void Proto51403005::Swap(Proto51403005* other) {
  if (other != this) {
    std::swap(tansfer_id_, other->tansfer_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51403005::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51403005_descriptor_;
  metadata.reflection = Proto51403005_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51403006::kTransferTickFieldNumber;
const int Proto51403006::kLastFieldNumber;
const int Proto51403006::kTransferIdFieldNumber;
#endif  // !_MSC_VER

Proto51403006::Proto51403006()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51403006::InitAsDefaultInstance() {
}

Proto51403006::Proto51403006(const Proto51403006& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51403006::SharedCtor() {
  _cached_size_ = 0;
  transfer_tick_ = GOOGLE_LONGLONG(0);
  last_ = 0;
  transfer_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51403006::~Proto51403006() {
  SharedDtor();
}

void Proto51403006::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51403006::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51403006::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51403006_descriptor_;
}

const Proto51403006& Proto51403006::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto51403006* Proto51403006::default_instance_ = NULL;

Proto51403006* Proto51403006::New() const {
  return new Proto51403006;
}

void Proto51403006::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    transfer_tick_ = GOOGLE_LONGLONG(0);
    last_ = 0;
    transfer_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51403006::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 transfer_tick = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &transfer_tick_)));
          set_has_transfer_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_last;
        break;
      }
      
      // optional int32 last = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_last:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_)));
          set_has_last();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_transfer_id;
        break;
      }
      
      // optional int32 transfer_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_transfer_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transfer_id_)));
          set_has_transfer_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51403006::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 transfer_tick = 1;
  if (has_transfer_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->transfer_tick(), output);
  }
  
  // optional int32 last = 2;
  if (has_last()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->last(), output);
  }
  
  // optional int32 transfer_id = 3;
  if (has_transfer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->transfer_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51403006::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 transfer_tick = 1;
  if (has_transfer_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->transfer_tick(), target);
  }
  
  // optional int32 last = 2;
  if (has_last()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->last(), target);
  }
  
  // optional int32 transfer_id = 3;
  if (has_transfer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->transfer_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51403006::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 transfer_tick = 1;
    if (has_transfer_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->transfer_tick());
    }
    
    // optional int32 last = 2;
    if (has_last()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last());
    }
    
    // optional int32 transfer_id = 3;
    if (has_transfer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transfer_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51403006::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51403006* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51403006*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51403006::MergeFrom(const Proto51403006& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_transfer_tick()) {
      set_transfer_tick(from.transfer_tick());
    }
    if (from.has_last()) {
      set_last(from.last());
    }
    if (from.has_transfer_id()) {
      set_transfer_id(from.transfer_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51403006::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51403006::CopyFrom(const Proto51403006& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51403006::IsInitialized() const {
  
  return true;
}

void Proto51403006::Swap(Proto51403006* other) {
  if (other != this) {
    std::swap(transfer_tick_, other->transfer_tick_);
    std::swap(last_, other->last_);
    std::swap(transfer_id_, other->transfer_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51403006::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51403006_descriptor_;
  metadata.reflection = Proto51403006_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100220::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto10100220::Proto10100220()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100220::InitAsDefaultInstance() {
}

Proto10100220::Proto10100220(const Proto10100220& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100220::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100220::~Proto10100220() {
  SharedDtor();
}

void Proto10100220::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100220::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100220::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100220_descriptor_;
}

const Proto10100220& Proto10100220::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10100220* Proto10100220::default_instance_ = NULL;

Proto10100220* Proto10100220::New() const {
  return new Proto10100220;
}

void Proto10100220::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100220::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100220::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100220::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100220::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100220::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100220* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100220*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100220::MergeFrom(const Proto10100220& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100220::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100220::CopyFrom(const Proto10100220& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100220::IsInitialized() const {
  
  return true;
}

void Proto10100220::Swap(Proto10100220* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100220::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100220_descriptor_;
  metadata.reflection = Proto10100220_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100220::kTaskListFieldNumber;
const int Proto50100220::kPersonGoldFieldNumber;
const int Proto50100220::kServerGoldFieldNumber;
const int Proto50100220::kActivityLeftTimeFieldNumber;
const int Proto50100220::kTodayLeftTimeFieldNumber;
const int Proto50100220::kPersonGoldPlusFieldNumber;
const int Proto50100220::kActRewardItemFieldNumber;
const int Proto50100220::kIsOpenFieldNumber;
#endif  // !_MSC_VER

Proto50100220::Proto50100220()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100220::InitAsDefaultInstance() {
}

Proto50100220::Proto50100220(const Proto50100220& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100220::SharedCtor() {
  _cached_size_ = 0;
  person_gold_ = 0;
  server_gold_ = 0;
  activity_left_time_ = 0;
  today_left_time_ = 0;
  person_gold_plus_ = 0;
  is_open_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100220::~Proto50100220() {
  SharedDtor();
}

void Proto50100220::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100220::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100220::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100220_descriptor_;
}

const Proto50100220& Proto50100220::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto50100220* Proto50100220::default_instance_ = NULL;

Proto50100220* Proto50100220::New() const {
  return new Proto50100220;
}

void Proto50100220::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    person_gold_ = 0;
    server_gold_ = 0;
    activity_left_time_ = 0;
    today_left_time_ = 0;
    person_gold_plus_ = 0;
    is_open_ = 0;
  }
  task_list_.Clear();
  act_reward_item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100220::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PActTastList task_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_task_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_task_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_task_list;
        if (input->ExpectTag(16)) goto parse_person_gold;
        break;
      }
      
      // optional int32 person_gold = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_person_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &person_gold_)));
          set_has_person_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_server_gold;
        break;
      }
      
      // optional int32 server_gold = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_server_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &server_gold_)));
          set_has_server_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_activity_left_time;
        break;
      }
      
      // optional int32 activity_left_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_activity_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_left_time_)));
          set_has_activity_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_today_left_time;
        break;
      }
      
      // optional int32 today_left_time = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_today_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &today_left_time_)));
          set_has_today_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_person_gold_plus;
        break;
      }
      
      // optional int32 person_gold_plus = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_person_gold_plus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &person_gold_plus_)));
          set_has_person_gold_plus();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_act_reward_item;
        break;
      }
      
      // repeated int32 act_reward_item = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_reward_item:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_act_reward_item())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_act_reward_item())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_act_reward_item;
        if (input->ExpectTag(64)) goto parse_is_open;
        break;
      }
      
      // optional int32 is_open = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_is_open:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_open_)));
          set_has_is_open();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100220::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .PActTastList task_list = 1;
  for (int i = 0; i < this->task_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->task_list(i), output);
  }
  
  // optional int32 person_gold = 2;
  if (has_person_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->person_gold(), output);
  }
  
  // optional int32 server_gold = 3;
  if (has_server_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->server_gold(), output);
  }
  
  // optional int32 activity_left_time = 4;
  if (has_activity_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->activity_left_time(), output);
  }
  
  // optional int32 today_left_time = 5;
  if (has_today_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->today_left_time(), output);
  }
  
  // optional int32 person_gold_plus = 6;
  if (has_person_gold_plus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->person_gold_plus(), output);
  }
  
  // repeated int32 act_reward_item = 7;
  for (int i = 0; i < this->act_reward_item_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->act_reward_item(i), output);
  }
  
  // optional int32 is_open = 8;
  if (has_is_open()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->is_open(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100220::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .PActTastList task_list = 1;
  for (int i = 0; i < this->task_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->task_list(i), target);
  }
  
  // optional int32 person_gold = 2;
  if (has_person_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->person_gold(), target);
  }
  
  // optional int32 server_gold = 3;
  if (has_server_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->server_gold(), target);
  }
  
  // optional int32 activity_left_time = 4;
  if (has_activity_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->activity_left_time(), target);
  }
  
  // optional int32 today_left_time = 5;
  if (has_today_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->today_left_time(), target);
  }
  
  // optional int32 person_gold_plus = 6;
  if (has_person_gold_plus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->person_gold_plus(), target);
  }
  
  // repeated int32 act_reward_item = 7;
  for (int i = 0; i < this->act_reward_item_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->act_reward_item(i), target);
  }
  
  // optional int32 is_open = 8;
  if (has_is_open()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->is_open(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100220::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 person_gold = 2;
    if (has_person_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->person_gold());
    }
    
    // optional int32 server_gold = 3;
    if (has_server_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->server_gold());
    }
    
    // optional int32 activity_left_time = 4;
    if (has_activity_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_left_time());
    }
    
    // optional int32 today_left_time = 5;
    if (has_today_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->today_left_time());
    }
    
    // optional int32 person_gold_plus = 6;
    if (has_person_gold_plus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->person_gold_plus());
    }
    
    // optional int32 is_open = 8;
    if (has_is_open()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_open());
    }
    
  }
  // repeated .PActTastList task_list = 1;
  total_size += 1 * this->task_list_size();
  for (int i = 0; i < this->task_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->task_list(i));
  }
  
  // repeated int32 act_reward_item = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->act_reward_item_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->act_reward_item(i));
    }
    total_size += 1 * this->act_reward_item_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100220::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100220* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100220*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100220::MergeFrom(const Proto50100220& from) {
  GOOGLE_CHECK_NE(&from, this);
  task_list_.MergeFrom(from.task_list_);
  act_reward_item_.MergeFrom(from.act_reward_item_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_person_gold()) {
      set_person_gold(from.person_gold());
    }
    if (from.has_server_gold()) {
      set_server_gold(from.server_gold());
    }
    if (from.has_activity_left_time()) {
      set_activity_left_time(from.activity_left_time());
    }
    if (from.has_today_left_time()) {
      set_today_left_time(from.today_left_time());
    }
    if (from.has_person_gold_plus()) {
      set_person_gold_plus(from.person_gold_plus());
    }
    if (from.has_is_open()) {
      set_is_open(from.is_open());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100220::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100220::CopyFrom(const Proto50100220& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100220::IsInitialized() const {
  
  return true;
}

void Proto50100220::Swap(Proto50100220* other) {
  if (other != this) {
    task_list_.Swap(&other->task_list_);
    std::swap(person_gold_, other->person_gold_);
    std::swap(server_gold_, other->server_gold_);
    std::swap(activity_left_time_, other->activity_left_time_);
    std::swap(today_left_time_, other->today_left_time_);
    std::swap(person_gold_plus_, other->person_gold_plus_);
    act_reward_item_.Swap(&other->act_reward_item_);
    std::swap(is_open_, other->is_open_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100220::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100220_descriptor_;
  metadata.reflection = Proto50100220_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100221::kActivityIdFieldNumber;
const int Proto10100221::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100221::Proto10100221()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100221::InitAsDefaultInstance() {
}

Proto10100221::Proto10100221(const Proto10100221& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100221::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100221::~Proto10100221() {
  SharedDtor();
}

void Proto10100221::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100221::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100221::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100221_descriptor_;
}

const Proto10100221& Proto10100221::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10100221* Proto10100221::default_instance_ = NULL;

Proto10100221* Proto10100221::New() const {
  return new Proto10100221;
}

void Proto10100221::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100221::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }
      
      // optional int32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100221::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100221::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100221::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100221::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100221* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100221*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100221::MergeFrom(const Proto10100221& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100221::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100221::CopyFrom(const Proto10100221& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100221::IsInitialized() const {
  
  return true;
}

void Proto10100221::Swap(Proto10100221* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100221::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100221_descriptor_;
  metadata.reflection = Proto10100221_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10404005::kBuyTypeFieldNumber;
const int Proto10404005::kHicktyIdFieldNumber;
#endif  // !_MSC_VER

Proto10404005::Proto10404005()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10404005::InitAsDefaultInstance() {
}

Proto10404005::Proto10404005(const Proto10404005& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10404005::SharedCtor() {
  _cached_size_ = 0;
  buy_type_ = 0;
  hickty_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10404005::~Proto10404005() {
  SharedDtor();
}

void Proto10404005::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10404005::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10404005::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10404005_descriptor_;
}

const Proto10404005& Proto10404005::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10404005* Proto10404005::default_instance_ = NULL;

Proto10404005* Proto10404005::New() const {
  return new Proto10404005;
}

void Proto10404005::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    buy_type_ = 0;
    hickty_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10404005::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 buy_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_type_)));
          set_has_buy_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_hickty_id;
        break;
      }
      
      // optional int32 hickty_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hickty_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hickty_id_)));
          set_has_hickty_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10404005::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 buy_type = 1;
  if (has_buy_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->buy_type(), output);
  }
  
  // optional int32 hickty_id = 2;
  if (has_hickty_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hickty_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10404005::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 buy_type = 1;
  if (has_buy_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->buy_type(), target);
  }
  
  // optional int32 hickty_id = 2;
  if (has_hickty_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hickty_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10404005::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 buy_type = 1;
    if (has_buy_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_type());
    }
    
    // optional int32 hickty_id = 2;
    if (has_hickty_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hickty_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10404005::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10404005* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10404005*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10404005::MergeFrom(const Proto10404005& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buy_type()) {
      set_buy_type(from.buy_type());
    }
    if (from.has_hickty_id()) {
      set_hickty_id(from.hickty_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10404005::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10404005::CopyFrom(const Proto10404005& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10404005::IsInitialized() const {
  
  return true;
}

void Proto10404005::Swap(Proto10404005* other) {
  if (other != this) {
    std::swap(buy_type_, other->buy_type_);
    std::swap(hickty_id_, other->hickty_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10404005::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10404005_descriptor_;
  metadata.reflection = Proto10404005_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto80404006::kPlayerScoreFieldNumber;
const int Proto80404006::kMyLeagueFieldNumber;
const int Proto80404006::kLeagueScoreFieldNumber;
const int Proto80404006::kMyResScoreFieldNumber;
const int Proto80404006::kCrtHicktyLevelFieldNumber;
const int Proto80404006::kCenterReliveBelongtoFieldNumber;
const int Proto80404006::kCenterReliveCrtBloodFieldNumber;
const int Proto80404006::kEnemyLeagueFieldNumber;
const int Proto80404006::kEnemyLeagueScoreFieldNumber;
const int Proto80404006::kFlagsCrtBloodFieldNumber;
const int Proto80404006::kTowerSurplusNumFieldNumber;
const int Proto80404006::kLeftTimeFieldNumber;
const int Proto80404006::kCampIdFieldNumber;
const int Proto80404006::kRewardIdFieldNumber;
const int Proto80404006::kArriveScoreFieldNumber;
#endif  // !_MSC_VER

Proto80404006::Proto80404006()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto80404006::InitAsDefaultInstance() {
}

Proto80404006::Proto80404006(const Proto80404006& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto80404006::SharedCtor() {
  _cached_size_ = 0;
  player_score_ = GOOGLE_LONGLONG(0);
  my_league_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  league_score_ = GOOGLE_LONGLONG(0);
  my_res_score_ = GOOGLE_LONGLONG(0);
  crt_hickty_level_ = 0;
  center_relive_belongto_ = GOOGLE_LONGLONG(0);
  center_relive_crt_blood_ = GOOGLE_LONGLONG(0);
  enemy_league_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  enemy_league_score_ = GOOGLE_LONGLONG(0);
  left_time_ = 0;
  camp_id_ = 0;
  reward_id_ = 0;
  arrive_score_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto80404006::~Proto80404006() {
  SharedDtor();
}

void Proto80404006::SharedDtor() {
  if (my_league_ != &::google::protobuf::internal::kEmptyString) {
    delete my_league_;
  }
  if (enemy_league_ != &::google::protobuf::internal::kEmptyString) {
    delete enemy_league_;
  }
  if (this != default_instance_) {
  }
}

void Proto80404006::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto80404006::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto80404006_descriptor_;
}

const Proto80404006& Proto80404006::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto80404006* Proto80404006::default_instance_ = NULL;

Proto80404006* Proto80404006::New() const {
  return new Proto80404006;
}

void Proto80404006::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    player_score_ = GOOGLE_LONGLONG(0);
    if (has_my_league()) {
      if (my_league_ != &::google::protobuf::internal::kEmptyString) {
        my_league_->clear();
      }
    }
    league_score_ = GOOGLE_LONGLONG(0);
    my_res_score_ = GOOGLE_LONGLONG(0);
    crt_hickty_level_ = 0;
    center_relive_belongto_ = GOOGLE_LONGLONG(0);
    center_relive_crt_blood_ = GOOGLE_LONGLONG(0);
    if (has_enemy_league()) {
      if (enemy_league_ != &::google::protobuf::internal::kEmptyString) {
        enemy_league_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    enemy_league_score_ = GOOGLE_LONGLONG(0);
    left_time_ = 0;
    camp_id_ = 0;
    reward_id_ = 0;
    arrive_score_ = 0;
  }
  flags_crt_blood_.Clear();
  tower_surplus_num_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto80404006::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 player_score = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &player_score_)));
          set_has_player_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_my_league;
        break;
      }
      
      // optional string my_league = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_my_league:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_my_league()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->my_league().data(), this->my_league().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_league_score;
        break;
      }
      
      // optional int64 league_score = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_league_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &league_score_)));
          set_has_league_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_my_res_score;
        break;
      }
      
      // optional int64 my_res_score = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_my_res_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &my_res_score_)));
          set_has_my_res_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_crt_hickty_level;
        break;
      }
      
      // optional int32 crt_hickty_level = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_crt_hickty_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &crt_hickty_level_)));
          set_has_crt_hickty_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_center_relive_belongto;
        break;
      }
      
      // optional int64 center_relive_belongto = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_center_relive_belongto:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &center_relive_belongto_)));
          set_has_center_relive_belongto();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_center_relive_crt_blood;
        break;
      }
      
      // optional int64 center_relive_crt_blood = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_center_relive_crt_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &center_relive_crt_blood_)));
          set_has_center_relive_crt_blood();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_enemy_league;
        break;
      }
      
      // optional string enemy_league = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_enemy_league:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_enemy_league()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->enemy_league().data(), this->enemy_league().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_enemy_league_score;
        break;
      }
      
      // optional int64 enemy_league_score = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_enemy_league_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &enemy_league_score_)));
          set_has_enemy_league_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_flags_crt_blood;
        break;
      }
      
      // repeated int64 flags_crt_blood = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flags_crt_blood:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 80, input, this->mutable_flags_crt_blood())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_flags_crt_blood())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_flags_crt_blood;
        if (input->ExpectTag(88)) goto parse_tower_surplus_num;
        break;
      }
      
      // repeated int64 tower_surplus_num = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tower_surplus_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 88, input, this->mutable_tower_surplus_num())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_tower_surplus_num())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_tower_surplus_num;
        if (input->ExpectTag(96)) goto parse_left_time;
        break;
      }
      
      // optional int32 left_time = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_time_)));
          set_has_left_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_camp_id;
        break;
      }
      
      // optional int32 camp_id = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_camp_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &camp_id_)));
          set_has_camp_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_reward_id;
        break;
      }
      
      // optional int32 reward_id = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_id_)));
          set_has_reward_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_arrive_score;
        break;
      }
      
      // optional int32 arrive_score = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_arrive_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arrive_score_)));
          set_has_arrive_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto80404006::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 player_score = 1;
  if (has_player_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->player_score(), output);
  }
  
  // optional string my_league = 2;
  if (has_my_league()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->my_league().data(), this->my_league().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->my_league(), output);
  }
  
  // optional int64 league_score = 3;
  if (has_league_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->league_score(), output);
  }
  
  // optional int64 my_res_score = 4;
  if (has_my_res_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->my_res_score(), output);
  }
  
  // optional int32 crt_hickty_level = 5;
  if (has_crt_hickty_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->crt_hickty_level(), output);
  }
  
  // optional int64 center_relive_belongto = 6;
  if (has_center_relive_belongto()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->center_relive_belongto(), output);
  }
  
  // optional int64 center_relive_crt_blood = 7;
  if (has_center_relive_crt_blood()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->center_relive_crt_blood(), output);
  }
  
  // optional string enemy_league = 8;
  if (has_enemy_league()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->enemy_league().data(), this->enemy_league().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->enemy_league(), output);
  }
  
  // optional int64 enemy_league_score = 9;
  if (has_enemy_league_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->enemy_league_score(), output);
  }
  
  // repeated int64 flags_crt_blood = 10;
  for (int i = 0; i < this->flags_crt_blood_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      10, this->flags_crt_blood(i), output);
  }
  
  // repeated int64 tower_surplus_num = 11;
  for (int i = 0; i < this->tower_surplus_num_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      11, this->tower_surplus_num(i), output);
  }
  
  // optional int32 left_time = 12;
  if (has_left_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->left_time(), output);
  }
  
  // optional int32 camp_id = 13;
  if (has_camp_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->camp_id(), output);
  }
  
  // optional int32 reward_id = 14;
  if (has_reward_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->reward_id(), output);
  }
  
  // optional int32 arrive_score = 15;
  if (has_arrive_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->arrive_score(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto80404006::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 player_score = 1;
  if (has_player_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->player_score(), target);
  }
  
  // optional string my_league = 2;
  if (has_my_league()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->my_league().data(), this->my_league().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->my_league(), target);
  }
  
  // optional int64 league_score = 3;
  if (has_league_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->league_score(), target);
  }
  
  // optional int64 my_res_score = 4;
  if (has_my_res_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->my_res_score(), target);
  }
  
  // optional int32 crt_hickty_level = 5;
  if (has_crt_hickty_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->crt_hickty_level(), target);
  }
  
  // optional int64 center_relive_belongto = 6;
  if (has_center_relive_belongto()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->center_relive_belongto(), target);
  }
  
  // optional int64 center_relive_crt_blood = 7;
  if (has_center_relive_crt_blood()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->center_relive_crt_blood(), target);
  }
  
  // optional string enemy_league = 8;
  if (has_enemy_league()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->enemy_league().data(), this->enemy_league().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->enemy_league(), target);
  }
  
  // optional int64 enemy_league_score = 9;
  if (has_enemy_league_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->enemy_league_score(), target);
  }
  
  // repeated int64 flags_crt_blood = 10;
  for (int i = 0; i < this->flags_crt_blood_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(10, this->flags_crt_blood(i), target);
  }
  
  // repeated int64 tower_surplus_num = 11;
  for (int i = 0; i < this->tower_surplus_num_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(11, this->tower_surplus_num(i), target);
  }
  
  // optional int32 left_time = 12;
  if (has_left_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->left_time(), target);
  }
  
  // optional int32 camp_id = 13;
  if (has_camp_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->camp_id(), target);
  }
  
  // optional int32 reward_id = 14;
  if (has_reward_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->reward_id(), target);
  }
  
  // optional int32 arrive_score = 15;
  if (has_arrive_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->arrive_score(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto80404006::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 player_score = 1;
    if (has_player_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->player_score());
    }
    
    // optional string my_league = 2;
    if (has_my_league()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->my_league());
    }
    
    // optional int64 league_score = 3;
    if (has_league_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->league_score());
    }
    
    // optional int64 my_res_score = 4;
    if (has_my_res_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->my_res_score());
    }
    
    // optional int32 crt_hickty_level = 5;
    if (has_crt_hickty_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->crt_hickty_level());
    }
    
    // optional int64 center_relive_belongto = 6;
    if (has_center_relive_belongto()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->center_relive_belongto());
    }
    
    // optional int64 center_relive_crt_blood = 7;
    if (has_center_relive_crt_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->center_relive_crt_blood());
    }
    
    // optional string enemy_league = 8;
    if (has_enemy_league()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->enemy_league());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 enemy_league_score = 9;
    if (has_enemy_league_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->enemy_league_score());
    }
    
    // optional int32 left_time = 12;
    if (has_left_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_time());
    }
    
    // optional int32 camp_id = 13;
    if (has_camp_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->camp_id());
    }
    
    // optional int32 reward_id = 14;
    if (has_reward_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_id());
    }
    
    // optional int32 arrive_score = 15;
    if (has_arrive_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->arrive_score());
    }
    
  }
  // repeated int64 flags_crt_blood = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->flags_crt_blood_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->flags_crt_blood(i));
    }
    total_size += 1 * this->flags_crt_blood_size() + data_size;
  }
  
  // repeated int64 tower_surplus_num = 11;
  {
    int data_size = 0;
    for (int i = 0; i < this->tower_surplus_num_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->tower_surplus_num(i));
    }
    total_size += 1 * this->tower_surplus_num_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto80404006::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto80404006* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto80404006*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto80404006::MergeFrom(const Proto80404006& from) {
  GOOGLE_CHECK_NE(&from, this);
  flags_crt_blood_.MergeFrom(from.flags_crt_blood_);
  tower_surplus_num_.MergeFrom(from.tower_surplus_num_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_score()) {
      set_player_score(from.player_score());
    }
    if (from.has_my_league()) {
      set_my_league(from.my_league());
    }
    if (from.has_league_score()) {
      set_league_score(from.league_score());
    }
    if (from.has_my_res_score()) {
      set_my_res_score(from.my_res_score());
    }
    if (from.has_crt_hickty_level()) {
      set_crt_hickty_level(from.crt_hickty_level());
    }
    if (from.has_center_relive_belongto()) {
      set_center_relive_belongto(from.center_relive_belongto());
    }
    if (from.has_center_relive_crt_blood()) {
      set_center_relive_crt_blood(from.center_relive_crt_blood());
    }
    if (from.has_enemy_league()) {
      set_enemy_league(from.enemy_league());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_enemy_league_score()) {
      set_enemy_league_score(from.enemy_league_score());
    }
    if (from.has_left_time()) {
      set_left_time(from.left_time());
    }
    if (from.has_camp_id()) {
      set_camp_id(from.camp_id());
    }
    if (from.has_reward_id()) {
      set_reward_id(from.reward_id());
    }
    if (from.has_arrive_score()) {
      set_arrive_score(from.arrive_score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto80404006::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto80404006::CopyFrom(const Proto80404006& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto80404006::IsInitialized() const {
  
  return true;
}

void Proto80404006::Swap(Proto80404006* other) {
  if (other != this) {
    std::swap(player_score_, other->player_score_);
    std::swap(my_league_, other->my_league_);
    std::swap(league_score_, other->league_score_);
    std::swap(my_res_score_, other->my_res_score_);
    std::swap(crt_hickty_level_, other->crt_hickty_level_);
    std::swap(center_relive_belongto_, other->center_relive_belongto_);
    std::swap(center_relive_crt_blood_, other->center_relive_crt_blood_);
    std::swap(enemy_league_, other->enemy_league_);
    std::swap(enemy_league_score_, other->enemy_league_score_);
    flags_crt_blood_.Swap(&other->flags_crt_blood_);
    tower_surplus_num_.Swap(&other->tower_surplus_num_);
    std::swap(left_time_, other->left_time_);
    std::swap(camp_id_, other->camp_id_);
    std::swap(reward_id_, other->reward_id_);
    std::swap(arrive_score_, other->arrive_score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto80404006::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto80404006_descriptor_;
  metadata.reflection = Proto80404006_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto81400801::kTransferIdFieldNumber;
#endif  // !_MSC_VER

Proto81400801::Proto81400801()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto81400801::InitAsDefaultInstance() {
}

Proto81400801::Proto81400801(const Proto81400801& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto81400801::SharedCtor() {
  _cached_size_ = 0;
  transfer_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto81400801::~Proto81400801() {
  SharedDtor();
}

void Proto81400801::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto81400801::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto81400801::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto81400801_descriptor_;
}

const Proto81400801& Proto81400801::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto81400801* Proto81400801::default_instance_ = NULL;

Proto81400801* Proto81400801::New() const {
  return new Proto81400801;
}

void Proto81400801::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    transfer_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto81400801::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 transfer_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transfer_id_)));
          set_has_transfer_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto81400801::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 transfer_id = 1;
  if (has_transfer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->transfer_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto81400801::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 transfer_id = 1;
  if (has_transfer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->transfer_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto81400801::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 transfer_id = 1;
    if (has_transfer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transfer_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto81400801::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto81400801* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto81400801*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto81400801::MergeFrom(const Proto81400801& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_transfer_id()) {
      set_transfer_id(from.transfer_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto81400801::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto81400801::CopyFrom(const Proto81400801& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto81400801::IsInitialized() const {
  
  return true;
}

void Proto81400801::Swap(Proto81400801* other) {
  if (other != this) {
    std::swap(transfer_id_, other->transfer_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto81400801::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto81400801_descriptor_;
  metadata.reflection = Proto81400801_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50404006::kReplyFieldNumber;
#endif  // !_MSC_VER

Proto50404006::Proto50404006()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50404006::InitAsDefaultInstance() {
}

Proto50404006::Proto50404006(const Proto50404006& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50404006::SharedCtor() {
  _cached_size_ = 0;
  reply_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50404006::~Proto50404006() {
  SharedDtor();
}

void Proto50404006::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50404006::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50404006::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50404006_descriptor_;
}

const Proto50404006& Proto50404006::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto50404006* Proto50404006::default_instance_ = NULL;

Proto50404006* Proto50404006::New() const {
  return new Proto50404006;
}

void Proto50404006::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    reply_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50404006::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 reply = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reply_)));
          set_has_reply();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50404006::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 reply = 1;
  if (has_reply()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->reply(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50404006::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 reply = 1;
  if (has_reply()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->reply(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50404006::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 reply = 1;
    if (has_reply()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reply());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50404006::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50404006* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50404006*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50404006::MergeFrom(const Proto50404006& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_reply()) {
      set_reply(from.reply());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50404006::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50404006::CopyFrom(const Proto50404006& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50404006::IsInitialized() const {
  
  return true;
}

void Proto50404006::Swap(Proto50404006* other) {
  if (other != this) {
    std::swap(reply_, other->reply_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50404006::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50404006_descriptor_;
  metadata.reflection = Proto50404006_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51403007::kOpenRewardFieldNumber;
#endif  // !_MSC_VER

Proto51403007::Proto51403007()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51403007::InitAsDefaultInstance() {
}

Proto51403007::Proto51403007(const Proto51403007& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51403007::SharedCtor() {
  _cached_size_ = 0;
  open_reward_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51403007::~Proto51403007() {
  SharedDtor();
}

void Proto51403007::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51403007::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51403007::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51403007_descriptor_;
}

const Proto51403007& Proto51403007::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto51403007* Proto51403007::default_instance_ = NULL;

Proto51403007* Proto51403007::New() const {
  return new Proto51403007;
}

void Proto51403007::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    open_reward_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51403007::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 open_reward = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_reward_)));
          set_has_open_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51403007::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 open_reward = 1;
  if (has_open_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->open_reward(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51403007::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 open_reward = 1;
  if (has_open_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->open_reward(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51403007::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 open_reward = 1;
    if (has_open_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open_reward());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51403007::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51403007* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51403007*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51403007::MergeFrom(const Proto51403007& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_open_reward()) {
      set_open_reward(from.open_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51403007::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51403007::CopyFrom(const Proto51403007& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51403007::IsInitialized() const {
  
  return true;
}

void Proto51403007::Swap(Proto51403007* other) {
  if (other != this) {
    std::swap(open_reward_, other->open_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51403007::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51403007_descriptor_;
  metadata.reflection = Proto51403007_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto11403008::kTransferIdFieldNumber;
#endif  // !_MSC_VER

Proto11403008::Proto11403008()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto11403008::InitAsDefaultInstance() {
}

Proto11403008::Proto11403008(const Proto11403008& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto11403008::SharedCtor() {
  _cached_size_ = 0;
  transfer_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto11403008::~Proto11403008() {
  SharedDtor();
}

void Proto11403008::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto11403008::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto11403008::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto11403008_descriptor_;
}

const Proto11403008& Proto11403008::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto11403008* Proto11403008::default_instance_ = NULL;

Proto11403008* Proto11403008::New() const {
  return new Proto11403008;
}

void Proto11403008::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    transfer_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto11403008::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 transfer_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transfer_id_)));
          set_has_transfer_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto11403008::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 transfer_id = 1;
  if (has_transfer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->transfer_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto11403008::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 transfer_id = 1;
  if (has_transfer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->transfer_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto11403008::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 transfer_id = 1;
    if (has_transfer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transfer_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto11403008::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto11403008* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto11403008*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto11403008::MergeFrom(const Proto11403008& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_transfer_id()) {
      set_transfer_id(from.transfer_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto11403008::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto11403008::CopyFrom(const Proto11403008& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto11403008::IsInitialized() const {
  
  return true;
}

void Proto11403008::Swap(Proto11403008* other) {
  if (other != this) {
    std::swap(transfer_id_, other->transfer_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto11403008::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto11403008_descriptor_;
  metadata.reflection = Proto11403008_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto51403008::kTransferIdFieldNumber;
#endif  // !_MSC_VER

Proto51403008::Proto51403008()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto51403008::InitAsDefaultInstance() {
}

Proto51403008::Proto51403008(const Proto51403008& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto51403008::SharedCtor() {
  _cached_size_ = 0;
  transfer_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto51403008::~Proto51403008() {
  SharedDtor();
}

void Proto51403008::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto51403008::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto51403008::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto51403008_descriptor_;
}

const Proto51403008& Proto51403008::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto51403008* Proto51403008::default_instance_ = NULL;

Proto51403008* Proto51403008::New() const {
  return new Proto51403008;
}

void Proto51403008::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    transfer_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto51403008::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 transfer_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transfer_id_)));
          set_has_transfer_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto51403008::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 transfer_id = 1;
  if (has_transfer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->transfer_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto51403008::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 transfer_id = 1;
  if (has_transfer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->transfer_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto51403008::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 transfer_id = 1;
    if (has_transfer_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->transfer_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto51403008::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto51403008* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto51403008*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto51403008::MergeFrom(const Proto51403008& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_transfer_id()) {
      set_transfer_id(from.transfer_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto51403008::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto51403008::CopyFrom(const Proto51403008& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto51403008::IsInitialized() const {
  
  return true;
}

void Proto51403008::Swap(Proto51403008* other) {
  if (other != this) {
    std::swap(transfer_id_, other->transfer_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto51403008::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto51403008_descriptor_;
  metadata.reflection = Proto51403008_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100222::kActIdFieldNumber;
const int Proto10100222::kPageFieldNumber;
#endif  // !_MSC_VER

Proto10100222::Proto10100222()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100222::InitAsDefaultInstance() {
}

Proto10100222::Proto10100222(const Proto10100222& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100222::SharedCtor() {
  _cached_size_ = 0;
  act_id_ = 0;
  page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100222::~Proto10100222() {
  SharedDtor();
}

void Proto10100222::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100222::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100222::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100222_descriptor_;
}

const Proto10100222& Proto10100222::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10100222* Proto10100222::default_instance_ = NULL;

Proto10100222* Proto10100222::New() const {
  return new Proto10100222;
}

void Proto10100222::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    act_id_ = 0;
    page_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100222::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 act_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &act_id_)));
          set_has_act_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_page;
        break;
      }
      
      // optional int32 page = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_)));
          set_has_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100222::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 act_id = 1;
  if (has_act_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->act_id(), output);
  }
  
  // optional int32 page = 2;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100222::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 act_id = 1;
  if (has_act_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->act_id(), target);
  }
  
  // optional int32 page = 2;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100222::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 act_id = 1;
    if (has_act_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->act_id());
    }
    
    // optional int32 page = 2;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100222::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100222* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100222*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100222::MergeFrom(const Proto10100222& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_act_id()) {
      set_act_id(from.act_id());
    }
    if (from.has_page()) {
      set_page(from.page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100222::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100222::CopyFrom(const Proto10100222& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100222::IsInitialized() const {
  
  return true;
}

void Proto10100222::Swap(Proto10100222* other) {
  if (other != this) {
    std::swap(act_id_, other->act_id_);
    std::swap(page_, other->page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100222::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100222_descriptor_;
  metadata.reflection = Proto10100222_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100222::kFirstTypeFieldNumber;
const int Proto50100222::kSystemTickFieldNumber;
const int Proto50100222::kActInfoFieldNumber;
const int Proto50100222::kRankInfoFieldNumber;
const int Proto50100222::kMyRankFieldNumber;
const int Proto50100222::kCurPageFieldNumber;
const int Proto50100222::kTotalPageFieldNumber;
#endif  // !_MSC_VER

Proto50100222::Proto50100222()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100222::InitAsDefaultInstance() {
  act_info_ = const_cast< ::ProtoBackActInfo*>(&::ProtoBackActInfo::default_instance());
  my_rank_ = const_cast< ::ProtoRechargeRank*>(&::ProtoRechargeRank::default_instance());
}

Proto50100222::Proto50100222(const Proto50100222& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100222::SharedCtor() {
  _cached_size_ = 0;
  first_type_ = 0;
  system_tick_ = 0;
  act_info_ = NULL;
  my_rank_ = NULL;
  cur_page_ = 0;
  total_page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100222::~Proto50100222() {
  SharedDtor();
}

void Proto50100222::SharedDtor() {
  if (this != default_instance_) {
    delete act_info_;
    delete my_rank_;
  }
}

void Proto50100222::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100222::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100222_descriptor_;
}

const Proto50100222& Proto50100222::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto50100222* Proto50100222::default_instance_ = NULL;

Proto50100222* Proto50100222::New() const {
  return new Proto50100222;
}

void Proto50100222::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    first_type_ = 0;
    system_tick_ = 0;
    if (has_act_info()) {
      if (act_info_ != NULL) act_info_->::ProtoBackActInfo::Clear();
    }
    if (has_my_rank()) {
      if (my_rank_ != NULL) my_rank_->::ProtoRechargeRank::Clear();
    }
    cur_page_ = 0;
    total_page_ = 0;
  }
  rank_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100222::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 first_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_type_)));
          set_has_first_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_system_tick;
        break;
      }
      
      // optional int32 system_tick = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_system_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &system_tick_)));
          set_has_system_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_act_info;
        break;
      }
      
      // optional .ProtoBackActInfo act_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_act_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_rank_info;
        break;
      }
      
      // repeated .ProtoRechargeRank rank_info = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_rank_info;
        if (input->ExpectTag(42)) goto parse_my_rank;
        break;
      }
      
      // optional .ProtoRechargeRank my_rank = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_my_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_my_rank()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_cur_page;
        break;
      }
      
      // optional int32 cur_page = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cur_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cur_page_)));
          set_has_cur_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_total_page;
        break;
      }
      
      // optional int32 total_page = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100222::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 first_type = 1;
  if (has_first_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->first_type(), output);
  }
  
  // optional int32 system_tick = 2;
  if (has_system_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->system_tick(), output);
  }
  
  // optional .ProtoBackActInfo act_info = 3;
  if (has_act_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->act_info(), output);
  }
  
  // repeated .ProtoRechargeRank rank_info = 4;
  for (int i = 0; i < this->rank_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->rank_info(i), output);
  }
  
  // optional .ProtoRechargeRank my_rank = 5;
  if (has_my_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->my_rank(), output);
  }
  
  // optional int32 cur_page = 6;
  if (has_cur_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->cur_page(), output);
  }
  
  // optional int32 total_page = 7;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->total_page(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100222::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 first_type = 1;
  if (has_first_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->first_type(), target);
  }
  
  // optional int32 system_tick = 2;
  if (has_system_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->system_tick(), target);
  }
  
  // optional .ProtoBackActInfo act_info = 3;
  if (has_act_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->act_info(), target);
  }
  
  // repeated .ProtoRechargeRank rank_info = 4;
  for (int i = 0; i < this->rank_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->rank_info(i), target);
  }
  
  // optional .ProtoRechargeRank my_rank = 5;
  if (has_my_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->my_rank(), target);
  }
  
  // optional int32 cur_page = 6;
  if (has_cur_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->cur_page(), target);
  }
  
  // optional int32 total_page = 7;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->total_page(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100222::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 first_type = 1;
    if (has_first_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_type());
    }
    
    // optional int32 system_tick = 2;
    if (has_system_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->system_tick());
    }
    
    // optional .ProtoBackActInfo act_info = 3;
    if (has_act_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->act_info());
    }
    
    // optional .ProtoRechargeRank my_rank = 5;
    if (has_my_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->my_rank());
    }
    
    // optional int32 cur_page = 6;
    if (has_cur_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cur_page());
    }
    
    // optional int32 total_page = 7;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }
    
  }
  // repeated .ProtoRechargeRank rank_info = 4;
  total_size += 1 * this->rank_info_size();
  for (int i = 0; i < this->rank_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100222::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100222* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100222*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100222::MergeFrom(const Proto50100222& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_info_.MergeFrom(from.rank_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_first_type()) {
      set_first_type(from.first_type());
    }
    if (from.has_system_tick()) {
      set_system_tick(from.system_tick());
    }
    if (from.has_act_info()) {
      mutable_act_info()->::ProtoBackActInfo::MergeFrom(from.act_info());
    }
    if (from.has_my_rank()) {
      mutable_my_rank()->::ProtoRechargeRank::MergeFrom(from.my_rank());
    }
    if (from.has_cur_page()) {
      set_cur_page(from.cur_page());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100222::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100222::CopyFrom(const Proto50100222& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100222::IsInitialized() const {
  
  return true;
}

void Proto50100222::Swap(Proto50100222* other) {
  if (other != this) {
    std::swap(first_type_, other->first_type_);
    std::swap(system_tick_, other->system_tick_);
    std::swap(act_info_, other->act_info_);
    rank_info_.Swap(&other->rank_info_);
    std::swap(my_rank_, other->my_rank_);
    std::swap(cur_page_, other->cur_page_);
    std::swap(total_page_, other->total_page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100222::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100222_descriptor_;
  metadata.reflection = Proto50100222_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100251::kActListFieldNumber;
const int Proto50100251::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto50100251::Proto50100251()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100251::InitAsDefaultInstance() {
}

Proto50100251::Proto50100251(const Proto50100251& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100251::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100251::~Proto50100251() {
  SharedDtor();
}

void Proto50100251::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100251::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100251::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100251_descriptor_;
}

const Proto50100251& Proto50100251::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto50100251* Proto50100251::default_instance_ = NULL;

Proto50100251* Proto50100251::New() const {
  return new Proto50100251;
}

void Proto50100251::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    type_ = 0;
  }
  act_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100251::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 act_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_act_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_act_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_act_list;
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }
      
      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100251::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 act_list = 1;
  for (int i = 0; i < this->act_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->act_list(i), output);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100251::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 act_list = 1;
  for (int i = 0; i < this->act_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->act_list(i), target);
  }
  
  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100251::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  // repeated int32 act_list = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->act_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->act_list(i));
    }
    total_size += 1 * this->act_list_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100251::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100251* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100251*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100251::MergeFrom(const Proto50100251& from) {
  GOOGLE_CHECK_NE(&from, this);
  act_list_.MergeFrom(from.act_list_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100251::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100251::CopyFrom(const Proto50100251& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100251::IsInitialized() const {
  
  return true;
}

void Proto50100251::Swap(Proto50100251* other) {
  if (other != this) {
    act_list_.Swap(&other->act_list_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100251::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100251_descriptor_;
  metadata.reflection = Proto50100251_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100252::kIndexFieldNumber;
const int Proto50100252::kLeftTickFieldNumber;
const int Proto50100252::kNightTickFieldNumber;
const int Proto50100252::kNameFieldNumber;
const int Proto50100252::kTitleFieldNumber;
const int Proto50100252::kFirstTypeFieldNumber;
const int Proto50100252::kSecondTypeFieldNumber;
const int Proto50100252::kStartCondFieldNumber;
const int Proto50100252::kLimitValueFieldNumber;
const int Proto50100252::kRewardInfoFieldNumber;
const int Proto50100252::kOpenTimeFieldNumber;
const int Proto50100252::kActOpenTimesFieldNumber;
const int Proto50100252::kContinuityLoginDayFieldNumber;
const int Proto50100252::kSubValueFieldNumber;
const int Proto50100252::kSecondSubFieldNumber;
const int Proto50100252::kThirdSubFieldNumber;
const int Proto50100252::kRoleInfoFieldNumber;
const int Proto50100252::kAllRedInfoFieldNumber;
const int Proto50100252::kDailyCumulativeRechargeFieldNumber;
const int Proto50100252::kActFashionInfoFieldNumber;
const int Proto50100252::kTaskInfoFieldNumber;
const int Proto50100252::kRewardShowIdFieldNumber;
#endif  // !_MSC_VER

Proto50100252::Proto50100252()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100252::InitAsDefaultInstance() {
  limit_value_ = const_cast< ::ProtoLimitValue*>(&::ProtoLimitValue::default_instance());
  act_fashion_info_ = const_cast< ::ProtoMayFashionInfo*>(&::ProtoMayFashionInfo::default_instance());
}

Proto50100252::Proto50100252(const Proto50100252& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100252::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  left_tick_ = 0;
  night_tick_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  first_type_ = 0;
  second_type_ = 0;
  start_cond_ = 0;
  limit_value_ = NULL;
  continuity_login_day_ = 0;
  sub_value_ = 0;
  second_sub_ = 0;
  third_sub_ = 0;
  daily_cumulative_recharge_ = 0;
  act_fashion_info_ = NULL;
  reward_show_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100252::~Proto50100252() {
  SharedDtor();
}

void Proto50100252::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (this != default_instance_) {
    delete limit_value_;
    delete act_fashion_info_;
  }
}

void Proto50100252::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100252::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100252_descriptor_;
}

const Proto50100252& Proto50100252::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto50100252* Proto50100252::default_instance_ = NULL;

Proto50100252* Proto50100252::New() const {
  return new Proto50100252;
}

void Proto50100252::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    left_tick_ = 0;
    night_tick_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::kEmptyString) {
        title_->clear();
      }
    }
    first_type_ = 0;
    second_type_ = 0;
    start_cond_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_limit_value()) {
      if (limit_value_ != NULL) limit_value_->::ProtoLimitValue::Clear();
    }
    continuity_login_day_ = 0;
    sub_value_ = 0;
    second_sub_ = 0;
    third_sub_ = 0;
  }
  if (_has_bits_[18 / 32] & (0xffu << (18 % 32))) {
    daily_cumulative_recharge_ = 0;
    if (has_act_fashion_info()) {
      if (act_fashion_info_ != NULL) act_fashion_info_->::ProtoMayFashionInfo::Clear();
    }
    reward_show_id_ = 0;
  }
  reward_info_.Clear();
  open_time_.Clear();
  act_open_times_.Clear();
  role_info_.Clear();
  all_red_info_.Clear();
  task_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100252::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_left_tick;
        break;
      }
      
      // optional int32 left_tick = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_tick_)));
          set_has_left_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_night_tick;
        break;
      }
      
      // optional int32 night_tick = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_night_tick:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &night_tick_)));
          set_has_night_tick();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }
      
      // optional string name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_title;
        break;
      }
      
      // optional string title = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_first_type;
        break;
      }
      
      // optional int32 first_type = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_type_)));
          set_has_first_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_second_type;
        break;
      }
      
      // optional int32 second_type = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_type_)));
          set_has_second_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_start_cond;
        break;
      }
      
      // optional int32 start_cond = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_cond:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_cond_)));
          set_has_start_cond();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_limit_value;
        break;
      }
      
      // optional .ProtoLimitValue limit_value = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_limit_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_limit_value()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_reward_info;
        break;
      }
      
      // repeated .MayRewardInfo reward_info = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_reward_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reward_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_reward_info;
        if (input->ExpectTag(90)) goto parse_open_time;
        break;
      }
      
      // repeated .ActOpenLimitTime open_time = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_open_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_open_time()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_open_time;
        if (input->ExpectTag(96)) goto parse_act_open_times;
        break;
      }
      
      // repeated int32 act_open_times = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_act_open_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 96, input, this->mutable_act_open_times())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_act_open_times())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_act_open_times;
        if (input->ExpectTag(104)) goto parse_continuity_login_day;
        break;
      }
      
      // optional int32 continuity_login_day = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_continuity_login_day:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &continuity_login_day_)));
          set_has_continuity_login_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_sub_value;
        break;
      }
      
      // optional int32 sub_value = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sub_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sub_value_)));
          set_has_sub_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_second_sub;
        break;
      }
      
      // optional int32 second_sub = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_second_sub:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &second_sub_)));
          set_has_second_sub();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_third_sub;
        break;
      }
      
      // optional int32 third_sub = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_third_sub:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &third_sub_)));
          set_has_third_sub();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_role_info;
        break;
      }
      
      // repeated .ProtoRunRole role_info = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_role_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_role_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_role_info;
        if (input->ExpectTag(146)) goto parse_all_red_info;
        break;
      }
      
      // repeated .ProtoAllRedActInfo all_red_info = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_all_red_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_all_red_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_all_red_info;
        if (input->ExpectTag(152)) goto parse_daily_cumulative_recharge;
        break;
      }
      
      // optional int32 daily_cumulative_recharge = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_daily_cumulative_recharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &daily_cumulative_recharge_)));
          set_has_daily_cumulative_recharge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_act_fashion_info;
        break;
      }
      
      // optional .ProtoMayFashionInfo act_fashion_info = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_act_fashion_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_act_fashion_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_task_info;
        break;
      }
      
      // repeated .PActTastList task_info = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_task_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_task_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_task_info;
        if (input->ExpectTag(176)) goto parse_reward_show_id;
        break;
      }
      
      // optional int32 reward_show_id = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_show_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_show_id_)));
          set_has_reward_show_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100252::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional int32 left_tick = 2;
  if (has_left_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->left_tick(), output);
  }
  
  // optional int32 night_tick = 3;
  if (has_night_tick()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->night_tick(), output);
  }
  
  // optional string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->name(), output);
  }
  
  // optional string title = 5;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->title(), output);
  }
  
  // optional int32 first_type = 6;
  if (has_first_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->first_type(), output);
  }
  
  // optional int32 second_type = 7;
  if (has_second_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->second_type(), output);
  }
  
  // optional int32 start_cond = 8;
  if (has_start_cond()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->start_cond(), output);
  }
  
  // optional .ProtoLimitValue limit_value = 9;
  if (has_limit_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->limit_value(), output);
  }
  
  // repeated .MayRewardInfo reward_info = 10;
  for (int i = 0; i < this->reward_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->reward_info(i), output);
  }
  
  // repeated .ActOpenLimitTime open_time = 11;
  for (int i = 0; i < this->open_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->open_time(i), output);
  }
  
  // repeated int32 act_open_times = 12;
  for (int i = 0; i < this->act_open_times_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      12, this->act_open_times(i), output);
  }
  
  // optional int32 continuity_login_day = 13;
  if (has_continuity_login_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->continuity_login_day(), output);
  }
  
  // optional int32 sub_value = 14;
  if (has_sub_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->sub_value(), output);
  }
  
  // optional int32 second_sub = 15;
  if (has_second_sub()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->second_sub(), output);
  }
  
  // optional int32 third_sub = 16;
  if (has_third_sub()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->third_sub(), output);
  }
  
  // repeated .ProtoRunRole role_info = 17;
  for (int i = 0; i < this->role_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->role_info(i), output);
  }
  
  // repeated .ProtoAllRedActInfo all_red_info = 18;
  for (int i = 0; i < this->all_red_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->all_red_info(i), output);
  }
  
  // optional int32 daily_cumulative_recharge = 19;
  if (has_daily_cumulative_recharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->daily_cumulative_recharge(), output);
  }
  
  // optional .ProtoMayFashionInfo act_fashion_info = 20;
  if (has_act_fashion_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->act_fashion_info(), output);
  }
  
  // repeated .PActTastList task_info = 21;
  for (int i = 0; i < this->task_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->task_info(i), output);
  }
  
  // optional int32 reward_show_id = 22;
  if (has_reward_show_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->reward_show_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100252::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional int32 left_tick = 2;
  if (has_left_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->left_tick(), target);
  }
  
  // optional int32 night_tick = 3;
  if (has_night_tick()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->night_tick(), target);
  }
  
  // optional string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }
  
  // optional string title = 5;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->title(), target);
  }
  
  // optional int32 first_type = 6;
  if (has_first_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->first_type(), target);
  }
  
  // optional int32 second_type = 7;
  if (has_second_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->second_type(), target);
  }
  
  // optional int32 start_cond = 8;
  if (has_start_cond()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->start_cond(), target);
  }
  
  // optional .ProtoLimitValue limit_value = 9;
  if (has_limit_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->limit_value(), target);
  }
  
  // repeated .MayRewardInfo reward_info = 10;
  for (int i = 0; i < this->reward_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->reward_info(i), target);
  }
  
  // repeated .ActOpenLimitTime open_time = 11;
  for (int i = 0; i < this->open_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->open_time(i), target);
  }
  
  // repeated int32 act_open_times = 12;
  for (int i = 0; i < this->act_open_times_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(12, this->act_open_times(i), target);
  }
  
  // optional int32 continuity_login_day = 13;
  if (has_continuity_login_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->continuity_login_day(), target);
  }
  
  // optional int32 sub_value = 14;
  if (has_sub_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->sub_value(), target);
  }
  
  // optional int32 second_sub = 15;
  if (has_second_sub()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->second_sub(), target);
  }
  
  // optional int32 third_sub = 16;
  if (has_third_sub()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->third_sub(), target);
  }
  
  // repeated .ProtoRunRole role_info = 17;
  for (int i = 0; i < this->role_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->role_info(i), target);
  }
  
  // repeated .ProtoAllRedActInfo all_red_info = 18;
  for (int i = 0; i < this->all_red_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->all_red_info(i), target);
  }
  
  // optional int32 daily_cumulative_recharge = 19;
  if (has_daily_cumulative_recharge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->daily_cumulative_recharge(), target);
  }
  
  // optional .ProtoMayFashionInfo act_fashion_info = 20;
  if (has_act_fashion_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->act_fashion_info(), target);
  }
  
  // repeated .PActTastList task_info = 21;
  for (int i = 0; i < this->task_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->task_info(i), target);
  }
  
  // optional int32 reward_show_id = 22;
  if (has_reward_show_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->reward_show_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100252::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 left_tick = 2;
    if (has_left_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left_tick());
    }
    
    // optional int32 night_tick = 3;
    if (has_night_tick()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->night_tick());
    }
    
    // optional string name = 4;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // optional string title = 5;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }
    
    // optional int32 first_type = 6;
    if (has_first_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_type());
    }
    
    // optional int32 second_type = 7;
    if (has_second_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_type());
    }
    
    // optional int32 start_cond = 8;
    if (has_start_cond()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->start_cond());
    }
    
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional .ProtoLimitValue limit_value = 9;
    if (has_limit_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->limit_value());
    }
    
    // optional int32 continuity_login_day = 13;
    if (has_continuity_login_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->continuity_login_day());
    }
    
    // optional int32 sub_value = 14;
    if (has_sub_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sub_value());
    }
    
    // optional int32 second_sub = 15;
    if (has_second_sub()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->second_sub());
    }
    
    // optional int32 third_sub = 16;
    if (has_third_sub()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->third_sub());
    }
    
  }
  if (_has_bits_[18 / 32] & (0xffu << (18 % 32))) {
    // optional int32 daily_cumulative_recharge = 19;
    if (has_daily_cumulative_recharge()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->daily_cumulative_recharge());
    }
    
    // optional .ProtoMayFashionInfo act_fashion_info = 20;
    if (has_act_fashion_info()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->act_fashion_info());
    }
    
    // optional int32 reward_show_id = 22;
    if (has_reward_show_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_show_id());
    }
    
  }
  // repeated .MayRewardInfo reward_info = 10;
  total_size += 1 * this->reward_info_size();
  for (int i = 0; i < this->reward_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reward_info(i));
  }
  
  // repeated .ActOpenLimitTime open_time = 11;
  total_size += 1 * this->open_time_size();
  for (int i = 0; i < this->open_time_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->open_time(i));
  }
  
  // repeated int32 act_open_times = 12;
  {
    int data_size = 0;
    for (int i = 0; i < this->act_open_times_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->act_open_times(i));
    }
    total_size += 1 * this->act_open_times_size() + data_size;
  }
  
  // repeated .ProtoRunRole role_info = 17;
  total_size += 2 * this->role_info_size();
  for (int i = 0; i < this->role_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->role_info(i));
  }
  
  // repeated .ProtoAllRedActInfo all_red_info = 18;
  total_size += 2 * this->all_red_info_size();
  for (int i = 0; i < this->all_red_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->all_red_info(i));
  }
  
  // repeated .PActTastList task_info = 21;
  total_size += 2 * this->task_info_size();
  for (int i = 0; i < this->task_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->task_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100252::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100252* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100252*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100252::MergeFrom(const Proto50100252& from) {
  GOOGLE_CHECK_NE(&from, this);
  reward_info_.MergeFrom(from.reward_info_);
  open_time_.MergeFrom(from.open_time_);
  act_open_times_.MergeFrom(from.act_open_times_);
  role_info_.MergeFrom(from.role_info_);
  all_red_info_.MergeFrom(from.all_red_info_);
  task_info_.MergeFrom(from.task_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_left_tick()) {
      set_left_tick(from.left_tick());
    }
    if (from.has_night_tick()) {
      set_night_tick(from.night_tick());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_first_type()) {
      set_first_type(from.first_type());
    }
    if (from.has_second_type()) {
      set_second_type(from.second_type());
    }
    if (from.has_start_cond()) {
      set_start_cond(from.start_cond());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_limit_value()) {
      mutable_limit_value()->::ProtoLimitValue::MergeFrom(from.limit_value());
    }
    if (from.has_continuity_login_day()) {
      set_continuity_login_day(from.continuity_login_day());
    }
    if (from.has_sub_value()) {
      set_sub_value(from.sub_value());
    }
    if (from.has_second_sub()) {
      set_second_sub(from.second_sub());
    }
    if (from.has_third_sub()) {
      set_third_sub(from.third_sub());
    }
  }
  if (from._has_bits_[18 / 32] & (0xffu << (18 % 32))) {
    if (from.has_daily_cumulative_recharge()) {
      set_daily_cumulative_recharge(from.daily_cumulative_recharge());
    }
    if (from.has_act_fashion_info()) {
      mutable_act_fashion_info()->::ProtoMayFashionInfo::MergeFrom(from.act_fashion_info());
    }
    if (from.has_reward_show_id()) {
      set_reward_show_id(from.reward_show_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100252::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100252::CopyFrom(const Proto50100252& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100252::IsInitialized() const {
  
  return true;
}

void Proto50100252::Swap(Proto50100252* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(left_tick_, other->left_tick_);
    std::swap(night_tick_, other->night_tick_);
    std::swap(name_, other->name_);
    std::swap(title_, other->title_);
    std::swap(first_type_, other->first_type_);
    std::swap(second_type_, other->second_type_);
    std::swap(start_cond_, other->start_cond_);
    std::swap(limit_value_, other->limit_value_);
    reward_info_.Swap(&other->reward_info_);
    open_time_.Swap(&other->open_time_);
    act_open_times_.Swap(&other->act_open_times_);
    std::swap(continuity_login_day_, other->continuity_login_day_);
    std::swap(sub_value_, other->sub_value_);
    std::swap(second_sub_, other->second_sub_);
    std::swap(third_sub_, other->third_sub_);
    role_info_.Swap(&other->role_info_);
    all_red_info_.Swap(&other->all_red_info_);
    std::swap(daily_cumulative_recharge_, other->daily_cumulative_recharge_);
    std::swap(act_fashion_info_, other->act_fashion_info_);
    task_info_.Swap(&other->task_info_);
    std::swap(reward_show_id_, other->reward_show_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100252::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100252_descriptor_;
  metadata.reflection = Proto50100252_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100252::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100252::Proto10100252()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100252::InitAsDefaultInstance() {
}

Proto10100252::Proto10100252(const Proto10100252& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100252::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100252::~Proto10100252() {
  SharedDtor();
}

void Proto10100252::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100252::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100252::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100252_descriptor_;
}

const Proto10100252& Proto10100252::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10100252* Proto10100252::default_instance_ = NULL;

Proto10100252* Proto10100252::New() const {
  return new Proto10100252;
}

void Proto10100252::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100252::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100252::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100252::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100252::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100252::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100252* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100252*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100252::MergeFrom(const Proto10100252& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100252::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100252::CopyFrom(const Proto10100252& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100252::IsInitialized() const {
  
  return true;
}

void Proto10100252::Swap(Proto10100252* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100252::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100252_descriptor_;
  metadata.reflection = Proto10100252_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100253::kIndexFieldNumber;
const int Proto10100253::kRewardIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100253::Proto10100253()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100253::InitAsDefaultInstance() {
}

Proto10100253::Proto10100253(const Proto10100253& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100253::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  reward_index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100253::~Proto10100253() {
  SharedDtor();
}

void Proto10100253::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100253::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100253::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100253_descriptor_;
}

const Proto10100253& Proto10100253::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10100253* Proto10100253::default_instance_ = NULL;

Proto10100253* Proto10100253::New() const {
  return new Proto10100253;
}

void Proto10100253::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    reward_index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100253::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_reward_index;
        break;
      }
      
      // optional int32 reward_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reward_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reward_index_)));
          set_has_reward_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100253::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional int32 reward_index = 2;
  if (has_reward_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->reward_index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100253::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional int32 reward_index = 2;
  if (has_reward_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->reward_index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100253::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 reward_index = 2;
    if (has_reward_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reward_index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100253::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100253* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100253*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100253::MergeFrom(const Proto10100253& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_reward_index()) {
      set_reward_index(from.reward_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100253::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100253::CopyFrom(const Proto10100253& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100253::IsInitialized() const {
  
  return true;
}

void Proto10100253::Swap(Proto10100253* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(reward_index_, other->reward_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100253::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100253_descriptor_;
  metadata.reflection = Proto10100253_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100253::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto50100253::Proto50100253()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100253::InitAsDefaultInstance() {
}

Proto50100253::Proto50100253(const Proto50100253& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100253::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100253::~Proto50100253() {
  SharedDtor();
}

void Proto50100253::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100253::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100253::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100253_descriptor_;
}

const Proto50100253& Proto50100253::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto50100253* Proto50100253::default_instance_ = NULL;

Proto50100253* Proto50100253::New() const {
  return new Proto50100253;
}

void Proto50100253::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100253::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100253::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100253::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100253::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100253::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100253* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100253*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100253::MergeFrom(const Proto50100253& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100253::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100253::CopyFrom(const Proto50100253& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100253::IsInitialized() const {
  
  return true;
}

void Proto50100253::Swap(Proto50100253* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100253::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100253_descriptor_;
  metadata.reflection = Proto50100253_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100254::kIndexFieldNumber;
const int Proto10100254::kBuyIndexFieldNumber;
const int Proto10100254::kAmountFieldNumber;
#endif  // !_MSC_VER

Proto10100254::Proto10100254()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100254::InitAsDefaultInstance() {
}

Proto10100254::Proto10100254(const Proto10100254& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100254::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  buy_index_ = 0;
  amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100254::~Proto10100254() {
  SharedDtor();
}

void Proto10100254::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100254::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100254::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100254_descriptor_;
}

const Proto10100254& Proto10100254::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10100254* Proto10100254::default_instance_ = NULL;

Proto10100254* Proto10100254::New() const {
  return new Proto10100254;
}

void Proto10100254::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    buy_index_ = 0;
    amount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100254::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_buy_index;
        break;
      }
      
      // optional int32 buy_index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buy_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &buy_index_)));
          set_has_buy_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_amount;
        break;
      }
      
      // optional int32 amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &amount_)));
          set_has_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100254::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  // optional int32 buy_index = 2;
  if (has_buy_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->buy_index(), output);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->amount(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100254::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  // optional int32 buy_index = 2;
  if (has_buy_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->buy_index(), target);
  }
  
  // optional int32 amount = 3;
  if (has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->amount(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100254::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
    // optional int32 buy_index = 2;
    if (has_buy_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->buy_index());
    }
    
    // optional int32 amount = 3;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->amount());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100254::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100254* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100254*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100254::MergeFrom(const Proto10100254& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_buy_index()) {
      set_buy_index(from.buy_index());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100254::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100254::CopyFrom(const Proto10100254& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100254::IsInitialized() const {
  
  return true;
}

void Proto10100254::Swap(Proto10100254* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(buy_index_, other->buy_index_);
    std::swap(amount_, other->amount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100254::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100254_descriptor_;
  metadata.reflection = Proto10100254_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100254::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto50100254::Proto50100254()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100254::InitAsDefaultInstance() {
}

Proto50100254::Proto50100254(const Proto50100254& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100254::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100254::~Proto50100254() {
  SharedDtor();
}

void Proto50100254::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100254::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100254::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100254_descriptor_;
}

const Proto50100254& Proto50100254::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto50100254* Proto50100254::default_instance_ = NULL;

Proto50100254* Proto50100254::New() const {
  return new Proto50100254;
}

void Proto50100254::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100254::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100254::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100254::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100254::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100254::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100254* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100254*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100254::MergeFrom(const Proto50100254& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100254::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100254::CopyFrom(const Proto50100254& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100254::IsInitialized() const {
  
  return true;
}

void Proto50100254::Swap(Proto50100254* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100254::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100254_descriptor_;
  metadata.reflection = Proto50100254_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100255::kRedPacketMoneyFieldNumber;
const int Proto50100255::kPersonCountFieldNumber;
#endif  // !_MSC_VER

Proto50100255::Proto50100255()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100255::InitAsDefaultInstance() {
}

Proto50100255::Proto50100255(const Proto50100255& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100255::SharedCtor() {
  _cached_size_ = 0;
  red_packet_money_ = 0;
  person_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100255::~Proto50100255() {
  SharedDtor();
}

void Proto50100255::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100255::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100255::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100255_descriptor_;
}

const Proto50100255& Proto50100255::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto50100255* Proto50100255::default_instance_ = NULL;

Proto50100255* Proto50100255::New() const {
  return new Proto50100255;
}

void Proto50100255::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    red_packet_money_ = 0;
    person_count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100255::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 red_packet_money = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &red_packet_money_)));
          set_has_red_packet_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_person_count;
        break;
      }
      
      // optional int32 person_count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_person_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &person_count_)));
          set_has_person_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100255::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 red_packet_money = 1;
  if (has_red_packet_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->red_packet_money(), output);
  }
  
  // optional int32 person_count = 2;
  if (has_person_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->person_count(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100255::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 red_packet_money = 1;
  if (has_red_packet_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->red_packet_money(), target);
  }
  
  // optional int32 person_count = 2;
  if (has_person_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->person_count(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100255::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 red_packet_money = 1;
    if (has_red_packet_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->red_packet_money());
    }
    
    // optional int32 person_count = 2;
    if (has_person_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->person_count());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100255::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100255* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100255*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100255::MergeFrom(const Proto50100255& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_red_packet_money()) {
      set_red_packet_money(from.red_packet_money());
    }
    if (from.has_person_count()) {
      set_person_count(from.person_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100255::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100255::CopyFrom(const Proto50100255& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100255::IsInitialized() const {
  
  return true;
}

void Proto50100255::Swap(Proto50100255* other) {
  if (other != this) {
    std::swap(red_packet_money_, other->red_packet_money_);
    std::swap(person_count_, other->person_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100255::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100255_descriptor_;
  metadata.reflection = Proto50100255_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100255::kActivityIdFieldNumber;
const int Proto10100255::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100255::Proto10100255()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100255::InitAsDefaultInstance() {
}

Proto10100255::Proto10100255(const Proto10100255& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100255::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100255::~Proto10100255() {
  SharedDtor();
}

void Proto10100255::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100255::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100255::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100255_descriptor_;
}

const Proto10100255& Proto10100255::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10100255* Proto10100255::default_instance_ = NULL;

Proto10100255* Proto10100255::New() const {
  return new Proto10100255;
}

void Proto10100255::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100255::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }
      
      // optional int32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100255::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100255::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100255::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100255::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100255* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100255*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100255::MergeFrom(const Proto10100255& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100255::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100255::CopyFrom(const Proto10100255& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100255::IsInitialized() const {
  
  return true;
}

void Proto10100255::Swap(Proto10100255* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100255::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100255_descriptor_;
  metadata.reflection = Proto10100255_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100256::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100256::Proto10100256()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100256::InitAsDefaultInstance() {
}

Proto10100256::Proto10100256(const Proto10100256& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100256::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100256::~Proto10100256() {
  SharedDtor();
}

void Proto10100256::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100256::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100256::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100256_descriptor_;
}

const Proto10100256& Proto10100256::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10100256* Proto10100256::default_instance_ = NULL;

Proto10100256* Proto10100256::New() const {
  return new Proto10100256;
}

void Proto10100256::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100256::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100256::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100256::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100256::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100256::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100256* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100256*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100256::MergeFrom(const Proto10100256& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100256::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100256::CopyFrom(const Proto10100256& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100256::IsInitialized() const {
  
  return true;
}

void Proto10100256::Swap(Proto10100256* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100256::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100256_descriptor_;
  metadata.reflection = Proto10100256_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100256::kRedPacketInfoFieldNumber;
const int Proto50100256::kRedPacketMaxFieldNumber;
const int Proto50100256::kBingMoneyFieldNumber;
const int Proto50100256::kSelfMoneyFieldNumber;
#endif  // !_MSC_VER

Proto50100256::Proto50100256()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100256::InitAsDefaultInstance() {
}

Proto50100256::Proto50100256(const Proto50100256& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100256::SharedCtor() {
  _cached_size_ = 0;
  red_packet_max_ = 0;
  bing_money_ = 0;
  self_money_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100256::~Proto50100256() {
  SharedDtor();
}

void Proto50100256::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100256::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100256::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100256_descriptor_;
}

const Proto50100256& Proto50100256::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto50100256* Proto50100256::default_instance_ = NULL;

Proto50100256* Proto50100256::New() const {
  return new Proto50100256;
}

void Proto50100256::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    red_packet_max_ = 0;
    bing_money_ = 0;
    self_money_ = 0;
  }
  red_packet_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100256::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoRedPacketInfo red_packet_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_red_packet_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_red_packet_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_red_packet_info;
        if (input->ExpectTag(16)) goto parse_red_packet_max;
        break;
      }
      
      // optional int32 red_packet_max = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_red_packet_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &red_packet_max_)));
          set_has_red_packet_max();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_bing_money;
        break;
      }
      
      // optional int32 bing_money = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bing_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bing_money_)));
          set_has_bing_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_self_money;
        break;
      }
      
      // optional int32 self_money = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_self_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &self_money_)));
          set_has_self_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100256::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoRedPacketInfo red_packet_info = 1;
  for (int i = 0; i < this->red_packet_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->red_packet_info(i), output);
  }
  
  // optional int32 red_packet_max = 2;
  if (has_red_packet_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->red_packet_max(), output);
  }
  
  // optional int32 bing_money = 3;
  if (has_bing_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->bing_money(), output);
  }
  
  // optional int32 self_money = 4;
  if (has_self_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->self_money(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100256::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoRedPacketInfo red_packet_info = 1;
  for (int i = 0; i < this->red_packet_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->red_packet_info(i), target);
  }
  
  // optional int32 red_packet_max = 2;
  if (has_red_packet_max()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->red_packet_max(), target);
  }
  
  // optional int32 bing_money = 3;
  if (has_bing_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->bing_money(), target);
  }
  
  // optional int32 self_money = 4;
  if (has_self_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->self_money(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100256::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 red_packet_max = 2;
    if (has_red_packet_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->red_packet_max());
    }
    
    // optional int32 bing_money = 3;
    if (has_bing_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bing_money());
    }
    
    // optional int32 self_money = 4;
    if (has_self_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->self_money());
    }
    
  }
  // repeated .ProtoRedPacketInfo red_packet_info = 1;
  total_size += 1 * this->red_packet_info_size();
  for (int i = 0; i < this->red_packet_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->red_packet_info(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100256::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100256* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100256*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100256::MergeFrom(const Proto50100256& from) {
  GOOGLE_CHECK_NE(&from, this);
  red_packet_info_.MergeFrom(from.red_packet_info_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_red_packet_max()) {
      set_red_packet_max(from.red_packet_max());
    }
    if (from.has_bing_money()) {
      set_bing_money(from.bing_money());
    }
    if (from.has_self_money()) {
      set_self_money(from.self_money());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100256::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100256::CopyFrom(const Proto50100256& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100256::IsInitialized() const {
  
  return true;
}

void Proto50100256::Swap(Proto50100256* other) {
  if (other != this) {
    red_packet_info_.Swap(&other->red_packet_info_);
    std::swap(red_packet_max_, other->red_packet_max_);
    std::swap(bing_money_, other->bing_money_);
    std::swap(self_money_, other->self_money_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100256::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100256_descriptor_;
  metadata.reflection = Proto50100256_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100257::kActivityIdFieldNumber;
#endif  // !_MSC_VER

Proto10100257::Proto10100257()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100257::InitAsDefaultInstance() {
}

Proto10100257::Proto10100257(const Proto10100257& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100257::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100257::~Proto10100257() {
  SharedDtor();
}

void Proto10100257::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100257::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100257::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100257_descriptor_;
}

const Proto10100257& Proto10100257::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10100257* Proto10100257::default_instance_ = NULL;

Proto10100257* Proto10100257::New() const {
  return new Proto10100257;
}

void Proto10100257::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100257::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100257::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100257::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100257::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100257::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100257* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100257*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100257::MergeFrom(const Proto10100257& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100257::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100257::CopyFrom(const Proto10100257& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100257::IsInitialized() const {
  
  return true;
}

void Proto10100257::Swap(Proto10100257* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100257::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100257_descriptor_;
  metadata.reflection = Proto10100257_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100258::kTypeFieldNumber;
#endif  // !_MSC_VER

Proto10100258::Proto10100258()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100258::InitAsDefaultInstance() {
}

Proto10100258::Proto10100258(const Proto10100258& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100258::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100258::~Proto10100258() {
  SharedDtor();
}

void Proto10100258::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100258::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100258::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100258_descriptor_;
}

const Proto10100258& Proto10100258::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10100258* Proto10100258::default_instance_ = NULL;

Proto10100258* Proto10100258::New() const {
  return new Proto10100258;
}

void Proto10100258::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100258::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100258::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100258::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100258::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100258::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100258* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100258*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100258::MergeFrom(const Proto10100258& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100258::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100258::CopyFrom(const Proto10100258& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100258::IsInitialized() const {
  
  return true;
}

void Proto10100258::Swap(Proto10100258* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100258::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100258_descriptor_;
  metadata.reflection = Proto10100258_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100257::kLoginRewardFieldNumber;
const int Proto50100257::kContinuityLoginRewardFieldNumber;
const int Proto50100257::kContinuityLoginDayFieldNumber;
#endif  // !_MSC_VER

Proto50100257::Proto50100257()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100257::InitAsDefaultInstance() {
}

Proto50100257::Proto50100257(const Proto50100257& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100257::SharedCtor() {
  _cached_size_ = 0;
  login_reward_ = 0;
  continuity_login_reward_ = 0;
  continuity_login_day_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100257::~Proto50100257() {
  SharedDtor();
}

void Proto50100257::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100257::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100257::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100257_descriptor_;
}

const Proto50100257& Proto50100257::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto50100257* Proto50100257::default_instance_ = NULL;

Proto50100257* Proto50100257::New() const {
  return new Proto50100257;
}

void Proto50100257::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    login_reward_ = 0;
    continuity_login_reward_ = 0;
    continuity_login_day_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100257::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 login_reward = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &login_reward_)));
          set_has_login_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_continuity_login_reward;
        break;
      }
      
      // required int32 continuity_login_reward = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_continuity_login_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &continuity_login_reward_)));
          set_has_continuity_login_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_continuity_login_day;
        break;
      }
      
      // required int32 continuity_login_day = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_continuity_login_day:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &continuity_login_day_)));
          set_has_continuity_login_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100257::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 login_reward = 1;
  if (has_login_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->login_reward(), output);
  }
  
  // required int32 continuity_login_reward = 2;
  if (has_continuity_login_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->continuity_login_reward(), output);
  }
  
  // required int32 continuity_login_day = 3;
  if (has_continuity_login_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->continuity_login_day(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100257::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 login_reward = 1;
  if (has_login_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->login_reward(), target);
  }
  
  // required int32 continuity_login_reward = 2;
  if (has_continuity_login_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->continuity_login_reward(), target);
  }
  
  // required int32 continuity_login_day = 3;
  if (has_continuity_login_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->continuity_login_day(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100257::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 login_reward = 1;
    if (has_login_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->login_reward());
    }
    
    // required int32 continuity_login_reward = 2;
    if (has_continuity_login_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->continuity_login_reward());
    }
    
    // required int32 continuity_login_day = 3;
    if (has_continuity_login_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->continuity_login_day());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100257::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100257* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100257*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100257::MergeFrom(const Proto50100257& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_login_reward()) {
      set_login_reward(from.login_reward());
    }
    if (from.has_continuity_login_reward()) {
      set_continuity_login_reward(from.continuity_login_reward());
    }
    if (from.has_continuity_login_day()) {
      set_continuity_login_day(from.continuity_login_day());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100257::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100257::CopyFrom(const Proto50100257& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100257::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void Proto50100257::Swap(Proto50100257* other) {
  if (other != this) {
    std::swap(login_reward_, other->login_reward_);
    std::swap(continuity_login_reward_, other->continuity_login_reward_);
    std::swap(continuity_login_day_, other->continuity_login_day_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100257::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100257_descriptor_;
  metadata.reflection = Proto50100257_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto50100258::kLoginRewardFieldNumber;
const int Proto50100258::kContinuityLoginRewardFieldNumber;
#endif  // !_MSC_VER

Proto50100258::Proto50100258()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto50100258::InitAsDefaultInstance() {
}

Proto50100258::Proto50100258(const Proto50100258& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto50100258::SharedCtor() {
  _cached_size_ = 0;
  login_reward_ = 0;
  continuity_login_reward_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto50100258::~Proto50100258() {
  SharedDtor();
}

void Proto50100258::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto50100258::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto50100258::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto50100258_descriptor_;
}

const Proto50100258& Proto50100258::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto50100258* Proto50100258::default_instance_ = NULL;

Proto50100258* Proto50100258::New() const {
  return new Proto50100258;
}

void Proto50100258::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    login_reward_ = 0;
    continuity_login_reward_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto50100258::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 login_reward = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &login_reward_)));
          set_has_login_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_continuity_login_reward;
        break;
      }
      
      // required int32 continuity_login_reward = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_continuity_login_reward:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &continuity_login_reward_)));
          set_has_continuity_login_reward();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto50100258::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 login_reward = 1;
  if (has_login_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->login_reward(), output);
  }
  
  // required int32 continuity_login_reward = 2;
  if (has_continuity_login_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->continuity_login_reward(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto50100258::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 login_reward = 1;
  if (has_login_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->login_reward(), target);
  }
  
  // required int32 continuity_login_reward = 2;
  if (has_continuity_login_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->continuity_login_reward(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto50100258::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 login_reward = 1;
    if (has_login_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->login_reward());
    }
    
    // required int32 continuity_login_reward = 2;
    if (has_continuity_login_reward()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->continuity_login_reward());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto50100258::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto50100258* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto50100258*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto50100258::MergeFrom(const Proto50100258& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_login_reward()) {
      set_login_reward(from.login_reward());
    }
    if (from.has_continuity_login_reward()) {
      set_continuity_login_reward(from.continuity_login_reward());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto50100258::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto50100258::CopyFrom(const Proto50100258& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto50100258::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void Proto50100258::Swap(Proto50100258* other) {
  if (other != this) {
    std::swap(login_reward_, other->login_reward_);
    std::swap(continuity_login_reward_, other->continuity_login_reward_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto50100258::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto50100258_descriptor_;
  metadata.reflection = Proto50100258_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Proto10100259::kActivityIdFieldNumber;
const int Proto10100259::kIndexFieldNumber;
#endif  // !_MSC_VER

Proto10100259::Proto10100259()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Proto10100259::InitAsDefaultInstance() {
}

Proto10100259::Proto10100259(const Proto10100259& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Proto10100259::SharedCtor() {
  _cached_size_ = 0;
  activity_id_ = 0;
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Proto10100259::~Proto10100259() {
  SharedDtor();
}

void Proto10100259::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Proto10100259::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Proto10100259::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Proto10100259_descriptor_;
}

const Proto10100259& Proto10100259::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ProtoClient021_2eproto();  return *default_instance_;
}

Proto10100259* Proto10100259::default_instance_ = NULL;

Proto10100259* Proto10100259::New() const {
  return new Proto10100259;
}

void Proto10100259::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    activity_id_ = 0;
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Proto10100259::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 activity_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_id_)));
          set_has_activity_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }
      
      // optional int32 index = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Proto10100259::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->activity_id(), output);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Proto10100259::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 activity_id = 1;
  if (has_activity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->activity_id(), target);
  }
  
  // optional int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Proto10100259::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 activity_id = 1;
    if (has_activity_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity_id());
    }
    
    // optional int32 index = 2;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Proto10100259::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Proto10100259* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Proto10100259*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Proto10100259::MergeFrom(const Proto10100259& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activity_id()) {
      set_activity_id(from.activity_id());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Proto10100259::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Proto10100259::CopyFrom(const Proto10100259& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Proto10100259::IsInitialized() const {
  
  return true;
}

void Proto10100259::Swap(Proto10100259* other) {
  if (other != this) {
    std::swap(activity_id_, other->activity_id_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Proto10100259::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Proto10100259_descriptor_;
  metadata.reflection = Proto10100259_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
